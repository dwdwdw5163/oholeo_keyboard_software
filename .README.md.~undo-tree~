(undo-tree-save-format-version . 1)
"b023988d75492d2759f1072b189b457adaccf8b0"
[nil nil nil nil (25945 44247 913239 0) 0 nil]
([nil nil ((#("# Tauri + Leptos

This template should help get you started developing with Tauri and Leptos.

## Recommended IDE Setup

[VS Code](https://code.visualstudio.com/) + [Tauri](https://marketplace.visualstudio.com/items?itemName=tauri-apps.tauri-vscode) + [rust-analyzer](https://marketplace.visualstudio.com/items?itemName=rust-lang.rust-analyzer)." 0 2 (face markdown-header-delimiter-face fontified t markdown-heading-1-atx (1 17 nil nil nil nil nil nil 1 3 3 17 17 17 #<buffer README.md>) markdown-heading (1 17 nil nil nil nil nil nil 1 3 3 17 17 17 #<buffer README.md>)) 2 16 (face markdown-header-face-1 fontified t markdown-heading-1-atx (1 17 nil nil nil nil nil nil 1 3 3 17 17 17 #<buffer README.md>) markdown-heading (1 17 nil nil nil nil nil nil 1 3 3 17 17 17 #<buffer README.md>)) 16 17 (font-lock-multiline t fontified t) 17 95 (fontified t) 95 98 (face markdown-header-delimiter-face fontified t markdown-heading-2-atx (96 120 nil nil nil nil nil nil 96 99 99 120 120 120 #<buffer README.md>) markdown-heading (96 120 nil nil nil nil nil nil 96 99 99 120 120 120 #<buffer README.md>)) 98 119 (face markdown-header-face-2 fontified t markdown-heading-2-atx (96 120 nil nil nil nil nil nil 96 99 99 120 120 120 #<buffer README.md>) markdown-heading (96 120 nil nil nil nil nil nil 96 99 99 120 120 120 #<buffer README.md>)) 119 120 (font-lock-multiline t fontified t) 120 121 (fontified t) 121 122 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t) 122 129 (face markdown-link-face help-echo "https://code.visualstudio.com/" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t) 129 130 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t) 130 131 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t) 131 161 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t) 161 162 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t) 162 165 (fontified t) 165 166 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t) 166 171 (face markdown-link-face help-echo "https://marketplace.visualstudio.com/items?itemName=tauri-apps.tauri-vscode" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t) 171 172 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t) 172 173 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t) 173 248 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t) 248 249 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t) 249 252 (fontified t) 252 253 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t) 253 266 (face markdown-link-face help-echo "https://marketplace.visualstudio.com/items?itemName=rust-lang.rust-analyzer" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t) 266 267 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t) 267 268 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t) 268 343 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t) 343 344 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t) 344 345 (fontified t)) . 1) (undo-tree-id101 . -345) (undo-tree-id102 . -17) (undo-tree-id103 . -10) (undo-tree-id104 . -17) (undo-tree-id105 . -17) (undo-tree-id106 . -17) (undo-tree-id107 . -17) (undo-tree-id108 . -17) (undo-tree-id109 . -17) (undo-tree-id110 . -16) (undo-tree-id111 . -16) (undo-tree-id112 . -16) (undo-tree-id113 . -16) (undo-tree-id114 . -16) (undo-tree-id115 . -16) (undo-tree-id116 . -17) (undo-tree-id117 . -34) (undo-tree-id118 . -17) (undo-tree-id119 . -34) (undo-tree-id120 . -17) (undo-tree-id121 . -34) (undo-tree-id122 . -16) (undo-tree-id123 . -16) (undo-tree-id124 . -16) (undo-tree-id125 . -16) (undo-tree-id126 . -16) (undo-tree-id127 . -16) (undo-tree-id128 . -17) (undo-tree-id129 . -34) (undo-tree-id130 . -94) (undo-tree-id131 . -111) (undo-tree-id132 . -120) (undo-tree-id133 . -137) (undo-tree-id134 . -313) (undo-tree-id135 . -313) (undo-tree-id136 . -137) (undo-tree-id137 . -120) (undo-tree-id138 . -111) (undo-tree-id139 . -94) (undo-tree-id140 . -34) (undo-tree-id141 . -17) (undo-tree-id142 . -16) (undo-tree-id143 . -345) (undo-tree-id144 . -345) (undo-tree-id145 . -345) (undo-tree-id146 . -168) (undo-tree-id147 . -166) (undo-tree-id148 . -165) (undo-tree-id149 . -163) (undo-tree-id150 . -120) (undo-tree-id151 . -119) (undo-tree-id152 . -94) (undo-tree-id153 . -44) (undo-tree-id154 . -43) (undo-tree-id155 . -42) (undo-tree-id156 . -40) (undo-tree-id157 . -17) (undo-tree-id158 . -16) (undo-tree-id159 . -15) (undo-tree-id160 . -14) (undo-tree-id161 . -13) (undo-tree-id162 . -11) (undo-tree-id163 . -345) (undo-tree-id164 . -345) (t 25910 10462 0 0)) nil (25945 44247 913236 0) 0 nil])
([nil nil ((1 . 9)) nil (25945 44247 913166 0) 0 nil])
([nil nil ((#("h" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (1 5 nil nil nil nil nil nil 1 3 3 5 5 5 #<buffer README.md>) markdown-heading (1 5 nil nil nil nil nil nil 1 3 3 5 5 5 #<buffer README.md>) fontified t)) . -4) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("o" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (1 6 nil nil nil nil nil nil 1 3 3 6 6 6 #<buffer README.md>) markdown-heading (1 6 nil nil nil nil nil nil 1 3 3 6 6 6 #<buffer README.md>) fontified t)) . -5) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("l" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (1 7 nil nil nil nil nil nil 1 3 3 7 7 7 #<buffer README.md>) markdown-heading (1 7 nil nil nil nil nil nil 1 3 3 7 7 7 #<buffer README.md>) fontified t)) . -6) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (#("e" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (1 8 nil nil nil nil nil nil 1 3 3 8 8 8 #<buffer README.md>) markdown-heading (1 8 nil nil nil nil nil nil 1 3 3 8 8 8 #<buffer README.md>) fontified t)) . -7) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("O" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (1 9 nil nil nil nil nil nil 1 3 3 9 9 9 #<buffer README.md>) markdown-heading (1 9 nil nil nil nil nil nil 1 3 3 9 9 9 #<buffer README.md>) fontified t)) . -8) (undo-tree-id99 . -1) (undo-tree-id100 . -1) 9) nil (25945 44247 913163 0) 0 nil])
([nil nil ((4 . 9)) nil (25945 44247 913128 0) 0 nil])
([nil nil ((#("O" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (1 9 nil nil nil nil nil nil 1 3 3 9 9 9 #<buffer README.md>) markdown-heading (1 9 nil nil nil nil nil nil 1 3 3 9 9 9 #<buffer README.md>) fontified t)) . -8) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 9) nil (25945 44247 913127 0) 0 nil])
([nil nil ((8 . 13)) nil (25945 44247 913124 0) 0 nil])
([nil nil ((#("k" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (1 11 nil nil nil nil nil nil 1 3 3 11 11 11 #<buffer README.md>) markdown-heading (1 11 nil nil nil nil nil nil 1 3 3 11 11 11 #<buffer README.md>) fontified t)) . -10) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("e" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (1 12 nil nil nil nil nil nil 1 3 3 12 12 12 #<buffer README.md>) markdown-heading (1 12 nil nil nil nil nil nil 1 3 3 12 12 12 #<buffer README.md>) fontified t)) . -11) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("h" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (1 13 nil nil nil nil nil nil 1 3 3 13 13 13 #<buffer README.md>) markdown-heading (1 13 nil nil nil nil nil nil 1 3 3 13 13 13 #<buffer README.md>) fontified t)) . -12) (undo-tree-id67 . -1) (undo-tree-id68 . -1) 13) nil (25945 44247 913122 0) 0 nil])
([nil nil ((10 . 18)) nil (25945 44247 913102 0) 0 nil])
([nil nil ((18 . 20)) nil (25945 44247 913101 0) 0 nil])
([nil nil ((20 . 23)) nil (25945 44247 913101 0) 0 nil])
([nil nil ((18 . 20)) nil (25945 44247 913099 0) 0 nil])
([nil nil ((20 . 21)) nil (25945 44247 913098 0) 0 nil])
([nil nil ((26 . 28)) nil (25945 44247 913097 0) 0 nil])
([nil nil ((#("a" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (23 28 nil nil nil nil nil nil 23 26 26 28 28 28 #<buffer README.md>) markdown-heading (23 28 nil nil nil nil nil nil 23 26 26 28 28 28 #<buffer README.md>) fontified t)) . -27) (undo-tree-id55 . -1) (undo-tree-id56 . -1) 28) nil (25945 44247 913096 0) 0 nil])
([nil nil ((27 . 33)) nil (25945 44247 913093 0) 0 nil])
([nil nil ((33 . 34)) nil (25945 44247 913092 0) 0 nil])
([nil nil ((34 . 41)) nil (25945 44247 913090 0) 0 nil])
([nil nil ((41 . 43)) nil (25945 44247 913089 0) 0 nil])
([nil nil ((43 . 46)) nil (25945 44247 913089 0) 0 nil])
([nil nil ((42 . 43)) nil (25945 44247 913088 0) 0 nil])
([nil nil ((#("r" 0 1 (face (markdown-language-keyword-face markdown-code-face) invisible markdown-markup markdown-gfm-block-begin (34 38 34 37 37 37 37 38 nil nil 38 38 #<buffer README.md>) fontified t)) . -37) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("u" 0 1 (face (markdown-language-keyword-face markdown-code-face) invisible markdown-markup markdown-gfm-block-begin (34 39 34 37 37 37 37 39 nil nil 39 39 #<buffer README.md>) fontified t)) . -38) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("s" 0 1 (face (markdown-language-keyword-face markdown-code-face) invisible markdown-markup markdown-gfm-block-begin (34 40 34 37 37 37 37 40 nil nil 40 40 #<buffer README.md>) fontified t)) . -39) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("t" 0 1 (face (markdown-language-keyword-face markdown-code-face) invisible markdown-markup markdown-gfm-block-begin (34 41 34 37 37 37 37 41 nil nil 41 41 #<buffer README.md>) fontified t)) . -40) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 41) nil (25945 44247 913085 0) 0 nil])
([nil nil ((#("	" 0 1 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (38 40) fontified t)) . -38) (undo-tree-id25 . -1)) nil (25945 44247 913056 0) 0 nil])
([nil nil ((38 . 39)) nil (25945 44247 913054 0) 0 nil])
([nil nil ((39 . 43)) nil (25945 44247 913053 0) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (38 41) fontified t)) . -39) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("a" 0 1 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (38 42) fontified t)) . -40) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("r" 0 1 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (38 43) fontified t)) . -41) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("o" 0 1 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (38 44) fontified t)) . -42) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 43) nil (25945 44247 913050 0) 0 nil])
([nil nil ((22 . 24)) nil (25945 44247 913029 0) 0 nil])
([nil nil ((23 . 26)) nil (25945 44247 913029 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 38 . 39) (nil fontified nil 26 . 39) (26 . 39)) nil (25945 44247 913027 0) 0 nil])
([nil nil ((39 . 41)) nil (25945 44247 913026 0) 0 nil])
([nil nil ((41 . 42)) nil (25945 44247 913025 0) 0 nil])
([nil nil ((42 . 43)) nil (25945 44247 913024 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 55 . 56) (nil fontified nil 43 . 56) (43 . 56)) nil (25945 44247 913023 0) 0 nil])
([nil nil ((#("	Prerequisites" 0 1 (fontified t) 1 13 (fontified t) 13 14 (fontified t)) . 42) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -14) (undo-tree-id4 . -14)) nil (25945 44247 913021 0) 0 nil])
([nil nil ((42 . 46)) nil (25945 44247 912999 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 102 . 103) (nil fontified nil 46 . 103) (46 . 103)) nil (25945 44247 912995 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 175 . 176) (nil fontified nil 121 . 176) (121 . 176) (t 25945 44247 917809 342000)) nil (25945 44411 150857 0) 0 nil])
([nil nil ((#("	" 0 1 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (120 177) fontified t)) . -120) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) 121) nil (25945 44411 150854 0) 0 nil])
([nil nil ((152 . 154)) nil (25945 44411 150830 0) 0 nil])
([nil nil ((177 . 179)) nil (25945 44411 150830 0) 0 nil])
([nil nil ((179 . 180)) nil (25945 44411 150829 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 208 . 209) (nil fontified nil 185 . 209) (185 . 209)) nil (25945 44411 150828 0) 0 nil])
([nil nil ((209 . 210)) nil (25945 44411 150826 0) 0 nil])
([nil nil ((210 . 213)) nil (25945 44411 150825 0) 0 nil])
([nil nil ((213 . 215)) nil (25945 44411 150824 0) 0 nil])
([nil nil ((215 . 218)) nil (25945 44411 150823 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 297 . 298) (nil fontified nil 214 . 298) (214 . 298)) nil (25945 44411 150822 0) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (214 299) fontified t)) . -297) (undo-tree-id167 . -1) (undo-tree-id168 . -1) 298) nil (25945 44411 150820 0) 0 nil])
([nil nil ((301 . 302)) nil (25945 44411 150817 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 430 . 431) (nil fontified nil 302 . 431) (302 . 431)) nil (25945 44411 150816 0) 0 nil])
([nil nil ((246 . 248)) nil (25945 44411 150814 0) 0 nil])
([nil nil ((271 . 273)) nil (25945 44411 150813 0) 0 nil])
([nil nil ((301 . 303)) nil (25945 44411 150812 0) 0 nil])
([nil nil ((437 . 439)) nil (25945 44411 150811 0) 0 nil])
([nil nil ((439 . 440)) nil (25945 44411 150810 0) 0 nil])
([nil nil ((440 . 443)) nil (25945 44411 150809 0) 0 nil])
([nil nil ((443 . 444)) nil (25945 44411 150809 0) 0 nil])
([nil nil ((444 . 447)) nil (25945 44411 150808 0) 0 nil])
([nil nil ((443 . 444)) nil (25945 44411 150807 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 484 . 485) (nil fontified nil 444 . 485) (444 . 485)) nil (25945 44411 150806 0) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (444 486) fontified t)) . -484) (undo-tree-id165 . -1) (undo-tree-id166 . -1) 485) nil (25945 44411 150803 0) 0 nil])
([nil nil ((488 . 489) 484) nil (25945 44411 150790 0) 0 nil])
([nil nil ((103 . 105) (t 25945 44411 155622 998000)) nil (25945 44522 510028 0) 0 nil])
([nil nil ((105 . 111)) nil (25945 44522 510027 0) 0 nil])
([nil nil ((103 . 105)) nil (25945 44522 510026 0) 0 nil])
([nil nil ((113 . 116)) nil (25945 44522 510025 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -115) (undo-tree-id336 . -1) (undo-tree-id337 . -1) 116) nil (25945 44522 510024 0) 0 nil])
([nil nil ((115 . 121)) nil (25945 44522 510020 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -110) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) 111) nil (25945 44522 510019 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -119) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) 120) nil (25945 44522 510014 0) 0 nil])
([nil nil ((#("correc" 0 6 (fontified t)) . -113) (undo-tree-id305 . -6) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -2) (undo-tree-id310 . -3) (undo-tree-id311 . -4) (undo-tree-id312 . -5) (undo-tree-id313 . -6) (undo-tree-id314 . -6) (undo-tree-id315 . -6) (undo-tree-id316 . -5) (undo-tree-id317 . -4) (undo-tree-id318 . -3) (undo-tree-id319 . -2) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -2) (undo-tree-id323 . -3) (undo-tree-id324 . -3) (undo-tree-id325 . -4) (undo-tree-id326 . -5) (undo-tree-id327 . -6) (undo-tree-id328 . -6) (undo-tree-id329 . -6) 119) nil (25945 44522 510009 0) 0 nil])
([nil nil ((113 . 116)) nil (25945 44522 509983 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -113) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#("r" 0 1 (fontified t)) . -114) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (#("o" 0 1 (fontified t)) . -115) (undo-tree-id303 . -1) (undo-tree-id304 . -1) 116) nil (25945 44522 509981 0) 0 nil])
([nil nil ((113 . 117)) nil (25945 44522 509964 0) 0 nil])
([nil nil ((117 . 125)) nil (25945 44522 509963 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -123) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (#("o" 0 1 (fontified t)) . -124) (undo-tree-id291 . -1) (undo-tree-id292 . -1) 125) nil (25945 44522 509961 0) 0 nil])
([nil nil ((123 . 127)) nil (25945 44522 509954 0) 0 nil])
([nil nil ((113 . 118)) nil (25945 44522 509953 0) 0 nil])
([nil nil ((132 . 141)) nil (25945 44522 509952 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -140) (undo-tree-id285 . -1) (undo-tree-id286 . -1) 141) nil (25945 44522 509951 0) 0 nil])
([nil nil ((140 . 157)) nil (25945 44522 509947 0) 0 nil])
([nil nil ((127 . 128)) nil (25945 44522 509946 0) 0 nil])
([nil nil ((#("permission" 0 10 (fontified t)) . -133) (undo-tree-id265 . -10) (undo-tree-id266 . -10) (undo-tree-id267 . -1) (undo-tree-id268 . -2) (undo-tree-id269 . -3) (undo-tree-id270 . -4) (undo-tree-id271 . -5) (undo-tree-id272 . -6) (undo-tree-id273 . -7) (undo-tree-id274 . -8) (undo-tree-id275 . -8) (undo-tree-id276 . -8) (undo-tree-id277 . -9) (undo-tree-id278 . -10) (undo-tree-id279 . -10) (undo-tree-id280 . -10) (undo-tree-id281 . -10) (undo-tree-id282 . -10) (undo-tree-id283 . -10) (undo-tree-id284 . -10) 143) nil (25945 44522 509944 0) 0 nil])
([nil nil ((#("for " 0 4 (fontified t)) . -129) (undo-tree-id232 . -4) (undo-tree-id233 . -4) (undo-tree-id234 . -1) (undo-tree-id235 . -2) (undo-tree-id236 . -3) (undo-tree-id237 . -4) (undo-tree-id238 . -3) (undo-tree-id239 . -2) (undo-tree-id240 . -1) (undo-tree-id241 . -4) (undo-tree-id242 . -4) (undo-tree-id243 . -4) (undo-tree-id244 . -4) (undo-tree-id245 . -4) (undo-tree-id246 . -4) (undo-tree-id247 . -4) (undo-tree-id248 . -4) (undo-tree-id249 . -4) (undo-tree-id250 . -4) (undo-tree-id251 . -4) (undo-tree-id252 . -4) (undo-tree-id253 . -4) (undo-tree-id254 . -4) (undo-tree-id255 . -4) (undo-tree-id256 . -4) (undo-tree-id257 . -4) (undo-tree-id258 . -4) (undo-tree-id259 . -4) (undo-tree-id260 . -4) (undo-tree-id261 . -4) (undo-tree-id262 . -4) (undo-tree-id263 . -4) (undo-tree-id264 . -4) 133) nil (25945 44522 509923 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -128) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) 129) nil (25945 44522 509885 0) 0 nil])
([nil nil ((529 . 532) (t 25945 44522 515297 956000)) nil (25945 44656 971321 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -531) (undo-tree-id369 . -1) (undo-tree-id370 . -1) 532) nil (25945 44656 971319 0) 0 nil])
([nil nil ((531 . 533)) nil (25945 44656 971316 0) 0 nil])
([nil nil ((533 . 534)) nil (25945 44656 971315 0) 0 nil])
([nil nil ((534 . 537)) nil (25945 44656 971314 0) 0 nil])
([nil nil ((537 . 539)) nil (25945 44656 971313 0) 0 nil])
([nil nil ((539 . 542)) nil (25945 44656 971312 0) 0 nil])
([nil nil ((538 . 553)) nil (25945 44656 971311 0) 0 nil])
([nil nil ((557 . 558)) nil (25945 44656 971310 0) 0 nil])
([nil nil ((558 . 560)) nil (25945 44656 971309 0) 0 nil])
([nil nil ((560 . 576)) nil (25945 44656 971308 0) 0 nil])
([nil nil ((576 . 577)) nil (25945 44656 971307 0) 0 nil])
([nil nil ((577 . 580)) nil (25945 44656 971306 0) 0 nil])
([nil nil ((580 . 582)) nil (25945 44656 971305 0) 0 nil])
([nil nil ((582 . 585)) nil (25945 44656 971304 0) 0 nil])
([nil nil ((581 . 585)) nil (25945 44656 971303 0) 0 nil])
([nil nil ((585 . 598)) nil (25945 44656 971303 0) 0 nil])
([nil nil ((533 . 537)) nil (25945 44656 971302 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -534) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (#("u" 0 1 (fontified t)) . -535) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (#("n" 0 1 (fontified t)) . -536) (undo-tree-id367 . -1) (undo-tree-id368 . -1) 537) nil (25945 44656 971300 0) 0 nil])
([nil nil ((534 . 537)) nil (25945 44656 971286 0) 0 nil])
([nil nil ((#("Release " 0 1 (face markdown-header-face-2 fontified t markdown-heading-2-atx (564 580 nil nil nil nil nil nil 564 567 567 580 580 580 #<buffer README.md>) markdown-heading (564 580 nil nil nil nil nil nil 564 567 567 580 580 580 #<buffer README.md>)) 1 2 (face markdown-header-face-2 fontified t markdown-heading-2-atx (564 580 nil nil nil nil nil nil 564 567 567 580 580 580 #<buffer README.md>) markdown-heading (564 580 nil nil nil nil nil nil 564 567 567 580 580 580 #<buffer README.md>)) 2 3 (face markdown-header-face-2 fontified t markdown-heading-2-atx (564 580 nil nil nil nil nil nil 564 567 567 580 580 580 #<buffer README.md>) markdown-heading (564 580 nil nil nil nil nil nil 564 567 567 580 580 580 #<buffer README.md>)) 3 4 (face markdown-header-face-2 fontified t markdown-heading-2-atx (564 580 nil nil nil nil nil nil 564 567 567 580 580 580 #<buffer README.md>) markdown-heading (564 580 nil nil nil nil nil nil 564 567 567 580 580 580 #<buffer README.md>)) 4 5 (face markdown-header-face-2 fontified t markdown-heading-2-atx (564 580 nil nil nil nil nil nil 564 567 567 580 580 580 #<buffer README.md>) markdown-heading (564 580 nil nil nil nil nil nil 564 567 567 580 580 580 #<buffer README.md>)) 5 6 (face markdown-header-face-2 fontified t markdown-heading-2-atx (564 580 nil nil nil nil nil nil 564 567 567 580 580 580 #<buffer README.md>) markdown-heading (564 580 nil nil nil nil nil nil 564 567 567 580 580 580 #<buffer README.md>)) 6 7 (face markdown-header-face-2 fontified t markdown-heading-2-atx (564 580 nil nil nil nil nil nil 564 567 567 580 580 580 #<buffer README.md>) markdown-heading (564 580 nil nil nil nil nil nil 564 567 567 580 580 580 #<buffer README.md>)) 7 8 (face markdown-header-face-2 fontified t markdown-heading-2-atx (564 580 nil nil nil nil nil nil 564 567 567 580 580 580 #<buffer README.md>) markdown-heading (564 580 nil nil nil nil nil nil 564 567 567 580 580 580 #<buffer README.md>))) . -567) (undo-tree-id341 . -8) (undo-tree-id342 . -8) (undo-tree-id343 . -1) (undo-tree-id344 . -2) (undo-tree-id345 . -3) (undo-tree-id346 . -4) (undo-tree-id347 . -5) (undo-tree-id348 . -6) (undo-tree-id349 . -7) (undo-tree-id350 . -8) (undo-tree-id351 . -8) (undo-tree-id352 . -8) (undo-tree-id353 . -8) (undo-tree-id354 . -8) (undo-tree-id355 . -8) (undo-tree-id356 . -8) 575) nil (25945 44656 971285 0) 0 nil])
([nil nil ((572 . 573)) nil (25945 44656 971268 0) 0 nil])
([nil nil ((573 . 575)) nil (25945 44656 971267 0) 0 nil])
([nil nil ((#(" " 0 1 (face (markdown-line-break-face markdown-header-delimiter-face) markdown-heading-2-atx (564 575 nil nil nil nil nil nil 564 567 567 572 572 575 #<buffer README.md>) markdown-heading (564 575 nil nil nil nil nil nil 564 567 567 572 572 575 #<buffer README.md>) fontified t)) . -574) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) 575) nil (25945 44656 971265 0) 0 nil])
([nil nil ((600 . 601) 574) nil (25945 44656 971250 0) 0 nil])
([nil nil ((541 . 542) (t 25945 44656 976394 944000)) nil (25945 44949 675868 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 614 . 615) (nil fontified nil 542 . 615) (542 . 615)) nil (25945 44949 675867 0) 0 nil])
([nil nil ((#("project> " 0 9 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 632) fontified t)) . -546) (undo-tree-id941 . -9) (undo-tree-id942 . -9) (undo-tree-id943 . -9) (undo-tree-id944 . -9) (undo-tree-id945 . -9) (undo-tree-id946 . -9) (undo-tree-id947 . -9) (undo-tree-id948 . -9) 555) nil (25945 44949 675865 0) 0 nil])
([nil nil ((#("my_" 0 3 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 623) fontified t)) . -543) (undo-tree-id932 . -3) (undo-tree-id933 . -3) (undo-tree-id934 . -3) (undo-tree-id935 . -3) (undo-tree-id936 . -3) (undo-tree-id937 . -3) (undo-tree-id938 . -3) (undo-tree-id939 . -3) (undo-tree-id940 . -3) 546) nil (25945 44949 675855 0) 0 nil])
([nil nil ((#("project>" 0 8 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 620) fontified t)) . -574) (undo-tree-id924 . -8) (undo-tree-id925 . -8) (undo-tree-id926 . -8) (undo-tree-id927 . -8) (undo-tree-id928 . -8) (undo-tree-id929 . -8) (undo-tree-id930 . -8) (undo-tree-id931 . -8) 582) nil (25945 44949 675845 0) 0 nil])
([nil nil ((#("my_ " 0 4 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 612) fontified t)) . -571) (undo-tree-id914 . -3) (undo-tree-id915 . -4) (undo-tree-id916 . -3) (undo-tree-id917 . -3) (undo-tree-id918 . -3) (undo-tree-id919 . -3) (undo-tree-id920 . -3) (undo-tree-id921 . -3) (undo-tree-id922 . -3) (undo-tree-id923 . -4) 575) nil (25945 44949 675836 0) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 608) fontified t)) . -570) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) 571) nil (25945 44949 675824 0) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 607) fontified t)) . -542) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) 543) nil (25945 44949 675812 0) 0 nil])
([nil nil ((589 . 590)) nil (25945 44949 675802 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 649 . 650) (nil fontified nil 590 . 650) (590 . 650)) nil (25945 44949 675801 0) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 660) fontified t)) . -642) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (#("-" 0 1 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 661) fontified t)) . -643) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (#("-" 0 1 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 662) fontified t)) . -644) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (#("w" 0 1 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 663) fontified t)) . -645) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (#("a" 0 1 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 664) fontified t)) . -646) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (#("t" 0 1 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 665) fontified t)) . -647) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (#("c" 0 1 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 666) fontified t)) . -648) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (#("h" 0 1 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 667) fontified t)) . -649) (undo-tree-id892 . -1) (undo-tree-id893 . -1) 650) nil (25945 44949 675796 0) 0 nil])
([nil nil ((#("# OHOLEO KEYBOARD  


## Prerequisites  
    https://tauri.app/v1/guides/getting-started/prerequisites  
	Setup your udev rules to use hidapi.

## Usage  
```
rustup toolchain install nightly  
rustup default nightly  

```
or only for this project
```
rustup toolchain install nightly  
cd <into your project>  
rustup override set nightly  
```
Make sure you've added the wasm32-unknown-unknown target so that Rust can compile your code to WebAssembly to run in the browser.  
```
rustup target add wasm32-unknown-unknown
```
then run
```
npm install -D tailwindcss
npx tailwindcss init
npx tailwindcss -i ./input.css -o ./style/output.css
cargo tauri dev
```


## Build  
```
cargo tauri build
```
" 0 2 (face markdown-header-delimiter-face markdown-heading-1-atx (1 20 nil nil nil nil nil nil 1 3 3 18 18 20 #<buffer README.md>) markdown-heading (1 20 nil nil nil nil nil nil 1 3 3 18 18 20 #<buffer README.md>) fontified t) 2 8 (face markdown-header-face-1 markdown-heading-1-atx (1 20 nil nil nil nil nil nil 1 3 3 18 18 20 #<buffer README.md>) markdown-heading (1 20 nil nil nil nil nil nil 1 3 3 18 18 20 #<buffer README.md>) fontified t) 8 17 (face markdown-header-face-1 markdown-heading-1-atx (1 20 nil nil nil nil nil nil 1 3 3 18 18 20 #<buffer README.md>) markdown-heading (1 20 nil nil nil nil nil nil 1 3 3 18 18 20 #<buffer README.md>) fontified t) 17 19 (face (markdown-line-break-face markdown-header-delimiter-face) markdown-heading-1-atx (1 20 nil nil nil nil nil nil 1 3 3 18 18 20 #<buffer README.md>) markdown-heading (1 20 nil nil nil nil nil nil 1 3 3 18 18 20 #<buffer README.md>) fontified t) 19 20 (font-lock-multiline t fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 25 (face markdown-header-delimiter-face markdown-heading-2-atx (23 41 nil nil nil nil nil nil 23 26 26 39 39 41 #<buffer README.md>) markdown-heading (23 41 nil nil nil nil nil nil 23 26 26 39 39 41 #<buffer README.md>) fontified t) 25 37 (face markdown-header-face-2 markdown-heading-2-atx (23 41 nil nil nil nil nil nil 23 26 26 39 39 41 #<buffer README.md>) markdown-heading (23 41 nil nil nil nil nil nil 23 26 26 39 39 41 #<buffer README.md>) fontified t) 37 38 (face markdown-header-face-2 markdown-heading-2-atx (23 41 nil nil nil nil nil nil 23 26 26 39 39 41 #<buffer README.md>) markdown-heading (23 41 nil nil nil nil nil nil 23 26 26 39 39 41 #<buffer README.md>) fontified t) 38 40 (face (markdown-line-break-face markdown-header-delimiter-face) markdown-heading-2-atx (23 41 nil nil nil nil nil nil 23 26 26 39 39 41 #<buffer README.md>) markdown-heading (23 41 nil nil nil nil nil nil 23 26 26 39 39 41 #<buffer README.md>) fontified t) 40 41 (font-lock-multiline t fontified t) 41 45 (fontified t) 45 101 (font-lock-multiline t rear-nonsticky t mouse-face markdown-highlight-face face markdown-plain-url-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t) 101 102 (font-lock-multiline t rear-nonsticky t mouse-face markdown-highlight-face face markdown-plain-url-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t) 102 104 (face (markdown-line-break-face) fontified t) 104 105 (font-lock-multiline t fontified t) 105 142 (fontified t) 142 143 (fontified t) 143 144 (fontified t) 144 147 (face markdown-header-delimiter-face markdown-heading-2-atx (145 155 nil nil nil nil nil nil 145 148 148 153 153 155 #<buffer README.md>) markdown-heading (145 155 nil nil nil nil nil nil 145 148 148 153 153 155 #<buffer README.md>) fontified t) 147 152 (face markdown-header-face-2 markdown-heading-2-atx (145 155 nil nil nil nil nil nil 145 148 148 153 153 155 #<buffer README.md>) markdown-heading (145 155 nil nil nil nil nil nil 145 148 148 153 153 155 #<buffer README.md>) fontified t) 152 154 (face (markdown-line-break-face markdown-header-delimiter-face) markdown-heading-2-atx (145 155 nil nil nil nil nil nil 145 148 148 153 153 155 #<buffer README.md>) markdown-heading (145 155 nil nil nil nil nil nil 145 148 148 153 153 155 #<buffer README.md>) fontified t) 154 155 (font-lock-multiline t fontified t) 155 158 (face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-begin (156 159 156 159 159 159 nil nil nil nil 159 159 #<buffer README.md>) fontified t) 158 159 (invisible markdown-markup face (markdown-code-face) font-lock-multiline t fontified t) 159 191 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (160 221) fontified t) 191 193 (font-lock-multiline t face (markdown-line-break-face markdown-pre-face markdown-code-face) markdown-gfm-code (160 221) fontified t) 193 194 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (160 221) fontified t) 194 215 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (160 221) fontified t) 215 216 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (160 221) fontified t) 216 218 (font-lock-multiline t face (markdown-line-break-face markdown-pre-face markdown-code-face) markdown-gfm-code (160 221) fontified t) 218 219 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (160 221) fontified t) 219 220 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (160 221) fontified t) 220 221 (font-lock-multiline t face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-end (221 224 221 224 224 224 #<buffer README.md>) fontified t) 221 223 (face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-end (221 224 221 224 224 224 #<buffer README.md>) fontified t) 223 224 (invisible markdown-markup face (markdown-code-face) font-lock-multiline t fontified t) 224 247 (fontified t) 247 249 (fontified t) 249 251 (face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-begin (250 253 250 253 253 253 nil nil nil nil 253 253 #<buffer README.md>) fontified t) 251 252 (face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-begin (250 253 250 253 253 253 nil nil nil nil 253 253 #<buffer README.md>) fontified t) 252 253 (invisible markdown-markup face (markdown-code-face) font-lock-multiline t fontified t) 253 254 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (254 344) fontified t) 254 255 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (254 344) fontified t) 255 285 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (254 344) fontified t) 285 287 (font-lock-multiline t face (markdown-line-break-face markdown-pre-face markdown-code-face) markdown-gfm-code (254 344) fontified t) 287 288 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (254 344) fontified t) 288 310 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (254 344) fontified t) 310 312 (font-lock-multiline t face (markdown-line-break-face markdown-pre-face markdown-code-face) markdown-gfm-code (254 344) fontified t) 312 313 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (254 344) fontified t) 313 340 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (254 344) fontified t) 340 342 (font-lock-multiline t face (markdown-line-break-face markdown-pre-face markdown-code-face) markdown-gfm-code (254 344) fontified t) 342 343 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (254 344) fontified t) 343 344 (font-lock-multiline t face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-end (344 347 344 347 347 347 #<buffer README.md>) fontified t) 344 345 (face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-end (344 347 344 347 347 347 #<buffer README.md>) fontified t) 345 346 (face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-end (344 347 344 347 347 347 #<buffer README.md>) fontified t) 346 347 (invisible markdown-markup face (markdown-code-face) font-lock-multiline t fontified t) 347 475 (fontified t) 475 476 (fontified t) 476 478 (face (markdown-line-break-face) fontified t) 478 479 (font-lock-multiline t fontified t) 479 480 (face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-begin (480 483 480 483 483 483 nil nil nil nil 483 483 #<buffer README.md>) fontified t) 480 481 (face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-begin (480 483 480 483 483 483 nil nil nil nil 483 483 #<buffer README.md>) fontified t) 481 482 (face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-begin (480 483 480 483 483 483 nil nil nil nil 483 483 #<buffer README.md>) fontified t) 482 483 (invisible markdown-markup face (markdown-code-face) font-lock-multiline t fontified t) 483 523 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (484 525) fontified t) 523 524 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (484 525) fontified t) 524 525 (font-lock-multiline t face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-end (525 528 525 528 528 528 #<buffer README.md>) fontified t) 525 526 (face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-end (525 528 525 528 528 528 #<buffer README.md>) fontified t) 526 527 (face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-end (525 528 525 528 528 528 #<buffer README.md>) fontified t) 527 528 (invisible markdown-markup face (markdown-code-face) font-lock-multiline t fontified t) 528 537 (fontified t) 537 539 (face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-begin (538 541 538 541 541 541 nil nil nil nil 541 541 #<buffer README.md>) fontified t) 539 540 (face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-begin (538 541 538 541 541 541 nil nil nil nil 541 541 #<buffer README.md>) fontified t) 540 541 (invisible markdown-markup face (markdown-code-face) font-lock-multiline t fontified t) 541 587 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 659) fontified t) 587 589 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 659) fontified t) 589 641 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 659) fontified t) 641 642 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 659) fontified t) 642 657 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 659) fontified t) 657 658 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 659) fontified t) 658 659 (font-lock-multiline t face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-end (659 662 659 662 662 662 #<buffer README.md>) fontified t) 659 660 (face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-end (659 662 659 662 662 662 #<buffer README.md>) fontified t) 660 661 (face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-end (659 662 659 662 662 662 #<buffer README.md>) fontified t) 661 662 (invisible markdown-markup face (markdown-code-face) font-lock-multiline t fontified t) 662 663 (fontified t) 663 664 (fontified t) 664 666 (face markdown-header-delimiter-face fontified t markdown-heading-2-atx (665 675 nil nil nil nil nil nil 665 668 668 673 673 675 #<buffer README.md>) markdown-heading (665 675 nil nil nil nil nil nil 665 668 668 673 673 675 #<buffer README.md>)) 666 667 (face markdown-header-delimiter-face fontified t markdown-heading-2-atx (665 675 nil nil nil nil nil nil 665 668 668 673 673 675 #<buffer README.md>) markdown-heading (665 675 nil nil nil nil nil nil 665 668 668 673 673 675 #<buffer README.md>)) 667 668 (face markdown-header-face-2 fontified t markdown-heading-2-atx (665 675 nil nil nil nil nil nil 665 668 668 673 673 675 #<buffer README.md>) markdown-heading (665 675 nil nil nil nil nil nil 665 668 668 673 673 675 #<buffer README.md>)) 668 669 (face markdown-header-face-2 fontified t markdown-heading-2-atx (665 675 nil nil nil nil nil nil 665 668 668 673 673 675 #<buffer README.md>) markdown-heading (665 675 nil nil nil nil nil nil 665 668 668 673 673 675 #<buffer README.md>)) 669 670 (face markdown-header-face-2 fontified t markdown-heading-2-atx (665 675 nil nil nil nil nil nil 665 668 668 673 673 675 #<buffer README.md>) markdown-heading (665 675 nil nil nil nil nil nil 665 668 668 673 673 675 #<buffer README.md>)) 670 671 (face markdown-header-face-2 fontified t markdown-heading-2-atx (665 675 nil nil nil nil nil nil 665 668 668 673 673 675 #<buffer README.md>) markdown-heading (665 675 nil nil nil nil nil nil 665 668 668 673 673 675 #<buffer README.md>)) 671 672 (face markdown-header-face-2 fontified t markdown-heading-2-atx (665 675 nil nil nil nil nil nil 665 668 668 673 673 675 #<buffer README.md>) markdown-heading (665 675 nil nil nil nil nil nil 665 668 668 673 673 675 #<buffer README.md>)) 672 673 (face (markdown-line-break-face markdown-header-delimiter-face) fontified t markdown-heading-2-atx (665 675 nil nil nil nil nil nil 665 668 668 673 673 675 #<buffer README.md>) markdown-heading (665 675 nil nil nil nil nil nil 665 668 668 673 673 675 #<buffer README.md>)) 673 674 (face (markdown-line-break-face markdown-header-delimiter-face) fontified t markdown-heading-2-atx (665 675 nil nil nil nil nil nil 665 668 668 673 673 675 #<buffer README.md>) markdown-heading (665 675 nil nil nil nil nil nil 665 668 668 673 673 675 #<buffer README.md>)) 674 675 (font-lock-multiline t fontified t) 675 677 (face (markdown-markup-face markdown-code-face) invisible markdown-markup fontified t markdown-gfm-block-begin (676 679 676 679 679 679 nil nil nil nil 679 679 #<buffer README.md>)) 677 678 (face (markdown-markup-face markdown-code-face) invisible markdown-markup fontified t markdown-gfm-block-begin (676 679 676 679 679 679 nil nil nil nil 679 679 #<buffer README.md>)) 678 679 (invisible markdown-markup face (markdown-code-face) font-lock-multiline t fontified t) 679 696 (fontified t font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (680 698)) 696 697 (fontified t font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (680 698)) 697 698 (fontified t font-lock-multiline t face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-end (698 701 698 701 701 701 #<buffer README.md>)) 698 699 (fontified t face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-end (698 701 698 701 701 701 #<buffer README.md>)) 699 700 (fontified t face (markdown-markup-face markdown-code-face) invisible markdown-markup markdown-gfm-block-end (698 701 698 701 701 701 #<buffer README.md>)) 700 701 (fontified t invisible markdown-markup face (markdown-code-face) font-lock-multiline t)) . 1) (undo-tree-id371 . -701) (undo-tree-id372 . -224) (undo-tree-id373 . -25) (undo-tree-id374 . -41) (undo-tree-id375 . -40) (undo-tree-id376 . -45) (undo-tree-id377 . -159) (undo-tree-id378 . -224) (undo-tree-id379 . -253) (undo-tree-id380 . -347) (undo-tree-id381 . -530) (undo-tree-id382 . -667) (undo-tree-id383 . -667) (undo-tree-id384 . -667) (undo-tree-id385 . -667) (undo-tree-id386 . -667) (undo-tree-id387 . -667) (undo-tree-id388 . -667) (undo-tree-id389 . -667) (undo-tree-id390 . -533) (undo-tree-id391 . -533) (undo-tree-id392 . -533) (undo-tree-id393 . -533) (undo-tree-id394 . -533) (undo-tree-id395 . -667) (undo-tree-id396 . -667) (undo-tree-id397 . -667) (undo-tree-id398 . -667) (undo-tree-id399 . -667) (undo-tree-id400 . -672) (undo-tree-id401 . -674) (undo-tree-id402 . -664) (undo-tree-id403 . -675) (undo-tree-id404 . -674) (undo-tree-id405 . -664) (undo-tree-id406 . -675) (undo-tree-id407 . -674) (undo-tree-id408 . -674) (undo-tree-id409 . -674) (undo-tree-id410 . -674) (undo-tree-id411 . -674) (undo-tree-id412 . -674) (undo-tree-id413 . -674) (undo-tree-id414 . -674) (undo-tree-id415 . -674) (undo-tree-id416 . -674) (undo-tree-id417 . -674) (undo-tree-id418 . -674) (undo-tree-id419 . -674) (undo-tree-id420 . -674) (undo-tree-id421 . -674) (undo-tree-id422 . -674) (undo-tree-id423 . -674) (undo-tree-id424 . -674) (undo-tree-id425 . -674) (undo-tree-id426 . -674) (undo-tree-id427 . -674) (undo-tree-id428 . -674) (undo-tree-id429 . -674) (undo-tree-id430 . -674) (undo-tree-id431 . -674) (undo-tree-id432 . -674) (undo-tree-id433 . -674) (undo-tree-id434 . -696) (undo-tree-id435 . -696) (undo-tree-id436 . -696) (undo-tree-id437 . -696) (undo-tree-id438 . -696) (undo-tree-id439 . -701) (undo-tree-id440 . -701) (undo-tree-id441 . -701) (undo-tree-id442 . -700) (undo-tree-id443 . -674) (undo-tree-id444 . -663) (undo-tree-id445 . -661) (undo-tree-id446 . -654) (undo-tree-id447 . -536) (undo-tree-id448 . -527) (undo-tree-id449 . -493) (undo-tree-id450 . -356) (undo-tree-id451 . -346) (undo-tree-id452 . -320) (undo-tree-id453 . -294) (undo-tree-id454 . -252) (undo-tree-id455 . -229) (undo-tree-id456 . -223) (undo-tree-id457 . -219) (undo-tree-id458 . -161) (undo-tree-id459 . -156) (undo-tree-id460 . -144) (undo-tree-id461 . -483) (undo-tree-id462 . -701) (undo-tree-id463 . -662) (undo-tree-id464 . -662) (undo-tree-id465 . -662) (undo-tree-id466 . -662) (undo-tree-id467 . -662) (undo-tree-id468 . -701) (undo-tree-id469 . -662) (undo-tree-id470 . -662) (undo-tree-id471 . -662) (undo-tree-id472 . -460) (undo-tree-id473 . -460) (undo-tree-id474 . -460) (undo-tree-id475 . -460) (undo-tree-id476 . -460) (undo-tree-id477 . -460) (undo-tree-id478 . -460) (undo-tree-id479 . -460) (undo-tree-id480 . -460) (undo-tree-id481 . -460) (undo-tree-id482 . -460) (undo-tree-id483 . -460) (undo-tree-id484 . -460) (undo-tree-id485 . -460) (undo-tree-id486 . -252) (undo-tree-id487 . -252) (undo-tree-id488 . -252) (undo-tree-id489 . -252) (undo-tree-id490 . -252) (undo-tree-id491 . -252) (undo-tree-id492 . -252) (undo-tree-id493 . -701) (undo-tree-id494 . -701) (undo-tree-id495 . -701) (undo-tree-id496 . -700) (undo-tree-id497 . -674) (undo-tree-id498 . -662) (undo-tree-id499 . -661) (undo-tree-id500 . -536) (undo-tree-id501 . -500) (undo-tree-id502 . -482) (undo-tree-id503 . -330) (undo-tree-id504 . -252) (undo-tree-id505 . -219) (undo-tree-id506 . -210) (undo-tree-id507 . -158) (undo-tree-id508 . -154) (undo-tree-id509 . -143) (undo-tree-id510 . -57) (undo-tree-id511 . -21) (undo-tree-id512 . -12) (undo-tree-id513 . -11) (undo-tree-id514 . -10) (undo-tree-id515 . -8) (undo-tree-id516 . -7) (undo-tree-id517 . -6) (undo-tree-id518 . -5) (undo-tree-id519 . -4) (undo-tree-id520 . -3) (undo-tree-id521 . -1) (undo-tree-id522 . -662) (undo-tree-id523 . -701) (undo-tree-id524 . -674) (undo-tree-id525 . -674) (undo-tree-id526 . -674) (undo-tree-id527 . -674) (undo-tree-id528 . -674) (undo-tree-id529 . -678) (undo-tree-id530 . -678) (undo-tree-id531 . -678) (undo-tree-id532 . -678) (undo-tree-id533 . -678) (undo-tree-id534 . -158) (undo-tree-id535 . -158) (undo-tree-id536 . -158) (undo-tree-id537 . -158) (undo-tree-id538 . -158) (undo-tree-id539 . -540) (undo-tree-id540 . -540) (undo-tree-id541 . -540) (undo-tree-id542 . -540) (undo-tree-id543 . -540) (undo-tree-id544 . -536) (undo-tree-id545 . -536) (undo-tree-id546 . -536) (undo-tree-id547 . -536) (undo-tree-id548 . -536) (undo-tree-id549 . -540) (undo-tree-id550 . -540) (undo-tree-id551 . -540) (undo-tree-id552 . -540) (undo-tree-id553 . -540) (undo-tree-id554 . -541) (undo-tree-id555 . -701) (undo-tree-id556 . -541) (undo-tree-id557 . -144) (undo-tree-id558 . -155) (undo-tree-id559 . -144) (undo-tree-id560 . -224) (undo-tree-id561 . -249) (undo-tree-id562 . -347) (undo-tree-id563 . -249) (undo-tree-id564 . -479) (undo-tree-id565 . -249) (undo-tree-id566 . -528) (undo-tree-id567 . -537) (undo-tree-id568 . -541) (undo-tree-id569 . -588) (undo-tree-id570 . -537) (undo-tree-id571 . -662) (undo-tree-id572 . -664) (undo-tree-id573 . -675) (undo-tree-id574 . -541) (undo-tree-id575 . -541) (undo-tree-id576 . -541) (undo-tree-id577 . -541) (undo-tree-id578 . -541) (undo-tree-id579 . -144) (undo-tree-id580 . -155) (undo-tree-id581 . -144) (undo-tree-id582 . -224) (undo-tree-id583 . -249) (undo-tree-id584 . -347) (undo-tree-id585 . -249) (undo-tree-id586 . -479) (undo-tree-id587 . -249) (undo-tree-id588 . -528) (undo-tree-id589 . -541) (undo-tree-id590 . -144) (undo-tree-id591 . -155) (undo-tree-id592 . -144) (undo-tree-id593 . -224) (undo-tree-id594 . -249) (undo-tree-id595 . -347) (undo-tree-id596 . -249) (undo-tree-id597 . -479) (undo-tree-id598 . -249) (undo-tree-id599 . -528) (undo-tree-id600 . -537) (undo-tree-id601 . -662) (undo-tree-id602 . -541) (undo-tree-id603 . -664) (undo-tree-id604 . -675) (undo-tree-id605 . -568) (undo-tree-id606 . -568) (undo-tree-id607 . -568) (undo-tree-id608 . -568) (undo-tree-id609 . -568) (undo-tree-id610 . -144) (undo-tree-id611 . -155) (undo-tree-id612 . -144) (undo-tree-id613 . -224) (undo-tree-id614 . -249) (undo-tree-id615 . -347) (undo-tree-id616 . -249) (undo-tree-id617 . -479) (undo-tree-id618 . -249) (undo-tree-id619 . -528) (undo-tree-id620 . -568) (undo-tree-id621 . -568) (undo-tree-id622 . -144) (undo-tree-id623 . -155) (undo-tree-id624 . -144) (undo-tree-id625 . -224) (undo-tree-id626 . -249) (undo-tree-id627 . -347) (undo-tree-id628 . -249) (undo-tree-id629 . -479) (undo-tree-id630 . -249) (undo-tree-id631 . -528) (undo-tree-id632 . -568) (undo-tree-id633 . -537) (undo-tree-id634 . -662) (undo-tree-id635 . -664) (undo-tree-id636 . -675) (undo-tree-id637 . -144) (undo-tree-id638 . -155) (undo-tree-id639 . -144) (undo-tree-id640 . -224) (undo-tree-id641 . -249) (undo-tree-id642 . -347) (undo-tree-id643 . -249) (undo-tree-id644 . -479) (undo-tree-id645 . -249) (undo-tree-id646 . -528) (undo-tree-id647 . -568) (undo-tree-id648 . -541) (undo-tree-id649 . -144) (undo-tree-id650 . -155) (undo-tree-id651 . -144) (undo-tree-id652 . -224) (undo-tree-id653 . -249) (undo-tree-id654 . -347) (undo-tree-id655 . -249) (undo-tree-id656 . -479) (undo-tree-id657 . -249) (undo-tree-id658 . -528) (undo-tree-id659 . -541) (undo-tree-id660 . -537) (undo-tree-id661 . -662) (undo-tree-id662 . -664) (undo-tree-id663 . -675) (undo-tree-id664 . -588) (undo-tree-id665 . -588) (undo-tree-id666 . -588) (undo-tree-id667 . -587) (undo-tree-id668 . -584) (undo-tree-id669 . -583) (undo-tree-id670 . -581) (undo-tree-id671 . -580) (undo-tree-id672 . -579) (undo-tree-id673 . -578) (undo-tree-id674 . -577) (undo-tree-id675 . -575) (undo-tree-id676 . -574) (undo-tree-id677 . -573) (undo-tree-id678 . -572) (undo-tree-id679 . -571) (undo-tree-id680 . -569) (undo-tree-id681 . -568) (undo-tree-id682 . -541) (undo-tree-id683 . -588) (undo-tree-id684 . -541) (undo-tree-id685 . -541) (undo-tree-id686 . -541) (undo-tree-id687 . -541) (undo-tree-id688 . -588) (undo-tree-id689 . -588) (undo-tree-id690 . -588) (undo-tree-id691 . -588) (undo-tree-id692 . -588) (undo-tree-id693 . -588) (undo-tree-id694 . -589) (undo-tree-id695 . -588) (undo-tree-id696 . -589) (undo-tree-id697 . -144) (undo-tree-id698 . -155) (undo-tree-id699 . -144) (undo-tree-id700 . -224) (undo-tree-id701 . -249) (undo-tree-id702 . -347) (undo-tree-id703 . -249) (undo-tree-id704 . -479) (undo-tree-id705 . -249) (undo-tree-id706 . -528) (undo-tree-id707 . -537) (undo-tree-id708 . -589) (undo-tree-id709 . -641) (undo-tree-id710 . -144) (undo-tree-id711 . -155) (undo-tree-id712 . -144) (undo-tree-id713 . -224) (undo-tree-id714 . -249) (undo-tree-id715 . -347) (undo-tree-id716 . -249) (undo-tree-id717 . -479) (undo-tree-id718 . -249) (undo-tree-id719 . -528) (undo-tree-id720 . -641) (undo-tree-id721 . -144) (undo-tree-id722 . -155) (undo-tree-id723 . -144) (undo-tree-id724 . -224) (undo-tree-id725 . -249) (undo-tree-id726 . -347) (undo-tree-id727 . -249) (undo-tree-id728 . -479) (undo-tree-id729 . -249) (undo-tree-id730 . -528) (undo-tree-id731 . -641) (undo-tree-id732 . -144) (undo-tree-id733 . -155) (undo-tree-id734 . -144) (undo-tree-id735 . -224) (undo-tree-id736 . -249) (undo-tree-id737 . -347) (undo-tree-id738 . -249) (undo-tree-id739 . -479) (undo-tree-id740 . -249) (undo-tree-id741 . -528) (undo-tree-id742 . -641) (undo-tree-id743 . -144) (undo-tree-id744 . -155) (undo-tree-id745 . -144) (undo-tree-id746 . -224) (undo-tree-id747 . -249) (undo-tree-id748 . -347) (undo-tree-id749 . -249) (undo-tree-id750 . -479) (undo-tree-id751 . -249) (undo-tree-id752 . -528) (undo-tree-id753 . -641) (undo-tree-id754 . -144) (undo-tree-id755 . -155) (undo-tree-id756 . -144) (undo-tree-id757 . -224) (undo-tree-id758 . -249) (undo-tree-id759 . -347) (undo-tree-id760 . -249) (undo-tree-id761 . -479) (undo-tree-id762 . -249) (undo-tree-id763 . -528) (undo-tree-id764 . -641) (undo-tree-id765 . -144) (undo-tree-id766 . -155) (undo-tree-id767 . -144) (undo-tree-id768 . -224) (undo-tree-id769 . -249) (undo-tree-id770 . -347) (undo-tree-id771 . -249) (undo-tree-id772 . -479) (undo-tree-id773 . -249) (undo-tree-id774 . -528) (undo-tree-id775 . -641) (undo-tree-id776 . -144) (undo-tree-id777 . -155) (undo-tree-id778 . -144) (undo-tree-id779 . -224) (undo-tree-id780 . -249) (undo-tree-id781 . -347) (undo-tree-id782 . -249) (undo-tree-id783 . -479) (undo-tree-id784 . -249) (undo-tree-id785 . -528) (undo-tree-id786 . -641) (undo-tree-id787 . -144) (undo-tree-id788 . -155) (undo-tree-id789 . -144) (undo-tree-id790 . -224) (undo-tree-id791 . -249) (undo-tree-id792 . -347) (undo-tree-id793 . -249) (undo-tree-id794 . -479) (undo-tree-id795 . -249) (undo-tree-id796 . -528) (undo-tree-id797 . -641) (undo-tree-id798 . -537) (undo-tree-id799 . -662) (undo-tree-id800 . -664) (undo-tree-id801 . -675) (undo-tree-id802 . -641) (undo-tree-id803 . -641) (undo-tree-id804 . -641) (undo-tree-id805 . -640) (undo-tree-id806 . -638) (undo-tree-id807 . -636) (undo-tree-id808 . -657) (undo-tree-id809 . -661) (undo-tree-id810 . -652) (undo-tree-id811 . -651) (undo-tree-id812 . -650) (undo-tree-id813 . -649) (undo-tree-id814 . -595) (undo-tree-id815 . -594) (undo-tree-id816 . -592) (undo-tree-id817 . -591) (undo-tree-id818 . -589) (undo-tree-id819 . -589) (undo-tree-id820 . -641) (undo-tree-id821 . -589) (undo-tree-id822 . -589) (undo-tree-id823 . -589) (undo-tree-id824 . -589) (undo-tree-id825 . -701) (undo-tree-id826 . -701) (undo-tree-id827 . -701) (undo-tree-id828 . -700) (undo-tree-id829 . -690) (undo-tree-id830 . -678) (undo-tree-id831 . -662) (undo-tree-id832 . -661) (undo-tree-id833 . -650) (undo-tree-id834 . -596) (undo-tree-id835 . -574) (undo-tree-id836 . -540) (undo-tree-id837 . -533) (undo-tree-id838 . -527) (undo-tree-id839 . -349) (undo-tree-id840 . -344) (undo-tree-id841 . -313) (undo-tree-id842 . -2) (undo-tree-id843 . -3) (undo-tree-id844 . -4) (undo-tree-id845 . -3) (undo-tree-id846 . -2) (undo-tree-id847 . -1) (undo-tree-id848 . -641) (undo-tree-id849 . -701)) nil (25945 44949 675731 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 701 . 702) (nil fontified nil 1 . 702) (1 . 702)) nil (25945 44949 675225 0) 0 nil])
([nil nil ((#("npx tailwindcss init" 0 20 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 659) fontified t)) . 569) (undo-tree-id960 . -20) (undo-tree-id961 . -20) (undo-tree-id962 . -20) (undo-tree-id963 . -20) (undo-tree-id964 . -20) (undo-tree-id965 . -20) (undo-tree-id966 . -20) (t 25945 44949 682422 508000)) nil (25945 46517 735890 0) 0 nil])
([nil current ((#("
" 0 1 (font-lock-multiline t face (markdown-pre-face markdown-code-face) markdown-gfm-code (542 639) fontified t)) . -568) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) 569) nil (25945 46517 735879 0) 0 nil])
nil
