(undo-tree-save-format-version . 1)
"75cbe7e5d8f0c641bfbf82b6dff9b16b75d35b30"
[nil nil nil nil (25996 60633 207239 0) 0 nil]
([nil nil ((2436 . 2441) (t 25983 58543 905467 460000)) nil (25996 60633 207238 0) 0 nil])
([nil nil ((2441 . 2449)) nil (25996 60633 207237 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -2446) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("s" 0 1 (fontified t)) . -2447) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("e" 0 1 (fontified t)) . -2448) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) 2449) nil (25996 60633 207232 0) 0 nil])
([nil nil ((2446 . 2458)) nil (25996 60633 207149 0) 0 nil])
([nil nil ((2456 . 2460) (#("bo" 0 2 (fontified nil)) . 2456) (2456 . 2458) (#("bool" 0 4 (fontified nil)) . -2456) (2456 . 2460) (#("bo" 0 2 (fontified t)) . -2456) (undo-tree-id0 . -2) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -2) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . -2) 2458) nil (25996 60633 207146 0) 0 nil])
([nil nil ((2460 . 2461)) nil (25996 60633 207109 0) 0 nil])
([nil nil ((2765 . 2767) (t 25996 60633 216081 467000)) nil (25996 60641 822101 0) 0 nil])
([nil nil ((2767 . 2769)) nil (25996 60641 822100 0) 0 nil])
([nil nil ((2767 . 2776) (#("mo" 0 2 (fontified nil)) . 2767) (2767 . 2769) (#("mousedown" 0 9 (fontified nil)) . -2767) (2767 . 2776) (#("mo" 0 2 (fontified t)) . -2767) (undo-tree-id94 . -2) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -2) (undo-tree-id98 . -2) 2769) nil (25996 60641 822098 0) 0 nil])
([nil nil ((2776 . 2781)) nil (25996 60641 822091 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2778 2783 #s(yas--snippet nil nil nil 9 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 9 nil nil nil nil)) (2778 . 2783) (#("false" 0 5 (fontified nil)) . 2778) (2778 . 2783) (#("fal" 0 3 (fontified nil)) . 2778) (2778 . 2781) (#("false" 0 5 (fontified nil)) . -2778) (2778 . 2783) (#("fal" 0 3 (fontified t)) . -2778) (undo-tree-id83 . -3) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -3) (undo-tree-id92 . -3) (undo-tree-id93 . -3) 2781) nil (25996 60641 822087 0) 0 nil])
([nil nil ((2783 . 2784)) nil (25996 60641 822063 0) 0 nil])
([nil nil ((831 . 832) (784 . 785) (829 . 830) (t 25996 60641 829194 732000)) nil (25996 60725 865402 0) 0 nil])
([nil nil ((832 . 834)) nil (25996 60725 865401 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -830) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#("	" 0 1 (fontified t)) . -831) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("u" 0 1 (fontified t)) . -832) (undo-tree-id115 . -1) (#("i" 0 1 (fontified t)) . -833) (undo-tree-id116 . -1) 834) nil (25996 60725 865398 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 426) (426 . 430) (425 . 427)) nil (25996 60725 865390 0) 0 nil])
([nil nil ((426 . 430)) nil (25996 60725 865389 0) 0 nil])
([nil nil ((430 . 438)) nil (25996 60725 865388 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -437) (undo-tree-id110 . -1) 438) nil (25996 60725 865387 0) 0 nil])
([nil nil ((437 . 439)) nil (25996 60725 865384 0) 0 nil])
([nil nil ((439 . 441)) nil (25996 60725 865384 0) 0 nil])
([nil nil ((apply yas--snippet-revive 439 449 #s(yas--snippet nil nil #s(yas--exit 448 nil) 10 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 448 nil) 10 nil nil nil nil)) (439 . 449) (#("RwSignal<$0>" 0 12 (fontified nil)) . 439) (439 . 451) (#("Rw" 0 2 (fontified nil)) . 439) (439 . 441) (#("RwSignal<â€¦>" 0 11 (fontified nil)) . -439) (439 . 450) (#("Rw" 0 2 (face font-lock-type-face fontified t)) . -439) (undo-tree-id109 . -2) 441) nil (25996 60725 865382 0) 0 nil])
([nil nil ((448 . 450)) nil (25996 60725 865377 0) 0 nil])
([nil nil ((448 . 455) (#("UI" 0 2 (fontified nil)) . 448) (448 . 450) (#("UiState" 0 7 (fontified nil)) . -448) (448 . 455) (#("UI" 0 2 (face font-lock-type-face fontified t)) . -448) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) 450) nil (25996 60725 865374 0) 0 nil])
([nil nil ((456 . 457)) nil (25996 60725 865353 0) 0 nil])
([nil nil ((#("    uistate: RwSignal<UiState>," 0 4 (fontified t) 4 11 (face font-lock-variable-name-face fontified t) 11 13 (fontified t) 13 21 (face font-lock-type-face fontified t) 21 22 (fontified t) 22 29 (face font-lock-type-face fontified t) 29 31 (fontified t)) . 426) (undo-tree-id187 . -31) (undo-tree-id188 . -22) (undo-tree-id189 . -22) (undo-tree-id190 . -22) (undo-tree-id191 . -22) (undo-tree-id192 . -22) (undo-tree-id193 . -22) (undo-tree-id194 . -22) (undo-tree-id195 . -22) (undo-tree-id196 . -22) (undo-tree-id197 . -31) (undo-tree-id198 . -31) (undo-tree-id199 . -31) (undo-tree-id200 . -31) (undo-tree-id201 . -31) (undo-tree-id202 . -31) (undo-tree-id203 . -31) (undo-tree-id204 . -31) (undo-tree-id205 . -31) (undo-tree-id206 . -31) (undo-tree-id207 . -31) (undo-tree-id208 . -31) (undo-tree-id209 . -31) (undo-tree-id210 . -31) (undo-tree-id211 . -31) (undo-tree-id212 . -31) (undo-tree-id213 . -31) (undo-tree-id214 . -31) (undo-tree-id215 . -31) (undo-tree-id216 . -31) (undo-tree-id217 . -31) (undo-tree-id218 . -31) (undo-tree-id219 . -31) (undo-tree-id220 . -31) (undo-tree-id221 . -31) (undo-tree-id222 . -31) (undo-tree-id223 . -31) (undo-tree-id224 . -31) (undo-tree-id225 . -31) (undo-tree-id226 . -31) (undo-tree-id227 . -31) (undo-tree-id228 . -31) (undo-tree-id229 . -31) (undo-tree-id230 . -31) (undo-tree-id231 . -31) (undo-tree-id232 . -31) (undo-tree-id233 . -31) (undo-tree-id234 . -31) (undo-tree-id235 . -31) (undo-tree-id236 . -31) (undo-tree-id237 . -31) (undo-tree-id238 . -31) (t 25996 60725 875279 853000)) nil (25996 60738 433532 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 426) (undo-tree-id186 . -1)) nil (25996 60738 433473 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -425) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) 426) nil (25996 60738 433464 0) 0 nil])
([nil nil ((3190 . 3195) (t 25996 60738 443961 133000)) nil (25996 60786 496602 0) 0 nil])
([nil nil ((3195 . 3197)) nil (25996 60786 496601 0) 0 nil])
([nil nil ((3198 . 3202) (#("	" 0 1 (fontified nil)) . 3197) (3197 . 3198) (#("    " 0 4 (fontified nil)) . 3197) (undo-tree-id244 . -4) (undo-tree-id245 . -4) (undo-tree-id246 . -4) (undo-tree-id247 . -4) (undo-tree-id248 . -4) (3196 . 3202)) nil (25996 60786 496599 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 4538 . 4539) (nil fontified nil 4516 . 4539) (nil fontified nil 4515 . 4516) (nil fontified nil 4480 . 4515) (nil fontified nil 4469 . 4480) (nil fontified nil 4407 . 4469) (nil fontified nil 4402 . 4407) (nil fontified nil 4401 . 4402) (nil fontified nil 4398 . 4401) (nil fontified nil 4397 . 4398) (nil fontified nil 4394 . 4397) (nil fontified nil 4393 . 4394) (nil fontified nil 4391 . 4393) (nil fontified nil 4357 . 4391) (nil fontified nil 4349 . 4357) (nil fontified nil 4319 . 4349) (nil fontified nil 4318 . 4319) (nil fontified nil 4293 . 4318) (nil fontified nil 4289 . 4293) (nil fontified nil 4272 . 4289) (nil fontified nil 4244 . 4272) (nil fontified nil 4243 . 4244) (nil fontified nil 4211 . 4243) (nil fontified nil 4121 . 4211) (nil fontified nil 4114 . 4121) (nil fontified nil 4097 . 4114) (nil fontified nil 4096 . 4097) (nil fontified nil 4094 . 4096) (nil fontified nil 4087 . 4094) (nil fontified nil 4015 . 4087) (nil fontified nil 4012 . 4015) (nil fontified nil 4010 . 4012) (nil fontified nil 4000 . 4010) (nil fontified nil 3998 . 4000) (nil fontified nil 3992 . 3998) (nil fontified nil 3991 . 3992) (nil fontified nil 3984 . 3991) (nil fontified nil 3981 . 3984) (nil fontified nil 3976 . 3981) (nil fontified nil 3975 . 3976) (nil fontified nil 3972 . 3975) (nil fontified nil 3936 . 3972) (nil fontified nil 3935 . 3936) (nil fontified nil 3897 . 3935) (nil fontified nil 3879 . 3897) (nil fontified nil 3830 . 3879) (nil fontified nil 3825 . 3830) (nil fontified nil 3795 . 3825) (nil fontified nil 3779 . 3795) (nil fontified nil 3778 . 3779) (nil fontified nil 3775 . 3778) (nil fontified nil 3767 . 3775) (nil fontified nil 3759 . 3767) (nil fontified nil 3720 . 3759) (nil fontified nil 3715 . 3720) (nil fontified nil 3685 . 3715) (nil fontified nil 3679 . 3685) (nil fontified nil 3678 . 3679) (nil fontified nil 3675 . 3678) (nil fontified nil 3666 . 3675) (nil fontified nil 3651 . 3666) (nil fontified nil 3617 . 3651) (nil fontified nil 3612 . 3617) (nil fontified nil 3582 . 3612) (nil fontified nil 3580 . 3582) (nil fontified nil 3572 . 3580) (nil fontified nil 3571 . 3572) (nil fontified nil 3529 . 3571) (nil fontified nil 3526 . 3529) (nil fontified nil 3525 . 3526) (nil fontified nil 3511 . 3525) (nil fontified nil 3504 . 3511) (nil fontified nil 3502 . 3504) (nil fontified nil 3495 . 3502) (nil fontified nil 3457 . 3495) (nil fontified nil 3451 . 3457) (nil fontified nil 3450 . 3451) (nil fontified nil 3447 . 3450) (nil fontified nil 3435 . 3447) (nil fontified nil 3425 . 3435) (nil fontified nil 3423 . 3425) (nil fontified nil 3416 . 3423) (nil fontified nil 3414 . 3416) (nil fontified nil 3409 . 3414) (nil fontified nil 3407 . 3409) (nil fontified nil 3403 . 3407) (nil fontified nil 3397 . 3403) (nil fontified nil 3394 . 3397) (nil fontified nil 3387 . 3394) (nil fontified nil 3380 . 3387) (nil fontified nil 3377 . 3380) (nil fontified nil 3370 . 3377) (nil fontified nil 3369 . 3370) (nil fontified nil 3366 . 3369) (nil fontified nil 3341 . 3366) (nil fontified nil 3338 . 3341) (nil fontified nil 3337 . 3338) (nil fontified nil 3334 . 3337) (nil fontified nil 3323 . 3334) (nil fontified nil 3299 . 3323) (nil fontified nil 3268 . 3299) (nil fontified nil 3266 . 3268) (nil fontified nil 3264 . 3266) (nil fontified nil 3262 . 3264) (nil fontified nil 3260 . 3262) (nil fontified nil 3257 . 3260) (nil fontified nil 3254 . 3257) (nil fontified nil 3246 . 3254) (nil fontified nil 3245 . 3246) (nil fontified nil 3242 . 3245) (nil fontified nil 3217 . 3242) (nil fontified nil 3210 . 3217) (nil fontified nil 3207 . 3210) (nil fontified nil 3201 . 3207) (nil fontified nil 3200 . 3201) (nil fontified nil 3197 . 3200) (3197 . 4539)) nil (25996 60786 496587 0) 0 nil])
([nil nil ((4471 . 4472) (#("    " 0 4 (fontified t)) . 4471) (4371 . 4372) (#("    " 0 4 (fontified t)) . 4371) (4343 . 4344) (#("    " 0 4 (fontified t)) . 4343) (4337 . 4341) (4231 . 4232) (#("    " 0 4 (fontified t)) . 4231) (4179 . 4181) (#("            " 0 12 (fontified t)) . 4179) (4080 . 4082) (4030 . 4032) (#("            " 0 12 (fontified t)) . 4030) (3946 . 3948) (#("            " 0 12 (fontified t)) . 3946) (3944 . 3945) (#("    " 0 4 (fontified t)) . 3944) (3893 . 3894) (#("    " 0 4 (fontified t)) . 3893) (undo-tree-id239 . -4) (3838 . 3839) (#("    " 0 4 (fontified t)) . 3838) (undo-tree-id240 . -3) (3769 . 3770) (#("    " 0 4 (fontified t)) . 3769) (3734 . 3735) (#("    " 0 4 (fontified t)) . 3734) (3675 . 3676) (#("    " 0 4 (fontified t)) . 3675) (undo-tree-id241 . -2) (3580 . 3584) (3522 . 3526) (3439 . 3443) (3357 . 3358) (#("    " 0 4 (fontified t)) . 3357) (undo-tree-id242 . -4) (3328 . 3329) (#("    " 0 4 (fontified t)) . 3328) (undo-tree-id243 . -3) (3239 . 3240) (#("    " 0 4 (fontified t)) . 3239) (3197 . 3198) 3193) nil (25996 60786 496549 0) 0 nil])
([nil nil ((3161 . 3163)) nil (25996 60786 496524 0) 0 nil])
([nil nil ((#("?" 0 1 (face rust-question-mark fontified t)) . -4470) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) 4471 (t 25996 60786 506898 208000)) nil (25996 60792 877450 0) 0 nil])
([nil nil ((4470 . 4472)) nil (25996 60792 877442 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4471 4479 #s(yas--snippet nil nil #s(yas--exit 4479 nil) 11 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 4479 nil) 11 nil nil nil nil)) (4471 . 4479) (#("unwrap()$0" 0 10 (fontified nil)) . 4471) (4471 . 4481) (#("u" 0 1 (fontified nil)) . 4471) (4471 . 4472) (#("unwrap()" 0 8 (fontified nil)) . -4471) (4471 . 4479) (#("u" 0 1 (fontified t)) . -4471) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) 4472) nil (25996 60792 877437 0) 0 nil])
([nil nil ((3432 . 3438) (t 25996 60792 887936 581000)) nil (25996 60832 513672 0) 0 nil])
([nil nil ((3438 . 3439)) nil (25996 60832 513670 0) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -3438) (undo-tree-id395 . -1) 3439) nil (25996 60832 513669 0) 0 nil])
([nil nil ((3438 . 3440)) nil (25996 60832 513667 0) 0 nil])
([nil nil ((3438 . 3445) (#("ui" 0 2 (fontified nil)) . 3438) (3438 . 3440) (#("uistate" 0 7 (fontified nil)) . -3438) (3438 . 3445) (#("ui" 0 2 (fontified t)) . -3438) (undo-tree-id394 . -2) 3440) nil (25996 60832 513665 0) 0 nil])
([nil nil ((3445 . 3447)) nil (25996 60832 513662 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -3446) (undo-tree-id393 . -1) 3447) nil (25996 60832 513660 0) 0 nil])
([nil nil ((3446 . 3448)) nil (25996 60832 513658 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3453 3481 nil nil nil t #s(yas--exit 3482 nil))) #s(yas--exit 3482 nil) 12 nil #s(yas--field 1 3453 3481 nil nil nil t #s(yas--exit 3482 nil)) nil nil)) (3446 . 3455) (#("update(${1:f})$0" 0 16 (fontified nil)) . 3446) (3446 . 3462) (#("up" 0 2 (fontified nil)) . 3446) (3446 . 3448) (#("update(â€¦) (as SignalUpdate)" 0 27 (fontified nil)) . -3446) (3446 . 3473) (#("up" 0 2 (fontified t)) . -3446) (undo-tree-id391 . -1) (undo-tree-id392 . -2) 3448) nil (25996 60832 513656 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -3453) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) 3454) nil (25996 60832 513650 0) 0 nil])
([nil nil ((3453 . 3455)) nil (25996 60832 513646 0) 0 nil])
([nil nil ((3454 . 3459)) nil (25996 60832 513645 0) 0 nil])
([nil nil ((3460 . 3464)) nil (25996 60832 513644 0) 0 nil])
([nil nil ((3461 . 3466) (#("sta" 0 3 (fontified nil)) . 3461) (undo-tree-id383 . -3) (3461 . 3464) (#("state" 0 5 (fontified nil)) . -3461) (undo-tree-id384 . -5) (3461 . 3466) (#("sta" 0 3 (fontified t)) . -3461) (undo-tree-id385 . -3) (undo-tree-id386 . -3) (undo-tree-id387 . -3) 3464) nil (25996 60832 513643 0) 0 nil])
([nil nil ((3466 . 3467)) nil (25996 60832 513636 0) 0 nil])
([nil nil ((3467 . 3476) (#("mousedown" 0 9 (fontified nil)) . -3467) (undo-tree-id382 . -9) (3467 . 3476)) nil (25996 60832 513634 0) 0 nil])
([nil nil ((3476 . 3478)) nil (25996 60832 513632 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -3477) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) 3478) nil (25996 60832 513631 0) 0 nil])
([nil nil ((3477 . 3479)) nil (25996 60832 513626 0) 0 nil])
([nil nil ((3477 . 3484) (#("tr" 0 2 (fontified nil)) . 3477) (undo-tree-id357 . -2) (3467 . 3479) (#("tracing" 0 7 (fontified nil)) . -3467) (undo-tree-id358 . -7) (3467 . 3474) (#("mousedown=tr" 0 12 (fontified t)) . -3467) (undo-tree-id359 . -12) (undo-tree-id360 . -12) (undo-tree-id361 . -12) (undo-tree-id362 . -10) (undo-tree-id363 . -10) (undo-tree-id364 . -10) (undo-tree-id365 . -10) (undo-tree-id366 . -10) (undo-tree-id367 . -10) (undo-tree-id368 . -11) (undo-tree-id369 . -11) (undo-tree-id370 . -11) (undo-tree-id371 . -12) (undo-tree-id372 . -12) (undo-tree-id373 . -12) (undo-tree-id374 . -12) (undo-tree-id375 . -12) (undo-tree-id376 . -12) (undo-tree-id377 . -12) 3479) nil (25996 60832 513623 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -3479) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (#("c" 0 1 (fontified t)) . -3480) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (#("i" 0 1 (fontified t)) . -3481) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (#("n" 0 1 (fontified t)) . -3482) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (#("g" 0 1 (fontified t)) . -3483) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) 3484) nil (25996 60832 513592 0) 0 nil])
([nil nil ((3479 . 3481)) nil (25996 60832 513490 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3446 3482 #s(yas--snippet nil (#s(yas--field 1 3453 3481 nil nil nil t #s(yas--exit 3482 nil))) #s(yas--exit 3482 nil) 12 nil #s(yas--field 1 3453 3481 nil nil nil t #s(yas--exit 3482 nil)) nil nil))) nil (25996 60832 513489 0) 0 nil])
([nil nil ((3482 . 3483)) nil (25996 60832 513485 0) 0 nil])
([nil nil ((4552 . 4553) (#("	" 0 1 (fontified nil)) . 4551) (undo-tree-id507 . -1) (4550 . 4553) (t 25996 60832 524620 710000)) nil (25996 60936 723439 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 5019 . 5020) (nil fontified nil 5003 . 5020) (nil fontified nil 4996 . 5003) (nil fontified nil 4907 . 4996) (nil fontified nil 4900 . 4907) (nil fontified nil 4897 . 4900) (nil fontified nil 4896 . 4897) (nil fontified nil 4884 . 4896) (nil fontified nil 4883 . 4884) (nil fontified nil 4874 . 4883) (nil fontified nil 4867 . 4874) (nil fontified nil 4865 . 4867) (nil fontified nil 4854 . 4865) (nil fontified nil 4830 . 4854) (nil fontified nil 4827 . 4830) (nil fontified nil 4781 . 4827) (nil fontified nil 4770 . 4781) (nil fontified nil 4726 . 4770) (nil fontified nil 4722 . 4726) (nil fontified nil 4709 . 4722) (nil fontified nil 4708 . 4709) (nil fontified nil 4705 . 4708) (nil fontified nil 4692 . 4705) (nil fontified nil 4691 . 4692) (nil fontified nil 4678 . 4691) (nil fontified nil 4644 . 4678) (nil fontified nil 4633 . 4644) (nil fontified nil 4560 . 4633) (nil fontified nil 4553 . 4560) (4553 . 5020)) nil (25996 60936 723435 0) 0 nil])
([nil nil ((apply 27 4552 4993 undo--wrap-and-run-primitive-undo 4552 4993 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4972) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4879) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4849) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4839) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4815) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4761) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4716) (#<marker at 4626 in app.rs> . -3) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4630) (#<marker at 4626 in app.rs> . -2) (#<marker at 4626 in app.rs> . -1) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4553) 4552))) nil (25996 60936 723427 0) 0 nil])
([nil nil ((4980 . 4981) (#("    " 0 4 (fontified t)) . 4980) (4890 . 4891) (#("    " 0 4 (fontified t)) . 4890) (4863 . 4864) (#("    " 0 4 (fontified t)) . 4863) (4857 . 4861) (4823 . 4825) (4773 . 4777) (4717 . 4721) (4634 . 4638) (#("    " 0 4 (fontified t)) . -4553) 4552) nil (25996 60936 723425 0) 0 nil])
([nil nil ((#("		//	    target.remove();" 0 2 (fontified t) 2 9 (face font-lock-comment-delimiter-face fontified t) 9 25 (face font-lock-comment-face fontified t)) . 4823)) nil (25996 60936 723421 0) 0 nil])
([nil nil ((#("      let target = event.target().unwrap().dyn_into::<web_sys::Element>().unwrap();
	    logging::log!(\"{:?}\", target.class_name());
            if target.class_name().as_str() == \"ripple\" {

            }" 0 6 (fontified t) 6 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 16 (face font-lock-variable-name-face fontified t) 16 40 (fontified t) 40 53 (fontified t) 53 54 (fontified t) 54 61 (face font-lock-constant-face fontified t) 61 63 (fontified t) 63 67 (face font-lock-type-face fontified t) 67 70 (face font-lock-type-face fontified t) 70 71 (fontified t) 71 84 (fontified t) 84 89 (fontified t) 89 96 (face font-lock-constant-face fontified t) 96 98 (fontified t) 98 102 (face font-lock-preprocessor-face fontified t) 102 103 (fontified t) 103 109 (face font-lock-string-face fontified t) 109 133 (fontified t) 133 145 (fontified t) 145 147 (face font-lock-keyword-face fontified t) 147 180 (fontified t) 180 188 (face font-lock-string-face fontified t) 188 191 (fontified t) 191 192 (fontified t) 192 204 (fontified t) 204 205 (fontified t)) . 4632) (undo-tree-id506 . -205)) nil (25996 60936 723419 0) 0 nil])
([nil nil ((4626 . 4631) (#("      " 0 6 (fontified t)) . 4626) (undo-tree-id503 . -6) (undo-tree-id504 . -6) (undo-tree-id505 . -6) 4632) nil (25996 60936 723417 0) 0 nil])
([nil nil ((#("?" 0 1 (face rust-question-mark fontified t)) . -4746) (undo-tree-id501 . -1) (undo-tree-id502 . -1) 4747) nil (25996 60936 723412 0) 0 nil])
([nil nil ((4746 . 4748)) nil (25996 60936 723409 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4747 4755 #s(yas--snippet nil nil #s(yas--exit 4755 nil) 13 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 4755 nil) 13 nil nil nil nil)) (4747 . 4755) (#("unwrap()$0" 0 10 (fontified nil)) . 4747) (4747 . 4757) (#("u" 0 1 (fontified nil)) . 4747) (4747 . 4748) (#("unwrap()" 0 8 (fontified nil)) . -4747) (4747 . 4755) (#("u" 0 1 (fontified t)) . -4747) (undo-tree-id500 . -1) 4748) nil (25996 60936 723407 0) 0 nil])
([nil nil ((4631 . 4633)) nil (25996 60936 723402 0) 0 nil])
([nil nil ((4631 . 4638) (#("ui" 0 2 (fontified nil)) . 4631) (4631 . 4633) (#("uistate" 0 7 (fontified nil)) . -4631) (4631 . 4638) (#("ui" 0 2 (fontified t)) . -4631) (undo-tree-id499 . -2) 4633) nil (25996 60936 723401 0) 0 nil])
([nil nil ((4638 . 4640)) nil (25996 60936 723397 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 4646 4675 nil nil nil t #s(yas--exit 4676 nil))) #s(yas--exit 4676 nil) 14 nil #s(yas--field 1 4646 4675 nil nil nil t #s(yas--exit 4676 nil)) nil nil)) (4639 . 4648) (#("update(${1:f})$0" 0 16 (fontified nil)) . 4639) (4639 . 4655) (#("u" 0 1 (fontified nil)) . 4639) (4639 . 4640) (#("update(â€¦) (as SignalUpdate)" 0 27 (fontified nil)) . -4639) (4639 . 4666) (#("u" 0 1 (fontified t)) . -4639) (undo-tree-id498 . -1) 4640) nil (25996 60936 723395 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -4646) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) 4647) nil (25996 60936 723391 0) 0 nil])
([nil nil ((4646 . 4650)) nil (25996 60936 723386 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -4646) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (#("o" 0 1 (fontified t)) . -4647) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (#("v" 0 1 (fontified t)) . -4648) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -4649) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) 4650) nil (25996 60936 723385 0) 0 nil])
([nil nil ((4646 . 4648)) nil (25996 60936 723371 0) 0 nil])
([nil nil ((4647 . 4652)) nil (25996 60936 723370 0) 0 nil])
([nil nil ((4653 . 4659)) nil (25996 60936 723369 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4656) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (#("e" 0 1 (fontified t)) . -4657) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (#("t" 0 1 (fontified t)) . -4658) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) 4659) nil (25996 60936 723366 0) 0 nil])
([nil nil ((4656 . 4657)) nil (25996 60936 723332 0) 0 nil])
([nil nil ((4654 . 4659) (#("stt" 0 3 (fontified nil)) . 4654) (undo-tree-id424 . -3) (4654 . 4657) (#("state" 0 5 (fontified nil)) . -4654) (undo-tree-id425 . -5) (4654 . 4659) (#("stt" 0 3 (fontified t)) . -4654) (undo-tree-id426 . -3) (undo-tree-id427 . -3) (undo-tree-id428 . -3) (undo-tree-id429 . -2) (undo-tree-id430 . -2) (undo-tree-id431 . -2) (undo-tree-id432 . -2) (undo-tree-id433 . -2) (undo-tree-id434 . -2) (undo-tree-id435 . -2) (undo-tree-id436 . -2) (undo-tree-id437 . -2) (undo-tree-id438 . -2) (undo-tree-id439 . -2) (undo-tree-id440 . -2) (undo-tree-id441 . -2) (undo-tree-id442 . -2) (undo-tree-id443 . -3) (undo-tree-id444 . -3) (undo-tree-id445 . -3) (undo-tree-id446 . -3) (undo-tree-id447 . -3) (undo-tree-id448 . -3) 4657) nil (25996 60936 723329 0) 0 nil])
([nil nil ((4659 . 4660)) nil (25996 60936 723304 0) 0 nil])
([nil nil ((4660 . 4661)) nil (25996 60936 723303 0) 0 nil])
([nil nil ((4660 . 4669) (#("m" 0 1 (fontified nil)) . 4660) (undo-tree-id415 . -1) (4660 . 4661) (#("mousedown" 0 9 (fontified nil)) . -4660) (undo-tree-id416 . -9) (4660 . 4669) (#("m" 0 1 (fontified t)) . -4660) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) 4661) nil (25996 60936 723301 0) 0 nil])
([nil nil ((4669 . 4672)) nil (25996 60936 723290 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4670 4675 #s(yas--snippet nil nil nil 15 nil nil #s(yas--field 1 4646 4675 nil nil nil t #s(yas--exit 4676 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 15 nil nil #s(yas--field 1 4646 4675 nil nil nil t #s(yas--exit 4676 nil)) nil)) (4670 . 4675) (#("false" 0 5 (fontified nil)) . 4670) (undo-tree-id396 . -5) (4670 . 4675) (#("fa" 0 2 (fontified nil)) . 4670) (undo-tree-id397 . -2) (4660 . 4672) (#("false" 0 5 (fontified nil)) . -4660) (undo-tree-id398 . -5) (4660 . 4665) (#("mousedown=fa" 0 12 (fontified t)) . -4660) (undo-tree-id399 . -12) (undo-tree-id400 . -12) (undo-tree-id401 . -12) (undo-tree-id402 . -9) (undo-tree-id403 . -9) (undo-tree-id404 . -10) (undo-tree-id405 . -10) (undo-tree-id406 . -10) (undo-tree-id407 . -11) (undo-tree-id408 . -11) (undo-tree-id409 . -11) (undo-tree-id410 . -11) (undo-tree-id411 . -12) (undo-tree-id412 . -12) (undo-tree-id413 . -12) (undo-tree-id414 . -12) 4672) nil (25996 60936 723286 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4639 4676 #s(yas--snippet nil (#s(yas--field 1 4646 4675 nil nil nil t #s(yas--exit 4676 nil))) #s(yas--exit 4676 nil) 14 nil #s(yas--field 1 4646 4675 nil nil nil t #s(yas--exit 4676 nil)) nil nil))) nil (25996 60936 723256 0) 0 nil])
([nil current ((4676 . 4677)) nil (25996 60936 723252 0) 0 nil])
nil
