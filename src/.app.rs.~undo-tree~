(undo-tree-save-format-version . 1)
"938a188a4d40ceaaeb1881643342f1db9cec28ee"
[nil nil nil nil (25977 33628 43809 0) 0 nil]
([nil nil ((3070 . 3074) (t 25973 33793 884703 701000)) nil (25977 33628 43808 0) 0 nil])
([nil nil ((3074 . 3078)) nil (25977 33628 43807 0) 0 nil])
([nil nil ((3074 . 3081) (#("logg" 0 4 (fontified nil)) . 3074) (3074 . 3078) (#("logging" 0 7 (fontified nil)) . -3074) (3074 . 3081) (#("logg" 0 4 (fontified t)) . -3074) (undo-tree-id35 . -4) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -4) (undo-tree-id46 . -4) (undo-tree-id47 . -4) 3078) nil (25977 33628 43804 0) 0 nil])
([nil nil ((3081 . 3086)) nil (25977 33628 43789 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3083 3089 #s(yas--snippet nil nil #s(yas--exit 3088 nil) 6 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3088 nil) 6 nil nil nil nil)) (3083 . 3089) (#("log!($0)" 0 8 (fontified nil)) . 3083) (3083 . 3091) (#("log" 0 3 (fontified nil)) . 3083) (3083 . 3086) (#("log!(â€¦)" 0 7 (fontified nil)) . -3083) (3083 . 3090) (#("log" 0 3 (fontified t)) . -3083) (undo-tree-id28 . -3) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -3) (undo-tree-id34 . -3) 3086) nil (25977 33628 43787 0) 0 nil])
([nil nil ((3088 . 3090)) nil (25977 33628 43776 0) 0 nil])
([nil nil ((3089 . 3091)) nil (25977 33628 43775 0) 0 nil])
([nil nil ((3090 . 3091)) nil (25977 33628 43774 0) 0 nil])
([nil nil ((#(":" 0 1 (face font-lock-string-face fontified t)) . -3090) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 3091) nil (25977 33628 43773 0) 0 nil])
([nil nil ((3092 . 3098)) nil (25977 33628 43763 0) 0 nil])
([nil nil ((2229 . 2230) (2237 . 2247) (3094 . 3094) (3094 . 3101) (#("KeyC" 0 4 (fontified nil)) . 3094) (3094 . 3098) (#("KeyCode (use crate::keyboard::KeyCode)" 0 38 (fontified nil)) . -3094) (3094 . 3132) (#("KeyC" 0 4 (face font-lock-type-face fontified t)) . -3094) (undo-tree-id6 . -4) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -3) (undo-tree-id13 . -3) (undo-tree-id14 . -3) (undo-tree-id15 . -3) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) 3098) nil (25977 33628 43761 0) 0 nil])
([nil nil ((3112 . 3114)) nil (25977 33628 43743 0) 0 nil])
([nil nil ((3114 . 3115)) nil (25977 33628 43742 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3114 3115 #s(yas--snippet nil nil #s(yas--exit 3115 nil) 7 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3115 nil) 7 nil nil nil nil)) (3114 . 3115) (#("A$0" 0 3 (fontified nil)) . 3114) (3114 . 3117) (#("A" 0 1 (fontified nil)) . 3114) (3114 . 3115) (#("A" 0 1 (face font-lock-type-face fontified t)) . -3114) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 3115) nil (25977 33628 43739 0) 0 nil])
([nil nil ((3116 . 3117)) nil (25977 33628 43702 0) 0 nil])
([nil nil ((3117 . 3122) (t 25977 33628 54227 481000)) nil (25977 33679 790828 0) 0 nil])
([nil nil ((3122 . 3126)) nil (25977 33679 790826 0) 0 nil])
([nil nil ((3122 . 3129) (#("logg" 0 4 (fontified nil)) . 3122) (3122 . 3126) (#("logging" 0 7 (fontified nil)) . -3122) (3122 . 3129) (#("logg" 0 4 (fontified t)) . -3122) (undo-tree-id166 . -4) (undo-tree-id167 . -1) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -3) (undo-tree-id171 . -3) (undo-tree-id172 . -4) (undo-tree-id173 . -4) 3126) nil (25977 33679 790825 0) 0 nil])
([nil nil ((3129 . 3131)) nil (25977 33679 790814 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -3128) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#(":" 0 1 (fontified t)) . -3129) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#(":" 0 1 (fontified t)) . -3130) (undo-tree-id165 . -1) 3131) nil (25977 33679 790813 0) 0 nil])
([nil nil ((#("    loggin" 0 4 (fontified t) 4 10 (fontified t)) . 3118) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -4) (undo-tree-id145 . -4) (undo-tree-id146 . -10) (undo-tree-id147 . -10) (undo-tree-id148 . -10) (undo-tree-id149 . -10) (undo-tree-id150 . -10) (undo-tree-id151 . -10) (undo-tree-id152 . -10) (undo-tree-id153 . -10)) nil (25977 33679 790798 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3117) (undo-tree-id102 . -1) (undo-tree-id103 . 1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) 3118) nil (25977 33679 790775 0) 0 nil])
([nil nil ((3100 . 3107)) nil (25977 33679 790737 0) 0 nil])
([nil nil ((3109 . 3111)) nil (25977 33679 790736 0) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-string-face fontified t)) . -3109) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -3110) (undo-tree-id100 . -1) (undo-tree-id101 . -1) 3111) nil (25977 33679 790735 0) 0 nil])
([nil nil ((3109 . 3116)) nil (25977 33679 790723 0) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . -3115) (undo-tree-id94 . -1) (undo-tree-id95 . -1) 3116) nil (25977 33679 790722 0) 0 nil])
([nil nil ((3115 . 3124)) nil (25977 33679 790718 0) 0 nil])
([nil nil ((3137 . 3142)) nil (25977 33679 790717 0) 0 nil])
([nil nil ((3139 . 3146) (#("Key" 0 3 (fontified nil)) . 3139) (3139 . 3142) (#("KeyCode" 0 7 (fontified nil)) . -3139) (3139 . 3146) (#("Key" 0 3 (face font-lock-type-face fontified t)) . -3139) (undo-tree-id86 . -3) (undo-tree-id87 . -1) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -3) (undo-tree-id91 . -3) (undo-tree-id92 . -3) (undo-tree-id93 . -3) 3142) nil (25977 33679 790715 0) 0 nil])
([nil nil ((3146 . 3156)) nil (25977 33679 790705 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -3153) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("3" 0 1 (fontified t)) . -3154) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("2" 0 1 (face font-lock-type-face fontified t)) . -3155) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 3156) nil (25977 33679 790702 0) 0 nil])
([nil nil ((3153 . 3156)) nil (25977 33679 790673 0) 0 nil])
([nil nil ((3153 . 3156) (#("i32" 0 3 (fontified nil)) . 3153) (3153 . 3156) (#("i32" 0 3 (face font-lock-type-face fontified t)) . -3153) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -1) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) 3156) nil (25977 33679 790668 0) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-type-face fontified t)) . -3136) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) 3137 (t 25977 33679 801887 6000)) nil (25977 33695 699551 0) 0 nil])
([nil nil ((3136 . 3138)) nil (25977 33695 699536 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3136 3144 #s(yas--snippet nil nil #s(yas--exit 3144 nil) 8 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3144 nil) 8 nil nil nil nil)) (3136 . 3144) (#("LEFT_ALT$0" 0 10 (fontified nil)) . 3136) (3136 . 3146) (#("Le" 0 2 (fontified nil)) . 3136) (3136 . 3138) (#("LEFT_ALT" 0 8 (fontified nil)) . -3136) (3136 . 3144) (#("Le" 0 2 (face font-lock-type-face fontified t)) . -3136) (undo-tree-id188 . -2) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) 3138) nil (25977 33695 699534 0) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-type-face fontified t)) . -3155) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) 3156) nil (25977 33695 699521 0) 0 nil])
([nil nil ((3155 . 3157)) nil (25977 33695 699513 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3155 3163 #s(yas--snippet nil nil #s(yas--exit 3163 nil) 9 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3163 nil) 9 nil nil nil nil)) (3155 . 3163) (#("LEFT_ALT$0" 0 10 (fontified nil)) . 3155) (3155 . 3165) (#("Le" 0 2 (fontified nil)) . 3155) (3155 . 3157) (#("LEFT_ALT" 0 8 (fontified nil)) . -3155) (3155 . 3163) (#("Le" 0 2 (face font-lock-type-face fontified t)) . -3155) (undo-tree-id174 . -2) (undo-tree-id175 . -1) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -2) (undo-tree-id181 . -2) 3157) nil (25977 33695 699505 0) 0 nil])
([nil nil ((#("    logging::log!(\"Key is {}, Keycode is {}\", KeyCode::LEFT_ALT, KeyCode::LEFT_ALT as i32);" 0 4 (fontified t) 4 11 (face font-lock-constant-face fontified t) 11 13 (fontified t) 13 17 (face font-lock-preprocessor-face fontified t) 17 18 (fontified t) 18 44 (face font-lock-string-face fontified t) 44 46 (fontified t) 46 53 (face font-lock-type-face fontified t) 53 55 (fontified t) 55 63 (face font-lock-type-face fontified t) 63 65 (fontified t) 65 72 (face font-lock-type-face fontified t) 72 74 (fontified t) 74 82 (face font-lock-type-face fontified t) 82 83 (fontified t) 83 85 (face font-lock-keyword-face fontified t) 85 86 (fontified t) 86 89 (face font-lock-type-face fontified t) 89 91 (fontified t)) . 3081) (undo-tree-id214 . -18) (undo-tree-id215 . -19) (undo-tree-id216 . -55) (undo-tree-id217 . -55) (undo-tree-id218 . -55) (undo-tree-id219 . -55) (undo-tree-id220 . -55) (undo-tree-id221 . -55) (undo-tree-id222 . -55) (undo-tree-id223 . -55) (undo-tree-id224 . -55) (undo-tree-id225 . -55) (undo-tree-id226 . -55) (undo-tree-id227 . -55) (undo-tree-id228 . -55) (undo-tree-id229 . -55) (undo-tree-id230 . -55) (undo-tree-id231 . -55) (undo-tree-id232 . -55) (undo-tree-id233 . -55) (undo-tree-id234 . -55) (undo-tree-id235 . -55) (undo-tree-id236 . -55) (undo-tree-id237 . -83) (undo-tree-id238 . -83) (undo-tree-id239 . -74) (undo-tree-id240 . -74) (undo-tree-id241 . -74) (undo-tree-id242 . -74) (undo-tree-id243 . -74) (undo-tree-id244 . -74) (undo-tree-id245 . -74) (undo-tree-id246 . -74) (undo-tree-id247 . -74) (undo-tree-id248 . -74) (undo-tree-id249 . -74) (undo-tree-id250 . -74) (undo-tree-id251 . -82) (undo-tree-id252 . -82) (undo-tree-id253 . -82) (undo-tree-id254 . -82) (undo-tree-id255 . -82) (undo-tree-id256 . -82) (undo-tree-id257 . -82) (undo-tree-id258 . -82) (undo-tree-id259 . -82) (undo-tree-id260 . -82) (undo-tree-id261 . -82) (undo-tree-id262 . -82) (undo-tree-id263 . -82) (undo-tree-id264 . -82) (undo-tree-id265 . -82) (undo-tree-id266 . -82) (undo-tree-id267 . -82) (undo-tree-id268 . -82) (undo-tree-id269 . -82) (undo-tree-id270 . -82) (undo-tree-id271 . -82) (undo-tree-id272 . -82) (undo-tree-id273 . -82) (undo-tree-id274 . -82) (undo-tree-id275 . -82) (undo-tree-id276 . -82) (undo-tree-id277 . -82) (undo-tree-id278 . -82) (undo-tree-id279 . -82) (undo-tree-id280 . -82) (undo-tree-id281 . -82) (undo-tree-id282 . -82) (undo-tree-id283 . -82) (undo-tree-id284 . -82) (undo-tree-id285 . -91) (undo-tree-id286 . -91) (undo-tree-id287 . -91) (undo-tree-id288 . -91) (undo-tree-id289 . -91) (undo-tree-id290 . -91) (undo-tree-id291 . -91) (undo-tree-id292 . -91) (undo-tree-id293 . -91) (undo-tree-id294 . -91) (undo-tree-id295 . -91) (undo-tree-id296 . -91) (undo-tree-id297 . -91) (t 25977 33695 710992 835000)) nil (25977 33704 577204 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3081) (undo-tree-id213 . -1)) nil (25977 33704 577106 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3081) (undo-tree-id212 . -1)) nil (25977 33704 577101 0) 0 nil])
([nil nil ((744 . 746) (t 25977 33704 587791 463000)) nil (25977 33793 333259 0) 0 nil])
([nil nil ((1283 . 1285) (t 25977 33793 343935 141000)) nil (25977 33797 172212 0) 0 nil])
([nil nil ((836 . 843) (t 25977 33797 182161 225000)) nil (25977 36224 394319 0) 0 nil])
([nil nil ((840 . 846) (#("tar" 0 3 (fontified nil)) . 840) (840 . 843) (#("target" 0 6 (fontified nil)) . -840) (840 . 846) (#("tar" 0 3 (fontified t)) . -840) (undo-tree-id317 . -3) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -2) (undo-tree-id322 . -3) (undo-tree-id323 . -3) (undo-tree-id324 . -3) 843) nil (25977 36224 394316 0) 0 nil])
([nil nil ((846 . 850)) nil (25977 36224 394306 0) 0 nil])
([nil nil ((apply yas--snippet-revive 847 859 #s(yas--snippet nil nil #s(yas--exit 859 nil) 19 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 859 nil) 19 nil nil nil nil)) (847 . 859) (#("class_list()$0" 0 14 (fontified nil)) . 847) (847 . 861) (#("cla" 0 3 (fontified nil)) . 847) (847 . 850) (#("class_list()" 0 12 (fontified nil)) . -847) (847 . 859) (#("cla" 0 3 (fontified t)) . -847) (undo-tree-id308 . -3) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -2) (undo-tree-id312 . -2) (undo-tree-id313 . -3) (undo-tree-id314 . -3) (undo-tree-id315 . -3) (undo-tree-id316 . -3) 850) nil (25977 36224 394303 0) 0 nil])
([nil nil ((859 . 863)) nil (25977 36224 394291 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 869 884 nil nil nil t #s(yas--exit 885 nil))) #s(yas--exit 885 nil) 20 nil #s(yas--field 1 869 884 nil nil nil t #s(yas--exit 885 nil)) nil nil)) (860 . 875) (#("contains(${1:token})$0" 0 22 (fontified nil)) . 860) (860 . 882) (#("con" 0 3 (fontified nil)) . 860) (860 . 863) (#("contains(â€¦)" 0 11 (fontified nil)) . -860) (860 . 871) (#("con" 0 3 (fontified t)) . -860) (undo-tree-id299 . -3) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -2) (undo-tree-id303 . -2) (undo-tree-id304 . -3) (undo-tree-id305 . -3) (undo-tree-id306 . -3) (undo-tree-id307 . -3) 863) nil (25977 36224 394288 0) 0 nil])
([nil nil ((870 . 871) (#("token" 0 5 (fontified nil)) . 870) (undo-tree-id298 . -5) (869 . 870)) nil (25977 36224 394274 0) 0 nil])
([nil nil ((870 . 876)) nil (25977 36224 394263 0) 0 nil])
([nil nil ((876 . 883)) nil (25977 36224 394258 0) 0 nil])
([nil nil ((apply yas--snippet-revive 860 885 #s(yas--snippet nil (#s(yas--field 1 869 884 nil nil nil t #s(yas--exit 885 nil))) #s(yas--exit 885 nil) 20 nil #s(yas--field 1 869 884 nil nil nil t #s(yas--exit 885 nil)) nil nil))) nil (25980 22104 676088 0) 0 nil])
([nil nil ((#("view}" 0 5 (fontified t)) . -3571) (undo-tree-id536 . -5) (undo-tree-id537 . -5) (undo-tree-id538 . -5) (undo-tree-id539 . -5) (undo-tree-id540 . -5) (undo-tree-id541 . -5) (undo-tree-id542 . -5) (undo-tree-id543 . -5) (undo-tree-id544 . -5) (undo-tree-id545 . -5) (undo-tree-id546 . -5) (undo-tree-id547 . -5) (undo-tree-id548 . -5) (undo-tree-id549 . -5) (undo-tree-id550 . -5) (undo-tree-id551 . -5) (undo-tree-id552 . -5) (undo-tree-id553 . -5) (undo-tree-id554 . -5) 3576 (t 25977 36224 405207 54000)) nil (25980 22104 676086 0) 0 nil])
([nil nil ((#("rgb " 0 4 (fontified t)) . -3567) (undo-tree-id510 . -4) (undo-tree-id511 . -4) (undo-tree-id512 . -4) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -4) (undo-tree-id516 . -4) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) (undo-tree-id521 . -4) (undo-tree-id522 . -4) (undo-tree-id523 . -4) (undo-tree-id524 . -4) (undo-tree-id525 . -4) (undo-tree-id526 . -4) (undo-tree-id527 . -4) (undo-tree-id528 . -4) (undo-tree-id529 . -4) (undo-tree-id530 . -4) (undo-tree-id531 . -4) (undo-tree-id532 . -4) (undo-tree-id533 . -4) (undo-tree-id534 . -4) (undo-tree-id535 . -4) 3571) nil (25980 22104 676062 0) 0 nil])
([nil nil ((#("view! {" 0 5 (face font-lock-preprocessor-face fontified t) 5 7 (fontified t)) . -3560) (undo-tree-id481 . -7) (undo-tree-id482 . -7) (undo-tree-id483 . -7) (undo-tree-id484 . -7) (undo-tree-id485 . -7) (undo-tree-id486 . -7) (undo-tree-id487 . -7) (undo-tree-id488 . -7) (undo-tree-id489 . -7) (undo-tree-id490 . -7) (undo-tree-id491 . -7) (undo-tree-id492 . -7) (undo-tree-id493 . -7) (undo-tree-id494 . -7) (undo-tree-id495 . -7) (undo-tree-id496 . -7) (undo-tree-id497 . -7) (undo-tree-id498 . -7) (undo-tree-id499 . -7) (undo-tree-id500 . -7) (undo-tree-id501 . -7) (undo-tree-id502 . -7) (undo-tree-id503 . -7) (undo-tree-id504 . -7) (undo-tree-id505 . -7) (undo-tree-id506 . -7) (undo-tree-id507 . -7) (undo-tree-id508 . -7) (undo-tree-id509 . -7) 3567) nil (25980 22104 676034 0) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -3557) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (#("|" 0 1 (fontified t)) . -3558) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (#(" " 0 1 (fontified t)) . -3559) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) 3560) nil (25980 22104 675990 0) 0 nil])
([nil nil ((3557 . 3559)) nil (25980 22104 675879 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3557 3562 #s(yas--snippet nil nil #s(yas--exit 3562 nil) 87 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3562 nil) 87 nil nil nil nil)) (3557 . 3562) (#("Rgb()$0" 0 7 (fontified nil)) . 3557) (3557 . 3564) (#("Rg" 0 2 (fontified nil)) . 3557) (3552 . 3559) (#("Rgb()" 0 5 (fontified nil)) . -3552) (3552 . 3557) (#("view=Rg" 0 7 (fontified t)) . -3552) (undo-tree-id334 . -5) (undo-tree-id335 . -7) (undo-tree-id336 . -5) (undo-tree-id337 . -5) (undo-tree-id338 . -5) (undo-tree-id339 . -5) (undo-tree-id340 . -5) (undo-tree-id341 . -5) (undo-tree-id342 . -5) (undo-tree-id343 . -5) (undo-tree-id344 . -5) (undo-tree-id345 . -5) (undo-tree-id346 . -5) (undo-tree-id347 . -5) (undo-tree-id348 . -5) (undo-tree-id349 . -5) (undo-tree-id350 . -5) (undo-tree-id351 . -5) (undo-tree-id352 . -5) (undo-tree-id353 . -5) (undo-tree-id354 . -5) (undo-tree-id355 . -5) (undo-tree-id356 . -5) (undo-tree-id357 . -5) (undo-tree-id358 . -5) (undo-tree-id359 . -5) (undo-tree-id360 . -5) (undo-tree-id361 . -5) (undo-tree-id362 . -5) (undo-tree-id363 . -5) (undo-tree-id364 . -5) (undo-tree-id365 . -5) (undo-tree-id366 . -5) (undo-tree-id367 . -5) (undo-tree-id368 . -5) (undo-tree-id369 . -5) (undo-tree-id370 . -5) (undo-tree-id371 . -6) (undo-tree-id372 . -7) (undo-tree-id373 . -7) (undo-tree-id374 . -7) (undo-tree-id375 . -7) 3559) nil (25980 22104 675875 0) 0 nil])
([nil current ((#("(" 0 1 (fontified t)) . -3560) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (#(")" 0 1 (fontified t)) . -3561) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) 3562) nil (25980 22104 675829 0) 0 nil])
nil
