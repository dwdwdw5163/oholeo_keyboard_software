(undo-tree-save-format-version . 1)
"0c2d3940da7e4991b28e781dd1c621dc90281504"
[nil nil nil nil (25977 33628 43809 0) 0 nil]
([nil nil ((3070 . 3074) (t 25973 33793 884703 701000)) nil (25977 33628 43808 0) 0 nil])
([nil nil ((3074 . 3078)) nil (25977 33628 43807 0) 0 nil])
([nil nil ((3074 . 3081) (#("logg" 0 4 (fontified nil)) . 3074) (3074 . 3078) (#("logging" 0 7 (fontified nil)) . -3074) (3074 . 3081) (#("logg" 0 4 (fontified t)) . -3074) (undo-tree-id35 . -4) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -4) (undo-tree-id46 . -4) (undo-tree-id47 . -4) 3078) nil (25977 33628 43804 0) 0 nil])
([nil nil ((3081 . 3086)) nil (25977 33628 43789 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3083 3089 #s(yas--snippet nil nil #s(yas--exit 3088 nil) 6 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3088 nil) 6 nil nil nil nil)) (3083 . 3089) (#("log!($0)" 0 8 (fontified nil)) . 3083) (3083 . 3091) (#("log" 0 3 (fontified nil)) . 3083) (3083 . 3086) (#("log!(â€¦)" 0 7 (fontified nil)) . -3083) (3083 . 3090) (#("log" 0 3 (fontified t)) . -3083) (undo-tree-id28 . -3) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -3) (undo-tree-id34 . -3) 3086) nil (25977 33628 43787 0) 0 nil])
([nil nil ((3088 . 3090)) nil (25977 33628 43776 0) 0 nil])
([nil nil ((3089 . 3091)) nil (25977 33628 43775 0) 0 nil])
([nil nil ((3090 . 3091)) nil (25977 33628 43774 0) 0 nil])
([nil nil ((#(":" 0 1 (face font-lock-string-face fontified t)) . -3090) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 3091) nil (25977 33628 43773 0) 0 nil])
([nil nil ((3092 . 3098)) nil (25977 33628 43763 0) 0 nil])
([nil nil ((2229 . 2230) (2237 . 2247) (3094 . 3094) (3094 . 3101) (#("KeyC" 0 4 (fontified nil)) . 3094) (3094 . 3098) (#("KeyCode (use crate::keyboard::KeyCode)" 0 38 (fontified nil)) . -3094) (3094 . 3132) (#("KeyC" 0 4 (face font-lock-type-face fontified t)) . -3094) (undo-tree-id6 . -4) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -3) (undo-tree-id13 . -3) (undo-tree-id14 . -3) (undo-tree-id15 . -3) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) 3098) nil (25977 33628 43761 0) 0 nil])
([nil nil ((3112 . 3114)) nil (25977 33628 43743 0) 0 nil])
([nil nil ((3114 . 3115)) nil (25977 33628 43742 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3114 3115 #s(yas--snippet nil nil #s(yas--exit 3115 nil) 7 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3115 nil) 7 nil nil nil nil)) (3114 . 3115) (#("A$0" 0 3 (fontified nil)) . 3114) (3114 . 3117) (#("A" 0 1 (fontified nil)) . 3114) (3114 . 3115) (#("A" 0 1 (face font-lock-type-face fontified t)) . -3114) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 3115) nil (25977 33628 43739 0) 0 nil])
([nil nil ((3116 . 3117)) nil (25977 33628 43702 0) 0 nil])
([nil nil ((3117 . 3122) (t 25977 33628 54227 481000)) nil (25977 33679 790828 0) 0 nil])
([nil nil ((3122 . 3126)) nil (25977 33679 790826 0) 0 nil])
([nil nil ((3122 . 3129) (#("logg" 0 4 (fontified nil)) . 3122) (3122 . 3126) (#("logging" 0 7 (fontified nil)) . -3122) (3122 . 3129) (#("logg" 0 4 (fontified t)) . -3122) (undo-tree-id166 . -4) (undo-tree-id167 . -1) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -3) (undo-tree-id171 . -3) (undo-tree-id172 . -4) (undo-tree-id173 . -4) 3126) nil (25977 33679 790825 0) 0 nil])
([nil nil ((3129 . 3131)) nil (25977 33679 790814 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -3128) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#(":" 0 1 (fontified t)) . -3129) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#(":" 0 1 (fontified t)) . -3130) (undo-tree-id165 . -1) 3131) nil (25977 33679 790813 0) 0 nil])
([nil nil ((#("    loggin" 0 4 (fontified t) 4 10 (fontified t)) . 3118) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -4) (undo-tree-id145 . -4) (undo-tree-id146 . -10) (undo-tree-id147 . -10) (undo-tree-id148 . -10) (undo-tree-id149 . -10) (undo-tree-id150 . -10) (undo-tree-id151 . -10) (undo-tree-id152 . -10) (undo-tree-id153 . -10)) nil (25977 33679 790798 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3117) (undo-tree-id102 . -1) (undo-tree-id103 . 1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) 3118) nil (25977 33679 790775 0) 0 nil])
([nil nil ((3100 . 3107)) nil (25977 33679 790737 0) 0 nil])
([nil nil ((3109 . 3111)) nil (25977 33679 790736 0) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-string-face fontified t)) . -3109) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -3110) (undo-tree-id100 . -1) (undo-tree-id101 . -1) 3111) nil (25977 33679 790735 0) 0 nil])
([nil nil ((3109 . 3116)) nil (25977 33679 790723 0) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . -3115) (undo-tree-id94 . -1) (undo-tree-id95 . -1) 3116) nil (25977 33679 790722 0) 0 nil])
([nil nil ((3115 . 3124)) nil (25977 33679 790718 0) 0 nil])
([nil nil ((3137 . 3142)) nil (25977 33679 790717 0) 0 nil])
([nil nil ((3139 . 3146) (#("Key" 0 3 (fontified nil)) . 3139) (3139 . 3142) (#("KeyCode" 0 7 (fontified nil)) . -3139) (3139 . 3146) (#("Key" 0 3 (face font-lock-type-face fontified t)) . -3139) (undo-tree-id86 . -3) (undo-tree-id87 . -1) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -3) (undo-tree-id91 . -3) (undo-tree-id92 . -3) (undo-tree-id93 . -3) 3142) nil (25977 33679 790715 0) 0 nil])
([nil nil ((3146 . 3156)) nil (25977 33679 790705 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -3153) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("3" 0 1 (fontified t)) . -3154) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("2" 0 1 (face font-lock-type-face fontified t)) . -3155) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 3156) nil (25977 33679 790702 0) 0 nil])
([nil nil ((3153 . 3156)) nil (25977 33679 790673 0) 0 nil])
([nil nil ((3153 . 3156) (#("i32" 0 3 (fontified nil)) . 3153) (3153 . 3156) (#("i32" 0 3 (face font-lock-type-face fontified t)) . -3153) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -1) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) 3156) nil (25977 33679 790668 0) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-type-face fontified t)) . -3136) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) 3137 (t 25977 33679 801887 6000)) nil (25977 33695 699551 0) 0 nil])
([nil nil ((3136 . 3138)) nil (25977 33695 699536 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3136 3144 #s(yas--snippet nil nil #s(yas--exit 3144 nil) 8 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3144 nil) 8 nil nil nil nil)) (3136 . 3144) (#("LEFT_ALT$0" 0 10 (fontified nil)) . 3136) (3136 . 3146) (#("Le" 0 2 (fontified nil)) . 3136) (3136 . 3138) (#("LEFT_ALT" 0 8 (fontified nil)) . -3136) (3136 . 3144) (#("Le" 0 2 (face font-lock-type-face fontified t)) . -3136) (undo-tree-id188 . -2) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) 3138) nil (25977 33695 699534 0) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-type-face fontified t)) . -3155) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) 3156) nil (25977 33695 699521 0) 0 nil])
([nil nil ((3155 . 3157)) nil (25977 33695 699513 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3155 3163 #s(yas--snippet nil nil #s(yas--exit 3163 nil) 9 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3163 nil) 9 nil nil nil nil)) (3155 . 3163) (#("LEFT_ALT$0" 0 10 (fontified nil)) . 3155) (3155 . 3165) (#("Le" 0 2 (fontified nil)) . 3155) (3155 . 3157) (#("LEFT_ALT" 0 8 (fontified nil)) . -3155) (3155 . 3163) (#("Le" 0 2 (face font-lock-type-face fontified t)) . -3155) (undo-tree-id174 . -2) (undo-tree-id175 . -1) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -2) (undo-tree-id181 . -2) 3157) nil (25977 33695 699505 0) 0 nil])
([nil nil ((#("    logging::log!(\"Key is {}, Keycode is {}\", KeyCode::LEFT_ALT, KeyCode::LEFT_ALT as i32);" 0 4 (fontified t) 4 11 (face font-lock-constant-face fontified t) 11 13 (fontified t) 13 17 (face font-lock-preprocessor-face fontified t) 17 18 (fontified t) 18 44 (face font-lock-string-face fontified t) 44 46 (fontified t) 46 53 (face font-lock-type-face fontified t) 53 55 (fontified t) 55 63 (face font-lock-type-face fontified t) 63 65 (fontified t) 65 72 (face font-lock-type-face fontified t) 72 74 (fontified t) 74 82 (face font-lock-type-face fontified t) 82 83 (fontified t) 83 85 (face font-lock-keyword-face fontified t) 85 86 (fontified t) 86 89 (face font-lock-type-face fontified t) 89 91 (fontified t)) . 3081) (undo-tree-id214 . -18) (undo-tree-id215 . -19) (undo-tree-id216 . -55) (undo-tree-id217 . -55) (undo-tree-id218 . -55) (undo-tree-id219 . -55) (undo-tree-id220 . -55) (undo-tree-id221 . -55) (undo-tree-id222 . -55) (undo-tree-id223 . -55) (undo-tree-id224 . -55) (undo-tree-id225 . -55) (undo-tree-id226 . -55) (undo-tree-id227 . -55) (undo-tree-id228 . -55) (undo-tree-id229 . -55) (undo-tree-id230 . -55) (undo-tree-id231 . -55) (undo-tree-id232 . -55) (undo-tree-id233 . -55) (undo-tree-id234 . -55) (undo-tree-id235 . -55) (undo-tree-id236 . -55) (undo-tree-id237 . -83) (undo-tree-id238 . -83) (undo-tree-id239 . -74) (undo-tree-id240 . -74) (undo-tree-id241 . -74) (undo-tree-id242 . -74) (undo-tree-id243 . -74) (undo-tree-id244 . -74) (undo-tree-id245 . -74) (undo-tree-id246 . -74) (undo-tree-id247 . -74) (undo-tree-id248 . -74) (undo-tree-id249 . -74) (undo-tree-id250 . -74) (undo-tree-id251 . -82) (undo-tree-id252 . -82) (undo-tree-id253 . -82) (undo-tree-id254 . -82) (undo-tree-id255 . -82) (undo-tree-id256 . -82) (undo-tree-id257 . -82) (undo-tree-id258 . -82) (undo-tree-id259 . -82) (undo-tree-id260 . -82) (undo-tree-id261 . -82) (undo-tree-id262 . -82) (undo-tree-id263 . -82) (undo-tree-id264 . -82) (undo-tree-id265 . -82) (undo-tree-id266 . -82) (undo-tree-id267 . -82) (undo-tree-id268 . -82) (undo-tree-id269 . -82) (undo-tree-id270 . -82) (undo-tree-id271 . -82) (undo-tree-id272 . -82) (undo-tree-id273 . -82) (undo-tree-id274 . -82) (undo-tree-id275 . -82) (undo-tree-id276 . -82) (undo-tree-id277 . -82) (undo-tree-id278 . -82) (undo-tree-id279 . -82) (undo-tree-id280 . -82) (undo-tree-id281 . -82) (undo-tree-id282 . -82) (undo-tree-id283 . -82) (undo-tree-id284 . -82) (undo-tree-id285 . -91) (undo-tree-id286 . -91) (undo-tree-id287 . -91) (undo-tree-id288 . -91) (undo-tree-id289 . -91) (undo-tree-id290 . -91) (undo-tree-id291 . -91) (undo-tree-id292 . -91) (undo-tree-id293 . -91) (undo-tree-id294 . -91) (undo-tree-id295 . -91) (undo-tree-id296 . -91) (undo-tree-id297 . -91) (t 25977 33695 710992 835000)) nil (25977 33704 577204 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3081) (undo-tree-id213 . -1)) nil (25977 33704 577106 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3081) (undo-tree-id212 . -1)) nil (25977 33704 577101 0) 0 nil])
([nil nil ((744 . 746) (t 25977 33704 587791 463000)) nil (25977 33793 333259 0) 0 nil])
([nil nil ((1283 . 1285) (t 25977 33793 343935 141000)) nil (25977 33797 172212 0) 0 nil])
([nil nil ((836 . 843) (t 25977 33797 182161 225000)) nil (25977 36224 394319 0) 0 nil])
([nil nil ((840 . 846) (#("tar" 0 3 (fontified nil)) . 840) (840 . 843) (#("target" 0 6 (fontified nil)) . -840) (840 . 846) (#("tar" 0 3 (fontified t)) . -840) (undo-tree-id317 . -3) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -2) (undo-tree-id322 . -3) (undo-tree-id323 . -3) (undo-tree-id324 . -3) 843) nil (25977 36224 394316 0) 0 nil])
([nil nil ((846 . 850)) nil (25977 36224 394306 0) 0 nil])
([nil nil ((apply yas--snippet-revive 847 859 #s(yas--snippet nil nil #s(yas--exit 859 nil) 19 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 859 nil) 19 nil nil nil nil)) (847 . 859) (#("class_list()$0" 0 14 (fontified nil)) . 847) (847 . 861) (#("cla" 0 3 (fontified nil)) . 847) (847 . 850) (#("class_list()" 0 12 (fontified nil)) . -847) (847 . 859) (#("cla" 0 3 (fontified t)) . -847) (undo-tree-id308 . -3) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -2) (undo-tree-id312 . -2) (undo-tree-id313 . -3) (undo-tree-id314 . -3) (undo-tree-id315 . -3) (undo-tree-id316 . -3) 850) nil (25977 36224 394303 0) 0 nil])
([nil nil ((859 . 863)) nil (25977 36224 394291 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 869 884 nil nil nil t #s(yas--exit 885 nil))) #s(yas--exit 885 nil) 20 nil #s(yas--field 1 869 884 nil nil nil t #s(yas--exit 885 nil)) nil nil)) (860 . 875) (#("contains(${1:token})$0" 0 22 (fontified nil)) . 860) (860 . 882) (#("con" 0 3 (fontified nil)) . 860) (860 . 863) (#("contains(â€¦)" 0 11 (fontified nil)) . -860) (860 . 871) (#("con" 0 3 (fontified t)) . -860) (undo-tree-id299 . -3) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -2) (undo-tree-id303 . -2) (undo-tree-id304 . -3) (undo-tree-id305 . -3) (undo-tree-id306 . -3) (undo-tree-id307 . -3) 863) nil (25977 36224 394288 0) 0 nil])
([nil nil ((870 . 871) (#("token" 0 5 (fontified nil)) . 870) (undo-tree-id298 . -5) (869 . 870)) nil (25977 36224 394274 0) 0 nil])
([nil nil ((870 . 876)) nil (25977 36224 394263 0) 0 nil])
([nil nil ((876 . 883)) nil (25977 36224 394258 0) 0 nil])
([nil nil ((apply yas--snippet-revive 860 885 #s(yas--snippet nil (#s(yas--field 1 869 884 nil nil nil t #s(yas--exit 885 nil))) #s(yas--exit 885 nil) 20 nil #s(yas--field 1 869 884 nil nil nil t #s(yas--exit 885 nil)) nil nil))) nil (25980 22104 676088 0) 0 nil])
([nil nil ((#("view}" 0 5 (fontified t)) . -3571) (undo-tree-id536 . -5) (undo-tree-id537 . -5) (undo-tree-id538 . -5) (undo-tree-id539 . -5) (undo-tree-id540 . -5) (undo-tree-id541 . -5) (undo-tree-id542 . -5) (undo-tree-id543 . -5) (undo-tree-id544 . -5) (undo-tree-id545 . -5) (undo-tree-id546 . -5) (undo-tree-id547 . -5) (undo-tree-id548 . -5) (undo-tree-id549 . -5) (undo-tree-id550 . -5) (undo-tree-id551 . -5) (undo-tree-id552 . -5) (undo-tree-id553 . -5) (undo-tree-id554 . -5) 3576 (t 25977 36224 405207 54000)) nil (25980 22104 676086 0) 0 nil])
([nil nil ((#("rgb " 0 4 (fontified t)) . -3567) (undo-tree-id510 . -4) (undo-tree-id511 . -4) (undo-tree-id512 . -4) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -4) (undo-tree-id516 . -4) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) (undo-tree-id521 . -4) (undo-tree-id522 . -4) (undo-tree-id523 . -4) (undo-tree-id524 . -4) (undo-tree-id525 . -4) (undo-tree-id526 . -4) (undo-tree-id527 . -4) (undo-tree-id528 . -4) (undo-tree-id529 . -4) (undo-tree-id530 . -4) (undo-tree-id531 . -4) (undo-tree-id532 . -4) (undo-tree-id533 . -4) (undo-tree-id534 . -4) (undo-tree-id535 . -4) 3571) nil (25980 22104 676062 0) 0 nil])
([nil nil ((#("view! {" 0 5 (face font-lock-preprocessor-face fontified t) 5 7 (fontified t)) . -3560) (undo-tree-id481 . -7) (undo-tree-id482 . -7) (undo-tree-id483 . -7) (undo-tree-id484 . -7) (undo-tree-id485 . -7) (undo-tree-id486 . -7) (undo-tree-id487 . -7) (undo-tree-id488 . -7) (undo-tree-id489 . -7) (undo-tree-id490 . -7) (undo-tree-id491 . -7) (undo-tree-id492 . -7) (undo-tree-id493 . -7) (undo-tree-id494 . -7) (undo-tree-id495 . -7) (undo-tree-id496 . -7) (undo-tree-id497 . -7) (undo-tree-id498 . -7) (undo-tree-id499 . -7) (undo-tree-id500 . -7) (undo-tree-id501 . -7) (undo-tree-id502 . -7) (undo-tree-id503 . -7) (undo-tree-id504 . -7) (undo-tree-id505 . -7) (undo-tree-id506 . -7) (undo-tree-id507 . -7) (undo-tree-id508 . -7) (undo-tree-id509 . -7) 3567) nil (25980 22104 676034 0) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -3557) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (#("|" 0 1 (fontified t)) . -3558) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (#(" " 0 1 (fontified t)) . -3559) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) 3560) nil (25980 22104 675990 0) 0 nil])
([nil nil ((3557 . 3559)) nil (25980 22104 675879 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3557 3562 #s(yas--snippet nil nil #s(yas--exit 3562 nil) 87 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3562 nil) 87 nil nil nil nil)) (3557 . 3562) (#("Rgb()$0" 0 7 (fontified nil)) . 3557) (3557 . 3564) (#("Rg" 0 2 (fontified nil)) . 3557) (3552 . 3559) (#("Rgb()" 0 5 (fontified nil)) . -3552) (3552 . 3557) (#("view=Rg" 0 7 (fontified t)) . -3552) (undo-tree-id334 . -5) (undo-tree-id335 . -7) (undo-tree-id336 . -5) (undo-tree-id337 . -5) (undo-tree-id338 . -5) (undo-tree-id339 . -5) (undo-tree-id340 . -5) (undo-tree-id341 . -5) (undo-tree-id342 . -5) (undo-tree-id343 . -5) (undo-tree-id344 . -5) (undo-tree-id345 . -5) (undo-tree-id346 . -5) (undo-tree-id347 . -5) (undo-tree-id348 . -5) (undo-tree-id349 . -5) (undo-tree-id350 . -5) (undo-tree-id351 . -5) (undo-tree-id352 . -5) (undo-tree-id353 . -5) (undo-tree-id354 . -5) (undo-tree-id355 . -5) (undo-tree-id356 . -5) (undo-tree-id357 . -5) (undo-tree-id358 . -5) (undo-tree-id359 . -5) (undo-tree-id360 . -5) (undo-tree-id361 . -5) (undo-tree-id362 . -5) (undo-tree-id363 . -5) (undo-tree-id364 . -5) (undo-tree-id365 . -5) (undo-tree-id366 . -5) (undo-tree-id367 . -5) (undo-tree-id368 . -5) (undo-tree-id369 . -5) (undo-tree-id370 . -5) (undo-tree-id371 . -6) (undo-tree-id372 . -7) (undo-tree-id373 . -7) (undo-tree-id374 . -7) (undo-tree-id375 . -7) 3559) nil (25980 22104 675875 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -3560) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (#(")" 0 1 (fontified t)) . -3561) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) 3562) nil (25980 22104 675829 0) 0 nil])
([nil nil ((3134 . 3138) (#("    " 0 4 (fontified nil)) . 3133) (undo-tree-id67 . -4) (undo-tree-id68 . -4) (undo-tree-id69 . -4) (undo-tree-id70 . -4) (3132 . 3138) (t 25980 34283 226972 940000)) nil (25983 10564 359648 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3437 . 3438) (nil fontified nil 3436 . 3438) (nil fontified nil 3431 . 3436) (nil fontified nil 3430 . 3431) (nil fontified nil 3428 . 3430) (nil fontified nil 3427 . 3428) (nil fontified nil 3426 . 3427) (nil fontified nil 3421 . 3426) (nil fontified nil 3413 . 3421) (nil fontified nil 3412 . 3413) (nil fontified nil 3394 . 3412) (nil fontified nil 3389 . 3394) (nil fontified nil 3376 . 3389) (nil fontified nil 3370 . 3376) (nil fontified nil 3369 . 3370) (nil fontified nil 3361 . 3369) (nil fontified nil 3357 . 3361) (nil fontified nil 3350 . 3357) (nil fontified nil 3346 . 3350) (nil fontified nil 3345 . 3346) (nil fontified nil 3342 . 3345) (nil fontified nil 3341 . 3342) (nil fontified nil 3339 . 3341) (nil fontified nil 3338 . 3339) (nil fontified nil 3335 . 3338) (nil fontified nil 3331 . 3335) (nil fontified nil 3330 . 3331) (nil fontified nil 3325 . 3330) (nil fontified nil 3321 . 3325) (nil fontified nil 3320 . 3321) (nil fontified nil 3316 . 3320) (nil fontified nil 3314 . 3316) (nil fontified nil 3309 . 3314) (nil fontified nil 3298 . 3309) (nil fontified nil 3296 . 3298) (nil fontified nil 3292 . 3296) (nil fontified nil 3276 . 3292) (nil fontified nil 3272 . 3276) (nil fontified nil 3271 . 3272) (nil fontified nil 3269 . 3271) (nil fontified nil 3259 . 3269) (nil fontified nil 3253 . 3259) (nil fontified nil 3244 . 3253) (nil fontified nil 3239 . 3244) (nil fontified nil 3235 . 3239) (nil fontified nil 3223 . 3235) (nil fontified nil 3220 . 3223) (nil fontified nil 3210 . 3220) (nil fontified nil 3209 . 3210) (nil fontified nil 3206 . 3209) (nil fontified nil 3202 . 3206) (nil fontified nil 3201 . 3202) (nil fontified nil 3200 . 3201) (nil fontified nil 3189 . 3200) (nil fontified nil 3188 . 3189) (nil fontified nil 3187 . 3188) (nil fontified nil 3180 . 3187) (nil fontified nil 3179 . 3180) (nil fontified nil 3171 . 3179) (nil fontified nil 3170 . 3171) (nil fontified nil 3154 . 3170) (nil fontified nil 3146 . 3154) (nil fontified nil 3145 . 3146) (nil fontified nil 3142 . 3145) (nil fontified nil 3138 . 3142) (3138 . 3438)) nil (25983 10564 359640 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3138) 3136) nil (25983 10564 359622 0) 0 nil])
([nil nil ((3134 . 3135)) nil (25983 10564 359621 0) 0 nil])
([nil nil ((#("    let ui_state = use_context::<RwSignal<UiState>>().unwrap();" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 16 (face font-lock-variable-name-face fontified t) 16 32 (fontified t) 32 33 (fontified t) 33 41 (face font-lock-type-face fontified t) 41 42 (fontified t) 42 49 (face font-lock-type-face fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 62 (fontified t) 62 63 (fontified t rear-nonsticky t)) . 3135) (undo-tree-id1 . -17) (undo-tree-id2 . -4) (undo-tree-id3 . -4) (undo-tree-id4 . -4) (undo-tree-id5 . -4) (undo-tree-id6 . -4) (undo-tree-id7 . -3) (undo-tree-id8 . -3) (undo-tree-id9 . -3) (undo-tree-id10 . -3) (undo-tree-id11 . -3) (undo-tree-id12 . -3) (undo-tree-id13 . -3) (undo-tree-id14 . -3) (undo-tree-id15 . -3) (undo-tree-id16 . -3) (undo-tree-id17 . -3) (undo-tree-id18 . -3) (undo-tree-id19 . -4) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -17) (undo-tree-id57 . -17) (undo-tree-id58 . -17) (undo-tree-id59 . -17) (undo-tree-id60 . -17) (undo-tree-id61 . -17) (undo-tree-id62 . -17) (undo-tree-id63 . -17) (undo-tree-id64 . -17) (undo-tree-id65 . -17) (undo-tree-id66 . -63)) nil (25983 10564 359617 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3135) (undo-tree-id0 . -1)) nil (25983 10564 359545 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -3179) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) 3180 (t 25983 10564 371770 362000)) nil (25983 10572 467853 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -3295) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) 3296) nil (25983 10572 467830 0) 0 nil])
([nil nil ((#("input" 0 5 (fontified t)) . -3337) (undo-tree-id285 . -5) (undo-tree-id286 . -5) (undo-tree-id287 . -5) (undo-tree-id288 . -5) 3342 (t 25983 10572 479163 717000)) nil (25983 10655 538049 0) 0 nil])
([nil nil ((#("rgb_" 0 4 (fontified t)) . -3333) (undo-tree-id281 . -4) (undo-tree-id282 . -4) (undo-tree-id283 . -4) (undo-tree-id284 . -4) 3337) nil (25983 10655 538043 0) 0 nil])
([nil nil ((#("	    request_(&device).await;" 0 5 (fontified t) 5 14 (fontified t) 14 15 (face rust-ampersand-face fontified t) 15 23 (fontified t) 23 28 (face font-lock-keyword-face fontified t) 28 29 (fontified t)) . 3320) (undo-tree-id278 . -14) (undo-tree-id279 . -13) (undo-tree-id280 . -13)) nil (25983 10655 538038 0) 0 nil])
([nil nil ((3320 . 3325)) nil (25983 10655 538034 0) 0 nil])
([nil nil ((3325 . 3327)) nil (25983 10655 538033 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3325) (undo-tree-id276 . -1) (#("e" 0 1 (fontified t)) . -3326) (undo-tree-id277 . -1) 3327) nil (25983 10655 538032 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3324) (undo-tree-id275 . -1) 3325) nil (25983 10655 538028 0) 0 nil])
([nil nil ((3324 . 3333)) nil (25983 10655 538026 0) 0 nil])
([nil nil ((2300 . 2323) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3369 3380 nil nil nil t #s(yas--exit 3381 nil))) #s(yas--exit 3381 nil) 198 nil #s(yas--field 1 3369 3380 nil nil nil t #s(yas--exit 3381 nil)) nil nil)) (3324 . 3354) (#("request_profile_input(${1:&device})$0" 0 37 (fontified nil)) . 3324) (3324 . 3361) (#("request_p" 0 9 (fontified nil)) . 3324) (3324 . 3333) (#("request_profile_input(â€¦) (use crate::keyboard::request_profile_input)" 0 69 (fontified nil)) . -3324) (3324 . 3393) (#("request_p" 0 9 (fontified t)) . -3324) (undo-tree-id248 . -9) (undo-tree-id249 . -1) (undo-tree-id250 . -2) (undo-tree-id251 . -2) (undo-tree-id252 . -2) (undo-tree-id253 . -2) (undo-tree-id254 . -3) (undo-tree-id255 . -3) (undo-tree-id256 . -3) (undo-tree-id257 . -4) (undo-tree-id258 . -4) (undo-tree-id259 . -5) (undo-tree-id260 . -5) (undo-tree-id261 . -5) (undo-tree-id262 . -6) (undo-tree-id263 . -6) (undo-tree-id264 . -7) (undo-tree-id265 . -7) (undo-tree-id266 . -7) (undo-tree-id267 . -7) (undo-tree-id268 . -8) (undo-tree-id269 . -8) (undo-tree-id270 . -9) (undo-tree-id271 . -9) (undo-tree-id272 . -9) (undo-tree-id273 . -9) (undo-tree-id274 . -9) 3333) nil (25983 10655 538023 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -3370) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("e" 0 1 (fontified t)) . -3371) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (#("v" 0 1 (fontified t)) . -3372) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (#("i" 0 1 (fontified t)) . -3373) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (#("c" 0 1 (fontified t)) . -3374) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (#("e" 0 1 (fontified t)) . -3375) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) 3376) nil (25983 10655 537987 0) 0 nil])
([nil nil ((3370 . 3371)) nil (25983 10655 537893 0) 0 nil])
([nil nil ((3370 . 3380) (#("h" 0 1 (fontified nil)) . 3370) (undo-tree-id143 . -1) (3370 . 3371) (#("hid_device" 0 10 (fontified nil)) . -3370) (undo-tree-id144 . -10) (3370 . 3380) (#("h" 0 1 (fontified t)) . -3370) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) 3371) nil (25983 10655 537891 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3347 3381 #s(yas--snippet nil (#s(yas--field 1 3369 3380 nil nil nil t #s(yas--exit 3381 nil))) #s(yas--exit 3381 nil) 198 nil #s(yas--field 1 3369 3380 nil nil nil t #s(yas--exit 3381 nil)) nil nil))) nil (25983 10655 537881 0) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -3370) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#("i" 0 1 (fontified t)) . -3371) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#("d" 0 1 (fontified t)) . -3372) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (#("_" 0 1 (fontified t)) . -3373) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) 3374) nil (25983 10655 537877 0) 0 nil])
([nil nil ((3377 . 3378)) nil (25983 10860 950549 0) 0 nil])
([nil nil ((3377 . 3378) (t 25983 10861 760948 877000)) nil (25983 10866 123922 0) 0 nil] [nil nil ((3224 . 3227) (t 25983 10655 549891 151000)) ((#(".is" 0 1 (fontified t) 1 3 (fontified t)) . 3224) (undo-tree-id339 . -1) (undo-tree-id340 . -3) (undo-tree-id341 . -2) (undo-tree-id342 . -2) (undo-tree-id343 . -2) (undo-tree-id344 . -2) (undo-tree-id345 . -2) (undo-tree-id346 . -3) (undo-tree-id347 . -3) (undo-tree-id348 . -3) (undo-tree-id349 . -3) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -3) (undo-tree-id389 . -3) (undo-tree-id390 . -3) (undo-tree-id391 . -3) (undo-tree-id392 . -3)) (25983 10859 886927 0) 0 nil])
([nil nil ((3378 . 3379)) nil (25983 10866 123921 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3225 3234 #s(yas--snippet nil nil #s(yas--exit #<marker at 3214 in app.rs> nil) 199 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 3214 in app.rs> nil) 199 nil nil nil nil)) (3225 . 3234) (#("is_some()$0" 0 11 (fontified nil)) . 3225) (3225 . 3236) (#("is" 0 2 (fontified nil)) . 3225) (3225 . 3227) (#("is_some()" 0 9 (fontified nil)) . -3225) (3225 . 3234) (#("is" 0 2 (fontified t)) . -3225) (undo-tree-id289 . -2) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -2) (undo-tree-id296 . -2) (undo-tree-id297 . -2) (undo-tree-id298 . -2) 3227) ((3225 . 3227) (#("is_some()" 0 9 (fontified nil)) . 3225) (3225 . 3234) (#("is" 0 2 (fontified nil)) . 3225) (3225 . 3227) (#("is_some()$0" 0 11 (fontified nil)) . 3225) (3225 . 3236) (#("is_some()" 0 9 (fontified t)) . 3225) (undo-tree-id299 . -9) (undo-tree-id300 . -9) (undo-tree-id301 . -9) (undo-tree-id302 . -9) (undo-tree-id303 . -9) (undo-tree-id304 . -9) (undo-tree-id305 . -9) (undo-tree-id306 . -9) (undo-tree-id307 . -9) (undo-tree-id308 . -9) (undo-tree-id309 . -9) (undo-tree-id310 . -9) (undo-tree-id311 . -9) (undo-tree-id312 . -9) (undo-tree-id313 . -9) (undo-tree-id314 . -9) (undo-tree-id315 . -9) (undo-tree-id316 . -9) (undo-tree-id317 . -9) (undo-tree-id318 . -9) (undo-tree-id319 . -9) (undo-tree-id320 . -9) (undo-tree-id321 . -9) (undo-tree-id322 . -9) (undo-tree-id323 . -9) (undo-tree-id324 . -9) (undo-tree-id325 . -9) (undo-tree-id326 . -9) (undo-tree-id327 . -9) (undo-tree-id328 . -9) (undo-tree-id329 . -9) (undo-tree-id330 . -9) (undo-tree-id331 . -9) (undo-tree-id332 . -9) (undo-tree-id333 . -9) (undo-tree-id334 . -9) (undo-tree-id335 . -9) (undo-tree-id336 . -9) (undo-tree-id337 . -9) (undo-tree-id338 . -9) (t 25983 10856 553214 452000)) (25983 10856 541283 0) 0 nil])
([nil nil ((3378 . 3383) (#("a" 0 1 (fontified nil)) . 3378) (3378 . 3379) (#("await" 0 5 (fontified nil)) . -3378) (3378 . 3383) (#("a" 0 1 (fontified t)) . -3378) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) 3379) nil (25983 10866 123916 0) 0 nil])
nil
([nil nil ((#("device" 0 6 (fontified t)) . -3334) (undo-tree-id521 . -6) (undo-tree-id522 . -6) (undo-tree-id523 . -6) (undo-tree-id524 . -6) (undo-tree-id525 . -6) (undo-tree-id526 . -6) (undo-tree-id527 . -6) (undo-tree-id528 . -6) (undo-tree-id529 . -6) (undo-tree-id530 . -6) (undo-tree-id531 . -6) (undo-tree-id532 . -6) (undo-tree-id533 . -6) (undo-tree-id534 . -6) (undo-tree-id535 . -6) (undo-tree-id536 . -6) 3340 (t 25983 10866 135364 789000)) nil (25983 10895 354922 0) 0 nil])
([nil nil ((#("hid_" 0 4 (fontified t)) . -3330) (undo-tree-id502 . -4) (undo-tree-id503 . -4) (undo-tree-id504 . -4) (undo-tree-id505 . -4) (undo-tree-id506 . -4) (undo-tree-id507 . -4) (undo-tree-id508 . -4) (undo-tree-id509 . -4) (undo-tree-id510 . -4) (undo-tree-id511 . -4) (undo-tree-id512 . -4) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -4) (undo-tree-id516 . -4) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) 3334) nil (25983 10895 354904 0) 0 nil])
([nil nil ((#("get()." 0 6 (fontified t)) . -3324) (undo-tree-id461 . -6) (undo-tree-id462 . -6) (undo-tree-id463 . -5) (undo-tree-id464 . -5) (undo-tree-id465 . -5) (undo-tree-id466 . -5) (undo-tree-id467 . -5) (undo-tree-id468 . -5) (undo-tree-id469 . -5) (undo-tree-id470 . -5) (undo-tree-id471 . -5) (undo-tree-id472 . -5) (undo-tree-id473 . -5) (undo-tree-id474 . -5) (undo-tree-id475 . -5) (undo-tree-id476 . -5) (undo-tree-id477 . -5) (undo-tree-id478 . -6) (undo-tree-id479 . -6) (undo-tree-id480 . -6) (undo-tree-id481 . -6) (undo-tree-id482 . -6) (undo-tree-id483 . -6) (undo-tree-id484 . -6) (undo-tree-id485 . -6) (undo-tree-id486 . -6) (undo-tree-id487 . -6) (undo-tree-id488 . -6) (undo-tree-id489 . -6) (undo-tree-id490 . -6) (undo-tree-id491 . -6) (undo-tree-id492 . -6) (undo-tree-id493 . -6) (undo-tree-id494 . -6) (undo-tree-id495 . -6) (undo-tree-id496 . -6) (undo-tree-id497 . -6) (undo-tree-id498 . -6) (undo-tree-id499 . -6) (undo-tree-id500 . -6) (undo-tree-id501 . -6) 3330) nil (25983 10895 354883 0) 0 nil])
([nil nil ((#("uistate." 0 7 (fontified t) 7 8 (fontified t)) . -3316) (undo-tree-id413 . -8) (undo-tree-id414 . -8) (undo-tree-id415 . -8) (undo-tree-id416 . -8) (undo-tree-id417 . -8) (undo-tree-id418 . -8) (undo-tree-id419 . -8) (undo-tree-id420 . -8) (undo-tree-id421 . -8) (undo-tree-id422 . -8) (undo-tree-id423 . -8) (undo-tree-id424 . -8) (undo-tree-id425 . -8) (undo-tree-id426 . -8) (undo-tree-id427 . -8) (undo-tree-id428 . -8) (undo-tree-id429 . -8) (undo-tree-id430 . -8) (undo-tree-id431 . -8) (undo-tree-id432 . -8) (undo-tree-id433 . -8) (undo-tree-id434 . -8) (undo-tree-id435 . -8) (undo-tree-id436 . -8) (undo-tree-id437 . -8) (undo-tree-id438 . -8) (undo-tree-id439 . -8) (undo-tree-id440 . -8) (undo-tree-id441 . -8) (undo-tree-id442 . -8) (undo-tree-id443 . -8) (undo-tree-id444 . -8) (undo-tree-id445 . -8) (undo-tree-id446 . -8) (undo-tree-id447 . -8) (undo-tree-id448 . -8) (undo-tree-id449 . -8) (undo-tree-id450 . -8) (undo-tree-id451 . -8) (undo-tree-id452 . -8) (undo-tree-id453 . -8) (undo-tree-id454 . -8) (undo-tree-id455 . -8) (undo-tree-id456 . -8) (undo-tree-id457 . -8) (undo-tree-id458 . -8) (undo-tree-id459 . -8) (undo-tree-id460 . -8) 3324) nil (25983 10895 354833 0) 0 nil])
([nil nil ((3316 . 3319)) nil (25983 10895 354786 0) 0 nil])
([nil nil ((3316 . 3326) (#("hid" 0 3 (fontified nil)) . 3316) (3316 . 3319) (#("hid_device" 0 10 (fontified nil)) . -3316) (3316 . 3326) (#("hid" 0 3 (fontified t)) . -3316) (undo-tree-id404 . -3) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -2) (undo-tree-id408 . -3) (undo-tree-id409 . -3) (undo-tree-id410 . -3) (undo-tree-id411 . -3) (undo-tree-id412 . -3) 3319) nil (25983 10895 354784 0) 0 nil])
([nil nil ((3326 . 3328)) nil (25983 10895 354772 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3327 3332 #s(yas--snippet nil nil #s(yas--exit 3332 nil) 200 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3332 nil) 200 nil nil nil nil)) (3327 . 3332) (#("get()$0" 0 7 (fontified nil)) . 3327) (3327 . 3334) (#("g" 0 1 (fontified nil)) . 3327) (3327 . 3328) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -3327) (3327 . 3347) (#("g" 0 1 (fontified t)) . -3327) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) 3328) nil (25983 10895 354767 0) 0 nil])
([nil nil ((#("move " 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . -3271) (undo-tree-id941 . -5) (undo-tree-id942 . -5) (undo-tree-id943 . -5) (undo-tree-id944 . -5) (undo-tree-id945 . -5) (undo-tree-id946 . -5) (undo-tree-id947 . -5) (undo-tree-id948 . -5) (undo-tree-id949 . -5) (undo-tree-id950 . -5) (undo-tree-id951 . -5) (undo-tree-id952 . -5) (undo-tree-id953 . -5) (undo-tree-id954 . -5) (undo-tree-id955 . -5) (undo-tree-id956 . -5) 3276 (t 25983 10895 367223 896000)) nil (25983 10940 91555 0) 0 nil])
([nil nil ((3287 . 3289)) nil (25983 10940 91538 0) 0 nil])
([nil nil ((3289 . 3291)) nil (25983 10940 91537 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3301 3314 nil nil nil t #s(yas--exit 3315 nil))) #s(yas--exit 3315 nil) 201 nil #s(yas--field 1 3301 3314 nil nil nil t #s(yas--exit 3315 nil)) nil nil)) (3289 . 3305) (#("spawn_local(${1:fut})$0" 0 23 (fontified nil)) . 3289) (3289 . 3312) (#("sp" 0 2 (fontified nil)) . 3289) (3289 . 3291) (#("spawn_local(â€¦)" 0 14 (fontified nil)) . -3289) (3289 . 3303) (#("sp" 0 2 (fontified t)) . -3289) (undo-tree-id930 . -1) (undo-tree-id931 . -2) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -2) (undo-tree-id937 . -2) (undo-tree-id938 . -2) (undo-tree-id939 . -2) (undo-tree-id940 . -2) 3291) nil (25983 10940 91534 0) 0 nil])
([nil nil ((3302 . 3314) (#("fut" 0 3 (fontified nil)) . 3302) (undo-tree-id929 . -3) (3301 . 3302)) nil (25983 10940 91520 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3289 3315 #s(yas--snippet nil (#s(yas--field 1 3301 3314 nil nil nil t #s(yas--exit 3315 nil))) #s(yas--exit 3315 nil) 201 nil #s(yas--field 1 3301 3314 nil nil nil t #s(yas--exit 3315 nil)) nil nil))) nil (25983 10940 91517 0) 0 nil])
([nil nil ((3315 . 3316)) nil (25983 10940 91516 0) 0 nil])
([nil nil ((3315 . 3316) (#("	    " 0 5 (fontified nil)) . 3314) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (3315 . 3319) (3313 . 3316)) nil (25983 10940 91515 0) 0 nil])
([nil nil ((#("	if let Some(device) = hid_device.get() {
	   request_profile_input(&device).await;
	}" 0 1 (fontified t) 1 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 12 (face font-lock-type-face fontified t) 12 19 (fontified t) 19 23 (fontified t) 23 34 (fontified t) 34 39 (fontified t) 39 42 (fontified t) 42 46 (fontified t) 46 68 (fontified t) 68 69 (face rust-ampersand-face fontified t) 69 75 (fontified t) 75 77 (fontified t) 77 82 (face font-lock-keyword-face fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 86 (fontified t)) . 3320) (undo-tree-id745 . -86) (undo-tree-id746 . -63) (undo-tree-id747 . -23) (undo-tree-id748 . -23) (undo-tree-id749 . -23) (undo-tree-id750 . -23) (undo-tree-id751 . -23) (undo-tree-id752 . -23) (undo-tree-id753 . -23) (undo-tree-id754 . -23) (undo-tree-id755 . -23) (undo-tree-id756 . -23) (undo-tree-id757 . -23) (undo-tree-id758 . -23) (undo-tree-id759 . -23) (undo-tree-id760 . -23) (undo-tree-id761 . -23) (undo-tree-id762 . -23) (undo-tree-id763 . -23) (undo-tree-id764 . -23) (undo-tree-id765 . -23) (undo-tree-id766 . -23) (undo-tree-id767 . -23) (undo-tree-id768 . -23) (undo-tree-id769 . -23) (undo-tree-id770 . -23) (undo-tree-id771 . -23) (undo-tree-id772 . -23) (undo-tree-id773 . -23) (undo-tree-id774 . -23) (undo-tree-id775 . -23) (undo-tree-id776 . -23) (undo-tree-id777 . -23) (undo-tree-id778 . -23) (undo-tree-id779 . -23) (undo-tree-id780 . -23) (undo-tree-id781 . -23) (undo-tree-id782 . -23) (undo-tree-id783 . -23) (undo-tree-id784 . -23) (undo-tree-id785 . -23) (undo-tree-id786 . -23) (undo-tree-id787 . -23) (undo-tree-id788 . -23) (undo-tree-id789 . -23) (undo-tree-id790 . -23) (undo-tree-id791 . -23) (undo-tree-id792 . -23) (undo-tree-id793 . -23) (undo-tree-id794 . -23) (undo-tree-id795 . -23) (undo-tree-id796 . -23) (undo-tree-id797 . -23) (undo-tree-id798 . -23) (undo-tree-id799 . -23) (undo-tree-id800 . -34) (undo-tree-id801 . -34) (undo-tree-id802 . -34) (undo-tree-id803 . -34) (undo-tree-id804 . -34) (undo-tree-id805 . -34) (undo-tree-id806 . -39) (undo-tree-id807 . -39) (undo-tree-id808 . -39) (undo-tree-id809 . -39) (undo-tree-id810 . -39) (undo-tree-id811 . -39) (undo-tree-id812 . -39) (undo-tree-id813 . -39) (undo-tree-id814 . -39) (undo-tree-id815 . -39) (undo-tree-id816 . -39) (undo-tree-id817 . -39) (undo-tree-id818 . -39) (undo-tree-id819 . -39) (undo-tree-id820 . -39) (undo-tree-id821 . -39) (undo-tree-id822 . -39) (undo-tree-id823 . -39) (undo-tree-id824 . -39) (undo-tree-id825 . -39) (undo-tree-id826 . -39) (undo-tree-id827 . -39) (undo-tree-id828 . -39) (undo-tree-id829 . -39) (undo-tree-id830 . -39) (undo-tree-id831 . -39) (undo-tree-id832 . -39) (undo-tree-id833 . -39) (undo-tree-id834 . -39) (undo-tree-id835 . -39) (undo-tree-id836 . -39) (undo-tree-id837 . -39) (undo-tree-id838 . -39) (undo-tree-id839 . -39) (undo-tree-id840 . -39) (undo-tree-id841 . -39) (undo-tree-id842 . -39) (undo-tree-id843 . -39) (undo-tree-id844 . -39) (undo-tree-id845 . -39) (undo-tree-id846 . -39) (undo-tree-id847 . -39) (undo-tree-id848 . -39) (undo-tree-id849 . -39) (undo-tree-id850 . -39) (undo-tree-id851 . -39) (undo-tree-id852 . -39) (undo-tree-id853 . -39) (undo-tree-id854 . -39) (undo-tree-id855 . -39) (undo-tree-id856 . -39) (undo-tree-id857 . -39) (undo-tree-id858 . -39) (undo-tree-id859 . -39) (undo-tree-id860 . -39) (undo-tree-id861 . -39) (undo-tree-id862 . -38) (undo-tree-id863 . -80) (undo-tree-id864 . -80) (undo-tree-id865 . -80) (undo-tree-id866 . -80) (undo-tree-id867 . -80) (undo-tree-id868 . -86) (undo-tree-id869 . -86) (undo-tree-id870 . -86) (undo-tree-id871 . -86) (undo-tree-id872 . -86) (undo-tree-id873 . -86) (undo-tree-id874 . -86) (undo-tree-id875 . -86) (undo-tree-id876 . -86) (undo-tree-id877 . -86) (undo-tree-id878 . -86) (undo-tree-id879 . -86) (undo-tree-id880 . -86) (undo-tree-id881 . -86) (undo-tree-id882 . -86) (undo-tree-id883 . -86) (undo-tree-id884 . -86) (undo-tree-id885 . -86) (undo-tree-id886 . -86) (undo-tree-id887 . -86) (undo-tree-id888 . -86) (undo-tree-id889 . -86) (undo-tree-id890 . -86) (undo-tree-id891 . -86) (undo-tree-id892 . -86) (undo-tree-id893 . -86) (undo-tree-id894 . -86) (undo-tree-id895 . -86) (undo-tree-id896 . -86) (undo-tree-id897 . -86) (undo-tree-id898 . -45) (undo-tree-id899 . -44) (undo-tree-id900 . -42) (undo-tree-id901 . -42) (undo-tree-id902 . -42) (undo-tree-id903 . -42) (undo-tree-id904 . -42) (undo-tree-id905 . -42) (undo-tree-id906 . -86) (undo-tree-id907 . -42) (undo-tree-id908 . -42) (undo-tree-id909 . -42) (undo-tree-id910 . -42) (undo-tree-id911 . -42) (undo-tree-id912 . -42) (undo-tree-id913 . -42) (undo-tree-id914 . -86) (undo-tree-id915 . -86) (undo-tree-id916 . -86) (undo-tree-id917 . -86) (undo-tree-id918 . -86) (undo-tree-id919 . -86) (undo-tree-id920 . -86) (undo-tree-id921 . -85) (undo-tree-id922 . -84) (undo-tree-id923 . -86) (undo-tree-id924 . -86) (undo-tree-id925 . -86)) nil (25983 10940 91502 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3399 . 3400) (nil fontified nil 3398 . 3400) (nil fontified nil 3397 . 3398) (nil fontified nil 3396 . 3397) (nil fontified nil 3391 . 3396) (nil fontified nil 3389 . 3391) (nil fontified nil 3383 . 3389) (nil fontified nil 3382 . 3383) (nil fontified nil 3360 . 3382) (nil fontified nil 3356 . 3360) (nil fontified nil 3353 . 3356) (nil fontified nil 3348 . 3353) (nil fontified nil 3337 . 3348) (nil fontified nil 3333 . 3337) (nil fontified nil 3326 . 3333) (nil fontified nil 3322 . 3326) (nil fontified nil 3321 . 3322) (nil fontified nil 3318 . 3321) (nil fontified nil 3317 . 3318) (nil fontified nil 3315 . 3317) (nil fontified nil 3314 . 3315) (3314 . 3400)) nil (25983 10940 91317 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3405) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) 3406) nil (25983 10940 91302 0) 0 nil])
([nil nil ((3401 . 3405) (3361 . 3362) (#("   " 0 3 (fontified t)) . 3361) (3315 . 3319) 3160) nil (25983 10940 91068 0) 0 nil])
([nil nil ((3271 . 3276) (t 25983 10940 104231 381000)) nil (25983 10945 322926 0) 0 nil])
([nil nil ((3318 . 3324) (t 25983 10945 335895 351000)) nil (25983 10955 685481 0) 0 nil])
([nil nil ((3324 . 3328)) nil (25983 10955 685480 0) 0 nil])
([nil nil ((3324 . 3331) (#("logg" 0 4 (fontified nil)) . 3324) (3324 . 3328) (#("logging" 0 7 (fontified nil)) . -3324) (3324 . 3331) (#("logg" 0 4 (fontified t)) . -3324) (undo-tree-id960 . -4) (undo-tree-id961 . -4) (undo-tree-id962 . -1) (undo-tree-id963 . -2) (undo-tree-id964 . -2) (undo-tree-id965 . -2) (undo-tree-id966 . -3) (undo-tree-id967 . -3) (undo-tree-id968 . -3) (undo-tree-id969 . -4) (undo-tree-id970 . -4) (undo-tree-id971 . -4) (undo-tree-id972 . -4) 3328) nil (25983 10955 685477 0) 0 nil])
([nil nil ((3331 . 3334)) nil (25983 10955 685461 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3333 3339 #s(yas--snippet nil nil #s(yas--exit 3338 nil) 202 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3338 nil) 202 nil nil nil nil)) (3333 . 3339) (#("log!($0)" 0 8 (fontified nil)) . 3333) (3333 . 3341) (#("l" 0 1 (fontified nil)) . 3333) (3333 . 3334) (#("log!(â€¦)" 0 7 (fontified nil)) . -3333) (3333 . 3340) (#("l" 0 1 (fontified t)) . -3333) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) 3334) nil (25983 10955 685458 0) 0 nil])
([nil nil ((3338 . 3340)) nil (25983 10955 685444 0) 0 nil])
([nil nil ((3339 . 3340)) nil (25983 10955 685442 0) 0 nil])
([nil nil ((3340 . 3350)) nil (25983 10955 685440 0) 0 nil])
([nil nil ((3352 . 3353)) nil (25983 10955 685436 0) 0 nil])
([nil nil ((3399 . 3402) (t 25983 10955 699551 209000)) nil (25983 10975 940230 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3435 . 3436) (nil fontified nil 3434 . 3436) (nil fontified nil 3421 . 3434) (nil fontified nil 3420 . 3421) (nil fontified nil 3416 . 3420) (nil fontified nil 3414 . 3416) (nil fontified nil 3407 . 3414) (nil fontified nil 3402 . 3407) (3402 . 3436)) nil (25983 10975 940228 0) 0 nil])
([nil nil ((#("	    " 0 5 (fontified t)) . -3402) 3436) nil (25983 10975 940221 0) 0 nil])
([nil nil ((#("	    logging::log!(\"hid changed\");" 0 5 (fontified t) 5 12 (face font-lock-constant-face fontified t) 12 14 (fontified t) 14 18 (face font-lock-preprocessor-face fontified t) 18 19 (fontified t) 19 32 (face font-lock-string-face fontified t) 32 34 (fontified t)) . 3319) (undo-tree-id976 . -19) (undo-tree-id977 . 3) (undo-tree-id978 . -34) (undo-tree-id979 . -34) (undo-tree-id980 . -34) (undo-tree-id981 . -34) (undo-tree-id982 . -34) (undo-tree-id983 . -34) (undo-tree-id984 . -34) (undo-tree-id985 . -34) (undo-tree-id986 . -34) (t 25983 10975 953353 673000)) nil (25983 10978 636213 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3319) (undo-tree-id973 . -1) (undo-tree-id974 . 1) (undo-tree-id975 . -1)) nil (25983 10978 636197 0) 0 nil])
([nil nil ((#("	spawn_local(async move {" 0 1 (fontified t) 1 13 (fontified t) 13 18 (face font-lock-keyword-face fontified t) 18 19 (fontified t) 19 23 (face font-lock-keyword-face fontified t) 23 25 (fontified t)) . 3293) (undo-tree-id1046 . -25) (undo-tree-id1047 . -15) (undo-tree-id1048 . -15) (undo-tree-id1049 . -15) (undo-tree-id1050 . -15) (undo-tree-id1051 . -15) (undo-tree-id1052 . -15) (undo-tree-id1053 . -15) (undo-tree-id1054 . -15) (undo-tree-id1055 . -15) (undo-tree-id1056 . -15) (undo-tree-id1057 . -15) (undo-tree-id1058 . -15) (undo-tree-id1059 . -15) (undo-tree-id1060 . -15) (undo-tree-id1061 . -15) (undo-tree-id1062 . -15) (undo-tree-id1063 . -15) (undo-tree-id1064 . -8) (undo-tree-id1065 . -8) (undo-tree-id1066 . -8) (undo-tree-id1067 . -8) (undo-tree-id1068 . -8) (undo-tree-id1069 . -8) (undo-tree-id1070 . -8) (undo-tree-id1071 . -8) (undo-tree-id1072 . -8) (undo-tree-id1073 . -8) (undo-tree-id1074 . -8) (undo-tree-id1075 . -8) (undo-tree-id1076 . -8) (undo-tree-id1077 . -8) (undo-tree-id1078 . -8) (undo-tree-id1079 . -8) (undo-tree-id1080 . -8) (undo-tree-id1081 . -8) (undo-tree-id1082 . -8) (undo-tree-id1083 . -8) (undo-tree-id1084 . -8) (undo-tree-id1085 . -8) (undo-tree-id1086 . -8) (undo-tree-id1087 . -25) (undo-tree-id1088 . -25) (undo-tree-id1089 . -25) (undo-tree-id1090 . -25) (undo-tree-id1091 . -25) (undo-tree-id1092 . -25) (undo-tree-id1093 . -25) (undo-tree-id1094 . -25) (undo-tree-id1095 . -25) (undo-tree-id1096 . -25) (undo-tree-id1097 . -25) (undo-tree-id1098 . -25) (undo-tree-id1099 . -25) (undo-tree-id1100 . -25) (undo-tree-id1101 . -25) (undo-tree-id1102 . -25) (undo-tree-id1103 . -25) (undo-tree-id1104 . -25) (undo-tree-id1105 . -25) (undo-tree-id1106 . -25) (undo-tree-id1107 . -25) (t 25983 10978 649682 381000)) nil (25983 11046 758918 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3293) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1)) nil (25983 11046 758856 0) 0 nil])
([nil nil ((#("	});" 0 2 (fontified t) 2 4 (fontified t)) . 3418) (undo-tree-id988 . -4) (undo-tree-id989 . -4) (undo-tree-id990 . -4)) nil (25983 11046 758799 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3418) (undo-tree-id987 . -1)) nil (25983 11046 758791 0) 0 nil])
([nil nil ((#("profile" 0 7 (fontified t)) . -3381) (undo-tree-id1153 . -7) (undo-tree-id1154 . -7) (undo-tree-id1155 . -7) (undo-tree-id1156 . -7) (undo-tree-id1157 . -7) (undo-tree-id1158 . -7) (undo-tree-id1159 . -7) (undo-tree-id1160 . -7) (undo-tree-id1161 . -7) (undo-tree-id1162 . -7) (undo-tree-id1163 . -7) (undo-tree-id1164 . -7) (undo-tree-id1165 . -7) (undo-tree-id1166 . -7) (undo-tree-id1167 . -7) (undo-tree-id1168 . -7) 3388 (t 25983 11046 772044 439000)) nil (25983 11100 491661 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -3380) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) 3381) nil (25983 11100 491639 0) 0 nil])
([nil nil ((#("input}" 0 5 (fontified t) 5 6 (fontified t)) . -2318) (undo-tree-id1401 . -6) (undo-tree-id1402 . -6) (undo-tree-id1403 . -6) (undo-tree-id1404 . -6) (undo-tree-id1405 . -6) (undo-tree-id1406 . -6) (undo-tree-id1407 . -6) (undo-tree-id1408 . -6) (undo-tree-id1409 . -6) (undo-tree-id1410 . -6) (undo-tree-id1411 . -6) (undo-tree-id1412 . -6) (undo-tree-id1413 . -6) (undo-tree-id1414 . -6) (undo-tree-id1415 . -6) (undo-tree-id1416 . -6) 2324 (t 25983 11100 504882 554000)) nil (25983 11132 520134 0) 0 nil])
([nil nil ((#("profile_" 0 8 (fontified t)) . -2310) (undo-tree-id1383 . -8) (undo-tree-id1384 . -8) (undo-tree-id1385 . -8) (undo-tree-id1386 . -8) (undo-tree-id1387 . -8) (undo-tree-id1388 . -8) (undo-tree-id1389 . -8) (undo-tree-id1390 . -8) (undo-tree-id1391 . -8) (undo-tree-id1392 . -8) (undo-tree-id1393 . -8) (undo-tree-id1394 . -8) (undo-tree-id1395 . -8) (undo-tree-id1396 . -8) (undo-tree-id1397 . -8) (undo-tree-id1398 . -8) (undo-tree-id1399 . -8) (undo-tree-id1400 . -8) 2318) nil (25983 11132 520117 0) 0 nil])
([nil nil ((#("request_" 0 8 (fontified t)) . -2302) (undo-tree-id1336 . -8) (undo-tree-id1337 . -8) (undo-tree-id1338 . -6) (undo-tree-id1339 . -6) (undo-tree-id1340 . -6) (undo-tree-id1341 . -6) (undo-tree-id1342 . -6) (undo-tree-id1343 . -6) (undo-tree-id1344 . -6) (undo-tree-id1345 . -6) (undo-tree-id1346 . -6) (undo-tree-id1347 . -6) (undo-tree-id1348 . -6) (undo-tree-id1349 . -6) (undo-tree-id1350 . -6) (undo-tree-id1351 . -6) (undo-tree-id1352 . -6) (undo-tree-id1353 . -6) (undo-tree-id1354 . -6) (undo-tree-id1355 . -6) (undo-tree-id1356 . -6) (undo-tree-id1357 . -6) (undo-tree-id1358 . -6) (undo-tree-id1359 . -6) (undo-tree-id1360 . -6) (undo-tree-id1361 . -6) (undo-tree-id1362 . -6) (undo-tree-id1363 . -6) (undo-tree-id1364 . -6) (undo-tree-id1365 . -6) (undo-tree-id1366 . -8) (undo-tree-id1367 . -8) (undo-tree-id1368 . -8) (undo-tree-id1369 . -8) (undo-tree-id1370 . -8) (undo-tree-id1371 . -8) (undo-tree-id1372 . -8) (undo-tree-id1373 . -8) (undo-tree-id1374 . -8) (undo-tree-id1375 . -8) (undo-tree-id1376 . -8) (undo-tree-id1377 . -8) (undo-tree-id1378 . -8) (undo-tree-id1379 . -8) (undo-tree-id1380 . -8) (undo-tree-id1381 . -8) (undo-tree-id1382 . -8) 2310) nil (25983 11132 520097 0) 0 nil])
([nil nil ((#("KeyCode, " 0 7 (face font-lock-type-face fontified t) 7 9 (fontified t)) . -2293) (undo-tree-id1288 . -9) (undo-tree-id1289 . -9) (undo-tree-id1290 . -9) (undo-tree-id1291 . -9) (undo-tree-id1292 . -9) (undo-tree-id1293 . -9) (undo-tree-id1294 . -9) (undo-tree-id1295 . -9) (undo-tree-id1296 . -9) (undo-tree-id1297 . -9) (undo-tree-id1298 . -9) (undo-tree-id1299 . -9) (undo-tree-id1300 . -9) (undo-tree-id1301 . -9) (undo-tree-id1302 . -9) (undo-tree-id1303 . -9) (undo-tree-id1304 . -9) (undo-tree-id1305 . -9) (undo-tree-id1306 . -9) (undo-tree-id1307 . -9) (undo-tree-id1308 . -9) (undo-tree-id1309 . -9) (undo-tree-id1310 . -9) (undo-tree-id1311 . -9) (undo-tree-id1312 . -9) (undo-tree-id1313 . -9) (undo-tree-id1314 . -9) (undo-tree-id1315 . -9) (undo-tree-id1316 . -9) (undo-tree-id1317 . -9) (undo-tree-id1318 . -9) (undo-tree-id1319 . -9) (undo-tree-id1320 . -9) (undo-tree-id1321 . -9) (undo-tree-id1322 . -9) (undo-tree-id1323 . -9) (undo-tree-id1324 . -9) (undo-tree-id1325 . -9) (undo-tree-id1326 . -9) (undo-tree-id1327 . -9) (undo-tree-id1328 . -9) (undo-tree-id1329 . -9) (undo-tree-id1330 . -9) (undo-tree-id1331 . -9) (undo-tree-id1332 . -9) (undo-tree-id1333 . -9) (undo-tree-id1334 . -9) (undo-tree-id1335 . -9) 2302) nil (25983 11132 520050 0) 0 nil])
([nil nil ((#("Keyboard, " 0 8 (face font-lock-type-face fontified t) 8 10 (fontified t)) . -2283) (undo-tree-id1231 . -10) (undo-tree-id1232 . -10) (undo-tree-id1233 . -10) (undo-tree-id1234 . -10) (undo-tree-id1235 . -10) (undo-tree-id1236 . -10) (undo-tree-id1237 . -10) (undo-tree-id1238 . -10) (undo-tree-id1239 . -10) (undo-tree-id1240 . -10) (undo-tree-id1241 . -10) (undo-tree-id1242 . -10) (undo-tree-id1243 . -10) (undo-tree-id1244 . -10) (undo-tree-id1245 . -10) (undo-tree-id1246 . -10) (undo-tree-id1247 . -10) (undo-tree-id1248 . -10) (undo-tree-id1249 . -10) (undo-tree-id1250 . -10) (undo-tree-id1251 . -10) (undo-tree-id1252 . -10) (undo-tree-id1253 . -10) (undo-tree-id1254 . -10) (undo-tree-id1255 . -10) (undo-tree-id1256 . -10) (undo-tree-id1257 . -10) (undo-tree-id1258 . -10) (undo-tree-id1259 . -10) (undo-tree-id1260 . -10) (undo-tree-id1261 . -10) (undo-tree-id1262 . -10) (undo-tree-id1263 . -10) (undo-tree-id1264 . -10) (undo-tree-id1265 . -10) (undo-tree-id1266 . -10) (undo-tree-id1267 . -10) (undo-tree-id1268 . -10) (undo-tree-id1269 . -10) (undo-tree-id1270 . -10) (undo-tree-id1271 . -10) (undo-tree-id1272 . -10) (undo-tree-id1273 . -10) (undo-tree-id1274 . -10) (undo-tree-id1275 . -10) (undo-tree-id1276 . -10) (undo-tree-id1277 . -10) (undo-tree-id1278 . -10) (undo-tree-id1279 . -10) (undo-tree-id1280 . -10) (undo-tree-id1281 . -10) (undo-tree-id1282 . -10) (undo-tree-id1283 . -10) (undo-tree-id1284 . -10) (undo-tree-id1285 . -10) (undo-tree-id1286 . -10) (undo-tree-id1287 . -10) 2293) nil (25983 11132 520001 0) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -2282) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) 2283) nil (25983 11132 519944 0) 0 nil])
([nil nil ((2282 . 2283)) nil (25983 11132 519870 0) 0 nil])
([nil nil ((#("use crate::{component::*, keyboard::*};" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 9 (face font-lock-keyword-face fontified t) 9 12 (fontified t) 12 21 (face font-lock-constant-face fontified t) 21 26 (fontified t) 26 34 (face font-lock-constant-face fontified t) 34 37 (fontified t) 37 39 (fontified t)) . 2246) (undo-tree-id1418 . -36) (undo-tree-id1419 . -36) (undo-tree-id1420 . -36) (undo-tree-id1421 . -36) (undo-tree-id1422 . -36) (undo-tree-id1423 . -36) (undo-tree-id1424 . -36) (undo-tree-id1425 . -36) (undo-tree-id1426 . -36) (undo-tree-id1427 . -36) (undo-tree-id1428 . -36) (undo-tree-id1429 . -36) (undo-tree-id1430 . -36) (undo-tree-id1431 . -36) (undo-tree-id1432 . -36) (undo-tree-id1433 . -36) (undo-tree-id1434 . -36) (undo-tree-id1435 . -36) (undo-tree-id1436 . -36) (undo-tree-id1437 . -36) (undo-tree-id1438 . -36) (undo-tree-id1439 . -36) (undo-tree-id1440 . -36) (undo-tree-id1441 . -36) (undo-tree-id1442 . -36) (undo-tree-id1443 . -36) (undo-tree-id1444 . -36) (undo-tree-id1445 . -36) (undo-tree-id1446 . -36) (undo-tree-id1447 . -36) (undo-tree-id1448 . -36) (undo-tree-id1449 . -36) (undo-tree-id1450 . -36) (undo-tree-id1451 . -36) (undo-tree-id1452 . -36) (undo-tree-id1453 . -36) (undo-tree-id1454 . -36) (undo-tree-id1455 . -36) (undo-tree-id1456 . -36) (undo-tree-id1457 . -36) (undo-tree-id1458 . -36) (undo-tree-id1459 . -36) (undo-tree-id1460 . -36) (undo-tree-id1461 . -36) (undo-tree-id1462 . -36) (undo-tree-id1463 . -36) (undo-tree-id1464 . -36) (undo-tree-id1465 . -36) (undo-tree-id1466 . -36) (undo-tree-id1467 . -36) (undo-tree-id1468 . -36) (undo-tree-id1469 . -36) (undo-tree-id1470 . -36) (undo-tree-id1471 . -36) (undo-tree-id1472 . -36) (undo-tree-id1473 . -36) (undo-tree-id1474 . -36) (undo-tree-id1475 . -36) (undo-tree-id1476 . -36) (undo-tree-id1477 . -36) (undo-tree-id1478 . -36) (undo-tree-id1479 . -37) (undo-tree-id1480 . -37) (undo-tree-id1481 . -37) (undo-tree-id1482 . -37) (undo-tree-id1483 . -37) (undo-tree-id1484 . -37) (undo-tree-id1485 . -37) (undo-tree-id1486 . -37) (undo-tree-id1487 . -37) (undo-tree-id1488 . -37) (undo-tree-id1489 . -37) (undo-tree-id1490 . -37) (undo-tree-id1491 . -37) (undo-tree-id1492 . -37) (undo-tree-id1493 . -37) (undo-tree-id1494 . -37) (undo-tree-id1495 . -37) (undo-tree-id1496 . -39) (t 25983 11132 533746 475000)) nil (25983 11137 987461 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2246) (undo-tree-id1417 . -1)) nil (25983 11137 987377 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 225 . 226) (nil fontified nil 225 . 226) (nil fontified nil 223 . 225) (nil fontified nil 220 . 223) (nil fontified nil 212 . 220) (nil fontified nil 207 . 212) (nil fontified nil 198 . 207) (nil fontified nil 195 . 198) (nil fontified nil 190 . 195) (nil fontified nil 189 . 190) (nil fontified nil 186 . 189) (186 . 226)) nil (25983 11137 987365 0) 0 nil])
([nil nil ((3378 . 3382) (#("    " 0 4 (fontified nil)) . 3377) (undo-tree-id1497 . -4) (undo-tree-id1498 . -4) (undo-tree-id1499 . -4) (3376 . 3382) (t 25983 11138 1143 106000)) nil (25983 11370 868622 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3459 . 3460) (nil fontified nil 3438 . 3460) (nil fontified nil 3435 . 3438) (nil fontified nil 3434 . 3435) (nil fontified nil 3431 . 3434) (nil fontified nil 3427 . 3431) (nil fontified nil 3406 . 3427) (nil fontified nil 3399 . 3406) (nil fontified nil 3396 . 3399) (nil fontified nil 3390 . 3396) (nil fontified nil 3389 . 3390) (nil fontified nil 3386 . 3389) (nil fontified nil 3382 . 3386) (3382 . 3460)) nil (25983 11370 868607 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3382) 3401) nil (25983 11370 868598 0) 0 nil])
([nil nil ((3456 . 3461) (t 25983 11370 883504 737000)) nil (25983 11409 319658 0) 0 nil])
([nil nil ((3461 . 3462)) nil (25983 11409 319657 0) 0 nil])
([nil nil ((3461 . 3464) (#("n" 0 1 (fontified nil)) . 3461) (3461 . 3462) (#("nav" 0 3 (fontified nil)) . -3461) (3461 . 3464) (#("n" 0 1 (fontified t)) . -3461) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) 3462) nil (25983 11409 319655 0) 0 nil])
([nil nil ((3464 . 3468)) nil (25983 11409 319648 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3465 3470 #s(yas--snippet nil nil #s(yas--exit 3470 nil) 203 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3470 nil) 203 nil nil nil nil)) (3465 . 3470) (#("hid()$0" 0 7 (fontified nil)) . 3465) (3465 . 3472) (#("hid" 0 3 (fontified nil)) . 3465) (3465 . 3468) (#("hid()" 0 5 (fontified nil)) . -3465) (3465 . 3470) (#("hid" 0 3 (fontified t)) . -3465) (undo-tree-id1543 . -3) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -2) (undo-tree-id1549 . -2) (undo-tree-id1550 . -3) (undo-tree-id1551 . -3) 3468) nil (25983 11409 319645 0) 0 nil])
([nil nil ((3470 . 3473)) nil (25983 11409 319633 0) 0 nil])
([nil nil ((#("    nav.hid().on" 0 4 (fontified t) 4 8 (fontified t) 8 16 (fontified t)) . 3457) (undo-tree-id1500 . -4) (undo-tree-id1501 . -4) (undo-tree-id1502 . -4) (undo-tree-id1503 . -4) (undo-tree-id1504 . -4) (undo-tree-id1505 . -4) (undo-tree-id1506 . -4) (undo-tree-id1507 . -4) (undo-tree-id1508 . -4) (undo-tree-id1509 . -4) (undo-tree-id1510 . -4) (undo-tree-id1511 . -4) (undo-tree-id1512 . -4) (undo-tree-id1513 . -4) (undo-tree-id1514 . -4) (undo-tree-id1515 . -4) (undo-tree-id1516 . -4) (undo-tree-id1517 . -4) (undo-tree-id1518 . -7) (undo-tree-id1519 . -7) (undo-tree-id1520 . -8) (undo-tree-id1521 . -8) (undo-tree-id1522 . -8) (undo-tree-id1523 . -8) (undo-tree-id1524 . -8) (undo-tree-id1525 . -8) (undo-tree-id1526 . -8) (undo-tree-id1527 . -8) (undo-tree-id1528 . -8) (undo-tree-id1529 . -8) (undo-tree-id1530 . -8) (undo-tree-id1531 . -13) (undo-tree-id1532 . -13) (undo-tree-id1533 . -14) (undo-tree-id1534 . -14) (undo-tree-id1535 . -14) (undo-tree-id1536 . -15) (undo-tree-id1537 . -15) (undo-tree-id1538 . -16) (undo-tree-id1539 . -16) (undo-tree-id1540 . -16) (undo-tree-id1541 . -16) (undo-tree-id1542 . -16)) nil (25983 11409 319629 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3543 . 3544) (nil fontified nil 3540 . 3544) (nil fontified nil 3522 . 3540) (nil fontified nil 3520 . 3522) (nil fontified nil 3513 . 3520) (nil fontified nil 3511 . 3513) (nil fontified nil 3510 . 3511) (nil fontified nil 3508 . 3510) (nil fontified nil 3504 . 3508) (nil fontified nil 3502 . 3504) (nil fontified nil 3500 . 3502) (nil fontified nil 3494 . 3500) (nil fontified nil 3489 . 3494) (nil fontified nil 3488 . 3489) (nil fontified nil 3485 . 3488) (nil fontified nil 3482 . 3485) (nil fontified nil 3475 . 3482) (nil fontified nil 3472 . 3475) (nil fontified nil 3465 . 3472) (nil fontified nil 3464 . 3465) (nil fontified nil 3461 . 3464) (nil fontified nil 3457 . 3461) (3457 . 3544)) nil (25983 11409 319573 0) 0 nil])
([nil nil ((3543 . 3545)) nil (25983 11409 319566 0) 0 nil])
([nil nil ((3544 . 3545)) nil (25983 11409 319562 0) 0 nil])
([nil nil ((3545 . 3549) (#("	" 0 1 (fontified nil)) . 3544) (3544 . 3545) (#("    " 0 4 (fontified nil)) . 3544) (undo-tree-id1615 . -4) (3543 . 3549) (t 25983 11409 334048 110000)) nil (25983 11555 10513 0) 0 nil])
([nil nil ((3544 . 3545)) nil (25983 11555 10509 0) 0 nil])
([nil nil ((3545 . 3548)) nil (25983 11555 10508 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3547 3555 #s(yas--snippet nil nil #s(yas--exit 3555 nil) 204 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3555 nil) 204 nil nil nil nil)) (3547 . 3555) (#("device()$0" 0 10 (fontified nil)) . 3547) (3547 . 3557) (#("d" 0 1 (fontified nil)) . 3547) (3547 . 3548) (#("device()" 0 8 (fontified nil)) . -3547) (3547 . 3555) (#("d" 0 1 (fontified t)) . -3547) (undo-tree-id1614 . -1) 3548) nil (25983 11555 10506 0) 0 nil])
([nil nil ((3555 . 3559)) nil (25983 11555 10502 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -3556) (undo-tree-id1611 . -1) (#("r" 0 1 (fontified t)) . -3557) (undo-tree-id1612 . -1) (#("o" 0 1 (fontified t)) . -3558) (undo-tree-id1613 . -1) 3559) nil (25983 11555 10500 0) 0 nil])
([nil nil ((3556 . 3559)) nil (25983 11555 10495 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3556 3567 #s(yas--snippet nil nil #s(yas--exit 3567 nil) 205 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3567 nil) 205 nil nil nil nil)) (3556 . 3567) (#("vendor_id()$0" 0 13 (fontified nil)) . 3556) (3556 . 3569) (#("ven" 0 3 (fontified nil)) . 3556) (3556 . 3559) (#("vendor_id()" 0 11 (fontified nil)) . -3556) (3556 . 3567) (#("ven" 0 3 (fontified t)) . -3556) (undo-tree-id1610 . -3) 3559) nil (25983 11555 10493 0) 0 nil])
([nil nil ((3567 . 3570)) nil (25983 11555 10489 0) 0 nil])
([nil nil ((#("	e.device().vendor_id() ==" 0 3 (fontified t) 3 12 (fontified t) 12 26 (fontified t)) . 3544)) nil (25983 11555 10488 0) 0 nil])
([nil nil ((3544 . 3545)) nil (25983 11555 10487 0) 0 nil])
([nil nil ((3545 . 3548)) nil (25983 11555 10486 0) 0 nil])
([nil nil ((3548 . 3549)) nil (25983 11555 10485 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -3548) (undo-tree-id1609 . -1) 3549) nil (25983 11555 10484 0) 0 nil])
([nil nil ((3548 . 3551)) nil (25983 11555 10481 0) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -3548) (undo-tree-id1606 . -1) (#("e" 0 1 (fontified t)) . -3549) (undo-tree-id1607 . -1) (#("n" 0 1 (fontified t)) . -3550) (undo-tree-id1608 . -1) 3551) nil (25983 11555 10480 0) 0 nil])
([nil nil ((3548 . 3550)) nil (25983 11555 10475 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3545) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -3546) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (#(" " 0 1 (fontified t)) . -3547) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (#("e" 0 1 (fontified t)) . -3548) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (#("." 0 1 (fontified t)) . -3549) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) 3550) nil (25983 11555 10473 0) 0 nil])
([nil nil ((3545 . 3548)) nil (25983 11555 10457 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3546) (undo-tree-id1591 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -3547) (undo-tree-id1592 . -1) 3548) nil (25983 11555 10456 0) 0 nil])
([nil nil ((3546 . 3555)) nil (25983 11555 10452 0) 0 nil])
([nil nil ((3555 . 3561)) nil (25983 11555 10451 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3560 3568 #s(yas--snippet nil nil #s(yas--exit 3568 nil) 206 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3568 nil) 206 nil nil nil nil)) (3560 . 3568) (#("device()$0" 0 10 (fontified nil)) . 3560) (3560 . 3570) (#("d" 0 1 (fontified nil)) . 3560) (3560 . 3561) (#("device()" 0 8 (fontified nil)) . -3560) (3560 . 3568) (#("d" 0 1 (fontified t)) . -3560) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) 3561) nil (25983 11555 10449 0) 0 nil])
([nil nil ((3568 . 3569)) nil (25983 11555 10444 0) 0 nil])
([nil nil ((3569 . 3571)) nil (25983 11555 10443 0) 0 nil])
([nil nil ((3571 . 3576)) nil (25983 11555 10442 0) 0 nil])
([nil nil ((3574 . 3580) (#("de" 0 2 (fontified nil)) . 3574) (3574 . 3576) (#("device" 0 6 (fontified nil)) . -3574) (3574 . 3580) (#("de" 0 2 (fontified t)) . -3574) (undo-tree-id1588 . -2) 3576) nil (25983 11555 10440 0) 0 nil])
([nil nil ((3580 . 3582)) nil (25983 11555 10437 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -3581) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) 3582) nil (25983 11555 10436 0) 0 nil])
([nil nil ((3581 . 3582)) nil (25983 11555 10433 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3581) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) 3582) nil (25983 11555 10431 0) 0 nil])
([nil nil ((3581 . 3584)) nil (25983 11555 10428 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3581 3592 #s(yas--snippet nil nil #s(yas--exit 3592 nil) 207 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3592 nil) 207 nil nil nil nil)) (3581 . 3592) (#("vendor_id()$0" 0 13 (fontified nil)) . 3581) (3581 . 3594) (#("ven" 0 3 (fontified nil)) . 3581) (3581 . 3584) (#("vendor_id()" 0 11 (fontified nil)) . -3581) (3581 . 3592) (#("ven" 0 3 (fontified t)) . -3581) (undo-tree-id1583 . -3) 3584) nil (25983 11555 10426 0) 0 nil])
([nil nil ((3592 . 3597)) nil (25983 11555 10422 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -3596) (undo-tree-id1582 . -1) 3597) nil (25983 11555 10420 0) 0 nil])
([nil nil ((3596 . 3606)) nil (25983 11555 10418 0) 0 nil])
([nil nil ((3606 . 3608)) nil (25983 11555 10417 0) 0 nil])
([nil nil ((3606 . 3612) (#("de" 0 2 (fontified nil)) . 3606) (3606 . 3608) (#("device" 0 6 (fontified nil)) . -3606) (3606 . 3612) (#("de" 0 2 (fontified t)) . -3606) (undo-tree-id1581 . -2) 3608) nil (25983 11555 10416 0) 0 nil])
([nil nil ((3612 . 3614)) nil (25983 11555 10412 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -3613) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) 3614) nil (25983 11555 10411 0) 0 nil])
([nil nil ((3613 . 3615)) nil (25983 11555 10408 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3613 3625 #s(yas--snippet nil nil #s(yas--exit 3625 nil) 208 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3625 nil) 208 nil nil nil nil)) (3613 . 3625) (#("product_id()$0" 0 14 (fontified nil)) . 3613) (3613 . 3627) (#("pr" 0 2 (fontified nil)) . 3613) (3613 . 3615) (#("product_id()" 0 12 (fontified nil)) . -3613) (3613 . 3625) (#("pr" 0 2 (fontified t)) . -3613) (undo-tree-id1578 . -2) 3615) nil (25983 11555 10406 0) 0 nil])
([nil nil ((3625 . 3629)) nil (25983 11555 10401 0) 0 nil])
([nil nil ((3629 . 3631)) nil (25983 11555 10400 0) 0 nil])
([nil nil ((#("9" 0 1 (fontified t)) . -3629) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (#("x" 0 1 (fontified t)) . -3630) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) 3631) nil (25983 11555 10399 0) 0 nil])
([nil nil ((3629 . 3632)) nil (25983 11555 10394 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -3631) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) 3632) nil (25983 11555 10393 0) 0 nil])
([nil nil ((3631 . 3638)) nil (25983 11555 10389 0) 0 nil])
([nil nil ((3639 . 3640) (#("	    " 0 5 (fontified nil)) . 3638) (undo-tree-id1571 . -1) (3639 . 3643) (3637 . 3640)) nil (25983 11555 10388 0) 0 nil])
([nil nil ((3638 . 3643)) nil (25983 11555 10385 0) 0 nil])
([nil nil ((3643 . 3645)) nil (25983 11555 10384 0) 0 nil])
([nil nil ((3643 . 3650) (#("ui" 0 2 (fontified nil)) . 3643) (3643 . 3645) (#("uistate" 0 7 (fontified nil)) . -3643) (3643 . 3650) (#("ui" 0 2 (fontified t)) . -3643) (undo-tree-id1570 . -2) 3645) nil (25983 11555 10383 0) 0 nil])
([nil nil ((3650 . 3651)) nil (25983 11555 10379 0) 0 nil])
([nil nil ((3651 . 3652)) nil (25983 11555 10378 0) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -3651) (undo-tree-id1569 . -1) 3652) nil (25983 11555 10377 0) 0 nil])
([nil nil ((3651 . 3653)) nil (25983 11555 10375 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3658 3660 nil nil nil t #s(yas--exit 3661 nil))) #s(yas--exit 3661 nil) 209 nil #s(yas--field 1 3658 3660 nil nil nil t #s(yas--exit 3661 nil)) nil nil)) (3651 . 3660) (#("update(${1:f})$0" 0 16 (fontified nil)) . 3651) (3651 . 3667) (#("up" 0 2 (fontified nil)) . 3651) (3651 . 3653) (#("update(â€¦) (as SignalUpdate)" 0 27 (fontified nil)) . -3651) (3651 . 3678) (#("up" 0 2 (fontified t)) . -3651) (undo-tree-id1568 . -2) 3653) nil (25983 11555 10372 0) 0 nil])
([nil nil ((3659 . 3660) (#("f" 0 1 (fontified nil)) . 3659) (3658 . 3659)) nil (25983 11555 10368 0) 0 nil])
([nil nil ((3659 . 3662)) nil (25983 11555 10366 0) 0 nil])
([nil nil ((#("U" 0 1 (face font-lock-type-face fontified t)) . -3659) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -3660) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (#("S" 0 1 (face font-lock-type-face fontified t)) . -3661) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) 3662) nil (25983 11555 10365 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3651 3661 #s(yas--snippet nil (#s(yas--field 1 3658 3660 nil nil nil t #s(yas--exit 3661 nil))) #s(yas--exit 3661 nil) 209 nil #s(yas--field 1 3658 3660 nil nil nil t #s(yas--exit 3661 nil)) nil nil))) nil (25983 11555 10357 0) 0 nil])
([nil nil ((3661 . 3662)) nil (25983 11555 10355 0) 0 nil])
([nil nil ((3659 . 3661)) nil (25983 11555 10354 0) 0 nil])
([nil nil ((#("I" 0 1 (face font-lock-type-face fontified t)) . -3660) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) 3661) nil (25983 11555 10352 0) 0 nil])
([nil nil ((3660 . 3662)) nil (25983 11555 10336 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-type-face fontified t)) . -3661) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) 3662 (t 25983 11555 26963 79000)) nil (25983 11600 644963 0) 0 nil])
([nil nil ((3661 . 3666)) nil (25983 11600 644959 0) 0 nil])
([nil nil ((#("UiState" 0 7 (face font-lock-type-face fontified t)) . -3659) (undo-tree-id1700 . -7) (undo-tree-id1701 . -7) (undo-tree-id1702 . -7) 3666) nil (25983 11600 644958 0) 0 nil])
([nil nil ((3659 . 3665)) nil (25983 11600 644954 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3664) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) 3665) nil (25983 11600 644953 0) 0 nil])
([nil nil ((3665 . 3669)) nil (25983 11600 644945 0) 0 nil])
([nil nil ((3666 . 3671) (#("sta" 0 3 (fontified nil)) . 3666) (3666 . 3669) (#("state" 0 5 (fontified nil)) . -3666) (3666 . 3671) (#("sta" 0 3 (fontified t)) . -3666) (undo-tree-id1683 . -3) (undo-tree-id1684 . -1) (undo-tree-id1685 . -2) (undo-tree-id1686 . -2) (undo-tree-id1687 . -2) (undo-tree-id1688 . -2) (undo-tree-id1689 . -3) (undo-tree-id1690 . -3) (undo-tree-id1691 . -3) (undo-tree-id1692 . -3) 3669) nil (25983 11600 644943 0) 0 nil])
([nil nil ((3671 . 3673)) nil (25983 11600 644930 0) 0 nil])
([nil nil ((3672 . 3682) (#("h" 0 1 (fontified nil)) . 3672) (3672 . 3673) (#("hid_device" 0 10 (fontified nil)) . -3672) (3672 . 3682) (#("h" 0 1 (fontified t)) . -3672) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) 3673) nil (25983 11600 644928 0) 0 nil])
([nil nil ((3682 . 3687)) nil (25983 11600 644921 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3684) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (#("n" 0 1 (fontified t)) . -3685) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (#("e" 0 1 (fontified t)) . -3686) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) 3687) nil (25983 11600 644918 0) 0 nil])
([nil nil ((3684 . 3686)) nil (25983 11600 644893 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -3684) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (#("e" 0 1 (fontified t)) . -3685) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) 3686) nil (25983 11600 644891 0) 0 nil])
([nil nil ((3684 . 3687)) nil (25983 11600 644877 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3684) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (#("m" 0 1 (fontified t)) . -3685) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (#("e" 0 1 (fontified t)) . -3686) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) 3687) nil (25983 11600 644874 0) 0 nil])
([nil nil ((3684 . 3689)) nil (25983 11600 644850 0) 0 nil])
([nil nil ((3688 . 3690)) nil (25983 11600 644849 0) 0 nil])
([nil nil ((3688 . 3694) (#("de" 0 2 (fontified nil)) . 3688) (3688 . 3690) (#("device" 0 6 (fontified nil)) . -3688) (3688 . 3694) (#("de" 0 2 (fontified t)) . -3688) (undo-tree-id1616 . -2) (undo-tree-id1617 . -1) (undo-tree-id1618 . -2) (undo-tree-id1619 . -2) (undo-tree-id1620 . -2) (undo-tree-id1621 . -2) 3690) nil (25983 11600 644844 0) 0 nil])
([nil nil ((3708 . 3713) (t 25983 11600 659964 307000)) nil (25983 11666 448330 0) 0 nil])
([nil nil ((3713 . 3714)) nil (25983 11666 448328 0) 0 nil])
([nil nil ((3713 . 3716) (#("n" 0 1 (fontified nil)) . 3713) (3713 . 3714) (#("nav" 0 3 (fontified nil)) . -3713) (3713 . 3716) (#("n" 0 1 (fontified t)) . -3713) (undo-tree-id1751 . -1) 3714) nil (25983 11666 448327 0) 0 nil])
([nil nil ((3716 . 3720)) nil (25983 11666 448323 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3717 3722 #s(yas--snippet nil nil #s(yas--exit 3722 nil) 210 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3722 nil) 210 nil nil nil nil)) (3717 . 3722) (#("hid()$0" 0 7 (fontified nil)) . 3717) (3717 . 3724) (#("hid" 0 3 (fontified nil)) . 3717) (3717 . 3720) (#("hid()" 0 5 (fontified nil)) . -3717) (3717 . 3722) (#("hid" 0 3 (fontified t)) . -3717) (undo-tree-id1750 . -3) 3720) nil (25983 11666 448321 0) 0 nil])
([nil nil ((3722 . 3725)) nil (25983 11666 448317 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3723 3734 #s(yas--snippet nil nil #s(yas--exit 3734 nil) 211 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3734 nil) 211 nil nil nil nil)) (3723 . 3734) (#("onconnect()$0" 0 13 (fontified nil)) . 3723) (3723 . 3736) (#("on" 0 2 (fontified nil)) . 3723) (3723 . 3725) (#("onconnect()" 0 11 (fontified nil)) . -3723) (3723 . 3734) (#("on" 0 2 (fontified t)) . -3723) (undo-tree-id1749 . -2) 3725) nil (25983 11666 448315 0) 0 nil])
([nil nil ((#("onconnect()" 0 11 (fontified t)) . -3723) (undo-tree-id1746 . -11) (undo-tree-id1747 . -11) (undo-tree-id1748 . -11) 3734) nil (25983 11666 448310 0) 0 nil])
([nil nil ((3723 . 3726)) nil (25983 11666 448302 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3737 3775 nil nil nil t #s(yas--exit 3776 nil))) #s(yas--exit 3776 nil) 212 nil #s(yas--field 1 3737 3775 nil nil nil t #s(yas--exit 3776 nil)) nil nil)) (3723 . 3743) (#("set_onconnect(${1:value})$0" 0 27 (fontified nil)) . 3723) (3723 . 3750) (#("set" 0 3 (fontified nil)) . 3723) (3723 . 3726) (#("set_onconnect(â€¦)" 0 16 (fontified nil)) . -3723) (3723 . 3739) (#("set" 0 3 (fontified t)) . -3723) (undo-tree-id1745 . -3) 3726) nil (25983 11666 448300 0) 0 nil])
([nil nil ((3738 . 3741) (#("value" 0 5 (fontified nil)) . 3738) (undo-tree-id1744 . -5) (3737 . 3738)) nil (25983 11666 448296 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3742 3774 nil nil nil t #s(yas--exit 3775 nil))) #s(yas--exit 3775 nil) 213 nil #s(yas--field 1 3742 3774 nil nil nil t #s(yas--exit 3775 nil)) #s(yas--field 1 3737 3775 nil nil nil t #s(yas--exit 3776 nil)) nil)) (3737 . 3745) (#("Some(${1:()})$0" 0 15 (fontified nil)) . 3737) (undo-tree-id1738 . -15) (3737 . 3752) (#("Some" 0 4 (fontified nil)) . 3737) (undo-tree-id1739 . -4) (3737 . 3741) (#("Some(â€¦)" 0 7 (fontified nil)) . -3737) (undo-tree-id1740 . -7) (3737 . 3744) (#("Some" 0 4 (face font-lock-type-face fontified t)) . -3737) (undo-tree-id1741 . -4) (undo-tree-id1742 . -4) (undo-tree-id1743 . -4) 3741) nil (25983 11666 448292 0) 0 nil])
([nil nil ((3743 . 3744) (#("()" 0 2 (fontified nil)) . 3743) (undo-tree-id1737 . -2) (3742 . 3743)) nil (25983 11666 448283 0) 0 nil])
([nil nil ((3742 . 3749) (#("cl" 0 2 (fontified nil)) . 3742) (undo-tree-id1725 . -2) (3742 . 3744) (#("closure" 0 7 (fontified nil)) . -3742) (undo-tree-id1726 . -7) (3742 . 3749) (#("cl" 0 2 (fontified t)) . -3742) (undo-tree-id1727 . -2) (undo-tree-id1728 . -2) (undo-tree-id1729 . -2) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -2) (undo-tree-id1734 . -2) (undo-tree-id1735 . -2) (undo-tree-id1736 . -2) 3744) nil (25983 11666 448279 0) 0 nil])
([nil nil ((3749 . 3752)) nil (25983 11668 111045 0) 0 nil])
([nil nil ((3752 . 3753)) nil (25983 11686 760677 0) 0 nil] [nil nil ((apply yas--snippet-revive 3750 3762 #s(yas--snippet nil nil #s(yas--exit #<marker at 3955 in app.rs> nil) 214 nil nil #s(yas--field 1 3742 3774 nil nil nil t #s(yas--exit 3775 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 3955 in app.rs> nil) 214 nil nil #s(yas--field 1 3742 3774 nil nil nil t #s(yas--exit 3775 nil)) nil)) (3750 . 3762) (#("as_element()$0" 0 14 (fontified nil)) . 3750) (undo-tree-id1713 . -14) (3750 . 3764) (#("as" 0 2 (fontified nil)) . 3750) (undo-tree-id1714 . -2) (3750 . 3752) (#("as_element()" 0 12 (fontified nil)) . -3750) (undo-tree-id1715 . -12) (3750 . 3762) (#("as" 0 2 (face font-lock-keyword-face fontified t)) . -3750) (undo-tree-id1716 . -2) (undo-tree-id1717 . -2) (undo-tree-id1718 . -2) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -2) (undo-tree-id1722 . -2) (undo-tree-id1723 . -2) (undo-tree-id1724 . -2) 3752) ((3750 . 3752) (#("as_element()" 0 12 (fontified nil)) . 3750) (undo-tree-id1773 . -12) (3750 . 3762) (#("as" 0 2 (fontified nil)) . 3750) (undo-tree-id1774 . -2) (3750 . 3752) (#("as_element()$0" 0 14 (fontified nil)) . 3750) (undo-tree-id1775 . -14) (3750 . 3764) (#("as_element()" 0 12 (fontified t)) . 3750) (undo-tree-id1776 . -12) (undo-tree-id1777 . -12) (undo-tree-id1778 . -12) (undo-tree-id1779 . -12) (undo-tree-id1780 . -12) (undo-tree-id1781 . -12) (undo-tree-id1782 . -12) (undo-tree-id1783 . -12) (undo-tree-id1784 . -12) (undo-tree-id1785 . -12) (undo-tree-id1786 . -12) (undo-tree-id1787 . -12) (undo-tree-id1788 . -12) (undo-tree-id1789 . -12) (undo-tree-id1790 . -12) (undo-tree-id1791 . -12) (undo-tree-id1792 . -12) (undo-tree-id1793 . -12) (undo-tree-id1794 . -12) (undo-tree-id1795 . -12) (undo-tree-id1796 . -12) (undo-tree-id1797 . -12) (undo-tree-id1798 . -12) (undo-tree-id1799 . -12) (undo-tree-id1800 . -12) (undo-tree-id1801 . -12) (undo-tree-id1802 . -12)) (25983 11667 644171 0) 0 nil])
([nil nil ((3753 . 3754)) nil (25983 11686 760676 0) 0 nil])
([nil nil ((3762 . 3763)) ((#("." 0 1 (fontified t)) . 3762) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1)) (25983 11666 448607 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -3753) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) 3754) nil (25983 11686 760674 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3762) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) 3763) ((3762 . 3763)) (25983 11666 448243 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3750 3758 #s(yas--snippet nil nil #s(yas--exit 3758 nil) 215 nil nil #s(yas--field 1 3742 3774 nil nil nil t #s(yas--exit 3775 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3758 nil) 215 nil nil #s(yas--field 1 3742 3774 nil nil nil t #s(yas--exit 3775 nil)) nil)) (3750 . 3758) (#("as_ref()$0" 0 10 (fontified nil)) . 3750) (undo-tree-id1826 . -10) (3750 . 3760) (#("as_" 0 3 (fontified nil)) . 3750) (undo-tree-id1827 . -3) (3750 . 3753) (#("as_ref() (as AsRef)" 0 19 (fontified nil)) . -3750) (undo-tree-id1828 . -19) (3750 . 3769) (#("as_" 0 3 (fontified t)) . -3750) (undo-tree-id1829 . -3) (undo-tree-id1830 . -3) (undo-tree-id1831 . -3) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -2) (undo-tree-id1835 . -2) (undo-tree-id1836 . -2) (undo-tree-id1837 . -2) (undo-tree-id1838 . -2) (undo-tree-id1839 . -2) (undo-tree-id1840 . -2) (undo-tree-id1841 . -2) (undo-tree-id1842 . -2) (undo-tree-id1843 . -2) (undo-tree-id1844 . -2) (undo-tree-id1845 . -3) (undo-tree-id1846 . -3) (undo-tree-id1847 . -3) (undo-tree-id1848 . -3) (undo-tree-id1849 . -3) (undo-tree-id1850 . -3) (undo-tree-id1851 . -3) (undo-tree-id1852 . -3) (undo-tree-id1853 . -3) (undo-tree-id1854 . -3) (undo-tree-id1855 . -3) 3753) nil (25983 11686 760664 0) 0 nil])
nil
([nil nil ((3758 . 3759)) nil (25983 11686 760632 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -3758) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) 3759) nil (25983 11686 760630 0) 0 nil])
([nil nil ((3758 . 3760)) nil (25983 11686 760621 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3759 3774 #s(yas--snippet nil nil #s(yas--exit 3774 nil) 216 nil nil #s(yas--field 1 3742 3774 nil nil nil t #s(yas--exit 3775 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3774 nil) 216 nil nil #s(yas--field 1 3742 3774 nil nil nil t #s(yas--exit 3775 nil)) nil)) (3759 . 3774) (#("unchecked_ref()$0" 0 17 (fontified nil)) . 3759) (undo-tree-id1808 . -17) (3759 . 3776) (#("u" 0 1 (fontified nil)) . 3759) (undo-tree-id1809 . -1) (3759 . 3760) (#("unchecked_ref() (as JsCast)" 0 27 (fontified nil)) . -3759) (undo-tree-id1810 . -27) (3759 . 3786) (#("u" 0 1 (fontified t)) . -3759) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) 3760) nil (25983 11686 760618 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3737 3775 #s(yas--snippet nil (#s(yas--field 1 3742 3774 nil nil nil t #s(yas--exit 3775 nil))) #s(yas--exit 3775 nil) 213 nil #s(yas--field 1 3742 3774 nil nil nil t #s(yas--exit 3775 nil)) #s(yas--field 1 3737 3775 nil nil nil t #s(yas--exit 3776 nil)) nil))) nil (25983 11686 760605 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3723 3776 #s(yas--snippet nil (#s(yas--field 1 3737 3775 nil nil nil t #s(yas--exit 3776 nil))) #s(yas--exit 3776 nil) 212 nil #s(yas--field 1 3737 3775 nil nil nil t #s(yas--exit 3776 nil)) nil nil))) nil (25983 11686 760604 0) 0 nil])
([nil nil ((3776 . 3777)) nil (25983 11686 760603 0) 0 nil])
([nil nil ((3777 . 3782)) nil (25983 11686 760602 0) 0 nil])
([nil nil ((3782 . 3784)) nil (25983 11686 760601 0) 0 nil])
([nil nil ((3782 . 3789) (#("cl" 0 2 (fontified nil)) . 3782) (3782 . 3784) (#("closure" 0 7 (fontified nil)) . -3782) (3782 . 3789) (#("cl" 0 2 (fontified t)) . -3782) (undo-tree-id1803 . -2) (undo-tree-id1804 . -1) (undo-tree-id1805 . -2) (undo-tree-id1806 . -2) (undo-tree-id1807 . -2) 3784) nil (25983 11686 760599 0) 0 nil])
([nil nil ((3789 . 3790)) nil (25983 11686 760585 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3790 3798 #s(yas--snippet nil nil #s(yas--exit 3798 nil) 217 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3798 nil) 217 nil nil nil nil)) (3790 . 3798) (#("forget()$0" 0 10 (fontified nil)) . 3790) (3790 . 3800) (#("forget()" 0 8 (fontified nil)) . -3790) (3790 . 3798)) nil (25983 11686 760583 0) 0 nil])
([nil nil ((3798 . 3799)) nil (25983 11686 760576 0) 0 nil])
([nil nil ((3637 . 3643) (t 25983 11686 776760 81000)) nil (25983 11759 599152 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3734 . 3735) (nil fontified nil 3732 . 3735) (nil fontified nil 3712 . 3732) (nil fontified nil 3704 . 3712) (nil fontified nil 3699 . 3704) (nil fontified nil 3677 . 3699) (nil fontified nil 3669 . 3677) (nil fontified nil 3667 . 3669) (nil fontified nil 3653 . 3667) (nil fontified nil 3647 . 3653) (nil fontified nil 3643 . 3647) (3643 . 3735)) nil (25983 11759 599150 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3643) 3659) nil (25983 11759 599146 0) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -3730) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) 3731) nil (25983 11759 599141 0) 0 nil])
([nil nil ((3638 . 3639) (t 25983 11759 615699 625000)) nil (25983 11783 975269 0) 0 nil])
([nil nil ((#("	    wasm_bindgen_futures::JsFuture::from(device.open()).await.expect(\"Cannot Open Device\");" 0 5 (fontified t) 5 11 (face font-lock-constant-face fontified t) 11 25 (face font-lock-constant-face fontified t) 25 27 (fontified t) 27 35 (face font-lock-type-face fontified t) 35 57 (fontified t) 57 62 (face font-lock-keyword-face fontified t) 62 70 (fontified t) 70 90 (face font-lock-string-face fontified t) 90 92 (fontified t)) . 3639) (undo-tree-id1888 . -5) (undo-tree-id1889 . -5) (undo-tree-id1890 . -92) (undo-tree-id1891 . -92) (undo-tree-id1892 . -92) (undo-tree-id1893 . -92) (undo-tree-id1894 . -92) (undo-tree-id1895 . -92) (undo-tree-id1896 . -92) (undo-tree-id1897 . -92) (undo-tree-id1898 . -92) (undo-tree-id1899 . -92) (undo-tree-id1900 . -92) (undo-tree-id1901 . -92) (undo-tree-id1902 . -92) (undo-tree-id1903 . -92) (undo-tree-id1904 . -92) (undo-tree-id1905 . -92) (undo-tree-id1906 . -92) (undo-tree-id1907 . -92) (undo-tree-id1908 . -92) (undo-tree-id1909 . -92) (undo-tree-id1910 . -92) (undo-tree-id1911 . -92) (undo-tree-id1912 . -92) (undo-tree-id1913 . -92) (undo-tree-id1914 . -92) (undo-tree-id1915 . -92) (undo-tree-id1916 . -92) (undo-tree-id1917 . -92) (undo-tree-id1918 . -92) (undo-tree-id1919 . -92) (undo-tree-id1920 . -92) (undo-tree-id1921 . -92) (undo-tree-id1922 . -92) (undo-tree-id1923 . -92) (undo-tree-id1924 . -92) (undo-tree-id1925 . -92) (undo-tree-id1926 . -92) (undo-tree-id1927 . -92) (undo-tree-id1928 . -92) (undo-tree-id1929 . -92) (undo-tree-id1930 . -92) (undo-tree-id1931 . -92) (undo-tree-id1932 . -92) (undo-tree-id1933 . -92) (undo-tree-id1934 . -92) (undo-tree-id1935 . -92) (undo-tree-id1936 . -92) (undo-tree-id1937 . -92) (undo-tree-id1938 . -92) (undo-tree-id1939 . -92) (undo-tree-id1940 . -92) (undo-tree-id1941 . -92) (undo-tree-id1942 . -92) (undo-tree-id1943 . -92) (undo-tree-id1944 . -92) (undo-tree-id1945 . -92) (undo-tree-id1946 . -92) (undo-tree-id1947 . -92) (undo-tree-id1948 . -92) (undo-tree-id1949 . -92) (undo-tree-id1950 . -92) (undo-tree-id1951 . -92) (undo-tree-id1952 . -92) (undo-tree-id1953 . -92) (undo-tree-id1954 . -92) (undo-tree-id1955 . -92) (undo-tree-id1956 . -92) (undo-tree-id1957 . -92) (undo-tree-id1958 . -92) (undo-tree-id1959 . -92) (undo-tree-id1960 . -92) (undo-tree-id1961 . -92) (undo-tree-id1962 . -92) (undo-tree-id1963 . -92) (undo-tree-id1964 . -92) (undo-tree-id1965 . -92) (undo-tree-id1966 . -92) (undo-tree-id1967 . -92) (undo-tree-id1968 . -92) (undo-tree-id1969 . -92) (undo-tree-id1970 . -92) (undo-tree-id1971 . -92) (undo-tree-id1972 . -92) (undo-tree-id1973 . -92) (undo-tree-id1974 . -92) (undo-tree-id1975 . -92)) nil (25983 11783 975264 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3639) (undo-tree-id1887 . -1)) nil (25983 11783 975500 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3638) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1)) nil (25983 11827 450339 0) 0 nil] [nil nil ((#("	    uistate.update(|state| state.hid_device=Some(device));" 0 5 (fontified t) 5 13 (fontified t) 13 26 (fontified t) 26 28 (fontified t) 28 34 (fontified t) 34 50 (fontified t) 50 56 (fontified t) 56 57 (fontified t) 57 59 (fontified t)) . 3639) (undo-tree-id1886 . -59)) ((3639 . 3698)) (25983 11783 975170 0) 0 nil])
([nil nil ((3294 . 3299) (#("    " 0 4 (fontified nil)) . -3253) (3297 . 3298)) nil (25983 11827 450254 0) 0 nil])
nil
([nil nil ((#("    " 0 4 (fontified t)) . -3371) (#("	" 0 1 (fontified nil)) . -3340) (3340 . 3341) (#("	" 0 1 (fontified nil)) . 3340) (undo-tree-id2158 . -1) (3336 . 3340) (#("	" 0 1 (fontified nil)) . -3305) (3305 . 3306) (#("	" 0 1 (fontified nil)) . 3305) (undo-tree-id2159 . -1) (3301 . 3305)) nil (25983 11827 450252 0) 0 nil])
([nil nil ((3299 . 3301)) nil (25983 11827 450247 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3299) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -3300) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) 3301) nil (25983 11827 450245 0) 0 nil])
([nil nil ((3299 . 3304)) nil (25983 11827 450233 0) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -3302) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (#("i" 0 1 (fontified t)) . -3303) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) 3304) nil (25983 11827 450231 0) 0 nil])
([nil nil ((3302 . 3304)) nil (25983 11827 450216 0) 0 nil])
([nil nil ((3302 . 3308) (#("de" 0 2 (fontified nil)) . 3302) (3302 . 3304) (#("device" 0 6 (fontified nil)) . -3302) (3302 . 3308) (#("de" 0 2 (fontified t)) . -3302) (undo-tree-id2128 . -2) (undo-tree-id2129 . -1) (undo-tree-id2130 . -2) (undo-tree-id2131 . -2) (undo-tree-id2132 . -2) (undo-tree-id2133 . -2) 3304) nil (25983 11827 450214 0) 0 nil])
([nil nil ((3308 . 3311)) nil (25983 11827 450206 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3309 3317 #s(yas--snippet nil nil #s(yas--exit 3317 nil) 218 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3317 nil) 218 nil nil nil nil)) (3309 . 3317) (#("opened()$0" 0 10 (fontified nil)) . 3309) (3309 . 3319) (#("op" 0 2 (fontified nil)) . 3309) (3309 . 3311) (#("opened()" 0 8 (fontified nil)) . -3309) (3309 . 3317) (#("op" 0 2 (fontified t)) . -3309) (undo-tree-id2121 . -2) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -2) (undo-tree-id2125 . -2) (undo-tree-id2126 . -2) (undo-tree-id2127 . -2) 3311) nil (25983 11827 450204 0) 0 nil])
([nil nil ((#("	    logging::log!(\"hid changed\");" 0 5 (fontified t) 5 12 (face font-lock-constant-face fontified t) 12 14 (fontified t) 14 18 (face font-lock-preprocessor-face fontified t) 18 19 (fontified t) 19 32 (face font-lock-string-face fontified t) 32 33 (fontified t) 33 34 (fontified t rear-nonsticky t)) . 3318) (undo-tree-id2085 . -5) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -25) (undo-tree-id2105 . -25) (undo-tree-id2106 . -25) (undo-tree-id2107 . -25) (undo-tree-id2108 . -25) (undo-tree-id2109 . -25) (undo-tree-id2110 . -25) (undo-tree-id2111 . -25) (undo-tree-id2112 . -25) (undo-tree-id2113 . -25) (undo-tree-id2114 . -25) (undo-tree-id2115 . -25) (undo-tree-id2116 . -25) (undo-tree-id2117 . -25) (undo-tree-id2118 . -25) (undo-tree-id2119 . -25) (undo-tree-id2120 . -34)) nil (25983 11827 450192 0) 0 nil])
([nil nil ((3317 . 3319)) nil (25983 11827 450156 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -3317) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (#("." 0 1 (fontified t)) . -3318) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) 3319) nil (25983 11827 450154 0) 0 nil])
([nil nil ((3317 . 3319)) nil (25983 11827 450142 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -3317) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (#("." 0 1 (fontified t)) . -3318) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) 3319) nil (25983 11827 450140 0) 0 nil])
([nil nil ((3317 . 3319)) nil (25983 11827 451632 0) 0 nil])
([nil nil ((3319 . 3321)) nil (25983 11850 517481 0) 0 nil] [nil nil ((apply yas--snippet-revive 3302 3318 #s(yas--snippet nil nil nil 219 nil nil nil nil)) (#("device.opened()." 0 7 (fontified nil) 7 16 (fontified nil)) . -3302) (undo-tree-id1976 . -15) (undo-tree-id1977 . -16) (undo-tree-id1978 . -6) (undo-tree-id1979 . -6) (undo-tree-id1980 . -6) (undo-tree-id1981 . -6) (undo-tree-id1982 . -6) (undo-tree-id1983 . -6) (undo-tree-id1984 . -7) (undo-tree-id1985 . -7) (undo-tree-id1986 . -7) (undo-tree-id1987 . -7) (undo-tree-id1988 . -7) (undo-tree-id1989 . -7) (undo-tree-id1990 . -7) (undo-tree-id1991 . -7) (undo-tree-id1992 . -7) (undo-tree-id1993 . -15) (undo-tree-id1994 . -15) (undo-tree-id1995 . -15) (undo-tree-id1996 . -15) (undo-tree-id1997 . -15) (undo-tree-id1998 . -15) (undo-tree-id1999 . -15) (undo-tree-id2000 . -15) (undo-tree-id2001 . -15) (undo-tree-id2002 . -15) (undo-tree-id2003 . -15) (undo-tree-id2004 . -15) (undo-tree-id2005 . -15) (undo-tree-id2006 . -15) (undo-tree-id2007 . -15) (undo-tree-id2008 . -15) (undo-tree-id2009 . -15) (undo-tree-id2010 . -15) (undo-tree-id2011 . -15) (undo-tree-id2012 . -15) (undo-tree-id2013 . -15) (undo-tree-id2014 . -15) (undo-tree-id2015 . -15) (undo-tree-id2016 . -15) (undo-tree-id2017 . -15) (undo-tree-id2018 . -15) (undo-tree-id2019 . -15) (undo-tree-id2020 . -15) (undo-tree-id2021 . -15) (undo-tree-id2022 . -15) (undo-tree-id2023 . -15) (undo-tree-id2024 . -15) (undo-tree-id2025 . -15) (undo-tree-id2026 . -15) (undo-tree-id2027 . -14) (undo-tree-id2028 . -14) (undo-tree-id2029 . -14) (undo-tree-id2030 . -14) (undo-tree-id2031 . -14) (undo-tree-id2032 . -15) (undo-tree-id2033 . -15) (undo-tree-id2034 . -15) (undo-tree-id2035 . -15) (undo-tree-id2036 . -15) (undo-tree-id2037 . -15) (undo-tree-id2038 . -15) (undo-tree-id2039 . -15) (undo-tree-id2040 . -15) (undo-tree-id2041 . -15) (undo-tree-id2042 . -15) (undo-tree-id2043 . -15) (undo-tree-id2044 . -15) (undo-tree-id2045 . -15) (undo-tree-id2046 . -15) (undo-tree-id2047 . -15) (undo-tree-id2048 . -15) (undo-tree-id2049 . -15) (undo-tree-id2050 . -15) (undo-tree-id2051 . -15) (undo-tree-id2052 . -15) (undo-tree-id2053 . -16) (undo-tree-id2054 . -16) (undo-tree-id2055 . -16) (undo-tree-id2056 . -16) (undo-tree-id2057 . -16) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 219 nil nil nil nil)) (3318 . 3334) (#("!device.opened()" 0 16 (fontified nil)) . 3318) (3318 . 3334) (#("n" 0 1 (fontified nil)) . 3318) (3318 . 3319) (#("not" 0 3 (fontified nil)) . -3318) (3318 . 3321) (#("n" 0 1 (fontified t)) . -3318) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) 3319) ((3318 . 3319) (#("not" 0 3 (fontified nil)) . 3318) (3318 . 3321) (#("n" 0 1 (fontified nil)) . 3318) (3318 . 3319) (#("!device.opened()" 0 16 (fontified nil)) . 3318) (3318 . 3334) (#("!device.opened()" 0 16 (fontified nil)) . 3318) (undo-tree-id2247 . -16) (3302 . 3318)) (25983 11827 450121 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3317) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (#("n" 0 1 (fontified t)) . -3318) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (#("o" 0 1 (fontified t)) . -3319) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (#("t" 0 1 (fontified t)) . -3320) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) 3321) nil (25983 11850 517476 0) 0 nil])
nil
([nil nil ((3317 . 3322)) nil (25983 11850 517412 0) 0 nil])
([nil nil ((3322 . 3323)) nil (25983 11850 517410 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3321 3326 #s(yas--snippet nil nil nil 220 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 220 nil nil nil nil)) (3321 . 3326) (#("false" 0 5 (fontified nil)) . 3321) (3321 . 3326) (#("fa" 0 2 (fontified nil)) . 3321) (3321 . 3323) (#("false" 0 5 (fontified nil)) . -3321) (3321 . 3326) (#("fa" 0 2 (fontified t)) . -3321) (undo-tree-id2295 . -2) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -2) (undo-tree-id2300 . -2) (undo-tree-id2301 . -2) (undo-tree-id2302 . -2) 3323) nil (25983 11850 517408 0) 0 nil])
([nil nil ((3326 . 3329)) nil (25983 11850 517396 0) 0 nil])
([nil nil ((3330 . 3335) (#("		" 0 2 (fontified nil)) . 3329) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (3330 . 3331) (#("    " 0 4 (fontified nil)) . 3330) (undo-tree-id2292 . -4) (undo-tree-id2293 . -4) (undo-tree-id2294 . -4) (3328 . 3335)) nil (25983 11850 517395 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3420 . 3421) (nil fontified nil 3329 . 3421) (3329 . 3421)) nil (25983 11850 517385 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3428) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) 3429) nil (25983 11850 517381 0) 0 nil])
([nil nil ((3330 . 3331) (#("    " 0 4 (fontified t)) . 3330) 3335) nil (25983 11850 517328 0) 0 nil])
([nil nil ((3425 . 3431) (t 25983 11850 534560 326000)) nil (25983 11987 336814 0) 0 nil])
([nil nil ((3431 . 3435)) nil (25983 11987 336813 0) 0 nil])
([nil nil ((3431 . 3438) (#("logg" 0 4 (fontified nil)) . 3431) (3431 . 3435) (#("logging" 0 7 (fontified nil)) . -3431) (3431 . 3438) (#("logg" 0 4 (fontified t)) . -3431) (undo-tree-id2392 . -4) (undo-tree-id2393 . -1) (undo-tree-id2394 . -2) (undo-tree-id2395 . -2) (undo-tree-id2396 . -3) (undo-tree-id2397 . -3) (undo-tree-id2398 . -3) (undo-tree-id2399 . -4) (undo-tree-id2400 . -4) (undo-tree-id2401 . -4) (undo-tree-id2402 . -4) (undo-tree-id2403 . -4) 3435) nil (25983 11987 336811 0) 0 nil])
([nil nil ((3438 . 3441)) nil (25983 11987 336797 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3440 3446 #s(yas--snippet nil nil #s(yas--exit 3445 nil) 223 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3445 nil) 223 nil nil nil nil)) (3440 . 3446) (#("log!($0)" 0 8 (fontified nil)) . 3440) (3440 . 3448) (#("l" 0 1 (fontified nil)) . 3440) (3440 . 3441) (#("log!(â€¦)" 0 7 (fontified nil)) . -3440) (3440 . 3447) (#("l" 0 1 (fontified t)) . -3440) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) 3441) nil (25983 11987 336795 0) 0 nil])
([nil nil ((3445 . 3447)) nil (25983 11987 336788 0) 0 nil])
([nil nil ((3446 . 3447)) nil (25983 11987 336787 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t)) . -3446) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) 3447) nil (25983 11987 336786 0) 0 nil])
([nil nil ((3446 . 3452)) nil (25983 11987 336779 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . -3450) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -3451) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) 3452) nil (25983 11987 336776 0) 0 nil])
([nil nil ((3450 . 3456)) nil (25983 11987 336751 0) 0 nil])
([nil nil ((3456 . 3458)) nil (25983 11987 336750 0) 0 nil])
([nil nil ((3460 . 3461)) nil (25983 11987 336745 0) 0 nil])
([nil nil ((apply -46 3509 3977 undo--wrap-and-run-primitive-undo 3509 3977 ((3956 . 3959) (3884 . 3887) (3873 . 3876) (3863 . 3866) (3863 . 3864) (#("	" 0 1 (fontified t)) . 3863) (3859 . 3863) (3796 . 3799) (3796 . 3797) (#("	" 0 1 (fontified t)) . 3796) (3792 . 3796) (3721 . 3724) (3721 . 3722) (#("	" 0 1 (fontified t)) . 3721) (#<marker at 3752 in app.rs> . -1) (3717 . 3721) (3688 . 3691) (3688 . 3689) (#("	" 0 1 (fontified t)) . 3688) (3684 . 3688) (3598 . 3601) (3561 . 3564) (3513 . 3516) 3509))) nil (25983 12248 403456 0) 0 nil])
([nil nil ((2416 . 2421) (t 25983 12248 422196 469000)) nil (25983 58535 466496 0) 0 nil])
([nil nil ((2421 . 2436)) nil (25983 58535 466494 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -2435) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) 2436) nil (25983 58535 466492 0) 0 nil])
([nil nil ((2435 . 2436)) nil (25983 58535 466472 0) 0 nil])
([nil nil ((2729 . 2731) (t 25983 58535 484543 198000)) nil (25983 58543 887538 0) 0 nil])
([nil nil ((2731 . 2732)) nil (25983 58543 887536 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -2731) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) 2732) nil (25983 58543 887535 0) 0 nil])
([nil nil ((2731 . 2732)) nil (25983 58543 887527 0) 0 nil])
([nil nil ((2731 . 2736) (#("l" 0 1 (fontified nil)) . 2731) (2731 . 2732) (#("layer" 0 5 (fontified nil)) . -2731) (2731 . 2736) (#("l" 0 1 (fontified t)) . -2731) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) 2732) nil (25983 58543 887525 0) 0 nil])
([nil current ((2736 . 2740)) nil (25983 58543 887506 0) 0 nil])
nil
