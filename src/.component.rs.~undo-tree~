(undo-tree-save-format-version . 1)
"362aeebbda629852e607501958ebdf26b1ceae4f"
[nil nil nil nil (25942 12041 223280 0) 0 nil]
([nil nil ((141 . 142) (t 25940 58547 741104 157000)) nil (25942 12041 223279 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 172 . 173) (nil fontified nil 142 . 173) (142 . 173)) nil (25942 12041 223274 0) 0 nil])
([nil nil ((454 . 456) (t 25942 12041 367793 430000)) nil (25942 12162 778155 0) 0 nil])
([nil nil ((397 . 399)) nil (25942 12162 778153 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 777 . 778) (nil fontified nil 397 . 778) (397 . 778)) nil (25942 12169 342539 0) 0 nil])
([nil nil ((396 . 399) (t 25942 12171 410179 18000)) nil (25942 12252 814943 0) 0 nil] [nil nil ((#("GenericEventRes>>" 0 15 (face font-lock-type-face fontified t) 15 17 (fontified t)) . -460) (undo-tree-id114 . -17) (undo-tree-id115 . -17) (undo-tree-id116 . -17) (undo-tree-id117 . -17) (undo-tree-id118 . -17) (undo-tree-id119 . -17) (undo-tree-id120 . -17) (undo-tree-id121 . -17) (undo-tree-id122 . -17) (undo-tree-id123 . -17) (undo-tree-id124 . -17) (undo-tree-id125 . -17) 477) ((460 . 477)) (25942 12168 974088 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 510 . 511) (nil fontified nil 398 . 511) (398 . 511)) nil (25942 12252 814937 0) 0 nil])
([nil nil ((#("Vec<" 0 3 (face font-lock-type-face fontified t) 3 4 (fontified t)) . -456) (undo-tree-id95 . -4) (undo-tree-id96 . -4) (undo-tree-id97 . -4) (undo-tree-id98 . -4) (undo-tree-id99 . -4) (undo-tree-id100 . -4) (undo-tree-id101 . -4) (undo-tree-id102 . -4) (undo-tree-id103 . -4) (undo-tree-id104 . -4) (undo-tree-id105 . -4) (undo-tree-id106 . -4) (undo-tree-id107 . -4) (undo-tree-id108 . -4) (undo-tree-id109 . -4) (undo-tree-id110 . -4) (undo-tree-id111 . -4) (undo-tree-id112 . -4) (undo-tree-id113 . -4) 460) ((456 . 460)) (25942 12168 377198 0) 0 nil])
([nil nil ((#("    num: u16," 0 4 (fontified t) 4 7 (face font-lock-variable-name-face fontified t) 7 9 (fontified t) 9 12 (face font-lock-type-face fontified t) 12 13 (fontified t)) . 475) (undo-tree-id5 . -13) (undo-tree-id6 . -13) (undo-tree-id7 . -13) (undo-tree-id8 . -4) (undo-tree-id9 . -3) (undo-tree-id10 . -2) (undo-tree-id11 . -13) (undo-tree-id12 . -13) (undo-tree-id13 . -13) (undo-tree-id14 . -13) (undo-tree-id15 . -13) (undo-tree-id16 . -13) (undo-tree-id17 . -13) (undo-tree-id18 . -13) (undo-tree-id19 . -13) (undo-tree-id20 . -13) (undo-tree-id21 . -13) (undo-tree-id22 . -13) (undo-tree-id23 . -13) (t 25942 12252 818470 747000)) nil (25944 27519 203648 0) 0 nil])
([nil nil ((#("WriteSignal<" 0 11 (face font-lock-type-face fontified t) 11 12 (fontified t)) . -444) (undo-tree-id71 . -12) (undo-tree-id72 . -12) (undo-tree-id73 . -12) (undo-tree-id74 . -12) (undo-tree-id75 . -12) (undo-tree-id76 . -12) (undo-tree-id77 . -12) (undo-tree-id78 . -12) (undo-tree-id79 . -12) (undo-tree-id80 . -12) (undo-tree-id81 . -12) (undo-tree-id82 . -12) (undo-tree-id83 . -12) (undo-tree-id84 . -12) (undo-tree-id85 . -12) (undo-tree-id86 . -12) (undo-tree-id87 . -12) (undo-tree-id88 . -12) (undo-tree-id89 . -12) (undo-tree-id90 . -12) (undo-tree-id91 . -12) (undo-tree-id92 . -12) (undo-tree-id93 . -12) (undo-tree-id94 . -12) 456) ((444 . 456)) (25942 12168 101929 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 475) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1)) nil (25944 27519 203626 0) 0 nil])
([nil nil ((#("writer: " 0 6 (face font-lock-variable-name-face fontified t) 6 8 (fontified t)) . -436) (undo-tree-id40 . -8) (undo-tree-id41 . -8) (undo-tree-id42 . -8) (undo-tree-id43 . -8) (undo-tree-id44 . -8) (undo-tree-id45 . -8) (undo-tree-id46 . -8) (undo-tree-id47 . -8) (undo-tree-id48 . -8) (undo-tree-id49 . -8) (undo-tree-id50 . -8) (undo-tree-id51 . -8) (undo-tree-id52 . -8) (undo-tree-id53 . -8) (undo-tree-id54 . -8) (undo-tree-id55 . -8) (undo-tree-id56 . -8) (undo-tree-id57 . -8) (undo-tree-id58 . -8) (undo-tree-id59 . -8) (undo-tree-id60 . -8) (undo-tree-id61 . -8) (undo-tree-id62 . -8) (undo-tree-id63 . -8) (undo-tree-id64 . -8) (undo-tree-id65 . -8) (undo-tree-id66 . -8) (undo-tree-id67 . -8) (undo-tree-id68 . -8) (undo-tree-id69 . -8) (undo-tree-id70 . -8) 444) ((436 . 444)) (25942 12167 797550 0) 0 nil])
([nil nil ((172 . 173) (t 25944 27519 357066 271000)) nil (25944 27535 850740 0) 0 nil])
([nil nil ((#("event_" 0 6 (fontified t)) . -430) (undo-tree-id0 . -6) (undo-tree-id1 . -6) (undo-tree-id2 . -6) (undo-tree-id3 . -6) (undo-tree-id4 . -6) (undo-tree-id5 . -6) (undo-tree-id6 . -6) (undo-tree-id7 . -6) (undo-tree-id8 . -6) (undo-tree-id9 . -6) (undo-tree-id10 . -6) (undo-tree-id11 . -6) (undo-tree-id12 . -6) (undo-tree-id13 . -6) (undo-tree-id14 . -6) (undo-tree-id15 . -6) (undo-tree-id16 . -6) (undo-tree-id17 . -6) (undo-tree-id18 . -6) (undo-tree-id19 . -6) (undo-tree-id20 . -6) (undo-tree-id21 . -6) (undo-tree-id22 . -6) (undo-tree-id23 . -6) (undo-tree-id24 . -6) (undo-tree-id25 . -6) (undo-tree-id26 . -6) (undo-tree-id27 . -6) (undo-tree-id28 . -6) (undo-tree-id29 . -6) (undo-tree-id30 . -6) (undo-tree-id31 . -6) (undo-tree-id32 . -6) (undo-tree-id33 . -6) (undo-tree-id34 . -6) (undo-tree-id35 . -6) (undo-tree-id36 . -6) (undo-tree-id37 . -6) (undo-tree-id38 . -6) (undo-tree-id39 . -6) 436) ((430 . 436) (t 25942 12162 781873 236000)) (25942 12162 778046 0) 0 nil])
([nil nil ((173 . 180)) nil (25944 27535 850739 0) 0 nil])
nil
([nil nil ((177 . 182) (#("ser" 0 3 (fontified nil)) . 177) (177 . 180) (#("serde" 0 5 (fontified nil)) . -177) (177 . 182) (#("ser" 0 3 (face font-lock-constant-face fontified t)) . -177) (undo-tree-id24 . -3) (undo-tree-id25 . -1) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -3) 180) nil (25944 27535 850737 0) 0 nil])
([nil nil ((182 . 184)) nil (25944 27535 850721 0) 0 nil])
([nil nil ((184 . 195) (#("Deserialize" 0 11 (fontified nil)) . -184) (184 . 195)) nil (25944 27535 850719 0) 0 nil])
([nil nil ((195 . 196)) nil (25944 27535 850714 0) 0 nil])
([nil nil ((196 . 197) (t 25944 27535 854037 640000)) nil (25944 27585 335640 0) 0 nil])
([nil nil ((197 . 204)) nil (25944 27585 335639 0) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-constant-face fontified t)) . -201) (undo-tree-id76 . -1) (#("u" 0 1 (face font-lock-constant-face fontified t)) . -202) (undo-tree-id77 . -1) (#("t" 0 1 (face font-lock-constant-face fontified t)) . -203) (undo-tree-id78 . -1) 204) nil (25944 27585 335637 0) 0 nil])
([nil nil ((201 . 204)) nil (25944 27585 335633 0) 0 nil])
([nil nil ((204 . 209)) nil (25944 27585 335631 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-constant-face fontified t)) . -208) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 209) nil (25944 27585 335629 0) 0 nil])
([nil nil ((208 . 211)) nil (25944 27585 335611 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -210) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 211) nil (25944 27585 335609 0) 0 nil])
([nil nil ((210 . 216)) nil (25944 27585 335604 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -215) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) 216) nil (25944 27585 335601 0) 0 nil])
([nil nil ((215 . 219)) nil (25944 27585 335569 0) 0 nil])
([nil nil ((219 . 220)) nil (25944 27585 335565 0) 0 nil])
([nil nil ((798 . 802) (t 25944 27585 338799 862000)) nil (25944 27604 125954 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-preprocessor-face fontified t)) . -804) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("e" 0 1 (face font-lock-preprocessor-face fontified t)) . -805) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#("b" 0 1 (face font-lock-preprocessor-face fontified t)) . -806) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("u" 0 1 (face font-lock-preprocessor-face fontified t)) . -807) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#("g" 0 1 (face font-lock-preprocessor-face fontified t)) . -808) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) 809) nil (25944 27604 125947 0) 0 nil])
([nil nil ((804 . 807)) nil (25944 27604 125844 0) 0 nil])
([nil nil ((#("StreamExt;" 0 9 (face font-lock-type-face fontified t) 9 10 (fontified t)) . -210) (undo-tree-id201 . -10) (undo-tree-id202 . -10) (undo-tree-id203 . -10) (undo-tree-id204 . -10) (undo-tree-id205 . -10) (undo-tree-id206 . -10) (undo-tree-id207 . -10) (undo-tree-id208 . -10) (undo-tree-id209 . -10) (undo-tree-id210 . -10) 220 (t 25944 27604 129774 827000)) nil (25944 27614 932669 0) 0 nil])
([nil nil ((#("futures::" 0 7 (face font-lock-constant-face fontified t) 7 9 (fontified t)) . -201) (undo-tree-id177 . -9) (undo-tree-id178 . -9) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -9) (undo-tree-id191 . -9) (undo-tree-id192 . -9) (undo-tree-id193 . -9) (undo-tree-id194 . -9) (undo-tree-id195 . -9) (undo-tree-id196 . -9) (undo-tree-id197 . -9) (undo-tree-id198 . -9) (undo-tree-id199 . -9) (undo-tree-id200 . -9) 210) nil (25944 27614 932657 0) 0 nil])
([nil nil ((201 . 204)) nil (25944 27614 932632 0) 0 nil])
([nil nil ((201 . 208) (#("fut" 0 3 (fontified nil)) . 201) (201 . 204) (#("futures" 0 7 (fontified nil)) . -201) (201 . 208) (#("fut" 0 3 (face font-lock-constant-face fontified t)) . -201) (undo-tree-id169 . -3) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -3) (undo-tree-id175 . -3) (undo-tree-id176 . -3) 204) nil (25944 27614 932630 0) 0 nil])
([nil nil ((208 . 212)) nil (25944 27614 932619 0) 0 nil])
([nil nil ((210 . 219) (#("St" 0 2 (fontified nil)) . 210) (210 . 212) (#("StreamExt" 0 9 (fontified nil)) . -210) (210 . 219) (#("St" 0 2 (face font-lock-type-face fontified t)) . -210) (undo-tree-id162 . -2) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -2) 212) nil (25944 27614 932617 0) 0 nil])
([nil nil ((219 . 220)) nil (25944 27614 932595 0) 0 nil])
([nil nil ((846 . 848) (t 25944 27614 936410 530000)) nil (25944 27636 482462 0) 0 nil])
([nil nil ((847 . 854) (#("p" 0 1 (fontified nil)) . 847) (847 . 848) (#("payload" 0 7 (fontified nil)) . -847) (847 . 854) (#("p" 0 1 (fontified t)) . -847) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) 848) nil (25944 27636 482457 0) 0 nil])
([nil nil ((1055 . 1059) (#("    " 0 4 (fontified nil)) . 1054) (undo-tree-id217 . -4) (undo-tree-id218 . -4) (undo-tree-id219 . -4) (1053 . 1059) (t 25944 27636 486102 324000)) nil (25944 27698 497707 0) 0 nil])
([nil nil ((1054 . 1058)) nil (25944 27698 497693 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1145 . 1146) (nil fontified nil 1058 . 1146) (1058 . 1146)) nil (25944 27698 497692 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1058) 1054) nil (25944 27698 497687 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-preprocessor-face fontified t)) . -1129) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (#("x" 0 1 (face font-lock-preprocessor-face fontified t)) . -1130) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (#("," 0 1 (fontified t)) . -1131) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (#(" " 0 1 (fontified t)) . -1132) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) 1133 (t 25944 27698 501762 543000)) nil (25944 27710 50332 0) 0 nil])
([nil nil ((1138 . 1142) (t 25944 27710 54597 549000)) nil (25944 27719 908281 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1220 . 1221) (nil fontified nil 1142 . 1221) (1142 . 1221)) nil (25944 27719 908279 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1142) 1171) nil (25944 27719 908275 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -1165) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (#("," 0 1 (fontified t)) . -1166) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) 1167 (t 25944 27719 912233 889000)) nil (25944 27730 149510 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1164) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (#(" " 0 1 (fontified t)) . -1165) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) 1166) nil (25944 27730 149397 0) 0 nil])
([nil nil ((930 . 932) (t 25944 27730 154196 911000)) nil (25944 28695 289865 0) 0 nil])
([nil nil ((932 . 936)) nil (25944 28695 289864 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -930) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . 1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (#("	" 0 1 (fontified t)) . -931) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (#("i" 0 1 (fontified t)) . -932) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -933) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (#(" " 0 1 (fontified t)) . -934) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (#("e" 0 1 (fontified t)) . -935) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) 936) nil (25944 28695 289854 0) 0 nil])
([nil nil ((#("Write" 0 5 (face font-lock-type-face fontified t)) . -594) (undo-tree-id535 . -5) (undo-tree-id536 . -5) (undo-tree-id537 . -5) (undo-tree-id538 . -5) (undo-tree-id539 . -5) (undo-tree-id540 . -5) (undo-tree-id541 . -5) (undo-tree-id542 . -5) (undo-tree-id543 . -5) (undo-tree-id544 . -5) (undo-tree-id545 . -5) (undo-tree-id546 . -5) (undo-tree-id547 . -5) (undo-tree-id548 . -5) (undo-tree-id549 . -5) (undo-tree-id550 . -5) 599) nil (25944 28695 289668 0) 0 nil])
([nil nil ((594 . 596)) nil (25944 28695 289651 0) 0 nil])
([nil nil ((594 . 602) (#("RwSignal" 0 2 (fontified nil) 2 8 (face font-lock-type-face fontified nil)) . 594) (undo-tree-id520 . 6) (594 . 596) (#("RwSignal" 0 8 (fontified nil)) . -594) (594 . 602) (#("Rw" 0 2 (face font-lock-type-face fontified t)) . -594) (undo-tree-id521 . -2) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -2) (undo-tree-id529 . -2) (undo-tree-id530 . -2) (undo-tree-id531 . -2) (undo-tree-id532 . -2) (undo-tree-id533 . -2) (undo-tree-id534 . -2) 596) nil (25944 28695 289649 0) 0 nil])
([nil nil ((1095 . 1096)) nil (25944 28695 289632 0) 0 nil])
([nil nil ((1088 . 1104) (#("create_rsignal" 0 8 (fontified nil) 8 14 (fontified nil)) . 1088) (undo-tree-id491 . -9) (undo-tree-id492 . 6) (1088 . 1096) (#("create_rw_signal" 0 16 (fontified nil)) . -1088) (1088 . 1104) (#("create_r" 0 8 (fontified t)) . -1088) (undo-tree-id493 . -7) (undo-tree-id494 . -8) (undo-tree-id495 . -7) (undo-tree-id496 . -7) (undo-tree-id497 . -7) (undo-tree-id498 . -7) (undo-tree-id499 . -7) (undo-tree-id500 . -7) (undo-tree-id501 . -7) (undo-tree-id502 . -7) (undo-tree-id503 . -7) (undo-tree-id504 . -7) (undo-tree-id505 . -7) (undo-tree-id506 . -7) (undo-tree-id507 . -7) (undo-tree-id508 . -7) (undo-tree-id509 . -7) (undo-tree-id510 . -7) (undo-tree-id511 . -7) (undo-tree-id512 . -7) (undo-tree-id513 . -7) (undo-tree-id514 . -7) (undo-tree-id515 . -7) (undo-tree-id516 . -8) (undo-tree-id517 . -8) (undo-tree-id518 . -8) (undo-tree-id519 . -8) 1096) nil (25944 28695 289626 0) 0 nil])
([nil nil ((#("vec)" 0 4 (fontified t)) . -1081) (undo-tree-id927 . -4) (undo-tree-id928 . -4) (undo-tree-id929 . -4) (undo-tree-id930 . -4) (undo-tree-id931 . -4) (undo-tree-id932 . -4) (undo-tree-id933 . -4) (undo-tree-id934 . -4) (undo-tree-id935 . -4) (undo-tree-id936 . -4) (undo-tree-id937 . -4) (undo-tree-id938 . -4) (undo-tree-id939 . -4) (undo-tree-id940 . -4) (undo-tree-id941 . -4) (undo-tree-id942 . -4) 1085 (t 25944 28695 294684 182000)) nil (25944 28713 90082 0) 0 nil])
([nil nil ((#("event_" 0 6 (fontified t)) . -1075) (undo-tree-id897 . -6) (undo-tree-id898 . -6) (undo-tree-id899 . -6) (undo-tree-id900 . -6) (undo-tree-id901 . -6) (undo-tree-id902 . -6) (undo-tree-id903 . -6) (undo-tree-id904 . -6) (undo-tree-id905 . -6) (undo-tree-id906 . -6) (undo-tree-id907 . -6) (undo-tree-id908 . -6) (undo-tree-id909 . -6) (undo-tree-id910 . -6) (undo-tree-id911 . -6) (undo-tree-id912 . -6) (undo-tree-id913 . -6) (undo-tree-id914 . -6) (undo-tree-id915 . -6) (undo-tree-id916 . -6) (undo-tree-id917 . -6) (undo-tree-id918 . -6) (undo-tree-id919 . -6) (undo-tree-id920 . -6) (undo-tree-id921 . -6) (undo-tree-id922 . -6) (undo-tree-id923 . -6) (undo-tree-id924 . -6) (undo-tree-id925 . -6) (undo-tree-id926 . -6) 1081) nil (25944 28713 90056 0) 0 nil])
([nil nil ((#("set_" 0 4 (fontified t)) . -1071) (undo-tree-id856 . -4) (undo-tree-id857 . -4) (undo-tree-id858 . -4) (undo-tree-id859 . -4) (undo-tree-id860 . -4) (undo-tree-id861 . -4) (undo-tree-id862 . -4) (undo-tree-id863 . -4) (undo-tree-id864 . -4) (undo-tree-id865 . -4) (undo-tree-id866 . -4) (undo-tree-id867 . -4) (undo-tree-id868 . -4) (undo-tree-id869 . -4) (undo-tree-id870 . -4) (undo-tree-id871 . -4) (undo-tree-id872 . -4) (undo-tree-id873 . -4) (undo-tree-id874 . -4) (undo-tree-id875 . -4) (undo-tree-id876 . -4) (undo-tree-id877 . -4) (undo-tree-id878 . -4) (undo-tree-id879 . -4) (undo-tree-id880 . -4) (undo-tree-id881 . -4) (undo-tree-id882 . -4) (undo-tree-id883 . -4) (undo-tree-id884 . -4) (undo-tree-id885 . -4) (undo-tree-id886 . -4) (undo-tree-id887 . -4) (undo-tree-id888 . -4) (undo-tree-id889 . -4) (undo-tree-id890 . -4) (undo-tree-id891 . -4) (undo-tree-id892 . -4) (undo-tree-id893 . -4) (undo-tree-id894 . -4) (undo-tree-id895 . -4) (undo-tree-id896 . -4) 1075) nil (25944 28713 90025 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1069) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (#(" " 0 1 (fontified t)) . -1070) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) 1071) nil (25944 28713 89979 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -1059) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) 1060) nil (25944 28713 89871 0) 0 nil])
([nil nil ((#("vec" 0 3 (fontified t)) . -1165) (undo-tree-id1001 . -3) (undo-tree-id1002 . -3) (undo-tree-id1003 . -3) (undo-tree-id1004 . -3) (undo-tree-id1005 . -3) (undo-tree-id1006 . -3) (undo-tree-id1007 . -3) (undo-tree-id1008 . -3) (undo-tree-id1009 . -3) (undo-tree-id1010 . -3) (undo-tree-id1011 . -3) (undo-tree-id1012 . -3) (undo-tree-id1013 . -3) (undo-tree-id1014 . -3) (undo-tree-id1015 . -3) (undo-tree-id1016 . -3) (undo-tree-id1017 . -3) (undo-tree-id1018 . -3) (undo-tree-id1019 . -3) 1168 (t 25944 28713 94952 827000)) nil (25944 28719 153632 0) 0 nil])
([nil nil ((#("event_" 0 6 (fontified t)) . -1159) (undo-tree-id979 . -6) (undo-tree-id980 . -6) (undo-tree-id981 . -6) (undo-tree-id982 . -6) (undo-tree-id983 . -6) (undo-tree-id984 . -6) (undo-tree-id985 . -6) (undo-tree-id986 . -6) (undo-tree-id987 . -6) (undo-tree-id988 . -6) (undo-tree-id989 . -6) (undo-tree-id990 . -6) (undo-tree-id991 . -6) (undo-tree-id992 . -6) (undo-tree-id993 . -6) (undo-tree-id994 . -6) (undo-tree-id995 . -6) (undo-tree-id996 . -6) (undo-tree-id997 . -6) (undo-tree-id998 . -6) (undo-tree-id999 . -6) (undo-tree-id1000 . -6) 1165) nil (25944 28719 153612 0) 0 nil])
([nil nil ((#("set_" 0 4 (fontified t)) . -1155) (undo-tree-id954 . -4) (undo-tree-id955 . -4) (undo-tree-id956 . -4) (undo-tree-id957 . -4) (undo-tree-id958 . -4) (undo-tree-id959 . -4) (undo-tree-id960 . -4) (undo-tree-id961 . -4) (undo-tree-id962 . -4) (undo-tree-id963 . -4) (undo-tree-id964 . -4) (undo-tree-id965 . -4) (undo-tree-id966 . -4) (undo-tree-id967 . -4) (undo-tree-id968 . -4) (undo-tree-id969 . -4) (undo-tree-id970 . -4) (undo-tree-id971 . -4) (undo-tree-id972 . -4) (undo-tree-id973 . -4) (undo-tree-id974 . -4) (undo-tree-id975 . -4) (undo-tree-id976 . -4) (undo-tree-id977 . -4) (undo-tree-id978 . -4) 1159) nil (25944 28719 153584 0) 0 nil])
([nil nil ((1155 . 1157)) nil (25944 28719 153559 0) 0 nil])
([nil nil ((1155 . 1164) (#("ev" 0 2 (fontified nil)) . 1155) (1155 . 1157) (#("event_vec" 0 9 (fontified nil)) . -1155) (1155 . 1164) (#("ev" 0 2 (fontified t)) . -1155) (undo-tree-id943 . -2) (undo-tree-id944 . -2) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -2) (undo-tree-id948 . -2) (undo-tree-id949 . -2) (undo-tree-id950 . -2) (undo-tree-id951 . -2) (undo-tree-id952 . -2) (undo-tree-id953 . -2) 1157) nil (25944 28719 153555 0) 0 nil])
([nil nil ((927 . 929) (t 25944 28719 158473 496000)) nil (25944 28734 870176 0) 0 nil])
([nil nil ((929 . 934)) nil (25944 28734 870175 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -932) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (#("n" 0 1 (fontified t)) . -933) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) 934) nil (25944 28734 870173 0) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-variable-name-face fontified t)) . -586) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -587) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -588) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -589) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -590) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -591) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) 592) nil (25944 28734 870153 0) 0 nil])
([nil nil ((586 . 588)) nil (25944 28734 869991 0) 0 nil])
([nil nil ((#("writer" 0 6 (fontified t)) . -864) (undo-tree-id1023 . -6) (undo-tree-id1024 . -6) (undo-tree-id1025 . -6) (undo-tree-id1026 . -6) (undo-tree-id1027 . -6) (undo-tree-id1028 . -6) (undo-tree-id1029 . -6) (undo-tree-id1030 . -6) (undo-tree-id1031 . -6) (undo-tree-id1032 . -6) (undo-tree-id1033 . -6) (undo-tree-id1034 . -6) (undo-tree-id1035 . -6) (undo-tree-id1036 . -6) (undo-tree-id1037 . -6) (undo-tree-id1038 . -6) (undo-tree-id1039 . -6) (undo-tree-id1040 . -6) (undo-tree-id1041 . -6) (undo-tree-id1042 . -6) 870) nil (25944 28734 869989 0) 0 nil])
([nil nil ((864 . 865)) nil (25944 28734 869967 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -864) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) 865) nil (25944 28734 869965 0) 0 nil])
([nil nil ((864 . 866)) nil (25944 28734 869951 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -923) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) 924 (t 25944 28734 875481 828000)) nil (25944 28823 521530 0) 0 nil])
([nil nil ((923 . 925)) nil (25944 28823 521525 0) 0 nil])
([nil nil ((924 . 926)) nil (25944 28823 521524 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -925) (undo-tree-id1481 . -1) 926) nil (25944 28823 521523 0) 0 nil])
([nil nil ((925 . 926)) nil (25944 28823 521520 0) 0 nil])
([nil nil ((924 . 932) (#("ev" 0 2 (fontified nil)) . 924) (924 . 926) (#("event_rw" 0 8 (fontified nil)) . -924) (924 . 932) (#("ev" 0 2 (fontified t)) . -924) (undo-tree-id1479 . -2) (undo-tree-id1480 . -2) 926) nil (25944 28823 521519 0) 0 nil])
([nil nil ((932 . 933)) nil (25944 28823 521514 0) 0 nil])
([nil nil ((apply yas--snippet-revive 933 938 #s(yas--snippet nil nil #s(yas--exit 938 nil) 2 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 938 nil) 2 nil nil nil nil)) (933 . 938) (#("get()$0" 0 7 (fontified nil)) . 933) (933 . 940) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -933) (933 . 953)) nil (25944 28823 521513 0) 0 nil])
([nil nil ((938 . 939)) nil (25944 28823 521510 0) 0 nil])
([nil nil ((939 . 940)) nil (25944 28823 521509 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -939) (undo-tree-id1478 . -1) 940) nil (25944 28823 521508 0) 0 nil])
([nil nil ((939 . 942)) nil (25944 28823 521505 0) 0 nil])
([nil nil ((apply yas--snippet-revive 939 944 #s(yas--snippet nil nil #s(yas--exit 944 nil) 3 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 944 nil) 3 nil nil nil nil)) (939 . 944) (#("len()$0" 0 7 (fontified nil)) . 939) (939 . 946) (#("len" 0 3 (fontified nil)) . 939) (939 . 942) (#("len()" 0 5 (fontified nil)) . -939) (939 . 944) (#("len" 0 3 (fontified t)) . -939) (undo-tree-id1476 . -3) (undo-tree-id1477 . -3) 942) nil (25944 28823 521504 0) 0 nil])
([nil nil ((944 . 947)) nil (25944 28823 521498 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -946) (undo-tree-id1475 . -1) 947) nil (25944 28823 521497 0) 0 nil])
([nil nil ((946 . 952)) nil (25944 28823 521495 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -951) (undo-tree-id1474 . -1) 952) nil (25944 28823 521493 0) 0 nil])
([nil nil ((951 . 952)) nil (25944 28823 521491 0) 0 nil])
([nil nil ((953 . 955)) nil (25944 28823 521490 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -954) (undo-tree-id1473 . -1) 955) nil (25944 28823 521489 0) 0 nil])
([nil nil ((954 . 955)) nil (25944 28823 521487 0) 0 nil])
([nil nil ((953 . 961) (#("ev" 0 2 (fontified nil)) . 953) (953 . 955) (#("event_rw" 0 8 (fontified nil)) . -953) (953 . 961) (#("ev" 0 2 (fontified t)) . -953) (undo-tree-id1472 . -2) 955) nil (25944 28823 521485 0) 0 nil])
([nil nil ((961 . 963)) nil (25944 28823 521482 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 969 992 nil nil nil t #s(yas--exit 993 nil))) #s(yas--exit 993 nil) 4 nil #s(yas--field 1 969 992 nil nil nil t #s(yas--exit 993 nil)) nil nil)) (962 . 971) (#("update(${1:f})$0" 0 16 (fontified nil)) . 962) (962 . 978) (#("u" 0 1 (fontified nil)) . 962) (962 . 963) (#("update(…) (as SignalUpdate)" 0 27 (fontified nil)) . -962) (962 . 989) (#("u" 0 1 (fontified t)) . -962) (undo-tree-id1471 . -1) 963) nil (25944 28823 521480 0) 0 nil])
([nil nil ((970 . 971) (#("f" 0 1 (fontified nil)) . 970) (undo-tree-id1470 . -1) (969 . 970)) nil (25944 28823 521476 0) 0 nil])
([nil nil ((970 . 979)) nil (25944 28823 521473 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -975) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (#("v" 0 1 (fontified t)) . -976) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (#("e" 0 1 (fontified t)) . -977) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (#("c" 0 1 (fontified t)) . -978) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) 979) nil (25944 28823 521469 0) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -971) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (#("e" 0 1 (fontified t)) . -972) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (#("n" 0 1 (fontified t)) . -973) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (#("t" 0 1 (fontified t)) . -974) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) 975) nil (25944 28823 521398 0) 0 nil])
([nil nil ((971 . 975)) nil (25944 28823 521191 0) 0 nil])
([nil nil ((976 . 978)) nil (25944 28823 521190 0) 0 nil])
([nil nil ((977 . 982) (#("e" 0 1 (fontified nil)) . 977) (undo-tree-id1199 . -1) (977 . 978) (#("e_vec" 0 5 (fontified nil)) . -977) (undo-tree-id1200 . -5) (977 . 982) (#("e" 0 1 (fontified t)) . -977) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) 978) nil (25944 28823 521188 0) 0 nil])
([nil nil ((982 . 984)) nil (25944 28823 521177 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -983) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) 984) nil (25944 28823 521176 0) 0 nil])
([nil nil ((983 . 984)) nil (25944 28823 521168 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -983) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) 984) nil (25944 28823 521167 0) 0 nil])
([nil nil ((983 . 985)) nil (25944 28823 521161 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 990 991 nil nil nil t #s(yas--exit 992 nil))) #s(yas--exit 992 nil) 5 nil #s(yas--field 1 990 991 nil nil nil t #s(yas--exit 992 nil)) #s(yas--field 1 969 992 nil nil nil t #s(yas--exit 993 nil)) nil)) (983 . 996) (#("remove(${1:index})$0" 0 20 (fontified nil)) . 983) (undo-tree-id1175 . -20) (983 . 1003) (#("re" 0 2 (fontified nil)) . 983) (undo-tree-id1176 . -2) (983 . 985) (#("remove(…)" 0 9 (fontified nil)) . -983) (undo-tree-id1177 . -9) (983 . 992) (#("re" 0 2 (fontified t)) . -983) (undo-tree-id1178 . -2) (undo-tree-id1179 . -2) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -2) (undo-tree-id1183 . -2) (undo-tree-id1184 . -2) (undo-tree-id1185 . -2) (undo-tree-id1186 . -2) 985) nil (25944 28823 521159 0) 0 nil])
([nil nil ((#("index" 0 5 (fontified nil)) . 991) (undo-tree-id1174 . -5) (990 . 991)) nil (25944 28823 521142 0) 0 nil])
([nil nil ((apply yas--snippet-revive 962 993 #s(yas--snippet nil (#s(yas--field 1 969 992 nil nil nil t #s(yas--exit 993 nil))) #s(yas--exit 993 nil) 4 nil #s(yas--field 1 969 992 nil nil nil t #s(yas--exit 993 nil)) nil nil)) (apply yas--snippet-revive 983 992 #s(yas--snippet nil (#s(yas--field 1 990 991 nil nil nil t #s(yas--exit 992 nil))) #s(yas--exit 992 nil) 5 nil #s(yas--field 1 990 991 nil nil nil t #s(yas--exit 992 nil)) #s(yas--field 1 969 992 nil nil nil t #s(yas--exit 993 nil)) nil))) nil (25944 28823 521133 0) 0 nil])
([nil nil ((993 . 994)) nil (25944 28823 521129 0) 0 nil])
([nil nil ((953 . 954) (t 25944 28823 530687 18000)) nil (25944 28836 158841 0) 0 nil])
([nil nil ((994 . 995)) nil (25944 28836 158836 0) 0 nil])
([nil nil ((993 . 994) (t 25944 28836 167261 206000)) nil (25944 28846 375158 0) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -995) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) 996 (t 25944 28846 383851 394000)) nil (25944 28851 254949 0) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -953) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) 954) nil (25944 28851 254927 0) 0 nil])
([nil nil ((953 . 954) (t 25944 28851 263189 709000)) nil (25944 28877 879736 0) 0 nil])
([nil nil ((995 . 996)) nil (25944 28877 879731 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -993) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) 994 (t 25944 28877 887975 176000)) nil (25944 28884 564020 0) 0 nil])
([nil nil ((994 . 995) (978 . 978) (978 . 979)) nil (25944 28884 563986 0) 0 nil])
([nil nil ((994 . 995) (t 25944 28884 572492 882000)) nil (25944 28886 145068 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -923) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) 924 (t 25944 28886 153893 273000)) nil (25944 28925 405048 0) 0 nil])
([nil nil ((923 . 924)) nil (25944 28925 405033 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -952) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) 953) nil (25944 28925 405031 0) 0 nil])
([nil nil ((952 . 953)) nil (25944 28925 405011 0) 0 nil])
([nil nil ((953 . 954) (#(" " 0 1 (fontified nil)) . 952) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (953 . 954)) nil (25944 28925 405009 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -952) (undo-tree-id1540 . -1) (undo-tree-id1541 . 1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (#("	" 0 1 (fontified t)) . -953) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) 954) nil (25944 28925 405000 0) 0 nil])
([nil nil ((952 . 953)) nil (25944 28925 404981 0) 0 nil])
([nil nil ((954 . 960)) nil (25944 28925 404980 0) 0 nil])
([nil nil ((1001 . 1007)) nil (25944 28925 404979 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1010) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) 1011) nil (25944 28925 404976 0) 0 nil])
([nil nil ((1009 . 1011)) nil (25944 28925 404955 0) 0 nil])
([nil nil ((985 . 988)) nil (25944 28925 404953 0) 0 nil])
([nil nil ((1012 . 1013)) nil (25944 28925 404949 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1012) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) 1013 (t 25944 28925 413672 841000)) nil (25944 28957 872348 0) 0 nil])
([nil nil ((916 . 921) (t 25944 28959 843334 301000)) nil (25944 29059 809621 0) 0 nil] [nil nil ((1012 . 1013)) ((#(";" 0 1 (fontified t)) . 1012) (t 25944 28927 232042 420000)) (25944 28957 282625 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -917) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (#("p" 0 1 (fontified t)) . -918) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (#("a" 0 1 (fontified t)) . -919) (undo-tree-id1954 . -1) (#("s" 0 1 (fontified t)) . -920) (undo-tree-id1955 . -1) 921) nil (25944 29059 809619 0) 0 nil])
([nil nil ((#("5.]" 0 3 (fontified t)) . -1396) (undo-tree-id1855 . -3) (undo-tree-id1856 . -3) (undo-tree-id1857 . -3) (undo-tree-id1858 . -3) (undo-tree-id1859 . -3) (undo-tree-id1860 . -3) (undo-tree-id1861 . -3) (undo-tree-id1862 . -3) (undo-tree-id1863 . -3) (undo-tree-id1864 . -3) (undo-tree-id1865 . -3) (undo-tree-id1866 . -3) (undo-tree-id1867 . -3) (undo-tree-id1868 . -3) (undo-tree-id1869 . -3) (undo-tree-id1870 . -3) (undo-tree-id1871 . -3) (undo-tree-id1872 . -3) (undo-tree-id1873 . -3) (undo-tree-id1874 . -3) 1399 (t 25944 28927 232042 420000)) ((1396 . 1399)) (25944 28956 941278 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -916) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) 917) nil (25944 29059 809610 0) 0 nil])
([nil nil ((#("0, " 0 3 (fontified t)) . -1393) (undo-tree-id1828 . -3) (undo-tree-id1829 . -3) (undo-tree-id1830 . -3) (undo-tree-id1831 . -3) (undo-tree-id1832 . -3) (undo-tree-id1833 . -3) (undo-tree-id1834 . -3) (undo-tree-id1835 . -3) (undo-tree-id1836 . -3) (undo-tree-id1837 . -3) (undo-tree-id1838 . -3) (undo-tree-id1839 . -3) (undo-tree-id1840 . -3) (undo-tree-id1841 . -3) (undo-tree-id1842 . -3) (undo-tree-id1843 . -3) (undo-tree-id1844 . -3) (undo-tree-id1845 . -3) (undo-tree-id1846 . -3) (undo-tree-id1847 . -3) (undo-tree-id1848 . -3) (undo-tree-id1849 . -3) (undo-tree-id1850 . -3) (undo-tree-id1851 . -3) (undo-tree-id1852 . -3) (undo-tree-id1853 . -3) (undo-tree-id1854 . -3) 1396) ((1393 . 1396)) (25944 28956 701986 0) 0 nil])
([nil nil ((916 . 920)) nil (25944 29059 809606 0) 0 nil])
([nil nil ((#("1." 0 2 (fontified t)) . -1391) (undo-tree-id1792 . -2) (undo-tree-id1793 . -2) (undo-tree-id1794 . -2) (undo-tree-id1795 . -2) (undo-tree-id1796 . -2) (undo-tree-id1797 . -2) (undo-tree-id1798 . -2) (undo-tree-id1799 . -2) (undo-tree-id1800 . -2) (undo-tree-id1801 . -2) (undo-tree-id1802 . -2) (undo-tree-id1803 . -2) (undo-tree-id1804 . -2) (undo-tree-id1805 . -2) (undo-tree-id1806 . -2) (undo-tree-id1807 . -2) (undo-tree-id1808 . -2) (undo-tree-id1809 . -2) (undo-tree-id1810 . -2) (undo-tree-id1811 . -2) (undo-tree-id1812 . -2) (undo-tree-id1813 . -2) (undo-tree-id1814 . -2) (undo-tree-id1815 . -2) (undo-tree-id1816 . -2) (undo-tree-id1817 . -2) (undo-tree-id1818 . -2) (undo-tree-id1819 . -2) (undo-tree-id1820 . -2) (undo-tree-id1821 . -2) (undo-tree-id1822 . -2) (undo-tree-id1823 . -2) (undo-tree-id1824 . -2) (undo-tree-id1825 . -2) (undo-tree-id1826 . -2) (undo-tree-id1827 . -2) 1393) ((1391 . 1393)) (25944 28956 367037 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -916) (undo-tree-id1944 . -1) (#("p" 0 1 (fontified t)) . -917) (undo-tree-id1945 . -1) (#("a" 0 1 (fontified t)) . -918) (undo-tree-id1946 . -1) (#("r" 0 1 (fontified t)) . -919) (undo-tree-id1947 . -1) 920) nil (25944 29059 809605 0) 0 nil])
([nil nil ((#("0, " 0 3 (fontified t)) . -1388) (undo-tree-id1747 . -3) (undo-tree-id1748 . -3) (undo-tree-id1749 . -3) (undo-tree-id1750 . -3) (undo-tree-id1751 . -3) (undo-tree-id1752 . -3) (undo-tree-id1753 . -3) (undo-tree-id1754 . -3) (undo-tree-id1755 . -3) (undo-tree-id1756 . -3) (undo-tree-id1757 . -3) (undo-tree-id1758 . -3) (undo-tree-id1759 . -3) (undo-tree-id1760 . -3) (undo-tree-id1761 . -3) (undo-tree-id1762 . -3) (undo-tree-id1763 . -3) (undo-tree-id1764 . -3) (undo-tree-id1765 . -3) (undo-tree-id1766 . -3) (undo-tree-id1767 . -3) (undo-tree-id1768 . -3) (undo-tree-id1769 . -3) (undo-tree-id1770 . -3) (undo-tree-id1771 . -3) (undo-tree-id1772 . -3) (undo-tree-id1773 . -3) (undo-tree-id1774 . -3) (undo-tree-id1775 . -3) (undo-tree-id1776 . -3) (undo-tree-id1777 . -3) (undo-tree-id1778 . -3) (undo-tree-id1779 . -3) (undo-tree-id1780 . -3) (undo-tree-id1781 . -3) (undo-tree-id1782 . -3) (undo-tree-id1783 . -3) (undo-tree-id1784 . -3) (undo-tree-id1785 . -3) (undo-tree-id1786 . -3) (undo-tree-id1787 . -3) (undo-tree-id1788 . -3) (undo-tree-id1789 . -3) (undo-tree-id1790 . -3) (undo-tree-id1791 . -3) 1391) ((1388 . 1391)) (25944 28956 10456 0) 0 nil])
([nil nil ((1023 . 1024)) nil (25944 29059 809599 0) 0 nil])
([nil nil ((#("3." 0 2 (fontified t)) . -1386) (undo-tree-id1693 . -2) (undo-tree-id1694 . -2) (undo-tree-id1695 . -2) (undo-tree-id1696 . -2) (undo-tree-id1697 . -2) (undo-tree-id1698 . -2) (undo-tree-id1699 . -2) (undo-tree-id1700 . -2) (undo-tree-id1701 . -2) (undo-tree-id1702 . -2) (undo-tree-id1703 . -2) (undo-tree-id1704 . -2) (undo-tree-id1705 . -2) (undo-tree-id1706 . -2) (undo-tree-id1707 . -2) (undo-tree-id1708 . -2) (undo-tree-id1709 . -2) (undo-tree-id1710 . -2) (undo-tree-id1711 . -2) (undo-tree-id1712 . -2) (undo-tree-id1713 . -2) (undo-tree-id1714 . -2) (undo-tree-id1715 . -2) (undo-tree-id1716 . -2) (undo-tree-id1717 . -2) (undo-tree-id1718 . -2) (undo-tree-id1719 . -2) (undo-tree-id1720 . -2) (undo-tree-id1721 . -2) (undo-tree-id1722 . -2) (undo-tree-id1723 . -2) (undo-tree-id1724 . -2) (undo-tree-id1725 . -2) (undo-tree-id1726 . -2) (undo-tree-id1727 . -2) (undo-tree-id1728 . -2) (undo-tree-id1729 . -2) (undo-tree-id1730 . -2) (undo-tree-id1731 . -2) (undo-tree-id1732 . -2) (undo-tree-id1733 . -2) (undo-tree-id1734 . -2) (undo-tree-id1735 . -2) (undo-tree-id1736 . -2) (undo-tree-id1737 . -2) (undo-tree-id1738 . -2) (undo-tree-id1739 . -2) (undo-tree-id1740 . -2) (undo-tree-id1741 . -2) (undo-tree-id1742 . -2) (undo-tree-id1743 . -2) (undo-tree-id1744 . -2) (undo-tree-id1745 . -2) (undo-tree-id1746 . -2) 1388) ((1386 . 1388)) (25944 28955 424524 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1023) 1024) nil (25944 29059 809598 0) 0 nil])
([nil nil ((#("vec![" 0 4 (face font-lock-preprocessor-face fontified t) 4 5 (fontified t)) . -1381) (undo-tree-id1630 . -5) (undo-tree-id1631 . -5) (undo-tree-id1632 . -5) (undo-tree-id1633 . -5) (undo-tree-id1634 . -5) (undo-tree-id1635 . -5) (undo-tree-id1636 . -5) (undo-tree-id1637 . -5) (undo-tree-id1638 . -5) (undo-tree-id1639 . -5) (undo-tree-id1640 . -5) (undo-tree-id1641 . -5) (undo-tree-id1642 . -5) (undo-tree-id1643 . -5) (undo-tree-id1644 . -5) (undo-tree-id1645 . -5) (undo-tree-id1646 . -5) (undo-tree-id1647 . -5) (undo-tree-id1648 . -5) (undo-tree-id1649 . -5) (undo-tree-id1650 . -5) (undo-tree-id1651 . -5) (undo-tree-id1652 . -5) (undo-tree-id1653 . -5) (undo-tree-id1654 . -5) (undo-tree-id1655 . -5) (undo-tree-id1656 . -5) (undo-tree-id1657 . -5) (undo-tree-id1658 . -5) (undo-tree-id1659 . -5) (undo-tree-id1660 . -5) (undo-tree-id1661 . -5) (undo-tree-id1662 . -5) (undo-tree-id1663 . -5) (undo-tree-id1664 . -5) (undo-tree-id1665 . -5) (undo-tree-id1666 . -5) (undo-tree-id1667 . -5) (undo-tree-id1668 . -5) (undo-tree-id1669 . -5) (undo-tree-id1670 . -5) (undo-tree-id1671 . -5) (undo-tree-id1672 . -5) (undo-tree-id1673 . -5) (undo-tree-id1674 . -5) (undo-tree-id1675 . -5) (undo-tree-id1676 . -5) (undo-tree-id1677 . -5) (undo-tree-id1678 . -5) (undo-tree-id1679 . -5) (undo-tree-id1680 . -5) (undo-tree-id1681 . -5) (undo-tree-id1682 . -5) (undo-tree-id1683 . -5) (undo-tree-id1684 . -5) (undo-tree-id1685 . -5) (undo-tree-id1686 . -5) (undo-tree-id1687 . -5) (undo-tree-id1688 . -5) (undo-tree-id1689 . -5) (undo-tree-id1690 . -5) (undo-tree-id1691 . -5) (undo-tree-id1692 . -5) 1386) ((1381 . 1386)) (25944 28955 424002 0) 0 nil])
([nil nil ((916 . 919)) nil (25944 29059 809597 0) 0 nil])
nil
([nil nil ((#("a" 0 1 (fontified t)) . -917) (undo-tree-id1942 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -918) (undo-tree-id1943 . -1) 919) nil (25944 29059 809596 0) 0 nil])
([nil nil ((917 . 918)) nil (25944 29059 809592 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -917) (undo-tree-id1941 . -1) 918) nil (25944 29059 809591 0) 0 nil])
([nil nil ((917 . 918)) nil (25944 29059 809589 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -917) (undo-tree-id1940 . -1) 918) nil (25944 29059 809588 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -916) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) 917) nil (25944 29059 809585 0) 0 nil])
([nil nil ((916 . 918)) nil (25944 29079 623491 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -916) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (#("m" 0 1 (fontified t)) . -917) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) 918) nil (25944 29081 254451 0) 0 nil] [nil nil ((917 . 924) (#("m" 0 1 (fontified nil)) . 917) (917 . 918) (#("message" 0 7 (fontified nil)) . -917) (917 . 924) (#("m" 0 1 (fontified t)) . -917) (undo-tree-id1937 . -1) 918) ((917 . 918) (#("message" 0 7 (fontified nil)) . 917) (917 . 924) (#("m" 0 1 (fontified nil)) . 917) (917 . 918) (#("message" 0 7 (fontified t)) . 917) (undo-tree-id2237 . -7) (undo-tree-id2238 . -7) (undo-tree-id2239 . -7) (undo-tree-id2240 . -7) (undo-tree-id2241 . -7) (undo-tree-id2242 . -7) (undo-tree-id2243 . -7) (undo-tree-id2244 . -7) (undo-tree-id2245 . -7) (undo-tree-id2246 . -7) (undo-tree-id2247 . -7) (undo-tree-id2248 . -7) (undo-tree-id2249 . -7) (undo-tree-id2250 . -7) (undo-tree-id2251 . -7) (undo-tree-id2252 . -7) (undo-tree-id2253 . -7) (undo-tree-id2254 . -7) (undo-tree-id2255 . -7) (undo-tree-id2256 . -7) (undo-tree-id2257 . -7) (undo-tree-id2258 . -7) (undo-tree-id2259 . -7) (undo-tree-id2260 . -7) (undo-tree-id2261 . -7) (undo-tree-id2262 . -7) (undo-tree-id2263 . -7) (undo-tree-id2264 . -7) (undo-tree-id2265 . -7) (undo-tree-id2266 . -7) (undo-tree-id2267 . -7) (undo-tree-id2268 . -7) (undo-tree-id2269 . -7) (undo-tree-id2270 . -7) (undo-tree-id2271 . -7) (undo-tree-id2272 . -7) (undo-tree-id2273 . -7) (undo-tree-id2274 . -7) (undo-tree-id2275 . -7) (undo-tree-id2276 . -7) (undo-tree-id2277 . -7) (undo-tree-id2278 . -7) (undo-tree-id2279 . -7) (undo-tree-id2280 . -7) (undo-tree-id2281 . -7) (undo-tree-id2282 . -7) (undo-tree-id2283 . -7) (undo-tree-id2284 . -7) (undo-tree-id2285 . -7) (undo-tree-id2286 . -7) (undo-tree-id2287 . -7) (undo-tree-id2288 . -7) (undo-tree-id2289 . -7) (undo-tree-id2290 . -7) (undo-tree-id2291 . -7) (undo-tree-id2292 . -7) (undo-tree-id2293 . -7) (undo-tree-id2294 . -7) (undo-tree-id2295 . -7) (undo-tree-id2296 . -7) (undo-tree-id2297 . -7) (undo-tree-id2298 . -7) (undo-tree-id2299 . -7) (undo-tree-id2300 . -7) (undo-tree-id2301 . -7) (undo-tree-id2302 . -7) (undo-tree-id2303 . -7) (undo-tree-id2304 . -7) (undo-tree-id2305 . -7) (undo-tree-id2306 . -7) (undo-tree-id2307 . -7) (undo-tree-id2308 . -7) (undo-tree-id2309 . -7) (undo-tree-id2310 . -7) (undo-tree-id2311 . -7) (undo-tree-id2312 . -7) (undo-tree-id2313 . -7) (undo-tree-id2314 . -7) (undo-tree-id2315 . -7) (undo-tree-id2316 . -7) (undo-tree-id2317 . -7) (undo-tree-id2318 . -7) (undo-tree-id2319 . -7) (undo-tree-id2320 . -7) (undo-tree-id2321 . -7) (undo-tree-id2322 . -7) (undo-tree-id2323 . -7) (undo-tree-id2324 . -7) (undo-tree-id2325 . -7) (undo-tree-id2326 . -7) (undo-tree-id2327 . -7) (undo-tree-id2328 . -7) (undo-tree-id2329 . -7) (undo-tree-id2330 . -7) (undo-tree-id2331 . -7) (undo-tree-id2332 . -7) (undo-tree-id2333 . -7) (undo-tree-id2334 . -7) (undo-tree-id2335 . -7) (undo-tree-id2336 . -7) (undo-tree-id2337 . -7) (undo-tree-id2338 . -7) (undo-tree-id2339 . -7) (undo-tree-id2340 . -7) (undo-tree-id2341 . -7) (undo-tree-id2342 . -7) (undo-tree-id2343 . -7) (undo-tree-id2344 . -7) (undo-tree-id2345 . -7) (undo-tree-id2346 . -7) (undo-tree-id2347 . -7) (undo-tree-id2348 . -7) (undo-tree-id2349 . -7) (undo-tree-id2350 . -7) (undo-tree-id2351 . -7) (undo-tree-id2352 . -7) (undo-tree-id2353 . -7) (undo-tree-id2354 . -7) (undo-tree-id2355 . -7) (undo-tree-id2356 . -7) (undo-tree-id2357 . -7) (undo-tree-id2358 . -7) (undo-tree-id2359 . -7) (undo-tree-id2360 . -7) (undo-tree-id2361 . -7) (undo-tree-id2362 . -7) (undo-tree-id2363 . -7) (undo-tree-id2364 . -7) (undo-tree-id2365 . -7) (undo-tree-id2366 . -7) (undo-tree-id2367 . -7) (undo-tree-id2368 . -7) (undo-tree-id2369 . -7) (undo-tree-id2370 . -7) (undo-tree-id2371 . -7) (undo-tree-id2372 . -7) (undo-tree-id2373 . -7) (undo-tree-id2374 . -7) (undo-tree-id2375 . -7) (undo-tree-id2376 . -7)) (25944 29079 325529 0) 0 nil])
([nil nil ((#("GenericEventRes" 0 15 (face font-lock-type-face fontified t)) . -1182) (undo-tree-id2539 . -15) (undo-tree-id2540 . -15) (undo-tree-id2541 . -15) (undo-tree-id2542 . -15) (undo-tree-id2543 . -15) (undo-tree-id2544 . -15) (undo-tree-id2545 . -15) (undo-tree-id2546 . -15) (undo-tree-id2547 . -15) (undo-tree-id2548 . -15) (undo-tree-id2549 . -15) (undo-tree-id2550 . -15) (undo-tree-id2551 . -15) (undo-tree-id2552 . -15) (undo-tree-id2553 . -15) (undo-tree-id2554 . -15) (undo-tree-id2555 . -15) (undo-tree-id2556 . -15) (undo-tree-id2557 . -15) 1197 (t 25944 29081 264481 839000)) nil (25944 29103 326163 0) 0 nil])
([nil nil ((924 . 926)) ((#(".t" 0 1 (fontified t) 1 2 (fontified t)) . 924) (undo-tree-id2232 . -2) (undo-tree-id2233 . -2) (undo-tree-id2234 . -2) (undo-tree-id2235 . -2) (undo-tree-id2236 . -2)) (25944 29078 984033 0) 0 nil])
([nil nil ((1182 . 1185)) nil (25944 29103 326132 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -924) (undo-tree-id1934 . -1) (#("t" 0 1 (fontified t)) . -925) (undo-tree-id1936 . -1) 926) ((924 . 926)) (25944 29078 709251 0) 0 nil])
([nil nil ((#("GenericEventRes" 0 15 (face font-lock-type-face fontified t)) . -603) (undo-tree-id2586 . -5) (undo-tree-id2587 . -15) (undo-tree-id2588 . -15) (undo-tree-id2589 . -15) (undo-tree-id2590 . -15) (undo-tree-id2591 . -15) (undo-tree-id2592 . -15) (undo-tree-id2593 . -15) (undo-tree-id2594 . -15) (undo-tree-id2595 . -15) (undo-tree-id2596 . -15) (undo-tree-id2597 . -15) (undo-tree-id2598 . -15) 618 (t 25944 29103 336588 618000)) nil (25944 29110 479760 0) 0 nil])
([nil nil ((924 . 925)) ((#("," 0 1 (fontified t)) . 924) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1)) (25944 29078 313847 0) 0 nil])
([nil nil ((603 . 606)) nil (25944 29110 479746 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -924) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1926 . -1) (undo-tree-id1928 . -1) (undo-tree-id1930 . -1) (undo-tree-id1932 . -1) 925) ((924 . 925) (t 25944 29076 816242 868000)) (25944 29075 580209 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -604) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (#("w" 0 1 (fontified t)) . -605) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) 606) nil (25944 29110 479744 0) 0 nil])
([nil nil ((924 . 927)) ((#(".pa" 0 1 (fontified t) 1 3 (fontified t)) . 924) (undo-tree-id2143 . -3) (undo-tree-id2144 . -3) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -3) (undo-tree-id2225 . -3) (undo-tree-id2226 . -3)) (25944 29075 252596 0) 0 nil])
([nil nil ((604 . 606)) nil (25944 29110 479729 0) 0 nil])
([nil nil ((apply yas--snippet-revive 925 932 #s(yas--snippet nil nil #s(yas--exit #<marker at 790 in component.rs> nil) 6 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 790 in component.rs> nil) 6 nil nil nil nil)) (925 . 932) (#("parse()$0" 0 9 (fontified nil)) . 925) (925 . 934) (#("pa" 0 2 (fontified nil)) . 925) (925 . 927) (#("parse()" 0 7 (fontified nil)) . -925) (925 . 932) (#("pa" 0 2 (fontified t)) . -925) (undo-tree-id1913 . -2) (undo-tree-id1914 . -2) (undo-tree-id1916 . -1) (undo-tree-id1918 . -2) (undo-tree-id1920 . -2) (undo-tree-id1922 . -2) 927) ((925 . 927) (#("parse()" 0 7 (fontified nil)) . 925) (925 . 932) (#("pa" 0 2 (fontified nil)) . 925) (925 . 927) (#("parse()$0" 0 9 (fontified nil)) . 925) (925 . 934) (#("parse()" 0 5 (fontified t) 5 7 (fontified t)) . 925) (undo-tree-id2062 . -5) (undo-tree-id2063 . -5) (undo-tree-id2064 . -7) (undo-tree-id2065 . -7) (undo-tree-id2066 . -7) (undo-tree-id2067 . -7) (undo-tree-id2068 . -7) (undo-tree-id2069 . -7) (undo-tree-id2070 . -7) (undo-tree-id2071 . -7) (undo-tree-id2072 . -7) (undo-tree-id2073 . -7) (undo-tree-id2074 . -7) (undo-tree-id2075 . -7) (undo-tree-id2076 . -7) (undo-tree-id2077 . -7) (undo-tree-id2078 . -7) (undo-tree-id2079 . -7) (undo-tree-id2080 . -7) (undo-tree-id2081 . -7) (undo-tree-id2082 . -7) (undo-tree-id2083 . -7) (undo-tree-id2084 . -7) (undo-tree-id2085 . -7) (undo-tree-id2086 . -7) (undo-tree-id2087 . -7) (undo-tree-id2088 . -7) (undo-tree-id2089 . -7) (undo-tree-id2090 . -7) (undo-tree-id2091 . -7) (undo-tree-id2092 . -7) (undo-tree-id2093 . -7) (undo-tree-id2094 . -7) (undo-tree-id2095 . -7) (undo-tree-id2096 . -7) (undo-tree-id2097 . -7) (undo-tree-id2098 . -7) (undo-tree-id2099 . -7) (undo-tree-id2100 . -7) (undo-tree-id2101 . -7) (undo-tree-id2102 . -7) (undo-tree-id2103 . -7) (undo-tree-id2104 . -7) (undo-tree-id2105 . -7) (undo-tree-id2106 . -7) (undo-tree-id2107 . -7) (undo-tree-id2108 . -7) (undo-tree-id2109 . -7) (undo-tree-id2110 . -7) (undo-tree-id2111 . -7) (undo-tree-id2112 . -7) (undo-tree-id2113 . -5) (undo-tree-id2114 . -5) (undo-tree-id2115 . -5) (undo-tree-id2116 . -5) (undo-tree-id2117 . -5) (undo-tree-id2118 . -5) (undo-tree-id2119 . -5) (undo-tree-id2120 . -5) (undo-tree-id2121 . -5) (undo-tree-id2122 . -5) (undo-tree-id2123 . -5) (undo-tree-id2124 . -5) (undo-tree-id2125 . -5) (undo-tree-id2126 . -5) (undo-tree-id2127 . -5) (undo-tree-id2128 . -5) (undo-tree-id2129 . -5) (undo-tree-id2130 . -5) (undo-tree-id2131 . -5) (undo-tree-id2132 . -5) (undo-tree-id2133 . -5) (undo-tree-id2134 . -5) (undo-tree-id2135 . -5) (undo-tree-id2136 . -5) (undo-tree-id2137 . -5) (undo-tree-id2138 . -5) (undo-tree-id2139 . -5) (undo-tree-id2140 . -5) (undo-tree-id2141 . -5) (undo-tree-id2142 . -7)) (25944 29075 12175 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -604) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (#("2" 0 1 (fontified t)) . -605) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) 606) nil (25944 29110 479726 0) 0 nil])
([nil nil ((930 . 935)) ((#("::<<>" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 930) (undo-tree-id2040 . -4) (undo-tree-id2041 . -4) (undo-tree-id2042 . -2) (undo-tree-id2043 . -2) (undo-tree-id2044 . -2) (undo-tree-id2045 . -2) (undo-tree-id2046 . -2) (undo-tree-id2047 . -2) (undo-tree-id2048 . -2) (undo-tree-id2049 . -2) (undo-tree-id2050 . -2) (undo-tree-id2051 . -2) (undo-tree-id2052 . -2) (undo-tree-id2053 . -4) (undo-tree-id2054 . -4) (undo-tree-id2055 . -4) (undo-tree-id2056 . -4) (undo-tree-id2057 . -4) (undo-tree-id2058 . -4) (undo-tree-id2059 . -4) (undo-tree-id2060 . -4) (undo-tree-id2061 . -4)) (25944 29074 704127 0) 0 nil])
([nil nil ((604 . 606)) nil (25944 29110 479702 0) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -932) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1878 . -1) (undo-tree-id1880 . -1) (undo-tree-id1882 . -1) (undo-tree-id1884 . -1) (undo-tree-id1886 . -1) (undo-tree-id1888 . -1) (undo-tree-id1890 . -1) (undo-tree-id1892 . -1) (undo-tree-id1894 . -1) (undo-tree-id1896 . -1) (undo-tree-id1898 . -1) (#("<" 0 1 (fontified t)) . -933) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1903 . -1) (undo-tree-id1905 . -1) (undo-tree-id1907 . -1) (undo-tree-id1909 . -1) (undo-tree-id1911 . -1) 934) ((932 . 934)) (25944 29074 439208 0) 0 nil])
([nil nil ((904 . 907) (t 25944 29110 489709 523000)) nil (25944 29130 660470 0) 0 nil])
([nil nil ((932 . 936)) ((#("<u32" 0 1 (fontified t) 1 4 (face font-lock-type-face fontified t)) . 932)) (25944 29074 257380 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -906) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) 907) nil (25944 29130 660469 0) 0 nil])
([nil nil ((939 . 940) (t 25944 29059 818653 813000)) ((#("," 0 1 (fontified t)) . 939) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1)) (25944 29074 67335 0) 0 nil])
([nil nil ((906 . 907)) nil (25944 29130 660464 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -939) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) 940) ((939 . 940)) (25944 29073 894164 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -906) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) 907) nil (25944 29130 660462 0) 0 nil])
([nil nil ((939 . 941)) ((#(".u" 0 1 (fontified t) 1 2 (fontified t)) . 939) (undo-tree-id1996 . -2) (undo-tree-id1997 . -2) (undo-tree-id1998 . -2) (undo-tree-id1999 . -2) (undo-tree-id2000 . -2) (undo-tree-id2001 . -2) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -2) (undo-tree-id2027 . -2) (undo-tree-id2028 . -2)) (25944 29073 731036 0) 0 nil])
([nil nil ((905 . 912) (#("m" 0 1 (fontified nil)) . 905) (905 . 906) (#("message" 0 7 (fontified nil)) . -905) (905 . 912) (#("m" 0 1 (fontified t)) . -905) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) 906) nil (25944 29130 660454 0) 0 nil])
([nil nil ((apply yas--snippet-revive 940 948 #s(yas--snippet nil nil #s(yas--exit #<marker at 790 in component.rs> nil) 7 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 790 in component.rs> nil) 7 nil nil nil nil)) (940 . 948) (#("unwrap()$0" 0 10 (fontified nil)) . 940) (940 . 950) (#("u" 0 1 (fontified nil)) . 940) (940 . 941) (#("unwrap()" 0 8 (fontified nil)) . -940) (940 . 948) (#("u" 0 1 (fontified t)) . -940) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) 941) ((940 . 941) (#("unwrap()" 0 8 (fontified nil)) . 940) (940 . 948) (#("u" 0 1 (fontified nil)) . 940) (940 . 941) (#("unwrap()$0" 0 10 (fontified nil)) . 940) (940 . 950) (#("unwrap()" 0 8 (fontified t)) . 940) (undo-tree-id1972 . -8) (undo-tree-id1973 . -8) (undo-tree-id1974 . -8) (undo-tree-id1975 . -8) (undo-tree-id1976 . -8) (undo-tree-id1977 . -8) (undo-tree-id1978 . -8) (undo-tree-id1979 . -8) (undo-tree-id1980 . -8) (undo-tree-id1981 . -8) (undo-tree-id1982 . -8) (undo-tree-id1983 . -8) (undo-tree-id1984 . -8) (undo-tree-id1985 . -8) (undo-tree-id1986 . -8) (undo-tree-id1987 . -8) (undo-tree-id1988 . -8) (undo-tree-id1989 . -8) (undo-tree-id1990 . -8) (undo-tree-id1991 . -8) (undo-tree-id1992 . -8) (undo-tree-id1993 . -8) (undo-tree-id1994 . -8) (undo-tree-id1995 . -8) (t 25944 29064 68379 36000)) (25944 29064 59368 0) 0 nil])
([nil nil ((912 . 914)) nil (25944 29130 660436 0) 0 nil])
nil
([nil nil ((#("t" 0 1 (fontified t)) . -913) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) 914) nil (25944 29130 660434 0) 0 nil])
([nil nil ((913 . 915)) nil (25944 29130 660427 0) 0 nil])
([nil nil ((apply yas--snippet-revive 913 920 #s(yas--snippet nil nil #s(yas--exit 920 nil) 8 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 920 nil) 8 nil nil nil nil)) (913 . 920) (#("parse()$0" 0 9 (fontified nil)) . 913) (913 . 922) (#("pa" 0 2 (fontified nil)) . 913) (913 . 915) (#("parse()" 0 7 (fontified nil)) . -913) (913 . 920) (#("pa" 0 2 (fontified t)) . -913) (undo-tree-id2631 . -2) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -2) (undo-tree-id2636 . -2) (undo-tree-id2637 . -2) 915) nil (25944 29130 660425 0) 0 nil])
([nil nil ((918 . 921)) nil (25944 29130 660414 0) 0 nil])
([nil nil ((#(">" 0 1 (syntax-table (1) fontified t)) . -920) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) 921) nil (25944 29130 660413 0) 0 nil])
([nil nil ((920 . 922)) nil (25944 29130 660407 0) 0 nil])
([nil nil ((921 . 924)) nil (25944 29130 660406 0) 0 nil])
([nil nil ((927 . 929)) nil (25944 29130 660405 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -927) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (#("." 0 1 (fontified t)) . -928) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) 929) nil (25944 29130 660403 0) 0 nil])
([nil nil ((927 . 930)) nil (25944 29130 660383 0) 0 nil])
([nil nil ((apply yas--snippet-revive 928 936 #s(yas--snippet nil nil #s(yas--exit 936 nil) 9 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 936 nil) 9 nil nil nil nil)) (928 . 936) (#("unwrap()$0" 0 10 (fontified nil)) . 928) (928 . 938) (#("un" 0 2 (fontified nil)) . 928) (928 . 930) (#("unwrap()" 0 8 (fontified nil)) . -928) (928 . 936) (#("un" 0 2 (fontified t)) . -928) (undo-tree-id2599 . -2) (undo-tree-id2600 . -2) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -2) (undo-tree-id2605 . -2) (undo-tree-id2606 . -2) 930) nil (25944 29130 660378 0) 0 nil])
([nil nil ((#("5.]" 0 3 (fontified t)) . -1403) (undo-tree-id2906 . -3) (undo-tree-id2907 . -3) (undo-tree-id2908 . -3) (undo-tree-id2909 . -3) (undo-tree-id2910 . -3) (undo-tree-id2911 . -3) (undo-tree-id2912 . -3) (undo-tree-id2913 . -3) (undo-tree-id2914 . -3) (undo-tree-id2915 . -3) (undo-tree-id2916 . -3) (undo-tree-id2917 . -3) (undo-tree-id2918 . -3) (undo-tree-id2919 . -3) (undo-tree-id2920 . -3) (undo-tree-id2921 . -3) (undo-tree-id2922 . -3) (undo-tree-id2923 . -3) (undo-tree-id2924 . -3) 1406 (t 25944 29130 670768 311000)) nil (25944 29153 354652 0) 0 nil])
([nil nil ((#("0, " 0 3 (fontified t)) . -1400) (undo-tree-id2879 . -3) (undo-tree-id2880 . -3) (undo-tree-id2881 . -3) (undo-tree-id2882 . -3) (undo-tree-id2883 . -3) (undo-tree-id2884 . -3) (undo-tree-id2885 . -3) (undo-tree-id2886 . -3) (undo-tree-id2887 . -3) (undo-tree-id2888 . -3) (undo-tree-id2889 . -3) (undo-tree-id2890 . -3) (undo-tree-id2891 . -3) (undo-tree-id2892 . -3) (undo-tree-id2893 . -3) (undo-tree-id2894 . -3) (undo-tree-id2895 . -3) (undo-tree-id2896 . -3) (undo-tree-id2897 . -3) (undo-tree-id2898 . -3) (undo-tree-id2899 . -3) (undo-tree-id2900 . -3) (undo-tree-id2901 . -3) (undo-tree-id2902 . -3) (undo-tree-id2903 . -3) (undo-tree-id2904 . -3) (undo-tree-id2905 . -3) 1403) nil (25944 29153 354632 0) 0 nil])
([nil nil ((#("1." 0 2 (fontified t)) . -1398) (undo-tree-id2843 . -2) (undo-tree-id2844 . -2) (undo-tree-id2845 . -2) (undo-tree-id2846 . -2) (undo-tree-id2847 . -2) (undo-tree-id2848 . -2) (undo-tree-id2849 . -2) (undo-tree-id2850 . -2) (undo-tree-id2851 . -2) (undo-tree-id2852 . -2) (undo-tree-id2853 . -2) (undo-tree-id2854 . -2) (undo-tree-id2855 . -2) (undo-tree-id2856 . -2) (undo-tree-id2857 . -2) (undo-tree-id2858 . -2) (undo-tree-id2859 . -2) (undo-tree-id2860 . -2) (undo-tree-id2861 . -2) (undo-tree-id2862 . -2) (undo-tree-id2863 . -2) (undo-tree-id2864 . -2) (undo-tree-id2865 . -2) (undo-tree-id2866 . -2) (undo-tree-id2867 . -2) (undo-tree-id2868 . -2) (undo-tree-id2869 . -2) (undo-tree-id2870 . -2) (undo-tree-id2871 . -2) (undo-tree-id2872 . -2) (undo-tree-id2873 . -2) (undo-tree-id2874 . -2) (undo-tree-id2875 . -2) (undo-tree-id2876 . -2) (undo-tree-id2877 . -2) (undo-tree-id2878 . -2) 1400) nil (25944 29153 354604 0) 0 nil])
([nil nil ((#("0, " 0 3 (fontified t)) . -1395) (undo-tree-id2798 . -3) (undo-tree-id2799 . -3) (undo-tree-id2800 . -3) (undo-tree-id2801 . -3) (undo-tree-id2802 . -3) (undo-tree-id2803 . -3) (undo-tree-id2804 . -3) (undo-tree-id2805 . -3) (undo-tree-id2806 . -3) (undo-tree-id2807 . -3) (undo-tree-id2808 . -3) (undo-tree-id2809 . -3) (undo-tree-id2810 . -3) (undo-tree-id2811 . -3) (undo-tree-id2812 . -3) (undo-tree-id2813 . -3) (undo-tree-id2814 . -3) (undo-tree-id2815 . -3) (undo-tree-id2816 . -3) (undo-tree-id2817 . -3) (undo-tree-id2818 . -3) (undo-tree-id2819 . -3) (undo-tree-id2820 . -3) (undo-tree-id2821 . -3) (undo-tree-id2822 . -3) (undo-tree-id2823 . -3) (undo-tree-id2824 . -3) (undo-tree-id2825 . -3) (undo-tree-id2826 . -3) (undo-tree-id2827 . -3) (undo-tree-id2828 . -3) (undo-tree-id2829 . -3) (undo-tree-id2830 . -3) (undo-tree-id2831 . -3) (undo-tree-id2832 . -3) (undo-tree-id2833 . -3) (undo-tree-id2834 . -3) (undo-tree-id2835 . -3) (undo-tree-id2836 . -3) (undo-tree-id2837 . -3) (undo-tree-id2838 . -3) (undo-tree-id2839 . -3) (undo-tree-id2840 . -3) (undo-tree-id2841 . -3) (undo-tree-id2842 . -3) 1398) nil (25944 29153 354568 0) 0 nil])
([nil nil ((#("3." 0 2 (fontified t)) . -1393) (undo-tree-id2744 . -2) (undo-tree-id2745 . -2) (undo-tree-id2746 . -2) (undo-tree-id2747 . -2) (undo-tree-id2748 . -2) (undo-tree-id2749 . -2) (undo-tree-id2750 . -2) (undo-tree-id2751 . -2) (undo-tree-id2752 . -2) (undo-tree-id2753 . -2) (undo-tree-id2754 . -2) (undo-tree-id2755 . -2) (undo-tree-id2756 . -2) (undo-tree-id2757 . -2) (undo-tree-id2758 . -2) (undo-tree-id2759 . -2) (undo-tree-id2760 . -2) (undo-tree-id2761 . -2) (undo-tree-id2762 . -2) (undo-tree-id2763 . -2) (undo-tree-id2764 . -2) (undo-tree-id2765 . -2) (undo-tree-id2766 . -2) (undo-tree-id2767 . -2) (undo-tree-id2768 . -2) (undo-tree-id2769 . -2) (undo-tree-id2770 . -2) (undo-tree-id2771 . -2) (undo-tree-id2772 . -2) (undo-tree-id2773 . -2) (undo-tree-id2774 . -2) (undo-tree-id2775 . -2) (undo-tree-id2776 . -2) (undo-tree-id2777 . -2) (undo-tree-id2778 . -2) (undo-tree-id2779 . -2) (undo-tree-id2780 . -2) (undo-tree-id2781 . -2) (undo-tree-id2782 . -2) (undo-tree-id2783 . -2) (undo-tree-id2784 . -2) (undo-tree-id2785 . -2) (undo-tree-id2786 . -2) (undo-tree-id2787 . -2) (undo-tree-id2788 . -2) (undo-tree-id2789 . -2) (undo-tree-id2790 . -2) (undo-tree-id2791 . -2) (undo-tree-id2792 . -2) (undo-tree-id2793 . -2) (undo-tree-id2794 . -2) (undo-tree-id2795 . -2) (undo-tree-id2796 . -2) (undo-tree-id2797 . -2) 1395) nil (25944 29153 354522 0) 0 nil])
([nil nil ((#("vec![" 0 4 (face font-lock-preprocessor-face fontified t) 4 5 (fontified t)) . -1388) (undo-tree-id2681 . -5) (undo-tree-id2682 . -5) (undo-tree-id2683 . -5) (undo-tree-id2684 . -5) (undo-tree-id2685 . -5) (undo-tree-id2686 . -5) (undo-tree-id2687 . -5) (undo-tree-id2688 . -5) (undo-tree-id2689 . -5) (undo-tree-id2690 . -5) (undo-tree-id2691 . -5) (undo-tree-id2692 . -5) (undo-tree-id2693 . -5) (undo-tree-id2694 . -5) (undo-tree-id2695 . -5) (undo-tree-id2696 . -5) (undo-tree-id2697 . -5) (undo-tree-id2698 . -5) (undo-tree-id2699 . -5) (undo-tree-id2700 . -5) (undo-tree-id2701 . -5) (undo-tree-id2702 . -5) (undo-tree-id2703 . -5) (undo-tree-id2704 . -5) (undo-tree-id2705 . -5) (undo-tree-id2706 . -5) (undo-tree-id2707 . -5) (undo-tree-id2708 . -5) (undo-tree-id2709 . -5) (undo-tree-id2710 . -5) (undo-tree-id2711 . -5) (undo-tree-id2712 . -5) (undo-tree-id2713 . -5) (undo-tree-id2714 . -5) (undo-tree-id2715 . -5) (undo-tree-id2716 . -5) (undo-tree-id2717 . -5) (undo-tree-id2718 . -5) (undo-tree-id2719 . -5) (undo-tree-id2720 . -5) (undo-tree-id2721 . -5) (undo-tree-id2722 . -5) (undo-tree-id2723 . -5) (undo-tree-id2724 . -5) (undo-tree-id2725 . -5) (undo-tree-id2726 . -5) (undo-tree-id2727 . -5) (undo-tree-id2728 . -5) (undo-tree-id2729 . -5) (undo-tree-id2730 . -5) (undo-tree-id2731 . -5) (undo-tree-id2732 . -5) (undo-tree-id2733 . -5) (undo-tree-id2734 . -5) (undo-tree-id2735 . -5) (undo-tree-id2736 . -5) (undo-tree-id2737 . -5) (undo-tree-id2738 . -5) (undo-tree-id2739 . -5) (undo-tree-id2740 . -5) (undo-tree-id2741 . -5) (undo-tree-id2742 . -5) (undo-tree-id2743 . -5) 1393) nil (25944 29153 354468 0) 0 nil])
([nil nil ((1388 . 1389)) nil (25944 29153 354408 0) 0 nil])
([nil nil ((1388 . 1397) (#("e" 0 1 (fontified nil)) . 1388) (1388 . 1389) (#("event_vec" 0 9 (fontified nil)) . -1388) (1388 . 1397) (#("e" 0 1 (fontified t)) . -1388) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) 1389) nil (25944 29153 354406 0) 0 nil])
([nil nil ((1397 . 1399)) nil (25944 29153 354398 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1398 1403 #s(yas--snippet nil nil #s(yas--exit 1403 nil) 10 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1403 nil) 10 nil nil nil nil)) (1398 . 1403) (#("get()$0" 0 7 (fontified nil)) . 1398) (1398 . 1405) (#("g" 0 1 (fontified nil)) . 1398) (1398 . 1399) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -1398) (1398 . 1418) (#("g" 0 1 (fontified t)) . -1398) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) 1399) nil (25944 29153 354394 0) 0 nil])
([nil nil ((#("u32" 0 3 (face font-lock-type-face fontified t)) . -921) (undo-tree-id3021 . -3) (undo-tree-id3022 . -3) (undo-tree-id3023 . -3) (undo-tree-id3024 . -3) (undo-tree-id3025 . -3) (undo-tree-id3026 . -3) (undo-tree-id3027 . -3) (undo-tree-id3028 . -3) (undo-tree-id3029 . -3) (undo-tree-id3030 . -3) (undo-tree-id3031 . -3) (undo-tree-id3032 . -3) (undo-tree-id3033 . -3) (undo-tree-id3034 . -3) (undo-tree-id3035 . -3) (undo-tree-id3036 . -3) (undo-tree-id3037 . -3) (undo-tree-id3038 . -3) (undo-tree-id3039 . -3) (undo-tree-id3040 . -3) (undo-tree-id3041 . -3) 924 (t 25944 29153 365800 256000)) nil (25944 29194 119988 0) 0 nil])
([nil nil ((921 . 924)) nil (25944 29194 119966 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -603) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (#("3" 0 1 (fontified t)) . -604) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (#("2" 0 1 (face font-lock-type-face fontified t)) . -605) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) 606) nil (25944 29194 119963 0) 0 nil])
([nil nil ((603 . 606)) nil (25944 29280 644469 0) 0 nil])
([nil nil ((#("u32" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t)) . 1202) (undo-tree-id3044 . -3) (undo-tree-id3045 . -3) (undo-tree-id3046 . -3) (undo-tree-id3047 . -3) (undo-tree-id3048 . -3) (undo-tree-id3049 . -3) (undo-tree-id3050 . -3) (undo-tree-id3051 . -3) (undo-tree-id3052 . -3) (undo-tree-id3053 . -3) (undo-tree-id3054 . -3) (undo-tree-id3055 . -3) (undo-tree-id3056 . -3) (undo-tree-id3057 . -2) (undo-tree-id3058 . -2) (undo-tree-id3059 . -2) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1)) ((1202 . 1205)) (25944 29280 980889 0) 0 nil])
([nil nil ((1202 . 1203)) ((#("i" 0 1 (fontified t)) . 1202) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1)) (25944 29281 150879 0) 0 nil])
([nil nil ((1203 . 1205)) ((#("64" 0 2 (face font-lock-type-face fontified t)) . 1203) (t 25944 29194 130989 756000)) (25944 29281 311009 0) 0 nil])
([nil nil ((#("get()" 0 5 (fontified t)) . -1398) (undo-tree-id3242 . -5) (undo-tree-id3243 . -5) (undo-tree-id3244 . -4) (undo-tree-id3245 . -4) (undo-tree-id3246 . -4) (undo-tree-id3247 . -4) (undo-tree-id3248 . -4) (undo-tree-id3249 . -4) (undo-tree-id3250 . -4) (undo-tree-id3251 . -4) (undo-tree-id3252 . -4) (undo-tree-id3253 . -4) (undo-tree-id3254 . -4) (undo-tree-id3255 . -5) (undo-tree-id3256 . -5) (undo-tree-id3257 . -5) (undo-tree-id3258 . -5) (undo-tree-id3259 . -5) (undo-tree-id3260 . -5) (undo-tree-id3261 . -5) (undo-tree-id3262 . -5) (undo-tree-id3263 . -5) (undo-tree-id3264 . -5) (undo-tree-id3265 . -5) (undo-tree-id3266 . -5) (undo-tree-id3267 . -5) (undo-tree-id3268 . -5) 1403 (t 25944 29194 130989 756000)) nil (25944 29299 38973 0) 0 nil])
([nil nil ((#("vec." 0 4 (fontified t)) . -1394) (undo-tree-id3162 . -4) (undo-tree-id3163 . -4) (undo-tree-id3164 . -2) (undo-tree-id3165 . -2) (undo-tree-id3166 . -2) (undo-tree-id3167 . -2) (undo-tree-id3168 . -2) (undo-tree-id3169 . -2) (undo-tree-id3170 . -2) (undo-tree-id3171 . -2) (undo-tree-id3172 . -2) (undo-tree-id3173 . -2) (undo-tree-id3174 . -2) (undo-tree-id3175 . -2) (undo-tree-id3176 . -2) (undo-tree-id3177 . -2) (undo-tree-id3178 . -2) (undo-tree-id3179 . -2) (undo-tree-id3180 . -2) (undo-tree-id3181 . -2) (undo-tree-id3182 . -2) (undo-tree-id3183 . -2) (undo-tree-id3184 . -2) (undo-tree-id3185 . -2) (undo-tree-id3186 . -2) (undo-tree-id3187 . -2) (undo-tree-id3188 . -2) (undo-tree-id3189 . -2) (undo-tree-id3190 . -2) (undo-tree-id3191 . -2) (undo-tree-id3192 . -2) (undo-tree-id3193 . -2) (undo-tree-id3194 . -2) (undo-tree-id3195 . -2) (undo-tree-id3196 . -2) (undo-tree-id3197 . -2) (undo-tree-id3198 . -2) (undo-tree-id3199 . -2) (undo-tree-id3200 . -2) (undo-tree-id3201 . -2) (undo-tree-id3202 . -2) (undo-tree-id3203 . -2) (undo-tree-id3204 . -2) (undo-tree-id3205 . -2) (undo-tree-id3206 . -2) (undo-tree-id3207 . -2) (undo-tree-id3208 . -2) (undo-tree-id3209 . -2) (undo-tree-id3210 . -2) (undo-tree-id3211 . -2) (undo-tree-id3212 . -4) (undo-tree-id3213 . -4) (undo-tree-id3214 . -4) (undo-tree-id3215 . -4) (undo-tree-id3216 . -4) (undo-tree-id3217 . -4) (undo-tree-id3218 . -4) (undo-tree-id3219 . -4) (undo-tree-id3220 . -4) (undo-tree-id3221 . -4) (undo-tree-id3222 . -4) (undo-tree-id3223 . -4) (undo-tree-id3224 . -4) (undo-tree-id3225 . -4) (undo-tree-id3226 . -4) (undo-tree-id3227 . -4) (undo-tree-id3228 . -4) (undo-tree-id3229 . -4) (undo-tree-id3230 . -4) (undo-tree-id3231 . -4) (undo-tree-id3232 . -4) (undo-tree-id3233 . -4) (undo-tree-id3234 . -4) (undo-tree-id3235 . -4) (undo-tree-id3236 . -4) (undo-tree-id3237 . -4) (undo-tree-id3238 . -4) (undo-tree-id3239 . -4) (undo-tree-id3240 . -4) (undo-tree-id3241 . -4) 1398) nil (25944 29299 38936 0) 0 nil])
([nil nil ((#("event_" 0 6 (fontified t)) . -1388) (undo-tree-id3077 . -6) (undo-tree-id3078 . -6) (undo-tree-id3079 . -6) (undo-tree-id3080 . -6) (undo-tree-id3081 . -6) (undo-tree-id3082 . -6) (undo-tree-id3083 . -6) (undo-tree-id3084 . -6) (undo-tree-id3085 . -6) (undo-tree-id3086 . -6) (undo-tree-id3087 . -6) (undo-tree-id3088 . -6) (undo-tree-id3089 . -6) (undo-tree-id3090 . -6) (undo-tree-id3091 . -6) (undo-tree-id3092 . -6) (undo-tree-id3093 . -6) (undo-tree-id3094 . -6) (undo-tree-id3095 . -6) (undo-tree-id3096 . -6) (undo-tree-id3097 . -6) (undo-tree-id3098 . -6) (undo-tree-id3099 . -6) (undo-tree-id3100 . -6) (undo-tree-id3101 . -6) (undo-tree-id3102 . -6) (undo-tree-id3103 . -6) (undo-tree-id3104 . -6) (undo-tree-id3105 . -6) (undo-tree-id3106 . -6) (undo-tree-id3107 . -6) (undo-tree-id3108 . -6) (undo-tree-id3109 . -6) (undo-tree-id3110 . -6) (undo-tree-id3111 . -6) (undo-tree-id3112 . -6) (undo-tree-id3113 . -6) (undo-tree-id3114 . -6) (undo-tree-id3115 . -6) (undo-tree-id3116 . -6) (undo-tree-id3117 . -6) (undo-tree-id3118 . -6) (undo-tree-id3119 . -6) (undo-tree-id3120 . -6) (undo-tree-id3121 . -6) (undo-tree-id3122 . -6) (undo-tree-id3123 . -6) (undo-tree-id3124 . -6) (undo-tree-id3125 . -6) (undo-tree-id3126 . -6) (undo-tree-id3127 . -6) (undo-tree-id3128 . -6) (undo-tree-id3129 . -6) (undo-tree-id3130 . -6) (undo-tree-id3131 . -6) (undo-tree-id3132 . -6) (undo-tree-id3133 . -6) (undo-tree-id3134 . -6) (undo-tree-id3135 . -6) (undo-tree-id3136 . -6) (undo-tree-id3137 . -6) (undo-tree-id3138 . -6) (undo-tree-id3139 . -6) (undo-tree-id3140 . -6) (undo-tree-id3141 . -6) (undo-tree-id3142 . -6) (undo-tree-id3143 . -6) (undo-tree-id3144 . -6) (undo-tree-id3145 . -6) (undo-tree-id3146 . -6) (undo-tree-id3147 . -6) (undo-tree-id3148 . -6) (undo-tree-id3149 . -6) (undo-tree-id3150 . -6) (undo-tree-id3151 . -6) (undo-tree-id3152 . -6) (undo-tree-id3153 . -6) (undo-tree-id3154 . -6) (undo-tree-id3155 . -6) (undo-tree-id3156 . -6) (undo-tree-id3157 . -6) (undo-tree-id3158 . -6) (undo-tree-id3159 . -6) (undo-tree-id3160 . -6) (undo-tree-id3161 . -6) 1394) nil (25944 29299 38857 0) 0 nil])
([nil nil ((1388 . 1391)) nil (25944 29299 38773 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1388 1394 #s(yas--snippet nil nil #s(yas--exit 1393 nil) 11 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1393 nil) 11 nil nil nil nil)) (1388 . 1394) (#("vec![$0]" 0 8 (fontified nil)) . 1388) (1388 . 1396) (#("vec" 0 3 (fontified nil)) . 1388) (1388 . 1391) (#("vec![…]" 0 7 (fontified nil)) . -1388) (1388 . 1395) (#("vec" 0 3 (fontified t)) . -1388) (undo-tree-id3068 . -3) (undo-tree-id3069 . -3) (undo-tree-id3070 . -1) (undo-tree-id3071 . -2) (undo-tree-id3072 . -2) (undo-tree-id3073 . -3) (undo-tree-id3074 . -3) (undo-tree-id3075 . -3) (undo-tree-id3076 . -3) 1391) nil (25944 29299 38771 0) 0 nil])
([nil nil ((1393 . 1400)) nil (25944 29299 38758 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -1399) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) 1400) nil (25944 29299 38756 0) 0 nil])
([nil nil ((1399 . 1400)) nil (25944 29299 38744 0) 0 nil])
([nil nil ((1400 . 1401)) nil (25944 29299 38739 0) 0 nil])
([nil nil ((1399 . 1400) (t 25944 29299 50658 567000)) nil (25944 29302 521202 0) 0 nil])
([nil nil ((1396 . 1397)) nil (25944 29302 521198 0) 0 nil])
([nil nil ((141 . 142) (t 25944 29302 532939 675000)) nil (25944 29922 751957 0) 0 nil])
([nil nil ((142 . 143)) nil (25944 29922 751956 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -142) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) 143) nil (25944 29922 751955 0) 0 nil])
([nil nil ((142 . 149)) nil (25944 29922 751949 0) 0 nil])
([nil nil ((146 . 153) (#("web" 0 3 (fontified nil)) . 146) (146 . 149) (#("web_sys" 0 7 (fontified nil)) . -146) (146 . 153) (#("web" 0 3 (face font-lock-constant-face fontified t)) . -146) (undo-tree-id3314 . -3) (undo-tree-id3315 . -3) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -2) (undo-tree-id3319 . -2) (undo-tree-id3320 . -3) (undo-tree-id3321 . -3) (undo-tree-id3322 . -3) (undo-tree-id3323 . -3) (undo-tree-id3324 . -3) (undo-tree-id3325 . -3) 149) nil (25944 29922 751947 0) 0 nil])
([nil nil ((153 . 160)) nil (25944 29922 751932 0) 0 nil])
([nil nil ((155 . 172) (#("HtmlC" 0 5 (fontified nil)) . 155) (155 . 160) (#("HtmlCanvasElement" 0 17 (fontified nil)) . -155) (155 . 172) (#("HtmlC" 0 5 (face font-lock-type-face fontified t)) . -155) (undo-tree-id3282 . -5) (undo-tree-id3283 . -5) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -2) (undo-tree-id3292 . -2) (undo-tree-id3293 . -2) (undo-tree-id3294 . -2) (undo-tree-id3295 . -2) (undo-tree-id3296 . -2) (undo-tree-id3297 . -2) (undo-tree-id3298 . -3) (undo-tree-id3299 . -3) (undo-tree-id3300 . -3) (undo-tree-id3301 . -4) (undo-tree-id3302 . -4) (undo-tree-id3303 . -4) (undo-tree-id3304 . -4) (undo-tree-id3305 . -4) (undo-tree-id3306 . -4) (undo-tree-id3307 . -5) (undo-tree-id3308 . -5) (undo-tree-id3309 . -5) (undo-tree-id3310 . -5) (undo-tree-id3311 . -5) (undo-tree-id3312 . -5) (undo-tree-id3313 . -5) 160) nil (25944 29922 751929 0) 0 nil])
([nil nil ((172 . 173)) nil (25944 29922 751893 0) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-type-face fontified t)) . -172) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) 173) nil (25944 29922 751891 0) 0 nil])
([nil nil ((172 . 173)) nil (25944 29922 751862 0) 0 nil])
([nil nil ((#("           <LineChart chart=chart />" 0 11 (fontified t) 11 12 (syntax-table (1) fontified t) 12 21 (face font-lock-type-face fontified t) 21 35 (fontified t) 35 36 (syntax-table (1) fontified t)) . 1617) (undo-tree-id3384 . -36) (undo-tree-id3385 . -18) (undo-tree-id3386 . -19) (undo-tree-id3387 . -36) (undo-tree-id3388 . -36) (undo-tree-id3389 . -36) (undo-tree-id3390 . -36) (undo-tree-id3391 . -36) (undo-tree-id3392 . -36) (undo-tree-id3393 . -36) (undo-tree-id3394 . -36) (undo-tree-id3395 . -36) (undo-tree-id3396 . -27) (undo-tree-id3397 . -26) (undo-tree-id3398 . -24) (undo-tree-id3399 . -23) (undo-tree-id3400 . -21) (undo-tree-id3401 . -20) (undo-tree-id3402 . -19) (undo-tree-id3403 . -18) (undo-tree-id3404 . -16) (undo-tree-id3405 . -15) (undo-tree-id3406 . -13) (undo-tree-id3407 . -12) (undo-tree-id3408 . -10) (undo-tree-id3409 . -9) (undo-tree-id3410 . -7) (undo-tree-id3411 . -6) (undo-tree-id3412 . -5) (undo-tree-id3413 . -4) (undo-tree-id3414 . -3) (undo-tree-id3415 . -2) (undo-tree-id3416 . -2) (undo-tree-id3417 . -2) (undo-tree-id3418 . -2) (undo-tree-id3419 . -2) (undo-tree-id3420 . -2) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -18) (undo-tree-id3427 . -36) 1618 (t 25944 29922 763965 89000)) nil (25944 30425 300305 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1671 . 1672) (nil fontified nil 1617 . 1672) (1617 . 1672)) nil (25944 30425 300261 0) 0 nil])
([nil nil ((1616 . 1621) (#(" " 0 1 (fontified t)) . 1616) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) 1621) nil (25944 30425 300254 0) 0 nil])
([nil nil ((#("
    
    let chart = Cartesian::new(
        Series::from(vec![0., 1.0, 2.]),
        Series::from(vec![1., 2., 3.]),
    ).set_view(640, 640, 3, 0, 0, 50);" 0 1 (fontified t) 1 6 (fontified t) 6 10 (fontified t) 10 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 19 (face font-lock-variable-name-face fontified t) 19 22 (fontified t) 22 31 (face font-lock-type-face fontified t) 31 46 (fontified t) 46 52 (face font-lock-type-face fontified t) 52 59 (fontified t) 59 63 (face font-lock-preprocessor-face fontified t) 63 79 (fontified t) 79 87 (fontified t) 87 93 (face font-lock-type-face fontified t) 93 100 (fontified t) 100 104 (face font-lock-preprocessor-face fontified t) 104 116 (fontified t) 116 119 (fontified t) 119 157 (fontified t)) . 1320) (undo-tree-id3430 . -157) (undo-tree-id3431 . -112) (undo-tree-id3432 . -17) (undo-tree-id3433 . -27) (undo-tree-id3434 . -157) (undo-tree-id3435 . -157) (undo-tree-id3436 . -157) (undo-tree-id3437 . -157) (undo-tree-id3438 . -157) (undo-tree-id3439 . -157) (undo-tree-id3440 . -157) (undo-tree-id3441 . -157) (undo-tree-id3442 . -157) (undo-tree-id3443 . -112) (undo-tree-id3444 . -67) (undo-tree-id3445 . -65) (undo-tree-id3446 . -62) (undo-tree-id3447 . -60) (undo-tree-id3448 . -59) (undo-tree-id3449 . -57) (undo-tree-id3450 . -56) (undo-tree-id3451 . -55) (undo-tree-id3452 . -22) (undo-tree-id3453 . -21) (undo-tree-id3454 . -20) (undo-tree-id3455 . -19) (undo-tree-id3456 . -18) (undo-tree-id3457 . -5) (undo-tree-id3458 . -4) (undo-tree-id3459 . -2) (undo-tree-id3460 . -1) (undo-tree-id3461 . -157) (t 25944 30425 312859 477000)) nil (25944 30433 441373 0) 0 nil])
([nil nil ((1320 . 1324)) nil (25944 30433 441340 0) 0 nil])
([nil nil ((1321 . 1325) (#("    " 0 4 (fontified nil)) . 1320) (undo-tree-id3428 . -4) (undo-tree-id3429 . -4) (1324 . 1325)) nil (25944 30433 441337 0) 0 nil])
([nil nil ((#("3" 0 1 (face font-lock-string-face fontified t)) . -1496) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) 1497 (t 25944 30433 453313 34000)) nil (25944 30445 253312 0) 0 nil])
([nil nil ((1496 . 1497)) nil (25944 30445 253283 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-string-face fontified t)) . -1496) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) 1497 (t 25944 30445 265744 590000)) nil (25944 30451 849818 0) 0 nil])
([nil nil ((1496 . 1497)) nil (25944 30451 849772 0) 0 nil])
([nil nil ((1325 . 1328) (t 25944 30451 863018 744000)) nil (25944 30519 29749 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1327) (undo-tree-id3581 . -1) 1328) nil (25944 30519 29747 0) 0 nil])
([nil nil ((1327 . 1334)) nil (25944 30519 29745 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1332) (undo-tree-id3579 . -1) (#("=" 0 1 (fontified t)) . -1333) (undo-tree-id3580 . -1) 1334) nil (25944 30519 29744 0) 0 nil])
([nil nil ((1332 . 1335)) nil (25944 30519 29740 0) 0 nil])
([nil nil ((1334 . 1351) (#("H" 0 1 (fontified nil)) . 1334) (1334 . 1335) (#("HtmlCanvasElement" 0 17 (fontified nil)) . -1334) (1334 . 1351) (#("H" 0 1 (face font-lock-type-face fontified t)) . -1334) (undo-tree-id3578 . -1) 1335) nil (25944 30519 29738 0) 0 nil])
([nil nil ((1351 . 1352)) nil (25944 30519 29735 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1351) (undo-tree-id3577 . -1) 1352) nil (25944 30519 29734 0) 0 nil])
([nil nil ((1351 . 1356)) nil (25944 30519 29731 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1351) (undo-tree-id3572 . -1) (#(":" 0 1 (fontified t)) . -1352) (undo-tree-id3573 . -1) (#("n" 0 1 (fontified t)) . -1353) (undo-tree-id3574 . -1) (#("e" 0 1 (fontified t)) . -1354) (undo-tree-id3575 . -1) (#("w" 0 1 (fontified t)) . -1355) (undo-tree-id3576 . -1) 1356) nil (25944 30519 29730 0) 0 nil])
([nil nil ((#("    canvas = HtmlCanvasElement" 0 13 (fontified t) 13 30 (face font-lock-type-face fontified t)) . 1321) (undo-tree-id3516 . -28) (undo-tree-id3517 . -28) (undo-tree-id3518 . -20) (undo-tree-id3519 . -20) (undo-tree-id3520 . -20) (undo-tree-id3521 . -20) (undo-tree-id3522 . -20) (undo-tree-id3523 . -20) (undo-tree-id3524 . -20) (undo-tree-id3525 . -20) (undo-tree-id3526 . -28) (undo-tree-id3527 . -28) (undo-tree-id3528 . -28) (undo-tree-id3529 . -28) (undo-tree-id3530 . -28) (undo-tree-id3531 . -28) (undo-tree-id3532 . -28) (undo-tree-id3533 . -28) (undo-tree-id3534 . -28) (undo-tree-id3535 . -28) (undo-tree-id3536 . -28) (undo-tree-id3537 . -28) (undo-tree-id3538 . -28) (undo-tree-id3539 . -28) (undo-tree-id3540 . -28) (undo-tree-id3541 . -28) (undo-tree-id3542 . -28) (undo-tree-id3543 . -28) (undo-tree-id3544 . -28) (undo-tree-id3545 . -28) (undo-tree-id3546 . -28) (undo-tree-id3547 . -28) (undo-tree-id3548 . -28) (undo-tree-id3549 . -28) (undo-tree-id3550 . -28) (undo-tree-id3551 . -28) (undo-tree-id3552 . -28) (undo-tree-id3553 . -28) (undo-tree-id3554 . -28) (undo-tree-id3555 . -28) (undo-tree-id3556 . -28) (undo-tree-id3557 . -30) (undo-tree-id3558 . -30) (undo-tree-id3559 . -30) (undo-tree-id3560 . -30) (undo-tree-id3561 . -30) (undo-tree-id3562 . -30) (undo-tree-id3563 . -30) (undo-tree-id3564 . -30) (undo-tree-id3565 . -30) (undo-tree-id3566 . -30) (undo-tree-id3567 . -30) (undo-tree-id3568 . -30) (undo-tree-id3569 . -30) (undo-tree-id3570 . -30) (undo-tree-id3571 . -30)) nil (25944 30519 29720 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1321) (undo-tree-id3514 . 1) (undo-tree-id3515 . -1)) nil (25944 30519 29663 0) 0 nil])
([nil nil ((1320 . 1324) (t 25944 30519 43027 422000)) nil (25944 30640 959178 0) 0 nil])
([nil nil ((1321 . 1325) (#("    " 0 4 (fontified nil)) . 1320) (undo-tree-id3610 . -4) (undo-tree-id3611 . -4) (1324 . 1325)) nil (25944 30640 959176 0) 0 nil])
([nil nil ((1320 . 1324)) nil (25944 30640 959173 0) 0 nil])
([nil nil ((1324 . 1326)) nil (25944 30640 959172 0) 0 nil])
([nil nil ((1326 . 1329)) nil (25944 30640 959171 0) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-constant-face fontified t)) . -1328) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) 1329) nil (25944 30640 959170 0) 0 nil])
([nil nil ((1328 . 1329)) nil (25944 30640 959164 0) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -1328) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) 1329) nil (25944 30640 959163 0) 0 nil])
([nil nil ((1328 . 1330)) nil (25944 30640 959153 0) 0 nil])
([nil nil ((1328 . 1336) (#("pl" 0 2 (fontified nil)) . 1328) (1328 . 1330) (#("plotters" 0 8 (fontified nil)) . -1328) (1328 . 1336) (#("pl" 0 2 (face font-lock-constant-face fontified t)) . -1328) (undo-tree-id3582 . -2) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -2) (undo-tree-id3594 . -2) (undo-tree-id3595 . -2) (undo-tree-id3596 . -2) 1330) nil (25944 30640 959149 0) 0 nil])
([nil nil ((1336 . 1349)) nil (25944 30640 959124 0) 0 nil])
([nil nil ((1319 . 1324) (t 25944 30640 973026 296000)) nil (25944 30647 538277 0) 0 nil])
([nil nil ((1359 . 1362)) nil (25944 30647 538275 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1354) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . 1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (#(" " 0 1 (fontified t)) . -1355) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (#(" " 0 1 (fontified t)) . -1356) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (#(" " 0 1 (fontified t)) . -1357) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (#(" " 0 1 (fontified t)) . -1358) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (#("u" 0 1 (fontified t)) . -1359) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (#("s" 0 1 (fontified t)) . -1360) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -1361) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) 1362) nil (25944 30647 538265 0) 0 nil])
([nil nil ((1354 . 1359) (t 25944 30647 550942 145000)) nil (25944 30704 411945 0) 0 nil])
([nil nil ((1359 . 1362)) nil (25944 30704 411944 0) 0 nil])
([nil nil ((1362 . 1364)) nil (25944 30704 411943 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1362) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (#("	" 0 1 (fontified t)) . -1363) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) 1364) nil (25944 30704 411941 0) 0 nil])
([nil nil ((1362 . 1363)) nil (25944 30704 411935 0) 0 nil])
([nil nil ((1363 . 1365)) nil (25944 30704 411934 0) 0 nil])
([nil nil ((1363 . 1378) (#("pl" 0 2 (fontified nil)) . 1363) (1363 . 1365) (#("plotters_canvas" 0 15 (fontified nil)) . -1363) (1363 . 1378) (#("pl" 0 2 (face font-lock-constant-face fontified t)) . -1363) (undo-tree-id3742 . -2) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -2) (undo-tree-id3746 . -2) (undo-tree-id3747 . -2) (undo-tree-id3748 . -2) 1365) nil (25944 30704 411932 0) 0 nil])
([nil nil ((1378 . 1380)) nil (25944 30704 411916 0) 0 nil])
([nil nil ((1380 . 1393)) nil (25944 30704 411914 0) 0 nil])
([nil nil ((1393 . 1394)) nil (25944 30704 411910 0) 0 nil])
([nil nil ((1396 . 1400) (#("    " 0 4 (fontified nil)) . 1395) (undo-tree-id3762 . -4) (undo-tree-id3763 . -4) (undo-tree-id3764 . -4) (undo-tree-id3765 . -4) (undo-tree-id3766 . -4) (undo-tree-id3767 . -4) (undo-tree-id3768 . -4) (undo-tree-id3769 . -4) (1394 . 1400) (t 25944 30704 424677 426000)) nil (25944 30716 38192 0) 0 nil])
([nil nil ((1400 . 1414)) nil (25944 30716 38182 0) 0 nil])
([nil nil ((1414 . 1415)) nil (25944 30716 38181 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1414) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) 1415) nil (25944 30716 38179 0) 0 nil])
([nil nil ((1414 . 1415)) nil (25944 30716 38173 0) 0 nil])
([nil nil ((#("C" 0 1 (face font-lock-type-face fontified t)) . -1414) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) 1415) nil (25944 30716 38169 0) 0 nil])
([nil nil ((1414 . 1415) (t 25944 30716 50623 103000)) nil (25944 30785 935106 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1414) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) 1415) nil (25944 30785 935105 0) 0 nil])
([nil nil ((1414 . 1420)) nil (25944 30785 935102 0) 0 nil])
([nil nil ((1414 . 1427) (#("Canvas" 0 6 (fontified nil)) . 1414) (1414 . 1420) (#("CanvasBackend" 0 13 (fontified nil)) . -1414) (1414 . 1427) (#("Canvas" 0 6 (face font-lock-type-face fontified t)) . -1414) (undo-tree-id3808 . -6) 1420) nil (25944 30785 935100 0) 0 nil])
([nil nil ((1427 . 1432)) nil (25944 30785 935097 0) 0 nil])
([nil nil ((1429 . 1432) (#("new" 0 3 (fontified nil)) . 1429) (1429 . 1432) (#("new" 0 3 (fontified t)) . -1429) (undo-tree-id3807 . -3) 1432) nil (25944 30785 935095 0) 0 nil])
([nil nil ((1432 . 1434)) nil (25944 30785 935092 0) 0 nil])
([nil nil ((1433 . 1435)) nil (25944 30785 935091 0) 0 nil])
([nil nil ((1434 . 1435)) nil (25944 30785 935090 0) 0 nil])
([nil nil ((1437 . 1440)) nil (25944 30785 935089 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -1438) (undo-tree-id3805 . -1) (#("p" 0 1 (fontified t)) . -1439) (undo-tree-id3806 . -1) 1440) nil (25944 30785 935088 0) 0 nil])
([nil nil ((1438 . 1441)) nil (25944 30785 935084 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1445 1470 nil nil nil t #s(yas--exit 1471 nil))) #s(yas--exit 1471 nil) 12 nil #s(yas--field 1 1445 1470 nil nil nil t #s(yas--exit 1471 nil)) nil nil)) (1438 . 1449) (#("expect(${1:msg})$0" 0 18 (fontified nil)) . 1438) (1438 . 1456) (#("exp" 0 3 (fontified nil)) . 1438) (1438 . 1441) (#("expect(…)" 0 9 (fontified nil)) . -1438) (1438 . 1447) (#("exp" 0 3 (fontified t)) . -1438) (undo-tree-id3804 . -3) 1441) nil (25944 30785 935082 0) 0 nil])
([nil nil ((1446 . 1447) (#("msg" 0 3 (fontified nil)) . 1446) (undo-tree-id3803 . -3) (1445 . 1446)) nil (25944 30785 935078 0) 0 nil])
([nil nil ((1446 . 1467)) nil (25944 30785 935075 0) 0 nil])
([nil nil ((1467 . 1469)) nil (25944 30785 935074 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1438 1471 #s(yas--snippet nil (#s(yas--field 1 1445 1470 nil nil nil t #s(yas--exit 1471 nil))) #s(yas--exit 1471 nil) 12 nil #s(yas--field 1 1445 1470 nil nil nil t #s(yas--exit 1471 nil)) nil nil))) nil (25944 30785 935073 0) 0 nil])
([nil nil ((1472 . 1473)) nil (25944 30785 935072 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1471) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (#(";" 0 1 (fontified t)) . -1472) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) 1473) nil (25944 30785 935069 0) 0 nil])
([nil nil ((1471 . 1472)) nil (25944 30785 935023 0) 0 nil])
([nil nil ((1474 . 1478) (#("    " 0 4 (fontified nil)) . 1473) (undo-tree-id3911 . -4) (undo-tree-id3912 . -4) (undo-tree-id3913 . -4) (1477 . 1478) (1472 . 1473) (t 25944 30785 948330 178000)) nil (25944 30804 27420 0) 0 nil])
([nil nil ((1473 . 1477)) nil (25944 30804 27415 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-string-face fontified t)) . -1434) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) 1435) nil (25944 30804 27413 0) 0 nil])
([nil nil ((1434 . 1440)) nil (25944 30804 27395 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -1469) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -1470) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -1471) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -1472) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (#("1" 0 1 (face font-lock-string-face fontified t)) . -1473) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) 1474) nil (25944 30804 27389 0) 0 nil])
([nil nil ((1463 . 1466)) nil (25944 30804 27302 0) 0 nil])
([nil nil ((1480 . 1493) (t 25944 30804 40981 557000)) nil (25944 30821 887551 0) 0 nil])
([nil nil ((1491 . 1498) (#("ba" 0 2 (fontified nil)) . 1491) (1491 . 1493) (#("backend" 0 7 (fontified nil)) . -1491) (1491 . 1498) (#("ba" 0 2 (fontified t)) . -1491) (undo-tree-id3926 . -2) (undo-tree-id3927 . -1) (undo-tree-id3928 . -2) (undo-tree-id3929 . -2) 1493) nil (25944 30821 887549 0) 0 nil])
([nil nil ((1498 . 1502)) nil (25944 30821 887542 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1499 1518 #s(yas--snippet nil nil #s(yas--exit 1518 nil) 13 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1518 nil) 13 nil nil nil nil)) (1499 . 1518) (#("into_drawing_area()$0" 0 21 (fontified nil)) . 1499) (1499 . 1520) (#("int" 0 3 (fontified nil)) . 1499) (1499 . 1502) (#("into_drawing_area() (as IntoDrawingArea)" 0 40 (fontified nil)) . -1499) (1499 . 1539) (#("int" 0 3 (fontified t)) . -1499) (undo-tree-id3914 . -3) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -2) (undo-tree-id3918 . -2) (undo-tree-id3919 . -2) (undo-tree-id3920 . -2) (undo-tree-id3921 . -2) (undo-tree-id3922 . -2) (undo-tree-id3923 . -3) (undo-tree-id3924 . -3) (undo-tree-id3925 . -3) 1502) nil (25944 30821 887539 0) 0 nil])
([nil nil ((1518 . 1519)) nil (25944 30821 887512 0) 0 nil])
([nil nil ((1519 . 1524) (t 25944 30821 901075 31000)) nil (25944 30846 643609 0) 0 nil])
([nil nil ((1524 . 1525)) nil (25944 30846 643607 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1524) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) 1525) nil (25944 30846 643606 0) 0 nil])
([nil nil ((1524 . 1530)) nil (25944 30846 643603 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1534 1540 nil nil nil t #s(yas--exit 1541 nil))) #s(yas--exit 1541 nil) 14 nil #s(yas--field 1 1534 1540 nil nil nil t #s(yas--exit 1541 nil)) nil nil)) (1529 . 1540) (#("fill(${1:color})$0" 0 18 (fontified nil)) . 1529) (1529 . 1547) (#("f" 0 1 (fontified nil)) . 1529) (1529 . 1530) (#("fill(…)" 0 7 (fontified nil)) . -1529) (1529 . 1536) (#("f" 0 1 (fontified t)) . -1529) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) 1530) nil (25944 30846 643601 0) 0 nil])
([nil nil ((1535 . 1540) (#("color" 0 5 (fontified nil)) . 1535) (undo-tree-id3951 . -5) (1534 . 1535)) nil (25944 30846 643593 0) 0 nil])
([nil nil ((1535 . 1540) (#("BLACK" 0 5 (fontified nil)) . 1535) (undo-tree-id3930 . -5) (1535 . 1540) (#("BLACK" 0 5 (face font-lock-type-face fontified t)) . -1535) (undo-tree-id3931 . -5) (undo-tree-id3932 . -5) (undo-tree-id3933 . -5) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -2) (undo-tree-id3938 . -2) (undo-tree-id3939 . -3) (undo-tree-id3940 . -3) (undo-tree-id3941 . -3) (undo-tree-id3942 . -4) (undo-tree-id3943 . -4) (undo-tree-id3944 . -4) (undo-tree-id3945 . -5) (undo-tree-id3946 . -5) (undo-tree-id3947 . -5) (undo-tree-id3948 . -5) (undo-tree-id3949 . -5) (undo-tree-id3950 . -5) 1540) nil (25944 31503 776057 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1529 1541 #s(yas--snippet nil (#s(yas--field 1 1534 1540 nil nil nil t #s(yas--exit 1541 nil))) #s(yas--exit 1541 nil) 14 nil #s(yas--field 1 1534 1540 nil nil nil t #s(yas--exit 1541 nil)) nil nil))) nil (25944 31509 81043 0) 0 nil] [nil nil ((apply yas--snippet-revive 1529 1541 #s(yas--snippet nil (#s(yas--field 1 1534 1540 nil nil nil t #s(yas--exit 1541 nil))) #s(yas--exit 1541 nil) 14 nil #s(yas--field 1 1534 1540 nil nil nil t #s(yas--exit 1541 nil)) nil nil))) ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1534 1540 nil nil nil t #s(yas--exit 1541 nil))) #s(yas--exit 1541 nil) 14 nil #s(yas--field 1 1534 1540 nil nil nil t #s(yas--exit 1541 nil)) nil nil))) (25944 31503 292663 0) 0 nil])
([nil nil ((#("    use plotters::prelude::*;
    use plotters_canvas::CanvasBackend;

    let backend = CanvasBackend::new(\"canvas\").expect(\"cannot find id:canvas\");
    let root = backend.into_drawing_area();
    root.fill(&BLACK)" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 16 (face font-lock-constant-face fontified t) 16 18 (fontified t) 18 25 (face font-lock-constant-face fontified t) 25 30 (fontified t) 30 34 (fontified t) 34 37 (face font-lock-keyword-face fontified t) 37 38 (fontified t) 38 53 (face font-lock-constant-face fontified t) 53 55 (fontified t) 55 68 (face font-lock-type-face fontified t) 68 70 (fontified t) 70 71 (fontified t) 71 75 (fontified t) 75 78 (face font-lock-keyword-face fontified t) 78 79 (fontified t) 79 86 (face font-lock-variable-name-face fontified t) 86 89 (fontified t) 89 102 (face font-lock-type-face fontified t) 102 104 (fontified t) 104 108 (fontified t) 108 116 (face font-lock-string-face fontified t) 116 118 (fontified t) 118 125 (fontified t) 125 148 (face font-lock-string-face fontified t) 148 151 (fontified t) 151 155 (fontified t) 155 158 (face font-lock-keyword-face fontified t) 158 159 (fontified t) 159 163 (face font-lock-variable-name-face fontified t) 163 166 (fontified t) 166 174 (fontified t) 174 195 (fontified t) 195 199 (fontified t) 199 204 (fontified t) 204 209 (fontified t) 209 210 (face rust-ampersand-face fontified t) 210 215 (face font-lock-type-face fontified t) 215 216 (fontified t)) . 1325) (undo-tree-id4121 . -216) (undo-tree-id4122 . -151) (undo-tree-id4123 . -149) (undo-tree-id4124 . -209) (undo-tree-id4125 . -99) (undo-tree-id4126 . -216) (undo-tree-id4127 . -216) (undo-tree-id4128 . -216) (undo-tree-id4129 . -216) (undo-tree-id4130 . -216) (undo-tree-id4131 . -216) (undo-tree-id4132 . -216) (undo-tree-id4133 . -216) (undo-tree-id4134 . -216) (undo-tree-id4135 . -216) (undo-tree-id4136 . -216) (undo-tree-id4137 . -184) (undo-tree-id4138 . -181) (undo-tree-id4139 . -180) (undo-tree-id4140 . -96) (undo-tree-id4141 . -93) (undo-tree-id4142 . -91) (undo-tree-id4143 . -70) (undo-tree-id4144 . -43) (undo-tree-id4145 . -42) (undo-tree-id4146 . -41) (undo-tree-id4147 . -40) (undo-tree-id4148 . -9) (undo-tree-id4149 . -8) (undo-tree-id4150 . -7) (undo-tree-id4151 . -7) (undo-tree-id4152 . -7) (undo-tree-id4153 . -5) (undo-tree-id4154 . -4) (undo-tree-id4155 . -4) (undo-tree-id4156 . -4) (undo-tree-id4157 . -4) (undo-tree-id4158 . -4) (undo-tree-id4159 . -4) (undo-tree-id4160 . -3) (undo-tree-id4161 . -2) (undo-tree-id4162 . -216) (undo-tree-id4163 . -216) (undo-tree-id4164 . -216) (undo-tree-id4165 . -118) (undo-tree-id4166 . -118) (undo-tree-id4167 . -118) (undo-tree-id4168 . -118) (undo-tree-id4169 . -118) (undo-tree-id4170 . -118) (undo-tree-id4171 . -118) (undo-tree-id4172 . -118) (undo-tree-id4173 . -118) (undo-tree-id4174 . -118) (undo-tree-id4175 . -118) (undo-tree-id4176 . -118) (undo-tree-id4177 . -118) (undo-tree-id4178 . -118) (undo-tree-id4179 . -118) (undo-tree-id4180 . -118) (undo-tree-id4181 . -118) (undo-tree-id4182 . -118) (undo-tree-id4183 . -118) (undo-tree-id4184 . -118) (undo-tree-id4185 . -118) (undo-tree-id4186 . -118) (undo-tree-id4187 . -118) (undo-tree-id4188 . -118) (undo-tree-id4189 . -118) (undo-tree-id4190 . -118) (undo-tree-id4191 . -118) (undo-tree-id4192 . -118) (undo-tree-id4193 . -118) (undo-tree-id4194 . -118) (undo-tree-id4195 . -118) (undo-tree-id4196 . -118) (undo-tree-id4197 . -118) (undo-tree-id4198 . -118) (undo-tree-id4199 . -216) (undo-tree-id4200 . -216) (undo-tree-id4201 . -216) (undo-tree-id4202 . -216) (undo-tree-id4203 . -216) (undo-tree-id4204 . -216) (undo-tree-id4205 . -216) (undo-tree-id4206 . -216) (undo-tree-id4207 . -216) (undo-tree-id4208 . -216) (undo-tree-id4209 . -178) (undo-tree-id4210 . -177) (undo-tree-id4211 . -176) (undo-tree-id4212 . -175) (undo-tree-id4213 . -175) (undo-tree-id4214 . -175) (undo-tree-id4215 . -175) (undo-tree-id4216 . -175) (undo-tree-id4217 . -174) (undo-tree-id4218 . -173) (undo-tree-id4219 . -171) (undo-tree-id4220 . -170) (undo-tree-id4221 . -169) (undo-tree-id4222 . -168) (undo-tree-id4223 . -87) (undo-tree-id4224 . -86) (undo-tree-id4225 . -85) (undo-tree-id4226 . -84) (undo-tree-id4227 . -83) (undo-tree-id4228 . -83) (undo-tree-id4229 . -83) (undo-tree-id4230 . -83) (undo-tree-id4231 . -83) (undo-tree-id4232 . -83) (undo-tree-id4233 . -83) (undo-tree-id4234 . -82) (undo-tree-id4235 . -82) (undo-tree-id4236 . -82) (undo-tree-id4237 . -82) (undo-tree-id4238 . -82) (undo-tree-id4239 . -80) (undo-tree-id4240 . -79) (undo-tree-id4241 . -78) (undo-tree-id4242 . -77) (undo-tree-id4243 . -75) (undo-tree-id4244 . -74) (undo-tree-id4245 . -73) (undo-tree-id4246 . -72) (undo-tree-id4247 . -72) (undo-tree-id4248 . -72) (undo-tree-id4249 . -72) (undo-tree-id4250 . -72) (undo-tree-id4251 . -72) (undo-tree-id4252 . -72) (undo-tree-id4253 . -71) (undo-tree-id4254 . -71) (undo-tree-id4255 . -71) (undo-tree-id4256 . -71) (undo-tree-id4257 . -71) (undo-tree-id4258 . -151) (undo-tree-id4259 . -151) (undo-tree-id4260 . -151) (undo-tree-id4261 . -151) (undo-tree-id4262 . -151) (undo-tree-id4263 . -151) (undo-tree-id4264 . -151) (undo-tree-id4265 . -151) (undo-tree-id4266 . -71) (undo-tree-id4267 . -71) (undo-tree-id4268 . -71) (undo-tree-id4269 . -71) (undo-tree-id4270 . -70) (undo-tree-id4271 . -70) (undo-tree-id4272 . -70) (undo-tree-id4273 . -70) (undo-tree-id4274 . -70) (undo-tree-id4275 . -70) (undo-tree-id4276 . -70) (undo-tree-id4277 . -70) (undo-tree-id4278 . -82) (undo-tree-id4279 . -81) (undo-tree-id4280 . -80) (undo-tree-id4281 . -79) (undo-tree-id4282 . -77) (undo-tree-id4283 . -76) (undo-tree-id4284 . -74) (undo-tree-id4285 . -153) (undo-tree-id4286 . -152) (undo-tree-id4287 . -152) (undo-tree-id4288 . -152) (undo-tree-id4289 . -152) (undo-tree-id4290 . -152) (undo-tree-id4291 . -151) (undo-tree-id4292 . -151) (undo-tree-id4293 . -151) (undo-tree-id4294 . -151) (undo-tree-id4295 . -151) (undo-tree-id4296 . -72) (undo-tree-id4297 . -72) (undo-tree-id4298 . -72) (undo-tree-id4299 . -72) (undo-tree-id4300 . -72) (undo-tree-id4301 . -72) (undo-tree-id4302 . -72) (undo-tree-id4303 . -72) (undo-tree-id4304 . -72) (undo-tree-id4305 . -71) (undo-tree-id4306 . -71) (undo-tree-id4307 . -71) (undo-tree-id4308 . -71) (undo-tree-id4309 . -71) (undo-tree-id4310 . -216) (undo-tree-id4311 . -216) (undo-tree-id4312 . -216) (undo-tree-id4313 . -71) (undo-tree-id4314 . -71) (undo-tree-id4315 . -71) (undo-tree-id4316 . -71) (undo-tree-id4317 . -71) (undo-tree-id4318 . -71) (undo-tree-id4319 . -71) (undo-tree-id4320 . -71) (undo-tree-id4321 . -71) (undo-tree-id4322 . -71) (undo-tree-id4323 . -216) (undo-tree-id4324 . -216) (undo-tree-id4325 . -216) (undo-tree-id4326 . -216) (undo-tree-id4327 . -216) (undo-tree-id4328 . -216) (undo-tree-id4329 . -216) (undo-tree-id4330 . -216) (undo-tree-id4331 . -216) (undo-tree-id4332 . -216) (undo-tree-id4333 . -216) (undo-tree-id4334 . -216) (undo-tree-id4335 . -216) (undo-tree-id4336 . -216) (undo-tree-id4337 . -216) (undo-tree-id4338 . -216) (undo-tree-id4339 . -216) (undo-tree-id4340 . -216) (undo-tree-id4341 . -216) (undo-tree-id4342 . -216) (undo-tree-id4343 . -216) (undo-tree-id4344 . -216) (undo-tree-id4345 . -209) (undo-tree-id4346 . -209) (undo-tree-id4347 . -209) (undo-tree-id4348 . -209) (undo-tree-id4349 . -209) (undo-tree-id4350 . -209) (undo-tree-id4351 . -209) (undo-tree-id4352 . -209) (undo-tree-id4353 . -209) (undo-tree-id4354 . -209) (undo-tree-id4355 . -209) (undo-tree-id4356 . -216) (undo-tree-id4357 . -216) (undo-tree-id4358 . -216) (undo-tree-id4359 . -216) (undo-tree-id4360 . -216) (undo-tree-id4361 . -216) (undo-tree-id4362 . -216) (undo-tree-id4363 . -213) (undo-tree-id4364 . -210) (undo-tree-id4365 . -208) (undo-tree-id4366 . -207) (undo-tree-id4367 . -206) (undo-tree-id4368 . -205) (undo-tree-id4369 . -204) (undo-tree-id4370 . -159) (undo-tree-id4371 . -157) (undo-tree-id4372 . -76) (undo-tree-id4373 . -70) (undo-tree-id4374 . -33) (undo-tree-id4375 . -32) (undo-tree-id4376 . -30) (undo-tree-id4377 . -30) (undo-tree-id4378 . -30) (undo-tree-id4379 . -30) (undo-tree-id4380 . -30) (undo-tree-id4381 . -216) (undo-tree-id4382 . -30) (undo-tree-id4383 . -30) (undo-tree-id4384 . -30) (undo-tree-id4385 . -30) (undo-tree-id4386 . -30) (undo-tree-id4387 . -30) (undo-tree-id4388 . -216) (undo-tree-id4389 . -216) (undo-tree-id4390 . -216) (undo-tree-id4391 . -216) (undo-tree-id4392 . -216) (undo-tree-id4393 . -216) (undo-tree-id4394 . -216) (undo-tree-id4395 . -216) (undo-tree-id4396 . -216) (undo-tree-id4397 . -216) (undo-tree-id4398 . -216) (undo-tree-id4399 . -216) (undo-tree-id4400 . -216) (undo-tree-id4401 . -174) (undo-tree-id4402 . -89) (undo-tree-id4403 . -87) (undo-tree-id4404 . -70) (undo-tree-id4405 . -40) (undo-tree-id4406 . -39) (undo-tree-id4407 . -38) (undo-tree-id4408 . -36) (undo-tree-id4409 . -3) (undo-tree-id4410 . -2) (undo-tree-id4411 . -216) (undo-tree-id4412 . -216) (undo-tree-id4413 . -216)) nil (25944 31509 81027 0) 0 nil])
([nil nil ((1541 . 1542)) ((#(";" 0 1 (fontified t)) . 1541) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1)) (25944 31502 907212 0) 0 nil])
([nil nil ((#("	    <canvas id=\"canvas\" width=\"300\" height=\"300\"></canvas>
" 0 5 (fontified t) 5 6 (fontified t syntax-table (1)) 6 16 (fontified t) 16 24 (face font-lock-string-face fontified t) 24 31 (fontified t) 31 36 (face font-lock-string-face fontified t) 36 44 (fontified t) 44 49 (face font-lock-string-face fontified t) 49 50 (fontified t syntax-table (1)) 50 51 (fontified t syntax-table (1)) 51 58 (fontified t) 58 59 (fontified t syntax-table (1)) 59 60 (fontified t rear-nonsticky t)) . -1464) (undo-tree-id4414 . -18) (undo-tree-id4415 . -35) (undo-tree-id4416 . -18) (undo-tree-id4417 . -18) (undo-tree-id4418 . -18) (undo-tree-id4419 . -60) (undo-tree-id4420 . -60) (undo-tree-id4421 . -18) (undo-tree-id4422 . -18) (undo-tree-id4423 . -18) (undo-tree-id4424 . -18) (undo-tree-id4425 . -18) (undo-tree-id4426 . -18) (undo-tree-id4427 . -18) (undo-tree-id4428 . -18) (undo-tree-id4429 . -18) (undo-tree-id4430 . -18) (undo-tree-id4431 . -18) (undo-tree-id4432 . -18) (undo-tree-id4433 . -18) (undo-tree-id4434 . -18) (undo-tree-id4435 . -18) (undo-tree-id4436 . -18) (undo-tree-id4437 . -55) (undo-tree-id4438 . -55) (undo-tree-id4439 . -55) (undo-tree-id4440 . -55) (undo-tree-id4441 . -55) (undo-tree-id4442 . -55) (undo-tree-id4443 . -52) (undo-tree-id4444 . -58) (undo-tree-id4445 . -58) (undo-tree-id4446 . -52) (undo-tree-id4447 . -52) (undo-tree-id4448 . -58) (undo-tree-id4449 . -58) (undo-tree-id4450 . -60) (undo-tree-id4451 . -60) (undo-tree-id4452 . -52) (undo-tree-id4453 . -60) (undo-tree-id4454 . -60) (undo-tree-id4455 . -60) (undo-tree-id4456 . -60) (undo-tree-id4457 . -60) (undo-tree-id4458 . -60) (undo-tree-id4459 . -60) 1524 (t 25944 31509 94778 643000)) nil (25944 32299 56636 0) 0 nil])
([nil nil ((1541 . 1542) (t 25944 30846 657180 264000)) ((#("," 0 1 (fontified t)) . 1541) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1)) (25944 31502 580264 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1545 . 1546) (nil fontified nil 1464 . 1546) (1464 . 1546)) nil (25944 32299 56577 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1541) (undo-tree-id3964 . -1) (undo-tree-id3966 . -1) (undo-tree-id3968 . -1) (undo-tree-id3970 . -1) (undo-tree-id3972 . -1) (undo-tree-id3974 . -1) 1542) ((1541 . 1542)) (25944 31502 261587 0) 0 nil])
([nil nil ((1464 . 1469) 1528) nil (25944 32299 56572 0) 0 nil])
([nil nil ((1541 . 1543)) ((#(".u" 0 1 (fontified t) 1 2 (fontified t)) . 1541) (undo-tree-id4079 . -2) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -2) (undo-tree-id4085 . -2) (undo-tree-id4086 . -2)) (25944 31500 998580 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -1521) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) 1522 (t 25944 32299 71820 283000)) nil (25944 32318 634461 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1542 1550 #s(yas--snippet nil nil #s(yas--exit #<marker at 1245 in component.rs> nil) 15 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 1245 in component.rs> nil) 15 nil nil nil nil)) (1542 . 1550) (#("unwrap()$0" 0 10 (fontified nil)) . 1542) (1542 . 1552) (#("u" 0 1 (fontified nil)) . 1542) (1542 . 1543) (#("unwrap()" 0 8 (fontified nil)) . -1542) (1542 . 1550) (#("u" 0 1 (fontified t)) . -1542) (undo-tree-id3959 . -1) (undo-tree-id3961 . -1) (undo-tree-id3963 . -1) 1543) ((1542 . 1543) (#("unwrap()" 0 8 (fontified nil)) . 1542) (1542 . 1550) (#("u" 0 1 (fontified nil)) . 1542) (1542 . 1543) (#("unwrap()$0" 0 10 (fontified nil)) . 1542) (1542 . 1552) (#("unwrap()" 0 8 (fontified t)) . 1542) (undo-tree-id4075 . -8) (undo-tree-id4076 . -7) (undo-tree-id4077 . -6) (undo-tree-id4078 . -8) (t 25944 31456 605090 367000)) (25944 31455 612513 0) 0 nil])
([nil nil ((1521 . 1522)) nil (25944 32318 634428 0) 0 nil])
([nil nil ((#("	    <canvas id=\"canvas\" width=\"300\" height=\"300\"></canvas>
" 0 5 (fontified t) 5 6 (fontified t syntax-table (1)) 6 16 (fontified t) 16 24 (face font-lock-string-face fontified t) 24 31 (fontified t) 31 36 (face font-lock-string-face fontified t) 36 44 (fontified t) 44 49 (face font-lock-string-face fontified t) 49 50 (fontified t syntax-table (1)) 50 51 (fontified t syntax-table (1)) 51 58 (fontified t) 58 59 (fontified t syntax-table (1)) 59 60 (fontified t rear-nonsticky t)) . -1690) (undo-tree-id3976 . -12) (undo-tree-id3978 . -12) (undo-tree-id3980 . -12) (undo-tree-id3982 . -12) (undo-tree-id3984 . -12) (undo-tree-id3986 . -12) (undo-tree-id3988 . -12) (undo-tree-id3990 . -12) (undo-tree-id3992 . -12) (undo-tree-id3994 . -12) (undo-tree-id3996 . -12) (undo-tree-id3998 . -12) (undo-tree-id4000 . -12) (undo-tree-id4002 . -12) (undo-tree-id4004 . -12) (undo-tree-id4006 . -12) (undo-tree-id4008 . -12) (undo-tree-id4009 . -60) (undo-tree-id4010 . -60) (undo-tree-id4012 . -5) (undo-tree-id4014 . -5) (undo-tree-id4016 . -5) (undo-tree-id4018 . -5) (undo-tree-id4020 . -5) (undo-tree-id4022 . -5) (undo-tree-id4024 . -5) (undo-tree-id4026 . -5) (undo-tree-id4028 . -5) (undo-tree-id4030 . -5) (undo-tree-id4032 . -5) (undo-tree-id4034 . -5) (undo-tree-id4036 . -5) (undo-tree-id4038 . -5) (undo-tree-id4040 . -5) (undo-tree-id4042 . -5) (undo-tree-id4044 . -5) (undo-tree-id4046 . -31) (undo-tree-id4048 . -31) (undo-tree-id4050 . -31) (undo-tree-id4052 . -31) (undo-tree-id4054 . -31) (undo-tree-id4056 . -32) (undo-tree-id4058 . -23) (undo-tree-id4060 . -32) (undo-tree-id4062 . -60) (undo-tree-id4064 . -60) (undo-tree-id4066 . -60) (undo-tree-id4068 . -60) (undo-tree-id4070 . -60) (undo-tree-id4072 . -60) (undo-tree-id4074 . -60) 1750 (t 25944 30853 931617 833000)) ((1690 . 1750) (t 25944 31398 392960 124000)) (25944 31397 783201 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1521) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) 1522) nil (25944 32318 634426 0) 0 nil])
([nil nil ((apply -15 1325 1567 undo--wrap-and-run-primitive-undo 1325 1567 ((1536 . 1539) (1489 . 1492) (1406 . 1409) (1362 . 1365) (1329 . 1332) 1325))) ((apply 15 1325 1552 undo--wrap-and-run-primitive-undo 1325 1552 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1329) (#<marker at 1245 in component.rs> . -3) (#<marker at 1245 in component.rs> . -2) (#<marker at 1245 in component.rs> . -2) (#<marker at 1245 in component.rs> . -2) (#<marker at 1245 in component.rs> . -1) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1362) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1406) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1489) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1536) 1325))) (25944 31379 775245 0) 0 nil])
([nil nil ((1521 . 1522)) nil (25944 32318 635300 0) 0 nil])
nil
([nil nil ((#("000000;\"" 0 8 (face font-lock-string-face fontified t)) . -1541) (undo-tree-id4889 . -8) (undo-tree-id4890 . -8) (undo-tree-id4891 . -8) (undo-tree-id4892 . -8) (undo-tree-id4893 . -8) (undo-tree-id4894 . -8) (undo-tree-id4895 . -8) (undo-tree-id4896 . -8) (undo-tree-id4897 . -8) (undo-tree-id4898 . -8) (undo-tree-id4899 . -8) (undo-tree-id4900 . -8) 1549 (t 25944 32320 115135 405000)) nil (25944 32332 589617 0) 0 nil] [nil nil ((1516 . 1531) (#("event_vec" 0 9 (fontified nil)) . -1516) (1516 . 1525) (#("style=" 0 6 (fontified t)) . -1516) (undo-tree-id4460 . -6) (undo-tree-id4461 . -6) (undo-tree-id4462 . -5) (undo-tree-id4463 . -5) (undo-tree-id4464 . -5) (undo-tree-id4465 . -5) (undo-tree-id4466 . -5) (undo-tree-id4467 . -5) (undo-tree-id4468 . -5) (undo-tree-id4469 . -5) (undo-tree-id4470 . -5) (undo-tree-id4471 . -5) (undo-tree-id4472 . -5) (undo-tree-id4473 . -5) (undo-tree-id4474 . -5) (undo-tree-id4475 . -5) (undo-tree-id4476 . -5) (undo-tree-id4477 . -5) (undo-tree-id4478 . -5) (undo-tree-id4479 . -5) (undo-tree-id4480 . -5) (undo-tree-id4481 . -5) (undo-tree-id4482 . -5) (undo-tree-id4483 . -5) (undo-tree-id4484 . -5) (undo-tree-id4485 . -5) (undo-tree-id4486 . -5) (undo-tree-id4487 . -5) (undo-tree-id4488 . -5) (undo-tree-id4489 . -5) (undo-tree-id4490 . -5) (undo-tree-id4491 . -5) (undo-tree-id4492 . -5) (undo-tree-id4493 . -5) (undo-tree-id4494 . -5) (undo-tree-id4495 . -5) (undo-tree-id4496 . -5) (undo-tree-id4497 . -5) (undo-tree-id4498 . -5) (undo-tree-id4499 . -5) (undo-tree-id4500 . -5) (undo-tree-id4501 . -5) (undo-tree-id4502 . -5) (undo-tree-id4503 . -5) (undo-tree-id4504 . -5) (undo-tree-id4505 . -5) (undo-tree-id4506 . -5) (undo-tree-id4507 . -5) (undo-tree-id4508 . -5) (undo-tree-id4509 . -5) (undo-tree-id4510 . -5) (undo-tree-id4511 . -5) (undo-tree-id4512 . -5) (undo-tree-id4513 . -5) (undo-tree-id4514 . -5) (undo-tree-id4515 . -6) (undo-tree-id4516 . -6) (undo-tree-id4517 . -6) (undo-tree-id4518 . -6) (undo-tree-id4519 . -6) (undo-tree-id4520 . -6) 1522) ((1516 . 1522) (#("event_vec" 0 9 (fontified nil)) . 1516) (1516 . 1525) (#("style=event_vec" 0 6 (fontified t) 6 15 (fontified t)) . 1516) (undo-tree-id4566 . -15) (undo-tree-id4567 . -15)) (25944 32318 634408 0) 0 nil])
([nil nil ((#("solid #" 0 7 (face font-lock-string-face fontified t)) . -1534) (undo-tree-id4870 . -7) (undo-tree-id4871 . -7) (undo-tree-id4872 . -7) (undo-tree-id4873 . -7) (undo-tree-id4874 . -7) (undo-tree-id4875 . -7) (undo-tree-id4876 . -7) (undo-tree-id4877 . -7) (undo-tree-id4878 . -7) (undo-tree-id4879 . -7) (undo-tree-id4880 . -7) (undo-tree-id4881 . -7) (undo-tree-id4882 . -7) (undo-tree-id4883 . -7) (undo-tree-id4884 . -7) (undo-tree-id4885 . -7) (undo-tree-id4886 . -7) (undo-tree-id4887 . -7) (undo-tree-id4888 . -7) 1541) nil (25944 32332 589603 0) 0 nil])
nil
([nil nil ((#("1px " 0 4 (face font-lock-string-face fontified t)) . -1530) (undo-tree-id4847 . -4) (undo-tree-id4848 . -4) (undo-tree-id4849 . -3) (undo-tree-id4850 . -4) (undo-tree-id4851 . -4) (undo-tree-id4852 . -4) (undo-tree-id4853 . -4) (undo-tree-id4854 . -4) (undo-tree-id4855 . -4) (undo-tree-id4856 . -4) (undo-tree-id4857 . -4) (undo-tree-id4858 . -4) (undo-tree-id4859 . -4) (undo-tree-id4860 . -4) (undo-tree-id4861 . -4) (undo-tree-id4862 . -4) (undo-tree-id4863 . -4) (undo-tree-id4864 . -4) (undo-tree-id4865 . -4) (undo-tree-id4866 . -4) (undo-tree-id4867 . -4) (undo-tree-id4868 . -4) (undo-tree-id4869 . -4) 1534) nil (25944 32332 589583 0) 0 nil])
([nil nil ((#("border:" 0 7 (face font-lock-string-face fontified t)) . -1523) (undo-tree-id4821 . -7) (undo-tree-id4822 . -7) (undo-tree-id4823 . -7) (undo-tree-id4824 . -7) (undo-tree-id4825 . -7) (undo-tree-id4826 . -7) (undo-tree-id4827 . -7) (undo-tree-id4828 . -7) (undo-tree-id4829 . -7) (undo-tree-id4830 . -7) (undo-tree-id4831 . -7) (undo-tree-id4832 . -7) (undo-tree-id4833 . -7) (undo-tree-id4834 . -7) (undo-tree-id4835 . -7) (undo-tree-id4836 . -7) (undo-tree-id4837 . -7) (undo-tree-id4838 . -7) (undo-tree-id4839 . -7) (undo-tree-id4840 . -7) (undo-tree-id4841 . -7) (undo-tree-id4842 . -7) (undo-tree-id4843 . -7) (undo-tree-id4844 . -7) (undo-tree-id4845 . -7) (undo-tree-id4846 . -7) 1530) nil (25944 32332 589559 0) 0 nil])
([nil nil ((#("style=\"" 0 6 (fontified t) 6 7 (face font-lock-string-face fontified t)) . -1516) (undo-tree-id4699 . -7) (undo-tree-id4700 . -7) (undo-tree-id4701 . -7) (undo-tree-id4702 . -5) (undo-tree-id4703 . -5) (undo-tree-id4704 . -5) (undo-tree-id4705 . -5) (undo-tree-id4706 . -5) (undo-tree-id4707 . -5) (undo-tree-id4708 . -5) (undo-tree-id4709 . -5) (undo-tree-id4710 . -5) (undo-tree-id4711 . -5) (undo-tree-id4712 . -5) (undo-tree-id4713 . -5) (undo-tree-id4714 . -5) (undo-tree-id4715 . -5) (undo-tree-id4716 . -5) (undo-tree-id4717 . -5) (undo-tree-id4718 . -5) (undo-tree-id4719 . -5) (undo-tree-id4720 . -5) (undo-tree-id4721 . -5) (undo-tree-id4722 . -5) (undo-tree-id4723 . -5) (undo-tree-id4724 . -5) (undo-tree-id4725 . -5) (undo-tree-id4726 . -5) (undo-tree-id4727 . -5) (undo-tree-id4728 . -5) (undo-tree-id4729 . -5) (undo-tree-id4730 . -5) (undo-tree-id4731 . -5) (undo-tree-id4732 . -5) (undo-tree-id4733 . -5) (undo-tree-id4734 . -5) (undo-tree-id4735 . -5) (undo-tree-id4736 . -5) (undo-tree-id4737 . -5) (undo-tree-id4738 . -5) (undo-tree-id4739 . -5) (undo-tree-id4740 . -5) (undo-tree-id4741 . -5) (undo-tree-id4742 . -5) (undo-tree-id4743 . -5) (undo-tree-id4744 . -5) (undo-tree-id4745 . -5) (undo-tree-id4746 . -5) (undo-tree-id4747 . -5) (undo-tree-id4748 . -5) (undo-tree-id4749 . -5) (undo-tree-id4750 . -5) (undo-tree-id4751 . -5) (undo-tree-id4752 . -5) (undo-tree-id4753 . -5) (undo-tree-id4754 . -6) (undo-tree-id4755 . -6) (undo-tree-id4756 . -6) (undo-tree-id4757 . -6) (undo-tree-id4758 . -6) (undo-tree-id4759 . -6) (undo-tree-id4760 . -6) (undo-tree-id4761 . -6) (undo-tree-id4762 . -6) (undo-tree-id4763 . -6) (undo-tree-id4764 . -6) (undo-tree-id4765 . -6) (undo-tree-id4766 . -6) (undo-tree-id4767 . -6) (undo-tree-id4768 . -6) (undo-tree-id4769 . -6) (undo-tree-id4770 . -6) (undo-tree-id4771 . -6) (undo-tree-id4772 . -6) (undo-tree-id4773 . -6) (undo-tree-id4774 . -6) (undo-tree-id4775 . -6) (undo-tree-id4776 . -6) (undo-tree-id4777 . -6) (undo-tree-id4778 . -6) (undo-tree-id4779 . -6) (undo-tree-id4780 . -6) (undo-tree-id4781 . -6) (undo-tree-id4782 . -6) (undo-tree-id4783 . -6) (undo-tree-id4784 . -6) (undo-tree-id4785 . -6) (undo-tree-id4786 . -6) (undo-tree-id4787 . -6) (undo-tree-id4788 . -6) (undo-tree-id4789 . -6) (undo-tree-id4790 . -6) (undo-tree-id4791 . -6) (undo-tree-id4792 . -6) (undo-tree-id4793 . -6) (undo-tree-id4794 . -6) (undo-tree-id4795 . -7) (undo-tree-id4796 . -7) (undo-tree-id4797 . -7) (undo-tree-id4798 . -7) (undo-tree-id4799 . -7) (undo-tree-id4800 . -7) (undo-tree-id4801 . -7) (undo-tree-id4802 . -7) (undo-tree-id4803 . -7) (undo-tree-id4804 . -7) (undo-tree-id4805 . -7) (undo-tree-id4806 . -7) (undo-tree-id4807 . -7) (undo-tree-id4808 . -7) (undo-tree-id4809 . -7) (undo-tree-id4810 . -7) (undo-tree-id4811 . -7) (undo-tree-id4812 . -7) (undo-tree-id4813 . -7) (undo-tree-id4814 . -7) (undo-tree-id4815 . -7) (undo-tree-id4816 . -7) (undo-tree-id4817 . -7) (undo-tree-id4818 . -7) (undo-tree-id4819 . -7) (undo-tree-id4820 . -7) 1523) nil (25944 32332 589528 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1515) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) 1516) nil (25944 32332 589402 0) 0 nil])
([nil nil ((1515 . 1516) (t 25944 32332 606166 804000)) nil (25944 32334 287994 0) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-string-face fontified t)) . -1481) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (#("y" 0 1 (face font-lock-string-face fontified t)) . -1482) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (#("C" 0 1 (face font-lock-string-face fontified t)) . -1483) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) 1484 (t 25944 32334 302389 299000)) nil (25944 32375 727725 0) 0 nil])
([nil nil ((1481 . 1482)) nil (25944 32375 727656 0) 0 nil])
([nil nil ((1325 . 1329) (t 25944 32375 743329 796000)) nil (25944 32385 445162 0) 0 nil])
([nil nil ((1329 . 1332)) nil (25944 32385 445161 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1327) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (#(" " 0 1 (fontified t)) . -1328) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (#("u" 0 1 (fontified t)) . -1329) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (#("s" 0 1 (fontified t)) . -1330) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -1331) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) 1332) nil (25944 32385 445156 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1325) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (#(" " 0 1 (fontified t)) . -1326) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) 1327) nil (25944 32385 445090 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1356 . 1357) (nil fontified nil 1325 . 1357) (1325 . 1357) (t 25944 32385 460017 142000)) nil (25944 32590 764453 0) 0 nil])
([nil nil ((1325 . 1329)) nil (25944 32590 764451 0) 0 nil])
([nil nil ((1360 . 1365)) nil (25944 32590 764450 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1425 . 1426) (nil fontified nil 1365 . 1426) (1365 . 1426)) nil (25944 32590 764448 0) 0 nil])
([nil nil ((1391 . 1395) 1426) nil (25944 32590 764443 0) 0 nil])
([nil nil ((1432 . 1436) (#("    " 0 4 (fontified nil)) . 1431) (undo-tree-id5087 . -4) (1430 . 1436) (t 25944 32590 779992 950000)) nil (25944 32850 735530 0) 0 nil])
([nil nil ((1436 . 1442)) nil (25944 32850 735527 0) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -1440) (undo-tree-id5085 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -1441) (undo-tree-id5086 . -1) 1442) nil (25944 32850 735526 0) 0 nil])
([nil nil ((1440 . 1450)) nil (25944 32850 735522 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -1449) (undo-tree-id5084 . -1) 1450) nil (25944 32850 735521 0) 0 nil])
([nil nil ((1449 . 1461)) nil (25944 32850 735519 0) 0 nil])
([nil nil ((1461 . 1462)) nil (25944 32850 735518 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1453 1470 #s(yas--snippet nil nil #s(yas--exit 1470 nil) 16 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1470 nil) 16 nil nil nil nil)) (1453 . 1470) (#("create_node_ref()$0" 0 19 (fontified nil)) . 1453) (1453 . 1472) (#("create_no" 0 9 (fontified nil)) . 1453) (1453 . 1462) (#("create_node_ref()" 0 17 (fontified nil)) . -1453) (1453 . 1470) (#("create_no" 0 9 (fontified t)) . -1453) (undo-tree-id5062 . -9) (undo-tree-id5063 . -1) (undo-tree-id5064 . -2) (undo-tree-id5065 . -2) (undo-tree-id5066 . -3) (undo-tree-id5067 . -3) (undo-tree-id5068 . -4) (undo-tree-id5069 . -4) (undo-tree-id5070 . -5) (undo-tree-id5071 . -5) (undo-tree-id5072 . -6) (undo-tree-id5073 . -6) (undo-tree-id5074 . -6) (undo-tree-id5075 . -6) (undo-tree-id5076 . -7) (undo-tree-id5077 . -7) (undo-tree-id5078 . -8) (undo-tree-id5079 . -8) (undo-tree-id5080 . -9) (undo-tree-id5081 . -9) (undo-tree-id5082 . -9) (undo-tree-id5083 . -9) 1462) nil (25944 32850 735516 0) 0 nil])
([nil nil ((1468 . 1472)) nil (25944 32850 735491 0) 0 nil])
([nil nil ((1471 . 1474)) nil (25944 32850 735490 0) 0 nil])
([nil nil ((1471 . 1488) (#("Htm" 0 3 (fontified nil)) . 1471) (1471 . 1474) (#("HtmlCanvasElement" 0 17 (fontified nil)) . -1471) (1471 . 1488) (#("Htm" 0 3 (face font-lock-type-face fontified t)) . -1471) (undo-tree-id5052 . -3) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -2) (undo-tree-id5057 . -2) (undo-tree-id5058 . -3) (undo-tree-id5059 . -3) (undo-tree-id5060 . -3) (undo-tree-id5061 . -3) 1474) nil (25944 32850 735487 0) 0 nil])
([nil nil ((1491 . 1492)) nil (25944 32850 735465 0) 0 nil])
([nil nil ((#("HtmlCanvasElement" 0 17 (face font-lock-type-face fontified t)) . -1471) (undo-tree-id5111 . -17) 1488 (t 25944 32850 751383 396000)) nil (25944 33041 98119 0) 0 nil])
([nil nil ((1471 . 1476)) nil (25944 33041 98117 0) 0 nil])
([nil nil ((#("C" 0 1 (face font-lock-type-face fontified t)) . -1471) (undo-tree-id5106 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -1472) (undo-tree-id5107 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -1473) (undo-tree-id5108 . -1) (#("v" 0 1 (face font-lock-type-face fontified t)) . -1474) (undo-tree-id5109 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -1475) (undo-tree-id5110 . -1) 1476) nil (25944 33041 98115 0) 0 nil])
([nil nil ((1471 . 1474)) nil (25944 33041 98108 0) 0 nil])
([nil nil ((1471 . 1475) (#("htm" 0 3 (fontified nil)) . 1471) (1471 . 1474) (#("html" 0 4 (fontified nil)) . -1471) (1471 . 1475) (#("htm" 0 3 (fontified t)) . -1471) (undo-tree-id5100 . -3) (undo-tree-id5101 . -2) (undo-tree-id5102 . -3) (undo-tree-id5103 . -3) (undo-tree-id5104 . -3) (undo-tree-id5105 . -3) 1474) nil (25944 33041 98106 0) 0 nil])
([nil nil ((1475 . 1478)) nil (25944 33041 98098 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1477) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) 1478) nil (25944 33041 98097 0) 0 nil])
([nil nil ((1477 . 1480)) nil (25944 33041 98092 0) 0 nil])
([nil nil ((1477 . 1483) (#("Can" 0 3 (fontified nil)) . 1477) (1477 . 1480) (#("Canvas" 0 6 (fontified nil)) . -1477) (1477 . 1483) (#("Can" 0 3 (face font-lock-type-face fontified t)) . -1477) (undo-tree-id5088 . -3) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -2) (undo-tree-id5092 . -2) (undo-tree-id5093 . -3) (undo-tree-id5094 . -3) (undo-tree-id5095 . -3) (undo-tree-id5096 . -3) 1480) nil (25944 33041 98088 0) 0 nil])
([nil nil ((1651 . 1652) (t 25944 33041 113265 716000)) nil (25944 33178 664640 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1640) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (#("d" 0 1 (fontified t)) . -1641) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (#("=" 0 1 (fontified t)) . -1642) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -1643) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -1644) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -1645) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -1646) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -1647) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (undo-tree-id5707 . -1) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (undo-tree-id5714 . -1) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -1648) (undo-tree-id5723 . -1) (undo-tree-id5724 . -1) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1) (undo-tree-id5756 . -1) (undo-tree-id5757 . -1) (undo-tree-id5758 . -1) (undo-tree-id5759 . -1) (undo-tree-id5760 . -1) (undo-tree-id5761 . -1) (undo-tree-id5762 . -1) (undo-tree-id5763 . -1) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (undo-tree-id5766 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -1649) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5782 . -1) (undo-tree-id5783 . -1) (undo-tree-id5784 . -1) (undo-tree-id5785 . -1) (undo-tree-id5786 . -1) (undo-tree-id5787 . -1) (undo-tree-id5788 . -1) (undo-tree-id5789 . -1) (undo-tree-id5790 . -1) (undo-tree-id5791 . -1) (undo-tree-id5792 . -1) (undo-tree-id5793 . -1) (undo-tree-id5794 . -1) (undo-tree-id5795 . -1) (undo-tree-id5796 . -1) (undo-tree-id5797 . -1) (undo-tree-id5798 . -1) (undo-tree-id5799 . -1) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -1) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -1650) (undo-tree-id5808 . -1) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) (undo-tree-id5813 . -1) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (undo-tree-id5816 . -1) (undo-tree-id5817 . -1) (undo-tree-id5818 . -1) (undo-tree-id5819 . -1) (undo-tree-id5820 . -1) (undo-tree-id5821 . -1) (undo-tree-id5822 . -1) (undo-tree-id5823 . -1) (undo-tree-id5824 . -1) (undo-tree-id5825 . -1) (undo-tree-id5826 . -1) (undo-tree-id5827 . -1) (undo-tree-id5828 . -1) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) (#("\\" 0 1 (fontified t)) . -1651) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) (undo-tree-id5850 . -1) (undo-tree-id5851 . -1) (undo-tree-id5852 . -1) (undo-tree-id5853 . -1) (undo-tree-id5854 . -1) (undo-tree-id5855 . -1) (undo-tree-id5856 . -1) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (undo-tree-id5859 . -1) (#(" " 0 1 (fontified t)) . -1652) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) (undo-tree-id5868 . -1) (undo-tree-id5869 . -1) (undo-tree-id5870 . -1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (#("w" 0 1 (fontified t)) . -1653) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) 1654) nil (25944 33178 664610 0) 0 nil])
([nil nil ((1640 . 1641)) nil (25944 33178 663995 0) 0 nil])
([nil nil ((1664 . 1668)) nil (25944 33178 663994 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -1667) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) 1668) nil (25944 33178 663993 0) 0 nil])
([nil nil ((1667 . 1668)) nil (25944 33178 663990 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1665) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (#("e" 0 1 (fontified t)) . -1666) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -1667) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) 1668) nil (25944 33178 663986 0) 0 nil])
([nil nil ((1665 . 1667)) nil (25944 33178 663933 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1666) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) 1667) nil (25944 33178 663932 0) 0 nil])
([nil nil ((1666 . 1668)) nil (25944 33178 663924 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1666) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (#("r" 0 1 (fontified t)) . -1667) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) 1668) nil (25944 33178 663923 0) 0 nil])
([nil nil ((1666 . 1669)) nil (25944 33178 663916 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -1668) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) 1669) nil (25944 33178 663914 0) 0 nil])
([nil nil ((1668 . 1672)) nil (25944 33178 663911 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1669) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (#("=" 0 1 (fontified t)) . -1670) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (#(" " 0 1 (fontified t)) . -1671) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) 1672) nil (25944 33178 663908 0) 0 nil])
([nil nil ((1669 . 1670)) nil (25944 33178 663877 0) 0 nil])
([nil nil ((1665 . 1680) (#("canvas_ref" 0 10 (fontified nil)) . -1665) (1665 . 1675) (#("_ref=" 0 5 (fontified t)) . -1665) (undo-tree-id5112 . -5) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -2) (undo-tree-id5125 . -3) (undo-tree-id5126 . -3) (undo-tree-id5127 . -3) (undo-tree-id5128 . -4) (undo-tree-id5129 . -4) (undo-tree-id5130 . -4) (undo-tree-id5131 . -4) (undo-tree-id5132 . -4) (undo-tree-id5133 . -4) (undo-tree-id5134 . -4) (undo-tree-id5135 . -4) (undo-tree-id5136 . -4) (undo-tree-id5137 . -4) (undo-tree-id5138 . -4) (undo-tree-id5139 . -4) (undo-tree-id5140 . -4) (undo-tree-id5141 . -4) (undo-tree-id5142 . -4) (undo-tree-id5143 . -4) (undo-tree-id5144 . -4) (undo-tree-id5145 . -4) (undo-tree-id5146 . -4) (undo-tree-id5147 . -4) (undo-tree-id5148 . -4) (undo-tree-id5149 . -4) (undo-tree-id5150 . -4) (undo-tree-id5151 . -4) (undo-tree-id5152 . -4) (undo-tree-id5153 . -4) (undo-tree-id5154 . -5) (undo-tree-id5155 . -5) (undo-tree-id5156 . -5) 1670) nil (25944 33178 663871 0) 0 nil])
([nil nil ((1488 . 1492) (t 25944 33178 681056 139000)) nil (25944 33381 202587 0) 0 nil])
([nil nil ((1492 . 1493)) nil (25944 33381 202586 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1492) (undo-tree-id5950 . -1) 1493) nil (25944 33381 202585 0) 0 nil])
([nil nil ((1492 . 1506)) nil (25944 33381 202583 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1505) (undo-tree-id5949 . -1) 1506) nil (25944 33381 202581 0) 0 nil])
([nil nil ((1505 . 1508)) nil (25944 33381 202579 0) 0 nil])
([nil nil ((1505 . 1515) (#("can" 0 3 (fontified nil)) . 1505) (1505 . 1508) (#("canvas_ref" 0 10 (fontified nil)) . -1505) (1505 . 1515) (#("can" 0 3 (fontified t)) . -1505) (undo-tree-id5948 . -3) 1508) nil (25944 33381 202578 0) 0 nil])
([nil nil ((1515 . 1518)) nil (25944 33381 202574 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1516) (undo-tree-id5946 . -1) (#("a" 0 1 (fontified t)) . -1517) (undo-tree-id5947 . -1) 1518) nil (25944 33381 202572 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1516 1521 #s(yas--snippet nil nil #s(yas--exit 1521 nil) 17 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1521 nil) 17 nil nil nil nil)) (1516 . 1521) (#("get()$0" 0 7 (fontified nil)) . 1516) (1516 . 1523) (#("get()" 0 5 (fontified nil)) . -1516) (1516 . 1521)) nil (25944 33381 202569 0) 0 nil])
([nil nil ((1521 . 1522)) nil (25944 33381 202566 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1521) (undo-tree-id5945 . -1) 1522) nil (25944 33381 202565 0) 0 nil])
([nil nil ((1521 . 1524)) nil (25944 33381 202563 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1521) (undo-tree-id5942 . -1) (#("a" 0 1 (fontified t)) . -1522) (undo-tree-id5943 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -1523) (undo-tree-id5944 . -1) 1524) nil (25944 33381 202561 0) 0 nil])
([nil nil ((#("    let canvas = canvas_ref.get()" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 14 (face font-lock-variable-name-face fontified t) 14 17 (fontified t) 17 28 (fontified t) 28 33 (fontified t)) . 1488)) nil (25944 33381 202556 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1488)) nil (25944 33381 202555 0) 0 nil])
([nil nil ((1490 . 1494) (#("    " 0 4 (fontified nil)) . 1489) (undo-tree-id5941 . -4) (1493 . 1494) (#("    " 0 4 (fontified nil)) . 1488) (1488 . 1492) (1488 . 1489)) nil (25944 33381 202554 0) 0 nil])
([nil nil ((1489 . 1493)) nil (25944 33381 202551 0) 0 nil])
([nil nil ((1488 . 1492)) nil (25944 33381 202550 0) 0 nil])
([nil nil ((1492 . 1500)) nil (25944 33381 202549 0) 0 nil])
([nil nil ((#("k" 0 1 (face font-lock-variable-name-face fontified t)) . -1497) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -1498) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1499) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) 1500) nil (25944 33381 202547 0) 0 nil])
([nil nil ((1497 . 1506)) nil (25944 33381 202526 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1503) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (#("=" 0 1 (fontified t)) . -1504) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (#(" " 0 1 (fontified t)) . -1505) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) 1506) nil (25944 33381 202524 0) 0 nil])
([nil nil ((1503 . 1504)) nil (25944 33381 202507 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1503) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) 1504) nil (25944 33381 202505 0) 0 nil])
([nil nil ((1503 . 1507)) nil (25944 33381 202502 0) 0 nil])
([nil nil ((#("H" 0 1 (face font-lock-type-face fontified t)) . -1506) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) 1507) nil (25944 33381 202501 0) 0 nil])
([nil nil ((1506 . 1508)) nil (25944 33381 202498 0) 0 nil])
([nil nil ((1505 . 1522) (#("Htm" 0 3 (fontified nil)) . 1505) (1505 . 1508) (#("HtmlCanvasElement" 0 17 (fontified nil)) . -1505) (1505 . 1522) (#("Htm" 0 3 (face font-lock-type-face fontified t)) . -1505) (undo-tree-id5895 . -3) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -2) (undo-tree-id5900 . -3) (undo-tree-id5901 . -3) 1508) nil (25944 33381 202496 0) 0 nil])
([nil nil ((1522 . 1525)) nil (25944 33381 202486 0) 0 nil])
([nil nil ((1525 . 1527)) nil (25944 33381 202485 0) 0 nil])
([nil nil ((1525 . 1535) (#("ca" 0 2 (fontified nil)) . 1525) (1525 . 1527) (#("canvas_ref" 0 10 (fontified nil)) . -1525) (1525 . 1535) (#("ca" 0 2 (fontified t)) . -1525) (undo-tree-id5889 . -2) (undo-tree-id5890 . -1) (undo-tree-id5891 . -2) (undo-tree-id5892 . -2) (undo-tree-id5893 . -2) (undo-tree-id5894 . -2) 1527) nil (25944 33381 202484 0) 0 nil])
([nil nil ((1535 . 1536)) nil (25944 33381 202475 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1535) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) 1536) nil (25944 33381 202474 0) 0 nil])
([nil nil ((1535 . 1536)) nil (25944 33381 202471 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1535) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) 1536) nil (25944 33381 202470 0) 0 nil])
([nil nil ((1535 . 1537)) nil (25944 33381 202466 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1536 1541 #s(yas--snippet nil nil #s(yas--exit 1541 nil) 18 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1541 nil) 18 nil nil nil nil)) (1536 . 1541) (#("get()$0" 0 7 (fontified nil)) . 1536) (1536 . 1543) (#("g" 0 1 (fontified nil)) . 1536) (1536 . 1537) (#("get()" 0 5 (fontified nil)) . -1536) (1536 . 1541) (#("g" 0 1 (fontified t)) . -1536) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) 1537) nil (25944 33381 202464 0) 0 nil])
([nil nil ((1541 . 1542)) nil (25944 33381 202441 0) 0 nil])
([nil nil ((1541 . 1542) (t 25944 33381 219255 236000)) nil (25944 33409 655222 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1541) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) 1542) nil (25944 33409 655219 0) 0 nil])
([nil nil ((1541 . 1542)) nil (25944 33409 655209 0) 0 nil])
([nil nil ((1542 . 1543)) nil (25944 33409 655208 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1541) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (#("0" 0 1 (fontified t)) . -1542) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) 1543) nil (25944 33409 655206 0) 0 nil])
([nil nil ((1541 . 1543)) nil (25944 33409 655173 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1542 1550 #s(yas--snippet nil nil #s(yas--exit 1550 nil) 19 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1550 nil) 19 nil nil nil nil)) (1542 . 1550) (#("unwrap()$0" 0 10 (fontified nil)) . 1542) (1542 . 1552) (#("u" 0 1 (fontified nil)) . 1542) (1542 . 1543) (#("unwrap()" 0 8 (fontified nil)) . -1542) (1542 . 1550) (#("u" 0 1 (fontified t)) . -1542) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) 1543) nil (25944 33409 655170 0) 0 nil])
([nil nil ((1550 . 1551)) nil (25944 33409 655160 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1550) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) 1551) nil (25944 33409 655159 0) 0 nil])
([nil nil ((1550 . 1552)) nil (25944 33409 655152 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1549) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (#("." 0 1 (fontified t)) . -1550) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (#("0" 0 1 (fontified t)) . -1551) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) 1552) nil (25944 33409 655148 0) 0 nil])
([nil nil ((#("unwrap(" 0 7 (fontified t)) . -1542) (undo-tree-id5999 . -7) (undo-tree-id6000 . -7) (undo-tree-id6001 . -7) (undo-tree-id6002 . -7) (undo-tree-id6003 . -7) (undo-tree-id6004 . -7) (undo-tree-id6005 . -7) (undo-tree-id6006 . -7) (undo-tree-id6007 . -7) (undo-tree-id6008 . -7) (undo-tree-id6009 . -7) (undo-tree-id6010 . -7) (undo-tree-id6011 . -7) (undo-tree-id6012 . -7) (undo-tree-id6013 . -7) (undo-tree-id6014 . -7) (undo-tree-id6015 . -7) (undo-tree-id6016 . -7) (undo-tree-id6017 . -7) (undo-tree-id6018 . -7) (undo-tree-id6019 . -7) (undo-tree-id6020 . -7) (undo-tree-id6021 . -7) (undo-tree-id6022 . -7) (undo-tree-id6023 . -7) (undo-tree-id6024 . -7) (undo-tree-id6025 . -7) (undo-tree-id6026 . -7) (undo-tree-id6027 . -7) (undo-tree-id6028 . -7) (undo-tree-id6029 . -7) (undo-tree-id6030 . -7) (undo-tree-id6031 . -7) (undo-tree-id6032 . -7) (undo-tree-id6033 . -7) (undo-tree-id6034 . -7) 1549) nil (25944 33409 655093 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1541) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) 1542) nil (25944 33409 655053 0) 0 nil])
([nil nil ((1541 . 1544) (t 25944 33409 673177 525000)) nil (25944 33475 236414 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1541) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (#("d" 0 1 (fontified t)) . -1542) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (#("e" 0 1 (fontified t)) . -1543) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) 1544) nil (25944 33475 236412 0) 0 nil])
([nil nil ((1541 . 1543)) nil (25944 33475 236381 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1541) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (#("s" 0 1 (fontified t)) . -1542) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) 1543) nil (25944 33475 236379 0) 0 nil])
([nil nil ((1541 . 1544)) nil (25944 33475 236358 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1542 1552 #s(yas--snippet nil nil #s(yas--exit 1552 nil) 20 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1552 nil) 20 nil nil nil nil)) (1542 . 1552) (#("as_deref()$0" 0 12 (fontified nil)) . 1542) (1542 . 1554) (#("de" 0 2 (fontified nil)) . 1542) (1542 . 1544) (#("as_deref()" 0 10 (fontified nil)) . -1542) (1542 . 1552) (#("de" 0 2 (fontified t)) . -1542) (undo-tree-id6138 . -2) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -2) (undo-tree-id6142 . -2) (undo-tree-id6143 . -2) (undo-tree-id6144 . -2) 1544) nil (25944 33475 236354 0) 0 nil])
([nil nil ((1552 . 1554) (t 25944 33475 254059 519000)) nil (25944 33482 35506 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1553 1561 #s(yas--snippet nil nil #s(yas--exit 1561 nil) 21 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1561 nil) 21 nil nil nil nil)) (1553 . 1561) (#("unwrap()$0" 0 10 (fontified nil)) . 1553) (1553 . 1563) (#("u" 0 1 (fontified nil)) . 1553) (1553 . 1554) (#("unwrap()" 0 8 (fontified nil)) . -1553) (1553 . 1561) (#("u" 0 1 (fontified t)) . -1553) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) 1554) nil (25944 33482 35501 0) 0 nil])
([nil nil ((#("unwrap()" 0 8 (fontified t)) . -1553) (undo-tree-id6466 . -8) (undo-tree-id6467 . -8) (undo-tree-id6468 . -8) (undo-tree-id6469 . -8) (undo-tree-id6470 . -8) (undo-tree-id6471 . -8) (undo-tree-id6472 . -8) (undo-tree-id6473 . -8) (undo-tree-id6474 . -8) (undo-tree-id6475 . -8) (undo-tree-id6476 . -8) (undo-tree-id6477 . -8) (undo-tree-id6478 . -8) (undo-tree-id6479 . -8) (undo-tree-id6480 . -8) (undo-tree-id6481 . -8) (undo-tree-id6482 . -8) (undo-tree-id6483 . -8) (undo-tree-id6484 . -8) (undo-tree-id6485 . -8) (undo-tree-id6486 . -8) (undo-tree-id6487 . -8) (undo-tree-id6488 . -8) (undo-tree-id6489 . -8) (undo-tree-id6490 . -8) (undo-tree-id6491 . -8) (undo-tree-id6492 . -8) (undo-tree-id6493 . -8) (undo-tree-id6494 . -8) (undo-tree-id6495 . -8) (undo-tree-id6496 . -8) (undo-tree-id6497 . -8) (undo-tree-id6498 . -8) (undo-tree-id6499 . -8) (undo-tree-id6500 . -8) (undo-tree-id6501 . -8) (undo-tree-id6502 . -8) (undo-tree-id6503 . -8) (undo-tree-id6504 . -8) (undo-tree-id6505 . -8) (undo-tree-id6506 . -8) 1561 (t 25944 33482 52637 217000)) nil (25944 33496 236683 0) 0 nil])
([nil nil ((#("deref()." 0 8 (fontified t)) . -1545) (undo-tree-id6412 . -8) (undo-tree-id6413 . -8) (undo-tree-id6414 . -8) (undo-tree-id6415 . -8) (undo-tree-id6416 . -8) (undo-tree-id6417 . -8) (undo-tree-id6418 . -8) (undo-tree-id6419 . -8) (undo-tree-id6420 . -8) (undo-tree-id6421 . -8) (undo-tree-id6422 . -8) (undo-tree-id6423 . -8) (undo-tree-id6424 . -8) (undo-tree-id6425 . -8) (undo-tree-id6426 . -8) (undo-tree-id6427 . -8) (undo-tree-id6428 . -8) (undo-tree-id6429 . -8) (undo-tree-id6430 . -8) (undo-tree-id6431 . -8) (undo-tree-id6432 . -8) (undo-tree-id6433 . -8) (undo-tree-id6434 . -8) (undo-tree-id6435 . -8) (undo-tree-id6436 . -8) (undo-tree-id6437 . -8) (undo-tree-id6438 . -8) (undo-tree-id6439 . -8) (undo-tree-id6440 . -8) (undo-tree-id6441 . -8) (undo-tree-id6442 . -8) (undo-tree-id6443 . -8) (undo-tree-id6444 . -8) (undo-tree-id6445 . -8) (undo-tree-id6446 . -8) (undo-tree-id6447 . -8) (undo-tree-id6448 . -8) (undo-tree-id6449 . -8) (undo-tree-id6450 . -8) (undo-tree-id6451 . -8) (undo-tree-id6452 . -8) (undo-tree-id6453 . -8) (undo-tree-id6454 . -8) (undo-tree-id6455 . -8) (undo-tree-id6456 . -8) (undo-tree-id6457 . -8) (undo-tree-id6458 . -8) (undo-tree-id6459 . -8) (undo-tree-id6460 . -8) (undo-tree-id6461 . -8) (undo-tree-id6462 . -8) (undo-tree-id6463 . -8) (undo-tree-id6464 . -8) (undo-tree-id6465 . -8) 1553) nil (25944 33496 236640 0) 0 nil])
([nil nil ((#("as_" 0 3 (fontified t)) . -1542) (undo-tree-id6353 . -3) (undo-tree-id6354 . -3) (undo-tree-id6355 . -3) (undo-tree-id6356 . -3) (undo-tree-id6357 . -3) (undo-tree-id6358 . -3) (undo-tree-id6359 . -3) (undo-tree-id6360 . -3) (undo-tree-id6361 . -3) (undo-tree-id6362 . -3) (undo-tree-id6363 . -3) (undo-tree-id6364 . -3) (undo-tree-id6365 . -3) (undo-tree-id6366 . -3) (undo-tree-id6367 . -3) (undo-tree-id6368 . -3) (undo-tree-id6369 . -3) (undo-tree-id6370 . -3) (undo-tree-id6371 . -3) (undo-tree-id6372 . -3) (undo-tree-id6373 . -3) (undo-tree-id6374 . -3) (undo-tree-id6375 . -3) (undo-tree-id6376 . -3) (undo-tree-id6377 . -3) (undo-tree-id6378 . -3) (undo-tree-id6379 . -3) (undo-tree-id6380 . -3) (undo-tree-id6381 . -3) (undo-tree-id6382 . -3) (undo-tree-id6383 . -3) (undo-tree-id6384 . -3) (undo-tree-id6385 . -3) (undo-tree-id6386 . -3) (undo-tree-id6387 . -3) (undo-tree-id6388 . -3) (undo-tree-id6389 . -3) (undo-tree-id6390 . -3) (undo-tree-id6391 . -3) (undo-tree-id6392 . -3) (undo-tree-id6393 . -3) (undo-tree-id6394 . -3) (undo-tree-id6395 . -3) (undo-tree-id6396 . -3) (undo-tree-id6397 . -3) (undo-tree-id6398 . -3) (undo-tree-id6399 . -3) (undo-tree-id6400 . -3) (undo-tree-id6401 . -3) (undo-tree-id6402 . -3) (undo-tree-id6403 . -3) (undo-tree-id6404 . -3) (undo-tree-id6405 . -3) (undo-tree-id6406 . -3) (undo-tree-id6407 . -3) (undo-tree-id6408 . -3) (undo-tree-id6409 . -3) (undo-tree-id6410 . -3) (undo-tree-id6411 . -3) 1545) nil (25944 33496 236583 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1541) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) 1542) nil (25944 33496 236523 0) 0 nil])
([nil nil ((#("    let element: HtmlCanvasElement = canvas_ref.get();" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 15 (face font-lock-variable-name-face fontified t) 15 17 (fontified t) 17 34 (face font-lock-type-face fontified t) 34 37 (fontified t) 37 48 (fontified t) 48 53 (fontified t) 53 54 (fontified t)) . 1488) (undo-tree-id6192 . -50) (undo-tree-id6193 . -50) (undo-tree-id6194 . -50) (undo-tree-id6195 . -50) (undo-tree-id6196 . -53) (undo-tree-id6197 . -53) (undo-tree-id6198 . -53) (undo-tree-id6199 . -53) (undo-tree-id6200 . -53) (undo-tree-id6201 . -53) (undo-tree-id6202 . -53) (undo-tree-id6203 . -53) (undo-tree-id6204 . -53) (undo-tree-id6205 . -53) (undo-tree-id6206 . -53) (undo-tree-id6207 . -53) (undo-tree-id6208 . -53) (undo-tree-id6209 . -53) (undo-tree-id6210 . -53) (undo-tree-id6211 . -53) (undo-tree-id6212 . -53) (undo-tree-id6213 . -53) (undo-tree-id6214 . -53) (undo-tree-id6215 . -53) (undo-tree-id6216 . -53) (undo-tree-id6217 . -53) (undo-tree-id6218 . -53) (undo-tree-id6219 . -53) (undo-tree-id6220 . -53) (undo-tree-id6221 . -53) (undo-tree-id6222 . -53) (undo-tree-id6223 . -53) (undo-tree-id6224 . -53) (undo-tree-id6225 . -53) (undo-tree-id6226 . -53) (undo-tree-id6227 . -53) (undo-tree-id6228 . -53) (undo-tree-id6229 . -53) (undo-tree-id6230 . -53) (undo-tree-id6231 . -53) (undo-tree-id6232 . -53) (undo-tree-id6233 . -54) (undo-tree-id6234 . -54) (undo-tree-id6235 . -54) (undo-tree-id6236 . -54) (undo-tree-id6237 . -54) (undo-tree-id6238 . -54) (undo-tree-id6239 . -54) (undo-tree-id6240 . -53) (undo-tree-id6241 . -53) (undo-tree-id6242 . -53) (undo-tree-id6243 . -53) (undo-tree-id6244 . -53) (undo-tree-id6245 . -53) (undo-tree-id6246 . -53) (undo-tree-id6247 . -53) (undo-tree-id6248 . -53) (undo-tree-id6249 . -53) (undo-tree-id6250 . -53) (undo-tree-id6251 . -53) (undo-tree-id6252 . -53) (undo-tree-id6253 . -53) (undo-tree-id6254 . -53) (undo-tree-id6255 . -53) (undo-tree-id6256 . -53) (undo-tree-id6257 . -53) (undo-tree-id6258 . -53) (undo-tree-id6259 . -53) (undo-tree-id6260 . -53) (undo-tree-id6261 . -53) (undo-tree-id6262 . -53) (undo-tree-id6263 . -53) (undo-tree-id6264 . -53) (undo-tree-id6265 . -53) (undo-tree-id6266 . -53) (undo-tree-id6267 . -53) (undo-tree-id6268 . -53) (undo-tree-id6269 . -53) (undo-tree-id6270 . -53) (undo-tree-id6271 . -53) (undo-tree-id6272 . -53) (undo-tree-id6273 . -53) (undo-tree-id6274 . -53) (undo-tree-id6275 . -53) (undo-tree-id6276 . -53) (undo-tree-id6277 . -53) (undo-tree-id6278 . -53) (undo-tree-id6279 . -53) (undo-tree-id6280 . -53) (undo-tree-id6281 . -53) (undo-tree-id6282 . -53) (undo-tree-id6283 . -53) (undo-tree-id6284 . -54)) nil (25944 33496 236454 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1488) (undo-tree-id6191 . -1)) nil (25944 33496 236362 0) 0 nil])
([nil nil ((1492 . 1500) (t 25944 33496 254500 175000)) nil (25944 33570 868551 0) 0 nil])
([nil nil ((#("j" 0 1 (face font-lock-variable-name-face fontified t)) . -1499) (undo-tree-id6573 . -1) 1500) nil (25944 33570 868550 0) 0 nil])
([nil nil ((1499 . 1509)) nil (25944 33570 868548 0) 0 nil])
([nil nil ((1506 . 1517) (#("Can" 0 3 (fontified nil)) . 1506) (1506 . 1509) (#("CandleStick" 0 11 (fontified nil)) . -1506) (1506 . 1517) (#("Can" 0 3 (face font-lock-type-face fontified t)) . -1506) (undo-tree-id6572 . -3) 1509) nil (25944 33570 868546 0) 0 nil])
([nil nil ((#("k" 0 1 (face font-lock-type-face fontified t)) . -1516) (undo-tree-id6571 . -1) 1517) nil (25944 33570 868543 0) 0 nil])
([nil nil ((#("CandleStic" 0 10 (face font-lock-type-face fontified t)) . -1506) (undo-tree-id6570 . -10) 1516) nil (25944 33570 868540 0) 0 nil])
([nil nil ((1506 . 1511)) nil (25944 33570 868538 0) 0 nil])
([nil nil ((1506 . 1519) (#("Canva" 0 5 (fontified nil)) . 1506) (1506 . 1511) (#("CanvasBackend" 0 13 (fontified nil)) . -1506) (1506 . 1519) (#("Canva" 0 5 (face font-lock-type-face fontified t)) . -1506) (undo-tree-id6562 . -5) (undo-tree-id6563 . -3) (undo-tree-id6564 . -4) (undo-tree-id6565 . -4) (undo-tree-id6566 . -5) (undo-tree-id6567 . -5) (undo-tree-id6568 . -5) (undo-tree-id6569 . -5) 1511) nil (25944 33570 868536 0) 0 nil])
([nil nil ((1519 . 1523)) nil (25944 33570 868522 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1540 1565 nil nil nil t #s(yas--exit 1566 nil))) #s(yas--exit 1566 nil) 22 nil #s(yas--field 1 1540 1565 nil nil nil t #s(yas--exit 1566 nil)) nil nil)) (1521 . 1547) (#("with_canvas_object(${1:canvas})$0" 0 33 (fontified nil)) . 1521) (1521 . 1554) (#("wi" 0 2 (fontified nil)) . 1521) (1521 . 1523) (#("with_canvas_object(…)" 0 21 (fontified nil)) . -1521) (1521 . 1542) (#("wi" 0 2 (fontified t)) . -1521) (undo-tree-id6556 . -2) (undo-tree-id6557 . -1) (undo-tree-id6558 . -2) (undo-tree-id6559 . -2) (undo-tree-id6560 . -2) (undo-tree-id6561 . -2) 1523) nil (25944 33570 868520 0) 0 nil])
([nil nil ((1541 . 1543) (#("canvas" 0 6 (fontified nil)) . 1541) (undo-tree-id6555 . -6) (1540 . 1541)) nil (25944 33570 868511 0) 0 nil])
([nil nil ((1540 . 1550) (#("can" 0 3 (fontified nil)) . 1540) (undo-tree-id6543 . -3) (1540 . 1543) (#("canvas_ref" 0 10 (fontified nil)) . -1540) (undo-tree-id6544 . -10) (1540 . 1550) (#("can" 0 3 (fontified t)) . -1540) (undo-tree-id6545 . -3) (undo-tree-id6546 . -3) (undo-tree-id6547 . -3) (undo-tree-id6548 . -1) (undo-tree-id6549 . -2) (undo-tree-id6550 . -3) (undo-tree-id6551 . -3) (undo-tree-id6552 . -3) (undo-tree-id6553 . -3) (undo-tree-id6554 . -3) 1543) nil (25944 33570 868507 0) 0 nil])
([nil nil ((1550 . 1551)) nil (25944 33570 868493 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1550) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) 1551) nil (25944 33570 868492 0) 0 nil])
([nil nil ((1550 . 1552)) nil (25944 33570 868483 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1551 1556 #s(yas--snippet nil nil #s(yas--exit 1556 nil) 23 nil nil #s(yas--field 1 1540 1565 nil nil nil t #s(yas--exit 1566 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1556 nil) 23 nil nil #s(yas--field 1 1540 1565 nil nil nil t #s(yas--exit 1566 nil)) nil)) (1551 . 1556) (#("get()$0" 0 7 (fontified nil)) . 1551) (undo-tree-id6527 . -7) (1551 . 1558) (#("g" 0 1 (fontified nil)) . 1551) (undo-tree-id6528 . -1) (1551 . 1552) (#("get()" 0 5 (fontified nil)) . -1551) (undo-tree-id6529 . -5) (1551 . 1556) (#("g" 0 1 (fontified t)) . -1551) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) 1552) nil (25944 33570 868481 0) 0 nil])
([nil nil ((1556 . 1557)) nil (25944 33570 868469 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1556) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) 1557) nil (25944 33570 868468 0) 0 nil])
([nil nil ((1556 . 1558)) nil (25944 33570 868457 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1557 1565 #s(yas--snippet nil nil #s(yas--exit 1565 nil) 24 nil nil #s(yas--field 1 1540 1565 nil nil nil t #s(yas--exit 1566 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1565 nil) 24 nil nil #s(yas--field 1 1540 1565 nil nil nil t #s(yas--exit 1566 nil)) nil)) (1557 . 1565) (#("unwrap()$0" 0 10 (fontified nil)) . 1557) (undo-tree-id6507 . -10) (1557 . 1567) (#("u" 0 1 (fontified nil)) . 1557) (undo-tree-id6508 . -1) (1557 . 1558) (#("unwrap()" 0 8 (fontified nil)) . -1557) (undo-tree-id6509 . -8) (1557 . 1565) (#("u" 0 1 (fontified t)) . -1557) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) 1558) nil (25944 33570 868452 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1521 1566 #s(yas--snippet nil (#s(yas--field 1 1540 1565 nil nil nil t #s(yas--exit 1566 nil))) #s(yas--exit 1566 nil) 22 nil #s(yas--field 1 1540 1565 nil nil nil t #s(yas--exit 1566 nil)) nil nil))) nil (25944 33579 274840 0) 0 nil])
([nil nil ((1566 . 1568) (t 25944 33570 886633 581000)) nil (25944 33579 274839 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1567 1575 #s(yas--snippet nil nil #s(yas--exit 1575 nil) 25 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1575 nil) 25 nil nil nil nil)) (1567 . 1575) (#("unwrap()$0" 0 10 (fontified nil)) . 1567) (1567 . 1577) (#("u" 0 1 (fontified nil)) . 1567) (1567 . 1568) (#("unwrap()" 0 8 (fontified nil)) . -1567) (1567 . 1575) (#("u" 0 1 (fontified t)) . -1567) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) 1568) nil (25944 33579 274836 0) 0 nil])
([nil nil ((1575 . 1576)) nil (25944 33579 274814 0) 0 nil])
([nil nil ((1565 . 1568) (t 25944 33579 292962 590000)) nil (25944 33607 455747 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1566) (undo-tree-id7470 . -1) (undo-tree-id7471 . -1) (undo-tree-id7472 . -1) (undo-tree-id7473 . -1) (undo-tree-id7474 . -1) (undo-tree-id7475 . -1) (#("e" 0 1 (fontified t)) . -1567) (undo-tree-id7476 . -1) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) 1568) nil (25944 33607 455745 0) 0 nil])
([nil nil ((1566 . 1567)) nil (25944 33607 455734 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1565) (undo-tree-id7442 . -1) (undo-tree-id7443 . -1) (undo-tree-id7444 . -1) (undo-tree-id7445 . -1) (undo-tree-id7446 . -1) (undo-tree-id7447 . -1) (undo-tree-id7448 . -1) (undo-tree-id7449 . -1) (undo-tree-id7450 . -1) (undo-tree-id7451 . -1) (undo-tree-id7452 . -1) (undo-tree-id7453 . -1) (undo-tree-id7454 . -1) (undo-tree-id7455 . -1) (undo-tree-id7456 . -1) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (#("d" 0 1 (fontified t)) . -1566) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) 1567) nil (25944 33607 455731 0) 0 nil])
([nil nil ((1565 . 1566)) nil (25944 33607 455704 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1565) (undo-tree-id7434 . -1) (undo-tree-id7435 . -1) (undo-tree-id7436 . -1) (undo-tree-id7437 . -1) (undo-tree-id7438 . -1) (undo-tree-id7439 . -1) (undo-tree-id7440 . -1) (undo-tree-id7441 . -1) 1566) nil (25944 33607 455702 0) 0 nil])
([nil nil ((1565 . 1566)) nil (25944 33607 455694 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1556) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (undo-tree-id6795 . -1) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1) (undo-tree-id6808 . -1) (undo-tree-id6809 . -1) (undo-tree-id6810 . -1) (undo-tree-id6811 . -1) (undo-tree-id6812 . -1) (undo-tree-id6813 . -1) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (#("u" 0 1 (fontified t)) . -1557) (undo-tree-id6819 . -1) (undo-tree-id6820 . -1) (undo-tree-id6821 . -1) (undo-tree-id6822 . -1) (undo-tree-id6823 . -1) (undo-tree-id6824 . -1) (undo-tree-id6825 . -1) (undo-tree-id6826 . -1) (undo-tree-id6827 . -1) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (undo-tree-id6830 . -1) (undo-tree-id6831 . -1) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6834 . -1) (undo-tree-id6835 . -1) (undo-tree-id6836 . -1) (undo-tree-id6837 . -1) (undo-tree-id6838 . -1) (undo-tree-id6839 . -1) (undo-tree-id6840 . -1) (undo-tree-id6841 . -1) (undo-tree-id6842 . -1) (undo-tree-id6843 . -1) (undo-tree-id6844 . -1) (undo-tree-id6845 . -1) (undo-tree-id6846 . -1) (undo-tree-id6847 . -1) (undo-tree-id6848 . -1) (undo-tree-id6849 . -1) (undo-tree-id6850 . -1) (undo-tree-id6851 . -1) (undo-tree-id6852 . -1) (undo-tree-id6853 . -1) (undo-tree-id6854 . -1) (undo-tree-id6855 . -1) (undo-tree-id6856 . -1) (undo-tree-id6857 . -1) (undo-tree-id6858 . -1) (undo-tree-id6859 . -1) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) (undo-tree-id6867 . -1) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1) (undo-tree-id6870 . -1) (undo-tree-id6871 . -1) (undo-tree-id6872 . -1) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (#("n" 0 1 (fontified t)) . -1558) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (undo-tree-id6957 . -1) (undo-tree-id6958 . -1) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (#("w" 0 1 (fontified t)) . -1559) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) (undo-tree-id6989 . -1) (undo-tree-id6990 . -1) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) (undo-tree-id7020 . -1) (undo-tree-id7021 . -1) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (#("r" 0 1 (fontified t)) . -1560) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . -1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (undo-tree-id7121 . -1) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -1) (undo-tree-id7128 . -1) (undo-tree-id7129 . -1) (undo-tree-id7130 . -1) (undo-tree-id7131 . -1) (undo-tree-id7132 . -1) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (#("a" 0 1 (fontified t)) . -1561) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) (#("p" 0 1 (fontified t)) . -1562) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (undo-tree-id7225 . -1) (undo-tree-id7226 . -1) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (undo-tree-id7237 . -1) (undo-tree-id7238 . -1) (undo-tree-id7239 . -1) (undo-tree-id7240 . -1) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (undo-tree-id7249 . -1) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (undo-tree-id7265 . -1) (undo-tree-id7266 . -1) (undo-tree-id7267 . -1) (undo-tree-id7268 . -1) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (undo-tree-id7271 . -1) (undo-tree-id7272 . -1) (undo-tree-id7273 . -1) (undo-tree-id7274 . -1) (undo-tree-id7275 . -1) (undo-tree-id7276 . -1) (undo-tree-id7277 . -1) (undo-tree-id7278 . -1) (undo-tree-id7279 . -1) (undo-tree-id7280 . -1) (undo-tree-id7281 . -1) (undo-tree-id7282 . -1) (undo-tree-id7283 . -1) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (undo-tree-id7286 . -1) (undo-tree-id7287 . -1) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) (#("(" 0 1 (fontified t)) . -1563) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) (undo-tree-id7296 . -1) (undo-tree-id7297 . -1) (undo-tree-id7298 . -1) (undo-tree-id7299 . -1) (undo-tree-id7300 . -1) (undo-tree-id7301 . -1) (undo-tree-id7302 . -1) (undo-tree-id7303 . -1) (undo-tree-id7304 . -1) (undo-tree-id7305 . -1) (undo-tree-id7306 . -1) (undo-tree-id7307 . -1) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) (undo-tree-id7310 . -1) (undo-tree-id7311 . -1) (undo-tree-id7312 . -1) (undo-tree-id7313 . -1) (undo-tree-id7314 . -1) (undo-tree-id7315 . -1) (undo-tree-id7316 . -1) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) (undo-tree-id7364 . -1) (#(")" 0 1 (fontified t)) . -1564) (undo-tree-id7365 . -1) (undo-tree-id7366 . -1) (undo-tree-id7367 . -1) (undo-tree-id7368 . -1) (undo-tree-id7369 . -1) (undo-tree-id7370 . -1) (undo-tree-id7371 . -1) (undo-tree-id7372 . -1) (undo-tree-id7373 . -1) (undo-tree-id7374 . -1) (undo-tree-id7375 . -1) (undo-tree-id7376 . -1) (undo-tree-id7377 . -1) (undo-tree-id7378 . -1) (undo-tree-id7379 . -1) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) (undo-tree-id7384 . -1) (undo-tree-id7385 . -1) (undo-tree-id7386 . -1) (undo-tree-id7387 . -1) (undo-tree-id7388 . -1) (undo-tree-id7389 . -1) (undo-tree-id7390 . -1) (undo-tree-id7391 . -1) (undo-tree-id7392 . -1) (undo-tree-id7393 . -1) (undo-tree-id7394 . -1) (undo-tree-id7395 . -1) (undo-tree-id7396 . -1) (undo-tree-id7397 . -1) (undo-tree-id7398 . -1) (undo-tree-id7399 . -1) (undo-tree-id7400 . -1) (undo-tree-id7401 . -1) (undo-tree-id7402 . -1) (undo-tree-id7403 . -1) (undo-tree-id7404 . -1) (undo-tree-id7405 . -1) (undo-tree-id7406 . -1) (undo-tree-id7407 . -1) (undo-tree-id7408 . -1) (undo-tree-id7409 . -1) (undo-tree-id7410 . -1) (undo-tree-id7411 . -1) (undo-tree-id7412 . -1) (undo-tree-id7413 . -1) (undo-tree-id7414 . -1) (undo-tree-id7415 . -1) (undo-tree-id7416 . -1) (undo-tree-id7417 . -1) (undo-tree-id7418 . -1) (undo-tree-id7419 . -1) (undo-tree-id7420 . -1) (undo-tree-id7421 . -1) (undo-tree-id7422 . -1) (undo-tree-id7423 . -1) (undo-tree-id7424 . -1) (undo-tree-id7425 . -1) (undo-tree-id7426 . -1) (undo-tree-id7427 . -1) (undo-tree-id7428 . -1) (#("." 0 1 (fontified t)) . -1565) (undo-tree-id7429 . -1) (undo-tree-id7430 . -1) (undo-tree-id7431 . -1) (undo-tree-id7432 . -1) (undo-tree-id7433 . -1) 1566) nil (25944 33607 455661 0) 0 nil])
([nil nil ((1556 . 1559)) nil (25944 33607 455004 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1556) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (#("a" 0 1 (fontified t)) . -1557) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -1558) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) 1559) nil (25944 33607 454999 0) 0 nil])
([nil nil ((1556 . 1559)) nil (25944 33607 454939 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1557) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (undo-tree-id6660 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -1558) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) 1559) nil (25944 33607 454935 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1556) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) 1557) nil (25944 33607 454893 0) 0 nil])
([nil nil ((1556 . 1557)) nil (25944 33607 454848 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1556) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) 1557) nil (25944 33607 454846 0) 0 nil])
([nil nil ((1556 . 1557)) nil (25944 33607 454836 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1557 1567 #s(yas--snippet nil nil #s(yas--exit 1567 nil) 26 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1567 nil) 26 nil nil nil nil)) (1557 . 1567) (#("as_deref()$0" 0 12 (fontified nil)) . 1557) (1557 . 1569) (#("as_deref()" 0 10 (fontified nil)) . -1557) (1557 . 1567)) nil (25944 33607 454834 0) 0 nil])
([nil nil ((1567 . 1570)) nil (25944 33607 454831 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1568 1576 #s(yas--snippet nil nil #s(yas--exit 1576 nil) 27 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1576 nil) 27 nil nil nil nil)) (1568 . 1576) (#("unwrap()$0" 0 10 (fontified nil)) . 1568) (1568 . 1578) (#("un" 0 2 (fontified nil)) . 1568) (1568 . 1570) (#("unwrap()" 0 8 (fontified nil)) . -1568) (1568 . 1576) (#("un" 0 2 (fontified t)) . -1568) (undo-tree-id6579 . -2) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -2) (undo-tree-id6583 . -2) 1570) nil (25944 33607 454827 0) 0 nil])
([nil nil ((1576 . 1578) (t 25944 33607 475183 727000)) nil (25944 33694 987982 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1577) (undo-tree-id7489 . -1) (undo-tree-id7490 . -1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) (undo-tree-id7493 . -1) (undo-tree-id7494 . -1) (undo-tree-id7495 . -1) 1578) nil (25944 33694 987980 0) 0 nil])
([nil nil ((1577 . 1578)) nil (25944 33694 987971 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1577) (undo-tree-id7485 . -1) (undo-tree-id7486 . -1) (undo-tree-id7487 . -1) (undo-tree-id7488 . -1) 1578) nil (25944 33694 987970 0) 0 nil])
([nil nil ((1577 . 1578)) nil (25944 33694 987964 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1577 1587 #s(yas--snippet nil nil #s(yas--exit 1587 nil) 28 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1587 nil) 28 nil nil nil nil)) (1577 . 1587) (#("to_owned()$0" 0 12 (fontified nil)) . 1577) (1577 . 1589) (#("t" 0 1 (fontified nil)) . 1577) (1577 . 1578) (#("to_owned() (as ToOwned)" 0 23 (fontified nil)) . -1577) (1577 . 1600) (#("t" 0 1 (fontified t)) . -1577) (undo-tree-id7480 . -1) (undo-tree-id7481 . -1) (undo-tree-id7482 . -1) (undo-tree-id7483 . -1) (undo-tree-id7484 . -1) 1578) nil (25944 33694 987959 0) 0 nil])
([nil nil ((#("owned" 0 5 (fontified t)) . -1580) (undo-tree-id7520 . -5) (undo-tree-id7521 . -5) (undo-tree-id7522 . -5) (undo-tree-id7523 . -5) (undo-tree-id7524 . -5) (undo-tree-id7525 . -5) 1585 (t 25944 33695 7035 132000)) nil (25944 33706 962275 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1577) (undo-tree-id7496 . -1) (undo-tree-id7497 . -1) (undo-tree-id7498 . -1) (undo-tree-id7499 . -1) (undo-tree-id7500 . -1) (undo-tree-id7501 . -1) (undo-tree-id7502 . -1) (undo-tree-id7503 . -1) (undo-tree-id7504 . -1) (#("o" 0 1 (fontified t)) . -1578) (undo-tree-id7505 . -1) (undo-tree-id7506 . -1) (undo-tree-id7507 . -1) (undo-tree-id7508 . -1) (undo-tree-id7509 . -1) (undo-tree-id7510 . -1) (undo-tree-id7511 . -1) (undo-tree-id7512 . -1) (#("_" 0 1 (fontified t)) . -1579) (undo-tree-id7513 . -1) (undo-tree-id7514 . -1) (undo-tree-id7515 . -1) (undo-tree-id7516 . -1) (undo-tree-id7517 . -1) (undo-tree-id7518 . -1) (undo-tree-id7519 . -1) 1580) nil (25944 33706 962265 0) 0 nil])
([nil nil ((1577 . 1582)) nil (25944 33706 962228 0) 0 nil])
([nil nil ((#("unwrap()" 0 8 (fontified t)) . -1586) (undo-tree-id8006 . -8) (undo-tree-id8007 . -8) (undo-tree-id8008 . -8) (undo-tree-id8009 . -8) (undo-tree-id8010 . -8) (undo-tree-id8011 . -8) (undo-tree-id8012 . -8) 1594 (t 25944 33706 982535 207000)) nil (25944 33789 635998 0) 0 nil])
([nil nil ((#("clone())." 0 5 (fontified t) 5 7 (fontified t) 7 9 (fontified t)) . -1577) (undo-tree-id7972 . 4) (undo-tree-id7973 . -7) (undo-tree-id7974 . -7) (undo-tree-id7975 . -7) (undo-tree-id7976 . -7) (undo-tree-id7977 . -7) (undo-tree-id7978 . -7) (undo-tree-id7979 . -7) (undo-tree-id7980 . -7) (undo-tree-id7981 . -7) (undo-tree-id7982 . -7) (undo-tree-id7983 . -7) (undo-tree-id7984 . -7) (undo-tree-id7985 . -7) (undo-tree-id7986 . -7) (undo-tree-id7987 . -7) (undo-tree-id7988 . -7) (undo-tree-id7989 . -7) (undo-tree-id7990 . -7) (undo-tree-id7991 . -7) (undo-tree-id7992 . -7) (undo-tree-id7993 . -7) (undo-tree-id7994 . -9) (undo-tree-id7995 . -9) (undo-tree-id7996 . -9) (undo-tree-id7997 . -9) (undo-tree-id7998 . -9) (undo-tree-id7999 . -9) (undo-tree-id8000 . -9) (undo-tree-id8001 . -9) (undo-tree-id8002 . -9) (undo-tree-id8003 . -9) (undo-tree-id8004 . -9) (undo-tree-id8005 . -9) 1586) nil (25944 33789 635989 0) 0 nil])
([nil nil ((#("unwrap()." 0 9 (fontified t)) . -1568) (undo-tree-id7923 . -8) (undo-tree-id7924 . -9) (undo-tree-id7925 . -9) (undo-tree-id7926 . -9) (undo-tree-id7927 . -9) (undo-tree-id7928 . -9) (undo-tree-id7929 . -9) (undo-tree-id7930 . -9) (undo-tree-id7931 . -9) (undo-tree-id7932 . -9) (undo-tree-id7933 . -9) (undo-tree-id7934 . -9) (undo-tree-id7935 . -9) (undo-tree-id7936 . -9) (undo-tree-id7937 . -9) (undo-tree-id7938 . -9) (undo-tree-id7939 . -9) (undo-tree-id7940 . -9) (undo-tree-id7941 . -9) (undo-tree-id7942 . -9) (undo-tree-id7943 . -9) (undo-tree-id7944 . -9) (undo-tree-id7945 . -9) (undo-tree-id7946 . -9) (undo-tree-id7947 . -9) (undo-tree-id7948 . -9) (undo-tree-id7949 . -9) (undo-tree-id7950 . -9) (undo-tree-id7951 . -9) (undo-tree-id7952 . -9) (undo-tree-id7953 . -9) (undo-tree-id7954 . -9) (undo-tree-id7955 . -9) (undo-tree-id7956 . -9) (undo-tree-id7957 . -9) (undo-tree-id7958 . -9) (undo-tree-id7959 . -9) (undo-tree-id7960 . -9) (undo-tree-id7961 . -9) (undo-tree-id7962 . -9) (undo-tree-id7963 . -9) (undo-tree-id7964 . -9) (undo-tree-id7965 . -9) (undo-tree-id7966 . -9) (undo-tree-id7967 . -9) (undo-tree-id7968 . -9) (undo-tree-id7969 . -9) (undo-tree-id7970 . -9) (undo-tree-id7971 . -9) 1577) nil (25944 33789 635953 0) 0 nil])
([nil nil ((#("deref()." 0 8 (fontified t)) . -1560) (undo-tree-id7866 . -8) (undo-tree-id7867 . -8) (undo-tree-id7868 . -8) (undo-tree-id7869 . -8) (undo-tree-id7870 . -8) (undo-tree-id7871 . -8) (undo-tree-id7872 . -8) (undo-tree-id7873 . -8) (undo-tree-id7874 . -8) (undo-tree-id7875 . -8) (undo-tree-id7876 . -8) (undo-tree-id7877 . -8) (undo-tree-id7878 . -8) (undo-tree-id7879 . -8) (undo-tree-id7880 . -8) (undo-tree-id7881 . -8) (undo-tree-id7882 . -8) (undo-tree-id7883 . -8) (undo-tree-id7884 . -8) (undo-tree-id7885 . -8) (undo-tree-id7886 . -8) (undo-tree-id7887 . -8) (undo-tree-id7888 . -8) (undo-tree-id7889 . -8) (undo-tree-id7890 . -8) (undo-tree-id7891 . -8) (undo-tree-id7892 . -8) (undo-tree-id7893 . -8) (undo-tree-id7894 . -8) (undo-tree-id7895 . -8) (undo-tree-id7896 . -8) (undo-tree-id7897 . -8) (undo-tree-id7898 . -8) (undo-tree-id7899 . -8) (undo-tree-id7900 . -8) (undo-tree-id7901 . -8) (undo-tree-id7902 . -8) (undo-tree-id7903 . -8) (undo-tree-id7904 . -8) (undo-tree-id7905 . -8) (undo-tree-id7906 . -8) (undo-tree-id7907 . -8) (undo-tree-id7908 . -8) (undo-tree-id7909 . -8) (undo-tree-id7910 . -8) (undo-tree-id7911 . -8) (undo-tree-id7912 . -8) (undo-tree-id7913 . -8) (undo-tree-id7914 . -8) (undo-tree-id7915 . -8) (undo-tree-id7916 . -8) (undo-tree-id7917 . -8) (undo-tree-id7918 . -8) (undo-tree-id7919 . -8) (undo-tree-id7920 . -8) (undo-tree-id7921 . -8) (undo-tree-id7922 . -8) 1568) nil (25944 33789 635897 0) 0 nil])
([nil nil ((#("as_" 0 3 (fontified t)) . -1557) (undo-tree-id7801 . -3) (undo-tree-id7802 . -3) (undo-tree-id7803 . -3) (undo-tree-id7804 . -3) (undo-tree-id7805 . -3) (undo-tree-id7806 . -3) (undo-tree-id7807 . -3) (undo-tree-id7808 . -3) (undo-tree-id7809 . -3) (undo-tree-id7810 . -3) (undo-tree-id7811 . -3) (undo-tree-id7812 . -3) (undo-tree-id7813 . -3) (undo-tree-id7814 . -3) (undo-tree-id7815 . -3) (undo-tree-id7816 . -3) (undo-tree-id7817 . -3) (undo-tree-id7818 . -3) (undo-tree-id7819 . -3) (undo-tree-id7820 . -3) (undo-tree-id7821 . -3) (undo-tree-id7822 . -3) (undo-tree-id7823 . -3) (undo-tree-id7824 . -3) (undo-tree-id7825 . -3) (undo-tree-id7826 . -3) (undo-tree-id7827 . -3) (undo-tree-id7828 . -3) (undo-tree-id7829 . -3) (undo-tree-id7830 . -3) (undo-tree-id7831 . -3) (undo-tree-id7832 . -3) (undo-tree-id7833 . -3) (undo-tree-id7834 . -3) (undo-tree-id7835 . -3) (undo-tree-id7836 . -3) (undo-tree-id7837 . -3) (undo-tree-id7838 . -3) (undo-tree-id7839 . -3) (undo-tree-id7840 . -3) (undo-tree-id7841 . -3) (undo-tree-id7842 . -3) (undo-tree-id7843 . -3) (undo-tree-id7844 . -3) (undo-tree-id7845 . -3) (undo-tree-id7846 . -3) (undo-tree-id7847 . -3) (undo-tree-id7848 . -3) (undo-tree-id7849 . -3) (undo-tree-id7850 . -3) (undo-tree-id7851 . -3) (undo-tree-id7852 . -3) (undo-tree-id7853 . -3) (undo-tree-id7854 . -3) (undo-tree-id7855 . -3) (undo-tree-id7856 . -3) (undo-tree-id7857 . -3) (undo-tree-id7858 . -3) (undo-tree-id7859 . -3) (undo-tree-id7860 . -3) (undo-tree-id7861 . -3) (undo-tree-id7862 . -3) (undo-tree-id7863 . -3) (undo-tree-id7864 . -3) (undo-tree-id7865 . -3) 1560) nil (25944 33789 635840 0) 0 nil])
([nil nil ((#("get()." 0 6 (fontified t)) . -1551) (undo-tree-id7727 . -6) (undo-tree-id7728 . -6) (undo-tree-id7729 . -6) (undo-tree-id7730 . -6) (undo-tree-id7731 . -6) (undo-tree-id7732 . -6) (undo-tree-id7733 . -6) (undo-tree-id7734 . -6) (undo-tree-id7735 . -6) (undo-tree-id7736 . -6) (undo-tree-id7737 . -6) (undo-tree-id7738 . -6) (undo-tree-id7739 . -6) (undo-tree-id7740 . -6) (undo-tree-id7741 . -6) (undo-tree-id7742 . -6) (undo-tree-id7743 . -6) (undo-tree-id7744 . -6) (undo-tree-id7745 . -6) (undo-tree-id7746 . -6) (undo-tree-id7747 . -6) (undo-tree-id7748 . -6) (undo-tree-id7749 . -6) (undo-tree-id7750 . -6) (undo-tree-id7751 . -6) (undo-tree-id7752 . -6) (undo-tree-id7753 . -6) (undo-tree-id7754 . -6) (undo-tree-id7755 . -6) (undo-tree-id7756 . -6) (undo-tree-id7757 . -6) (undo-tree-id7758 . -6) (undo-tree-id7759 . -6) (undo-tree-id7760 . -6) (undo-tree-id7761 . -6) (undo-tree-id7762 . -6) (undo-tree-id7763 . -6) (undo-tree-id7764 . -6) (undo-tree-id7765 . -6) (undo-tree-id7766 . -6) (undo-tree-id7767 . -6) (undo-tree-id7768 . -6) (undo-tree-id7769 . -6) (undo-tree-id7770 . -6) (undo-tree-id7771 . -6) (undo-tree-id7772 . -6) (undo-tree-id7773 . -6) (undo-tree-id7774 . -6) (undo-tree-id7775 . -6) (undo-tree-id7776 . -6) (undo-tree-id7777 . -6) (undo-tree-id7778 . -6) (undo-tree-id7779 . -6) (undo-tree-id7780 . -6) (undo-tree-id7781 . -6) (undo-tree-id7782 . -6) (undo-tree-id7783 . -6) (undo-tree-id7784 . -6) (undo-tree-id7785 . -6) (undo-tree-id7786 . -6) (undo-tree-id7787 . -6) (undo-tree-id7788 . -6) (undo-tree-id7789 . -6) (undo-tree-id7790 . -6) (undo-tree-id7791 . -6) (undo-tree-id7792 . -6) (undo-tree-id7793 . -6) (undo-tree-id7794 . -6) (undo-tree-id7795 . -6) (undo-tree-id7796 . -6) (undo-tree-id7797 . -6) (undo-tree-id7798 . -6) (undo-tree-id7799 . -6) (undo-tree-id7800 . -6) 1557) nil (25944 33789 635774 0) 0 nil])
([nil nil ((#("    let backend = CanvasBackend::with_canvas_object(canvas_ref.;" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 15 (face font-lock-variable-name-face fontified t) 15 18 (fontified t) 18 31 (face font-lock-type-face fontified t) 31 33 (fontified t) 33 52 (fontified t) 52 63 (fontified t) 63 64 (fontified t)) . 1488) (undo-tree-id7526 . -28) (undo-tree-id7527 . -28) (undo-tree-id7528 . -52) (undo-tree-id7529 . -63) (undo-tree-id7530 . -63) (undo-tree-id7531 . -63) (undo-tree-id7532 . -63) (undo-tree-id7533 . -63) (undo-tree-id7534 . -63) (undo-tree-id7535 . -63) (undo-tree-id7536 . -63) (undo-tree-id7537 . -63) (undo-tree-id7538 . 1) (undo-tree-id7539 . -64) (undo-tree-id7540 . -64) (undo-tree-id7541 . -64) (undo-tree-id7542 . -64) (undo-tree-id7543 . -64) (undo-tree-id7544 . -64) (undo-tree-id7545 . -64) (undo-tree-id7546 . -64) (undo-tree-id7547 . -64) (undo-tree-id7548 . -64) (undo-tree-id7549 . -64) (undo-tree-id7550 . -64) (undo-tree-id7551 . -64) (undo-tree-id7552 . -64) (undo-tree-id7553 . -64) (undo-tree-id7554 . -64) (undo-tree-id7555 . -64) (undo-tree-id7556 . -64) (undo-tree-id7557 . -64) (undo-tree-id7558 . -64) (undo-tree-id7559 . -64) (undo-tree-id7560 . -64) (undo-tree-id7561 . -64) (undo-tree-id7562 . -64) (undo-tree-id7563 . -64) (undo-tree-id7564 . -64) (undo-tree-id7565 . -64) (undo-tree-id7566 . -64) (undo-tree-id7567 . -64) (undo-tree-id7568 . -64) (undo-tree-id7569 . -64) (undo-tree-id7570 . -63) (undo-tree-id7571 . -63) (undo-tree-id7572 . -63) (undo-tree-id7573 . -63) (undo-tree-id7574 . -63) (undo-tree-id7575 . -63) (undo-tree-id7576 . -63) (undo-tree-id7577 . -63) (undo-tree-id7578 . -63) (undo-tree-id7579 . -63) (undo-tree-id7580 . -63) (undo-tree-id7581 . -63) (undo-tree-id7582 . -63) (undo-tree-id7583 . -63) (undo-tree-id7584 . -63) (undo-tree-id7585 . -63) (undo-tree-id7586 . -63) (undo-tree-id7587 . -63) (undo-tree-id7588 . -63) (undo-tree-id7589 . -63) (undo-tree-id7590 . -63) (undo-tree-id7591 . -28) (undo-tree-id7592 . -28) (undo-tree-id7593 . -28) (undo-tree-id7594 . -28) (undo-tree-id7595 . -28) (undo-tree-id7596 . -28) (undo-tree-id7597 . -28) (undo-tree-id7598 . -28) (undo-tree-id7599 . -28) (undo-tree-id7600 . -28) (undo-tree-id7601 . -28) (undo-tree-id7602 . -28) (undo-tree-id7603 . -28) (undo-tree-id7604 . -28) (undo-tree-id7605 . -28) (undo-tree-id7606 . -28) (undo-tree-id7607 . -28) (undo-tree-id7608 . -28) (undo-tree-id7609 . -28) (undo-tree-id7610 . -28) (undo-tree-id7611 . -28) (undo-tree-id7612 . -28) (undo-tree-id7613 . -28) (undo-tree-id7614 . -28) (undo-tree-id7615 . -28) (undo-tree-id7616 . -28) (undo-tree-id7617 . -28) (undo-tree-id7618 . -28) (undo-tree-id7619 . -28) (undo-tree-id7620 . -28) (undo-tree-id7621 . -28) (undo-tree-id7622 . -28) (undo-tree-id7623 . -28) (undo-tree-id7624 . -28) (undo-tree-id7625 . -28) (undo-tree-id7626 . -28) (undo-tree-id7627 . -28) (undo-tree-id7628 . -28) (undo-tree-id7629 . -28) (undo-tree-id7630 . -28) (undo-tree-id7631 . -28) (undo-tree-id7632 . -28) (undo-tree-id7633 . -28) (undo-tree-id7634 . -28) (undo-tree-id7635 . -28) (undo-tree-id7636 . -28) (undo-tree-id7637 . -28) (undo-tree-id7638 . -28) (undo-tree-id7639 . -28) (undo-tree-id7640 . -28) (undo-tree-id7641 . -28) (undo-tree-id7642 . -28) (undo-tree-id7643 . -28) (undo-tree-id7644 . -28) (undo-tree-id7645 . -28) (undo-tree-id7646 . -28) (undo-tree-id7647 . -28) (undo-tree-id7648 . -28) (undo-tree-id7649 . -28) (undo-tree-id7650 . -28) (undo-tree-id7651 . -28) (undo-tree-id7652 . -28) (undo-tree-id7653 . -28) (undo-tree-id7654 . -28) (undo-tree-id7655 . -28) (undo-tree-id7656 . -28) (undo-tree-id7657 . -28) (undo-tree-id7658 . -28) (undo-tree-id7659 . -28) (undo-tree-id7660 . -64) (undo-tree-id7661 . -64) (undo-tree-id7662 . -64) (undo-tree-id7663 . -64) (undo-tree-id7664 . -64) (undo-tree-id7665 . -64) (undo-tree-id7666 . -64) (undo-tree-id7667 . -64) (undo-tree-id7668 . -64) (undo-tree-id7669 . -64) (undo-tree-id7670 . -64) (undo-tree-id7671 . -64) (undo-tree-id7672 . -64) (undo-tree-id7673 . -64) (undo-tree-id7674 . -63) (undo-tree-id7675 . -63) (undo-tree-id7676 . -63) (undo-tree-id7677 . -63) (undo-tree-id7678 . -63) (undo-tree-id7679 . -63) (undo-tree-id7680 . -63) (undo-tree-id7681 . -63) (undo-tree-id7682 . -63) (undo-tree-id7683 . -63) (undo-tree-id7684 . -63) (undo-tree-id7685 . -63) (undo-tree-id7686 . -63) (undo-tree-id7687 . -63) (undo-tree-id7688 . -63) (undo-tree-id7689 . -63) (undo-tree-id7690 . -63) (undo-tree-id7691 . -63) (undo-tree-id7692 . -63) (undo-tree-id7693 . -63) (undo-tree-id7694 . -63) (undo-tree-id7695 . -63) (undo-tree-id7696 . -63) (undo-tree-id7697 . -63) (undo-tree-id7698 . -63) (undo-tree-id7699 . -63) (undo-tree-id7700 . -63) (undo-tree-id7701 . -63) (undo-tree-id7702 . -63) (undo-tree-id7703 . -63) (undo-tree-id7704 . -63) (undo-tree-id7705 . -63) (undo-tree-id7706 . -63) (undo-tree-id7707 . -63) (undo-tree-id7708 . -63) (undo-tree-id7709 . -63) (undo-tree-id7710 . -63) (undo-tree-id7711 . -63) (undo-tree-id7712 . -63) (undo-tree-id7713 . -63) (undo-tree-id7714 . -63) (undo-tree-id7715 . -63) (undo-tree-id7716 . -63) (undo-tree-id7717 . -63) (undo-tree-id7718 . -63) (undo-tree-id7719 . -63) (undo-tree-id7720 . -63) (undo-tree-id7721 . -63) (undo-tree-id7722 . -63) (undo-tree-id7723 . -63) (undo-tree-id7724 . -63) (undo-tree-id7725 . -63) (undo-tree-id7726 . -64)) nil (25944 33789 635694 0) 0 nil])
([nil nil ((1639 . 1645) (t 25944 33789 656504 425000)) nil (25944 33796 983461 0) 0 nil])
([nil nil ((1644 . 1647)) nil (25944 33796 983460 0) 0 nil])
([nil nil ((1647 . 1650)) nil (25944 33796 983453 0) 0 nil])
([nil nil ((1487 . 1492) (t 25944 33797 4387 521000)) nil (25944 33830 693631 0) 0 nil])
([nil nil ((1492 . 1493)) nil (25944 33830 693630 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1492) (undo-tree-id8052 . -1) (undo-tree-id8053 . -1) (undo-tree-id8054 . -1) (undo-tree-id8055 . -1) 1493) nil (25944 33830 693629 0) 0 nil])
([nil nil ((1492 . 1507)) nil (25944 33830 693624 0) 0 nil])
([nil nil ((#("B" 0 1 (face font-lock-type-face fontified t)) . -1506) (undo-tree-id8050 . -1) (undo-tree-id8051 . -1) 1507) nil (25944 33830 693622 0) 0 nil])
([nil nil ((1506 . 1512)) nil (25944 33830 693619 0) 0 nil])
([nil nil ((1506 . 1519) (#("Canvas" 0 6 (fontified nil)) . 1506) (1506 . 1512) (#("CanvasBackend" 0 13 (fontified nil)) . -1506) (1506 . 1519) (#("Canvas" 0 6 (face font-lock-type-face fontified t)) . -1506) (undo-tree-id8036 . -6) (undo-tree-id8037 . -1) (undo-tree-id8038 . -2) (undo-tree-id8039 . -2) (undo-tree-id8040 . -3) (undo-tree-id8041 . -3) (undo-tree-id8042 . -4) (undo-tree-id8043 . -4) (undo-tree-id8044 . -5) (undo-tree-id8045 . -5) (undo-tree-id8046 . -6) (undo-tree-id8047 . -6) (undo-tree-id8048 . -6) (undo-tree-id8049 . -6) 1512) nil (25944 33830 693617 0) 0 nil])
([nil nil ((1519 . 1522)) nil (25944 33830 693598 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -1521) (undo-tree-id8032 . -1) (undo-tree-id8033 . -1) (undo-tree-id8034 . -1) (undo-tree-id8035 . -1) 1522) nil (25944 33830 693597 0) 0 nil])
([nil nil ((1521 . 1524)) nil (25944 33830 693592 0) 0 nil])
([nil nil ((1521 . 1524) (#("new" 0 3 (fontified nil)) . 1521) (1521 . 1524) (#("new" 0 3 (fontified t)) . -1521) (undo-tree-id8024 . -3) (undo-tree-id8025 . -1) (undo-tree-id8026 . -2) (undo-tree-id8027 . -2) (undo-tree-id8028 . -3) (undo-tree-id8029 . -3) (undo-tree-id8030 . -3) (undo-tree-id8031 . -3) 1524) nil (25944 33830 693590 0) 0 nil])
([nil nil ((1524 . 1526)) nil (25944 33830 693580 0) 0 nil])
([nil nil ((1525 . 1527)) nil (25944 33830 693580 0) 0 nil])
([nil nil ((1526 . 1532)) nil (25944 33830 693579 0) 0 nil])
([nil nil ((1534 . 1535)) nil (25944 33830 693578 0) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -1534) (undo-tree-id8013 . -1) (undo-tree-id8014 . -1) (undo-tree-id8015 . -1) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) (undo-tree-id8020 . -1) (undo-tree-id8021 . -1) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) 1535) nil (25944 33830 693575 0) 0 nil])
([nil nil ((1534 . 1535)) nil (25944 33830 693553 0) 0 nil])
([nil nil ((1534 . 1536) (t 25944 33830 713843 757000)) nil (25944 33847 360080 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1534) (undo-tree-id8081 . -1) (undo-tree-id8082 . -1) (undo-tree-id8083 . -1) (undo-tree-id8084 . -1) (undo-tree-id8085 . -1) (undo-tree-id8086 . -1) (undo-tree-id8087 . -1) (undo-tree-id8088 . -1) (undo-tree-id8089 . -1) (undo-tree-id8090 . -1) (undo-tree-id8091 . -1) (undo-tree-id8092 . -1) (undo-tree-id8093 . -1) (#("." 0 1 (fontified t)) . -1535) (undo-tree-id8094 . -1) (undo-tree-id8095 . -1) (undo-tree-id8096 . -1) (undo-tree-id8097 . -1) (undo-tree-id8098 . -1) (undo-tree-id8099 . -1) (undo-tree-id8100 . -1) 1536) nil (25944 33847 360078 0) 0 nil])
([nil nil ((1534 . 1536)) nil (25944 33847 360057 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1542 1564 nil nil nil t #s(yas--exit 1565 nil))) #s(yas--exit 1565 nil) 29 nil #s(yas--field 1 1542 1564 nil nil nil t #s(yas--exit 1565 nil)) nil nil)) (1535 . 1546) (#("expect(${1:msg})$0" 0 18 (fontified nil)) . 1535) (1535 . 1553) (#("e" 0 1 (fontified nil)) . 1535) (1535 . 1536) (#("expect(…)" 0 9 (fontified nil)) . -1535) (1535 . 1544) (#("e" 0 1 (fontified t)) . -1535) (undo-tree-id8076 . -1) (undo-tree-id8077 . -1) (undo-tree-id8078 . -1) (undo-tree-id8079 . -1) (undo-tree-id8080 . -1) 1536) nil (25944 33847 360055 0) 0 nil])
([nil nil ((1543 . 1544) (#("msg" 0 3 (fontified nil)) . 1543) (undo-tree-id8075 . -3) (1542 . 1543)) nil (25944 33847 360047 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1542) (undo-tree-id8056 . -1) (undo-tree-id8057 . -1) (undo-tree-id8058 . -1) (undo-tree-id8059 . -1) (undo-tree-id8060 . -1) (undo-tree-id8061 . -1) (undo-tree-id8062 . -1) (undo-tree-id8063 . -1) (undo-tree-id8064 . -1) (undo-tree-id8065 . -1) (undo-tree-id8066 . -1) (undo-tree-id8067 . -1) (undo-tree-id8068 . -1) (#(":" 0 1 (fontified t)) . -1543) (undo-tree-id8069 . -1) (undo-tree-id8070 . -1) (undo-tree-id8071 . -1) (undo-tree-id8072 . -1) (undo-tree-id8073 . -1) (undo-tree-id8074 . -1) 1544) nil (25944 33847 360043 0) 0 nil])
([nil nil ((1542 . 1544)) nil (25944 33847 360015 0) 0 nil])
([nil nil ((1543 . 1548)) nil (25944 33847 360014 0) 0 nil])
([nil nil ((1548 . 1563)) nil (25944 33847 360010 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1535 1565 #s(yas--snippet nil (#s(yas--field 1 1542 1564 nil nil nil t #s(yas--exit 1565 nil))) #s(yas--exit 1565 nil) 29 nil #s(yas--field 1 1542 1564 nil nil nil t #s(yas--exit 1565 nil)) nil nil))) nil (25944 33882 525610 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t)) . -1554) (undo-tree-id8101 . -1) (undo-tree-id8102 . -1) (undo-tree-id8103 . -1) (undo-tree-id8104 . -1) (undo-tree-id8105 . -1) (undo-tree-id8106 . -1) (undo-tree-id8107 . -1) (undo-tree-id8108 . -1) (undo-tree-id8109 . -1) (undo-tree-id8110 . -1) (undo-tree-id8111 . -1) (undo-tree-id8112 . -1) (undo-tree-id8113 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -1555) (undo-tree-id8114 . -1) (undo-tree-id8115 . -1) (undo-tree-id8116 . -1) (undo-tree-id8117 . -1) (undo-tree-id8118 . -1) (undo-tree-id8119 . -1) (undo-tree-id8120 . -1) (undo-tree-id8121 . -1) (undo-tree-id8122 . -1) (undo-tree-id8123 . -1) (undo-tree-id8124 . -1) (undo-tree-id8125 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -1556) (undo-tree-id8126 . -1) (undo-tree-id8127 . -1) (undo-tree-id8128 . -1) (undo-tree-id8129 . -1) (undo-tree-id8130 . -1) (undo-tree-id8131 . -1) (undo-tree-id8132 . -1) (undo-tree-id8133 . -1) (undo-tree-id8134 . -1) (undo-tree-id8135 . -1) (undo-tree-id8136 . -1) 1557 (t 25944 33847 381502 76000)) nil (25944 33882 525606 0) 0 nil])
([nil nil ((1560 . 1566)) nil (25944 33882 525559 0) 0 nil])
([nil nil ((apply -3 1488 1573 undo--wrap-and-run-primitive-undo 1488 1573 ((1492 . 1495) 1569))) nil (25944 33893 67234 0) 0 nil])
([nil nil ((#("    // let backend = CanvasBackend::new(\"canvas\").expect(\"cannot get canvas by id\");" 0 4 (fontified t) 4 7 (face font-lock-comment-delimiter-face fontified t) 7 10 (face font-lock-comment-face fontified t) 10 11 (face font-lock-comment-face fontified t) 11 18 (face font-lock-comment-face fontified t) 18 21 (face font-lock-comment-face fontified t) 21 34 (face font-lock-comment-face fontified t) 34 36 (face font-lock-comment-face fontified t) 36 40 (face font-lock-comment-face fontified t) 40 48 (face font-lock-comment-face fontified t) 48 50 (face font-lock-comment-face fontified t) 50 57 (face font-lock-comment-face fontified t) 57 82 (face font-lock-comment-face fontified t) 82 83 (face font-lock-comment-face fontified t) 83 84 (face font-lock-comment-face fontified t)) . 1488) (undo-tree-id8493 . -84) (t 25944 33893 88938 780000)) nil (25944 33999 941497 0) 0 nil])
([nil nil ((1488 . 1492)) nil (25944 33999 941495 0) 0 nil])
([nil nil ((1492 . 1502)) nil (25944 33999 941494 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1500) (undo-tree-id8491 . -1) (#("e" 0 1 (fontified t)) . -1501) (undo-tree-id8492 . -1) 1502) nil (25944 33999 941492 0) 0 nil])
([nil nil ((1500 . 1512)) nil (25944 33999 941489 0) 0 nil])
([nil nil ((1506 . 1519) (#("Canvas" 0 6 (fontified nil)) . 1506) (1506 . 1512) (#("CanvasBackend" 0 13 (fontified nil)) . -1506) (1506 . 1519) (#("Canvas" 0 6 (face font-lock-type-face fontified t)) . -1506) (undo-tree-id8490 . -6) 1512) nil (25944 33999 941487 0) 0 nil])
([nil nil ((1519 . 1525)) nil (25944 33999 941484 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1540 1565 nil nil nil t #s(yas--exit 1566 nil))) #s(yas--exit 1566 nil) 30 nil #s(yas--field 1 1540 1565 nil nil nil t #s(yas--exit 1566 nil)) nil nil)) (1521 . 1547) (#("with_canvas_object(${1:canvas})$0" 0 33 (fontified nil)) . 1521) (1521 . 1554) (#("with" 0 4 (fontified nil)) . 1521) (1521 . 1525) (#("with_canvas_object(…)" 0 21 (fontified nil)) . -1521) (1521 . 1542) (#("with" 0 4 (fontified t)) . -1521) (undo-tree-id8489 . -4) 1525) nil (25944 33999 941482 0) 0 nil])
([nil nil ((#("canvas" 0 6 (fontified t)) . 1540) (undo-tree-id8488 . -6)) nil (25944 33999 941478 0) 0 nil])
([nil nil ((1540 . 1543)) nil (25944 33999 941476 0) 0 nil])
([nil nil ((1540 . 1550) (#("can" 0 3 (fontified nil)) . 1540) (undo-tree-id8478 . -3) (1540 . 1543) (#("canvas_ref" 0 10 (fontified nil)) . -1540) (undo-tree-id8479 . -10) (1540 . 1550) (#("can" 0 3 (fontified t)) . -1540) (undo-tree-id8480 . -3) (undo-tree-id8481 . -3) (undo-tree-id8482 . -3) (undo-tree-id8483 . -2) (undo-tree-id8484 . -3) (undo-tree-id8485 . -3) (undo-tree-id8486 . -3) (undo-tree-id8487 . -3) 1543) nil (25944 33999 941474 0) 0 nil])
([nil nil ((1550 . 1551)) nil (25944 33999 941462 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1551 1561 #s(yas--snippet nil nil #s(yas--exit 1561 nil) 31 nil nil #s(yas--field 1 1540 1565 nil nil nil t #s(yas--exit 1566 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1561 nil) 31 nil nil #s(yas--field 1 1540 1565 nil nil nil t #s(yas--exit 1566 nil)) nil)) (1551 . 1561) (#("to_owned()$0" 0 12 (fontified nil)) . 1551) (undo-tree-id8476 . -12) (1551 . 1563) (#("to_owned() (as ToOwned)" 0 23 (fontified nil)) . -1551) (undo-tree-id8477 . -23) (1551 . 1574)) nil (25944 33999 941460 0) 0 nil])
([nil nil ((1561 . 1563)) nil (25944 33999 941456 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1551) (undo-tree-id8154 . -1) (undo-tree-id8155 . -1) (undo-tree-id8156 . -1) (undo-tree-id8157 . -1) (undo-tree-id8158 . -1) (undo-tree-id8159 . -1) (undo-tree-id8160 . -1) (undo-tree-id8161 . -1) (undo-tree-id8162 . -1) (undo-tree-id8163 . -1) (undo-tree-id8164 . -1) (undo-tree-id8165 . -1) (undo-tree-id8166 . -1) (undo-tree-id8167 . -1) (undo-tree-id8168 . -1) (undo-tree-id8169 . -1) (undo-tree-id8170 . -1) (undo-tree-id8171 . -1) (undo-tree-id8172 . -1) (undo-tree-id8173 . -1) (undo-tree-id8174 . -1) (undo-tree-id8175 . -1) (undo-tree-id8176 . -1) (undo-tree-id8177 . -1) (undo-tree-id8178 . -1) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) (undo-tree-id8181 . -1) (undo-tree-id8182 . -1) (undo-tree-id8183 . -1) (undo-tree-id8184 . -1) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (#("o" 0 1 (fontified t)) . -1552) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (undo-tree-id8193 . -1) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) (undo-tree-id8196 . -1) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) (undo-tree-id8202 . -1) (undo-tree-id8203 . -1) (undo-tree-id8204 . -1) (undo-tree-id8205 . -1) (undo-tree-id8206 . -1) (undo-tree-id8207 . -1) (undo-tree-id8208 . -1) (undo-tree-id8209 . -1) (undo-tree-id8210 . -1) (undo-tree-id8211 . -1) (undo-tree-id8212 . -1) (undo-tree-id8213 . -1) (undo-tree-id8214 . -1) (undo-tree-id8215 . -1) (undo-tree-id8216 . -1) (undo-tree-id8217 . -1) (undo-tree-id8218 . -1) (undo-tree-id8219 . -1) (undo-tree-id8220 . -1) (undo-tree-id8221 . -1) (undo-tree-id8222 . -1) (#("_" 0 1 (fontified t)) . -1553) (undo-tree-id8223 . -1) (undo-tree-id8224 . -1) (undo-tree-id8225 . -1) (undo-tree-id8226 . -1) (undo-tree-id8227 . -1) (undo-tree-id8228 . -1) (undo-tree-id8229 . -1) (undo-tree-id8230 . -1) (undo-tree-id8231 . -1) (undo-tree-id8232 . -1) (undo-tree-id8233 . -1) (undo-tree-id8234 . -1) (undo-tree-id8235 . -1) (undo-tree-id8236 . -1) (undo-tree-id8237 . -1) (undo-tree-id8238 . -1) (undo-tree-id8239 . -1) (undo-tree-id8240 . -1) (undo-tree-id8241 . -1) (undo-tree-id8242 . -1) (undo-tree-id8243 . -1) (undo-tree-id8244 . -1) (undo-tree-id8245 . -1) (undo-tree-id8246 . -1) (undo-tree-id8247 . -1) (undo-tree-id8248 . -1) (undo-tree-id8249 . -1) (undo-tree-id8250 . -1) (undo-tree-id8251 . -1) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (#("o" 0 1 (fontified t)) . -1554) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) (undo-tree-id8260 . -1) (undo-tree-id8261 . -1) (undo-tree-id8262 . -1) (undo-tree-id8263 . -1) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (#("w" 0 1 (fontified t)) . -1555) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (undo-tree-id8290 . -1) (undo-tree-id8291 . -1) (undo-tree-id8292 . -1) (undo-tree-id8293 . -1) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (undo-tree-id8302 . -1) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) (undo-tree-id8309 . -1) (undo-tree-id8310 . -1) (undo-tree-id8311 . -1) (undo-tree-id8312 . -1) (undo-tree-id8313 . -1) (undo-tree-id8314 . -1) (undo-tree-id8315 . -1) (undo-tree-id8316 . -1) (undo-tree-id8317 . -1) (undo-tree-id8318 . -1) (#("n" 0 1 (fontified t)) . -1556) (undo-tree-id8319 . -1) (undo-tree-id8320 . -1) (undo-tree-id8321 . -1) (undo-tree-id8322 . -1) (undo-tree-id8323 . -1) (undo-tree-id8324 . -1) (undo-tree-id8325 . -1) (undo-tree-id8326 . -1) (undo-tree-id8327 . -1) (undo-tree-id8328 . -1) (undo-tree-id8329 . -1) (undo-tree-id8330 . -1) (undo-tree-id8331 . -1) (undo-tree-id8332 . -1) (undo-tree-id8333 . -1) (undo-tree-id8334 . -1) (undo-tree-id8335 . -1) (undo-tree-id8336 . -1) (undo-tree-id8337 . -1) (undo-tree-id8338 . -1) (undo-tree-id8339 . -1) (undo-tree-id8340 . -1) (undo-tree-id8341 . -1) (undo-tree-id8342 . -1) (undo-tree-id8343 . -1) (undo-tree-id8344 . -1) (undo-tree-id8345 . -1) (undo-tree-id8346 . -1) (undo-tree-id8347 . -1) (undo-tree-id8348 . -1) (#("e" 0 1 (fontified t)) . -1557) (undo-tree-id8349 . -1) (undo-tree-id8350 . -1) (undo-tree-id8351 . -1) (undo-tree-id8352 . -1) (undo-tree-id8353 . -1) (undo-tree-id8354 . -1) (undo-tree-id8355 . -1) (undo-tree-id8356 . -1) (undo-tree-id8357 . -1) (undo-tree-id8358 . -1) (undo-tree-id8359 . -1) (undo-tree-id8360 . -1) (undo-tree-id8361 . -1) (undo-tree-id8362 . -1) (undo-tree-id8363 . -1) (undo-tree-id8364 . -1) (undo-tree-id8365 . -1) (undo-tree-id8366 . -1) (undo-tree-id8367 . -1) (undo-tree-id8368 . -1) (undo-tree-id8369 . -1) (undo-tree-id8370 . -1) (undo-tree-id8371 . -1) (undo-tree-id8372 . -1) (undo-tree-id8373 . -1) (undo-tree-id8374 . -1) (undo-tree-id8375 . -1) (undo-tree-id8376 . -1) (undo-tree-id8377 . -1) (#("d" 0 1 (fontified t)) . -1558) (undo-tree-id8378 . -1) (undo-tree-id8379 . -1) (undo-tree-id8380 . -1) (undo-tree-id8381 . -1) (undo-tree-id8382 . -1) (undo-tree-id8383 . -1) (undo-tree-id8384 . -1) (undo-tree-id8385 . -1) (undo-tree-id8386 . -1) (undo-tree-id8387 . -1) (undo-tree-id8388 . -1) (undo-tree-id8389 . -1) (undo-tree-id8390 . -1) (undo-tree-id8391 . -1) (undo-tree-id8392 . -1) (undo-tree-id8393 . -1) (undo-tree-id8394 . -1) (undo-tree-id8395 . -1) (undo-tree-id8396 . -1) (undo-tree-id8397 . -1) (undo-tree-id8398 . -1) (undo-tree-id8399 . -1) (undo-tree-id8400 . -1) (undo-tree-id8401 . -1) (undo-tree-id8402 . -1) (undo-tree-id8403 . -1) (undo-tree-id8404 . -1) (undo-tree-id8405 . -1) (#("(" 0 1 (fontified t)) . -1559) (undo-tree-id8406 . -1) (undo-tree-id8407 . -1) (undo-tree-id8408 . -1) (undo-tree-id8409 . -1) (undo-tree-id8410 . -1) (undo-tree-id8411 . -1) (undo-tree-id8412 . -1) (undo-tree-id8413 . -1) (undo-tree-id8414 . -1) (undo-tree-id8415 . -1) (undo-tree-id8416 . -1) (undo-tree-id8417 . -1) (undo-tree-id8418 . -1) (undo-tree-id8419 . -1) (undo-tree-id8420 . -1) (undo-tree-id8421 . -1) (undo-tree-id8422 . -1) (undo-tree-id8423 . -1) (undo-tree-id8424 . -1) (undo-tree-id8425 . -1) (undo-tree-id8426 . -1) (undo-tree-id8427 . -1) (undo-tree-id8428 . -1) (undo-tree-id8429 . -1) (undo-tree-id8430 . -1) (undo-tree-id8431 . -1) (undo-tree-id8432 . -1) (#(")" 0 1 (fontified t)) . -1560) (undo-tree-id8433 . -1) (undo-tree-id8434 . -1) (undo-tree-id8435 . -1) (undo-tree-id8436 . -1) (undo-tree-id8437 . -1) (undo-tree-id8438 . -1) (undo-tree-id8439 . -1) (undo-tree-id8440 . -1) (undo-tree-id8441 . -1) (undo-tree-id8442 . -1) (undo-tree-id8443 . -1) (undo-tree-id8444 . -1) (undo-tree-id8445 . -1) (undo-tree-id8446 . -1) (undo-tree-id8447 . -1) (undo-tree-id8448 . -1) (undo-tree-id8449 . -1) (undo-tree-id8450 . -1) (undo-tree-id8451 . -1) (undo-tree-id8452 . -1) (undo-tree-id8453 . -1) (undo-tree-id8454 . -1) (#("." 0 1 (fontified t)) . -1561) (undo-tree-id8455 . -1) (undo-tree-id8456 . -1) (undo-tree-id8457 . -1) (undo-tree-id8458 . -1) (undo-tree-id8459 . -1) (undo-tree-id8460 . -1) (undo-tree-id8461 . -1) (undo-tree-id8462 . -1) (undo-tree-id8463 . -1) (undo-tree-id8464 . -1) (undo-tree-id8465 . -1) (undo-tree-id8466 . -1) (undo-tree-id8467 . -1) (undo-tree-id8468 . -1) (#("g" 0 1 (fontified t)) . -1562) (undo-tree-id8469 . -1) (undo-tree-id8470 . -1) (undo-tree-id8471 . -1) (undo-tree-id8472 . -1) (undo-tree-id8473 . -1) (undo-tree-id8474 . -1) (undo-tree-id8475 . -1) 1563) nil (25944 33999 941440 0) 0 nil])
([nil nil ((1551 . 1552)) nil (25944 33999 941131 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1551 1556 #s(yas--snippet nil nil #s(yas--exit 1556 nil) 32 nil nil #s(yas--field 1 1540 1565 nil nil nil t #s(yas--exit 1566 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1556 nil) 32 nil nil #s(yas--field 1 1540 1565 nil nil nil t #s(yas--exit 1566 nil)) nil)) (1551 . 1556) (#("get()$0" 0 7 (fontified nil)) . 1551) (undo-tree-id8146 . -7) (1551 . 1558) (#("g" 0 1 (fontified nil)) . 1551) (undo-tree-id8147 . -1) (1551 . 1552) (#("get()" 0 5 (fontified nil)) . -1551) (undo-tree-id8148 . -5) (1551 . 1556) (#("g" 0 1 (fontified t)) . -1551) (undo-tree-id8149 . -1) (undo-tree-id8150 . -1) (undo-tree-id8151 . -1) (undo-tree-id8152 . -1) (undo-tree-id8153 . -1) 1552) nil (25944 33999 941129 0) 0 nil])
([nil nil ((1556 . 1558)) nil (25944 33999 941117 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1557 1565 #s(yas--snippet nil nil #s(yas--exit 1565 nil) 33 nil nil #s(yas--field 1 1540 1565 nil nil nil t #s(yas--exit 1566 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1565 nil) 33 nil nil #s(yas--field 1 1540 1565 nil nil nil t #s(yas--exit 1566 nil)) nil)) (1557 . 1565) (#("unwrap()$0" 0 10 (fontified nil)) . 1557) (undo-tree-id8137 . -10) (1557 . 1567) (#("u" 0 1 (fontified nil)) . 1557) (undo-tree-id8138 . -1) (1557 . 1558) (#("unwrap()" 0 8 (fontified nil)) . -1557) (undo-tree-id8139 . -8) (1557 . 1565) (#("u" 0 1 (fontified t)) . -1557) (undo-tree-id8140 . -1) (undo-tree-id8141 . -1) (undo-tree-id8142 . -1) (undo-tree-id8143 . -1) (undo-tree-id8144 . -1) (undo-tree-id8145 . -1) 1558) nil (25944 33999 941112 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1521 1566 #s(yas--snippet nil (#s(yas--field 1 1540 1565 nil nil nil t #s(yas--exit 1566 nil))) #s(yas--exit 1566 nil) 30 nil #s(yas--field 1 1540 1565 nil nil nil t #s(yas--exit 1566 nil)) nil nil))) nil (25944 34144 515512 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1565) (undo-tree-id9611 . -1) (undo-tree-id9612 . -1) (undo-tree-id9613 . -1) (undo-tree-id9614 . -1) (undo-tree-id9615 . -1) (undo-tree-id9616 . -1) (undo-tree-id9617 . -1) (undo-tree-id9618 . -1) (undo-tree-id9619 . -1) (undo-tree-id9620 . -1) (undo-tree-id9621 . -1) (undo-tree-id9622 . -1) 1566 (t 25944 33999 963552 239000)) nil (25944 34175 723741 0) 0 nil] [nil nil ((#("    let canvas_ref = create_node_ref::<html::Canvas>();
" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 18 (face font-lock-variable-name-face fontified t) 18 21 (fontified t) 21 36 (fontified t) 36 39 (fontified t) 39 43 (face font-lock-constant-face fontified t) 43 45 (fontified t) 45 51 (face font-lock-type-face fontified t) 51 56 (fontified t)) . -1432) (undo-tree-id8559 . -56) (undo-tree-id8560 . -34) (undo-tree-id8561 . -31) (undo-tree-id8562 . -56) (undo-tree-id8563 . -56) (undo-tree-id8564 . -56) (undo-tree-id8565 . -39) 1488 (t 25944 33999 963552 239000)) ((1432 . 1488)) (25944 34144 87017 0) 0 nil])
([nil nil ((1565 . 1566)) nil (25944 34175 723728 0) 0 nil])
([nil nil ((1432 . 1436) (#("    " 0 4 (fontified nil)) . 1431) (1431 . 1435) (1431 . 1432)) ((#("
" 0 1 (fontified nil)) . 1431) (undo-tree-id9295 . -1) (undo-tree-id9296 . -1) (undo-tree-id9297 . -1) (undo-tree-id9298 . -1) (undo-tree-id9299 . -1) (undo-tree-id9300 . -1) (undo-tree-id9301 . -1) (undo-tree-id9302 . -1) (undo-tree-id9303 . -1) (undo-tree-id9304 . -1) (undo-tree-id9305 . -1) (undo-tree-id9306 . -1) (undo-tree-id9307 . -1) (undo-tree-id9308 . -1) (undo-tree-id9309 . -1) (undo-tree-id9310 . -1) (undo-tree-id9311 . -1) (undo-tree-id9312 . -1) (undo-tree-id9313 . -1) (undo-tree-id9314 . -1) (undo-tree-id9315 . -1) (undo-tree-id9316 . -1) (undo-tree-id9317 . -1) (undo-tree-id9318 . -1) (undo-tree-id9319 . -1) (undo-tree-id9320 . -1) (undo-tree-id9321 . -1) (undo-tree-id9322 . -1) (undo-tree-id9323 . -1) (undo-tree-id9324 . -1) (undo-tree-id9325 . -1) (undo-tree-id9326 . -1) (undo-tree-id9327 . -1) (undo-tree-id9328 . -1) (undo-tree-id9329 . -1) (undo-tree-id9330 . -1) (undo-tree-id9331 . -1) (undo-tree-id9332 . -1) (undo-tree-id9333 . -1) (undo-tree-id9334 . -1) (undo-tree-id9335 . -1) (undo-tree-id9336 . -1) (undo-tree-id9337 . -1) (undo-tree-id9338 . -1) (undo-tree-id9339 . -1) (undo-tree-id9340 . -1) (undo-tree-id9341 . -1) (undo-tree-id9342 . -1) (undo-tree-id9343 . -1) (undo-tree-id9344 . -1) (undo-tree-id9345 . -1) (undo-tree-id9346 . -1) (undo-tree-id9347 . -1) (undo-tree-id9348 . -1) (undo-tree-id9349 . -1) (undo-tree-id9350 . -1) (undo-tree-id9351 . -1) (undo-tree-id9352 . -1) (undo-tree-id9353 . -1) (undo-tree-id9354 . -1) (undo-tree-id9355 . -1) (undo-tree-id9356 . -1) (undo-tree-id9357 . -1) (undo-tree-id9358 . -1) (undo-tree-id9359 . -1) (undo-tree-id9360 . -1) (undo-tree-id9361 . -1) (undo-tree-id9362 . -1) (undo-tree-id9363 . -1) (undo-tree-id9364 . -1) (undo-tree-id9365 . -1) (undo-tree-id9366 . -1) (undo-tree-id9367 . -1) (undo-tree-id9368 . -1) (undo-tree-id9369 . -1) (undo-tree-id9370 . -1) (undo-tree-id9371 . -1) (undo-tree-id9372 . -1) (undo-tree-id9373 . -1) (undo-tree-id9374 . -1) (undo-tree-id9375 . -1) (undo-tree-id9376 . -1) (undo-tree-id9377 . -1) (undo-tree-id9378 . -1) (undo-tree-id9379 . -1) (undo-tree-id9380 . -1) (undo-tree-id9381 . -1) (undo-tree-id9382 . -1) (undo-tree-id9383 . -1) (undo-tree-id9384 . -1) (undo-tree-id9385 . -1) (undo-tree-id9386 . -1) (undo-tree-id9387 . -1) (undo-tree-id9388 . -1) (undo-tree-id9389 . -1) (undo-tree-id9390 . -1) (undo-tree-id9391 . -1) (undo-tree-id9392 . -1) (undo-tree-id9393 . -1) (undo-tree-id9394 . -1) (undo-tree-id9395 . -1) (undo-tree-id9396 . -1) (undo-tree-id9397 . -1) (undo-tree-id9398 . -1) (undo-tree-id9399 . -1) (undo-tree-id9400 . -1) (undo-tree-id9401 . -1) (undo-tree-id9402 . -1) (undo-tree-id9403 . -1) (undo-tree-id9404 . -1) (undo-tree-id9405 . -1) (undo-tree-id9406 . -1) (undo-tree-id9407 . -1) (undo-tree-id9408 . -1) (undo-tree-id9409 . -1) (undo-tree-id9410 . -1) (undo-tree-id9411 . -1) (undo-tree-id9412 . -1) (undo-tree-id9413 . -1) (undo-tree-id9414 . -1) (undo-tree-id9415 . -1) (undo-tree-id9416 . -1) (undo-tree-id9417 . -1) (undo-tree-id9418 . -1) (undo-tree-id9419 . -1) (undo-tree-id9420 . -1) (undo-tree-id9421 . -1) (undo-tree-id9422 . -1) (undo-tree-id9423 . -1) (undo-tree-id9424 . -1) (undo-tree-id9425 . -1) (undo-tree-id9426 . -1) (#("    " 0 4 (fontified nil)) . 1431) (1431 . 1435) (#("    " 0 4 (fontified t)) . 1432) (undo-tree-id9427 . -4) (undo-tree-id9428 . -4) (undo-tree-id9429 . -4) (undo-tree-id9430 . -4) (undo-tree-id9431 . -4) (undo-tree-id9432 . -4) (undo-tree-id9433 . -4) (undo-tree-id9434 . -4) (undo-tree-id9435 . -4) (undo-tree-id9436 . -4) (undo-tree-id9437 . -4) (undo-tree-id9438 . -4) (undo-tree-id9439 . -4) (undo-tree-id9440 . -4) (undo-tree-id9441 . -4) (undo-tree-id9442 . -4) (undo-tree-id9443 . -4) (undo-tree-id9444 . -4) (undo-tree-id9445 . -4) (undo-tree-id9446 . -4) (undo-tree-id9447 . -4) (undo-tree-id9448 . -4) (undo-tree-id9449 . -4) (undo-tree-id9450 . -4) (undo-tree-id9451 . -4) (undo-tree-id9452 . -4) (undo-tree-id9453 . -4) (undo-tree-id9454 . -4) (undo-tree-id9455 . -4) (undo-tree-id9456 . -4) (undo-tree-id9457 . -4) (undo-tree-id9458 . -4) (undo-tree-id9459 . -4) (undo-tree-id9460 . -4) (undo-tree-id9461 . -4) (undo-tree-id9462 . -4) (undo-tree-id9463 . -4) (undo-tree-id9464 . -4) (undo-tree-id9465 . -4) (undo-tree-id9466 . -4) (undo-tree-id9467 . -4) (undo-tree-id9468 . -4) (undo-tree-id9469 . -4) (undo-tree-id9470 . -4) (undo-tree-id9471 . -4) (undo-tree-id9472 . -4) (undo-tree-id9473 . -4) (undo-tree-id9474 . -4) (undo-tree-id9475 . -4) (undo-tree-id9476 . -4) (undo-tree-id9477 . -4) (undo-tree-id9478 . -4) (undo-tree-id9479 . -4) (undo-tree-id9480 . -4) (undo-tree-id9481 . -4) (undo-tree-id9482 . -4) (undo-tree-id9483 . -4) (undo-tree-id9484 . -4) (undo-tree-id9485 . -4) (undo-tree-id9486 . -4) (undo-tree-id9487 . -4) (undo-tree-id9488 . -4) (undo-tree-id9489 . -4) (undo-tree-id9490 . -4) (undo-tree-id9491 . -4) (undo-tree-id9492 . -4) (undo-tree-id9493 . -4) (undo-tree-id9494 . -4) (undo-tree-id9495 . -4) (undo-tree-id9496 . -4) (undo-tree-id9497 . -4) (undo-tree-id9498 . -4) (undo-tree-id9499 . -4) (undo-tree-id9500 . -4) (undo-tree-id9501 . -4) (undo-tree-id9502 . -4) (undo-tree-id9503 . -4) (undo-tree-id9504 . -4) (undo-tree-id9505 . -4) (undo-tree-id9506 . -4) (undo-tree-id9507 . -4) (undo-tree-id9508 . -4) (undo-tree-id9509 . -4) (undo-tree-id9510 . -4) (undo-tree-id9511 . -4) (undo-tree-id9512 . -4) (undo-tree-id9513 . -4) (undo-tree-id9514 . -4) (undo-tree-id9515 . -4) (undo-tree-id9516 . -4) (undo-tree-id9517 . -4) (undo-tree-id9518 . -4) (undo-tree-id9519 . -4) (undo-tree-id9520 . -4) (undo-tree-id9521 . -4) (undo-tree-id9522 . -4) (undo-tree-id9523 . -4) (undo-tree-id9524 . -4) (undo-tree-id9525 . -4) (undo-tree-id9526 . -4) (undo-tree-id9527 . -4) (undo-tree-id9528 . -4) (undo-tree-id9529 . -4) (undo-tree-id9530 . -4) (undo-tree-id9531 . -4) (undo-tree-id9532 . -4) (undo-tree-id9533 . -4) (undo-tree-id9534 . -4) (undo-tree-id9535 . -4) (undo-tree-id9536 . -4) (undo-tree-id9537 . -4) (undo-tree-id9538 . -4) (undo-tree-id9539 . -4) (undo-tree-id9540 . -4) (undo-tree-id9541 . -4) (undo-tree-id9542 . -4) (undo-tree-id9543 . -4) (undo-tree-id9544 . -4) (undo-tree-id9545 . -4) (undo-tree-id9546 . -4) (undo-tree-id9547 . -4)) (25944 34143 727831 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1565) (undo-tree-id9596 . -1) (undo-tree-id9597 . -1) (undo-tree-id9598 . -1) (undo-tree-id9599 . -1) (undo-tree-id9600 . -1) (undo-tree-id9601 . -1) (undo-tree-id9602 . -1) (undo-tree-id9603 . -1) (undo-tree-id9604 . -1) (undo-tree-id9605 . -1) (undo-tree-id9606 . -1) (undo-tree-id9607 . -1) (undo-tree-id9608 . -1) (undo-tree-id9609 . -1) (undo-tree-id9610 . -1) 1566) nil (25944 34175 723726 0) 0 nil])
([nil nil ((1436 . 1440)) ((#("let " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . 1436) (undo-tree-id9175 . -4) (undo-tree-id9176 . -4) (undo-tree-id9177 . -4) (undo-tree-id9178 . -4) (undo-tree-id9179 . -4) (undo-tree-id9180 . -4) (undo-tree-id9181 . -4) (undo-tree-id9182 . -4) (undo-tree-id9183 . -4) (undo-tree-id9184 . -4) (undo-tree-id9185 . -4) (undo-tree-id9186 . -4) (undo-tree-id9187 . -4) (undo-tree-id9188 . -4) (undo-tree-id9189 . -4) (undo-tree-id9190 . -4) (undo-tree-id9191 . -4) (undo-tree-id9192 . -4) (undo-tree-id9193 . -4) (undo-tree-id9194 . -4) (undo-tree-id9195 . -4) (undo-tree-id9196 . -4) (undo-tree-id9197 . -4) (undo-tree-id9198 . -4) (undo-tree-id9199 . -4) (undo-tree-id9200 . -4) (undo-tree-id9201 . -4) (undo-tree-id9202 . -4) (undo-tree-id9203 . -4) (undo-tree-id9204 . -4) (undo-tree-id9205 . -4) (undo-tree-id9206 . -4) (undo-tree-id9207 . -4) (undo-tree-id9208 . -4) (undo-tree-id9209 . -4) (undo-tree-id9210 . -4) (undo-tree-id9211 . -4) (undo-tree-id9212 . -4) (undo-tree-id9213 . -4) (undo-tree-id9214 . -4) (undo-tree-id9215 . -4) (undo-tree-id9216 . -4) (undo-tree-id9217 . -4) (undo-tree-id9218 . -4) (undo-tree-id9219 . -4) (undo-tree-id9220 . -4) (undo-tree-id9221 . -4) (undo-tree-id9222 . -4) (undo-tree-id9223 . -4) (undo-tree-id9224 . -4) (undo-tree-id9225 . -4) (undo-tree-id9226 . -4) (undo-tree-id9227 . -4) (undo-tree-id9228 . -4) (undo-tree-id9229 . -4) (undo-tree-id9230 . -4) (undo-tree-id9231 . -4) (undo-tree-id9232 . -4) (undo-tree-id9233 . -4) (undo-tree-id9234 . -4) (undo-tree-id9235 . -4) (undo-tree-id9236 . -4) (undo-tree-id9237 . -4) (undo-tree-id9238 . -4) (undo-tree-id9239 . -4) (undo-tree-id9240 . -4) (undo-tree-id9241 . -4) (undo-tree-id9242 . -4) (undo-tree-id9243 . -4) (undo-tree-id9244 . -4) (undo-tree-id9245 . -4) (undo-tree-id9246 . -4) (undo-tree-id9247 . -4) (undo-tree-id9248 . -4) (undo-tree-id9249 . -4) (undo-tree-id9250 . -4) (undo-tree-id9251 . -4) (undo-tree-id9252 . -4) (undo-tree-id9253 . -4) (undo-tree-id9254 . -4) (undo-tree-id9255 . -4) (undo-tree-id9256 . -4) (undo-tree-id9257 . -4) (undo-tree-id9258 . -4) (undo-tree-id9259 . -4) (undo-tree-id9260 . -4) (undo-tree-id9261 . -4) (undo-tree-id9262 . -4) (undo-tree-id9263 . -4) (undo-tree-id9264 . -4) (undo-tree-id9265 . -4) (undo-tree-id9266 . -4) (undo-tree-id9267 . -4) (undo-tree-id9268 . -4) (undo-tree-id9269 . -4) (undo-tree-id9270 . -4) (undo-tree-id9271 . -4) (undo-tree-id9272 . -4) (undo-tree-id9273 . -4) (undo-tree-id9274 . -4) (undo-tree-id9275 . -4) (undo-tree-id9276 . -4) (undo-tree-id9277 . -4) (undo-tree-id9278 . -4) (undo-tree-id9279 . -4) (undo-tree-id9280 . -4) (undo-tree-id9281 . -4) (undo-tree-id9282 . -4) (undo-tree-id9283 . -4) (undo-tree-id9284 . -4) (undo-tree-id9285 . -4) (undo-tree-id9286 . -4) (undo-tree-id9287 . -4) (undo-tree-id9288 . -4) (undo-tree-id9289 . -4) (undo-tree-id9290 . -4) (undo-tree-id9291 . -4) (undo-tree-id9292 . -4) (undo-tree-id9293 . -4) (undo-tree-id9294 . -4)) (25944 34143 405072 0) 0 nil])
([nil nil ((#("    let backend = CanvasBackend::with_canvas_object(canvas_ref.get().unwrap()" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 15 (face font-lock-variable-name-face fontified t) 15 18 (fontified t) 18 31 (face font-lock-type-face fontified t) 31 33 (fontified t) 33 52 (fontified t) 52 63 (fontified t) 63 69 (fontified t) 69 77 (fontified t)) . 1488) (undo-tree-id9548 . -73) (undo-tree-id9549 . -64) (undo-tree-id9550 . -77) (undo-tree-id9551 . -77) (undo-tree-id9552 . -77) (undo-tree-id9553 . -77) (undo-tree-id9554 . -77) (undo-tree-id9555 . -77) (undo-tree-id9556 . -77) (undo-tree-id9557 . -77) (undo-tree-id9558 . -77) (undo-tree-id9559 . -77) (undo-tree-id9560 . -77) (undo-tree-id9561 . -77) (undo-tree-id9562 . -77) (undo-tree-id9563 . -77) (undo-tree-id9564 . -77) (undo-tree-id9565 . -77) (undo-tree-id9566 . -77) (undo-tree-id9567 . -77) (undo-tree-id9568 . -77) (undo-tree-id9569 . -77) (undo-tree-id9570 . -77) (undo-tree-id9571 . -77) (undo-tree-id9572 . -77) (undo-tree-id9573 . -77) (undo-tree-id9574 . -77) (undo-tree-id9575 . -77) (undo-tree-id9576 . -77) (undo-tree-id9577 . -77) (undo-tree-id9578 . -77) (undo-tree-id9579 . -77) (undo-tree-id9580 . -77) (undo-tree-id9581 . -77) (undo-tree-id9582 . -77) (undo-tree-id9583 . -77) (undo-tree-id9584 . -77) (undo-tree-id9585 . -77) (undo-tree-id9586 . -77) (undo-tree-id9587 . -77) (undo-tree-id9588 . -77) (undo-tree-id9589 . -77) (undo-tree-id9590 . -77) (undo-tree-id9591 . -77) (undo-tree-id9592 . -77) (undo-tree-id9593 . -77) (undo-tree-id9594 . -77) (undo-tree-id9595 . -77)) nil (25944 34175 723707 0) 0 nil])
([nil nil ((1440 . 1445)) ((#("canva" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t)) . 1440) (undo-tree-id9173 . -5) (undo-tree-id9174 . -5)) (25944 34143 19240 0) 0 nil])
([nil nil ((1488 . 1492)) nil (25944 34175 723648 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-variable-name-face fontified t)) . -1440) (undo-tree-id8554 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -1441) (undo-tree-id8555 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -1442) (undo-tree-id8556 . -1) (#("v" 0 1 (face font-lock-variable-name-face fontified t)) . -1443) (undo-tree-id8557 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -1444) (undo-tree-id8558 . -1) 1445) ((1440 . 1445)) (25944 34142 642079 0) 0 nil])
([nil nil ((1492 . 1495) (t 25944 34175 747898 789000)) nil (25944 34324 437357 0) 0 nil])
([nil nil ((1440 . 1446)) ((#("elemen" 0 6 (face font-lock-variable-name-face fontified t)) . 1440) (undo-tree-id9056 . -6) (undo-tree-id9057 . -6) (undo-tree-id9058 . -6) (undo-tree-id9059 . -6) (undo-tree-id9060 . -6) (undo-tree-id9061 . -6) (undo-tree-id9062 . -6) (undo-tree-id9063 . -6) (undo-tree-id9064 . -6) (undo-tree-id9065 . -6) (undo-tree-id9066 . -6) (undo-tree-id9067 . -6) (undo-tree-id9068 . -6) (undo-tree-id9069 . -6) (undo-tree-id9070 . -6) (undo-tree-id9071 . -6) (undo-tree-id9072 . -6) (undo-tree-id9073 . -6) (undo-tree-id9074 . -6) (undo-tree-id9075 . -6) (undo-tree-id9076 . -6) (undo-tree-id9077 . -6) (undo-tree-id9078 . -6) (undo-tree-id9079 . -6) (undo-tree-id9080 . -6) (undo-tree-id9081 . -6) (undo-tree-id9082 . -6) (undo-tree-id9083 . -6) (undo-tree-id9084 . -6) (undo-tree-id9085 . -6) (undo-tree-id9086 . -6) (undo-tree-id9087 . -6) (undo-tree-id9088 . -6) (undo-tree-id9089 . -6) (undo-tree-id9090 . -6) (undo-tree-id9091 . -6) (undo-tree-id9092 . -6) (undo-tree-id9093 . -6) (undo-tree-id9094 . -6) (undo-tree-id9095 . -6) (undo-tree-id9096 . -6) (undo-tree-id9097 . -6) (undo-tree-id9098 . -6) (undo-tree-id9099 . -6) (undo-tree-id9100 . -6) (undo-tree-id9101 . -6) (undo-tree-id9102 . -6) (undo-tree-id9103 . -6) (undo-tree-id9104 . -6) (undo-tree-id9105 . -6) (undo-tree-id9106 . -6) (undo-tree-id9107 . -6) (undo-tree-id9108 . -6) (undo-tree-id9109 . -6) (undo-tree-id9110 . -6) (undo-tree-id9111 . -6) (undo-tree-id9112 . -6) (undo-tree-id9113 . -6) (undo-tree-id9114 . -6) (undo-tree-id9115 . -6) (undo-tree-id9116 . -6) (undo-tree-id9117 . -6) (undo-tree-id9118 . -6) (undo-tree-id9119 . -6) (undo-tree-id9120 . -6) (undo-tree-id9121 . -6) (undo-tree-id9122 . -6) (undo-tree-id9123 . -6) (undo-tree-id9124 . -6) (undo-tree-id9125 . -6) (undo-tree-id9126 . -6) (undo-tree-id9127 . -6) (undo-tree-id9128 . -6) (undo-tree-id9129 . -6) (undo-tree-id9130 . -6) (undo-tree-id9131 . -6) (undo-tree-id9132 . -6) (undo-tree-id9133 . -6) (undo-tree-id9134 . -6) (undo-tree-id9135 . -6) (undo-tree-id9136 . -6) (undo-tree-id9137 . -6) (undo-tree-id9138 . -6) (undo-tree-id9139 . -6) (undo-tree-id9140 . -6) (undo-tree-id9141 . -6) (undo-tree-id9142 . -6) (undo-tree-id9143 . -6) (undo-tree-id9144 . -6) (undo-tree-id9145 . -6) (undo-tree-id9146 . -6) (undo-tree-id9147 . -6) (undo-tree-id9148 . -6) (undo-tree-id9149 . -6) (undo-tree-id9150 . -6) (undo-tree-id9151 . -6) (undo-tree-id9152 . -6) (undo-tree-id9153 . -6) (undo-tree-id9154 . -6) (undo-tree-id9155 . -6) (undo-tree-id9156 . -6) (undo-tree-id9157 . -6) (undo-tree-id9158 . -6) (undo-tree-id9159 . -6) (undo-tree-id9160 . -6) (undo-tree-id9161 . -6) (undo-tree-id9162 . -6) (undo-tree-id9163 . -6) (undo-tree-id9164 . -6) (undo-tree-id9165 . -6) (undo-tree-id9166 . -6) (undo-tree-id9167 . -6) (undo-tree-id9168 . -6) (undo-tree-id9169 . -6) (undo-tree-id9170 . -6) (undo-tree-id9171 . -6) (undo-tree-id9172 . -6)) (25944 34142 325847 0) 0 nil])
([nil nil ((1492 . 1502) (#("can" 0 3 (fontified nil)) . 1492) (1492 . 1495) (#("canvas_ref" 0 10 (fontified nil)) . -1492) (1492 . 1502) (#("can" 0 3 (fontified t)) . -1492) (undo-tree-id10217 . -1) (undo-tree-id10218 . -3) (undo-tree-id10219 . -1) (undo-tree-id10220 . -2) (undo-tree-id10221 . -2) (undo-tree-id10222 . -3) (undo-tree-id10223 . -3) (undo-tree-id10224 . -3) (undo-tree-id10225 . -3) 1495) nil (25944 34324 437355 0) 0 nil])
([nil nil ((1446 . 1448)) ((#("t " 0 1 (face font-lock-variable-name-face fontified t) 1 2 (fontified t)) . 1446) (undo-tree-id8940 . -1) (undo-tree-id8941 . -1) (undo-tree-id8942 . -2) (undo-tree-id8943 . -2) (undo-tree-id8944 . -2) (undo-tree-id8945 . -2) (undo-tree-id8946 . -2) (undo-tree-id8947 . -2) (undo-tree-id8948 . -2) (undo-tree-id8949 . -2) (undo-tree-id8950 . -1) (undo-tree-id8951 . -1) (undo-tree-id8952 . -1) (undo-tree-id8953 . -1) (undo-tree-id8954 . -1) (undo-tree-id8955 . -1) (undo-tree-id8956 . -1) (undo-tree-id8957 . -1) (undo-tree-id8958 . -1) (undo-tree-id8959 . -1) (undo-tree-id8960 . -1) (undo-tree-id8961 . -1) (undo-tree-id8962 . -1) (undo-tree-id8963 . -1) (undo-tree-id8964 . -1) (undo-tree-id8965 . -1) (undo-tree-id8966 . -1) (undo-tree-id8967 . -1) (undo-tree-id8968 . -1) (undo-tree-id8969 . -1) (undo-tree-id8970 . -1) (undo-tree-id8971 . -1) (undo-tree-id8972 . -1) (undo-tree-id8973 . -1) (undo-tree-id8974 . -1) (undo-tree-id8975 . -1) (undo-tree-id8976 . -1) (undo-tree-id8977 . -1) (undo-tree-id8978 . -1) (undo-tree-id8979 . -1) (undo-tree-id8980 . -1) (undo-tree-id8981 . -1) (undo-tree-id8982 . -1) (undo-tree-id8983 . -1) (undo-tree-id8984 . -1) (undo-tree-id8985 . -1) (undo-tree-id8986 . -1) (undo-tree-id8987 . -1) (undo-tree-id8988 . -1) (undo-tree-id8989 . -1) (undo-tree-id8990 . -1) (undo-tree-id8991 . -1) (undo-tree-id8992 . -1) (undo-tree-id8993 . -1) (undo-tree-id8994 . -1) (undo-tree-id8995 . -1) (undo-tree-id8996 . -1) (undo-tree-id8997 . -1) (undo-tree-id8998 . -1) (undo-tree-id8999 . -1) (undo-tree-id9000 . -1) (undo-tree-id9001 . -1) (undo-tree-id9002 . -1) (undo-tree-id9003 . -1) (undo-tree-id9004 . -1) (undo-tree-id9005 . -1) (undo-tree-id9006 . -1) (undo-tree-id9007 . -1) (undo-tree-id9008 . -1) (undo-tree-id9009 . -1) (undo-tree-id9010 . -2) (undo-tree-id9011 . -2) (undo-tree-id9012 . -1) (undo-tree-id9013 . -1) (undo-tree-id9014 . -1) (undo-tree-id9015 . -1) (undo-tree-id9016 . -1) (undo-tree-id9017 . -1) (undo-tree-id9018 . -1) (undo-tree-id9019 . -1) (undo-tree-id9020 . -1) (undo-tree-id9021 . -1) (undo-tree-id9022 . -1) (undo-tree-id9023 . -1) (undo-tree-id9024 . -1) (undo-tree-id9025 . -1) (undo-tree-id9026 . -1) (undo-tree-id9027 . -1) (undo-tree-id9028 . -1) (undo-tree-id9029 . -1) (undo-tree-id9030 . -1) (undo-tree-id9031 . -1) (undo-tree-id9032 . -1) (undo-tree-id9033 . -1) (undo-tree-id9034 . -1) (undo-tree-id9035 . -1) (undo-tree-id9036 . -1) (undo-tree-id9037 . -1) (undo-tree-id9038 . -1) (undo-tree-id9039 . -1) (undo-tree-id9040 . -1) (undo-tree-id9041 . -1) (undo-tree-id9042 . -1) (undo-tree-id9043 . -1) (undo-tree-id9044 . -1) (undo-tree-id9045 . -1) (undo-tree-id9046 . -1) (undo-tree-id9047 . -1) (undo-tree-id9048 . -1) (undo-tree-id9049 . -1) (undo-tree-id9050 . -1) (undo-tree-id9051 . -1) (undo-tree-id9052 . -1) (undo-tree-id9053 . -1) (undo-tree-id9054 . -1) (undo-tree-id9055 . -2)) (25944 34141 973792 0) 0 nil])
([nil nil ((1502 . 1504)) nil (25944 34324 437344 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1447) (undo-tree-id8544 . -1) (undo-tree-id8545 . -1) (undo-tree-id8546 . -1) (undo-tree-id8547 . -1) (undo-tree-id8548 . -1) (undo-tree-id8549 . -1) (undo-tree-id8550 . -1) (undo-tree-id8551 . -1) (undo-tree-id8552 . -1) (undo-tree-id8553 . -1) 1448) ((1447 . 1448)) (25944 34141 641175 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1503) (undo-tree-id10214 . -1) (undo-tree-id10215 . -1) (undo-tree-id10216 . -1) 1504) nil (25944 34324 437343 0) 0 nil])
([nil nil ((1447 . 1449)) ((#("= " 0 1 (fontified t) 1 2 (fontified t)) . 1447) (undo-tree-id8933 . -1) (undo-tree-id8934 . -2) (undo-tree-id8935 . -2) (undo-tree-id8936 . -1) (undo-tree-id8937 . -1) (undo-tree-id8938 . -2) (undo-tree-id8939 . -2)) (25944 34141 289450 0) 0 nil])
([nil nil ((1503 . 1505)) nil (25944 34324 437339 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -1447) (undo-tree-id8535 . -1) (undo-tree-id8536 . -1) (undo-tree-id8537 . -1) (undo-tree-id8538 . -1) (undo-tree-id8539 . -1) (undo-tree-id8540 . -1) (#(" " 0 1 (fontified t)) . -1448) (undo-tree-id8541 . -1) (undo-tree-id8542 . -1) (undo-tree-id8543 . -1) 1449) ((1447 . 1449)) (25944 34140 981460 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1503) (undo-tree-id10198 . -1) (undo-tree-id10199 . -1) (undo-tree-id10200 . -1) (undo-tree-id10201 . -1) (undo-tree-id10202 . -1) (undo-tree-id10203 . -1) (undo-tree-id10204 . -1) (undo-tree-id10205 . -1) (undo-tree-id10206 . -1) (undo-tree-id10207 . -1) (undo-tree-id10208 . -1) (#("p" 0 1 (fontified t)) . -1504) (undo-tree-id10209 . -1) (undo-tree-id10210 . -1) (undo-tree-id10211 . -1) (undo-tree-id10212 . -1) (undo-tree-id10213 . -1) 1505) nil (25944 34324 437337 0) 0 nil])
([nil nil ((1447 . 1453)) ((#(" = can" 0 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 1447) (undo-tree-id8833 . -3) (undo-tree-id8834 . -3) (undo-tree-id8835 . -4) (undo-tree-id8836 . -5) (undo-tree-id8837 . -5) (undo-tree-id8838 . -6) (undo-tree-id8839 . -6) (undo-tree-id8840 . -6) (undo-tree-id8841 . -6) (undo-tree-id8842 . -5) (undo-tree-id8843 . -5) (undo-tree-id8844 . -4) (undo-tree-id8845 . -4) (undo-tree-id8846 . -3) (undo-tree-id8847 . -3) (undo-tree-id8848 . -3) (undo-tree-id8849 . -3) (undo-tree-id8850 . -3) (undo-tree-id8851 . -3) (undo-tree-id8852 . -3) (undo-tree-id8853 . -3) (undo-tree-id8854 . -3) (undo-tree-id8855 . -3) (undo-tree-id8856 . -3) (undo-tree-id8857 . -3) (undo-tree-id8858 . -3) (undo-tree-id8859 . -3) (undo-tree-id8860 . -3) (undo-tree-id8861 . -3) (undo-tree-id8862 . -3) (undo-tree-id8863 . -3) (undo-tree-id8864 . -3) (undo-tree-id8865 . -3) (undo-tree-id8866 . -3) (undo-tree-id8867 . -3) (undo-tree-id8868 . -3) (undo-tree-id8869 . -3) (undo-tree-id8870 . -3) (undo-tree-id8871 . -3) (undo-tree-id8872 . -3) (undo-tree-id8873 . -3) (undo-tree-id8874 . -3) (undo-tree-id8875 . -3) (undo-tree-id8876 . -3) (undo-tree-id8877 . -3) (undo-tree-id8878 . -3) (undo-tree-id8879 . -3) (undo-tree-id8880 . -3) (undo-tree-id8881 . -3) (undo-tree-id8882 . -3) (undo-tree-id8883 . -3) (undo-tree-id8884 . -3) (undo-tree-id8885 . -3) (undo-tree-id8886 . -3) (undo-tree-id8887 . -3) (undo-tree-id8888 . -3) (undo-tree-id8889 . -3) (undo-tree-id8890 . -3) (undo-tree-id8891 . -3) (undo-tree-id8892 . -6) (undo-tree-id8893 . -3) (undo-tree-id8894 . -3) (undo-tree-id8895 . -3) (undo-tree-id8896 . -3) (undo-tree-id8897 . -3) (undo-tree-id8898 . -3) (undo-tree-id8899 . -3) (undo-tree-id8900 . -3) (undo-tree-id8901 . -3) (undo-tree-id8902 . -3) (undo-tree-id8903 . -3) (undo-tree-id8904 . -3) (undo-tree-id8905 . -3) (undo-tree-id8906 . -3) (undo-tree-id8907 . -3) (undo-tree-id8908 . -3) (undo-tree-id8909 . -3) (undo-tree-id8910 . -3) (undo-tree-id8911 . -3) (undo-tree-id8912 . -3) (undo-tree-id8913 . -3) (undo-tree-id8914 . -3) (undo-tree-id8915 . -3) (undo-tree-id8916 . -3) (undo-tree-id8917 . -3) (undo-tree-id8918 . -3) (undo-tree-id8919 . -3) (undo-tree-id8920 . -3) (undo-tree-id8921 . -3) (undo-tree-id8922 . -3) (undo-tree-id8923 . -3) (undo-tree-id8924 . -3) (undo-tree-id8925 . -3) (undo-tree-id8926 . -3) (undo-tree-id8927 . -3) (undo-tree-id8928 . -3) (undo-tree-id8929 . -3) (undo-tree-id8930 . -3) (undo-tree-id8931 . -3) (undo-tree-id8932 . -6)) (25944 34140 686417 0) 0 nil])
([nil nil ((1503 . 1505)) nil (25944 34324 437320 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1450) (undo-tree-id8509 . -1) (undo-tree-id8510 . -1) (undo-tree-id8511 . -1) (undo-tree-id8512 . -1) (undo-tree-id8513 . -1) (undo-tree-id8514 . -1) (undo-tree-id8515 . -1) (undo-tree-id8516 . -1) (undo-tree-id8517 . -1) (undo-tree-id8518 . -1) (undo-tree-id8519 . -1) (undo-tree-id8520 . -1) (#("a" 0 1 (fontified t)) . -1451) (undo-tree-id8521 . -1) (undo-tree-id8522 . -1) (undo-tree-id8523 . -1) (undo-tree-id8524 . -1) (undo-tree-id8525 . -1) (undo-tree-id8526 . -1) (undo-tree-id8527 . -1) (undo-tree-id8528 . -1) (undo-tree-id8529 . -1) (#("n" 0 1 (fontified t)) . -1452) (undo-tree-id8530 . -1) (undo-tree-id8531 . -1) (undo-tree-id8532 . -1) (undo-tree-id8533 . -1) (undo-tree-id8534 . -1) 1453) ((1450 . 1453)) (25944 34140 438229 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1503) (undo-tree-id10182 . -1) (undo-tree-id10183 . -1) (undo-tree-id10184 . -1) (undo-tree-id10185 . -1) (undo-tree-id10186 . -1) (undo-tree-id10187 . -1) (undo-tree-id10188 . -1) (undo-tree-id10189 . -1) (undo-tree-id10190 . -1) (undo-tree-id10191 . -1) (undo-tree-id10192 . -1) (#("p" 0 1 (fontified t)) . -1504) (undo-tree-id10193 . -1) (undo-tree-id10194 . -1) (undo-tree-id10195 . -1) (undo-tree-id10196 . -1) (undo-tree-id10197 . -1) 1505) nil (25944 34324 437318 0) 0 nil])
([nil nil ((1450 . 1451)) ((#("C" 0 1 (face font-lock-type-face fontified t)) . 1450) (undo-tree-id8830 . -1) (undo-tree-id8831 . -1) (undo-tree-id8832 . -1)) (25944 34140 197927 0) 0 nil])
([nil nil ((1503 . 1504)) nil (25944 34324 437302 0) 0 nil])
([nil nil ((#("C" 0 1 (face font-lock-type-face fontified t)) . -1450) (undo-tree-id8507 . -1) (undo-tree-id8508 . -1) 1451) ((1450 . 1451)) (25944 34139 992777 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1503) (undo-tree-id10177 . -1) (undo-tree-id10178 . -1) (undo-tree-id10179 . -1) (undo-tree-id10180 . -1) (undo-tree-id10181 . -1) 1504) nil (25944 34324 437301 0) 0 nil])
([nil nil ((1450 . 1452)) ((#("Ht" 0 2 (face font-lock-type-face fontified t)) . 1450) (undo-tree-id8820 . -1) (undo-tree-id8821 . -1) (undo-tree-id8822 . -1) (undo-tree-id8823 . -2) (undo-tree-id8824 . -2) (undo-tree-id8825 . -2) (undo-tree-id8826 . -2) (undo-tree-id8827 . -2) (undo-tree-id8828 . -2) (undo-tree-id8829 . -2)) (25944 34139 834605 0) 0 nil])
([nil nil ((#("ref." 0 4 (fontified t)) . -1499) (undo-tree-id10126 . -4) (undo-tree-id10127 . -4) (undo-tree-id10128 . -3) (undo-tree-id10129 . -3) (undo-tree-id10130 . -3) (undo-tree-id10131 . -3) (undo-tree-id10132 . -3) (undo-tree-id10133 . -3) (undo-tree-id10134 . -4) (undo-tree-id10135 . -4) (undo-tree-id10136 . -4) (undo-tree-id10137 . -4) (undo-tree-id10138 . -4) (undo-tree-id10139 . -4) (undo-tree-id10140 . -4) (undo-tree-id10141 . -4) (undo-tree-id10142 . -4) (undo-tree-id10143 . -4) (undo-tree-id10144 . -4) (undo-tree-id10145 . -4) (undo-tree-id10146 . -4) (undo-tree-id10147 . -4) (undo-tree-id10148 . -4) (undo-tree-id10149 . -4) (undo-tree-id10150 . -4) (undo-tree-id10151 . -4) (undo-tree-id10152 . -4) (undo-tree-id10153 . -4) (undo-tree-id10154 . -4) (undo-tree-id10155 . -4) (undo-tree-id10156 . -4) (undo-tree-id10157 . -4) (undo-tree-id10158 . -4) (undo-tree-id10159 . -4) (undo-tree-id10160 . -4) (undo-tree-id10161 . -4) (undo-tree-id10162 . -4) (undo-tree-id10163 . -4) (undo-tree-id10164 . -4) (undo-tree-id10165 . -4) (undo-tree-id10166 . -4) (undo-tree-id10167 . -4) (undo-tree-id10168 . -4) (undo-tree-id10169 . -4) (undo-tree-id10170 . -4) (undo-tree-id10171 . -4) (undo-tree-id10172 . -4) (undo-tree-id10173 . -4) (undo-tree-id10174 . -4) (undo-tree-id10175 . -4) (undo-tree-id10176 . -4) 1503) nil (25944 34324 437293 0) 0 nil])
([nil nil ((1450 . 1467) (#("Ht" 0 2 (fontified nil)) . 1450) (1450 . 1452) (#("HtmlCanvasElement" 0 17 (fontified nil)) . -1450) (1450 . 1467) (#("Ht" 0 2 (face font-lock-type-face fontified t)) . -1450) (undo-tree-id8499 . -2) (undo-tree-id8500 . -1) (undo-tree-id8501 . -1) (undo-tree-id8502 . -1) (undo-tree-id8503 . -2) (undo-tree-id8504 . -2) (undo-tree-id8505 . -2) (undo-tree-id8506 . -2) 1452) ((1450 . 1452) (#("HtmlCanvasElement" 0 17 (fontified nil)) . 1450) (1450 . 1467) (#("Ht" 0 2 (fontified nil)) . 1450) (1450 . 1452) (#("HtmlCanvasElement" 0 17 (face font-lock-type-face fontified t)) . 1450) (undo-tree-id8744 . -15) (undo-tree-id8745 . -15) (undo-tree-id8746 . -17) (undo-tree-id8747 . -17) (undo-tree-id8748 . -17) (undo-tree-id8749 . -17) (undo-tree-id8750 . -17) (undo-tree-id8751 . -17) (undo-tree-id8752 . -17) (undo-tree-id8753 . -17) (undo-tree-id8754 . -17) (undo-tree-id8755 . -17) (undo-tree-id8756 . -17) (undo-tree-id8757 . -17) (undo-tree-id8758 . -17) (undo-tree-id8759 . -17) (undo-tree-id8760 . -17) (undo-tree-id8761 . -17) (undo-tree-id8762 . -17) (undo-tree-id8763 . -17) (undo-tree-id8764 . -17) (undo-tree-id8765 . -17) (undo-tree-id8766 . -17) (undo-tree-id8767 . -17) (undo-tree-id8768 . -17) (undo-tree-id8769 . -17) (undo-tree-id8770 . -17) (undo-tree-id8771 . -17) (undo-tree-id8772 . -17) (undo-tree-id8773 . -17) (undo-tree-id8774 . -17) (undo-tree-id8775 . -17) (undo-tree-id8776 . -17) (undo-tree-id8777 . -17) (undo-tree-id8778 . -17) (undo-tree-id8779 . -17) (undo-tree-id8780 . -17) (undo-tree-id8781 . -17) (undo-tree-id8782 . -15) (undo-tree-id8783 . -17) (undo-tree-id8784 . -17) (undo-tree-id8785 . -15) (undo-tree-id8786 . -15) (undo-tree-id8787 . -15) (undo-tree-id8788 . -15) (undo-tree-id8789 . -15) (undo-tree-id8790 . -15) (undo-tree-id8791 . -15) (undo-tree-id8792 . -15) (undo-tree-id8793 . -15) (undo-tree-id8794 . -15) (undo-tree-id8795 . -15) (undo-tree-id8796 . -15) (undo-tree-id8797 . -15) (undo-tree-id8798 . -15) (undo-tree-id8799 . -15) (undo-tree-id8800 . -15) (undo-tree-id8801 . -15) (undo-tree-id8802 . -15) (undo-tree-id8803 . -15) (undo-tree-id8804 . -15) (undo-tree-id8805 . -15) (undo-tree-id8806 . -15) (undo-tree-id8807 . -15) (undo-tree-id8808 . -15) (undo-tree-id8809 . -17) (undo-tree-id8810 . -17) (undo-tree-id8811 . -17) (undo-tree-id8812 . -17) (undo-tree-id8813 . -17) (undo-tree-id8814 . -17) (undo-tree-id8815 . -17) (undo-tree-id8816 . -17) (undo-tree-id8817 . -17) (undo-tree-id8818 . -17) (undo-tree-id8819 . -17)) (25944 34139 672169 0) 0 nil])
([nil nil ((#("canvas_" 0 7 (fontified t)) . -1492) (undo-tree-id10069 . -7) (undo-tree-id10070 . -7) (undo-tree-id10071 . -7) (undo-tree-id10072 . -7) (undo-tree-id10073 . -7) (undo-tree-id10074 . -7) (undo-tree-id10075 . -7) (undo-tree-id10076 . -7) (undo-tree-id10077 . -7) (undo-tree-id10078 . -7) (undo-tree-id10079 . -7) (undo-tree-id10080 . -7) (undo-tree-id10081 . -7) (undo-tree-id10082 . -7) (undo-tree-id10083 . -7) (undo-tree-id10084 . -7) (undo-tree-id10085 . -7) (undo-tree-id10086 . -7) (undo-tree-id10087 . -7) (undo-tree-id10088 . -7) (undo-tree-id10089 . -7) (undo-tree-id10090 . -7) (undo-tree-id10091 . -7) (undo-tree-id10092 . -7) (undo-tree-id10093 . -7) (undo-tree-id10094 . -7) (undo-tree-id10095 . -7) (undo-tree-id10096 . -7) (undo-tree-id10097 . -7) (undo-tree-id10098 . -7) (undo-tree-id10099 . -7) (undo-tree-id10100 . -7) (undo-tree-id10101 . -7) (undo-tree-id10102 . -7) (undo-tree-id10103 . -7) (undo-tree-id10104 . -7) (undo-tree-id10105 . -7) (undo-tree-id10106 . -7) (undo-tree-id10107 . -7) (undo-tree-id10108 . -7) (undo-tree-id10109 . -7) (undo-tree-id10110 . -7) (undo-tree-id10111 . -7) (undo-tree-id10112 . -7) (undo-tree-id10113 . -7) (undo-tree-id10114 . -7) (undo-tree-id10115 . -7) (undo-tree-id10116 . -7) (undo-tree-id10117 . -7) (undo-tree-id10118 . -7) (undo-tree-id10119 . -7) (undo-tree-id10120 . -7) (undo-tree-id10121 . -7) (undo-tree-id10122 . -7) (undo-tree-id10123 . -7) (undo-tree-id10124 . -7) (undo-tree-id10125 . -7) 1499) nil (25944 34324 437242 0) 0 nil])
([nil nil ((1467 . 1469)) ((#("::" 0 1 (fontified t) 1 2 (fontified t)) . 1467) (undo-tree-id8720 . -1) (undo-tree-id8721 . -2) (undo-tree-id8722 . -2) (undo-tree-id8723 . -2) (undo-tree-id8724 . -2) (undo-tree-id8725 . -2) (undo-tree-id8726 . -2) (undo-tree-id8727 . -2) (undo-tree-id8728 . -2) (undo-tree-id8729 . -2) (undo-tree-id8730 . -2) (undo-tree-id8731 . -2) (undo-tree-id8732 . -2) (undo-tree-id8733 . -1) (undo-tree-id8734 . -1) (undo-tree-id8735 . -1) (undo-tree-id8736 . -1) (undo-tree-id8737 . -2) (undo-tree-id8738 . -2) (undo-tree-id8739 . -2) (undo-tree-id8740 . -2) (undo-tree-id8741 . -2) (undo-tree-id8742 . -2) (undo-tree-id8743 . -2)) (25944 34139 504322 0) 0 nil] [nil nil ((1467 . 1470)) ((#("::n" 0 2 (fontified t) 2 3 (fontified t)) . 1467) (undo-tree-id8569 . -3) (undo-tree-id8570 . -3) (undo-tree-id8571 . -3) (undo-tree-id8572 . -3) (undo-tree-id8573 . -3) (undo-tree-id8574 . -3) (undo-tree-id8575 . -2) (undo-tree-id8576 . -3) (undo-tree-id8577 . -3) (undo-tree-id8578 . -3) (undo-tree-id8579 . -3) (undo-tree-id8580 . -3) (undo-tree-id8581 . -3) (undo-tree-id8582 . -3)) (25944 34119 478201 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1489) (undo-tree-id9763 . -1) (undo-tree-id9764 . -1) (undo-tree-id9765 . -1) (undo-tree-id9766 . -1) (undo-tree-id9767 . -1) (undo-tree-id9768 . -1) (undo-tree-id9769 . -1) (undo-tree-id9770 . -1) (undo-tree-id9771 . -1) (undo-tree-id9772 . -1) (undo-tree-id9773 . -1) (undo-tree-id9774 . -1) (undo-tree-id9775 . -1) (undo-tree-id9776 . -1) (undo-tree-id9777 . -1) (undo-tree-id9778 . -1) (undo-tree-id9779 . -1) (undo-tree-id9780 . -1) (undo-tree-id9781 . -1) (undo-tree-id9782 . -1) (undo-tree-id9783 . -1) (undo-tree-id9784 . -1) (undo-tree-id9785 . -1) (undo-tree-id9786 . -1) (undo-tree-id9787 . -1) (undo-tree-id9788 . -1) (undo-tree-id9789 . -1) (undo-tree-id9790 . -1) (undo-tree-id9791 . -1) (undo-tree-id9792 . -1) (undo-tree-id9793 . -1) (undo-tree-id9794 . -1) (undo-tree-id9795 . -1) (undo-tree-id9796 . -1) (undo-tree-id9797 . -1) (undo-tree-id9798 . -1) (undo-tree-id9799 . -1) (undo-tree-id9800 . -1) (undo-tree-id9801 . -1) (undo-tree-id9802 . -1) (undo-tree-id9803 . -1) (undo-tree-id9804 . -1) (undo-tree-id9805 . -1) (undo-tree-id9806 . -1) (undo-tree-id9807 . -1) (undo-tree-id9808 . -1) (undo-tree-id9809 . -1) (undo-tree-id9810 . -1) (undo-tree-id9811 . -1) (undo-tree-id9812 . -1) (undo-tree-id9813 . -1) (undo-tree-id9814 . -1) (undo-tree-id9815 . -1) (undo-tree-id9816 . -1) (undo-tree-id9817 . -1) (undo-tree-id9818 . -1) (undo-tree-id9819 . -1) (undo-tree-id9820 . -1) (undo-tree-id9821 . -1) (undo-tree-id9822 . -1) (undo-tree-id9823 . -1) (undo-tree-id9824 . -1) (undo-tree-id9825 . -1) (undo-tree-id9826 . -1) (undo-tree-id9827 . -1) (undo-tree-id9828 . -1) (undo-tree-id9829 . -1) (undo-tree-id9830 . -1) (undo-tree-id9831 . -1) (undo-tree-id9832 . -1) (undo-tree-id9833 . -1) (undo-tree-id9834 . -1) (undo-tree-id9835 . -1) (undo-tree-id9836 . -1) (undo-tree-id9837 . -1) (undo-tree-id9838 . -1) (undo-tree-id9839 . -1) (undo-tree-id9840 . -1) (undo-tree-id9841 . -1) (undo-tree-id9842 . -1) (undo-tree-id9843 . -1) (undo-tree-id9844 . -1) (undo-tree-id9845 . -1) (undo-tree-id9846 . -1) (undo-tree-id9847 . -1) (undo-tree-id9848 . -1) (undo-tree-id9849 . -1) (undo-tree-id9850 . -1) (undo-tree-id9851 . -1) (undo-tree-id9852 . -1) (undo-tree-id9853 . -1) (undo-tree-id9854 . -1) (undo-tree-id9855 . -1) (undo-tree-id9856 . -1) (undo-tree-id9857 . -1) (undo-tree-id9858 . -1) (undo-tree-id9859 . -1) (undo-tree-id9860 . -1) (undo-tree-id9861 . -1) (undo-tree-id9862 . -1) (undo-tree-id9863 . -1) (undo-tree-id9864 . -1) (undo-tree-id9865 . -1) (#(" " 0 1 (fontified t)) . -1490) (undo-tree-id9866 . -1) (undo-tree-id9867 . -1) (undo-tree-id9868 . -1) (undo-tree-id9869 . -1) (undo-tree-id9870 . -1) (undo-tree-id9871 . -1) (undo-tree-id9872 . -1) (undo-tree-id9873 . -1) (undo-tree-id9874 . -1) (undo-tree-id9875 . -1) (undo-tree-id9876 . -1) (undo-tree-id9877 . -1) (undo-tree-id9878 . -1) (undo-tree-id9879 . -1) (undo-tree-id9880 . -1) (undo-tree-id9881 . -1) (undo-tree-id9882 . -1) (undo-tree-id9883 . -1) (undo-tree-id9884 . -1) (undo-tree-id9885 . -1) (undo-tree-id9886 . -1) (undo-tree-id9887 . -1) (undo-tree-id9888 . -1) (undo-tree-id9889 . -1) (undo-tree-id9890 . -1) (undo-tree-id9891 . -1) (undo-tree-id9892 . -1) (undo-tree-id9893 . -1) (undo-tree-id9894 . -1) (undo-tree-id9895 . -1) (undo-tree-id9896 . -1) (undo-tree-id9897 . -1) (undo-tree-id9898 . -1) (undo-tree-id9899 . -1) (undo-tree-id9900 . -1) (undo-tree-id9901 . -1) (undo-tree-id9902 . -1) (undo-tree-id9903 . -1) (undo-tree-id9904 . -1) (undo-tree-id9905 . -1) (undo-tree-id9906 . -1) (undo-tree-id9907 . -1) (undo-tree-id9908 . -1) (undo-tree-id9909 . -1) (undo-tree-id9910 . -1) (undo-tree-id9911 . -1) (undo-tree-id9912 . -1) (undo-tree-id9913 . -1) (undo-tree-id9914 . -1) (undo-tree-id9915 . -1) (undo-tree-id9916 . -1) (undo-tree-id9917 . -1) (undo-tree-id9918 . -1) (undo-tree-id9919 . -1) (undo-tree-id9920 . -1) (undo-tree-id9921 . -1) (undo-tree-id9922 . -1) (undo-tree-id9923 . -1) (undo-tree-id9924 . -1) (undo-tree-id9925 . -1) (undo-tree-id9926 . -1) (undo-tree-id9927 . -1) (undo-tree-id9928 . -1) (undo-tree-id9929 . -1) (undo-tree-id9930 . -1) (undo-tree-id9931 . -1) (undo-tree-id9932 . -1) (undo-tree-id9933 . -1) (undo-tree-id9934 . -1) (undo-tree-id9935 . -1) (undo-tree-id9936 . -1) (undo-tree-id9937 . -1) (undo-tree-id9938 . -1) (undo-tree-id9939 . -1) (undo-tree-id9940 . -1) (undo-tree-id9941 . -1) (undo-tree-id9942 . -1) (undo-tree-id9943 . -1) (undo-tree-id9944 . -1) (undo-tree-id9945 . -1) (undo-tree-id9946 . -1) (undo-tree-id9947 . -1) (undo-tree-id9948 . -1) (undo-tree-id9949 . -1) (undo-tree-id9950 . -1) (undo-tree-id9951 . -1) (undo-tree-id9952 . -1) (undo-tree-id9953 . -1) (undo-tree-id9954 . -1) (undo-tree-id9955 . -1) (undo-tree-id9956 . -1) (undo-tree-id9957 . -1) (undo-tree-id9958 . -1) (undo-tree-id9959 . -1) (undo-tree-id9960 . -1) (undo-tree-id9961 . -1) (undo-tree-id9962 . -1) (undo-tree-id9963 . -1) (undo-tree-id9964 . -1) (undo-tree-id9965 . -1) (undo-tree-id9966 . -1) (undo-tree-id9967 . -1) (#(" " 0 1 (fontified t)) . -1491) (undo-tree-id9968 . -1) (undo-tree-id9969 . -1) (undo-tree-id9970 . -1) (undo-tree-id9971 . -1) (undo-tree-id9972 . -1) (undo-tree-id9973 . -1) (undo-tree-id9974 . -1) (undo-tree-id9975 . -1) (undo-tree-id9976 . -1) (undo-tree-id9977 . -1) (undo-tree-id9978 . -1) (undo-tree-id9979 . -1) (undo-tree-id9980 . -1) (undo-tree-id9981 . -1) (undo-tree-id9982 . -1) (undo-tree-id9983 . -1) (undo-tree-id9984 . -1) (undo-tree-id9985 . -1) (undo-tree-id9986 . -1) (undo-tree-id9987 . -1) (undo-tree-id9988 . -1) (undo-tree-id9989 . -1) (undo-tree-id9990 . -1) (undo-tree-id9991 . -1) (undo-tree-id9992 . -1) (undo-tree-id9993 . -1) (undo-tree-id9994 . -1) (undo-tree-id9995 . -1) (undo-tree-id9996 . -1) (undo-tree-id9997 . -1) (undo-tree-id9998 . -1) (undo-tree-id9999 . -1) (undo-tree-id10000 . -1) (undo-tree-id10001 . -1) (undo-tree-id10002 . -1) (undo-tree-id10003 . -1) (undo-tree-id10004 . -1) (undo-tree-id10005 . -1) (undo-tree-id10006 . -1) (undo-tree-id10007 . -1) (undo-tree-id10008 . -1) (undo-tree-id10009 . -1) (undo-tree-id10010 . -1) (undo-tree-id10011 . -1) (undo-tree-id10012 . -1) (undo-tree-id10013 . -1) (undo-tree-id10014 . -1) (undo-tree-id10015 . -1) (undo-tree-id10016 . -1) (undo-tree-id10017 . -1) (undo-tree-id10018 . -1) (undo-tree-id10019 . -1) (undo-tree-id10020 . -1) (undo-tree-id10021 . -1) (undo-tree-id10022 . -1) (undo-tree-id10023 . -1) (undo-tree-id10024 . -1) (undo-tree-id10025 . -1) (undo-tree-id10026 . -1) (undo-tree-id10027 . -1) (undo-tree-id10028 . -1) (undo-tree-id10029 . -1) (undo-tree-id10030 . -1) (undo-tree-id10031 . -1) (undo-tree-id10032 . -1) (undo-tree-id10033 . -1) (undo-tree-id10034 . -1) (undo-tree-id10035 . -1) (undo-tree-id10036 . -1) (undo-tree-id10037 . -1) (undo-tree-id10038 . -1) (undo-tree-id10039 . -1) (undo-tree-id10040 . -1) (undo-tree-id10041 . -1) (undo-tree-id10042 . -1) (undo-tree-id10043 . -1) (undo-tree-id10044 . -1) (undo-tree-id10045 . -1) (undo-tree-id10046 . -1) (undo-tree-id10047 . -1) (undo-tree-id10048 . -1) (undo-tree-id10049 . -1) (undo-tree-id10050 . -1) (undo-tree-id10051 . -1) (undo-tree-id10052 . -1) (undo-tree-id10053 . -1) (undo-tree-id10054 . -1) (undo-tree-id10055 . -1) (undo-tree-id10056 . -1) (undo-tree-id10057 . -1) (undo-tree-id10058 . -1) (undo-tree-id10059 . -1) (undo-tree-id10060 . -1) (undo-tree-id10061 . -1) (undo-tree-id10062 . -1) (undo-tree-id10063 . -1) (undo-tree-id10064 . -1) (undo-tree-id10065 . -1) (undo-tree-id10066 . -1) (undo-tree-id10067 . -1) (undo-tree-id10068 . -1) 1492) nil (25944 34324 437175 0) 0 nil])
([nil nil ((1469 . 1470)) ((#("n" 0 1 (fontified t)) . 1469) (undo-tree-id8710 . -1) (undo-tree-id8711 . -1) (undo-tree-id8712 . -1) (undo-tree-id8713 . -1) (undo-tree-id8714 . -1) (undo-tree-id8715 . -1) (undo-tree-id8716 . -1) (undo-tree-id8717 . -1) (undo-tree-id8718 . -1) (undo-tree-id8719 . -1)) (25944 34139 83627 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1472 1477 nil nil nil nil #s(yas--field 2 1479 1484 nil nil nil nil #s(yas--exit 1485 nil))) #s(yas--field 2 1479 1484 nil nil nil nil #s(yas--exit 1485 nil))) #s(yas--exit 1485 nil) 34 nil #s(yas--field 1 1472 1477 nil nil nil nil #s(yas--field 2 1479 1484 nil nil nil nil #s(yas--exit 1485 nil))) nil nil)) (1469 . 1485) (#("ne(${1:&self}, ${2:other})$0" 0 28 (fontified nil)) . 1469) (1469 . 1497) (#("n" 0 1 (fontified nil)) . 1469) (1469 . 1470) (#("ne(…) (as PartialEq)" 0 20 (fontified nil)) . -1469) (1469 . 1489) (#("n" 0 1 (fontified t)) . -1469) (undo-tree-id8494 . -1) (undo-tree-id8495 . -1) (undo-tree-id8496 . -1) (undo-tree-id8497 . -1) (undo-tree-id8498 . -1) 1470) ((1469 . 1470) (#("ne(…) (as PartialEq)" 0 20 (fontified nil)) . 1469) (1469 . 1489) (#("n" 0 1 (fontified nil)) . 1469) (1469 . 1470) (#("ne(${1:&self}, ${2:other})$0" 0 28 (fontified nil)) . 1469) (1469 . 1497) (#("ne(&self, other)" 0 3 (fontified t) 3 4 (face rust-ampersand-face fontified t) 4 8 (face font-lock-keyword-face fontified t) 8 16 (fontified t)) . 1469) (undo-tree-id8566 . -3) (undo-tree-id8567 . -3) (undo-tree-id8568 . -3) (apply yas--snippet-revive 1469 1485 #s(yas--snippet nil (#s(yas--field 1 1472 1477 nil nil nil nil #s(yas--field 2 1479 1484 nil nil nil nil #s(yas--exit 1485 nil))) #s(yas--field 2 1479 1484 nil nil nil nil #s(yas--exit 1485 nil))) #s(yas--exit 1485 nil) 34 nil #s(yas--field 1 1472 1477 nil nil nil nil #s(yas--field 2 1479 1484 nil nil nil nil #s(yas--exit 1485 nil))) nil nil))) (25944 34119 477093 0) 0 nil])
([nil nil ((1489 . 1492)) nil (25944 34324 436889 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1468) (undo-tree-id8688 . -1) (undo-tree-id8689 . -1) (undo-tree-id8690 . -1) (undo-tree-id8691 . -1) (undo-tree-id8692 . -1) (undo-tree-id8693 . -1) (undo-tree-id8694 . -1) (undo-tree-id8695 . -1) (undo-tree-id8696 . -1) (undo-tree-id8697 . -1) (undo-tree-id8698 . -1) (undo-tree-id8699 . -1) (undo-tree-id8700 . -1) (undo-tree-id8701 . -1) (#("n" 0 1 (fontified t)) . -1469) (undo-tree-id8702 . -1) (undo-tree-id8703 . -1) (undo-tree-id8704 . -1) (undo-tree-id8705 . -1) (undo-tree-id8706 . -1) 1470) ((1468 . 1470)) (25944 34138 735694 0) 0 nil])
nil
([nil nil ((1492 . 1494)) nil (25944 34324 436888 0) 0 nil])
([nil nil ((#("    let element = HtmlCanvasElement:" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 15 (face font-lock-variable-name-face fontified t) 15 18 (fontified t) 18 35 (face font-lock-variable-name-face fontified t) 35 36 (fontified t)) . 1432) (undo-tree-id8592 . -33) (undo-tree-id8593 . -33) (undo-tree-id8594 . -15) (undo-tree-id8595 . -15) (undo-tree-id8596 . -15) (undo-tree-id8597 . -15) (undo-tree-id8598 . -15) (undo-tree-id8599 . -15) (undo-tree-id8600 . -15) (undo-tree-id8601 . -15) (undo-tree-id8602 . -15) (undo-tree-id8603 . -15) (undo-tree-id8604 . -15) (undo-tree-id8605 . -15) (undo-tree-id8606 . -18) (undo-tree-id8607 . -18) (undo-tree-id8608 . -18) (undo-tree-id8609 . -18) (undo-tree-id8610 . -18) (undo-tree-id8611 . -18) (undo-tree-id8612 . -18) (undo-tree-id8613 . -18) (undo-tree-id8614 . -18) (undo-tree-id8615 . -18) (undo-tree-id8616 . -18) (undo-tree-id8617 . -18) (undo-tree-id8618 . -18) (undo-tree-id8619 . -18) (undo-tree-id8620 . -18) (undo-tree-id8621 . -18) (undo-tree-id8622 . -18) (undo-tree-id8623 . -18) (undo-tree-id8624 . -18) (undo-tree-id8625 . -35) (undo-tree-id8626 . -35) (undo-tree-id8627 . -35) (undo-tree-id8628 . -35) (undo-tree-id8629 . -35) (undo-tree-id8630 . -35) (undo-tree-id8631 . -35) (undo-tree-id8632 . -35) (undo-tree-id8633 . -35) (undo-tree-id8634 . -35) (undo-tree-id8635 . -35) (undo-tree-id8636 . -35) (undo-tree-id8637 . -35) (undo-tree-id8638 . -35) (undo-tree-id8639 . -35) (undo-tree-id8640 . -35) (undo-tree-id8641 . -35) (undo-tree-id8642 . -35) (undo-tree-id8643 . -35) (undo-tree-id8644 . -36) (undo-tree-id8645 . -36) (undo-tree-id8646 . -36) (undo-tree-id8647 . -36) (undo-tree-id8648 . -36) (undo-tree-id8649 . -36) (undo-tree-id8650 . -36) (undo-tree-id8651 . -36) (undo-tree-id8652 . -36) (undo-tree-id8653 . -36) (undo-tree-id8654 . -36) (undo-tree-id8655 . -36) (undo-tree-id8656 . -36) (undo-tree-id8657 . -36) (undo-tree-id8658 . -36) (undo-tree-id8659 . -36) (undo-tree-id8660 . -36) (undo-tree-id8661 . -33) (undo-tree-id8662 . -33) (undo-tree-id8663 . -33) (undo-tree-id8664 . -33) (undo-tree-id8665 . -33) (undo-tree-id8666 . -33) (undo-tree-id8667 . -33) (undo-tree-id8668 . -33) (undo-tree-id8669 . -33) (undo-tree-id8670 . -33) (undo-tree-id8671 . -33) (undo-tree-id8672 . -33) (undo-tree-id8673 . -33) (undo-tree-id8674 . -33) (undo-tree-id8675 . -33) (undo-tree-id8676 . -33) (undo-tree-id8677 . -33) (undo-tree-id8678 . -33) (undo-tree-id8679 . -33) (undo-tree-id8680 . -33) (undo-tree-id8681 . -33) (undo-tree-id8682 . -33) (undo-tree-id8683 . -33) (undo-tree-id8684 . -33) (undo-tree-id8685 . -33) (undo-tree-id8686 . -33) (undo-tree-id8687 . -36)) ((1432 . 1468)) (25944 34138 412461 0) 0 nil])
([nil nil ((1492 . 1502) (#("ca" 0 2 (fontified nil)) . 1492) (1492 . 1494) (#("canvas_ref" 0 10 (fontified nil)) . -1492) (1492 . 1502) (#("ca" 0 2 (fontified t)) . -1492) (undo-tree-id9757 . -2) (undo-tree-id9758 . -1) (undo-tree-id9759 . -2) (undo-tree-id9760 . -2) (undo-tree-id9761 . -2) (undo-tree-id9762 . -2) 1494) nil (25944 34324 436886 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1432) (undo-tree-id8583 . -1) (undo-tree-id8584 . -1) (undo-tree-id8585 . -1) (undo-tree-id8586 . -1) (undo-tree-id8587 . -1) (undo-tree-id8588 . -1) (undo-tree-id8589 . 1) (undo-tree-id8590 . -1) (undo-tree-id8591 . -1)) ((1432 . 1433)) (25944 34138 79822 0) 0 nil])
([nil nil ((1502 . 1503)) nil (25944 34324 436877 0) 0 nil])
([nil nil ((1432 . 1436) (#("    " 0 4 (fontified nil)) . 1431) (1431 . 1435) (1431 . 1432)) ((#("
" 0 1 (fontified nil)) . 1431) (undo-tree-id8707 . -1) (undo-tree-id8708 . -1) (#("    " 0 4 (fontified nil)) . 1431) (1431 . 1435) (#("    " 0 4 (fontified t)) . 1432) (undo-tree-id8709 . -4)) (25944 34138 79169 0) 0 nil])
([nil nil ((#("    canvas_ref." 0 4 (fontified t) 4 15 (fontified t)) . 1488) (undo-tree-id9626 . -1) (undo-tree-id9627 . -1) (undo-tree-id9628 . -1) (undo-tree-id9629 . -1) (undo-tree-id9630 . -1) (undo-tree-id9631 . -1) (undo-tree-id9632 . -1) (undo-tree-id9633 . -1) (undo-tree-id9634 . -1) (undo-tree-id9635 . -1) (undo-tree-id9636 . -1) (undo-tree-id9637 . -1) (undo-tree-id9638 . -1) (undo-tree-id9639 . -1) (undo-tree-id9640 . -1) (undo-tree-id9641 . -1) (undo-tree-id9642 . -1) (undo-tree-id9643 . -1) (undo-tree-id9644 . -1) (undo-tree-id9645 . -1) (undo-tree-id9646 . -1) (undo-tree-id9647 . -1) (undo-tree-id9648 . -1) (undo-tree-id9649 . -1) (undo-tree-id9650 . -1) (undo-tree-id9651 . -1) (undo-tree-id9652 . -1) (undo-tree-id9653 . -1) (undo-tree-id9654 . -1) (undo-tree-id9655 . -1) (undo-tree-id9656 . -1) (undo-tree-id9657 . -1) (undo-tree-id9658 . -1) (undo-tree-id9659 . -1) (undo-tree-id9660 . -1) (undo-tree-id9661 . -1) (undo-tree-id9662 . -1) (undo-tree-id9663 . -1) (undo-tree-id9664 . -1) (undo-tree-id9665 . -1) (undo-tree-id9666 . -1) (undo-tree-id9667 . -1) (undo-tree-id9668 . -1) (undo-tree-id9669 . -1) (undo-tree-id9670 . -1) (undo-tree-id9671 . -1) (undo-tree-id9672 . -1) (undo-tree-id9673 . -1) (undo-tree-id9674 . -1) (undo-tree-id9675 . -1) (undo-tree-id9676 . -1) (undo-tree-id9677 . -1) (undo-tree-id9678 . -1) (undo-tree-id9679 . -1) (undo-tree-id9680 . -1) (undo-tree-id9681 . -1) (undo-tree-id9682 . -1) (undo-tree-id9683 . -1) (undo-tree-id9684 . -1) (undo-tree-id9685 . -1) (undo-tree-id9686 . -1) (undo-tree-id9687 . -1) (undo-tree-id9688 . -1) (undo-tree-id9689 . -1) (undo-tree-id9690 . -1) (undo-tree-id9691 . -1) (undo-tree-id9692 . -1) (undo-tree-id9693 . -1) (undo-tree-id9694 . -1) (undo-tree-id9695 . -1) (undo-tree-id9696 . -1) (undo-tree-id9697 . -1) (undo-tree-id9698 . -1) (undo-tree-id9699 . -1) (undo-tree-id9700 . -1) (undo-tree-id9701 . -1) (undo-tree-id9702 . -1) (undo-tree-id9703 . -1) (undo-tree-id9704 . -1) (undo-tree-id9705 . -1) (undo-tree-id9706 . -1) (undo-tree-id9707 . -1) (undo-tree-id9708 . -1) (undo-tree-id9709 . -1) (undo-tree-id9710 . -1) (undo-tree-id9711 . -1) (undo-tree-id9712 . -1) (undo-tree-id9713 . -1) (undo-tree-id9714 . -1) (undo-tree-id9715 . -1) (undo-tree-id9716 . -1) (undo-tree-id9717 . -1) (undo-tree-id9718 . -1) (undo-tree-id9719 . -1) (undo-tree-id9720 . -1) (undo-tree-id9721 . -1) (undo-tree-id9722 . -1) (undo-tree-id9723 . -1) (undo-tree-id9724 . -1) (undo-tree-id9725 . -1) (undo-tree-id9726 . -1) (undo-tree-id9727 . -1) (undo-tree-id9728 . -1) (undo-tree-id9729 . -1) (undo-tree-id9730 . -1) (undo-tree-id9731 . -4) (undo-tree-id9732 . -4) (undo-tree-id9733 . -4) (undo-tree-id9734 . -4) (undo-tree-id9735 . -4) (undo-tree-id9736 . -4) (undo-tree-id9737 . -4) (undo-tree-id9738 . -4) (undo-tree-id9739 . -14) (undo-tree-id9740 . -14) (undo-tree-id9741 . -14) (undo-tree-id9742 . -14) (undo-tree-id9743 . -14) (undo-tree-id9744 . -14) (undo-tree-id9745 . -15) (undo-tree-id9746 . -15) (undo-tree-id9747 . -15) (undo-tree-id9748 . -15) (undo-tree-id9749 . -15) (undo-tree-id9750 . -15) (undo-tree-id9751 . -15) (undo-tree-id9752 . -15) (undo-tree-id9753 . -15) (undo-tree-id9754 . -15) (undo-tree-id9755 . -15) (undo-tree-id9756 . -15)) nil (25944 34324 436870 0) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 1488) (undo-tree-id9623 . -1) (undo-tree-id9624 . 1) (undo-tree-id9625 . -1)) nil (25944 34324 436728 0) 0 nil])
([nil nil ((1488 . 1492) (t 25944 34324 462360 433000)) nil (25944 34634 986549 0) 0 nil])
([nil nil ((1492 . 1493)) nil (25944 34634 986547 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1492) (undo-tree-id10264 . -1) 1493) nil (25944 34634 986546 0) 0 nil])
([nil nil ((1492 . 1495)) nil (25944 34634 986544 0) 0 nil])
([nil nil ((1492 . 1502) (#("can" 0 3 (fontified nil)) . 1492) (1492 . 1495) (#("canvas_ref" 0 10 (fontified nil)) . -1492) (1492 . 1502) (#("can" 0 3 (fontified t)) . -1492) (undo-tree-id10263 . -3) 1495) nil (25944 34634 986542 0) 0 nil])
([nil nil ((1502 . 1504)) nil (25944 34634 986539 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1503) (undo-tree-id10262 . -1) 1504) nil (25944 34634 986538 0) 0 nil])
([nil nil ((1503 . 1504)) nil (25944 34634 986536 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1503) (undo-tree-id10261 . -1) 1504) nil (25944 34634 986535 0) 0 nil])
([nil nil ((1503 . 1504)) nil (25944 34634 986532 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1503 1508 #s(yas--snippet nil nil #s(yas--exit 1508 nil) 35 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1508 nil) 35 nil nil nil nil)) (1503 . 1508) (#("get()$0" 0 7 (fontified nil)) . 1503) (1503 . 1510) (#("g" 0 1 (fontified nil)) . 1503) (1503 . 1504) (#("get()" 0 5 (fontified nil)) . -1503) (1503 . 1508) (#("g" 0 1 (fontified t)) . -1503) (undo-tree-id10260 . -1) 1504) nil (25944 34634 986530 0) 0 nil])
([nil nil ((1508 . 1512)) nil (25944 34634 986526 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1509) (undo-tree-id10257 . -1) (#("e" 0 1 (fontified t)) . -1510) (undo-tree-id10258 . -1) (#("t" 0 1 (fontified t)) . -1511) (undo-tree-id10259 . -1) 1512) nil (25944 34634 986524 0) 0 nil])
([nil nil ((1509 . 1510)) nil (25944 34634 986520 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1509 1517 #s(yas--snippet nil nil #s(yas--exit 1517 nil) 36 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1517 nil) 36 nil nil nil nil)) (1509 . 1517) (#("unwrap()$0" 0 10 (fontified nil)) . 1509) (1509 . 1519) (#("u" 0 1 (fontified nil)) . 1509) (1509 . 1510) (#("unwrap()" 0 8 (fontified nil)) . -1509) (1509 . 1517) (#("u" 0 1 (fontified t)) . -1509) (undo-tree-id10256 . -1) 1510) nil (25944 34634 986518 0) 0 nil])
([nil nil ((1517 . 1519)) nil (25944 34634 986514 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1518) (undo-tree-id10255 . -1) 1519) nil (25944 34634 986512 0) 0 nil])
([nil nil ((1518 . 1521)) nil (25944 34634 986510 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1528 1531 nil nil nil t #s(yas--exit 1532 nil))) #s(yas--exit 1532 nil) 37 nil #s(yas--field 1 1528 1531 nil nil nil t #s(yas--exit 1532 nil)) nil nil)) (1518 . 1534) (#("set_width(${1:value})$0" 0 23 (fontified nil)) . 1518) (1518 . 1541) (#("wid" 0 3 (fontified nil)) . 1518) (1518 . 1521) (#("set_width(…)" 0 12 (fontified nil)) . -1518) (1518 . 1530) (#("wid" 0 3 (fontified t)) . -1518) (undo-tree-id10254 . -3) 1521) nil (25944 34634 986505 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified nil)) . 1529) (1528 . 1529)) nil (25944 34634 986500 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -1528) (undo-tree-id10252 . -1) (undo-tree-id10253 . -1) 1529) nil (25944 34634 986499 0) 0 nil])
([nil nil ((1528 . 1532)) nil (25944 34634 986496 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1531) (undo-tree-id10250 . -1) (undo-tree-id10251 . -1) 1532) nil (25944 34634 986495 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1518 1532 #s(yas--snippet nil (#s(yas--field 1 1528 1531 nil nil nil t #s(yas--exit 1532 nil))) #s(yas--exit 1532 nil) 37 nil #s(yas--field 1 1528 1531 nil nil nil t #s(yas--exit 1532 nil)) nil nil))) nil (25944 34634 986492 0) 0 nil])
([nil nil ((1531 . 1532)) nil (25944 34634 986489 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1531) (undo-tree-id10249 . -1) 1532) nil (25944 34634 986488 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -1522) (undo-tree-id10239 . -1) (undo-tree-id10240 . -1) (#("i" 0 1 (fontified t)) . -1523) (undo-tree-id10241 . -1) (undo-tree-id10242 . -1) (#("d" 0 1 (fontified t)) . -1524) (undo-tree-id10243 . -1) (undo-tree-id10244 . -1) (#("t" 0 1 (fontified t)) . -1525) (undo-tree-id10245 . -1) (undo-tree-id10246 . -1) (#("h" 0 1 (fontified t)) . -1526) (undo-tree-id10247 . -1) (undo-tree-id10248 . -1) 1527) nil (25944 34634 986482 0) 0 nil])
([nil nil ((1522 . 1525)) nil (25944 34634 986468 0) 0 nil])
([nil nil ((1518 . 1528) (#("set_hei" 0 7 (fontified nil)) . 1518) (1518 . 1525) (#("set_height" 0 10 (fontified nil)) . -1518) (1518 . 1528) (#("set_hei" 0 7 (fontified t)) . -1518) (undo-tree-id10235 . -4) (undo-tree-id10236 . -7) (undo-tree-id10237 . -7) (undo-tree-id10238 . -7) 1525) nil (25944 34634 986466 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -1529) (undo-tree-id10226 . -1) (undo-tree-id10227 . -1) (undo-tree-id10228 . -1) (undo-tree-id10229 . -1) (undo-tree-id10230 . -1) (undo-tree-id10231 . -1) (undo-tree-id10232 . -1) (undo-tree-id10233 . -1) (undo-tree-id10234 . -1) 1530) nil (25944 34634 986459 0) 0 nil])
([nil nil ((1529 . 1530)) nil (25944 34634 986440 0) 0 nil])
([nil nil ((1533 . 1534)) nil (25944 34634 986436 0) 0 nil])
([nil nil ((1492 . 1495) (t 25944 34635 12027 804000)) nil (25944 34744 288056 0) 0 nil])
([nil nil ((1492 . 1502) (#("cancanvas_ref" 0 3 (fontified nil) 3 13 (fontified nil)) . 1492) (undo-tree-id10521 . 10) (1492 . 1495) (#("canvas_ref" 0 10 (fontified nil)) . -1492) (1492 . 1502) (#("can" 0 3 (fontified t)) . -1492) (undo-tree-id10522 . -3) (undo-tree-id10523 . -1) (undo-tree-id10524 . -2) (undo-tree-id10525 . -3) (undo-tree-id10526 . -3) (undo-tree-id10527 . -3) (undo-tree-id10528 . -3) (undo-tree-id10529 . -3) (undo-tree-id10530 . -3) 1495) nil (25944 34744 288053 0) 0 nil])
([nil nil ((1502 . 1503)) nil (25944 34744 288041 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1511 1513 nil nil nil t #s(yas--exit 1514 nil))) #s(yas--exit 1514 nil) 38 nil #s(yas--field 1 1511 1513 nil nil nil t #s(yas--exit 1514 nil)) nil nil)) (1503 . 1513) (#("on_load(${1:f})$0" 0 17 (fontified nil)) . 1503) (1503 . 1520) (#("on_load(…)" 0 10 (fontified nil)) . -1503) (1503 . 1513)) nil (25944 34744 288040 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1511) (undo-tree-id10513 . -1) (undo-tree-id10514 . -1) (undo-tree-id10515 . -1) (undo-tree-id10516 . -1) (undo-tree-id10517 . -1) (undo-tree-id10518 . -1) (undo-tree-id10519 . -1) (undo-tree-id10520 . -1) 1512) nil (25944 34744 288037 0) 0 nil])
([nil nil ((1511 . 1513)) nil (25944 34744 288028 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1503 1514 #s(yas--snippet nil (#s(yas--field 1 1511 1513 nil nil nil t #s(yas--exit 1514 nil))) #s(yas--exit 1514 nil) 38 nil #s(yas--field 1 1511 1513 nil nil nil t #s(yas--exit 1514 nil)) nil nil))) nil (25944 34744 288027 0) 0 nil])
([nil nil ((#("    canvas_ref.on_load(||).get().unwrap().set_height(500);" 0 4 (fontified t) 4 15 (fontified t) 15 26 (fontified t) 26 27 (fontified t) 27 33 (fontified t) 33 42 (fontified t) 42 52 (fontified t) 52 58 (fontified t)) . 1488) (undo-tree-id10266 . -26) (undo-tree-id10267 . -19) (undo-tree-id10268 . -53) (undo-tree-id10269 . -42) (undo-tree-id10270 . -42) (undo-tree-id10271 . -53) (undo-tree-id10272 . -53) (undo-tree-id10273 . -53) (undo-tree-id10274 . -53) (undo-tree-id10275 . -53) (undo-tree-id10276 . -53) (undo-tree-id10277 . -53) (undo-tree-id10278 . -53) (undo-tree-id10279 . -58) (undo-tree-id10280 . -58) (undo-tree-id10281 . -58) (undo-tree-id10282 . -58) (undo-tree-id10283 . -58) (undo-tree-id10284 . -58) (undo-tree-id10285 . -58) (undo-tree-id10286 . -58) (undo-tree-id10287 . -58) (undo-tree-id10288 . -58) (undo-tree-id10289 . -58) (undo-tree-id10290 . -58) (undo-tree-id10291 . -58) (undo-tree-id10292 . -58) (undo-tree-id10293 . -58) (undo-tree-id10294 . -58) (undo-tree-id10295 . -58) (undo-tree-id10296 . -58) (undo-tree-id10297 . -58) (undo-tree-id10298 . -58) (undo-tree-id10299 . -58) (undo-tree-id10300 . -58) (undo-tree-id10301 . -58) (undo-tree-id10302 . -58) (undo-tree-id10303 . -58) (undo-tree-id10304 . -58) (undo-tree-id10305 . -58) (undo-tree-id10306 . -58) (undo-tree-id10307 . -58) (undo-tree-id10308 . -58) (undo-tree-id10309 . -58) (undo-tree-id10310 . -58) (undo-tree-id10311 . -58) (undo-tree-id10312 . -58) (undo-tree-id10313 . -58) (undo-tree-id10314 . -58) (undo-tree-id10315 . -58) (undo-tree-id10316 . -58) (undo-tree-id10317 . -58) (undo-tree-id10318 . -58) (undo-tree-id10319 . -58) (undo-tree-id10320 . -58) (undo-tree-id10321 . -58) (undo-tree-id10322 . -58) (undo-tree-id10323 . -58) (undo-tree-id10324 . -58) (undo-tree-id10325 . -58) (undo-tree-id10326 . -58) (undo-tree-id10327 . -58) (undo-tree-id10328 . -58) (undo-tree-id10329 . -58) (undo-tree-id10330 . -58) (undo-tree-id10331 . -58) (undo-tree-id10332 . -58) (undo-tree-id10333 . -58) (undo-tree-id10334 . -58) (undo-tree-id10335 . -58) (undo-tree-id10336 . -58) (undo-tree-id10337 . -58) (undo-tree-id10338 . -58) (undo-tree-id10339 . -58) (undo-tree-id10340 . -58) (undo-tree-id10341 . -58) (undo-tree-id10342 . -58) (undo-tree-id10343 . -58) (undo-tree-id10344 . -58) (undo-tree-id10345 . -58) (undo-tree-id10346 . -58) (undo-tree-id10347 . -58) (undo-tree-id10348 . -58) (undo-tree-id10349 . -58) (undo-tree-id10350 . -58) (undo-tree-id10351 . -58) (undo-tree-id10352 . -58) (undo-tree-id10353 . -1) (undo-tree-id10354 . -1) (undo-tree-id10355 . -1) (undo-tree-id10356 . -1) (undo-tree-id10357 . -1) (undo-tree-id10358 . -2) (undo-tree-id10359 . -2) (undo-tree-id10360 . -2) (undo-tree-id10361 . -2) (undo-tree-id10362 . -2) (undo-tree-id10363 . -3) (undo-tree-id10364 . -3) (undo-tree-id10365 . -3) (undo-tree-id10366 . -3) (undo-tree-id10367 . -3) (undo-tree-id10368 . -4) (undo-tree-id10369 . -4) (undo-tree-id10370 . -4) (undo-tree-id10371 . -4) (undo-tree-id10372 . -4) (undo-tree-id10373 . -4) (undo-tree-id10374 . -4) (undo-tree-id10375 . -4) (undo-tree-id10376 . -4) (undo-tree-id10377 . -4) (undo-tree-id10378 . -4) (undo-tree-id10379 . -4) (undo-tree-id10380 . -4) (undo-tree-id10381 . -14) (undo-tree-id10382 . -14) (undo-tree-id10383 . -15) (undo-tree-id10384 . -15) (undo-tree-id10385 . -15) (undo-tree-id10386 . -26) (undo-tree-id10387 . -26) (undo-tree-id10388 . -23) (undo-tree-id10389 . -23) (undo-tree-id10390 . -23) (undo-tree-id10391 . -23) (undo-tree-id10392 . -23) (undo-tree-id10393 . -23) (undo-tree-id10394 . -23) (undo-tree-id10395 . -23) (undo-tree-id10396 . -23) (undo-tree-id10397 . -23) (undo-tree-id10398 . -23) (undo-tree-id10399 . -23) (undo-tree-id10400 . -23) (undo-tree-id10401 . -24) (undo-tree-id10402 . -25) (undo-tree-id10403 . -25) (undo-tree-id10404 . -25) (undo-tree-id10405 . -25) (undo-tree-id10406 . -25) (undo-tree-id10407 . -25) (undo-tree-id10408 . -25) (undo-tree-id10409 . -25) (undo-tree-id10410 . -25) (undo-tree-id10411 . -25) (undo-tree-id10412 . -25) (undo-tree-id10413 . -25) (undo-tree-id10414 . -25) (undo-tree-id10415 . -19) (undo-tree-id10416 . -45) (undo-tree-id10417 . -19) (undo-tree-id10418 . -19) (undo-tree-id10419 . -19) (undo-tree-id10420 . -19) (undo-tree-id10421 . -19) (undo-tree-id10422 . -19) (undo-tree-id10423 . -19) (undo-tree-id10424 . -19) (undo-tree-id10425 . -19) (undo-tree-id10426 . -19) (undo-tree-id10427 . -19) (undo-tree-id10428 . -19) (undo-tree-id10429 . -19) (undo-tree-id10430 . -19) (undo-tree-id10431 . -19) (undo-tree-id10432 . -19) (undo-tree-id10433 . -19) (undo-tree-id10434 . -19) (undo-tree-id10435 . -19) (undo-tree-id10436 . -19) (undo-tree-id10437 . -19) (undo-tree-id10438 . -19) (undo-tree-id10439 . -19) (undo-tree-id10440 . -19) (undo-tree-id10441 . -19) (undo-tree-id10442 . -19) (undo-tree-id10443 . -19) (undo-tree-id10444 . -19) (undo-tree-id10445 . -19) (undo-tree-id10446 . -19) (undo-tree-id10447 . -19) (undo-tree-id10448 . -19) (undo-tree-id10449 . -19) (undo-tree-id10450 . -19) (undo-tree-id10451 . -19) (undo-tree-id10452 . -19) (undo-tree-id10453 . -19) (undo-tree-id10454 . -19) (undo-tree-id10455 . -19) (undo-tree-id10456 . -19) (undo-tree-id10457 . -25) (undo-tree-id10458 . -25) (undo-tree-id10459 . -25) (undo-tree-id10460 . -25) (undo-tree-id10461 . -25) (undo-tree-id10462 . -25) (undo-tree-id10463 . -25) (undo-tree-id10464 . -25) (undo-tree-id10465 . -25) (undo-tree-id10466 . -25) (undo-tree-id10467 . -25) (undo-tree-id10468 . -25) (undo-tree-id10469 . -25) (undo-tree-id10470 . -25) (undo-tree-id10471 . -25) (undo-tree-id10472 . -26) (undo-tree-id10473 . -26) (undo-tree-id10474 . -26) (undo-tree-id10475 . -26) (undo-tree-id10476 . -26) (undo-tree-id10477 . -26) (undo-tree-id10478 . -26) (undo-tree-id10479 . -26) (undo-tree-id10480 . -26) (undo-tree-id10481 . -27) (undo-tree-id10482 . -28) (undo-tree-id10483 . -30) (undo-tree-id10484 . -32) (undo-tree-id10485 . -33) (undo-tree-id10486 . -35) (undo-tree-id10487 . -36) (undo-tree-id10488 . -38) (undo-tree-id10489 . -39) (undo-tree-id10490 . -40) (undo-tree-id10491 . -41) (undo-tree-id10492 . -42) (undo-tree-id10493 . -43) (undo-tree-id10494 . -43) (undo-tree-id10495 . -43) (undo-tree-id10496 . -43) (undo-tree-id10497 . -43) (undo-tree-id10498 . -19) (undo-tree-id10499 . -26) (undo-tree-id10500 . -45) (undo-tree-id10501 . -45) (undo-tree-id10502 . -45) (undo-tree-id10503 . -45) (undo-tree-id10504 . -45) (undo-tree-id10505 . -45) (undo-tree-id10506 . -45) (undo-tree-id10507 . -45) (undo-tree-id10508 . -45) (undo-tree-id10509 . -45) (undo-tree-id10510 . -45) (undo-tree-id10511 . -45) (undo-tree-id10512 . -58)) nil (25944 34744 288015 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1488) (undo-tree-id10265 . -1)) nil (25944 34744 287766 0) 0 nil])
([nil nil ((1691 . 1695) (t 25944 34744 312943 174000)) nil (25944 34795 129051 0) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -1694) (undo-tree-id10577 . -1) 1695) nil (25944 34795 129050 0) 0 nil])
([nil nil ((1694 . 1700)) nil (25944 34795 129046 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1697) (undo-tree-id10574 . -1) (#("c" 0 1 (fontified t)) . -1698) (undo-tree-id10575 . -1) (#("k" 0 1 (fontified t)) . -1699) (undo-tree-id10576 . -1) 1700) nil (25944 34795 129044 0) 0 nil])
([nil nil ((1697 . 1711)) nil (25944 34795 129040 0) 0 nil])
([nil nil ((1710 . 1711)) nil (25944 34795 129039 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1710) (undo-tree-id10573 . -1) 1711) nil (25944 34795 129038 0) 0 nil])
([nil nil ((1710 . 1713)) nil (25944 34795 129035 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1711) (undo-tree-id10563 . -1) (undo-tree-id10564 . -1) (undo-tree-id10565 . -1) (undo-tree-id10566 . -1) (undo-tree-id10567 . -1) (undo-tree-id10568 . -1) (#("g" 0 1 (fontified t)) . -1712) (undo-tree-id10569 . -1) (undo-tree-id10570 . -1) (undo-tree-id10571 . -1) (undo-tree-id10572 . -1) 1713) nil (25944 34795 129034 0) 0 nil])
([nil nil ((1711 . 1713)) nil (25944 34795 129023 0) 0 nil])
([nil nil ((1710 . 1717) (#("log" 0 3 (fontified nil)) . 1710) (1710 . 1713) (#("logging" 0 7 (fontified nil)) . -1710) (1710 . 1717) (#("log" 0 3 (fontified t)) . -1710) (undo-tree-id10549 . -3) (undo-tree-id10550 . -1) (undo-tree-id10551 . -1) (undo-tree-id10552 . -1) (undo-tree-id10553 . -1) (undo-tree-id10554 . -1) (undo-tree-id10555 . -1) (undo-tree-id10556 . -1) (undo-tree-id10557 . -2) (undo-tree-id10558 . -2) (undo-tree-id10559 . -3) (undo-tree-id10560 . -3) (undo-tree-id10561 . -3) (undo-tree-id10562 . -3) 1713) nil (25944 34795 129021 0) 0 nil])
([nil nil ((1717 . 1720)) nil (25944 34795 129004 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1719 1725 #s(yas--snippet nil nil #s(yas--exit 1724 nil) 39 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1724 nil) 39 nil nil nil nil)) (1719 . 1725) (#("log!($0)" 0 8 (fontified nil)) . 1719) (1719 . 1727) (#("l" 0 1 (fontified nil)) . 1719) (1719 . 1720) (#("log!(…)" 0 7 (fontified nil)) . -1719) (1719 . 1726) (#("l" 0 1 (fontified t)) . -1719) (undo-tree-id10544 . -1) (undo-tree-id10545 . -1) (undo-tree-id10546 . -1) (undo-tree-id10547 . -1) (undo-tree-id10548 . -1) 1720) nil (25944 34795 129002 0) 0 nil])
([nil nil ((1724 . 1726)) nil (25944 34795 128994 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1724) (undo-tree-id10531 . -1) (undo-tree-id10532 . -1) (undo-tree-id10533 . -1) (undo-tree-id10534 . -1) (undo-tree-id10535 . -1) (undo-tree-id10536 . -1) (undo-tree-id10537 . -1) (undo-tree-id10538 . -1) (#(":" 0 1 (fontified t)) . -1725) (undo-tree-id10539 . -1) (undo-tree-id10540 . -1) (undo-tree-id10541 . -1) (undo-tree-id10542 . -1) (undo-tree-id10543 . -1) 1726) nil (25944 34795 128991 0) 0 nil])
([nil nil ((1724 . 1726)) nil (25944 34795 128970 0) 0 nil])
([nil nil ((1725 . 1726)) nil (25944 34853 954618 0) 0 nil])
([nil nil ((1707 . 1708)) ((#("_" 0 1 (fontified t)) . 1707) (undo-tree-id10578 . -1) (undo-tree-id10579 . -1) (undo-tree-id10580 . -1) (undo-tree-id10581 . -1) (undo-tree-id10582 . -1) (undo-tree-id10583 . -1) (undo-tree-id10584 . -1) (undo-tree-id10585 . -1) (undo-tree-id10586 . -1) (undo-tree-id10587 . -1) (undo-tree-id10588 . -1) (undo-tree-id10589 . -1) (undo-tree-id10590 . -1) (undo-tree-id10591 . -1) (undo-tree-id10592 . -1) (undo-tree-id10593 . -1) (undo-tree-id10594 . -1) (undo-tree-id10595 . -1) (undo-tree-id10596 . -1) (undo-tree-id10597 . -1) (undo-tree-id10598 . -1) (undo-tree-id10599 . -1) (undo-tree-id10600 . -1) (undo-tree-id10601 . -1) (undo-tree-id10602 . -1) (undo-tree-id10603 . -1) (undo-tree-id10604 . -1) (undo-tree-id10605 . -1) (undo-tree-id10606 . -1) (undo-tree-id10607 . -1) (undo-tree-id10608 . -1) (undo-tree-id10609 . -1) (undo-tree-id10610 . -1) (undo-tree-id10611 . -1) (t 25944 34803 724691 605000)) (25944 34867 659861 0) 0 nil])
([nil nil ((apply -6 1191 1326 undo--wrap-and-run-primitive-undo 1191 1326 ((1256 . 1259) (1195 . 1198) 1319))) nil (25944 34873 285789 0) 0 nil] [nil nil ((#("    let event_vec = create_rw_signal::<Vec<i64>>(vec![]);
    create_local_resource(move || event_vec, listen_on_generic_event);
    " 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 17 (face font-lock-variable-name-face fontified t) 17 20 (fontified t) 20 36 (fontified t) 36 39 (fontified t) 39 42 (face font-lock-type-face fontified t) 42 43 (fontified t) 43 44 (face font-lock-type-face fontified t) 44 46 (face font-lock-type-face fontified t) 46 49 (fontified t) 49 53 (face font-lock-preprocessor-face fontified t) 53 57 (fontified t) 57 58 (fontified t rear-nonsticky t) 58 62 (fontified t) 62 84 (fontified t) 84 88 (face font-lock-keyword-face fontified t) 88 92 (fontified t) 92 101 (fontified t) 101 133 (fontified t)) . -1191) (undo-tree-id10612 . -4) (undo-tree-id10613 . -62) (undo-tree-id10614 . -57) (undo-tree-id10615 . -133) (undo-tree-id10616 . -106) (undo-tree-id10617 . -106) (undo-tree-id10618 . -106) (undo-tree-id10619 . -106) (undo-tree-id10620 . -106) (undo-tree-id10621 . -106) (undo-tree-id10622 . -106) (undo-tree-id10623 . -106) (undo-tree-id10624 . -106) (undo-tree-id10625 . -106) (undo-tree-id10626 . -106) (undo-tree-id10627 . -106) (undo-tree-id10628 . -106) (undo-tree-id10629 . -106) (undo-tree-id10630 . -106) (undo-tree-id10631 . -106) (undo-tree-id10632 . -106) (undo-tree-id10633 . -106) (undo-tree-id10634 . -106) (undo-tree-id10635 . -106) (undo-tree-id10636 . -106) (undo-tree-id10637 . -106) (undo-tree-id10638 . -106) (undo-tree-id10639 . -57) (undo-tree-id10640 . -57) (undo-tree-id10641 . -57) (undo-tree-id10642 . -57) (undo-tree-id10643 . -57) (undo-tree-id10644 . -57) (undo-tree-id10645 . -57) (undo-tree-id10646 . -57) (undo-tree-id10647 . -57) (undo-tree-id10648 . -57) (undo-tree-id10649 . -57) (undo-tree-id10650 . -57) (undo-tree-id10651 . -57) (undo-tree-id10652 . -119) (undo-tree-id10653 . -119) (undo-tree-id10654 . -119) (undo-tree-id10655 . -119) (undo-tree-id10656 . -119) (undo-tree-id10657 . -119) (undo-tree-id10658 . -119) (undo-tree-id10659 . -119) (undo-tree-id10660 . -119) (undo-tree-id10661 . -119) (undo-tree-id10662 . -119) (undo-tree-id10663 . -119) (undo-tree-id10664 . -119) (undo-tree-id10665 . -57) (undo-tree-id10666 . -57) (undo-tree-id10667 . -57) (undo-tree-id10668 . -57) (undo-tree-id10669 . -57) (undo-tree-id10670 . -57) (undo-tree-id10671 . -57) (undo-tree-id10672 . -57) (undo-tree-id10673 . -57) (undo-tree-id10674 . -58) (undo-tree-id10675 . -58) (undo-tree-id10676 . -58) (undo-tree-id10677 . -58) (undo-tree-id10678 . -129) (undo-tree-id10679 . -129) (undo-tree-id10680 . -129) (undo-tree-id10681 . -129) (undo-tree-id10682 . -129) (undo-tree-id10683 . -133) (undo-tree-id10684 . -133) (undo-tree-id10685 . -133) (undo-tree-id10686 . -133) (undo-tree-id10687 . -133) 1320 (t 25944 34803 724691 605000)) ((1191 . 1324)) (25944 34866 773490 0) 0 nil])
([nil nil ((#("1\")" 0 2 (face font-lock-string-face fontified t) 2 3 (fontified t)) . -1732) (undo-tree-id10793 . -2) (undo-tree-id10794 . -3) (undo-tree-id10795 . -2) (undo-tree-id10796 . -2) (undo-tree-id10797 . -2) (undo-tree-id10798 . -2) (undo-tree-id10799 . -2) (undo-tree-id10800 . -2) (undo-tree-id10801 . -2) (undo-tree-id10802 . -2) (undo-tree-id10803 . -2) (undo-tree-id10804 . -2) (undo-tree-id10805 . -2) (undo-tree-id10806 . -2) (undo-tree-id10807 . -2) (undo-tree-id10808 . -2) (undo-tree-id10809 . -2) (undo-tree-id10810 . -2) (undo-tree-id10811 . -2) (undo-tree-id10812 . -2) (undo-tree-id10813 . -3) (undo-tree-id10814 . -3) (undo-tree-id10815 . -3) (undo-tree-id10816 . -3) (undo-tree-id10817 . -3) 1735 (t 25944 34873 311923 464000)) nil (25944 34900 787639 0) 0 nil])
([nil nil ((1191 . 1192)) ((#("
" 0 1 (fontified t)) . 1191)) (25944 34866 773191 0) 0 nil])
([nil nil ((#("log!(\"" 0 4 (face font-lock-preprocessor-face fontified t) 4 5 (fontified t) 5 6 (face font-lock-string-face fontified t)) . -1726) (undo-tree-id10760 . -6) (undo-tree-id10761 . -6) (undo-tree-id10762 . -5) (undo-tree-id10763 . -6) (undo-tree-id10764 . -6) (undo-tree-id10765 . -6) (undo-tree-id10766 . -6) (undo-tree-id10767 . -6) (undo-tree-id10768 . -6) (undo-tree-id10769 . -6) (undo-tree-id10770 . -6) (undo-tree-id10771 . -6) (undo-tree-id10772 . -6) (undo-tree-id10773 . -6) (undo-tree-id10774 . -6) (undo-tree-id10775 . -6) (undo-tree-id10776 . -6) (undo-tree-id10777 . -6) (undo-tree-id10778 . -6) (undo-tree-id10779 . -6) (undo-tree-id10780 . -6) (undo-tree-id10781 . -6) (undo-tree-id10782 . -6) (undo-tree-id10783 . -6) (undo-tree-id10784 . -6) (undo-tree-id10785 . -6) (undo-tree-id10786 . -6) (undo-tree-id10787 . -6) (undo-tree-id10788 . -6) (undo-tree-id10789 . -6) (undo-tree-id10790 . -6) (undo-tree-id10791 . -6) (undo-tree-id10792 . -6) 1732) nil (25944 34900 787613 0) 0 nil])
nil
([nil nil ((#("logging::" 0 7 (face font-lock-constant-face fontified t) 7 9 (fontified t)) . -1717) (undo-tree-id10726 . -9) (undo-tree-id10727 . -9) (undo-tree-id10728 . -9) (undo-tree-id10729 . -9) (undo-tree-id10730 . -9) (undo-tree-id10731 . -9) (undo-tree-id10732 . -9) (undo-tree-id10733 . -9) (undo-tree-id10734 . -9) (undo-tree-id10735 . -9) (undo-tree-id10736 . -9) (undo-tree-id10737 . -9) (undo-tree-id10738 . -9) (undo-tree-id10739 . -9) (undo-tree-id10740 . -9) (undo-tree-id10741 . -9) (undo-tree-id10742 . -9) (undo-tree-id10743 . -9) (undo-tree-id10744 . -9) (undo-tree-id10745 . -9) (undo-tree-id10746 . -9) (undo-tree-id10747 . -9) (undo-tree-id10748 . -9) (undo-tree-id10749 . -9) (undo-tree-id10750 . -9) (undo-tree-id10751 . -9) (undo-tree-id10752 . -9) (undo-tree-id10753 . -9) (undo-tree-id10754 . -9) (undo-tree-id10755 . -9) (undo-tree-id10756 . -9) (undo-tree-id10757 . -9) (undo-tree-id10758 . -9) (undo-tree-id10759 . -9) 1726) nil (25944 34900 787579 0) 0 nil])
([nil nil ((1717 . 1720)) nil (25944 34900 787542 0) 0 nil])
([nil nil ((1717 . 1727) (#("can" 0 3 (fontified nil)) . 1717) (1717 . 1720) (#("canvas_ref" 0 10 (fontified nil)) . -1717) (1717 . 1727) (#("can" 0 3 (fontified t)) . -1717) (undo-tree-id10718 . -3) (undo-tree-id10719 . -1) (undo-tree-id10720 . -2) (undo-tree-id10721 . -2) (undo-tree-id10722 . -3) (undo-tree-id10723 . -3) (undo-tree-id10724 . -3) (undo-tree-id10725 . -3) 1720) nil (25944 34900 787540 0) 0 nil])
([nil nil ((1727 . 1729)) nil (25944 34900 787530 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1728 1733 #s(yas--snippet nil nil #s(yas--exit 1733 nil) 40 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1733 nil) 40 nil nil nil nil)) (1728 . 1733) (#("get()$0" 0 7 (fontified nil)) . 1728) (1728 . 1735) (#("g" 0 1 (fontified nil)) . 1728) (1728 . 1729) (#("get()" 0 5 (fontified nil)) . -1728) (1728 . 1733) (#("g" 0 1 (fontified t)) . -1728) (undo-tree-id10713 . -1) (undo-tree-id10714 . -1) (undo-tree-id10715 . -1) (undo-tree-id10716 . -1) (undo-tree-id10717 . -1) 1729) nil (25944 34900 787528 0) 0 nil])
([nil nil ((1733 . 1735)) nil (25944 34900 787519 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1734 1742 #s(yas--snippet nil nil #s(yas--exit 1742 nil) 41 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1742 nil) 41 nil nil nil nil)) (1734 . 1742) (#("unwrap()$0" 0 10 (fontified nil)) . 1734) (1734 . 1744) (#("u" 0 1 (fontified nil)) . 1734) (1734 . 1735) (#("unwrap()" 0 8 (fontified nil)) . -1734) (1734 . 1742) (#("u" 0 1 (fontified t)) . -1734) (undo-tree-id10708 . -1) (undo-tree-id10709 . -1) (undo-tree-id10710 . -1) (undo-tree-id10711 . -1) (undo-tree-id10712 . -1) 1735) nil (25944 34900 787518 0) 0 nil])
([nil nil ((1742 . 1744)) nil (25944 34900 787509 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1743) (undo-tree-id10703 . -1) (undo-tree-id10704 . -1) (undo-tree-id10705 . -1) (undo-tree-id10706 . -1) (undo-tree-id10707 . -1) 1744) nil (25944 34955 399355 0) 0 nil])
([nil nil ((#("unwrap().}" 0 9 (fontified t) 9 10 (fontified t)) . -1734) (undo-tree-id11230 . -9) (undo-tree-id11231 . -10) (undo-tree-id11232 . -9) (undo-tree-id11233 . 1) (undo-tree-id11234 . -9) (undo-tree-id11235 . -9) (undo-tree-id11236 . -9) (undo-tree-id11237 . -9) (undo-tree-id11238 . -9) (undo-tree-id11239 . -9) (undo-tree-id11240 . -9) (undo-tree-id11241 . -9) (undo-tree-id11242 . -9) (undo-tree-id11243 . -9) (undo-tree-id11244 . -10) (undo-tree-id11245 . -10) (undo-tree-id11246 . -10) (undo-tree-id11247 . -10) (undo-tree-id11248 . -10) 1744) nil (25944 34959 356356 0) 0 nil] [nil nil ((1743 . 1747)) ((#("set_" 0 4 (fontified t)) . 1743) (undo-tree-id10905 . -4) (undo-tree-id10906 . -4) (undo-tree-id10907 . -4) (undo-tree-id10908 . -4) (undo-tree-id10909 . -4) (undo-tree-id10910 . -4)) (25944 34955 177532 0) 0 nil])
([nil nil ((#("get()." 0 6 (fontified t)) . -1728) (undo-tree-id11205 . -6) (undo-tree-id11206 . -6) (undo-tree-id11207 . -6) (undo-tree-id11208 . -6) (undo-tree-id11209 . -6) (undo-tree-id11210 . -6) (undo-tree-id11211 . -6) (undo-tree-id11212 . -6) (undo-tree-id11213 . -6) (undo-tree-id11214 . -6) (undo-tree-id11215 . -6) (undo-tree-id11216 . -6) (undo-tree-id11217 . -6) (undo-tree-id11218 . -6) (undo-tree-id11219 . -6) (undo-tree-id11220 . -6) (undo-tree-id11221 . -6) (undo-tree-id11222 . -6) (undo-tree-id11223 . -6) (undo-tree-id11224 . -6) (undo-tree-id11225 . -6) (undo-tree-id11226 . -6) (undo-tree-id11227 . -6) (undo-tree-id11228 . -6) (undo-tree-id11229 . -6) 1734) nil (25944 34959 356335 0) 0 nil])
([nil nil ((1747 . 1748)) ((#("w" 0 1 (fontified t)) . 1747) (undo-tree-id10902 . -1) (undo-tree-id10903 . -1) (undo-tree-id10904 . -1)) (25944 34954 801609 0) 0 nil])
([nil nil ((#("ref." 0 4 (fontified t)) . -1724) (undo-tree-id11177 . -4) (undo-tree-id11178 . -4) (undo-tree-id11179 . -4) (undo-tree-id11180 . -4) (undo-tree-id11181 . -4) (undo-tree-id11182 . -4) (undo-tree-id11183 . -4) (undo-tree-id11184 . -4) (undo-tree-id11185 . -4) (undo-tree-id11186 . -4) (undo-tree-id11187 . -4) (undo-tree-id11188 . -4) (undo-tree-id11189 . -4) (undo-tree-id11190 . -4) (undo-tree-id11191 . -4) (undo-tree-id11192 . -4) (undo-tree-id11193 . -4) (undo-tree-id11194 . -4) (undo-tree-id11195 . -4) (undo-tree-id11196 . -4) (undo-tree-id11197 . -4) (undo-tree-id11198 . -4) (undo-tree-id11199 . -4) (undo-tree-id11200 . -4) (undo-tree-id11201 . -4) (undo-tree-id11202 . -4) (undo-tree-id11203 . -4) (undo-tree-id11204 . -4) 1728) nil (25944 34959 356309 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -1747) (undo-tree-id10875 . -1) (undo-tree-id10876 . -1) (undo-tree-id10878 . -1) (undo-tree-id10880 . -1) (undo-tree-id10882 . -1) (undo-tree-id10884 . -1) (undo-tree-id10886 . -1) 1748) ((1747 . 1748)) (25944 34954 467265 0) 0 nil] [nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1753 1758 nil nil nil nil #s(yas--exit 1759 nil))) #s(yas--exit 1759 nil) 42 nil #s(yas--field 1 1753 1758 nil nil nil nil #s(yas--exit 1759 nil)) nil nil)) (1743 . 1759) (#("set_width(${1:value})$0" 0 23 (fontified nil)) . 1743) (1743 . 1766) (#("set_w" 0 5 (fontified nil)) . 1743) (1743 . 1748) (#("set_width(…)" 0 12 (fontified nil)) . -1743) (1743 . 1755) (#("set_w" 0 5 (fontified t)) . -1743) (undo-tree-id10688 . -5) (undo-tree-id10689 . -1) (undo-tree-id10690 . -1) (undo-tree-id10691 . -2) (undo-tree-id10692 . -2) (undo-tree-id10693 . -3) (undo-tree-id10694 . -3) (undo-tree-id10695 . -3) (undo-tree-id10696 . -3) (undo-tree-id10697 . -4) (undo-tree-id10698 . -4) (undo-tree-id10699 . -5) (undo-tree-id10700 . -5) (undo-tree-id10701 . -5) (undo-tree-id10702 . -5) 1748) ((1743 . 1748) (#("set_width(…)" 0 12 (fontified nil)) . 1743) (1743 . 1755) (#("set_w" 0 5 (fontified nil)) . 1743) (1743 . 1748) (#("set_width(${1:value})$0" 0 23 (fontified nil)) . 1743) (1743 . 1766) (#("set_width(value)" 0 16 (fontified t)) . 1743) (undo-tree-id10818 . -10) (undo-tree-id10819 . -10) (undo-tree-id10820 . -10) (apply yas--snippet-revive 1743 1759 #s(yas--snippet nil (#s(yas--field 1 1753 1758 nil nil nil nil #s(yas--exit 1759 nil))) #s(yas--exit 1759 nil) 42 nil #s(yas--field 1 1753 1758 nil nil nil nil #s(yas--exit 1759 nil)) nil nil))) (25944 34900 787495 0) 0 nil])
([nil nil ((#("canvas_" 0 7 (fontified t)) . -1717) (undo-tree-id11146 . -7) (undo-tree-id11147 . -7) (undo-tree-id11148 . -7) (undo-tree-id11149 . -7) (undo-tree-id11150 . -7) (undo-tree-id11151 . -7) (undo-tree-id11152 . -7) (undo-tree-id11153 . -7) (undo-tree-id11154 . -7) (undo-tree-id11155 . -7) (undo-tree-id11156 . -7) (undo-tree-id11157 . -7) (undo-tree-id11158 . -7) (undo-tree-id11159 . -7) (undo-tree-id11160 . -7) (undo-tree-id11161 . -7) (undo-tree-id11162 . -7) (undo-tree-id11163 . -7) (undo-tree-id11164 . -7) (undo-tree-id11165 . -7) (undo-tree-id11166 . -7) (undo-tree-id11167 . -7) (undo-tree-id11168 . -7) (undo-tree-id11169 . -7) (undo-tree-id11170 . -7) (undo-tree-id11171 . -7) (undo-tree-id11172 . -7) (undo-tree-id11173 . -7) (undo-tree-id11174 . -7) (undo-tree-id11175 . -7) (undo-tree-id11176 . -7) 1724) nil (25944 34959 356281 0) 0 nil])
([nil nil ((1747 . 1748)) ((#("h" 0 1 (fontified t)) . 1747) (undo-tree-id10899 . -1) (undo-tree-id10900 . -1) (undo-tree-id10901 . -1)) (25944 34954 267036 0) 0 nil])
nil
([nil nil ((#("move |_| {" 0 6 (fontified t) 6 7 (fontified t) 7 10 (fontified t)) . -1707) (undo-tree-id11112 . -10) (undo-tree-id11113 . -10) (undo-tree-id11114 . -10) (undo-tree-id11115 . -10) (undo-tree-id11116 . -10) (undo-tree-id11117 . -10) (undo-tree-id11118 . -10) (undo-tree-id11119 . -10) (undo-tree-id11120 . -10) (undo-tree-id11121 . -10) (undo-tree-id11122 . -10) (undo-tree-id11123 . -10) (undo-tree-id11124 . -10) (undo-tree-id11125 . -10) (undo-tree-id11126 . -10) (undo-tree-id11127 . -10) (undo-tree-id11128 . -10) (undo-tree-id11129 . -10) (undo-tree-id11130 . -10) (undo-tree-id11131 . -10) (undo-tree-id11132 . -10) (undo-tree-id11133 . -10) (undo-tree-id11134 . -10) (undo-tree-id11135 . -10) (undo-tree-id11136 . -10) (undo-tree-id11137 . -10) (undo-tree-id11138 . -10) (undo-tree-id11139 . -10) (undo-tree-id11140 . -10) (undo-tree-id11141 . -10) (undo-tree-id11142 . -10) (undo-tree-id11143 . -10) (undo-tree-id11144 . -10) (undo-tree-id11145 . -10) 1717) nil (25944 34959 356248 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1754 1754 nil nil nil t #s(yas--exit 1760 nil))) #s(yas--exit 1760 nil) 43 nil #s(yas--field 1 1754 1754 nil nil nil t #s(yas--exit 1760 nil)) nil nil)) (1743 . 1760) (#("set_height(${1:value})$0" 0 24 (fontified nil)) . 1743) (1743 . 1767) (#("set_h" 0 5 (fontified nil)) . 1743) (1743 . 1748) (#("set_height(…)" 0 13 (fontified nil)) . -1743) (1743 . 1756) (#("set_h" 0 5 (fontified t)) . -1743) (undo-tree-id10846 . -5) (undo-tree-id10847 . -5) (undo-tree-id10849 . -1) (undo-tree-id10851 . -2) (undo-tree-id10853 . -3) (undo-tree-id10855 . -3) (undo-tree-id10857 . -4) (undo-tree-id10859 . -4) (undo-tree-id10861 . -4) (undo-tree-id10863 . -4) (undo-tree-id10865 . -4) (undo-tree-id10867 . -4) (undo-tree-id10869 . -4) (undo-tree-id10871 . -5) (undo-tree-id10873 . -5) 1748) ((1743 . 1748) (#("set_height(…)" 0 13 (fontified nil)) . 1743) (1743 . 1756) (#("set_h" 0 5 (fontified nil)) . 1743) (1743 . 1748) (#("set_height(${1:value})$0" 0 24 (fontified nil)) . 1743) (1743 . 1767) (#("set_height(value)" 0 11 (fontified t) 11 16 (fontified t) 16 17 (fontified t)) . 1743) (undo-tree-id10893 . -11) (undo-tree-id10894 . -11) (undo-tree-id10895 . 1) (undo-tree-id10896 . -11) (undo-tree-id10897 . -11) (undo-tree-id10898 . -11) (apply yas--snippet-revive 1743 1760 #s(yas--snippet nil (#s(yas--field 1 1754 1754 nil nil nil t #s(yas--exit 1760 nil))) #s(yas--exit 1760 nil) 43 nil #s(yas--field 1 1754 1754 nil nil nil t #s(yas--exit 1760 nil)) nil nil))) (25944 34954 22944 0) 0 nil])
([nil nil ((#("click=" 0 6 (fontified t)) . -1701) (undo-tree-id11077 . -6) (undo-tree-id11078 . -6) (undo-tree-id11079 . -6) (undo-tree-id11080 . -6) (undo-tree-id11081 . -6) (undo-tree-id11082 . -6) (undo-tree-id11083 . -6) (undo-tree-id11084 . -6) (undo-tree-id11085 . -6) (undo-tree-id11086 . -6) (undo-tree-id11087 . -6) (undo-tree-id11088 . -6) (undo-tree-id11089 . -6) (undo-tree-id11090 . -6) (undo-tree-id11091 . -6) (undo-tree-id11092 . -6) (undo-tree-id11093 . -6) (undo-tree-id11094 . -6) (undo-tree-id11095 . -6) (undo-tree-id11096 . -6) (undo-tree-id11097 . -6) (undo-tree-id11098 . -6) (undo-tree-id11099 . -6) (undo-tree-id11100 . -6) (undo-tree-id11101 . -6) (undo-tree-id11102 . -6) (undo-tree-id11103 . -6) (undo-tree-id11104 . -6) (undo-tree-id11105 . -6) (undo-tree-id11106 . -6) (undo-tree-id11107 . -6) (undo-tree-id11108 . -6) (undo-tree-id11109 . -6) (undo-tree-id11110 . -6) (undo-tree-id11111 . -6) 1707) nil (25944 34959 356214 0) 0 nil])
([nil nil ((1755 . 1757) (#("value" 0 5 (fontified nil)) . 1755) (1754 . 1755)) ((#("2" 0 1 (fontified nil)) . 1754) (undo-tree-id10891 . -1) (1755 . 1760) (#("00" 0 1 (fontified t) 1 2 (fontified t)) . 1755) (undo-tree-id10892 . -2)) (25944 34953 915989 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1697) (undo-tree-id10911 . -1) (undo-tree-id10912 . -1) (undo-tree-id10913 . -1) (undo-tree-id10914 . -1) (undo-tree-id10915 . -1) (undo-tree-id10916 . -1) (undo-tree-id10917 . -1) (undo-tree-id10918 . -1) (undo-tree-id10919 . -1) (undo-tree-id10920 . -1) (undo-tree-id10921 . -1) (undo-tree-id10922 . -1) (undo-tree-id10923 . -1) (undo-tree-id10924 . -1) (undo-tree-id10925 . -1) (undo-tree-id10926 . -1) (undo-tree-id10927 . -1) (undo-tree-id10928 . -1) (undo-tree-id10929 . -1) (undo-tree-id10930 . -1) (undo-tree-id10931 . -1) (undo-tree-id10932 . -1) (undo-tree-id10933 . -1) (undo-tree-id10934 . -1) (undo-tree-id10935 . -1) (undo-tree-id10936 . -1) (undo-tree-id10937 . -1) (undo-tree-id10938 . -1) (undo-tree-id10939 . -1) (undo-tree-id10940 . -1) (undo-tree-id10941 . -1) (undo-tree-id10942 . -1) (undo-tree-id10943 . -1) (undo-tree-id10944 . -1) (undo-tree-id10945 . -1) (undo-tree-id10946 . -1) (undo-tree-id10947 . -1) (undo-tree-id10948 . -1) (undo-tree-id10949 . -1) (undo-tree-id10950 . -1) (undo-tree-id10951 . -1) (undo-tree-id10952 . -1) (undo-tree-id10953 . -1) (#("o" 0 1 (fontified t)) . -1698) (undo-tree-id10954 . -1) (undo-tree-id10955 . -1) (undo-tree-id10956 . -1) (undo-tree-id10957 . -1) (undo-tree-id10958 . -1) (undo-tree-id10959 . -1) (undo-tree-id10960 . -1) (undo-tree-id10961 . -1) (undo-tree-id10962 . -1) (undo-tree-id10963 . -1) (undo-tree-id10964 . -1) (undo-tree-id10965 . -1) (undo-tree-id10966 . -1) (undo-tree-id10967 . -1) (undo-tree-id10968 . -1) (undo-tree-id10969 . -1) (undo-tree-id10970 . -1) (undo-tree-id10971 . -1) (undo-tree-id10972 . -1) (undo-tree-id10973 . -1) (undo-tree-id10974 . -1) (undo-tree-id10975 . -1) (undo-tree-id10976 . -1) (undo-tree-id10977 . -1) (undo-tree-id10978 . -1) (undo-tree-id10979 . -1) (undo-tree-id10980 . -1) (undo-tree-id10981 . -1) (undo-tree-id10982 . -1) (undo-tree-id10983 . -1) (undo-tree-id10984 . -1) (undo-tree-id10985 . -1) (undo-tree-id10986 . -1) (undo-tree-id10987 . -1) (undo-tree-id10988 . -1) (undo-tree-id10989 . -1) (undo-tree-id10990 . -1) (undo-tree-id10991 . -1) (undo-tree-id10992 . -1) (undo-tree-id10993 . -1) (undo-tree-id10994 . -1) (undo-tree-id10995 . -1) (#("n" 0 1 (fontified t)) . -1699) (undo-tree-id10996 . -1) (undo-tree-id10997 . -1) (undo-tree-id10998 . -1) (undo-tree-id10999 . -1) (undo-tree-id11000 . -1) (undo-tree-id11001 . -1) (undo-tree-id11002 . -1) (undo-tree-id11003 . -1) (undo-tree-id11004 . -1) (undo-tree-id11005 . -1) (undo-tree-id11006 . -1) (undo-tree-id11007 . -1) (undo-tree-id11008 . -1) (undo-tree-id11009 . -1) (undo-tree-id11010 . -1) (undo-tree-id11011 . -1) (undo-tree-id11012 . -1) (undo-tree-id11013 . -1) (undo-tree-id11014 . -1) (undo-tree-id11015 . -1) (undo-tree-id11016 . -1) (undo-tree-id11017 . -1) (undo-tree-id11018 . -1) (undo-tree-id11019 . -1) (undo-tree-id11020 . -1) (undo-tree-id11021 . -1) (undo-tree-id11022 . -1) (undo-tree-id11023 . -1) (undo-tree-id11024 . -1) (undo-tree-id11025 . -1) (undo-tree-id11026 . -1) (undo-tree-id11027 . -1) (undo-tree-id11028 . -1) (undo-tree-id11029 . -1) (undo-tree-id11030 . -1) (undo-tree-id11031 . -1) (undo-tree-id11032 . -1) (undo-tree-id11033 . -1) (undo-tree-id11034 . -1) (undo-tree-id11035 . -1) (undo-tree-id11036 . -1) (#(":" 0 1 (fontified t)) . -1700) (undo-tree-id11037 . -1) (undo-tree-id11038 . -1) (undo-tree-id11039 . -1) (undo-tree-id11040 . -1) (undo-tree-id11041 . -1) (undo-tree-id11042 . -1) (undo-tree-id11043 . -1) (undo-tree-id11044 . -1) (undo-tree-id11045 . -1) (undo-tree-id11046 . -1) (undo-tree-id11047 . -1) (undo-tree-id11048 . -1) (undo-tree-id11049 . -1) (undo-tree-id11050 . -1) (undo-tree-id11051 . -1) (undo-tree-id11052 . -1) (undo-tree-id11053 . -1) (undo-tree-id11054 . -1) (undo-tree-id11055 . -1) (undo-tree-id11056 . -1) (undo-tree-id11057 . -1) (undo-tree-id11058 . -1) (undo-tree-id11059 . -1) (undo-tree-id11060 . -1) (undo-tree-id11061 . -1) (undo-tree-id11062 . -1) (undo-tree-id11063 . -1) (undo-tree-id11064 . -1) (undo-tree-id11065 . -1) (undo-tree-id11066 . -1) (undo-tree-id11067 . -1) (undo-tree-id11068 . -1) (undo-tree-id11069 . -1) (undo-tree-id11070 . -1) (undo-tree-id11071 . -1) (undo-tree-id11072 . -1) (undo-tree-id11073 . -1) (undo-tree-id11074 . -1) (undo-tree-id11075 . -1) (undo-tree-id11076 . -1) 1701) nil (25944 34959 356164 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1743 1758 #s(yas--snippet nil (#s(yas--field 1 1754 1754 nil nil nil t #s(yas--exit 1760 nil))) #s(yas--exit 1760 nil) 43 nil #s(yas--field 1 1754 1754 nil nil nil t #s(yas--exit 1760 nil)) nil nil))) ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1754 1754 nil nil nil t #s(yas--exit 1760 nil))) #s(yas--exit 1760 nil) 43 nil #s(yas--field 1 1754 1754 nil nil nil t #s(yas--exit 1760 nil)) nil nil))) (25944 34953 915947 0) 0 nil] [nil nil ((#("2" 0 1 (fontified t)) . -1754) (undo-tree-id10821 . -1) (undo-tree-id10822 . -1) (undo-tree-id10824 . -1) (undo-tree-id10826 . -1) (undo-tree-id10828 . -1) (undo-tree-id10830 . -1) (#("0" 0 1 (fontified t)) . -1755) (undo-tree-id10831 . -1) (undo-tree-id10832 . -1) (undo-tree-id10834 . -1) (undo-tree-id10836 . -1) (undo-tree-id10838 . -1) (#("0" 0 1 (fontified t)) . -1756) (undo-tree-id10839 . -1) (undo-tree-id10840 . -1) (undo-tree-id10842 . -1) (undo-tree-id10844 . -1) 1757) ((1754 . 1757)) (25944 34953 219709 0) 0 nil])
([nil nil ((1493 . 1498) (t 25944 34959 385071 633000)) nil (25944 34977 364309 0) 0 nil])
nil
([nil nil ((1754 . 1757)) ((#("400" 0 3 (fontified t)) . 1754) (undo-tree-id10890 . -3) (t 25944 34906 450755 96000)) (25944 34951 917906 0) 0 nil])
([nil nil ((1498 . 1501)) nil (25944 34977 364308 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1743 1758 #s(yas--snippet nil (#s(yas--field 1 1754 1754 nil nil nil t #s(yas--exit 1760 nil))) #s(yas--exit 1760 nil) 43 nil #s(yas--field 1 1754 1754 nil nil nil t #s(yas--exit 1760 nil)) nil nil))) ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1754 1754 nil nil nil t #s(yas--exit 1760 nil))) #s(yas--exit 1760 nil) 43 nil #s(yas--field 1 1754 1754 nil nil nil t #s(yas--exit 1760 nil)) nil nil))) (25944 34951 751644 0) 0 nil])
([nil nil ((1498 . 1508) (#("can" 0 3 (fontified nil)) . 1498) (1498 . 1501) (#("canvas_ref" 0 10 (fontified nil)) . -1498) (1498 . 1508) (#("can" 0 3 (fontified t)) . -1498) (undo-tree-id11327 . -3) (undo-tree-id11328 . -1) (undo-tree-id11329 . -2) (undo-tree-id11330 . -3) (undo-tree-id11331 . -3) (undo-tree-id11332 . -3) (undo-tree-id11333 . -3) 1501) nil (25944 34977 364306 0) 0 nil])
([nil nil ((1493 . 1498) (t 25944 34906 450755 96000)) ((#("
    " 0 5 (fontified t)) . 1493) (undo-tree-id10888 . -5) (undo-tree-id10889 . -1)) (25944 34951 751198 0) 0 nil])
([nil nil ((1508 . 1509)) nil (25944 34977 364297 0) 0 nil])
nil
([nil nil ((#(";" 0 1 (fontified t)) . -1508) (undo-tree-id11319 . -1) (undo-tree-id11320 . -1) (undo-tree-id11321 . -1) (undo-tree-id11322 . -1) (undo-tree-id11323 . -1) (undo-tree-id11324 . -1) (undo-tree-id11325 . -1) (undo-tree-id11326 . -1) 1509) nil (25944 34977 364296 0) 0 nil])
([nil nil ((1508 . 1511)) nil (25944 34977 364286 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1509 1514 #s(yas--snippet nil nil #s(yas--exit 1514 nil) 44 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1514 nil) 44 nil nil nil nil)) (1509 . 1514) (#("get()$0" 0 7 (fontified nil)) . 1509) (1509 . 1516) (#("ge" 0 2 (fontified nil)) . 1509) (1509 . 1511) (#("get()" 0 5 (fontified nil)) . -1509) (1509 . 1514) (#("ge" 0 2 (fontified t)) . -1509) (undo-tree-id11314 . -2) (undo-tree-id11315 . -1) (undo-tree-id11316 . -1) (undo-tree-id11317 . -2) (undo-tree-id11318 . -2) 1511) nil (25944 34977 364284 0) 0 nil])
([nil nil ((1514 . 1516)) nil (25944 34977 364276 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1515) (undo-tree-id11309 . -1) (undo-tree-id11310 . -1) (undo-tree-id11311 . -1) (undo-tree-id11312 . -1) (undo-tree-id11313 . -1) 1516) nil (25944 34977 364275 0) 0 nil])
([nil nil ((1515 . 1516)) nil (25944 34977 364269 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1515 1523 #s(yas--snippet nil nil #s(yas--exit 1523 nil) 45 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1523 nil) 45 nil nil nil nil)) (1515 . 1523) (#("unwrap()$0" 0 10 (fontified nil)) . 1515) (1515 . 1525) (#("u" 0 1 (fontified nil)) . 1515) (1515 . 1516) (#("unwrap()" 0 8 (fontified nil)) . -1515) (1515 . 1523) (#("u" 0 1 (fontified t)) . -1515) (undo-tree-id11304 . -1) (undo-tree-id11305 . -1) (undo-tree-id11306 . -1) (undo-tree-id11307 . -1) (undo-tree-id11308 . -1) 1516) nil (25944 34977 364267 0) 0 nil])
([nil nil ((1523 . 1525)) nil (25944 34977 364259 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1524) (undo-tree-id11298 . -1) (undo-tree-id11299 . -1) (undo-tree-id11300 . -1) (undo-tree-id11301 . -1) (undo-tree-id11302 . -1) (undo-tree-id11303 . -1) 1525) nil (25944 34977 364258 0) 0 nil])
([nil nil ((1524 . 1529)) nil (25944 34977 364249 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1527) (undo-tree-id11290 . -1) (undo-tree-id11291 . -1) (undo-tree-id11292 . -1) (undo-tree-id11293 . -1) (undo-tree-id11294 . -1) (undo-tree-id11295 . -1) (#("h" 0 1 (fontified t)) . -1528) (undo-tree-id11296 . -1) (undo-tree-id11297 . -1) 1529) nil (25944 34977 364247 0) 0 nil])
([nil nil ((1527 . 1528)) nil (25944 34977 364238 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1527) (undo-tree-id11286 . -1) (undo-tree-id11287 . -1) (undo-tree-id11288 . -1) (undo-tree-id11289 . -1) 1528) nil (25944 34977 364237 0) 0 nil])
([nil nil ((1527 . 1529)) nil (25944 34977 364232 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1535 1538 nil nil nil t #s(yas--exit 1539 nil))) #s(yas--exit 1539 nil) 46 nil #s(yas--field 1 1535 1538 nil nil nil t #s(yas--exit 1539 nil)) nil nil)) (1524 . 1541) (#("set_height(${1:value})$0" 0 24 (fontified nil)) . 1524) (1524 . 1548) (#("set_h" 0 5 (fontified nil)) . 1524) (1524 . 1529) (#("set_height(…)" 0 13 (fontified nil)) . -1524) (1524 . 1537) (#("set_h" 0 5 (fontified t)) . -1524) (undo-tree-id11258 . -5) (undo-tree-id11259 . -1) (undo-tree-id11260 . -1) (undo-tree-id11261 . -2) (undo-tree-id11262 . -2) (undo-tree-id11263 . -3) (undo-tree-id11264 . -3) (undo-tree-id11265 . -3) (undo-tree-id11266 . -3) (undo-tree-id11267 . -3) (undo-tree-id11268 . -3) (undo-tree-id11269 . -3) (undo-tree-id11270 . -3) (undo-tree-id11271 . -3) (undo-tree-id11272 . -3) (undo-tree-id11273 . -3) (undo-tree-id11274 . -3) (undo-tree-id11275 . -3) (undo-tree-id11276 . -3) (undo-tree-id11277 . -3) (undo-tree-id11278 . -3) (undo-tree-id11279 . -4) (undo-tree-id11280 . -4) (undo-tree-id11281 . -4) (undo-tree-id11282 . -5) (undo-tree-id11283 . -5) (undo-tree-id11284 . -5) (undo-tree-id11285 . -5) 1529) nil (25944 34977 364229 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified nil)) . 1536) (undo-tree-id11257 . -5) (1535 . 1536)) nil (25944 34977 364196 0) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -1535) (undo-tree-id11249 . -1) (undo-tree-id11250 . -1) (undo-tree-id11251 . -1) (undo-tree-id11252 . -1) (undo-tree-id11253 . -1) (undo-tree-id11254 . -1) (undo-tree-id11255 . -1) (undo-tree-id11256 . -1) 1536) nil (25944 34977 364193 0) 0 nil])
([nil nil ((1535 . 1538)) nil (25944 34977 364176 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1524 1539 #s(yas--snippet nil (#s(yas--field 1 1535 1538 nil nil nil t #s(yas--exit 1539 nil))) #s(yas--exit 1539 nil) 46 nil #s(yas--field 1 1535 1538 nil nil nil t #s(yas--exit 1539 nil)) nil nil))) nil (25944 34977 364175 0) 0 nil])
([nil nil ((1539 . 1540)) nil (25944 34977 364171 0) 0 nil])
([nil nil ((1498 . 1499) (t 25944 34977 391431 151000)) nil (25944 35036 945914 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -1498) (undo-tree-id11524 . -1) (undo-tree-id11525 . -1) (undo-tree-id11526 . -1) (undo-tree-id11527 . -1) (undo-tree-id11528 . -1) 1499) nil (25944 35036 945913 0) 0 nil])
([nil nil ((1498 . 1499)) nil (25944 35036 945907 0) 0 nil])
([nil nil ((1498 . 1502)) nil (25944 35036 945906 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1497) (undo-tree-id11432 . -1) (undo-tree-id11433 . -1) (undo-tree-id11434 . -1) (undo-tree-id11435 . -1) (undo-tree-id11436 . -1) (undo-tree-id11437 . -1) (undo-tree-id11438 . -1) (undo-tree-id11439 . -1) (undo-tree-id11440 . -1) (undo-tree-id11441 . -1) (undo-tree-id11442 . -1) (undo-tree-id11443 . -1) (undo-tree-id11444 . -1) (undo-tree-id11445 . -1) (undo-tree-id11446 . -1) (undo-tree-id11447 . -1) (undo-tree-id11448 . -1) (undo-tree-id11449 . -1) (undo-tree-id11450 . -1) (undo-tree-id11451 . -1) (undo-tree-id11452 . -1) (undo-tree-id11453 . -1) (undo-tree-id11454 . -1) (undo-tree-id11455 . -1) (undo-tree-id11456 . -1) (undo-tree-id11457 . -1) (undo-tree-id11458 . -1) (undo-tree-id11459 . -1) (undo-tree-id11460 . -1) (undo-tree-id11461 . -1) (undo-tree-id11462 . -1) (undo-tree-id11463 . -1) (undo-tree-id11464 . -1) (undo-tree-id11465 . -1) (undo-tree-id11466 . -1) (undo-tree-id11467 . -1) (undo-tree-id11468 . -1) (undo-tree-id11469 . -1) (undo-tree-id11470 . -1) (undo-tree-id11471 . -1) (undo-tree-id11472 . -1) (undo-tree-id11473 . -1) (undo-tree-id11474 . -1) (undo-tree-id11475 . -1) (undo-tree-id11476 . -1) (undo-tree-id11477 . -1) (undo-tree-id11478 . -1) (undo-tree-id11479 . -1) (undo-tree-id11480 . -1) (#("c" 0 1 (fontified t)) . -1498) (undo-tree-id11481 . -1) (undo-tree-id11482 . -1) (undo-tree-id11483 . -1) (undo-tree-id11484 . -1) (undo-tree-id11485 . -1) (undo-tree-id11486 . -1) (undo-tree-id11487 . -1) (undo-tree-id11488 . -1) (undo-tree-id11489 . -1) (undo-tree-id11490 . -1) (undo-tree-id11491 . -1) (undo-tree-id11492 . -1) (undo-tree-id11493 . -1) (undo-tree-id11494 . -1) (undo-tree-id11495 . -1) (undo-tree-id11496 . -1) (#("r" 0 1 (fontified t)) . -1499) (undo-tree-id11497 . -1) (undo-tree-id11498 . -1) (undo-tree-id11499 . -1) (undo-tree-id11500 . -1) (undo-tree-id11501 . -1) (undo-tree-id11502 . -1) (undo-tree-id11503 . -1) (undo-tree-id11504 . -1) (undo-tree-id11505 . -1) (undo-tree-id11506 . -1) (undo-tree-id11507 . -1) (undo-tree-id11508 . -1) (undo-tree-id11509 . -1) (#("e" 0 1 (fontified t)) . -1500) (undo-tree-id11510 . -1) (undo-tree-id11511 . -1) (undo-tree-id11512 . -1) (undo-tree-id11513 . -1) (undo-tree-id11514 . -1) (undo-tree-id11515 . -1) (undo-tree-id11516 . -1) (undo-tree-id11517 . -1) (undo-tree-id11518 . -1) (#("a" 0 1 (fontified t)) . -1501) (undo-tree-id11519 . -1) (undo-tree-id11520 . -1) (undo-tree-id11521 . -1) (undo-tree-id11522 . -1) (undo-tree-id11523 . -1) 1502) nil (25944 35036 945900 0) 0 nil])
([nil nil ((#("canvas_ref.get().unwrap().set_height(400);" 0 11 (fontified t) 11 17 (fontified t) 17 26 (fontified t) 26 42 (fontified t)) . 1498) (undo-tree-id11334 . -10) (undo-tree-id11335 . -10) (undo-tree-id11336 . -10) (undo-tree-id11337 . -10) (undo-tree-id11338 . -10) (undo-tree-id11339 . -10) (undo-tree-id11340 . -10) (undo-tree-id11341 . -11) (undo-tree-id11342 . -11) (undo-tree-id11343 . -11) (undo-tree-id11344 . -11) (undo-tree-id11345 . -17) (undo-tree-id11346 . -17) (undo-tree-id11347 . -17) (undo-tree-id11348 . -17) (undo-tree-id11349 . -17) (undo-tree-id11350 . -17) (undo-tree-id11351 . -17) (undo-tree-id11352 . -17) (undo-tree-id11353 . -26) (undo-tree-id11354 . -26) (undo-tree-id11355 . -26) (undo-tree-id11356 . -26) (undo-tree-id11357 . -26) (undo-tree-id11358 . -26) (undo-tree-id11359 . -26) (undo-tree-id11360 . -26) (undo-tree-id11361 . -26) (undo-tree-id11362 . -26) (undo-tree-id11363 . -26) (undo-tree-id11364 . -26) (undo-tree-id11365 . -26) (undo-tree-id11366 . -26) (undo-tree-id11367 . -26) (undo-tree-id11368 . -26) (undo-tree-id11369 . -26) (undo-tree-id11370 . -26) (undo-tree-id11371 . -26) (undo-tree-id11372 . -26) (undo-tree-id11373 . -26) (undo-tree-id11374 . -26) (undo-tree-id11375 . -26) (undo-tree-id11376 . -26) (undo-tree-id11377 . -26) (undo-tree-id11378 . -26) (undo-tree-id11379 . -26) (undo-tree-id11380 . -26) (undo-tree-id11381 . -26) (undo-tree-id11382 . -26) (undo-tree-id11383 . -26) (undo-tree-id11384 . -26) (undo-tree-id11385 . -37) (undo-tree-id11386 . -37) (undo-tree-id11387 . -37) (undo-tree-id11388 . -37) (undo-tree-id11389 . -37) (undo-tree-id11390 . -37) (undo-tree-id11391 . -42) (undo-tree-id11392 . -42) (undo-tree-id11393 . -42) (undo-tree-id11394 . -42) (undo-tree-id11395 . -42) (undo-tree-id11396 . -42) (undo-tree-id11397 . -42) (undo-tree-id11398 . -42) (undo-tree-id11399 . -42) (undo-tree-id11400 . -42) (undo-tree-id11401 . -42) (undo-tree-id11402 . -42) (undo-tree-id11403 . -42) (undo-tree-id11404 . -42) (undo-tree-id11405 . -42) (undo-tree-id11406 . -42) (undo-tree-id11407 . -42) (undo-tree-id11408 . -42) (undo-tree-id11409 . -42) (undo-tree-id11410 . -42) (undo-tree-id11411 . -42) (undo-tree-id11412 . -42) (undo-tree-id11413 . -42) (undo-tree-id11414 . -42) (undo-tree-id11415 . -42) (undo-tree-id11416 . -42) (undo-tree-id11417 . -42) (undo-tree-id11418 . -42) (undo-tree-id11419 . -42) (undo-tree-id11420 . -42) (undo-tree-id11421 . -42) (undo-tree-id11422 . -42) (undo-tree-id11423 . -42) (undo-tree-id11424 . -42) (undo-tree-id11425 . -42) (undo-tree-id11426 . -42) (undo-tree-id11427 . -42) (undo-tree-id11428 . -42) (undo-tree-id11429 . -42) (undo-tree-id11430 . -42) (undo-tree-id11431 . -42)) nil (25944 35036 945802 0) 0 nil])
([nil nil ((1498 . 1501) (t 25944 35036 974655 119000)) nil (25944 35065 641446 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1498) (undo-tree-id11547 . -1) (undo-tree-id11548 . -1) (undo-tree-id11549 . -1) (undo-tree-id11550 . -1) (undo-tree-id11551 . -1) (undo-tree-id11552 . -1) (undo-tree-id11553 . -1) (undo-tree-id11554 . -1) (undo-tree-id11555 . -1) (undo-tree-id11556 . -1) (undo-tree-id11557 . -1) (undo-tree-id11558 . -1) (undo-tree-id11559 . -1) (undo-tree-id11560 . -1) (#("e" 0 1 (fontified t)) . -1499) (undo-tree-id11561 . -1) (undo-tree-id11562 . -1) (undo-tree-id11563 . -1) (undo-tree-id11564 . -1) (undo-tree-id11565 . -1) (undo-tree-id11566 . -1) (undo-tree-id11567 . -1) (undo-tree-id11568 . -1) (undo-tree-id11569 . -1) (undo-tree-id11570 . -1) (undo-tree-id11571 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -1500) (undo-tree-id11572 . -1) (undo-tree-id11573 . -1) (undo-tree-id11574 . -1) (undo-tree-id11575 . -1) (undo-tree-id11576 . -1) (undo-tree-id11577 . -1) (undo-tree-id11578 . -1) 1501) nil (25944 35066 237502 0) 0 nil])
([nil nil ((1498 . 1506)) nil (25944 35108 304359 0) 0 nil] [nil nil ((1498 . 1502)) ((#("crea" 0 4 (fontified t)) . 1498) (undo-tree-id11587 . -4) (undo-tree-id11588 . -4) (undo-tree-id11589 . -1) (undo-tree-id11590 . -1) (undo-tree-id11591 . -1) (undo-tree-id11592 . -1) (undo-tree-id11593 . -1) (undo-tree-id11594 . -2) (undo-tree-id11595 . -2) (undo-tree-id11596 . -3) (undo-tree-id11597 . -3) (undo-tree-id11598 . -3) (undo-tree-id11599 . -3) (undo-tree-id11600 . -4) (undo-tree-id11601 . -4) (undo-tree-id11602 . -4) (undo-tree-id11603 . -4) (undo-tree-id11604 . -4) (undo-tree-id11605 . -4) (undo-tree-id11606 . -4) (undo-tree-id11607 . -4) (undo-tree-id11608 . -4) (undo-tree-id11609 . -4) (undo-tree-id11610 . -4) (undo-tree-id11611 . -4) (undo-tree-id11612 . -4)) (25944 35065 783832 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1512 1514 nil nil nil t #s(yas--exit 1515 nil))) #s(yas--exit 1515 nil) 48 nil #s(yas--field 1 1512 1514 nil nil nil t #s(yas--exit 1515 nil)) nil nil)) (1498 . 1514) (#("create_effect(${1:f})$0" 0 23 (fontified nil)) . 1498) (1498 . 1521) (#("create_e" 0 8 (fontified nil)) . 1498) (1498 . 1506) (#("create_effect(…)" 0 16 (fontified nil)) . -1498) (1498 . 1514) (#("create_e" 0 8 (fontified t)) . -1498) (undo-tree-id11680 . -8) 1506) nil (25944 35108 304357 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1512 1513 nil nil nil nil #s(yas--exit 1514 nil))) #s(yas--exit 1514 nil) 47 nil #s(yas--field 1 1512 1513 nil nil nil nil #s(yas--exit 1514 nil)) nil nil)) (1498 . 1514) (#("create_effect(${1:f})$0" 0 23 (fontified nil)) . 1498) (1498 . 1521) (#("crea" 0 4 (fontified nil)) . 1498) (1498 . 1502) (#("create_effect(…)" 0 16 (fontified nil)) . -1498) (1498 . 1514) (#("crea" 0 4 (fontified t)) . -1498) (undo-tree-id11529 . -4) (undo-tree-id11530 . -1) (undo-tree-id11531 . -1) (undo-tree-id11532 . -1) (undo-tree-id11533 . -1) (undo-tree-id11534 . -1) (undo-tree-id11535 . -2) (undo-tree-id11536 . -2) (undo-tree-id11537 . -3) (undo-tree-id11538 . -3) (undo-tree-id11539 . -3) (undo-tree-id11540 . -3) (undo-tree-id11541 . -4) (undo-tree-id11542 . -4) (undo-tree-id11543 . -4) (undo-tree-id11544 . -4) (undo-tree-id11545 . -4) (undo-tree-id11546 . -4) 1502) ((1498 . 1502) (#("create_effect(…)" 0 16 (fontified nil)) . 1498) (1498 . 1514) (#("crea" 0 4 (fontified nil)) . 1498) (1498 . 1502) (#("create_effect(${1:f})$0" 0 23 (fontified nil)) . 1498) (1498 . 1521) (#("create_effect(f)" 0 16 (fontified t)) . 1498) (undo-tree-id11579 . -14) (undo-tree-id11580 . -14) (undo-tree-id11581 . -14) (undo-tree-id11582 . -14) (undo-tree-id11583 . -14) (undo-tree-id11584 . -14) (undo-tree-id11585 . -14) (undo-tree-id11586 . -14) (apply yas--snippet-revive 1498 1514 #s(yas--snippet nil (#s(yas--field 1 1512 1513 nil nil nil nil #s(yas--exit 1514 nil))) #s(yas--exit 1514 nil) 47 nil #s(yas--field 1 1512 1513 nil nil nil nil #s(yas--exit 1514 nil)) nil nil))) (25944 35065 641488 0) 0 nil])
([nil nil ((1513 . 1514) (#("f" 0 1 (fontified nil)) . 1513) (1512 . 1513)) nil (25944 35108 304353 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1498 1514 #s(yas--snippet nil (#s(yas--field 1 1512 1513 nil nil nil nil #s(yas--exit 1514 nil))) #s(yas--exit 1514 nil) 47 nil #s(yas--field 1 1512 1513 nil nil nil nil #s(yas--exit 1514 nil)) nil nil))) ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1512 1513 nil nil nil nil #s(yas--exit 1514 nil))) #s(yas--exit 1514 nil) 47 nil #s(yas--field 1 1512 1513 nil nil nil nil #s(yas--exit 1514 nil)) nil nil))) (25944 35065 641369 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1498 1515 #s(yas--snippet nil (#s(yas--field 1 1512 1514 nil nil nil t #s(yas--exit 1515 nil))) #s(yas--exit 1515 nil) 48 nil #s(yas--field 1 1512 1514 nil nil nil t #s(yas--exit 1515 nil)) nil nil))) nil (25944 35108 304351 0) 0 nil])
nil
([nil nil ((#("|" 0 1 (fontified t)) . -1512) (undo-tree-id11672 . -1) (undo-tree-id11673 . -1) (undo-tree-id11674 . -1) (undo-tree-id11675 . -1) (#("|" 0 1 (fontified t)) . -1513) (undo-tree-id11676 . -1) (undo-tree-id11677 . -1) (undo-tree-id11678 . -1) (undo-tree-id11679 . -1) 1514) nil (25944 35108 304349 0) 0 nil])
([nil nil ((1512 . 1519)) nil (25944 35108 304339 0) 0 nil])
([nil nil ((1519 . 1522)) nil (25944 35108 304338 0) 0 nil])
([nil nil ((1523 . 1524)) nil (25944 35108 304337 0) 0 nil])
([nil nil ((1523 . 1527) (#("	" 0 1 (fontified nil)) . 1522) (1522 . 1523) (#("    " 0 4 (fontified nil)) . 1522) (undo-tree-id11671 . -4) (1521 . 1527)) nil (25944 35108 304336 0) 0 nil])
([nil nil ((1522 . 1523)) nil (25944 35108 304333 0) 0 nil])
([nil nil ((1523 . 1524)) nil (25944 35108 304332 0) 0 nil])
([nil nil ((1523 . 1533) (#("c" 0 1 (fontified nil)) . 1523) (1523 . 1524) (#("canvas_ref" 0 10 (fontified nil)) . -1523) (1523 . 1533) (#("c" 0 1 (fontified t)) . -1523) (undo-tree-id11670 . -1) 1524) nil (25944 35108 304331 0) 0 nil])
([nil nil ((1533 . 1537)) nil (25944 35108 304327 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1534 1539 #s(yas--snippet nil nil #s(yas--exit 1539 nil) 49 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1539 nil) 49 nil nil nil nil)) (1534 . 1539) (#("get()$0" 0 7 (fontified nil)) . 1534) (1534 . 1541) (#("get" 0 3 (fontified nil)) . 1534) (1534 . 1537) (#("get()" 0 5 (fontified nil)) . -1534) (1534 . 1539) (#("get" 0 3 (fontified t)) . -1534) (undo-tree-id11669 . -3) 1537) nil (25944 35108 304325 0) 0 nil])
([nil nil ((1539 . 1542)) nil (25944 35108 304321 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1540 1548 #s(yas--snippet nil nil #s(yas--exit 1548 nil) 50 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1548 nil) 50 nil nil nil nil)) (1540 . 1548) (#("unwrap()$0" 0 10 (fontified nil)) . 1540) (1540 . 1550) (#("un" 0 2 (fontified nil)) . 1540) (1540 . 1542) (#("unwrap()" 0 8 (fontified nil)) . -1540) (1540 . 1548) (#("un" 0 2 (fontified t)) . -1540) (undo-tree-id11668 . -2) 1542) nil (25944 35108 304319 0) 0 nil])
([nil nil ((1548 . 1549)) nil (25944 35108 304314 0) 0 nil])
([nil nil ((1549 . 1554)) nil (25944 35108 304313 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1560 1563 nil nil nil t #s(yas--exit 1564 nil))) #s(yas--exit 1564 nil) 51 nil #s(yas--field 1 1560 1563 nil nil nil t #s(yas--exit 1564 nil)) nil nil)) (1549 . 1566) (#("set_height(${1:value})$0" 0 24 (fontified nil)) . 1549) (1549 . 1573) (#("set_h" 0 5 (fontified nil)) . 1549) (1549 . 1554) (#("set_height(…)" 0 13 (fontified nil)) . -1549) (1549 . 1562) (#("set_h" 0 5 (fontified t)) . -1549) (undo-tree-id11652 . -5) (undo-tree-id11653 . -1) (undo-tree-id11654 . -1) (undo-tree-id11655 . -1) (undo-tree-id11656 . -2) (undo-tree-id11657 . -2) (undo-tree-id11658 . -3) (undo-tree-id11659 . -3) (undo-tree-id11660 . -4) (undo-tree-id11661 . -4) (undo-tree-id11662 . -4) (undo-tree-id11663 . -4) (undo-tree-id11664 . -5) (undo-tree-id11665 . -5) (undo-tree-id11666 . -5) (undo-tree-id11667 . -5) 1554) nil (25944 35108 304311 0) 0 nil])
([nil nil ((1561 . 1563) (#("value" 0 5 (fontified nil)) . 1561) (undo-tree-id11651 . -5) (1560 . 1561)) nil (25944 35108 304292 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -1560) (undo-tree-id11631 . -1) (undo-tree-id11632 . -1) (undo-tree-id11633 . -1) (undo-tree-id11634 . -1) (undo-tree-id11635 . -1) (undo-tree-id11636 . -1) (undo-tree-id11637 . -1) (undo-tree-id11638 . -1) (undo-tree-id11639 . -1) (undo-tree-id11640 . -1) (#("9" 0 1 (fontified t)) . -1561) (undo-tree-id11641 . -1) (undo-tree-id11642 . -1) (undo-tree-id11643 . -1) (undo-tree-id11644 . -1) (undo-tree-id11645 . -1) (undo-tree-id11646 . -1) (#("9" 0 1 (fontified t)) . -1562) (undo-tree-id11647 . -1) (undo-tree-id11648 . -1) (undo-tree-id11649 . -1) (undo-tree-id11650 . -1) 1563) nil (25944 35108 304288 0) 0 nil])
([nil nil ((1560 . 1563)) nil (25944 35108 304267 0) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -1560) (undo-tree-id11613 . -1) (undo-tree-id11614 . -1) (undo-tree-id11615 . -1) (undo-tree-id11616 . -1) (undo-tree-id11617 . -1) (undo-tree-id11618 . -1) (undo-tree-id11619 . -1) (undo-tree-id11620 . -1) (#("0" 0 1 (fontified t)) . -1561) (undo-tree-id11621 . -1) (undo-tree-id11622 . -1) (undo-tree-id11623 . -1) (undo-tree-id11624 . -1) (undo-tree-id11625 . -1) (undo-tree-id11626 . -1) (#("0" 0 1 (fontified t)) . -1562) (undo-tree-id11627 . -1) (undo-tree-id11628 . -1) (undo-tree-id11629 . -1) (undo-tree-id11630 . -1) 1563) nil (25944 35108 304265 0) 0 nil])
([nil nil ((1560 . 1563)) nil (25944 35108 304238 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1549 1564 #s(yas--snippet nil (#s(yas--field 1 1560 1563 nil nil nil t #s(yas--exit 1564 nil))) #s(yas--exit 1564 nil) 51 nil #s(yas--field 1 1560 1563 nil nil nil t #s(yas--exit 1564 nil)) nil nil))) nil (25944 35108 304236 0) 0 nil])
([nil nil ((1564 . 1565)) nil (25944 35108 304232 0) 0 nil])
([nil nil ((1518 . 1519) (t 25944 35108 332106 768000)) nil (25944 35114 717697 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -1561) (undo-tree-id11681 . -1) (undo-tree-id11682 . -1) (undo-tree-id11683 . -1) (undo-tree-id11684 . -1) (undo-tree-id11685 . -1) (undo-tree-id11686 . -1) (undo-tree-id11687 . -1) (undo-tree-id11688 . -1) (undo-tree-id11689 . -1) (undo-tree-id11690 . -1) (undo-tree-id11691 . -1) (undo-tree-id11692 . -1) (undo-tree-id11693 . -1) (undo-tree-id11694 . -1) 1562 (t 25944 35114 745750 314000)) nil (25944 35123 640346 0) 0 nil])
([nil nil ((1561 . 1562)) nil (25944 35123 640322 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -1561) (undo-tree-id11695 . -1) (undo-tree-id11696 . -1) (undo-tree-id11697 . -1) (undo-tree-id11698 . -1) (undo-tree-id11699 . -1) (undo-tree-id11700 . -1) (undo-tree-id11701 . -1) (undo-tree-id11702 . -1) (undo-tree-id11703 . -1) (undo-tree-id11704 . -1) (undo-tree-id11705 . -1) (undo-tree-id11706 . -1) (undo-tree-id11707 . -1) (undo-tree-id11708 . -1) (undo-tree-id11709 . -1) (undo-tree-id11710 . -1) (undo-tree-id11711 . -1) (undo-tree-id11712 . -1) (undo-tree-id11713 . -1) (undo-tree-id11714 . -1) (undo-tree-id11715 . -1) (undo-tree-id11716 . -1) (undo-tree-id11717 . -1) (undo-tree-id11718 . -1) (undo-tree-id11719 . -1) (undo-tree-id11720 . -1) (undo-tree-id11721 . -1) (undo-tree-id11722 . -1) (undo-tree-id11723 . -1) (undo-tree-id11724 . -1) (undo-tree-id11725 . -1) (undo-tree-id11726 . -1) (undo-tree-id11727 . -1) (undo-tree-id11728 . -1) (undo-tree-id11729 . -1) (undo-tree-id11730 . -1) 1562 (t 25944 35123 668318 215000)) nil (25944 35128 177118 0) 0 nil])
([nil nil ((1561 . 1562)) nil (25944 35128 177066 0) 0 nil])
([nil nil ((#("	canvas_ref.get().unwrap().set_height(200);" 0 1 (fontified t) 1 12 (fontified t) 12 18 (fontified t) 18 27 (fontified t) 27 43 (fontified t)) . 1523) (undo-tree-id11769 . -43) (undo-tree-id11770 . -38) (undo-tree-id11771 . -38) (undo-tree-id11772 . -38) (undo-tree-id11773 . -38) (undo-tree-id11774 . -38) (undo-tree-id11775 . -38) (undo-tree-id11776 . -38) (undo-tree-id11777 . -38) (undo-tree-id11778 . -38) (undo-tree-id11779 . -38) (undo-tree-id11780 . -38) (undo-tree-id11781 . -38) (undo-tree-id11782 . -38) (undo-tree-id11783 . -38) (undo-tree-id11784 . -38) (undo-tree-id11785 . -38) (undo-tree-id11786 . -38) (undo-tree-id11787 . -38) (undo-tree-id11788 . -38) (undo-tree-id11789 . -38) (undo-tree-id11790 . -38) (undo-tree-id11791 . -38) (undo-tree-id11792 . -38) (undo-tree-id11793 . -38) (undo-tree-id11794 . -38) (undo-tree-id11795 . -38) (undo-tree-id11796 . -38) (undo-tree-id11797 . -38) (undo-tree-id11798 . -38) (undo-tree-id11799 . -38) (undo-tree-id11800 . -38) (undo-tree-id11801 . -38) (undo-tree-id11802 . -38) (undo-tree-id11803 . -38) (undo-tree-id11804 . -38) (undo-tree-id11805 . -38) (undo-tree-id11806 . 4) (undo-tree-id11807 . -39) (undo-tree-id11808 . -39) (undo-tree-id11809 . -39) (undo-tree-id11810 . -39) (undo-tree-id11811 . -39) (undo-tree-id11812 . -39) (undo-tree-id11813 . -39) (undo-tree-id11814 . -39) (undo-tree-id11815 . -39) (undo-tree-id11816 . -39) (undo-tree-id11817 . -39) (undo-tree-id11818 . -39) (undo-tree-id11819 . -39) (undo-tree-id11820 . -39) (undo-tree-id11821 . -39) (undo-tree-id11822 . -39) (undo-tree-id11823 . -39) (undo-tree-id11824 . -39) (undo-tree-id11825 . -39) (undo-tree-id11826 . -39) (undo-tree-id11827 . -39) (undo-tree-id11828 . -39) (undo-tree-id11829 . -39) (undo-tree-id11830 . -39) (undo-tree-id11831 . -39) (undo-tree-id11832 . -39) (undo-tree-id11833 . -39) (undo-tree-id11834 . -39) (undo-tree-id11835 . -43) (undo-tree-id11836 . -43) (undo-tree-id11837 . -43) (undo-tree-id11838 . -43) (undo-tree-id11839 . -43) (undo-tree-id11840 . -43) (undo-tree-id11841 . -43) (undo-tree-id11842 . -43) (undo-tree-id11843 . -43) (undo-tree-id11844 . -43) (undo-tree-id11845 . -43) (undo-tree-id11846 . -43) (undo-tree-id11847 . -43) (t 25944 35128 205958 384000)) nil (25944 35162 967351 0) 0 nil])
([nil nil ((1523 . 1524)) nil (25944 35162 967272 0) 0 nil])
([nil nil ((1524 . 1525)) nil (25944 35162 967271 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1524) (undo-tree-id11767 . -1) (undo-tree-id11768 . -1) 1525) nil (25944 35162 967270 0) 0 nil])
([nil nil ((1524 . 1527)) nil (25944 35162 967267 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1524) (undo-tree-id11747 . -1) (undo-tree-id11748 . -1) (undo-tree-id11749 . -1) (undo-tree-id11750 . -1) (undo-tree-id11751 . -1) (undo-tree-id11752 . -1) (undo-tree-id11753 . -1) (undo-tree-id11754 . -1) (undo-tree-id11755 . -1) (undo-tree-id11756 . -1) (#("e" 0 1 (fontified t)) . -1525) (undo-tree-id11757 . -1) (undo-tree-id11758 . -1) (undo-tree-id11759 . -1) (undo-tree-id11760 . -1) (undo-tree-id11761 . -1) (undo-tree-id11762 . -1) (undo-tree-id11763 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -1526) (undo-tree-id11764 . -1) (undo-tree-id11765 . -1) (undo-tree-id11766 . -1) 1527) nil (25944 35162 967265 0) 0 nil])
([nil nil ((1524 . 1539)) nil (25944 35162 967243 0) 0 nil])
([nil nil ((1538 . 1548) (#("c" 0 1 (fontified nil)) . 1538) (1538 . 1539) (#("canvas_ref" 0 10 (fontified nil)) . -1538) (1538 . 1548) (#("c" 0 1 (fontified t)) . -1538) (undo-tree-id11743 . -1) (undo-tree-id11744 . -1) (undo-tree-id11745 . -1) (undo-tree-id11746 . -1) 1539) nil (25944 35162 967241 0) 0 nil])
([nil nil ((1548 . 1550)) nil (25944 35162 967235 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1549 1554 #s(yas--snippet nil nil #s(yas--exit 1554 nil) 52 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1554 nil) 52 nil nil nil nil)) (1549 . 1554) (#("get()$0" 0 7 (fontified nil)) . 1549) (1549 . 1556) (#("g" 0 1 (fontified nil)) . 1549) (1549 . 1550) (#("get()" 0 5 (fontified nil)) . -1549) (1549 . 1554) (#("g" 0 1 (fontified t)) . -1549) (undo-tree-id11738 . -1) (undo-tree-id11739 . -1) (undo-tree-id11740 . -1) (undo-tree-id11741 . -1) (undo-tree-id11742 . -1) 1550) nil (25944 35162 967233 0) 0 nil])
([nil nil ((1554 . 1555)) nil (25944 35162 967224 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1555 1565 #s(yas--snippet nil nil #s(yas--exit 1565 nil) 53 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1565 nil) 53 nil nil nil nil)) (1555 . 1565) (#("as_deref()$0" 0 12 (fontified nil)) . 1555) (1555 . 1567) (#("as_deref()" 0 10 (fontified nil)) . -1555) (1555 . 1565)) nil (25944 35162 967222 0) 0 nil])
([nil nil ((1565 . 1567)) nil (25944 35162 967220 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1566 1574 #s(yas--snippet nil nil #s(yas--exit 1574 nil) 54 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1574 nil) 54 nil nil nil nil)) (1566 . 1574) (#("unwrap()$0" 0 10 (fontified nil)) . 1566) (1566 . 1576) (#("u" 0 1 (fontified nil)) . 1566) (1566 . 1567) (#("unwrap()" 0 8 (fontified nil)) . -1566) (1566 . 1574) (#("u" 0 1 (fontified t)) . -1566) (undo-tree-id11731 . -1) (undo-tree-id11732 . -1) (undo-tree-id11733 . -1) (undo-tree-id11734 . -1) (undo-tree-id11735 . -1) (undo-tree-id11736 . -1) (undo-tree-id11737 . -1) 1567) nil (25944 35162 967217 0) 0 nil])
([nil nil ((1574 . 1575)) nil (25944 35162 967196 0) 0 nil])
([nil nil ((1575 . 1577) (t 25944 35162 995900 226000)) nil (25944 35257 717977 0) 0 nil])
([nil nil ((1577 . 1580)) nil (25944 35257 717976 0) 0 nil])
([nil nil ((1577 . 1584) (#("eme" 0 3 (fontified nil)) . 1577) (1577 . 1580) (#("element" 0 7 (fontified nil)) . -1577) (1577 . 1584) (#("eme" 0 3 (fontified t)) . -1577) (undo-tree-id11848 . -3) 1580) nil (25944 35257 717974 0) 0 nil])
([nil nil ((1584 . 1585)) nil (25944 35257 717962 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1585 1611 #s(yas--snippet nil nil #s(yas--exit 1611 nil) 55 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1611 nil) 55 nil nil nil nil)) (1585 . 1611) (#("get_bounding_client_rect()$0" 0 28 (fontified nil)) . 1585) (1585 . 1613) (#("get_bounding_client_rect()" 0 26 (fontified nil)) . -1585) (1585 . 1611)) nil (25944 35257 717960 0) 0 nil])
([nil nil ((1587 . 1588) (1621 . 1622) (1577 . 1577) (1577 . 1587)) nil (25944 35257 717952 0) 0 nil])
([nil nil ((1623 . 1625) (t 25944 35257 747254 815000)) nil (25944 35293 804953 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1528) (undo-tree-id11926 . -1) (undo-tree-id11927 . -1) (undo-tree-id11928 . -1) (undo-tree-id11929 . -1) (undo-tree-id11930 . -1) (undo-tree-id11931 . -1) (undo-tree-id11932 . -1) (undo-tree-id11933 . -1) (undo-tree-id11934 . -1) (undo-tree-id11935 . -1) (undo-tree-id11936 . -1) (undo-tree-id11937 . -1) (undo-tree-id11938 . -1) (undo-tree-id11939 . -1) (undo-tree-id11940 . -1) (undo-tree-id11941 . -1) (undo-tree-id11942 . -1) (undo-tree-id11943 . -1) (undo-tree-id11944 . -1) (undo-tree-id11945 . -1) (undo-tree-id11946 . -1) (undo-tree-id11947 . -1) (undo-tree-id11948 . -1) (undo-tree-id11949 . -1) (undo-tree-id11950 . -1) (undo-tree-id11951 . -1) (undo-tree-id11952 . -1) (undo-tree-id11953 . -1) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -1529) (undo-tree-id11954 . -1) (undo-tree-id11955 . -1) (undo-tree-id11956 . -1) (undo-tree-id11957 . -1) (undo-tree-id11958 . -1) (undo-tree-id11959 . -1) (undo-tree-id11960 . -1) (undo-tree-id11961 . -1) (undo-tree-id11962 . -1) (undo-tree-id11963 . -1) (undo-tree-id11964 . -1) (undo-tree-id11965 . -1) (undo-tree-id11966 . -1) (undo-tree-id11967 . -1) (undo-tree-id11968 . -1) (undo-tree-id11969 . -1) (undo-tree-id11970 . -1) (undo-tree-id11971 . -1) (undo-tree-id11972 . -1) (undo-tree-id11973 . -1) (undo-tree-id11974 . -1) (undo-tree-id11975 . -1) (undo-tree-id11976 . -1) (undo-tree-id11977 . -1) (undo-tree-id11978 . -1) (undo-tree-id11979 . -1) (undo-tree-id11980 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1530) (undo-tree-id11981 . -1) (undo-tree-id11982 . -1) (undo-tree-id11983 . -1) (undo-tree-id11984 . -1) (undo-tree-id11985 . -1) (undo-tree-id11986 . -1) (undo-tree-id11987 . -1) (undo-tree-id11988 . -1) (undo-tree-id11989 . -1) (undo-tree-id11990 . -1) (undo-tree-id11991 . -1) (undo-tree-id11992 . -1) (undo-tree-id11993 . -1) (undo-tree-id11994 . -1) (undo-tree-id11995 . -1) (undo-tree-id11996 . -1) (undo-tree-id11997 . -1) (undo-tree-id11998 . -1) (undo-tree-id11999 . -1) (undo-tree-id12000 . -1) (undo-tree-id12001 . -1) (undo-tree-id12002 . -1) (undo-tree-id12003 . -1) (undo-tree-id12004 . -1) (undo-tree-id12005 . -1) (undo-tree-id12006 . -1) (#("m" 0 1 (face font-lock-variable-name-face fontified t)) . -1531) (undo-tree-id12007 . -1) (undo-tree-id12008 . -1) (undo-tree-id12009 . -1) (undo-tree-id12010 . -1) (undo-tree-id12011 . -1) (undo-tree-id12012 . -1) (undo-tree-id12013 . -1) (undo-tree-id12014 . -1) (undo-tree-id12015 . -1) (undo-tree-id12016 . -1) (undo-tree-id12017 . -1) (undo-tree-id12018 . -1) (undo-tree-id12019 . -1) (undo-tree-id12020 . -1) (undo-tree-id12021 . -1) (undo-tree-id12022 . -1) (undo-tree-id12023 . -1) (undo-tree-id12024 . -1) (undo-tree-id12025 . -1) (undo-tree-id12026 . -1) (undo-tree-id12027 . -1) (undo-tree-id12028 . -1) (undo-tree-id12029 . -1) (undo-tree-id12030 . -1) (undo-tree-id12031 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1532) (undo-tree-id12032 . -1) (undo-tree-id12033 . -1) (undo-tree-id12034 . -1) (undo-tree-id12035 . -1) (undo-tree-id12036 . -1) (undo-tree-id12037 . -1) (undo-tree-id12038 . -1) (undo-tree-id12039 . -1) (undo-tree-id12040 . -1) (undo-tree-id12041 . -1) (undo-tree-id12042 . -1) (undo-tree-id12043 . -1) (undo-tree-id12044 . -1) (undo-tree-id12045 . -1) (undo-tree-id12046 . -1) (undo-tree-id12047 . -1) (undo-tree-id12048 . -1) (undo-tree-id12049 . -1) (undo-tree-id12050 . -1) (undo-tree-id12051 . -1) (undo-tree-id12052 . -1) (undo-tree-id12053 . -1) (undo-tree-id12054 . -1) (undo-tree-id12055 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -1533) (undo-tree-id12056 . -1) (undo-tree-id12057 . -1) (undo-tree-id12058 . -1) (undo-tree-id12059 . -1) (undo-tree-id12060 . -1) (undo-tree-id12061 . -1) (undo-tree-id12062 . -1) (undo-tree-id12063 . -1) (undo-tree-id12064 . -1) (undo-tree-id12065 . -1) (undo-tree-id12066 . -1) (undo-tree-id12067 . -1) (undo-tree-id12068 . -1) (undo-tree-id12069 . -1) (undo-tree-id12070 . -1) (undo-tree-id12071 . -1) (undo-tree-id12072 . -1) (undo-tree-id12073 . -1) (undo-tree-id12074 . -1) (undo-tree-id12075 . -1) (undo-tree-id12076 . -1) (undo-tree-id12077 . -1) (undo-tree-id12078 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -1534) (undo-tree-id12079 . -1) (undo-tree-id12080 . -1) (undo-tree-id12081 . -1) (undo-tree-id12082 . -1) (undo-tree-id12083 . -1) (undo-tree-id12084 . -1) (undo-tree-id12085 . -1) (undo-tree-id12086 . -1) (undo-tree-id12087 . -1) (undo-tree-id12088 . -1) (undo-tree-id12089 . -1) (undo-tree-id12090 . -1) (undo-tree-id12091 . -1) (undo-tree-id12092 . -1) (undo-tree-id12093 . -1) (undo-tree-id12094 . -1) (undo-tree-id12095 . -1) (undo-tree-id12096 . -1) (undo-tree-id12097 . -1) (undo-tree-id12098 . -1) (undo-tree-id12099 . -1) (undo-tree-id12100 . -1) 1535) nil (25944 35293 804943 0) 0 nil])
([nil nil ((1528 . 1534)) nil (25944 35293 804778 0) 0 nil])
([nil nil ((#("unwrap()" 0 8 (fontified t)) . -1565) (undo-tree-id11915 . -8) (undo-tree-id11916 . -8) (undo-tree-id11917 . -8) (undo-tree-id11918 . -8) (undo-tree-id11919 . -8) (undo-tree-id11920 . -8) (undo-tree-id11921 . -8) (undo-tree-id11922 . -8) (undo-tree-id11923 . -8) (undo-tree-id11924 . -8) (undo-tree-id11925 . -8) 1573) nil (25944 35293 804776 0) 0 nil])
([nil nil ((#("deref()." 0 8 (fontified t)) . -1557) (undo-tree-id11899 . -8) (undo-tree-id11900 . -8) (undo-tree-id11901 . -8) (undo-tree-id11902 . -8) (undo-tree-id11903 . -8) (undo-tree-id11904 . -8) (undo-tree-id11905 . -8) (undo-tree-id11906 . -8) (undo-tree-id11907 . -8) (undo-tree-id11908 . -8) (undo-tree-id11909 . -8) (undo-tree-id11910 . -8) (undo-tree-id11911 . -8) (undo-tree-id11912 . -8) (undo-tree-id11913 . -8) (undo-tree-id11914 . -8) 1565) nil (25944 35293 804764 0) 0 nil])
([nil nil ((#("as_" 0 3 (fontified t)) . -1554) (undo-tree-id11878 . -3) (undo-tree-id11879 . -3) (undo-tree-id11880 . -3) (undo-tree-id11881 . -3) (undo-tree-id11882 . -3) (undo-tree-id11883 . -3) (undo-tree-id11884 . -3) (undo-tree-id11885 . -3) (undo-tree-id11886 . -3) (undo-tree-id11887 . -3) (undo-tree-id11888 . -3) (undo-tree-id11889 . -3) (undo-tree-id11890 . -3) (undo-tree-id11891 . -3) (undo-tree-id11892 . -3) (undo-tree-id11893 . -3) (undo-tree-id11894 . -3) (undo-tree-id11895 . -3) (undo-tree-id11896 . -3) (undo-tree-id11897 . -3) (undo-tree-id11898 . -3) 1557) nil (25944 35293 804743 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1553) (undo-tree-id11849 . -1) (undo-tree-id11850 . -1) (undo-tree-id11851 . -1) (undo-tree-id11852 . -1) (undo-tree-id11853 . -1) (undo-tree-id11854 . -1) (undo-tree-id11855 . -1) (undo-tree-id11856 . -1) (undo-tree-id11857 . -1) (undo-tree-id11858 . -1) (undo-tree-id11859 . -1) (undo-tree-id11860 . -1) (undo-tree-id11861 . -1) (undo-tree-id11862 . -1) (undo-tree-id11863 . -1) (undo-tree-id11864 . -1) (undo-tree-id11865 . -1) (undo-tree-id11866 . -1) (undo-tree-id11867 . -1) (undo-tree-id11868 . -1) (undo-tree-id11869 . -1) (undo-tree-id11870 . -1) (undo-tree-id11871 . -1) (undo-tree-id11872 . -1) (undo-tree-id11873 . -1) (undo-tree-id11874 . -1) (undo-tree-id11875 . -1) (undo-tree-id11876 . -1) (undo-tree-id11877 . -1) 1554) nil (25944 35293 804718 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1569) (undo-tree-id12192 . -1) (undo-tree-id12193 . -1) (undo-tree-id12194 . -1) (undo-tree-id12195 . -1) (undo-tree-id12196 . -1) (undo-tree-id12197 . -1) (undo-tree-id12198 . -1) (undo-tree-id12199 . -1) (undo-tree-id12200 . -1) (undo-tree-id12201 . -1) (undo-tree-id12202 . -1) (undo-tree-id12203 . -1) (undo-tree-id12204 . -1) (undo-tree-id12205 . -1) (undo-tree-id12206 . -1) (undo-tree-id12207 . -1) (undo-tree-id12208 . -1) (undo-tree-id12209 . -1) (undo-tree-id12210 . -1) (undo-tree-id12211 . -1) (undo-tree-id12212 . -1) (undo-tree-id12213 . -1) (undo-tree-id12214 . -1) (undo-tree-id12215 . -1) (undo-tree-id12216 . -1) (undo-tree-id12217 . -1) (#("m" 0 1 (fontified t)) . -1570) (undo-tree-id12218 . -1) (undo-tree-id12219 . -1) (undo-tree-id12220 . -1) (undo-tree-id12221 . -1) (undo-tree-id12222 . -1) (undo-tree-id12223 . -1) (undo-tree-id12224 . -1) (undo-tree-id12225 . -1) (undo-tree-id12226 . -1) (undo-tree-id12227 . -1) (undo-tree-id12228 . -1) (undo-tree-id12229 . -1) (undo-tree-id12230 . -1) (undo-tree-id12231 . -1) (undo-tree-id12232 . -1) (undo-tree-id12233 . -1) (undo-tree-id12234 . -1) (undo-tree-id12235 . -1) (undo-tree-id12236 . -1) (undo-tree-id12237 . -1) (undo-tree-id12238 . -1) (undo-tree-id12239 . -1) (undo-tree-id12240 . -1) (undo-tree-id12241 . -1) (undo-tree-id12242 . -1) (#("e" 0 1 (fontified t)) . -1571) (undo-tree-id12243 . -1) (undo-tree-id12244 . -1) (undo-tree-id12245 . -1) (undo-tree-id12246 . -1) (undo-tree-id12247 . -1) (undo-tree-id12248 . -1) (undo-tree-id12249 . -1) (undo-tree-id12250 . -1) (undo-tree-id12251 . -1) (undo-tree-id12252 . -1) (undo-tree-id12253 . -1) (undo-tree-id12254 . -1) (undo-tree-id12255 . -1) (undo-tree-id12256 . -1) (undo-tree-id12257 . -1) (undo-tree-id12258 . -1) (undo-tree-id12259 . -1) (undo-tree-id12260 . -1) (undo-tree-id12261 . -1) (undo-tree-id12262 . -1) (undo-tree-id12263 . -1) (undo-tree-id12264 . -1) (undo-tree-id12265 . -1) (undo-tree-id12266 . -1) (#("n" 0 1 (fontified t)) . -1572) (undo-tree-id12267 . -1) (undo-tree-id12268 . -1) (undo-tree-id12269 . -1) (undo-tree-id12270 . -1) (undo-tree-id12271 . -1) (undo-tree-id12272 . -1) (undo-tree-id12273 . -1) (undo-tree-id12274 . -1) (undo-tree-id12275 . -1) (undo-tree-id12276 . -1) (undo-tree-id12277 . -1) (undo-tree-id12278 . -1) (undo-tree-id12279 . -1) (undo-tree-id12280 . -1) (undo-tree-id12281 . -1) (undo-tree-id12282 . -1) (undo-tree-id12283 . -1) (undo-tree-id12284 . -1) (undo-tree-id12285 . -1) (undo-tree-id12286 . -1) (undo-tree-id12287 . -1) (undo-tree-id12288 . -1) (undo-tree-id12289 . -1) (#("t" 0 1 (fontified t)) . -1573) (undo-tree-id12290 . -1) (undo-tree-id12291 . -1) (undo-tree-id12292 . -1) (undo-tree-id12293 . -1) (undo-tree-id12294 . -1) (undo-tree-id12295 . -1) (undo-tree-id12296 . -1) (undo-tree-id12297 . -1) (undo-tree-id12298 . -1) (undo-tree-id12299 . -1) (undo-tree-id12300 . -1) (undo-tree-id12301 . -1) (undo-tree-id12302 . -1) (undo-tree-id12303 . -1) (undo-tree-id12304 . -1) (undo-tree-id12305 . -1) (undo-tree-id12306 . -1) (undo-tree-id12307 . -1) (undo-tree-id12308 . -1) (undo-tree-id12309 . -1) (undo-tree-id12310 . -1) (undo-tree-id12311 . -1) 1574 (t 25944 35293 833972 375000)) nil (25944 35307 866144 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1567) (undo-tree-id12137 . -1) (undo-tree-id12138 . -1) (undo-tree-id12139 . -1) (undo-tree-id12140 . -1) (undo-tree-id12141 . -1) (undo-tree-id12142 . -1) (undo-tree-id12143 . -1) (undo-tree-id12144 . -1) (undo-tree-id12145 . -1) (undo-tree-id12146 . -1) (undo-tree-id12147 . -1) (undo-tree-id12148 . -1) (undo-tree-id12149 . -1) (undo-tree-id12150 . -1) (undo-tree-id12151 . -1) (undo-tree-id12152 . -1) (undo-tree-id12153 . -1) (undo-tree-id12154 . -1) (undo-tree-id12155 . -1) (undo-tree-id12156 . -1) (undo-tree-id12157 . -1) (undo-tree-id12158 . -1) (undo-tree-id12159 . -1) (undo-tree-id12160 . -1) (undo-tree-id12161 . -1) (undo-tree-id12162 . -1) (undo-tree-id12163 . -1) (undo-tree-id12164 . -1) (#("l" 0 1 (fontified t)) . -1568) (undo-tree-id12165 . -1) (undo-tree-id12166 . -1) (undo-tree-id12167 . -1) (undo-tree-id12168 . -1) (undo-tree-id12169 . -1) (undo-tree-id12170 . -1) (undo-tree-id12171 . -1) (undo-tree-id12172 . -1) (undo-tree-id12173 . -1) (undo-tree-id12174 . -1) (undo-tree-id12175 . -1) (undo-tree-id12176 . -1) (undo-tree-id12177 . -1) (undo-tree-id12178 . -1) (undo-tree-id12179 . -1) (undo-tree-id12180 . -1) (undo-tree-id12181 . -1) (undo-tree-id12182 . -1) (undo-tree-id12183 . -1) (undo-tree-id12184 . -1) (undo-tree-id12185 . -1) (undo-tree-id12186 . -1) (undo-tree-id12187 . -1) (undo-tree-id12188 . -1) (undo-tree-id12189 . -1) (undo-tree-id12190 . -1) (undo-tree-id12191 . -1) 1569) nil (25944 35307 866023 0) 0 nil])
([nil nil ((1567 . 1570)) nil (25944 35307 865962 0) 0 nil])
([nil nil ((1567 . 1573) (#("can" 0 3 (fontified nil)) . 1567) (1567 . 1570) (#("canvas" 0 6 (fontified nil)) . -1567) (1567 . 1573) (#("can" 0 3 (fontified t)) . -1567) (undo-tree-id12126 . -3) (undo-tree-id12127 . -3) (undo-tree-id12128 . -1) (undo-tree-id12129 . -2) (undo-tree-id12130 . -2) (undo-tree-id12131 . -3) (undo-tree-id12132 . -3) (undo-tree-id12133 . -3) (undo-tree-id12134 . -3) (undo-tree-id12135 . -3) (undo-tree-id12136 . -3) 1570) nil (25944 35307 865960 0) 0 nil])
([nil nil ((1573 . 1574)) nil (25944 35307 865945 0) 0 nil])
([nil nil ((1572 . 1573)) nil (25944 35307 865944 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1572) (undo-tree-id12119 . -1) (undo-tree-id12120 . -1) (undo-tree-id12121 . -1) (undo-tree-id12122 . -1) (undo-tree-id12123 . -1) (undo-tree-id12124 . -1) (undo-tree-id12125 . -1) 1573) nil (25944 35307 865942 0) 0 nil])
([nil nil ((1573 . 1574)) nil (25944 35307 865930 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1573) (undo-tree-id12115 . -1) (undo-tree-id12116 . -1) (undo-tree-id12117 . -1) (undo-tree-id12118 . -1) 1574) nil (25944 35307 865929 0) 0 nil])
([nil nil ((1553 . 1554)) nil (25944 35307 865923 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1553) (undo-tree-id12106 . -1) (undo-tree-id12107 . -1) (undo-tree-id12108 . -1) (undo-tree-id12109 . -1) (undo-tree-id12110 . -1) (undo-tree-id12111 . -1) (undo-tree-id12112 . -1) (undo-tree-id12113 . -1) (undo-tree-id12114 . -1) 1554) nil (25944 35307 865919 0) 0 nil])
([nil nil ((1553 . 1555)) nil (25944 35307 865908 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1554 1562 #s(yas--snippet nil nil #s(yas--exit 1562 nil) 56 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1562 nil) 56 nil nil nil nil)) (1554 . 1562) (#("unwrap()$0" 0 10 (fontified nil)) . 1554) (1554 . 1564) (#("u" 0 1 (fontified nil)) . 1554) (1554 . 1555) (#("unwrap()" 0 8 (fontified nil)) . -1554) (1554 . 1562) (#("u" 0 1 (fontified t)) . -1554) (undo-tree-id12101 . -1) (undo-tree-id12102 . -1) (undo-tree-id12103 . -1) (undo-tree-id12104 . -1) (undo-tree-id12105 . -1) 1555) nil (25944 35307 865900 0) 0 nil])
([nil nil ((1582 . 1583) (t 25944 35307 896494 788000)) nil (25944 35330 161217 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1582) (undo-tree-id12335 . -1) (undo-tree-id12336 . -1) (undo-tree-id12337 . -1) (undo-tree-id12338 . -1) (undo-tree-id12339 . -1) 1583) nil (25944 35330 161215 0) 0 nil])
([nil nil ((1582 . 1583)) nil (25944 35330 161209 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1582) (undo-tree-id12331 . -1) (undo-tree-id12332 . -1) (undo-tree-id12333 . -1) (undo-tree-id12334 . -1) 1583) nil (25944 35330 161208 0) 0 nil])
([nil nil ((1582 . 1586)) nil (25944 35330 161203 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1583 1609 #s(yas--snippet nil nil #s(yas--exit 1609 nil) 57 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1609 nil) 57 nil nil nil nil)) (1583 . 1609) (#("get_bounding_client_rect()$0" 0 28 (fontified nil)) . 1583) (1583 . 1611) (#("get" 0 3 (fontified nil)) . 1583) (1583 . 1586) (#("get_bounding_client_rect()" 0 26 (fontified nil)) . -1583) (1583 . 1609) (#("get" 0 3 (fontified t)) . -1583) (undo-tree-id12320 . -3) (undo-tree-id12321 . -1) (undo-tree-id12322 . -1) (undo-tree-id12323 . -1) (undo-tree-id12324 . -1) (undo-tree-id12325 . -2) (undo-tree-id12326 . -2) (undo-tree-id12327 . -3) (undo-tree-id12328 . -3) (undo-tree-id12329 . -3) (undo-tree-id12330 . -3) 1586) nil (25944 35330 161200 0) 0 nil])
([nil nil ((#(" .get_bounding_client_rect();" 0 1 (fontified t) 1 2 (fontified t) 2 28 (fontified t) 28 29 (fontified t)) . 1609) (undo-tree-id12312 . -1) (undo-tree-id12313 . -1) (undo-tree-id12314 . -1) (undo-tree-id12315 . -1) (undo-tree-id12316 . -1) (undo-tree-id12317 . -1) (undo-tree-id12318 . -1) (undo-tree-id12319 . -29)) nil (25944 35330 161184 0) 0 nil])
([nil nil ((1609 . 1610)) nil (25944 35330 161163 0) 0 nil])
([nil nil ((1610 . 1612) (t 25944 35330 191326 282000)) nil (25944 35346 393992 0) 0 nil])
([nil nil ((1612 . 1614)) nil (25944 35346 393991 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1613) (undo-tree-id12394 . -1) (undo-tree-id12395 . -1) (undo-tree-id12396 . -1) 1614) nil (25944 35346 393990 0) 0 nil])
([nil nil ((1613 . 1617)) nil (25944 35346 393985 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1614) (undo-tree-id12373 . -1) (undo-tree-id12374 . -1) (undo-tree-id12375 . -1) (undo-tree-id12376 . -1) (undo-tree-id12377 . -1) (undo-tree-id12378 . -1) (undo-tree-id12379 . -1) (undo-tree-id12380 . -1) (undo-tree-id12381 . -1) (undo-tree-id12382 . -1) (undo-tree-id12383 . -1) (#("g" 0 1 (fontified t)) . -1615) (undo-tree-id12384 . -1) (undo-tree-id12385 . -1) (undo-tree-id12386 . -1) (undo-tree-id12387 . -1) (undo-tree-id12388 . -1) (undo-tree-id12389 . -1) (undo-tree-id12390 . -1) (#("g" 0 1 (fontified t)) . -1616) (undo-tree-id12391 . -1) (undo-tree-id12392 . -1) (undo-tree-id12393 . -1) 1617) nil (25944 35346 393983 0) 0 nil])
([nil nil ((1614 . 1616)) nil (25944 35346 393960 0) 0 nil])
([nil nil ((1612 . 1619) (#("logg" 0 4 (fontified nil)) . 1612) (1612 . 1616) (#("logging" 0 7 (fontified nil)) . -1612) (1612 . 1619) (#("logg" 0 4 (fontified t)) . -1612) (undo-tree-id12345 . -4) (undo-tree-id12346 . -1) (undo-tree-id12347 . -1) (undo-tree-id12348 . -1) (undo-tree-id12349 . -1) (undo-tree-id12350 . -1) (undo-tree-id12351 . -2) (undo-tree-id12352 . -2) (undo-tree-id12353 . -2) (undo-tree-id12354 . -2) (undo-tree-id12355 . -2) (undo-tree-id12356 . -2) (undo-tree-id12357 . -2) (undo-tree-id12358 . -2) (undo-tree-id12359 . -2) (undo-tree-id12360 . -2) (undo-tree-id12361 . -2) (undo-tree-id12362 . -2) (undo-tree-id12363 . -2) (undo-tree-id12364 . -2) (undo-tree-id12365 . -3) (undo-tree-id12366 . -3) (undo-tree-id12367 . -3) (undo-tree-id12368 . -3) (undo-tree-id12369 . -4) (undo-tree-id12370 . -4) (undo-tree-id12371 . -4) (undo-tree-id12372 . -4) 1616) nil (25944 35346 393957 0) 0 nil])
([nil nil ((1619 . 1622)) nil (25944 35346 393926 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1621 1627 #s(yas--snippet nil nil #s(yas--exit 1626 nil) 58 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1626 nil) 58 nil nil nil nil)) (1621 . 1627) (#("log!($0)" 0 8 (fontified nil)) . 1621) (1621 . 1629) (#("l" 0 1 (fontified nil)) . 1621) (1621 . 1622) (#("log!(…)" 0 7 (fontified nil)) . -1621) (1621 . 1628) (#("l" 0 1 (fontified t)) . -1621) (undo-tree-id12340 . -1) (undo-tree-id12341 . -1) (undo-tree-id12342 . -1) (undo-tree-id12343 . -1) (undo-tree-id12344 . -1) 1622) nil (25944 35346 393924 0) 0 nil])
([nil nil ((1626 . 1628)) nil (25944 35346 393909 0) 0 nil])
([nil nil ((1627 . 1629)) nil (25944 35346 393908 0) 0 nil])
([nil nil ((1628 . 1630)) nil (25944 35346 393907 0) 0 nil])
([nil nil ((1632 . 1638)) nil (25944 35346 393905 0) 0 nil])
([nil nil ((1639 . 1640)) nil (25944 35346 393901 0) 0 nil])
([nil nil ((1638 . 1639) (t 25944 35346 423915 642000)) nil (25944 35419 662371 0) 0 nil])
([nil nil ((1639 . 1642)) nil (25944 35419 662370 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1639 1647 #s(yas--snippet nil nil #s(yas--exit 1647 nil) 59 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1647 nil) 59 nil nil nil nil)) (1639 . 1647) (#("height()$0" 0 10 (fontified nil)) . 1639) (1639 . 1649) (#("hei" 0 3 (fontified nil)) . 1639) (1639 . 1642) (#("height()" 0 8 (fontified nil)) . -1639) (1639 . 1647) (#("hei" 0 3 (fontified t)) . -1639) (undo-tree-id12714 . -3) (undo-tree-id12715 . -1) (undo-tree-id12716 . -1) (undo-tree-id12717 . -1) (undo-tree-id12718 . -2) (undo-tree-id12719 . -2) (undo-tree-id12720 . -3) (undo-tree-id12721 . -3) (undo-tree-id12722 . -3) (undo-tree-id12723 . -3) 1642) nil (25944 35419 662368 0) 0 nil])
([nil nil ((1647 . 1648)) nil (25944 35419 662355 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1647) (undo-tree-id12710 . -1) (undo-tree-id12711 . -1) (undo-tree-id12712 . -1) (undo-tree-id12713 . -1) 1648) nil (25944 35419 662354 0) 0 nil])
([nil nil ((1647 . 1651)) nil (25944 35419 662349 0) 0 nil])
([nil nil ((1649 . 1653) (#("re" 0 2 (fontified nil)) . 1649) (1649 . 1651) (#("rect" 0 4 (fontified nil)) . -1649) (1649 . 1653) (#("re" 0 2 (fontified t)) . -1649) (undo-tree-id12704 . -2) (undo-tree-id12705 . -1) (undo-tree-id12706 . -2) (undo-tree-id12707 . -2) (undo-tree-id12708 . -2) (undo-tree-id12709 . -2) 1651) nil (25944 35419 662347 0) 0 nil])
([nil nil ((1653 . 1655)) nil (25944 35419 662338 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1653) (undo-tree-id12689 . -1) (undo-tree-id12690 . -1) (undo-tree-id12691 . -1) (undo-tree-id12692 . -1) (undo-tree-id12693 . -1) (undo-tree-id12694 . -1) (undo-tree-id12695 . -1) (undo-tree-id12696 . -1) (undo-tree-id12697 . -1) (undo-tree-id12698 . -1) (#("w" 0 1 (fontified t)) . -1654) (undo-tree-id12699 . -1) (undo-tree-id12700 . -1) (undo-tree-id12701 . -1) (undo-tree-id12702 . -1) (undo-tree-id12703 . -1) 1655) nil (25944 35419 662336 0) 0 nil])
([nil nil ((#("height" 0 6 (fontified t)) . -1639) (undo-tree-id12683 . -6) (undo-tree-id12684 . -6) (undo-tree-id12685 . -6) (undo-tree-id12686 . -6) (undo-tree-id12687 . -6) (undo-tree-id12688 . -6) 1645) nil (25944 35419 662321 0) 0 nil])
([nil nil ((1639 . 1641)) nil (25944 35419 662313 0) 0 nil])
([nil nil ((1639 . 1644) (#("wi" 0 2 (fontified nil)) . 1639) (1639 . 1641) (#("width" 0 5 (fontified nil)) . -1639) (1639 . 1644) (#("wi" 0 2 (fontified t)) . -1639) (undo-tree-id12679 . -2) (undo-tree-id12680 . -1) (undo-tree-id12681 . -2) (undo-tree-id12682 . -2) 1641) nil (25944 35419 662311 0) 0 nil])
([nil nil ((1652 . 1656)) nil (25944 35419 662305 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1648) (undo-tree-id12408 . -1) (undo-tree-id12409 . -1) (undo-tree-id12410 . -1) (undo-tree-id12411 . -1) (undo-tree-id12412 . -1) (undo-tree-id12413 . -1) (undo-tree-id12414 . -1) (undo-tree-id12415 . -1) (undo-tree-id12416 . -1) (undo-tree-id12417 . -1) (undo-tree-id12418 . -1) (undo-tree-id12419 . -1) (undo-tree-id12420 . -1) (undo-tree-id12421 . -1) (undo-tree-id12422 . -1) (undo-tree-id12423 . -1) (undo-tree-id12424 . -1) (undo-tree-id12425 . -1) (undo-tree-id12426 . -1) (undo-tree-id12427 . -1) (undo-tree-id12428 . -1) (undo-tree-id12429 . -1) (undo-tree-id12430 . -1) (undo-tree-id12431 . -1) (undo-tree-id12432 . -1) (undo-tree-id12433 . -1) (undo-tree-id12434 . -1) (undo-tree-id12435 . -1) (undo-tree-id12436 . -1) (undo-tree-id12437 . -1) (undo-tree-id12438 . -1) (undo-tree-id12439 . -1) (undo-tree-id12440 . -1) (undo-tree-id12441 . -1) (undo-tree-id12442 . -1) (undo-tree-id12443 . -1) (undo-tree-id12444 . -1) (undo-tree-id12445 . -1) (undo-tree-id12446 . -1) (undo-tree-id12447 . -1) (undo-tree-id12448 . -1) (undo-tree-id12449 . -1) (undo-tree-id12450 . -1) (undo-tree-id12451 . -1) (undo-tree-id12452 . -1) (undo-tree-id12453 . -1) (undo-tree-id12454 . -1) (undo-tree-id12455 . -1) (undo-tree-id12456 . -1) (undo-tree-id12457 . -1) (undo-tree-id12458 . -1) (undo-tree-id12459 . -1) (undo-tree-id12460 . -1) (undo-tree-id12461 . -1) (undo-tree-id12462 . -1) (undo-tree-id12463 . -1) (undo-tree-id12464 . -1) (undo-tree-id12465 . -1) (undo-tree-id12466 . -1) (undo-tree-id12467 . -1) (undo-tree-id12468 . -1) (undo-tree-id12469 . -1) (undo-tree-id12470 . -1) (undo-tree-id12471 . -1) (undo-tree-id12472 . -1) (#("e" 0 1 (fontified t)) . -1649) (undo-tree-id12473 . -1) (undo-tree-id12474 . -1) (undo-tree-id12475 . -1) (undo-tree-id12476 . -1) (undo-tree-id12477 . -1) (undo-tree-id12478 . -1) (undo-tree-id12479 . -1) (undo-tree-id12480 . -1) (undo-tree-id12481 . -1) (undo-tree-id12482 . -1) (undo-tree-id12483 . -1) (undo-tree-id12484 . -1) (undo-tree-id12485 . -1) (undo-tree-id12486 . -1) (undo-tree-id12487 . -1) (undo-tree-id12488 . -1) (undo-tree-id12489 . -1) (undo-tree-id12490 . -1) (undo-tree-id12491 . -1) (undo-tree-id12492 . -1) (undo-tree-id12493 . -1) (undo-tree-id12494 . -1) (undo-tree-id12495 . -1) (undo-tree-id12496 . -1) (undo-tree-id12497 . -1) (undo-tree-id12498 . -1) (undo-tree-id12499 . -1) (undo-tree-id12500 . -1) (undo-tree-id12501 . -1) (undo-tree-id12502 . -1) (undo-tree-id12503 . -1) (undo-tree-id12504 . -1) (undo-tree-id12505 . -1) (undo-tree-id12506 . -1) (undo-tree-id12507 . -1) (undo-tree-id12508 . -1) (undo-tree-id12509 . -1) (undo-tree-id12510 . -1) (undo-tree-id12511 . -1) (undo-tree-id12512 . -1) (undo-tree-id12513 . -1) (undo-tree-id12514 . -1) (undo-tree-id12515 . -1) (undo-tree-id12516 . -1) (undo-tree-id12517 . -1) (undo-tree-id12518 . -1) (undo-tree-id12519 . -1) (undo-tree-id12520 . -1) (undo-tree-id12521 . -1) (undo-tree-id12522 . -1) (undo-tree-id12523 . -1) (undo-tree-id12524 . -1) (undo-tree-id12525 . -1) (undo-tree-id12526 . -1) (undo-tree-id12527 . -1) (undo-tree-id12528 . -1) (undo-tree-id12529 . -1) (undo-tree-id12530 . -1) (undo-tree-id12531 . -1) (undo-tree-id12532 . -1) (undo-tree-id12533 . -1) (undo-tree-id12534 . -1) (undo-tree-id12535 . -1) (#("c" 0 1 (fontified t)) . -1650) (undo-tree-id12536 . -1) (undo-tree-id12537 . -1) (undo-tree-id12538 . -1) (undo-tree-id12539 . -1) (undo-tree-id12540 . -1) (undo-tree-id12541 . -1) (undo-tree-id12542 . -1) (undo-tree-id12543 . -1) (undo-tree-id12544 . -1) (undo-tree-id12545 . -1) (undo-tree-id12546 . -1) (undo-tree-id12547 . -1) (undo-tree-id12548 . -1) (undo-tree-id12549 . -1) (undo-tree-id12550 . -1) (undo-tree-id12551 . -1) (undo-tree-id12552 . -1) (undo-tree-id12553 . -1) (undo-tree-id12554 . -1) (undo-tree-id12555 . -1) (undo-tree-id12556 . -1) (undo-tree-id12557 . -1) (undo-tree-id12558 . -1) (undo-tree-id12559 . -1) (undo-tree-id12560 . -1) (undo-tree-id12561 . -1) (undo-tree-id12562 . -1) (undo-tree-id12563 . -1) (undo-tree-id12564 . -1) (undo-tree-id12565 . -1) (undo-tree-id12566 . -1) (undo-tree-id12567 . -1) (undo-tree-id12568 . -1) (undo-tree-id12569 . -1) (undo-tree-id12570 . -1) (undo-tree-id12571 . -1) (undo-tree-id12572 . -1) (undo-tree-id12573 . -1) (undo-tree-id12574 . -1) (undo-tree-id12575 . -1) (undo-tree-id12576 . -1) (undo-tree-id12577 . -1) (undo-tree-id12578 . -1) (undo-tree-id12579 . -1) (undo-tree-id12580 . -1) (undo-tree-id12581 . -1) (undo-tree-id12582 . -1) (undo-tree-id12583 . -1) (undo-tree-id12584 . -1) (undo-tree-id12585 . -1) (undo-tree-id12586 . -1) (undo-tree-id12587 . -1) (undo-tree-id12588 . -1) (undo-tree-id12589 . -1) (undo-tree-id12590 . -1) (undo-tree-id12591 . -1) (undo-tree-id12592 . -1) (undo-tree-id12593 . -1) (undo-tree-id12594 . -1) (undo-tree-id12595 . -1) (undo-tree-id12596 . -1) (#("t" 0 1 (fontified t)) . -1651) (undo-tree-id12597 . -1) (undo-tree-id12598 . -1) (undo-tree-id12599 . -1) (undo-tree-id12600 . -1) (undo-tree-id12601 . -1) (undo-tree-id12602 . -1) (undo-tree-id12603 . -1) (undo-tree-id12604 . -1) (undo-tree-id12605 . -1) (undo-tree-id12606 . -1) (undo-tree-id12607 . -1) (undo-tree-id12608 . -1) (undo-tree-id12609 . -1) (undo-tree-id12610 . -1) (undo-tree-id12611 . -1) (undo-tree-id12612 . -1) (undo-tree-id12613 . -1) (undo-tree-id12614 . -1) (undo-tree-id12615 . -1) (undo-tree-id12616 . -1) (undo-tree-id12617 . -1) (undo-tree-id12618 . -1) (undo-tree-id12619 . -1) (undo-tree-id12620 . -1) (undo-tree-id12621 . -1) (undo-tree-id12622 . -1) (undo-tree-id12623 . -1) (undo-tree-id12624 . -1) (undo-tree-id12625 . -1) (undo-tree-id12626 . -1) (undo-tree-id12627 . -1) (undo-tree-id12628 . -1) (undo-tree-id12629 . -1) (undo-tree-id12630 . -1) (undo-tree-id12631 . -1) (undo-tree-id12632 . -1) (undo-tree-id12633 . -1) (#("." 0 1 (fontified t)) . -1652) (undo-tree-id12634 . -1) (undo-tree-id12635 . -1) (undo-tree-id12636 . -1) (undo-tree-id12637 . -1) (undo-tree-id12638 . -1) (undo-tree-id12639 . -1) (undo-tree-id12640 . -1) (undo-tree-id12641 . -1) (undo-tree-id12642 . -1) (undo-tree-id12643 . -1) (undo-tree-id12644 . -1) (undo-tree-id12645 . -1) (undo-tree-id12646 . -1) (undo-tree-id12647 . -1) (undo-tree-id12648 . -1) (#("h" 0 1 (fontified t)) . -1653) (undo-tree-id12649 . -1) (undo-tree-id12650 . -1) (undo-tree-id12651 . -1) (undo-tree-id12652 . -1) (undo-tree-id12653 . -1) (undo-tree-id12654 . -1) (undo-tree-id12655 . -1) (undo-tree-id12656 . -1) (undo-tree-id12657 . -1) (undo-tree-id12658 . -1) (undo-tree-id12659 . -1) (undo-tree-id12660 . -1) (undo-tree-id12661 . -1) (#("e" 0 1 (fontified t)) . -1654) (undo-tree-id12662 . -1) (undo-tree-id12663 . -1) (undo-tree-id12664 . -1) (undo-tree-id12665 . -1) (undo-tree-id12666 . -1) (undo-tree-id12667 . -1) (undo-tree-id12668 . -1) (undo-tree-id12669 . -1) (undo-tree-id12670 . -1) (undo-tree-id12671 . -1) (#("i" 0 1 (fontified t)) . -1655) (undo-tree-id12672 . -1) (undo-tree-id12673 . -1) (undo-tree-id12674 . -1) (undo-tree-id12675 . -1) (undo-tree-id12676 . -1) (undo-tree-id12677 . -1) (undo-tree-id12678 . -1) 1656) nil (25944 35419 662292 0) 0 nil])
([nil nil ((1631 . 1634)) nil (25944 35419 662030 0) 0 nil])
([nil nil ((1633 . 1635)) nil (25944 35419 662029 0) 0 nil])
([nil nil ((1653 . 1655)) nil (25944 35419 662028 0) 0 nil])
([nil nil ((1653 . 1657) (#("re" 0 2 (fontified nil)) . 1653) (1653 . 1655) (#("rect" 0 4 (fontified nil)) . -1653) (1653 . 1657) (#("re" 0 2 (fontified t)) . -1653) (undo-tree-id12404 . -2) (undo-tree-id12405 . -1) (undo-tree-id12406 . -2) (undo-tree-id12407 . -2) 1655) nil (25944 35419 662026 0) 0 nil])
([nil nil ((1657 . 1660)) nil (25944 35419 662019 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1658 1665 #s(yas--snippet nil nil #s(yas--exit 1665 nil) 60 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1665 nil) 60 nil nil nil nil)) (1658 . 1665) (#("width()$0" 0 9 (fontified nil)) . 1658) (1658 . 1667) (#("wi" 0 2 (fontified nil)) . 1658) (1658 . 1660) (#("width()" 0 7 (fontified nil)) . -1658) (1658 . 1665) (#("wi" 0 2 (fontified t)) . -1658) (undo-tree-id12397 . -2) (undo-tree-id12398 . -1) (undo-tree-id12399 . -1) (undo-tree-id12400 . -2) (undo-tree-id12401 . -2) (undo-tree-id12402 . -2) (undo-tree-id12403 . -2) 1660) nil (25944 35419 662015 0) 0 nil])
([nil nil ((1563 . 1565) (t 25944 35419 693804 558000)) nil (25944 35490 427870 0) 0 nil])
([nil nil ((1565 . 1570)) nil (25944 35490 427868 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -1568) (undo-tree-id12739 . -1) (undo-tree-id12740 . -1) (#(" " 0 1 (fontified t)) . -1569) (undo-tree-id12741 . -1) 1570) nil (25944 35490 427867 0) 0 nil])
([nil nil ((1568 . 1580)) nil (25944 35490 427862 0) 0 nil])
([nil nil ((#("B" 0 1 (face font-lock-type-face fontified t)) . -1579) (undo-tree-id12738 . -1) 1580) nil (25944 35490 427861 0) 0 nil])
([nil nil ((1579 . 1585)) nil (25944 35490 427859 0) 0 nil])
([nil nil ((1579 . 1592) (#("Canvas" 0 6 (fontified nil)) . 1579) (1579 . 1585) (#("CanvasBackend" 0 13 (fontified nil)) . -1579) (1579 . 1592) (#("Canvas" 0 6 (face font-lock-type-face fontified t)) . -1579) (undo-tree-id12732 . -6) (undo-tree-id12733 . -5) (undo-tree-id12734 . -6) (undo-tree-id12735 . -6) (undo-tree-id12736 . -6) (undo-tree-id12737 . -6) 1585) nil (25944 35490 427857 0) 0 nil])
([nil nil ((1592 . 1596)) nil (25944 35490 427848 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1613 1619 nil nil nil t #s(yas--exit 1620 nil))) #s(yas--exit 1620 nil) 61 nil #s(yas--field 1 1613 1619 nil nil nil t #s(yas--exit 1620 nil)) nil nil)) (1594 . 1620) (#("with_canvas_object(${1:canvas})$0" 0 33 (fontified nil)) . 1594) (1594 . 1627) (#("wi" 0 2 (fontified nil)) . 1594) (1594 . 1596) (#("with_canvas_object(…)" 0 21 (fontified nil)) . -1594) (1594 . 1615) (#("wi" 0 2 (fontified t)) . -1594) (undo-tree-id12725 . -1) (undo-tree-id12726 . -2) (undo-tree-id12727 . -1) (undo-tree-id12728 . -2) (undo-tree-id12729 . -2) (undo-tree-id12730 . -2) (undo-tree-id12731 . -2) 1596) nil (25944 35490 427846 0) 0 nil])
([nil nil ((1614 . 1619) (#("canvas" 0 6 (fontified nil)) . 1614) (undo-tree-id12724 . -6) (1613 . 1614)) nil (25944 35490 427835 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1594 1620 #s(yas--snippet nil (#s(yas--field 1 1613 1619 nil nil nil t #s(yas--exit 1620 nil))) #s(yas--exit 1620 nil) 61 nil #s(yas--field 1 1613 1619 nil nil nil t #s(yas--exit 1620 nil)) nil nil))) nil (25944 35490 427826 0) 0 nil])
([nil nil ((1620 . 1621)) nil (25944 35490 427822 0) 0 nil])
([nil nil ((1619 . 1624) (t 25944 35490 457991 431000)) nil (25944 35502 455483 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1623) (undo-tree-id12765 . -1) (undo-tree-id12766 . -1) (undo-tree-id12767 . -1) (undo-tree-id12768 . -1) (undo-tree-id12769 . -1) 1624) nil (25944 35502 455481 0) 0 nil])
([nil nil ((1623 . 1624)) nil (25944 35502 455475 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1620 1626 #s(yas--snippet nil nil #s(yas--exit 1626 nil) 62 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1626 nil) 62 nil nil nil nil)) (1620 . 1626) (#("into()$0" 0 8 (fontified nil)) . 1620) (1620 . 1628) (#("into" 0 4 (fontified nil)) . 1620) (1620 . 1624) (#("into() (as Into)" 0 16 (fontified nil)) . -1620) (1620 . 1636) (#("into" 0 4 (fontified t)) . -1620) (undo-tree-id12742 . -2) (undo-tree-id12743 . -4) (undo-tree-id12744 . -1) (undo-tree-id12745 . -1) (undo-tree-id12746 . -2) (undo-tree-id12747 . -2) (undo-tree-id12748 . -2) (undo-tree-id12749 . -2) (undo-tree-id12750 . -2) (undo-tree-id12751 . -2) (undo-tree-id12752 . -2) (undo-tree-id12753 . -3) (undo-tree-id12754 . -3) (undo-tree-id12755 . -3) (undo-tree-id12756 . -3) (undo-tree-id12757 . -3) (undo-tree-id12758 . -3) (undo-tree-id12759 . -3) (undo-tree-id12760 . -3) (undo-tree-id12761 . -4) (undo-tree-id12762 . -4) (undo-tree-id12763 . -4) (undo-tree-id12764 . -4) 1624) nil (25944 35502 455470 0) 0 nil])
([nil nil ((#("into()" 0 6 (fontified t)) . -1620) (undo-tree-id12874 . -6) (undo-tree-id12875 . -6) (undo-tree-id12876 . -6) (undo-tree-id12877 . -6) (undo-tree-id12878 . -6) (undo-tree-id12879 . -6) (undo-tree-id12880 . -6) (undo-tree-id12881 . -6) (undo-tree-id12882 . -6) (undo-tree-id12883 . -6) (undo-tree-id12884 . -6) (undo-tree-id12885 . -6) (undo-tree-id12886 . -6) (undo-tree-id12887 . -6) (undo-tree-id12888 . -6) (undo-tree-id12889 . -6) (undo-tree-id12890 . -6) (undo-tree-id12891 . -6) (undo-tree-id12892 . -6) (undo-tree-id12893 . -6) (undo-tree-id12894 . -6) (undo-tree-id12895 . -6) (undo-tree-id12896 . -6) (undo-tree-id12897 . -6) (undo-tree-id12898 . -6) (undo-tree-id12899 . -6) (undo-tree-id12900 . -6) (undo-tree-id12901 . -6) (undo-tree-id12902 . -6) (undo-tree-id12903 . -6) (undo-tree-id12904 . -6) (undo-tree-id12905 . -6) (undo-tree-id12906 . -6) (undo-tree-id12907 . -6) (undo-tree-id12908 . -6) (undo-tree-id12909 . -6) (undo-tree-id12910 . -6) (undo-tree-id12911 . -6) (undo-tree-id12912 . -6) (undo-tree-id12913 . -6) (undo-tree-id12914 . -6) (undo-tree-id12915 . -6) (undo-tree-id12916 . -6) (undo-tree-id12917 . -6) (undo-tree-id12918 . -6) (undo-tree-id12919 . -6) (undo-tree-id12920 . -6) (undo-tree-id12921 . -6) (undo-tree-id12922 . -6) (undo-tree-id12923 . -6) (undo-tree-id12924 . -6) (undo-tree-id12925 . -6) 1626 (t 25944 35502 486154 567000)) nil (25944 35558 153093 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1619) (undo-tree-id12792 . -1) (undo-tree-id12793 . -1) (undo-tree-id12794 . -1) (undo-tree-id12795 . -1) (undo-tree-id12796 . -1) (undo-tree-id12797 . -1) (undo-tree-id12798 . -1) (undo-tree-id12799 . -1) (undo-tree-id12800 . -1) (undo-tree-id12801 . -1) (undo-tree-id12802 . -1) (undo-tree-id12803 . -1) (undo-tree-id12804 . -1) (undo-tree-id12805 . -1) (undo-tree-id12806 . -1) (undo-tree-id12807 . -1) (undo-tree-id12808 . -1) (undo-tree-id12809 . -1) (undo-tree-id12810 . -1) (undo-tree-id12811 . -1) (undo-tree-id12812 . -1) (undo-tree-id12813 . -1) (undo-tree-id12814 . -1) (undo-tree-id12815 . -1) (undo-tree-id12816 . -1) (undo-tree-id12817 . -1) (undo-tree-id12818 . -1) (undo-tree-id12819 . -1) (undo-tree-id12820 . -1) (undo-tree-id12821 . -1) (undo-tree-id12822 . -1) (undo-tree-id12823 . -1) (undo-tree-id12824 . -1) (undo-tree-id12825 . -1) (undo-tree-id12826 . -1) (undo-tree-id12827 . -1) (undo-tree-id12828 . -1) (undo-tree-id12829 . -1) (undo-tree-id12830 . -1) (undo-tree-id12831 . -1) (undo-tree-id12832 . -1) (undo-tree-id12833 . -1) (undo-tree-id12834 . -1) (undo-tree-id12835 . -1) (undo-tree-id12836 . -1) (undo-tree-id12837 . -1) (undo-tree-id12838 . -1) (undo-tree-id12839 . -1) (undo-tree-id12840 . -1) (undo-tree-id12841 . -1) (undo-tree-id12842 . -1) (undo-tree-id12843 . -1) (undo-tree-id12844 . -1) (undo-tree-id12845 . -1) (undo-tree-id12846 . -1) (undo-tree-id12847 . -1) (undo-tree-id12848 . -1) (undo-tree-id12849 . -1) (undo-tree-id12850 . -1) (undo-tree-id12851 . -1) (undo-tree-id12852 . -1) (undo-tree-id12853 . -1) (undo-tree-id12854 . -1) (undo-tree-id12855 . -1) (undo-tree-id12856 . -1) (undo-tree-id12857 . -1) (undo-tree-id12858 . -1) (undo-tree-id12859 . -1) (undo-tree-id12860 . -1) (undo-tree-id12861 . -1) (undo-tree-id12862 . -1) (undo-tree-id12863 . -1) (undo-tree-id12864 . -1) (undo-tree-id12865 . -1) (undo-tree-id12866 . -1) (undo-tree-id12867 . -1) (undo-tree-id12868 . -1) (undo-tree-id12869 . -1) (undo-tree-id12870 . -1) (undo-tree-id12871 . -1) (undo-tree-id12872 . -1) (undo-tree-id12873 . -1) 1620) nil (25944 35558 153039 0) 0 nil])
([nil nil ((1619 . 1624)) nil (25944 35558 152954 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1620 1630 #s(yas--snippet nil nil #s(yas--exit 1630 nil) 63 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1630 nil) 63 nil nil nil nil)) (1620 . 1630) (#("into_any()$0" 0 12 (fontified nil)) . 1620) (1620 . 1632) (#("into" 0 4 (fontified nil)) . 1620) (1620 . 1624) (#("into_any()" 0 10 (fontified nil)) . -1620) (1620 . 1630) (#("into" 0 4 (fontified t)) . -1620) (undo-tree-id12770 . -2) (undo-tree-id12771 . -4) (undo-tree-id12772 . -1) (undo-tree-id12773 . -1) (undo-tree-id12774 . -1) (undo-tree-id12775 . -1) (undo-tree-id12776 . -2) (undo-tree-id12777 . -2) (undo-tree-id12778 . -2) (undo-tree-id12779 . -2) (undo-tree-id12780 . -2) (undo-tree-id12781 . -2) (undo-tree-id12782 . -2) (undo-tree-id12783 . -2) (undo-tree-id12784 . -2) (undo-tree-id12785 . -2) (undo-tree-id12786 . -3) (undo-tree-id12787 . -3) (undo-tree-id12788 . -4) (undo-tree-id12789 . -4) (undo-tree-id12790 . -4) (undo-tree-id12791 . -4) 1624) nil (25944 35558 152948 0) 0 nil])
([nil nil ((#("any()" 0 5 (fontified t)) . -1625) (undo-tree-id13288 . -5) (undo-tree-id13289 . -5) (undo-tree-id13290 . -5) (undo-tree-id13291 . -5) (undo-tree-id13292 . -5) (undo-tree-id13293 . -5) (undo-tree-id13294 . -5) (undo-tree-id13295 . -5) (undo-tree-id13296 . -5) (undo-tree-id13297 . -5) (undo-tree-id13298 . -5) (undo-tree-id13299 . -5) (undo-tree-id13300 . -5) (undo-tree-id13301 . -5) (undo-tree-id13302 . -5) (undo-tree-id13303 . -5) (undo-tree-id13304 . -5) (undo-tree-id13305 . -5) (undo-tree-id13306 . -5) (undo-tree-id13307 . -5) (undo-tree-id13308 . -5) (undo-tree-id13309 . -5) (undo-tree-id13310 . -5) (undo-tree-id13311 . -5) (undo-tree-id13312 . -5) (undo-tree-id13313 . -5) (undo-tree-id13314 . -5) (undo-tree-id13315 . -5) (undo-tree-id13316 . -5) (undo-tree-id13317 . -5) (undo-tree-id13318 . -5) (undo-tree-id13319 . -5) (undo-tree-id13320 . -5) (undo-tree-id13321 . -5) (undo-tree-id13322 . -5) (undo-tree-id13323 . -5) (undo-tree-id13324 . -5) (undo-tree-id13325 . -5) (undo-tree-id13326 . -5) (undo-tree-id13327 . -5) (undo-tree-id13328 . -5) (undo-tree-id13329 . -5) (undo-tree-id13330 . -5) (undo-tree-id13331 . -5) (undo-tree-id13332 . -5) (undo-tree-id13333 . -5) (undo-tree-id13334 . -5) (undo-tree-id13335 . -5) (undo-tree-id13336 . -5) (undo-tree-id13337 . -5) (undo-tree-id13338 . -4) (undo-tree-id13339 . -4) (undo-tree-id13340 . -4) (undo-tree-id13341 . -4) (undo-tree-id13342 . -4) (undo-tree-id13343 . -5) (undo-tree-id13344 . -5) (undo-tree-id13345 . -5) (undo-tree-id13346 . -5) (undo-tree-id13347 . -5) 1630 (t 25944 35558 184563 425000)) nil (25944 35573 722868 0) 0 nil])
([nil nil ((#("into_" 0 5 (fontified t)) . -1620) (undo-tree-id13227 . -5) (undo-tree-id13228 . -5) (undo-tree-id13229 . -5) (undo-tree-id13230 . -5) (undo-tree-id13231 . -5) (undo-tree-id13232 . -5) (undo-tree-id13233 . -5) (undo-tree-id13234 . -5) (undo-tree-id13235 . -5) (undo-tree-id13236 . -5) (undo-tree-id13237 . -5) (undo-tree-id13238 . -5) (undo-tree-id13239 . -5) (undo-tree-id13240 . -5) (undo-tree-id13241 . -5) (undo-tree-id13242 . -5) (undo-tree-id13243 . -5) (undo-tree-id13244 . -5) (undo-tree-id13245 . -5) (undo-tree-id13246 . -5) (undo-tree-id13247 . -5) (undo-tree-id13248 . -5) (undo-tree-id13249 . -5) (undo-tree-id13250 . -5) (undo-tree-id13251 . -5) (undo-tree-id13252 . -5) (undo-tree-id13253 . -5) (undo-tree-id13254 . -5) (undo-tree-id13255 . -5) (undo-tree-id13256 . -5) (undo-tree-id13257 . -5) (undo-tree-id13258 . -5) (undo-tree-id13259 . -5) (undo-tree-id13260 . -5) (undo-tree-id13261 . -5) (undo-tree-id13262 . -5) (undo-tree-id13263 . -5) (undo-tree-id13264 . -5) (undo-tree-id13265 . -5) (undo-tree-id13266 . -5) (undo-tree-id13267 . -5) (undo-tree-id13268 . -5) (undo-tree-id13269 . -5) (undo-tree-id13270 . -5) (undo-tree-id13271 . -5) (undo-tree-id13272 . -5) (undo-tree-id13273 . -5) (undo-tree-id13274 . -5) (undo-tree-id13275 . -5) (undo-tree-id13276 . -5) (undo-tree-id13277 . -5) (undo-tree-id13278 . -5) (undo-tree-id13279 . -5) (undo-tree-id13280 . -5) (undo-tree-id13281 . -5) (undo-tree-id13282 . -5) (undo-tree-id13283 . -5) (undo-tree-id13284 . -5) (undo-tree-id13285 . -5) (undo-tree-id13286 . -5) (undo-tree-id13287 . -5) 1625) nil (25944 35573 722808 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1619) (undo-tree-id13137 . -1) (undo-tree-id13138 . -1) (undo-tree-id13139 . -1) (undo-tree-id13140 . -1) (undo-tree-id13141 . -1) (undo-tree-id13142 . -1) (undo-tree-id13143 . -1) (undo-tree-id13144 . -1) (undo-tree-id13145 . -1) (undo-tree-id13146 . -1) (undo-tree-id13147 . -1) (undo-tree-id13148 . -1) (undo-tree-id13149 . -1) (undo-tree-id13150 . -1) (undo-tree-id13151 . -1) (undo-tree-id13152 . -1) (undo-tree-id13153 . -1) (undo-tree-id13154 . -1) (undo-tree-id13155 . -1) (undo-tree-id13156 . -1) (undo-tree-id13157 . -1) (undo-tree-id13158 . -1) (undo-tree-id13159 . -1) (undo-tree-id13160 . -1) (undo-tree-id13161 . -1) (undo-tree-id13162 . -1) (undo-tree-id13163 . -1) (undo-tree-id13164 . -1) (undo-tree-id13165 . -1) (undo-tree-id13166 . -1) (undo-tree-id13167 . -1) (undo-tree-id13168 . -1) (undo-tree-id13169 . -1) (undo-tree-id13170 . -1) (undo-tree-id13171 . -1) (undo-tree-id13172 . -1) (undo-tree-id13173 . -1) (undo-tree-id13174 . -1) (undo-tree-id13175 . -1) (undo-tree-id13176 . -1) (undo-tree-id13177 . -1) (undo-tree-id13178 . -1) (undo-tree-id13179 . -1) (undo-tree-id13180 . -1) (undo-tree-id13181 . -1) (undo-tree-id13182 . -1) (undo-tree-id13183 . -1) (undo-tree-id13184 . -1) (undo-tree-id13185 . -1) (undo-tree-id13186 . -1) (undo-tree-id13187 . -1) (undo-tree-id13188 . -1) (undo-tree-id13189 . -1) (undo-tree-id13190 . -1) (undo-tree-id13191 . -1) (undo-tree-id13192 . -1) (undo-tree-id13193 . -1) (undo-tree-id13194 . -1) (undo-tree-id13195 . -1) (undo-tree-id13196 . -1) (undo-tree-id13197 . -1) (undo-tree-id13198 . -1) (undo-tree-id13199 . -1) (undo-tree-id13200 . -1) (undo-tree-id13201 . -1) (undo-tree-id13202 . -1) (undo-tree-id13203 . -1) (undo-tree-id13204 . -1) (undo-tree-id13205 . -1) (undo-tree-id13206 . -1) (undo-tree-id13207 . -1) (undo-tree-id13208 . -1) (undo-tree-id13209 . -1) (undo-tree-id13210 . -1) (undo-tree-id13211 . -1) (undo-tree-id13212 . -1) (undo-tree-id13213 . -1) (undo-tree-id13214 . -1) (undo-tree-id13215 . -1) (undo-tree-id13216 . -1) (undo-tree-id13217 . -1) (undo-tree-id13218 . -1) (undo-tree-id13219 . -1) (undo-tree-id13220 . -1) (undo-tree-id13221 . -1) (undo-tree-id13222 . -1) (undo-tree-id13223 . -1) (undo-tree-id13224 . -1) (undo-tree-id13225 . -1) (undo-tree-id13226 . -1) 1620) nil (25944 35573 722745 0) 0 nil])
([nil nil ((1619 . 1621)) nil (25944 35573 722656 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1620) (undo-tree-id13127 . -1) (undo-tree-id13128 . -1) (undo-tree-id13129 . -1) (undo-tree-id13130 . -1) (undo-tree-id13131 . -1) (undo-tree-id13132 . -1) (undo-tree-id13133 . -1) (undo-tree-id13134 . -1) (undo-tree-id13135 . -1) (undo-tree-id13136 . -1) 1621) nil (25944 35573 722654 0) 0 nil])
([nil nil ((1620 . 1622)) nil (25944 35573 722644 0) 0 nil])
([nil nil ((1622 . 1623)) nil (25944 35573 722643 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1622) (undo-tree-id13118 . -1) (undo-tree-id13119 . -1) (undo-tree-id13120 . -1) (undo-tree-id13121 . -1) (undo-tree-id13122 . -1) (undo-tree-id13123 . -1) (undo-tree-id13124 . -1) (undo-tree-id13125 . -1) (undo-tree-id13126 . -1) 1623) nil (25944 35573 722641 0) 0 nil])
([nil nil ((1622 . 1625)) nil (25944 35573 722631 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1619) (undo-tree-id12926 . -1) (undo-tree-id12927 . -1) (undo-tree-id12928 . -1) (undo-tree-id12929 . -1) (undo-tree-id12930 . -1) (undo-tree-id12931 . -1) (undo-tree-id12932 . -1) (undo-tree-id12933 . -1) (undo-tree-id12934 . -1) (undo-tree-id12935 . -1) (undo-tree-id12936 . -1) (undo-tree-id12937 . -1) (undo-tree-id12938 . -1) (undo-tree-id12939 . -1) (undo-tree-id12940 . -1) (undo-tree-id12941 . -1) (undo-tree-id12942 . -1) (undo-tree-id12943 . -1) (undo-tree-id12944 . -1) (undo-tree-id12945 . -1) (undo-tree-id12946 . -1) (undo-tree-id12947 . -1) (undo-tree-id12948 . -1) (undo-tree-id12949 . -1) (undo-tree-id12950 . -1) (undo-tree-id12951 . -1) (undo-tree-id12952 . -1) (undo-tree-id12953 . -1) (undo-tree-id12954 . -1) (undo-tree-id12955 . -1) (undo-tree-id12956 . -1) (undo-tree-id12957 . -1) (undo-tree-id12958 . -1) (undo-tree-id12959 . -1) (undo-tree-id12960 . -1) (undo-tree-id12961 . -1) (undo-tree-id12962 . -1) (undo-tree-id12963 . -1) (undo-tree-id12964 . -1) (undo-tree-id12965 . -1) (undo-tree-id12966 . -1) (undo-tree-id12967 . -1) (undo-tree-id12968 . -1) (undo-tree-id12969 . -1) (undo-tree-id12970 . -1) (undo-tree-id12971 . -1) (undo-tree-id12972 . -1) (undo-tree-id12973 . -1) (undo-tree-id12974 . -1) (undo-tree-id12975 . -1) (undo-tree-id12976 . -1) (undo-tree-id12977 . -1) (undo-tree-id12978 . -1) (undo-tree-id12979 . -1) (undo-tree-id12980 . -1) (undo-tree-id12981 . -1) (undo-tree-id12982 . -1) (undo-tree-id12983 . -1) (undo-tree-id12984 . -1) (undo-tree-id12985 . -1) (undo-tree-id12986 . -1) (undo-tree-id12987 . -1) (undo-tree-id12988 . -1) (undo-tree-id12989 . -1) (#("d" 0 1 (fontified t)) . -1620) (undo-tree-id12990 . -1) (undo-tree-id12991 . -1) (undo-tree-id12992 . -1) (undo-tree-id12993 . -1) (undo-tree-id12994 . -1) (undo-tree-id12995 . -1) (undo-tree-id12996 . -1) (undo-tree-id12997 . -1) (undo-tree-id12998 . -1) (undo-tree-id12999 . -1) (undo-tree-id13000 . -1) (undo-tree-id13001 . -1) (undo-tree-id13002 . -1) (undo-tree-id13003 . -1) (undo-tree-id13004 . -1) (undo-tree-id13005 . -1) (undo-tree-id13006 . -1) (undo-tree-id13007 . -1) (undo-tree-id13008 . -1) (undo-tree-id13009 . -1) (undo-tree-id13010 . -1) (undo-tree-id13011 . -1) (undo-tree-id13012 . -1) (undo-tree-id13013 . -1) (undo-tree-id13014 . -1) (undo-tree-id13015 . -1) (undo-tree-id13016 . -1) (undo-tree-id13017 . -1) (undo-tree-id13018 . -1) (undo-tree-id13019 . -1) (undo-tree-id13020 . -1) (undo-tree-id13021 . -1) (undo-tree-id13022 . -1) (undo-tree-id13023 . -1) (undo-tree-id13024 . -1) (undo-tree-id13025 . -1) (undo-tree-id13026 . -1) (undo-tree-id13027 . -1) (undo-tree-id13028 . -1) (undo-tree-id13029 . -1) (undo-tree-id13030 . -1) (undo-tree-id13031 . -1) (undo-tree-id13032 . -1) (undo-tree-id13033 . -1) (#("e" 0 1 (fontified t)) . -1621) (undo-tree-id13034 . -1) (undo-tree-id13035 . -1) (undo-tree-id13036 . -1) (undo-tree-id13037 . -1) (undo-tree-id13038 . -1) (undo-tree-id13039 . -1) (undo-tree-id13040 . -1) (undo-tree-id13041 . -1) (undo-tree-id13042 . -1) (undo-tree-id13043 . -1) (undo-tree-id13044 . -1) (undo-tree-id13045 . -1) (undo-tree-id13046 . -1) (undo-tree-id13047 . -1) (undo-tree-id13048 . -1) (undo-tree-id13049 . -1) (undo-tree-id13050 . -1) (undo-tree-id13051 . -1) (undo-tree-id13052 . -1) (undo-tree-id13053 . -1) (undo-tree-id13054 . -1) (undo-tree-id13055 . -1) (undo-tree-id13056 . -1) (undo-tree-id13057 . -1) (undo-tree-id13058 . -1) (undo-tree-id13059 . -1) (undo-tree-id13060 . -1) (undo-tree-id13061 . -1) (undo-tree-id13062 . -1) (undo-tree-id13063 . -1) (undo-tree-id13064 . -1) (undo-tree-id13065 . -1) (undo-tree-id13066 . -1) (undo-tree-id13067 . -1) (undo-tree-id13068 . -1) (undo-tree-id13069 . -1) (undo-tree-id13070 . -1) (undo-tree-id13071 . -1) (undo-tree-id13072 . -1) (undo-tree-id13073 . -1) (#("r" 0 1 (fontified t)) . -1622) (undo-tree-id13074 . -1) (undo-tree-id13075 . -1) (undo-tree-id13076 . -1) (undo-tree-id13077 . -1) (undo-tree-id13078 . -1) (undo-tree-id13079 . -1) (undo-tree-id13080 . -1) (undo-tree-id13081 . -1) (undo-tree-id13082 . -1) (undo-tree-id13083 . -1) (undo-tree-id13084 . -1) (undo-tree-id13085 . -1) (undo-tree-id13086 . -1) (undo-tree-id13087 . -1) (undo-tree-id13088 . -1) (undo-tree-id13089 . -1) (undo-tree-id13090 . -1) (undo-tree-id13091 . -1) (undo-tree-id13092 . -1) (undo-tree-id13093 . -1) (undo-tree-id13094 . -1) (undo-tree-id13095 . -1) (#("e" 0 1 (fontified t)) . -1623) (undo-tree-id13096 . -1) (undo-tree-id13097 . -1) (undo-tree-id13098 . -1) (undo-tree-id13099 . -1) (undo-tree-id13100 . -1) (undo-tree-id13101 . -1) (undo-tree-id13102 . -1) (undo-tree-id13103 . -1) (undo-tree-id13104 . -1) (undo-tree-id13105 . -1) (undo-tree-id13106 . -1) (undo-tree-id13107 . -1) (undo-tree-id13108 . -1) (undo-tree-id13109 . -1) (#("f" 0 1 (fontified t)) . -1624) (undo-tree-id13110 . -1) (undo-tree-id13111 . -1) (undo-tree-id13112 . -1) (undo-tree-id13113 . -1) (undo-tree-id13114 . -1) (undo-tree-id13115 . -1) (undo-tree-id13116 . -1) (undo-tree-id13117 . -1) 1625) nil (25944 35573 722619 0) 0 nil])
([nil nil ((1619 . 1620) (t 25944 35573 754025 458000)) nil (25944 35651 732575 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1619) (undo-tree-id13348 . -1) (undo-tree-id13349 . -1) (undo-tree-id13350 . -1) (undo-tree-id13351 . -1) 1620) nil (25944 35651 732573 0) 0 nil])
([nil nil ((1613 . 1614)) nil (25944 35651 732555 0) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -1613) (undo-tree-id13358 . -1) (undo-tree-id13359 . -1) (undo-tree-id13360 . -1) (undo-tree-id13361 . -1) (undo-tree-id13362 . -1) (undo-tree-id13363 . -1) (undo-tree-id13364 . -1) (undo-tree-id13365 . -1) (undo-tree-id13366 . -1) (undo-tree-id13367 . -1) (undo-tree-id13368 . -1) (undo-tree-id13369 . -1) (undo-tree-id13370 . -1) (undo-tree-id13371 . -1) (undo-tree-id13372 . -1) (undo-tree-id13373 . -1) (undo-tree-id13374 . -1) (undo-tree-id13375 . -1) (undo-tree-id13376 . -1) (undo-tree-id13377 . -1) (undo-tree-id13378 . -1) (undo-tree-id13379 . -1) (undo-tree-id13380 . -1) (undo-tree-id13381 . -1) (undo-tree-id13382 . -1) 1614 (t 25944 35651 765479 859000)) nil (25944 35717 395684 0) 0 nil])
([nil nil ((1619 . 1622)) nil (25944 35717 395654 0) 0 nil])
([nil nil ((#("deref" 0 5 (fontified nil)) . 1620) (1620 . 1625) (#("deref() (use std::ops::Deref)" 0 29 (fontified nil)) . -1620) (1620 . 1649) (#("de" 0 2 (fontified t)) . -1620) (undo-tree-id13353 . -2) (undo-tree-id13354 . -1) (undo-tree-id13355 . -1) (undo-tree-id13356 . -2) (undo-tree-id13357 . -2) 1622) nil (25944 35717 395653 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1620 1627 #s(yas--snippet nil nil #s(yas--exit 1627 nil) 64 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1627 nil) 64 nil nil nil nil)) (1620 . 1627) (#("deref()$0" 0 9 (fontified nil)) . 1620) (1620 . 1629)) nil (25944 35720 279755 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1619) (undo-tree-id13385 . -1) (undo-tree-id13386 . -1) (undo-tree-id13387 . -1) (undo-tree-id13388 . -1) (undo-tree-id13389 . -1) (undo-tree-id13390 . -1) (undo-tree-id13391 . -1) (undo-tree-id13392 . -1) (undo-tree-id13393 . -1) (undo-tree-id13394 . -1) (undo-tree-id13395 . -1) (undo-tree-id13396 . -1) (undo-tree-id13397 . -1) (undo-tree-id13398 . -1) (undo-tree-id13399 . -1) (undo-tree-id13400 . -1) (undo-tree-id13401 . -1) (undo-tree-id13402 . -1) (undo-tree-id13403 . -1) (undo-tree-id13404 . -1) (undo-tree-id13405 . -1) (undo-tree-id13406 . -1) (undo-tree-id13407 . -1) (undo-tree-id13408 . -1) (undo-tree-id13409 . -1) (undo-tree-id13410 . -1) (undo-tree-id13411 . -1) (undo-tree-id13412 . -1) (undo-tree-id13413 . -1) (undo-tree-id13414 . -1) (undo-tree-id13415 . -1) (undo-tree-id13416 . -1) (undo-tree-id13417 . -1) (undo-tree-id13418 . -1) (undo-tree-id13419 . -1) (undo-tree-id13420 . -1) (undo-tree-id13421 . -1) (undo-tree-id13422 . -1) (undo-tree-id13423 . -1) (undo-tree-id13424 . -1) (undo-tree-id13425 . -1) (undo-tree-id13426 . -1) (undo-tree-id13427 . -1) (undo-tree-id13428 . -1) (undo-tree-id13429 . -1) (undo-tree-id13430 . -1) (undo-tree-id13431 . -1) (undo-tree-id13432 . -1) (undo-tree-id13433 . -1) (undo-tree-id13434 . -1) (undo-tree-id13435 . -1) (undo-tree-id13436 . -1) (undo-tree-id13437 . -1) (undo-tree-id13438 . -1) (undo-tree-id13439 . -1) (undo-tree-id13440 . -1) (undo-tree-id13441 . -1) (undo-tree-id13442 . -1) (undo-tree-id13443 . -1) (undo-tree-id13444 . -1) (undo-tree-id13445 . -1) (undo-tree-id13446 . -1) (undo-tree-id13447 . -1) (undo-tree-id13448 . -1) (undo-tree-id13449 . -1) (undo-tree-id13450 . -1) (undo-tree-id13451 . -1) (undo-tree-id13452 . -1) (undo-tree-id13453 . -1) (undo-tree-id13454 . -1) (undo-tree-id13455 . -1) (undo-tree-id13456 . -1) (undo-tree-id13457 . -1) (undo-tree-id13458 . -1) (undo-tree-id13459 . -1) (undo-tree-id13460 . -1) (undo-tree-id13461 . -1) (undo-tree-id13462 . -1) (undo-tree-id13463 . -1) (undo-tree-id13464 . -1) (undo-tree-id13465 . -1) (undo-tree-id13466 . -1) (undo-tree-id13467 . -1) (undo-tree-id13468 . -1) (undo-tree-id13469 . -1) (undo-tree-id13470 . -1) (undo-tree-id13471 . -1) (undo-tree-id13472 . -1) (undo-tree-id13473 . -1) (undo-tree-id13474 . -1) (undo-tree-id13475 . -1) (undo-tree-id13476 . -1) (undo-tree-id13477 . -1) (undo-tree-id13478 . -1) (undo-tree-id13479 . -1) (undo-tree-id13480 . -1) (undo-tree-id13481 . -1) (undo-tree-id13482 . -1) (undo-tree-id13483 . -1) (undo-tree-id13484 . -1) (undo-tree-id13485 . -1) (undo-tree-id13486 . -1) (undo-tree-id13487 . -1) (undo-tree-id13488 . -1) (undo-tree-id13489 . -1) (undo-tree-id13490 . -1) (undo-tree-id13491 . -1) (undo-tree-id13492 . -1) (undo-tree-id13493 . -1) (undo-tree-id13494 . -1) (undo-tree-id13495 . -1) (undo-tree-id13496 . -1) (undo-tree-id13497 . -1) (undo-tree-id13498 . -1) (undo-tree-id13499 . -1) (undo-tree-id13500 . -1) (undo-tree-id13501 . -1) (undo-tree-id13502 . -1) (undo-tree-id13503 . -1) (undo-tree-id13504 . -1) (undo-tree-id13505 . -1) (undo-tree-id13506 . -1) (undo-tree-id13507 . -1) (undo-tree-id13508 . -1) (undo-tree-id13509 . -1) (undo-tree-id13510 . -1) (undo-tree-id13511 . -1) (undo-tree-id13512 . -1) (undo-tree-id13513 . -1) (undo-tree-id13514 . -1) (undo-tree-id13515 . -1) (undo-tree-id13516 . -1) (undo-tree-id13517 . -1) (undo-tree-id13518 . -1) (undo-tree-id13519 . -1) (undo-tree-id13520 . -1) (#("d" 0 1 (fontified t)) . -1620) (undo-tree-id13521 . -1) (undo-tree-id13522 . -1) (undo-tree-id13523 . -1) (undo-tree-id13524 . -1) (undo-tree-id13525 . -1) (undo-tree-id13526 . -1) (undo-tree-id13527 . -1) (undo-tree-id13528 . -1) (undo-tree-id13529 . -1) (undo-tree-id13530 . -1) (undo-tree-id13531 . -1) (undo-tree-id13532 . -1) (undo-tree-id13533 . -1) (undo-tree-id13534 . -1) (undo-tree-id13535 . -1) (undo-tree-id13536 . -1) (undo-tree-id13537 . -1) (undo-tree-id13538 . -1) (undo-tree-id13539 . -1) (undo-tree-id13540 . -1) (undo-tree-id13541 . -1) (undo-tree-id13542 . -1) (undo-tree-id13543 . -1) (undo-tree-id13544 . -1) (undo-tree-id13545 . -1) (undo-tree-id13546 . -1) (undo-tree-id13547 . -1) (undo-tree-id13548 . -1) (undo-tree-id13549 . -1) (undo-tree-id13550 . -1) (undo-tree-id13551 . -1) (undo-tree-id13552 . -1) (undo-tree-id13553 . -1) (undo-tree-id13554 . -1) (undo-tree-id13555 . -1) (undo-tree-id13556 . -1) (undo-tree-id13557 . -1) (undo-tree-id13558 . -1) (undo-tree-id13559 . -1) (undo-tree-id13560 . -1) (undo-tree-id13561 . -1) (undo-tree-id13562 . -1) (undo-tree-id13563 . -1) (undo-tree-id13564 . -1) (undo-tree-id13565 . -1) (undo-tree-id13566 . -1) (undo-tree-id13567 . -1) (undo-tree-id13568 . -1) (undo-tree-id13569 . -1) (undo-tree-id13570 . -1) (undo-tree-id13571 . -1) (undo-tree-id13572 . -1) (undo-tree-id13573 . -1) (undo-tree-id13574 . -1) (undo-tree-id13575 . -1) (undo-tree-id13576 . -1) (undo-tree-id13577 . -1) (undo-tree-id13578 . -1) (undo-tree-id13579 . -1) (undo-tree-id13580 . -1) (undo-tree-id13581 . -1) (undo-tree-id13582 . -1) (undo-tree-id13583 . -1) (undo-tree-id13584 . -1) (undo-tree-id13585 . -1) (undo-tree-id13586 . -1) (undo-tree-id13587 . -1) (undo-tree-id13588 . -1) (undo-tree-id13589 . -1) (undo-tree-id13590 . -1) (undo-tree-id13591 . -1) (undo-tree-id13592 . -1) (undo-tree-id13593 . -1) (undo-tree-id13594 . -1) (undo-tree-id13595 . -1) (undo-tree-id13596 . -1) (undo-tree-id13597 . -1) (undo-tree-id13598 . -1) (undo-tree-id13599 . -1) (undo-tree-id13600 . -1) (undo-tree-id13601 . -1) (undo-tree-id13602 . -1) (undo-tree-id13603 . -1) (undo-tree-id13604 . -1) (undo-tree-id13605 . -1) (undo-tree-id13606 . -1) (undo-tree-id13607 . -1) (undo-tree-id13608 . -1) (undo-tree-id13609 . -1) (undo-tree-id13610 . -1) (undo-tree-id13611 . -1) (undo-tree-id13612 . -1) (undo-tree-id13613 . -1) (undo-tree-id13614 . -1) (undo-tree-id13615 . -1) (undo-tree-id13616 . -1) (undo-tree-id13617 . -1) (undo-tree-id13618 . -1) (undo-tree-id13619 . -1) (undo-tree-id13620 . -1) (undo-tree-id13621 . -1) (undo-tree-id13622 . -1) (undo-tree-id13623 . -1) (undo-tree-id13624 . -1) (undo-tree-id13625 . -1) (undo-tree-id13626 . -1) (undo-tree-id13627 . -1) (undo-tree-id13628 . -1) (undo-tree-id13629 . -1) (undo-tree-id13630 . -1) (undo-tree-id13631 . -1) (undo-tree-id13632 . -1) (undo-tree-id13633 . -1) (undo-tree-id13634 . -1) (undo-tree-id13635 . -1) (undo-tree-id13636 . -1) (undo-tree-id13637 . -1) (undo-tree-id13638 . -1) (undo-tree-id13639 . -1) (undo-tree-id13640 . -1) (undo-tree-id13641 . -1) (undo-tree-id13642 . -1) (undo-tree-id13643 . -1) (undo-tree-id13644 . -1) (undo-tree-id13645 . -1) (undo-tree-id13646 . -1) (undo-tree-id13647 . -1) (#("e" 0 1 (fontified t)) . -1621) (undo-tree-id13648 . -1) (undo-tree-id13649 . -1) (undo-tree-id13650 . -1) (undo-tree-id13651 . -1) (undo-tree-id13652 . -1) (undo-tree-id13653 . -1) (undo-tree-id13654 . -1) (undo-tree-id13655 . -1) (undo-tree-id13656 . -1) (undo-tree-id13657 . -1) (undo-tree-id13658 . -1) (undo-tree-id13659 . -1) (undo-tree-id13660 . -1) (undo-tree-id13661 . -1) (undo-tree-id13662 . -1) (undo-tree-id13663 . -1) (undo-tree-id13664 . -1) (undo-tree-id13665 . -1) (undo-tree-id13666 . -1) (undo-tree-id13667 . -1) (undo-tree-id13668 . -1) (undo-tree-id13669 . -1) (undo-tree-id13670 . -1) (undo-tree-id13671 . -1) (undo-tree-id13672 . -1) (undo-tree-id13673 . -1) (undo-tree-id13674 . -1) (undo-tree-id13675 . -1) (undo-tree-id13676 . -1) (undo-tree-id13677 . -1) (undo-tree-id13678 . -1) (undo-tree-id13679 . -1) (undo-tree-id13680 . -1) (undo-tree-id13681 . -1) (undo-tree-id13682 . -1) (undo-tree-id13683 . -1) (undo-tree-id13684 . -1) (undo-tree-id13685 . -1) (undo-tree-id13686 . -1) (undo-tree-id13687 . -1) (undo-tree-id13688 . -1) (undo-tree-id13689 . -1) (undo-tree-id13690 . -1) (undo-tree-id13691 . -1) (undo-tree-id13692 . -1) (undo-tree-id13693 . -1) (undo-tree-id13694 . -1) (undo-tree-id13695 . -1) (undo-tree-id13696 . -1) (undo-tree-id13697 . -1) (undo-tree-id13698 . -1) (undo-tree-id13699 . -1) (undo-tree-id13700 . -1) (undo-tree-id13701 . -1) (undo-tree-id13702 . -1) (undo-tree-id13703 . -1) (undo-tree-id13704 . -1) (undo-tree-id13705 . -1) (undo-tree-id13706 . -1) (undo-tree-id13707 . -1) (undo-tree-id13708 . -1) (undo-tree-id13709 . -1) (undo-tree-id13710 . -1) (undo-tree-id13711 . -1) (undo-tree-id13712 . -1) (undo-tree-id13713 . -1) (undo-tree-id13714 . -1) (undo-tree-id13715 . -1) (undo-tree-id13716 . -1) (undo-tree-id13717 . -1) (undo-tree-id13718 . -1) (undo-tree-id13719 . -1) (undo-tree-id13720 . -1) (undo-tree-id13721 . -1) (undo-tree-id13722 . -1) (undo-tree-id13723 . -1) (undo-tree-id13724 . -1) (undo-tree-id13725 . -1) (undo-tree-id13726 . -1) (undo-tree-id13727 . -1) (undo-tree-id13728 . -1) (undo-tree-id13729 . -1) (undo-tree-id13730 . -1) (undo-tree-id13731 . -1) (undo-tree-id13732 . -1) (undo-tree-id13733 . -1) (undo-tree-id13734 . -1) (undo-tree-id13735 . -1) (undo-tree-id13736 . -1) (undo-tree-id13737 . -1) (undo-tree-id13738 . -1) (undo-tree-id13739 . -1) (undo-tree-id13740 . -1) (undo-tree-id13741 . -1) (undo-tree-id13742 . -1) (undo-tree-id13743 . -1) (undo-tree-id13744 . -1) (undo-tree-id13745 . -1) (undo-tree-id13746 . -1) (undo-tree-id13747 . -1) (undo-tree-id13748 . -1) (undo-tree-id13749 . -1) (undo-tree-id13750 . -1) (undo-tree-id13751 . -1) (undo-tree-id13752 . -1) (undo-tree-id13753 . -1) (undo-tree-id13754 . -1) (undo-tree-id13755 . -1) (undo-tree-id13756 . -1) (undo-tree-id13757 . -1) (undo-tree-id13758 . -1) (undo-tree-id13759 . -1) (undo-tree-id13760 . -1) (undo-tree-id13761 . -1) (undo-tree-id13762 . -1) (undo-tree-id13763 . -1) (undo-tree-id13764 . -1) (undo-tree-id13765 . -1) (undo-tree-id13766 . -1) (undo-tree-id13767 . -1) (undo-tree-id13768 . -1) (undo-tree-id13769 . -1) (undo-tree-id13770 . -1) (undo-tree-id13771 . -1) (undo-tree-id13772 . -1) (undo-tree-id13773 . -1) (#("r" 0 1 (fontified t)) . -1622) (undo-tree-id13774 . -1) (undo-tree-id13775 . -1) (undo-tree-id13776 . -1) (undo-tree-id13777 . -1) (undo-tree-id13778 . -1) (undo-tree-id13779 . -1) (undo-tree-id13780 . -1) (undo-tree-id13781 . -1) (undo-tree-id13782 . -1) (undo-tree-id13783 . -1) (undo-tree-id13784 . -1) (undo-tree-id13785 . -1) (undo-tree-id13786 . -1) (undo-tree-id13787 . -1) (undo-tree-id13788 . -1) (undo-tree-id13789 . -1) (undo-tree-id13790 . -1) (undo-tree-id13791 . -1) (undo-tree-id13792 . -1) (undo-tree-id13793 . -1) (undo-tree-id13794 . -1) (undo-tree-id13795 . -1) (undo-tree-id13796 . -1) (undo-tree-id13797 . -1) (undo-tree-id13798 . -1) (undo-tree-id13799 . -1) (undo-tree-id13800 . -1) (undo-tree-id13801 . -1) (undo-tree-id13802 . -1) (undo-tree-id13803 . -1) (undo-tree-id13804 . -1) (undo-tree-id13805 . -1) (undo-tree-id13806 . -1) (undo-tree-id13807 . -1) (undo-tree-id13808 . -1) (undo-tree-id13809 . -1) (undo-tree-id13810 . -1) (undo-tree-id13811 . -1) (undo-tree-id13812 . -1) (undo-tree-id13813 . -1) (undo-tree-id13814 . -1) (undo-tree-id13815 . -1) (undo-tree-id13816 . -1) (undo-tree-id13817 . -1) (undo-tree-id13818 . -1) (undo-tree-id13819 . -1) (undo-tree-id13820 . -1) (undo-tree-id13821 . -1) (undo-tree-id13822 . -1) (undo-tree-id13823 . -1) (undo-tree-id13824 . -1) (undo-tree-id13825 . -1) (undo-tree-id13826 . -1) (undo-tree-id13827 . -1) (undo-tree-id13828 . -1) (undo-tree-id13829 . -1) (undo-tree-id13830 . -1) (undo-tree-id13831 . -1) (undo-tree-id13832 . -1) (undo-tree-id13833 . -1) (undo-tree-id13834 . -1) (undo-tree-id13835 . -1) (undo-tree-id13836 . -1) (undo-tree-id13837 . -1) (undo-tree-id13838 . -1) (undo-tree-id13839 . -1) (undo-tree-id13840 . -1) (undo-tree-id13841 . -1) (undo-tree-id13842 . -1) (undo-tree-id13843 . -1) (undo-tree-id13844 . -1) (undo-tree-id13845 . -1) (undo-tree-id13846 . -1) (undo-tree-id13847 . -1) (undo-tree-id13848 . -1) (undo-tree-id13849 . -1) (undo-tree-id13850 . -1) (undo-tree-id13851 . -1) (undo-tree-id13852 . -1) (undo-tree-id13853 . -1) (undo-tree-id13854 . -1) (undo-tree-id13855 . -1) (undo-tree-id13856 . -1) (undo-tree-id13857 . -1) (undo-tree-id13858 . -1) (undo-tree-id13859 . -1) (undo-tree-id13860 . -1) (undo-tree-id13861 . -1) (undo-tree-id13862 . -1) (undo-tree-id13863 . -1) (undo-tree-id13864 . -1) (undo-tree-id13865 . -1) (undo-tree-id13866 . -1) (undo-tree-id13867 . -1) (undo-tree-id13868 . -1) (undo-tree-id13869 . -1) (undo-tree-id13870 . -1) (undo-tree-id13871 . -1) (undo-tree-id13872 . -1) (undo-tree-id13873 . -1) (undo-tree-id13874 . -1) (undo-tree-id13875 . -1) (undo-tree-id13876 . -1) (undo-tree-id13877 . -1) (undo-tree-id13878 . -1) (undo-tree-id13879 . -1) (undo-tree-id13880 . -1) (undo-tree-id13881 . -1) (undo-tree-id13882 . -1) (undo-tree-id13883 . -1) (undo-tree-id13884 . -1) (undo-tree-id13885 . -1) (undo-tree-id13886 . -1) (undo-tree-id13887 . -1) (undo-tree-id13888 . -1) (undo-tree-id13889 . -1) (undo-tree-id13890 . -1) (undo-tree-id13891 . -1) (undo-tree-id13892 . -1) (undo-tree-id13893 . -1) (undo-tree-id13894 . -1) (undo-tree-id13895 . -1) (undo-tree-id13896 . -1) (undo-tree-id13897 . -1) (undo-tree-id13898 . -1) (#("e" 0 1 (fontified t)) . -1623) (undo-tree-id13899 . -1) (undo-tree-id13900 . -1) (undo-tree-id13901 . -1) (undo-tree-id13902 . -1) (undo-tree-id13903 . -1) (undo-tree-id13904 . -1) (undo-tree-id13905 . -1) (undo-tree-id13906 . -1) (undo-tree-id13907 . -1) (undo-tree-id13908 . -1) (undo-tree-id13909 . -1) (undo-tree-id13910 . -1) (undo-tree-id13911 . -1) (undo-tree-id13912 . -1) (undo-tree-id13913 . -1) (undo-tree-id13914 . -1) (undo-tree-id13915 . -1) (undo-tree-id13916 . -1) (undo-tree-id13917 . -1) (undo-tree-id13918 . -1) (undo-tree-id13919 . -1) (undo-tree-id13920 . -1) (undo-tree-id13921 . -1) (undo-tree-id13922 . -1) (undo-tree-id13923 . -1) (undo-tree-id13924 . -1) (undo-tree-id13925 . -1) (undo-tree-id13926 . -1) (undo-tree-id13927 . -1) (undo-tree-id13928 . -1) (undo-tree-id13929 . -1) (undo-tree-id13930 . -1) (undo-tree-id13931 . -1) (undo-tree-id13932 . -1) (undo-tree-id13933 . -1) (undo-tree-id13934 . -1) (undo-tree-id13935 . -1) (undo-tree-id13936 . -1) (undo-tree-id13937 . -1) (undo-tree-id13938 . -1) (undo-tree-id13939 . -1) (undo-tree-id13940 . -1) (undo-tree-id13941 . -1) (undo-tree-id13942 . -1) (undo-tree-id13943 . -1) (undo-tree-id13944 . -1) (undo-tree-id13945 . -1) (undo-tree-id13946 . -1) (undo-tree-id13947 . -1) (undo-tree-id13948 . -1) (undo-tree-id13949 . -1) (undo-tree-id13950 . -1) (undo-tree-id13951 . -1) (undo-tree-id13952 . -1) (undo-tree-id13953 . -1) (undo-tree-id13954 . -1) (undo-tree-id13955 . -1) (undo-tree-id13956 . -1) (undo-tree-id13957 . -1) (undo-tree-id13958 . -1) (undo-tree-id13959 . -1) (undo-tree-id13960 . -1) (undo-tree-id13961 . -1) (undo-tree-id13962 . -1) (undo-tree-id13963 . -1) (undo-tree-id13964 . -1) (undo-tree-id13965 . -1) (undo-tree-id13966 . -1) (undo-tree-id13967 . -1) (undo-tree-id13968 . -1) (undo-tree-id13969 . -1) (undo-tree-id13970 . -1) (undo-tree-id13971 . -1) (undo-tree-id13972 . -1) (undo-tree-id13973 . -1) (undo-tree-id13974 . -1) (undo-tree-id13975 . -1) (undo-tree-id13976 . -1) (undo-tree-id13977 . -1) (undo-tree-id13978 . -1) (undo-tree-id13979 . -1) (undo-tree-id13980 . -1) (undo-tree-id13981 . -1) (undo-tree-id13982 . -1) (undo-tree-id13983 . -1) (undo-tree-id13984 . -1) (undo-tree-id13985 . -1) (undo-tree-id13986 . -1) (undo-tree-id13987 . -1) (undo-tree-id13988 . -1) (undo-tree-id13989 . -1) (undo-tree-id13990 . -1) (undo-tree-id13991 . -1) (undo-tree-id13992 . -1) (undo-tree-id13993 . -1) (undo-tree-id13994 . -1) (undo-tree-id13995 . -1) (undo-tree-id13996 . -1) (undo-tree-id13997 . -1) (undo-tree-id13998 . -1) (undo-tree-id13999 . -1) (undo-tree-id14000 . -1) (undo-tree-id14001 . -1) (undo-tree-id14002 . -1) (undo-tree-id14003 . -1) (undo-tree-id14004 . -1) (undo-tree-id14005 . -1) (undo-tree-id14006 . -1) (undo-tree-id14007 . -1) (undo-tree-id14008 . -1) (undo-tree-id14009 . -1) (undo-tree-id14010 . -1) (undo-tree-id14011 . -1) (undo-tree-id14012 . -1) (undo-tree-id14013 . -1) (undo-tree-id14014 . -1) (undo-tree-id14015 . -1) (undo-tree-id14016 . -1) (undo-tree-id14017 . -1) (undo-tree-id14018 . -1) (undo-tree-id14019 . -1) (undo-tree-id14020 . -1) (undo-tree-id14021 . -1) (undo-tree-id14022 . -1) (#("f" 0 1 (fontified t)) . -1624) (undo-tree-id14023 . -1) (undo-tree-id14024 . -1) (undo-tree-id14025 . -1) (undo-tree-id14026 . -1) (undo-tree-id14027 . -1) (undo-tree-id14028 . -1) (undo-tree-id14029 . -1) (undo-tree-id14030 . -1) (undo-tree-id14031 . -1) (undo-tree-id14032 . -1) (undo-tree-id14033 . -1) (undo-tree-id14034 . -1) (undo-tree-id14035 . -1) (undo-tree-id14036 . -1) (undo-tree-id14037 . -1) (undo-tree-id14038 . -1) (undo-tree-id14039 . -1) (undo-tree-id14040 . -1) (undo-tree-id14041 . -1) (undo-tree-id14042 . -1) (undo-tree-id14043 . -1) (undo-tree-id14044 . -1) (undo-tree-id14045 . -1) (undo-tree-id14046 . -1) (undo-tree-id14047 . -1) (undo-tree-id14048 . -1) (undo-tree-id14049 . -1) (undo-tree-id14050 . -1) (undo-tree-id14051 . -1) (undo-tree-id14052 . -1) (undo-tree-id14053 . -1) (undo-tree-id14054 . -1) (undo-tree-id14055 . -1) (undo-tree-id14056 . -1) (undo-tree-id14057 . -1) (undo-tree-id14058 . -1) (undo-tree-id14059 . -1) (undo-tree-id14060 . -1) (undo-tree-id14061 . -1) (undo-tree-id14062 . -1) (undo-tree-id14063 . -1) (undo-tree-id14064 . -1) (undo-tree-id14065 . -1) (undo-tree-id14066 . -1) (undo-tree-id14067 . -1) (undo-tree-id14068 . -1) (undo-tree-id14069 . -1) (undo-tree-id14070 . -1) (undo-tree-id14071 . -1) (undo-tree-id14072 . -1) (undo-tree-id14073 . -1) (undo-tree-id14074 . -1) (undo-tree-id14075 . -1) (undo-tree-id14076 . -1) (undo-tree-id14077 . -1) (undo-tree-id14078 . -1) (undo-tree-id14079 . -1) (undo-tree-id14080 . -1) (undo-tree-id14081 . -1) (undo-tree-id14082 . -1) (undo-tree-id14083 . -1) (undo-tree-id14084 . -1) (undo-tree-id14085 . -1) (undo-tree-id14086 . -1) (undo-tree-id14087 . -1) (undo-tree-id14088 . -1) (undo-tree-id14089 . -1) (undo-tree-id14090 . -1) (undo-tree-id14091 . -1) (undo-tree-id14092 . -1) (undo-tree-id14093 . -1) (undo-tree-id14094 . -1) (undo-tree-id14095 . -1) (undo-tree-id14096 . -1) (undo-tree-id14097 . -1) (undo-tree-id14098 . -1) (undo-tree-id14099 . -1) (undo-tree-id14100 . -1) (undo-tree-id14101 . -1) (undo-tree-id14102 . -1) (undo-tree-id14103 . -1) (undo-tree-id14104 . -1) (undo-tree-id14105 . -1) (undo-tree-id14106 . -1) (undo-tree-id14107 . -1) (undo-tree-id14108 . -1) (undo-tree-id14109 . -1) (undo-tree-id14110 . -1) (undo-tree-id14111 . -1) (undo-tree-id14112 . -1) (undo-tree-id14113 . -1) (undo-tree-id14114 . -1) (undo-tree-id14115 . -1) (undo-tree-id14116 . -1) (undo-tree-id14117 . -1) (undo-tree-id14118 . -1) (undo-tree-id14119 . -1) (undo-tree-id14120 . -1) (undo-tree-id14121 . -1) (undo-tree-id14122 . -1) (undo-tree-id14123 . -1) (undo-tree-id14124 . -1) (undo-tree-id14125 . -1) (undo-tree-id14126 . -1) (undo-tree-id14127 . -1) (undo-tree-id14128 . -1) (undo-tree-id14129 . -1) (undo-tree-id14130 . -1) (undo-tree-id14131 . -1) (undo-tree-id14132 . -1) (undo-tree-id14133 . -1) (undo-tree-id14134 . -1) (undo-tree-id14135 . -1) (undo-tree-id14136 . -1) (undo-tree-id14137 . -1) (undo-tree-id14138 . -1) (undo-tree-id14139 . -1) (undo-tree-id14140 . -1) (undo-tree-id14141 . -1) (#("(" 0 1 (fontified t)) . -1625) (undo-tree-id14142 . -1) (undo-tree-id14143 . -1) (undo-tree-id14144 . -1) (undo-tree-id14145 . -1) (undo-tree-id14146 . -1) (undo-tree-id14147 . -1) (undo-tree-id14148 . -1) (undo-tree-id14149 . -1) (undo-tree-id14150 . -1) (undo-tree-id14151 . -1) (undo-tree-id14152 . -1) (undo-tree-id14153 . -1) (undo-tree-id14154 . -1) (undo-tree-id14155 . -1) (undo-tree-id14156 . -1) (undo-tree-id14157 . -1) (undo-tree-id14158 . -1) (undo-tree-id14159 . -1) (undo-tree-id14160 . -1) (undo-tree-id14161 . -1) (undo-tree-id14162 . -1) (undo-tree-id14163 . -1) (undo-tree-id14164 . -1) (undo-tree-id14165 . -1) (undo-tree-id14166 . -1) (undo-tree-id14167 . -1) (undo-tree-id14168 . -1) (undo-tree-id14169 . -1) (undo-tree-id14170 . -1) (undo-tree-id14171 . -1) (undo-tree-id14172 . -1) (undo-tree-id14173 . -1) (undo-tree-id14174 . -1) (undo-tree-id14175 . -1) (undo-tree-id14176 . -1) (undo-tree-id14177 . -1) (undo-tree-id14178 . -1) (undo-tree-id14179 . -1) (undo-tree-id14180 . -1) (undo-tree-id14181 . -1) (undo-tree-id14182 . -1) (undo-tree-id14183 . -1) (undo-tree-id14184 . -1) (undo-tree-id14185 . -1) (undo-tree-id14186 . -1) (undo-tree-id14187 . -1) (undo-tree-id14188 . -1) (undo-tree-id14189 . -1) (undo-tree-id14190 . -1) (undo-tree-id14191 . -1) (undo-tree-id14192 . -1) (undo-tree-id14193 . -1) (undo-tree-id14194 . -1) (undo-tree-id14195 . -1) (undo-tree-id14196 . -1) (undo-tree-id14197 . -1) (undo-tree-id14198 . -1) (undo-tree-id14199 . -1) (undo-tree-id14200 . -1) (undo-tree-id14201 . -1) (undo-tree-id14202 . -1) (undo-tree-id14203 . -1) (undo-tree-id14204 . -1) (undo-tree-id14205 . -1) (undo-tree-id14206 . -1) (undo-tree-id14207 . -1) (undo-tree-id14208 . -1) (undo-tree-id14209 . -1) (undo-tree-id14210 . -1) (undo-tree-id14211 . -1) (undo-tree-id14212 . -1) (undo-tree-id14213 . -1) (undo-tree-id14214 . -1) (undo-tree-id14215 . -1) (undo-tree-id14216 . -1) (undo-tree-id14217 . -1) (undo-tree-id14218 . -1) (undo-tree-id14219 . -1) (undo-tree-id14220 . -1) (undo-tree-id14221 . -1) (undo-tree-id14222 . -1) (undo-tree-id14223 . -1) (undo-tree-id14224 . -1) (undo-tree-id14225 . -1) (undo-tree-id14226 . -1) (undo-tree-id14227 . -1) (undo-tree-id14228 . -1) (undo-tree-id14229 . -1) (undo-tree-id14230 . -1) (undo-tree-id14231 . -1) (undo-tree-id14232 . -1) (undo-tree-id14233 . -1) (undo-tree-id14234 . -1) (undo-tree-id14235 . -1) (undo-tree-id14236 . -1) (undo-tree-id14237 . -1) (undo-tree-id14238 . -1) (undo-tree-id14239 . -1) (undo-tree-id14240 . -1) (undo-tree-id14241 . -1) (undo-tree-id14242 . -1) (undo-tree-id14243 . -1) (undo-tree-id14244 . -1) (undo-tree-id14245 . -1) (undo-tree-id14246 . -1) (undo-tree-id14247 . -1) (undo-tree-id14248 . -1) (undo-tree-id14249 . -1) (undo-tree-id14250 . -1) (undo-tree-id14251 . -1) (undo-tree-id14252 . -1) (undo-tree-id14253 . -1) (undo-tree-id14254 . -1) (undo-tree-id14255 . -1) (undo-tree-id14256 . -1) (undo-tree-id14257 . -1) (undo-tree-id14258 . -1) (undo-tree-id14259 . -1) (#(")" 0 1 (fontified t)) . -1626) (undo-tree-id14260 . -1) (undo-tree-id14261 . -1) (undo-tree-id14262 . -1) (undo-tree-id14263 . -1) (undo-tree-id14264 . -1) (undo-tree-id14265 . -1) (undo-tree-id14266 . -1) (undo-tree-id14267 . -1) (undo-tree-id14268 . -1) (undo-tree-id14269 . -1) (undo-tree-id14270 . -1) (undo-tree-id14271 . -1) (undo-tree-id14272 . -1) (undo-tree-id14273 . -1) (undo-tree-id14274 . -1) (undo-tree-id14275 . -1) (undo-tree-id14276 . -1) (undo-tree-id14277 . -1) (undo-tree-id14278 . -1) (undo-tree-id14279 . -1) (undo-tree-id14280 . -1) (undo-tree-id14281 . -1) (undo-tree-id14282 . -1) (undo-tree-id14283 . -1) (undo-tree-id14284 . -1) (undo-tree-id14285 . -1) (undo-tree-id14286 . -1) (undo-tree-id14287 . -1) (undo-tree-id14288 . -1) (undo-tree-id14289 . -1) (undo-tree-id14290 . -1) (undo-tree-id14291 . -1) (undo-tree-id14292 . -1) (undo-tree-id14293 . -1) (undo-tree-id14294 . -1) (undo-tree-id14295 . -1) (undo-tree-id14296 . -1) (undo-tree-id14297 . -1) (undo-tree-id14298 . -1) (undo-tree-id14299 . -1) (undo-tree-id14300 . -1) (undo-tree-id14301 . -1) (undo-tree-id14302 . -1) (undo-tree-id14303 . -1) (undo-tree-id14304 . -1) (undo-tree-id14305 . -1) (undo-tree-id14306 . -1) (undo-tree-id14307 . -1) (undo-tree-id14308 . -1) (undo-tree-id14309 . -1) (undo-tree-id14310 . -1) (undo-tree-id14311 . -1) (undo-tree-id14312 . -1) (undo-tree-id14313 . -1) (undo-tree-id14314 . -1) (undo-tree-id14315 . -1) (undo-tree-id14316 . -1) (undo-tree-id14317 . -1) (undo-tree-id14318 . -1) (undo-tree-id14319 . -1) (undo-tree-id14320 . -1) (undo-tree-id14321 . -1) (undo-tree-id14322 . -1) (undo-tree-id14323 . -1) (undo-tree-id14324 . -1) (undo-tree-id14325 . -1) (undo-tree-id14326 . -1) (undo-tree-id14327 . -1) (undo-tree-id14328 . -1) (undo-tree-id14329 . -1) (undo-tree-id14330 . -1) (undo-tree-id14331 . -1) (undo-tree-id14332 . -1) (undo-tree-id14333 . -1) (undo-tree-id14334 . -1) (undo-tree-id14335 . -1) (undo-tree-id14336 . -1) (undo-tree-id14337 . -1) (undo-tree-id14338 . -1) (undo-tree-id14339 . -1) (undo-tree-id14340 . -1) (undo-tree-id14341 . -1) (undo-tree-id14342 . -1) (undo-tree-id14343 . -1) (undo-tree-id14344 . -1) (undo-tree-id14345 . -1) (undo-tree-id14346 . -1) (undo-tree-id14347 . -1) (undo-tree-id14348 . -1) (undo-tree-id14349 . -1) (undo-tree-id14350 . -1) (undo-tree-id14351 . -1) (undo-tree-id14352 . -1) (undo-tree-id14353 . -1) (undo-tree-id14354 . -1) (undo-tree-id14355 . -1) (undo-tree-id14356 . -1) (undo-tree-id14357 . -1) (undo-tree-id14358 . -1) (undo-tree-id14359 . -1) (undo-tree-id14360 . -1) (undo-tree-id14361 . -1) (undo-tree-id14362 . -1) (undo-tree-id14363 . -1) 1627 (t 25944 35721 985133 728000)) nil (25944 35736 440608 0) 0 nil] [nil nil ((1627 . 1629)) ((#("
	" 0 2 (fontified t)) . 1627)) (25944 35717 396137 0) 0 nil])
([nil nil ((1619 . 1620)) nil (25944 35736 439674 0) 0 nil])
([nil nil ((#("::ops" 0 2 (fontified t) 2 5 (face font-lock-constant-face fontified t)) . -8) (undo-tree-id13352 . -5) 13 (15 . 21) (18 . 26)) ((#(", Deref}" 0 8 (fontified nil)) . 18) (#("ops::{" 0 6 (fontified nil)) . 15) (8 . 13)) (25944 35717 395639 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1619) (undo-tree-id13383 . -1) (undo-tree-id13384 . -1) 1620) nil (25944 35736 439670 0) 0 nil])
nil
([nil nil ((#("canvas" 0 6 (fontified t)) . -1613) (undo-tree-id14422 . -3) (undo-tree-id14423 . -3) (undo-tree-id14424 . -6) (undo-tree-id14425 . -6) (undo-tree-id14426 . -6) (undo-tree-id14427 . -6) (undo-tree-id14428 . -6) (undo-tree-id14429 . -6) (undo-tree-id14430 . -6) (undo-tree-id14431 . -6) (undo-tree-id14432 . -6) (undo-tree-id14433 . -6) (undo-tree-id14434 . -6) (undo-tree-id14435 . -6) (undo-tree-id14436 . -6) (undo-tree-id14437 . -6) (undo-tree-id14438 . -6) (undo-tree-id14439 . -6) (undo-tree-id14440 . -6) (undo-tree-id14441 . -6) (undo-tree-id14442 . -6) (undo-tree-id14443 . -6) (undo-tree-id14444 . -6) (undo-tree-id14445 . -6) (undo-tree-id14446 . -6) (undo-tree-id14447 . -6) (undo-tree-id14448 . -6) (undo-tree-id14449 . -6) (undo-tree-id14450 . -6) (undo-tree-id14451 . -6) (undo-tree-id14452 . -6) (undo-tree-id14453 . -6) (undo-tree-id14454 . -6) (undo-tree-id14455 . -6) (undo-tree-id14456 . -6) (undo-tree-id14457 . -6) (undo-tree-id14458 . -6) (undo-tree-id14459 . -6) (undo-tree-id14460 . -6) (undo-tree-id14461 . -6) (undo-tree-id14462 . -6) (undo-tree-id14463 . -6) (undo-tree-id14464 . -6) (undo-tree-id14465 . -6) (undo-tree-id14466 . -6) (undo-tree-id14467 . -6) (undo-tree-id14468 . -6) (undo-tree-id14469 . -6) (undo-tree-id14470 . -6) (undo-tree-id14471 . -6) (undo-tree-id14472 . -6) (undo-tree-id14473 . -6) (undo-tree-id14474 . -6) (undo-tree-id14475 . -6) (undo-tree-id14476 . -6) (undo-tree-id14477 . -6) (undo-tree-id14478 . -6) (undo-tree-id14479 . -6) (undo-tree-id14480 . -6) (undo-tree-id14481 . -6) (undo-tree-id14482 . -6) (undo-tree-id14483 . -6) (undo-tree-id14484 . -6) (undo-tree-id14485 . -6) (undo-tree-id14486 . -6) (undo-tree-id14487 . -6) (undo-tree-id14488 . -6) (undo-tree-id14489 . -6) (undo-tree-id14490 . -6) (undo-tree-id14491 . -6) (undo-tree-id14492 . -6) (undo-tree-id14493 . -6) (undo-tree-id14494 . -6) (undo-tree-id14495 . -6) (undo-tree-id14496 . -6) (undo-tree-id14497 . -6) (undo-tree-id14498 . -6) (undo-tree-id14499 . -6) (undo-tree-id14500 . -6) (undo-tree-id14501 . -6) (undo-tree-id14502 . -6) (undo-tree-id14503 . -6) (undo-tree-id14504 . -6) (undo-tree-id14505 . -6) (undo-tree-id14506 . -6) (undo-tree-id14507 . -6) (undo-tree-id14508 . -6) (undo-tree-id14509 . -6) (undo-tree-id14510 . -6) (undo-tree-id14511 . -6) (undo-tree-id14512 . -6) (undo-tree-id14513 . -6) (undo-tree-id14514 . -6) (undo-tree-id14515 . -6) (undo-tree-id14516 . -6) (undo-tree-id14517 . -6) (undo-tree-id14518 . -6) (undo-tree-id14519 . -6) (undo-tree-id14520 . -6) (undo-tree-id14521 . -6) (undo-tree-id14522 . -6) (undo-tree-id14523 . -6) (undo-tree-id14524 . -6) (undo-tree-id14525 . -6) (undo-tree-id14526 . -6) (undo-tree-id14527 . -6) (undo-tree-id14528 . -6) (undo-tree-id14529 . -6) (undo-tree-id14530 . -6) (undo-tree-id14531 . -6) (undo-tree-id14532 . -6) (undo-tree-id14533 . -6) (undo-tree-id14534 . -6) (undo-tree-id14535 . -6) (undo-tree-id14536 . -6) (undo-tree-id14537 . -6) (undo-tree-id14538 . -6) (undo-tree-id14539 . -6) (undo-tree-id14540 . -6) (undo-tree-id14541 . -6) (undo-tree-id14542 . -6) (undo-tree-id14543 . -6) (undo-tree-id14544 . -6) (undo-tree-id14545 . -6) (undo-tree-id14546 . -6) (undo-tree-id14547 . -6) (undo-tree-id14548 . -6) (undo-tree-id14549 . -6) (undo-tree-id14550 . -6) (undo-tree-id14551 . -6) (undo-tree-id14552 . -6) (undo-tree-id14553 . -6) (undo-tree-id14554 . -6) (undo-tree-id14555 . -6) (undo-tree-id14556 . -6) (undo-tree-id14557 . -6) (undo-tree-id14558 . -6) (undo-tree-id14559 . -6) (undo-tree-id14560 . -6) (undo-tree-id14561 . -6) (undo-tree-id14562 . -6) (undo-tree-id14563 . -6) (undo-tree-id14564 . -6) (undo-tree-id14565 . -6) (undo-tree-id14566 . -6) (undo-tree-id14567 . -6) (undo-tree-id14568 . -6) (undo-tree-id14569 . -6) (undo-tree-id14570 . -6) (undo-tree-id14571 . -6) (undo-tree-id14572 . -6) (undo-tree-id14573 . -6) (undo-tree-id14574 . -6) (undo-tree-id14575 . -6) (undo-tree-id14576 . -6) (undo-tree-id14577 . -6) (undo-tree-id14578 . -6) (undo-tree-id14579 . -6) (undo-tree-id14580 . -6) (undo-tree-id14581 . -6) (undo-tree-id14582 . -6) (undo-tree-id14583 . -6) (undo-tree-id14584 . -6) (undo-tree-id14585 . -6) (undo-tree-id14586 . -6) (undo-tree-id14587 . -6) (undo-tree-id14588 . -6) (undo-tree-id14589 . -6) (undo-tree-id14590 . -6) (undo-tree-id14591 . -6) (undo-tree-id14592 . -6) (undo-tree-id14593 . -6) (undo-tree-id14594 . -6) (undo-tree-id14595 . -6) (undo-tree-id14596 . -6) (undo-tree-id14597 . -6) (undo-tree-id14598 . -6) (undo-tree-id14599 . -6) (undo-tree-id14600 . -6) (undo-tree-id14601 . -6) (undo-tree-id14602 . -6) (undo-tree-id14603 . -6) (undo-tree-id14604 . -6) (undo-tree-id14605 . -6) (undo-tree-id14606 . -6) (undo-tree-id14607 . -6) (undo-tree-id14608 . -6) (undo-tree-id14609 . -6) (undo-tree-id14610 . -6) (undo-tree-id14611 . -6) (undo-tree-id14612 . -6) (undo-tree-id14613 . -6) (undo-tree-id14614 . -6) (undo-tree-id14615 . -6) (undo-tree-id14616 . -6) (undo-tree-id14617 . -6) (undo-tree-id14618 . -6) (undo-tree-id14619 . -6) (undo-tree-id14620 . -6) (undo-tree-id14621 . -6) (undo-tree-id14622 . -6) (undo-tree-id14623 . -6) (undo-tree-id14624 . -6) (undo-tree-id14625 . -6) (undo-tree-id14626 . -6) (undo-tree-id14627 . -6) (undo-tree-id14628 . -6) (undo-tree-id14629 . -6) (undo-tree-id14630 . -6) (undo-tree-id14631 . -6) (undo-tree-id14632 . -6) (undo-tree-id14633 . -6) (undo-tree-id14634 . -6) (undo-tree-id14635 . -6) (undo-tree-id14636 . -6) (undo-tree-id14637 . -6) (undo-tree-id14638 . -6) (undo-tree-id14639 . -6) (undo-tree-id14640 . -6) (undo-tree-id14641 . -6) (undo-tree-id14642 . -6) (undo-tree-id14643 . -6) (undo-tree-id14644 . -6) (undo-tree-id14645 . -6) (undo-tree-id14646 . -6) (undo-tree-id14647 . -6) (undo-tree-id14648 . -6) (undo-tree-id14649 . -6) (undo-tree-id14650 . -6) (undo-tree-id14651 . -6) (undo-tree-id14652 . -6) (undo-tree-id14653 . -6) (undo-tree-id14654 . -5) (undo-tree-id14655 . -5) (undo-tree-id14656 . -5) (undo-tree-id14657 . -5) (undo-tree-id14658 . -5) (undo-tree-id14659 . -5) (undo-tree-id14660 . -5) (undo-tree-id14661 . -5) (undo-tree-id14662 . -5) (undo-tree-id14663 . -5) (undo-tree-id14664 . -5) (undo-tree-id14665 . -5) (undo-tree-id14666 . -5) (undo-tree-id14667 . -5) (undo-tree-id14668 . -5) (undo-tree-id14669 . -5) (undo-tree-id14670 . -5) (undo-tree-id14671 . -5) (undo-tree-id14672 . -5) (undo-tree-id14673 . -5) (undo-tree-id14674 . -5) (undo-tree-id14675 . -5) (undo-tree-id14676 . -6) (undo-tree-id14677 . -6) (undo-tree-id14678 . -6) (undo-tree-id14679 . -6) (undo-tree-id14680 . -6) 1619 (t 25944 35736 473383 908000)) nil (25944 35863 251909 0) 0 nil])
([nil nil ((1613 . 1616)) nil (25944 35863 251653 0) 0 nil])
([nil nil ((1613 . 1623) (#("can" 0 3 (fontified nil)) . 1613) (1613 . 1616) (#("canvas_ref" 0 10 (fontified nil)) . -1613) (1613 . 1623) (#("can" 0 3 (fontified t)) . -1613) (undo-tree-id14407 . -3) (undo-tree-id14408 . -3) (undo-tree-id14409 . -1) (undo-tree-id14410 . -1) (undo-tree-id14411 . -2) (undo-tree-id14412 . -2) (undo-tree-id14413 . -3) (undo-tree-id14414 . -3) (undo-tree-id14415 . -3) (undo-tree-id14416 . -3) (undo-tree-id14417 . -3) (undo-tree-id14418 . -3) (undo-tree-id14419 . -3) (undo-tree-id14420 . -3) (undo-tree-id14421 . -3) 1616) nil (25944 35863 251651 0) 0 nil])
([nil nil ((1623 . 1625)) nil (25944 35863 251632 0) 0 nil])
([nil nil ((1625 . 1626)) nil (25944 35863 251631 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1624) (undo-tree-id14382 . -1) (undo-tree-id14383 . -1) (undo-tree-id14384 . -1) (undo-tree-id14385 . -1) (undo-tree-id14386 . -1) (undo-tree-id14387 . -1) (undo-tree-id14388 . -1) (undo-tree-id14389 . -1) (undo-tree-id14390 . -1) (undo-tree-id14391 . -1) (undo-tree-id14392 . -1) (undo-tree-id14393 . -1) (undo-tree-id14394 . -1) (undo-tree-id14395 . -1) (undo-tree-id14396 . -1) (undo-tree-id14397 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -1625) (undo-tree-id14398 . -1) (undo-tree-id14399 . -1) (undo-tree-id14400 . -1) (undo-tree-id14401 . -1) (undo-tree-id14402 . -1) (undo-tree-id14403 . -1) (undo-tree-id14404 . -1) (undo-tree-id14405 . -1) (undo-tree-id14406 . -1) 1626) nil (25944 35863 251629 0) 0 nil])
([nil nil ((1624 . 1625)) nil (25944 35863 251602 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1624 1629 #s(yas--snippet nil nil #s(yas--exit 1629 nil) 65 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1629 nil) 65 nil nil nil nil)) (1624 . 1629) (#("get()$0" 0 7 (fontified nil)) . 1624) (1624 . 1631) (#("g" 0 1 (fontified nil)) . 1624) (1624 . 1625) (#("get()" 0 5 (fontified nil)) . -1624) (1624 . 1629) (#("g" 0 1 (fontified t)) . -1624) (undo-tree-id14378 . -1) (undo-tree-id14379 . -1) (undo-tree-id14380 . -1) (undo-tree-id14381 . -1) 1625) nil (25944 35863 251600 0) 0 nil])
([nil nil ((1629 . 1632)) nil (25944 35863 251592 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1630 1644 #s(yas--snippet nil nil #s(yas--exit 1644 nil) 66 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1644 nil) 66 nil nil nil nil)) (1630 . 1644) (#("as_deref_mut()$0" 0 16 (fontified nil)) . 1630) (1630 . 1646) (#("de" 0 2 (fontified nil)) . 1630) (1630 . 1632) (#("as_deref_mut()" 0 14 (fontified nil)) . -1630) (1630 . 1644) (#("de" 0 2 (fontified t)) . -1630) (undo-tree-id14369 . -2) (undo-tree-id14370 . -1) (undo-tree-id14371 . -1) (undo-tree-id14372 . -1) (undo-tree-id14373 . -1) (undo-tree-id14374 . -2) (undo-tree-id14375 . -2) (undo-tree-id14376 . -2) (undo-tree-id14377 . -2) 1632) nil (25944 35863 251590 0) 0 nil])
([nil nil ((1644 . 1646)) nil (25944 35863 251577 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1645 1653 #s(yas--snippet nil nil #s(yas--exit 1653 nil) 67 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1653 nil) 67 nil nil nil nil)) (1645 . 1653) (#("unwrap()$0" 0 10 (fontified nil)) . 1645) (1645 . 1655) (#("u" 0 1 (fontified nil)) . 1645) (1645 . 1646) (#("unwrap()" 0 8 (fontified nil)) . -1645) (1645 . 1653) (#("u" 0 1 (fontified t)) . -1645) (undo-tree-id14364 . -1) (undo-tree-id14365 . -1) (undo-tree-id14366 . -1) (undo-tree-id14367 . -1) (undo-tree-id14368 . -1) 1646) nil (25944 35863 251573 0) 0 nil])
([nil nil ((1613 . 1614) (t 25944 35863 285134 106000)) nil (25944 35868 925670 0) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -1613) (undo-tree-id14681 . -1) (undo-tree-id14682 . -1) (undo-tree-id14683 . -1) (undo-tree-id14684 . -1) (undo-tree-id14685 . -1) (undo-tree-id14686 . -1) (undo-tree-id14687 . -1) (undo-tree-id14688 . -1) (undo-tree-id14689 . -1) (undo-tree-id14690 . -1) (undo-tree-id14691 . -1) (undo-tree-id14692 . -1) (undo-tree-id14693 . -1) (undo-tree-id14694 . -1) (undo-tree-id14695 . -1) (undo-tree-id14696 . -1) (undo-tree-id14697 . -1) (undo-tree-id14698 . -1) (undo-tree-id14699 . -1) (undo-tree-id14700 . -1) (undo-tree-id14701 . -1) (undo-tree-id14702 . -1) (undo-tree-id14703 . -1) (undo-tree-id14704 . -1) (undo-tree-id14705 . -1) (undo-tree-id14706 . -1) (undo-tree-id14707 . -1) (undo-tree-id14708 . -1) (undo-tree-id14709 . -1) (undo-tree-id14710 . -1) (undo-tree-id14711 . -1) (undo-tree-id14712 . -1) (undo-tree-id14713 . -1) (undo-tree-id14714 . -1) (undo-tree-id14715 . -1) 1614 (t 25944 35868 958884 25000)) nil (25944 35876 993118 0) 0 nil])
([nil nil ((1630 . 1631)) nil (25944 35876 993070 0) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -1630) (undo-tree-id14716 . -1) (undo-tree-id14717 . -1) (undo-tree-id14718 . -1) (undo-tree-id14719 . -1) (undo-tree-id14720 . -1) (undo-tree-id14721 . -1) (undo-tree-id14722 . -1) (undo-tree-id14723 . -1) (undo-tree-id14724 . -1) (undo-tree-id14725 . -1) (undo-tree-id14726 . -1) (undo-tree-id14727 . -1) (undo-tree-id14728 . -1) (undo-tree-id14729 . -1) (undo-tree-id14730 . -1) (undo-tree-id14731 . -1) (undo-tree-id14732 . -1) (undo-tree-id14733 . -1) (undo-tree-id14734 . -1) (undo-tree-id14735 . -1) (undo-tree-id14736 . -1) (undo-tree-id14737 . -1) (undo-tree-id14738 . -1) (undo-tree-id14739 . -1) (undo-tree-id14740 . -1) (undo-tree-id14741 . -1) (undo-tree-id14742 . -1) (undo-tree-id14743 . -1) (undo-tree-id14744 . -1) (undo-tree-id14745 . -1) (undo-tree-id14746 . -1) (undo-tree-id14747 . -1) (undo-tree-id14748 . -1) (undo-tree-id14749 . -1) (undo-tree-id14750 . -1) (undo-tree-id14751 . -1) (undo-tree-id14752 . -1) (undo-tree-id14753 . -1) (undo-tree-id14754 . -1) (undo-tree-id14755 . -1) (undo-tree-id14756 . -1) (undo-tree-id14757 . -1) (undo-tree-id14758 . -1) (undo-tree-id14759 . -1) (undo-tree-id14760 . -1) (undo-tree-id14761 . -1) (undo-tree-id14762 . -1) (undo-tree-id14763 . -1) (undo-tree-id14764 . -1) (undo-tree-id14765 . -1) 1631 (t 25944 35877 26476 664000)) nil (25944 35879 82387 0) 0 nil])
([nil nil ((1653 . 1654) (t 25944 35879 116962 622000)) nil (25944 35890 991685 0) 0 nil])
([nil nil ((1654 . 1655)) nil (25944 35890 991684 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -1654) (undo-tree-id14823 . -1) (undo-tree-id14824 . -1) (undo-tree-id14825 . -1) (undo-tree-id14826 . -1) (undo-tree-id14827 . -1) 1655) nil (25944 35890 991683 0) 0 nil])
([nil nil ((1654 . 1658)) nil (25944 35890 991673 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1654) (undo-tree-id14773 . -1) (undo-tree-id14774 . -1) (undo-tree-id14775 . -1) (undo-tree-id14776 . -1) (undo-tree-id14777 . -1) (undo-tree-id14778 . -1) (undo-tree-id14779 . -1) (undo-tree-id14780 . -1) (undo-tree-id14781 . -1) (undo-tree-id14782 . -1) (undo-tree-id14783 . -1) (undo-tree-id14784 . -1) (undo-tree-id14785 . -1) (undo-tree-id14786 . -1) (undo-tree-id14787 . -1) (undo-tree-id14788 . -1) (undo-tree-id14789 . -1) (undo-tree-id14790 . -1) (undo-tree-id14791 . -1) (undo-tree-id14792 . -1) (undo-tree-id14793 . -1) (#("a" 0 1 (fontified t)) . -1655) (undo-tree-id14794 . -1) (undo-tree-id14795 . -1) (undo-tree-id14796 . -1) (undo-tree-id14797 . -1) (undo-tree-id14798 . -1) (undo-tree-id14799 . -1) (undo-tree-id14800 . -1) (undo-tree-id14801 . -1) (undo-tree-id14802 . -1) (undo-tree-id14803 . -1) (undo-tree-id14804 . -1) (undo-tree-id14805 . -1) (undo-tree-id14806 . -1) (undo-tree-id14807 . -1) (undo-tree-id14808 . -1) (#("k" 0 1 (fontified t)) . -1656) (undo-tree-id14809 . -1) (undo-tree-id14810 . -1) (undo-tree-id14811 . -1) (undo-tree-id14812 . -1) (undo-tree-id14813 . -1) (undo-tree-id14814 . -1) (undo-tree-id14815 . -1) (undo-tree-id14816 . -1) (undo-tree-id14817 . -1) (#("e" 0 1 (fontified t)) . -1657) (undo-tree-id14818 . -1) (undo-tree-id14819 . -1) (undo-tree-id14820 . -1) (undo-tree-id14821 . -1) (undo-tree-id14822 . -1) 1658) nil (25944 35890 991669 0) 0 nil])
([nil nil ((1654 . 1656)) nil (25944 35890 991616 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1654 1664 #s(yas--snippet nil nil #s(yas--exit 1664 nil) 68 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1664 nil) 68 nil nil nil nil)) (1654 . 1664) (#("to_owned()$0" 0 12 (fontified nil)) . 1654) (1654 . 1666) (#("to" 0 2 (fontified nil)) . 1654) (1654 . 1656) (#("to_owned() (as ToOwned)" 0 23 (fontified nil)) . -1654) (1654 . 1677) (#("to" 0 2 (fontified t)) . -1654) (undo-tree-id14766 . -2) (undo-tree-id14767 . -1) (undo-tree-id14768 . -1) (undo-tree-id14769 . -2) (undo-tree-id14770 . -2) (undo-tree-id14771 . -2) (undo-tree-id14772 . -2) 1656) nil (25944 35890 991611 0) 0 nil])
([nil nil ((#("owned()" 0 7 (fontified t)) . -1657) (undo-tree-id15024 . -7) (undo-tree-id15025 . -7) (undo-tree-id15026 . -7) (undo-tree-id15027 . -7) (undo-tree-id15028 . -7) (undo-tree-id15029 . -7) (undo-tree-id15030 . -7) (undo-tree-id15031 . -7) (undo-tree-id15032 . -7) (undo-tree-id15033 . -7) (undo-tree-id15034 . -7) (undo-tree-id15035 . -7) (undo-tree-id15036 . -7) (undo-tree-id15037 . -7) (undo-tree-id15038 . -7) (undo-tree-id15039 . -7) (undo-tree-id15040 . -7) (undo-tree-id15041 . -7) (undo-tree-id15042 . -7) (undo-tree-id15043 . -7) (undo-tree-id15044 . -7) (undo-tree-id15045 . -7) (undo-tree-id15046 . -7) (undo-tree-id15047 . -7) (undo-tree-id15048 . -7) (undo-tree-id15049 . -7) (undo-tree-id15050 . -7) (undo-tree-id15051 . -7) (undo-tree-id15052 . -7) (undo-tree-id15053 . -7) (undo-tree-id15054 . -7) (undo-tree-id15055 . -7) (undo-tree-id15056 . -7) (undo-tree-id15057 . -7) (undo-tree-id15058 . -7) (undo-tree-id15059 . -7) (undo-tree-id15060 . -7) (undo-tree-id15061 . -7) 1664 (t 25944 35891 25092 195000)) nil (25944 35902 56852 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1653) (undo-tree-id14828 . -1) (undo-tree-id14829 . -1) (undo-tree-id14830 . -1) (undo-tree-id14831 . -1) (undo-tree-id14832 . -1) (undo-tree-id14833 . -1) (undo-tree-id14834 . -1) (undo-tree-id14835 . -1) (undo-tree-id14836 . -1) (undo-tree-id14837 . -1) (undo-tree-id14838 . -1) (undo-tree-id14839 . -1) (undo-tree-id14840 . -1) (undo-tree-id14841 . -1) (undo-tree-id14842 . -1) (undo-tree-id14843 . -1) (undo-tree-id14844 . -1) (undo-tree-id14845 . -1) (undo-tree-id14846 . -1) (undo-tree-id14847 . -1) (undo-tree-id14848 . -1) (undo-tree-id14849 . -1) (undo-tree-id14850 . -1) (undo-tree-id14851 . -1) (undo-tree-id14852 . -1) (undo-tree-id14853 . -1) (undo-tree-id14854 . -1) (undo-tree-id14855 . -1) (undo-tree-id14856 . -1) (undo-tree-id14857 . -1) (undo-tree-id14858 . -1) (undo-tree-id14859 . -1) (undo-tree-id14860 . -1) (undo-tree-id14861 . -1) (undo-tree-id14862 . -1) (undo-tree-id14863 . -1) (undo-tree-id14864 . -1) (undo-tree-id14865 . -1) (undo-tree-id14866 . -1) (undo-tree-id14867 . -1) (undo-tree-id14868 . -1) (undo-tree-id14869 . -1) (undo-tree-id14870 . -1) (undo-tree-id14871 . -1) (undo-tree-id14872 . -1) (undo-tree-id14873 . -1) (undo-tree-id14874 . -1) (undo-tree-id14875 . -1) (undo-tree-id14876 . -1) (undo-tree-id14877 . -1) (undo-tree-id14878 . -1) (undo-tree-id14879 . -1) (undo-tree-id14880 . -1) (undo-tree-id14881 . -1) (undo-tree-id14882 . -1) (undo-tree-id14883 . -1) (undo-tree-id14884 . -1) (undo-tree-id14885 . -1) (undo-tree-id14886 . -1) (undo-tree-id14887 . -1) (undo-tree-id14888 . -1) (undo-tree-id14889 . -1) (undo-tree-id14890 . -1) (undo-tree-id14891 . -1) (undo-tree-id14892 . -1) (undo-tree-id14893 . -1) (undo-tree-id14894 . -1) (undo-tree-id14895 . -1) (undo-tree-id14896 . -1) (undo-tree-id14897 . -1) (undo-tree-id14898 . -1) (undo-tree-id14899 . -1) (undo-tree-id14900 . -1) (undo-tree-id14901 . -1) (undo-tree-id14902 . -1) (undo-tree-id14903 . -1) (#("t" 0 1 (fontified t)) . -1654) (undo-tree-id14904 . -1) (undo-tree-id14905 . -1) (undo-tree-id14906 . -1) (undo-tree-id14907 . -1) (undo-tree-id14908 . -1) (undo-tree-id14909 . -1) (undo-tree-id14910 . -1) (undo-tree-id14911 . -1) (undo-tree-id14912 . -1) (undo-tree-id14913 . -1) (undo-tree-id14914 . -1) (undo-tree-id14915 . -1) (undo-tree-id14916 . -1) (undo-tree-id14917 . -1) (undo-tree-id14918 . -1) (undo-tree-id14919 . -1) (undo-tree-id14920 . -1) (undo-tree-id14921 . -1) (undo-tree-id14922 . -1) (undo-tree-id14923 . -1) (undo-tree-id14924 . -1) (undo-tree-id14925 . -1) (undo-tree-id14926 . -1) (undo-tree-id14927 . -1) (undo-tree-id14928 . -1) (undo-tree-id14929 . -1) (undo-tree-id14930 . -1) (undo-tree-id14931 . -1) (undo-tree-id14932 . -1) (undo-tree-id14933 . -1) (undo-tree-id14934 . -1) (undo-tree-id14935 . -1) (undo-tree-id14936 . -1) (undo-tree-id14937 . -1) (undo-tree-id14938 . -1) (undo-tree-id14939 . -1) (undo-tree-id14940 . -1) (undo-tree-id14941 . -1) (undo-tree-id14942 . -1) (undo-tree-id14943 . -1) (undo-tree-id14944 . -1) (#("o" 0 1 (fontified t)) . -1655) (undo-tree-id14945 . -1) (undo-tree-id14946 . -1) (undo-tree-id14947 . -1) (undo-tree-id14948 . -1) (undo-tree-id14949 . -1) (undo-tree-id14950 . -1) (undo-tree-id14951 . -1) (undo-tree-id14952 . -1) (undo-tree-id14953 . -1) (undo-tree-id14954 . -1) (undo-tree-id14955 . -1) (undo-tree-id14956 . -1) (undo-tree-id14957 . -1) (undo-tree-id14958 . -1) (undo-tree-id14959 . -1) (undo-tree-id14960 . -1) (undo-tree-id14961 . -1) (undo-tree-id14962 . -1) (undo-tree-id14963 . -1) (undo-tree-id14964 . -1) (undo-tree-id14965 . -1) (undo-tree-id14966 . -1) (undo-tree-id14967 . -1) (undo-tree-id14968 . -1) (undo-tree-id14969 . -1) (undo-tree-id14970 . -1) (undo-tree-id14971 . -1) (undo-tree-id14972 . -1) (undo-tree-id14973 . -1) (undo-tree-id14974 . -1) (undo-tree-id14975 . -1) (undo-tree-id14976 . -1) (undo-tree-id14977 . -1) (undo-tree-id14978 . -1) (undo-tree-id14979 . -1) (undo-tree-id14980 . -1) (undo-tree-id14981 . -1) (undo-tree-id14982 . -1) (undo-tree-id14983 . -1) (undo-tree-id14984 . -1) (#("_" 0 1 (fontified t)) . -1656) (undo-tree-id14985 . -1) (undo-tree-id14986 . -1) (undo-tree-id14987 . -1) (undo-tree-id14988 . -1) (undo-tree-id14989 . -1) (undo-tree-id14990 . -1) (undo-tree-id14991 . -1) (undo-tree-id14992 . -1) (undo-tree-id14993 . -1) (undo-tree-id14994 . -1) (undo-tree-id14995 . -1) (undo-tree-id14996 . -1) (undo-tree-id14997 . -1) (undo-tree-id14998 . -1) (undo-tree-id14999 . -1) (undo-tree-id15000 . -1) (undo-tree-id15001 . -1) (undo-tree-id15002 . -1) (undo-tree-id15003 . -1) (undo-tree-id15004 . -1) (undo-tree-id15005 . -1) (undo-tree-id15006 . -1) (undo-tree-id15007 . -1) (undo-tree-id15008 . -1) (undo-tree-id15009 . -1) (undo-tree-id15010 . -1) (undo-tree-id15011 . -1) (undo-tree-id15012 . -1) (undo-tree-id15013 . -1) (undo-tree-id15014 . -1) (undo-tree-id15015 . -1) (undo-tree-id15016 . -1) (undo-tree-id15017 . -1) (undo-tree-id15018 . -1) (undo-tree-id15019 . -1) (undo-tree-id15020 . -1) (undo-tree-id15021 . -1) (undo-tree-id15022 . -1) (undo-tree-id15023 . -1) 1657) nil (25944 35902 56803 0) 0 nil])
([nil nil ((#("mut()" 0 5 (fontified t)) . -1639) (undo-tree-id15075 . -5) (undo-tree-id15076 . -5) (undo-tree-id15077 . -5) (undo-tree-id15078 . -5) (undo-tree-id15079 . -5) (undo-tree-id15080 . -5) (undo-tree-id15081 . -5) (undo-tree-id15082 . -5) (undo-tree-id15083 . -5) (undo-tree-id15084 . -5) (undo-tree-id15085 . -5) (undo-tree-id15086 . -5) 1644 (t 25944 35902 90769 341000)) nil (25944 35905 577001 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -1638) (undo-tree-id15062 . -1) (undo-tree-id15063 . -1) (undo-tree-id15064 . -1) (undo-tree-id15065 . -1) (undo-tree-id15066 . -1) (undo-tree-id15067 . -1) (undo-tree-id15068 . -1) (undo-tree-id15069 . -1) (undo-tree-id15070 . -1) (undo-tree-id15071 . -1) (undo-tree-id15072 . -1) (undo-tree-id15073 . -1) (undo-tree-id15074 . -1) 1639) nil (25944 35905 576985 0) 0 nil])
([nil nil ((1638 . 1640) (t 25944 35905 610376 252000)) nil (25944 35908 443916 0) 0 nil])
([nil nil ((1630 . 1631) (t 25944 35908 478462 636000)) nil (25944 35923 63440 0) 0 nil])
([nil nil ((1631 . 1632)) nil (25944 35923 63439 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1630) (undo-tree-id15293 . -1) (undo-tree-id15294 . -1) (undo-tree-id15295 . -1) (undo-tree-id15296 . -1) (undo-tree-id15297 . -1) (undo-tree-id15298 . -1) (undo-tree-id15299 . -1) (undo-tree-id15300 . -1) (undo-tree-id15301 . -1) (undo-tree-id15302 . -1) (undo-tree-id15303 . -1) (undo-tree-id15304 . -1) (undo-tree-id15305 . -1) (undo-tree-id15306 . -1) (undo-tree-id15307 . -1) (#("t" 0 1 (fontified t)) . -1631) (undo-tree-id15308 . -1) (undo-tree-id15309 . -1) (undo-tree-id15310 . -1) (undo-tree-id15311 . -1) 1632) nil (25944 35923 63437 0) 0 nil])
([nil nil ((1630 . 1633)) nil (25944 35923 63417 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1631) (undo-tree-id15283 . -1) (undo-tree-id15284 . -1) (undo-tree-id15285 . -1) (undo-tree-id15286 . -1) (undo-tree-id15287 . -1) (undo-tree-id15288 . -1) (undo-tree-id15289 . -1) (#("o" 0 1 (fontified t)) . -1632) (undo-tree-id15290 . -1) (undo-tree-id15291 . -1) (undo-tree-id15292 . -1) 1633) nil (25944 35923 63416 0) 0 nil])
([nil nil ((1631 . 1633)) nil (25944 35923 63405 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1630) (undo-tree-id15222 . -1) (undo-tree-id15223 . -1) (undo-tree-id15224 . -1) (undo-tree-id15225 . -1) (undo-tree-id15226 . -1) (undo-tree-id15227 . -1) (undo-tree-id15228 . -1) (undo-tree-id15229 . -1) (undo-tree-id15230 . -1) (undo-tree-id15231 . -1) (undo-tree-id15232 . -1) (undo-tree-id15233 . -1) (undo-tree-id15234 . -1) (undo-tree-id15235 . -1) (undo-tree-id15236 . -1) (undo-tree-id15237 . -1) (undo-tree-id15238 . -1) (undo-tree-id15239 . -1) (undo-tree-id15240 . -1) (undo-tree-id15241 . -1) (undo-tree-id15242 . -1) (undo-tree-id15243 . -1) (undo-tree-id15244 . -1) (undo-tree-id15245 . -1) (undo-tree-id15246 . -1) (undo-tree-id15247 . -1) (undo-tree-id15248 . -1) (undo-tree-id15249 . -1) (undo-tree-id15250 . -1) (undo-tree-id15251 . -1) (undo-tree-id15252 . -1) (undo-tree-id15253 . -1) (undo-tree-id15254 . -1) (undo-tree-id15255 . -1) (undo-tree-id15256 . -1) (#("t" 0 1 (fontified t)) . -1631) (undo-tree-id15257 . -1) (undo-tree-id15258 . -1) (undo-tree-id15259 . -1) (undo-tree-id15260 . -1) (undo-tree-id15261 . -1) (undo-tree-id15262 . -1) (undo-tree-id15263 . -1) (undo-tree-id15264 . -1) (undo-tree-id15265 . -1) (undo-tree-id15266 . -1) (undo-tree-id15267 . -1) (undo-tree-id15268 . -1) (undo-tree-id15269 . -1) (undo-tree-id15270 . -1) (undo-tree-id15271 . -1) (undo-tree-id15272 . -1) (#("o" 0 1 (fontified t)) . -1632) (undo-tree-id15273 . -1) (undo-tree-id15274 . -1) (undo-tree-id15275 . -1) (undo-tree-id15276 . -1) (undo-tree-id15277 . -1) (undo-tree-id15278 . -1) (undo-tree-id15279 . -1) (undo-tree-id15280 . -1) (undo-tree-id15281 . -1) (undo-tree-id15282 . -1) 1633) nil (25944 35923 63401 0) 0 nil])
([nil nil ((1630 . 1632)) nil (25944 35923 63340 0) 0 nil])
([nil nil ((1630 . 1638) (#("toas_deref" 0 2 (fontified nil) 2 10 (fontified nil)) . 1630) (undo-tree-id15209 . -10) (undo-tree-id15210 . 8) (1630 . 1632) (#("to_owned (as ToOwned)" 0 21 (fontified nil)) . -1630) (1630 . 1651) (#("to" 0 2 (fontified t)) . -1630) (undo-tree-id15211 . -2) (undo-tree-id15212 . -2) (undo-tree-id15213 . -1) (undo-tree-id15214 . -2) (undo-tree-id15215 . -2) (undo-tree-id15216 . -2) (undo-tree-id15217 . -2) (undo-tree-id15218 . -2) (undo-tree-id15219 . -2) (undo-tree-id15220 . -2) (undo-tree-id15221 . -2) 1632) nil (25944 35923 63338 0) 0 nil])
([nil nil ((1638 . 1639)) nil (25944 35923 64006 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1638) (undo-tree-id15322 . -1) (undo-tree-id15323 . -1) (undo-tree-id15324 . -1) (undo-tree-id15325 . -1) (undo-tree-id15326 . -1) (undo-tree-id15327 . -1) (undo-tree-id15328 . -1) (undo-tree-id15329 . -1) (undo-tree-id15330 . -1) (undo-tree-id15331 . -1) (undo-tree-id15332 . -1) (undo-tree-id15333 . -1) (undo-tree-id15334 . -1) (undo-tree-id15335 . -1) (undo-tree-id15336 . -1) (undo-tree-id15337 . -1) (undo-tree-id15338 . -1) 1639) nil (25944 35928 874671 0) 0 nil] [nil nil ((#("let canvas_ref = create_node_ref::<html::Canvas>();
    create_effect(move |_| {
	let canvas = canvas_ref.get().unwrap();
	let backend = CanvasBackend::with_canvas_object(canvas_ref.get().to_owned." 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 14 (face font-lock-variable-name-face fontified t) 14 17 (fontified t) 17 32 (fontified t) 32 35 (fontified t) 35 39 (face font-lock-constant-face fontified t) 39 41 (fontified t) 41 47 (face font-lock-type-face fontified t) 47 52 (fontified t) 52 55 (fontified t) 55 56 (fontified t) 56 70 (fontified t) 70 74 (face font-lock-keyword-face fontified t) 74 81 (fontified t) 81 82 (fontified t) 82 85 (face font-lock-keyword-face fontified t) 85 86 (fontified t) 86 92 (face font-lock-variable-name-face fontified t) 92 95 (fontified t) 95 106 (fontified t) 106 112 (fontified t) 112 120 (fontified t) 120 122 (fontified t) 122 123 (fontified t) 123 126 (face font-lock-keyword-face fontified t) 126 127 (fontified t) 127 134 (face font-lock-variable-name-face fontified t) 134 137 (fontified t) 137 150 (face font-lock-type-face fontified t) 150 152 (fontified t) 152 171 (fontified t) 171 182 (fontified t) 182 188 (fontified t) 188 197 (fontified t)) . -1442) (undo-tree-id15087 . -102) (undo-tree-id15088 . -43) (undo-tree-id15089 . -56) (undo-tree-id15090 . -108) (undo-tree-id15091 . -171) (undo-tree-id15092 . -171) (undo-tree-id15093 . -197) (undo-tree-id15094 . -197) (undo-tree-id15095 . -43) (undo-tree-id15096 . -164) (undo-tree-id15097 . -102) (undo-tree-id15098 . -188) (undo-tree-id15099 . -187) (undo-tree-id15100 . -187) (undo-tree-id15101 . -187) (undo-tree-id15102 . -187) (undo-tree-id15103 . -187) (undo-tree-id15104 . -187) (undo-tree-id15105 . -187) (undo-tree-id15106 . -187) (undo-tree-id15107 . -187) (undo-tree-id15108 . -187) (undo-tree-id15109 . -187) (undo-tree-id15110 . -187) (undo-tree-id15111 . -187) (undo-tree-id15112 . -187) (undo-tree-id15113 . -187) (undo-tree-id15114 . -187) (undo-tree-id15115 . -187) (undo-tree-id15116 . -187) (undo-tree-id15117 . -188) (undo-tree-id15118 . -188) (undo-tree-id15119 . -188) (undo-tree-id15120 . -188) (undo-tree-id15121 . -188) (undo-tree-id15122 . -188) (undo-tree-id15123 . -188) (undo-tree-id15124 . -188) (undo-tree-id15125 . -188) (undo-tree-id15126 . -188) (undo-tree-id15127 . -188) (undo-tree-id15128 . -188) (undo-tree-id15129 . -188) (undo-tree-id15130 . -188) (undo-tree-id15131 . -188) (undo-tree-id15132 . -188) (undo-tree-id15133 . -188) (undo-tree-id15134 . -188) (undo-tree-id15135 . -188) (undo-tree-id15136 . -188) (undo-tree-id15137 . -188) (undo-tree-id15138 . -188) (undo-tree-id15139 . -188) (undo-tree-id15140 . -188) (undo-tree-id15141 . -188) (undo-tree-id15142 . -188) (undo-tree-id15143 . -188) (undo-tree-id15144 . -188) (undo-tree-id15145 . -188) (undo-tree-id15146 . -188) (undo-tree-id15147 . -122) (undo-tree-id15148 . -188) (undo-tree-id15149 . -188) (undo-tree-id15150 . -122) (undo-tree-id15151 . -188) (undo-tree-id15152 . -188) (undo-tree-id15153 . -122) (undo-tree-id15154 . -188) (undo-tree-id15155 . -188) (undo-tree-id15156 . -122) (undo-tree-id15157 . -188) (undo-tree-id15158 . -188) (undo-tree-id15159 . -188) (undo-tree-id15160 . -188) (undo-tree-id15161 . -188) (undo-tree-id15162 . -188) (undo-tree-id15163 . -188) (undo-tree-id15164 . -188) (undo-tree-id15165 . -122) (undo-tree-id15166 . -188) (undo-tree-id15167 . -188) (undo-tree-id15168 . -188) (undo-tree-id15169 . -122) (undo-tree-id15170 . -188) (undo-tree-id15171 . -188) (undo-tree-id15172 . -188) (undo-tree-id15173 . -188) (undo-tree-id15174 . -188) (undo-tree-id15175 . -188) (undo-tree-id15176 . -188) (undo-tree-id15177 . -188) (undo-tree-id15178 . -122) (undo-tree-id15179 . -188) (undo-tree-id15180 . -188) (undo-tree-id15181 . -188) (undo-tree-id15182 . -122) (undo-tree-id15183 . -188) (undo-tree-id15184 . -188) (undo-tree-id15185 . -188) (undo-tree-id15186 . -188) (undo-tree-id15187 . -188) (undo-tree-id15188 . -188) (undo-tree-id15189 . -188) (undo-tree-id15190 . -188) (undo-tree-id15191 . -188) (undo-tree-id15192 . -122) (undo-tree-id15193 . -188) (undo-tree-id15194 . -188) (undo-tree-id15195 . -188) (undo-tree-id15196 . -188) (undo-tree-id15197 . -188) (undo-tree-id15198 . -188) (undo-tree-id15199 . -188) (undo-tree-id15200 . -188) (undo-tree-id15201 . -196) (undo-tree-id15202 . -196) (undo-tree-id15203 . -122) (undo-tree-id15204 . -197) (undo-tree-id15205 . -197) (undo-tree-id15206 . -197) (undo-tree-id15207 . -197) (undo-tree-id15208 . -197) 1639) ((1442 . 1639)) (25944 35923 63314 0) 0 nil])
([nil nil ((1640 . 1643)) nil (25944 35928 874653 0) 0 nil])
nil
([nil nil ((apply yas--snippet-revive 1641 1651 #s(yas--snippet nil nil #s(yas--exit 1651 nil) 69 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1651 nil) 69 nil nil nil nil)) (1641 . 1651) (#("as_deref()$0" 0 12 (fontified nil)) . 1641) (1641 . 1653) (#("de" 0 2 (fontified nil)) . 1641) (1641 . 1643) (#("as_deref()" 0 10 (fontified nil)) . -1641) (1641 . 1651) (#("de" 0 2 (fontified t)) . -1641) (undo-tree-id15312 . -2) (undo-tree-id15313 . -2) (undo-tree-id15314 . -1) (undo-tree-id15315 . -1) (undo-tree-id15316 . -2) (undo-tree-id15317 . -2) (undo-tree-id15318 . -2) (undo-tree-id15319 . -2) (undo-tree-id15320 . -2) (undo-tree-id15321 . -2) 1643) nil (25944 35928 874648 0) 0 nil])
([nil nil ((#("owned()" 0 5 (fontified t) 5 7 (fontified t)) . -1633) (undo-tree-id15402 . -7) (undo-tree-id15403 . -7) (undo-tree-id15404 . -7) (undo-tree-id15405 . -5) (undo-tree-id15406 . -5) (undo-tree-id15407 . -5) (undo-tree-id15408 . -5) (undo-tree-id15409 . -5) (undo-tree-id15410 . -5) (undo-tree-id15411 . -5) (undo-tree-id15412 . -5) (undo-tree-id15413 . -5) (undo-tree-id15414 . -5) (undo-tree-id15415 . -5) (undo-tree-id15416 . -5) (undo-tree-id15417 . -5) (undo-tree-id15418 . -5) (undo-tree-id15419 . -5) (undo-tree-id15420 . -7) (undo-tree-id15421 . -7) (undo-tree-id15422 . -7) (undo-tree-id15423 . -7) (undo-tree-id15424 . -7) (undo-tree-id15425 . -7) (undo-tree-id15426 . -7) (undo-tree-id15427 . -7) (undo-tree-id15428 . -7) (undo-tree-id15429 . -7) (undo-tree-id15430 . -7) (undo-tree-id15431 . -7) 1640 (t 25944 35928 908741 139000)) nil (25944 35936 279664 0) 0 nil])
([nil nil ((#("to_" 0 3 (fontified t)) . -1630) (undo-tree-id15371 . -3) (undo-tree-id15372 . -3) (undo-tree-id15373 . -3) (undo-tree-id15374 . -3) (undo-tree-id15375 . -3) (undo-tree-id15376 . -3) (undo-tree-id15377 . -3) (undo-tree-id15378 . -3) (undo-tree-id15379 . -3) (undo-tree-id15380 . -3) (undo-tree-id15381 . -3) (undo-tree-id15382 . -3) (undo-tree-id15383 . -3) (undo-tree-id15384 . -3) (undo-tree-id15385 . -3) (undo-tree-id15386 . -3) (undo-tree-id15387 . -3) (undo-tree-id15388 . -3) (undo-tree-id15389 . -3) (undo-tree-id15390 . -3) (undo-tree-id15391 . -3) (undo-tree-id15392 . -3) (undo-tree-id15393 . -3) (undo-tree-id15394 . -3) (undo-tree-id15395 . -3) (undo-tree-id15396 . -3) (undo-tree-id15397 . -3) (undo-tree-id15398 . -3) (undo-tree-id15399 . -3) (undo-tree-id15400 . -3) (undo-tree-id15401 . -3) 1633) nil (25944 35936 279632 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1629) (undo-tree-id15339 . -1) (undo-tree-id15340 . -1) (undo-tree-id15341 . -1) (undo-tree-id15342 . -1) (undo-tree-id15343 . -1) (undo-tree-id15344 . -1) (undo-tree-id15345 . -1) (undo-tree-id15346 . -1) (undo-tree-id15347 . -1) (undo-tree-id15348 . -1) (undo-tree-id15349 . -1) (undo-tree-id15350 . -1) (undo-tree-id15351 . -1) (undo-tree-id15352 . -1) (undo-tree-id15353 . -1) (undo-tree-id15354 . -1) (undo-tree-id15355 . -1) (undo-tree-id15356 . -1) (undo-tree-id15357 . -1) (undo-tree-id15358 . -1) (undo-tree-id15359 . -1) (undo-tree-id15360 . -1) (undo-tree-id15361 . -1) (undo-tree-id15362 . -1) (undo-tree-id15363 . -1) (undo-tree-id15364 . -1) (undo-tree-id15365 . -1) (undo-tree-id15366 . -1) (undo-tree-id15367 . -1) (undo-tree-id15368 . -1) (undo-tree-id15369 . -1) (undo-tree-id15370 . -1) 1630) nil (25944 35945 627014 0) 0 nil])
([nil nil ((1649 . 1651)) nil (25944 35951 582786 0) 0 nil] [nil nil ((1640 . 1643) (t 25944 35936 314597 941000)) ((#(".to" 0 1 (fontified t) 1 3 (fontified t)) . 1640) (undo-tree-id15487 . -3) (undo-tree-id15488 . -3) (undo-tree-id15489 . -2) (undo-tree-id15490 . -2) (undo-tree-id15491 . -2) (undo-tree-id15492 . -3) (undo-tree-id15493 . -3) (undo-tree-id15494 . -3) (undo-tree-id15495 . -3) (undo-tree-id15496 . -3) (undo-tree-id15497 . -3) (undo-tree-id15498 . -1) (undo-tree-id15499 . -1) (undo-tree-id15500 . -1) (undo-tree-id15501 . -1) (undo-tree-id15502 . -1) (undo-tree-id15503 . -1) (undo-tree-id15504 . -1) (undo-tree-id15505 . -1) (undo-tree-id15506 . -1) (undo-tree-id15507 . -1) (undo-tree-id15508 . -1) (undo-tree-id15509 . -1) (undo-tree-id15510 . -1) (undo-tree-id15511 . -1) (undo-tree-id15512 . -1) (undo-tree-id15513 . -1) (undo-tree-id15514 . -1) (undo-tree-id15515 . -1) (undo-tree-id15516 . -1) (undo-tree-id15517 . -1) (undo-tree-id15518 . -1) (undo-tree-id15519 . -1) (undo-tree-id15520 . -1) (undo-tree-id15521 . -1) (undo-tree-id15522 . -1) (undo-tree-id15523 . -1) (undo-tree-id15524 . -1) (undo-tree-id15525 . -1) (undo-tree-id15526 . -1) (undo-tree-id15527 . -1) (undo-tree-id15528 . -1) (undo-tree-id15529 . -1) (undo-tree-id15530 . -1) (undo-tree-id15531 . -1) (undo-tree-id15532 . -1) (undo-tree-id15533 . -1) (undo-tree-id15534 . -1) (undo-tree-id15535 . -1) (undo-tree-id15536 . -1) (undo-tree-id15537 . -1) (undo-tree-id15538 . -1) (undo-tree-id15539 . -1) (undo-tree-id15540 . -3) (undo-tree-id15541 . -3) (undo-tree-id15542 . -3) (undo-tree-id15543 . -3) (undo-tree-id15544 . -3)) (25944 35944 561819 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1649) (undo-tree-id15555 . -1) (undo-tree-id15556 . -1) (undo-tree-id15557 . -1) (undo-tree-id15558 . -1) (undo-tree-id15559 . -1) (undo-tree-id15560 . -1) (undo-tree-id15561 . -1) (undo-tree-id15562 . -1) (undo-tree-id15563 . -1) (undo-tree-id15564 . -1) (undo-tree-id15565 . -1) (undo-tree-id15566 . -1) (#("t" 0 1 (fontified t)) . -1650) (undo-tree-id15567 . -1) (undo-tree-id15568 . -1) (undo-tree-id15569 . -1) 1651) nil (25944 35951 582784 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1641 1651 #s(yas--snippet nil nil #s(yas--exit #<marker at 1478 in component.rs> nil) 70 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 1478 in component.rs> nil) 70 nil nil nil nil)) (1641 . 1651) (#("to_owned()$0" 0 12 (fontified nil)) . 1641) (1641 . 1653) (#("to" 0 2 (fontified nil)) . 1641) (1641 . 1643) (#("to_owned() (as ToOwned)" 0 23 (fontified nil)) . -1641) (1641 . 1664) (#("to" 0 2 (fontified t)) . -1641) (undo-tree-id15432 . -2) (undo-tree-id15433 . -2) (undo-tree-id15434 . -1) (undo-tree-id15435 . -1) (undo-tree-id15436 . -1) (undo-tree-id15437 . -2) (undo-tree-id15438 . -2) (undo-tree-id15439 . -2) (undo-tree-id15440 . -2) (undo-tree-id15441 . -2) (undo-tree-id15442 . -2) 1643) ((1641 . 1643) (#("to_owned() (as ToOwned)" 0 23 (fontified nil)) . 1641) (1641 . 1664) (#("to" 0 2 (fontified nil)) . 1641) (1641 . 1643) (#("to_owned()$0" 0 12 (fontified nil)) . 1641) (1641 . 1653) (#("to_owned()" 0 10 (fontified t)) . 1641) (undo-tree-id15443 . -10) (undo-tree-id15444 . -10) (undo-tree-id15445 . -10) (undo-tree-id15446 . -10) (undo-tree-id15447 . -10) (undo-tree-id15448 . -10) (undo-tree-id15449 . -10) (undo-tree-id15450 . -10) (undo-tree-id15451 . -10) (undo-tree-id15452 . -10) (undo-tree-id15453 . -10) (undo-tree-id15454 . -10) (undo-tree-id15455 . -10) (undo-tree-id15456 . -10) (undo-tree-id15457 . -10) (undo-tree-id15458 . -10) (undo-tree-id15459 . -10) (undo-tree-id15460 . -10) (undo-tree-id15461 . -10) (undo-tree-id15462 . -10) (undo-tree-id15463 . -10) (undo-tree-id15464 . -10) (undo-tree-id15465 . -10) (undo-tree-id15466 . -10) (undo-tree-id15467 . -10) (undo-tree-id15468 . -10) (undo-tree-id15469 . -10) (undo-tree-id15470 . -10) (undo-tree-id15471 . -10) (undo-tree-id15472 . -10) (undo-tree-id15473 . -10) (undo-tree-id15474 . -10) (undo-tree-id15475 . -10) (undo-tree-id15476 . -10) (undo-tree-id15477 . -10) (undo-tree-id15478 . -10) (undo-tree-id15479 . -10) (undo-tree-id15480 . -10) (undo-tree-id15481 . -10) (undo-tree-id15482 . -10) (undo-tree-id15483 . -10) (undo-tree-id15484 . -10) (undo-tree-id15485 . -10) (undo-tree-id15486 . -10) (t 25944 35940 33348 407000)) (25944 35939 998565 0) 0 nil])
([nil nil ((1649 . 1652)) nil (25944 35951 582766 0) 0 nil])
nil
([nil nil ((apply yas--snippet-revive 1650 1660 #s(yas--snippet nil nil #s(yas--exit 1660 nil) 71 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1660 nil) 71 nil nil nil nil)) (1650 . 1660) (#("to_owned()$0" 0 12 (fontified nil)) . 1650) (1650 . 1662) (#("to" 0 2 (fontified nil)) . 1650) (1650 . 1652) (#("to_owned() (as ToOwned)" 0 23 (fontified nil)) . -1650) (1650 . 1673) (#("to" 0 2 (fontified t)) . -1650) (undo-tree-id15545 . -2) (undo-tree-id15546 . -2) (undo-tree-id15547 . -1) (undo-tree-id15548 . -1) (undo-tree-id15549 . -2) (undo-tree-id15550 . -2) (undo-tree-id15551 . -2) (undo-tree-id15552 . -2) (undo-tree-id15553 . -2) (undo-tree-id15554 . -2) 1652) nil (25944 35951 582759 0) 0 nil])
([nil nil ((1709 . 1711) (t 25944 35951 618181 971000)) nil (25944 36022 94903 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1856 . 1857) (nil fontified nil 1711 . 1857) (1711 . 1857)) nil (25944 36022 94901 0) 0 nil])
([nil nil ((#("	      let rect = element.get_bounding_client_rect();" 0 1 (fontified t) 1 7 (fontified t) 7 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 15 (face font-lock-variable-name-face fontified t) 15 53 (fontified t)) . 1710) (undo-tree-id15571 . -1) (undo-tree-id15572 . -1) (undo-tree-id15573 . -1) (undo-tree-id15574 . -1) (undo-tree-id15575 . -39) (undo-tree-id15576 . -39) (undo-tree-id15577 . -39) (undo-tree-id15578 . -39) (undo-tree-id15579 . -39) (undo-tree-id15580 . -39) (undo-tree-id15581 . -39) (undo-tree-id15582 . -39) (undo-tree-id15583 . -39) (undo-tree-id15584 . -39) (undo-tree-id15585 . -39) (undo-tree-id15586 . -39) (undo-tree-id15587 . -39) (undo-tree-id15588 . -39) (undo-tree-id15589 . -39) (undo-tree-id15590 . -39) (undo-tree-id15591 . -39) (undo-tree-id15592 . -39) (undo-tree-id15593 . -53)) nil (25944 36022 94899 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1710) (undo-tree-id15570 . -1)) nil (25944 36022 94874 0) 0 nil])
([nil nil ((1753 . 1754) (#("      " 0 6 (fontified t)) . 1753) (1710 . 1711) (#("      " 0 6 (fontified t)) . 1710) 1724) nil (25944 36022 94863 0) 0 nil])
([nil nil ((#("element" 0 7 (fontified t)) . -1711) (undo-tree-id15624 . -7) (undo-tree-id15625 . -7) (undo-tree-id15626 . -7) (undo-tree-id15627 . -7) (undo-tree-id15628 . -7) (undo-tree-id15629 . -7) (undo-tree-id15630 . -7) (undo-tree-id15631 . -7) (undo-tree-id15632 . -7) (undo-tree-id15633 . -7) (undo-tree-id15634 . -7) (undo-tree-id15635 . -7) (undo-tree-id15636 . -7) (undo-tree-id15637 . -7) (undo-tree-id15638 . -7) (undo-tree-id15639 . -7) (undo-tree-id15640 . -7) (undo-tree-id15641 . -7) 1718 (t 25944 36022 130972 291000)) nil (25944 36033 749651 0) 0 nil])
([nil nil ((1711 . 1714)) nil (25944 36033 749632 0) 0 nil])
([nil nil ((1711 . 1717) (#("can" 0 3 (fontified nil)) . 1711) (1711 . 1714) (#("canvas" 0 6 (fontified nil)) . -1711) (1711 . 1717) (#("can" 0 3 (fontified t)) . -1711) (undo-tree-id15615 . -3) (undo-tree-id15616 . -3) (undo-tree-id15617 . -1) (undo-tree-id15618 . -2) (undo-tree-id15619 . -3) (undo-tree-id15620 . -3) (undo-tree-id15621 . -3) (undo-tree-id15622 . -3) (undo-tree-id15623 . -3) 1714) nil (25944 36033 749630 0) 0 nil])
([nil nil ((#("element" 0 7 (fontified t)) . -1753) (undo-tree-id15601 . -7) (undo-tree-id15602 . -7) (undo-tree-id15603 . -7) (undo-tree-id15604 . -7) (undo-tree-id15605 . -7) (undo-tree-id15606 . -7) (undo-tree-id15607 . -7) (undo-tree-id15608 . -7) (undo-tree-id15609 . -7) (undo-tree-id15610 . -7) (undo-tree-id15611 . -7) (undo-tree-id15612 . -7) (undo-tree-id15613 . -7) (undo-tree-id15614 . -7) 1760) nil (25944 36033 749618 0) 0 nil])
([nil nil ((1753 . 1756)) nil (25944 36033 749602 0) 0 nil])
([nil nil ((1753 . 1759) (#("can" 0 3 (fontified nil)) . 1753) (1753 . 1756) (#("canvas" 0 6 (fontified nil)) . -1753) (1753 . 1759) (#("can" 0 3 (fontified t)) . -1753) (undo-tree-id15594 . -1) (undo-tree-id15595 . -3) (undo-tree-id15596 . -1) (undo-tree-id15597 . -2) (undo-tree-id15598 . -2) (undo-tree-id15599 . -3) (undo-tree-id15600 . -3) 1756) nil (25944 36033 749595 0) 0 nil])
([nil nil ((1662 . 1664) (t 25944 36033 785731 116000)) nil (25944 36086 563769 0) 0 nil])
([nil nil ((1664 . 1665)) nil (25944 36086 563768 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -1664) (undo-tree-id15826 . -1) (undo-tree-id15827 . -1) (undo-tree-id15828 . -1) (undo-tree-id15829 . -1) 1665) nil (25944 36086 563767 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1774 . 1775) (nil fontified nil 1664 . 1775) (1664 . 1775)) nil (25944 36086 563761 0) 0 nil])
([nil nil ((#("      " 0 6 (fontified t)) . -1664) 1713) nil (25944 36086 563760 0) 0 nil])
([nil nil ((1712 . 1713) (#("      " 0 6 (fontified t)) . 1712) 1763) nil (25944 36086 563758 0) 0 nil])
([nil nil ((#("	let backend = CanvasBackend::with_canvas_object(canvas_ref.get().as_deref().unwrap().to_owned());
	let drawing_area = backend.into_drawing_area();
	drawing_area.fill(&RGBColor(200,200,200)).unwrap();" 0 1 (fontified t) 1 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 12 (face font-lock-variable-name-face fontified t) 12 15 (fontified t) 15 28 (face font-lock-type-face fontified t) 28 30 (fontified t) 30 49 (fontified t) 49 60 (fontified t) 60 65 (fontified t) 65 66 (fontified t) 66 76 (fontified t) 76 77 (fontified t) 77 86 (fontified t) 86 96 (fontified t) 96 99 (fontified t) 99 100 (fontified t) 100 103 (face font-lock-keyword-face fontified t) 103 104 (fontified t) 104 116 (face font-lock-variable-name-face fontified t) 116 148 (fontified t) 148 149 (fontified t) 149 167 (fontified t) 167 168 (face rust-ampersand-face fontified t) 168 176 (face font-lock-type-face fontified t) 176 199 (fontified t) 199 200 (rear-nonsticky t fontified t)) . 1564) (undo-tree-id15749 . -49) (undo-tree-id15750 . -49) (undo-tree-id15751 . -99) (undo-tree-id15752 . -200) (undo-tree-id15753 . -42) (undo-tree-id15754 . -65) (undo-tree-id15755 . -76) (undo-tree-id15756 . -97) (undo-tree-id15757 . -98) (undo-tree-id15758 . -98) (undo-tree-id15759 . -98) (undo-tree-id15760 . -98) (undo-tree-id15761 . -98) (undo-tree-id15762 . -98) (undo-tree-id15763 . -98) (undo-tree-id15764 . -98) (undo-tree-id15765 . -98) (undo-tree-id15766 . -98) (undo-tree-id15767 . -98) (undo-tree-id15768 . 102) (undo-tree-id15769 . -100) (undo-tree-id15770 . -100) (undo-tree-id15771 . -100) (undo-tree-id15772 . -100) (undo-tree-id15773 . -100) (undo-tree-id15774 . -100) (undo-tree-id15775 . -100) (undo-tree-id15776 . -100) (undo-tree-id15777 . -100) (undo-tree-id15778 . -100) (undo-tree-id15779 . -100) (undo-tree-id15780 . -100) (undo-tree-id15781 . -100) (undo-tree-id15782 . -100) (undo-tree-id15783 . -200) (undo-tree-id15784 . -200) (undo-tree-id15785 . -143) (undo-tree-id15786 . -143) (undo-tree-id15787 . -143) (undo-tree-id15788 . -143) (undo-tree-id15789 . -143) (undo-tree-id15790 . -194) (undo-tree-id15791 . -194) (undo-tree-id15792 . -194) (undo-tree-id15793 . -194) (undo-tree-id15794 . -194) (undo-tree-id15795 . -194) (undo-tree-id15796 . -194) (undo-tree-id15797 . -194) (undo-tree-id15798 . -194) (undo-tree-id15799 . -148) (undo-tree-id15800 . -148) (undo-tree-id15801 . -148) (undo-tree-id15802 . -148) (undo-tree-id15803 . -148) (undo-tree-id15804 . -99) (undo-tree-id15805 . -99) (undo-tree-id15806 . -100) (undo-tree-id15807 . -99) (undo-tree-id15808 . -99) (undo-tree-id15809 . -99) (undo-tree-id15810 . -99) (undo-tree-id15811 . -99) (undo-tree-id15812 . -99) (undo-tree-id15813 . -99) (undo-tree-id15814 . -99) (undo-tree-id15815 . -148) (undo-tree-id15816 . -148) (undo-tree-id15817 . -148) (undo-tree-id15818 . -148) (undo-tree-id15819 . -148) (undo-tree-id15820 . -200) (undo-tree-id15821 . -200) (undo-tree-id15822 . -200) (undo-tree-id15823 . -200) (undo-tree-id15824 . -200) (undo-tree-id15825 . -200) 1764) nil (25944 36086 563753 0) 0 nil])
([nil nil ((1693 . 1695)) nil (25944 36086 563678 0) 0 nil])
([nil nil ((nil fontified nil 1894 . 1895) (nil fontified nil 1871 . 1894) (nil fontified nil 1863 . 1871) (nil fontified nil 1862 . 1863) (nil fontified nil 1844 . 1862) (nil fontified nil 1843 . 1844) (nil fontified nil 1811 . 1843) (nil fontified nil 1799 . 1811) (nil fontified nil 1798 . 1799) (nil fontified nil 1795 . 1798) (nil fontified nil 1794 . 1795) (nil fontified nil 1791 . 1794) (nil fontified nil 1781 . 1791) (nil fontified nil 1772 . 1781) (nil fontified nil 1771 . 1772) (nil fontified nil 1761 . 1771) (nil fontified nil 1760 . 1761) (nil fontified nil 1755 . 1760) (nil fontified nil 1744 . 1755) (nil fontified nil 1725 . 1744) (nil fontified nil 1723 . 1725) (nil fontified nil 1710 . 1723) (nil fontified nil 1707 . 1710) (nil fontified nil 1700 . 1707) (nil fontified nil 1699 . 1700) (nil fontified nil 1696 . 1699) (nil fontified nil 1695 . 1696) (1695 . 1895)) nil (25944 36086 563676 0) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -1695) 1504) nil (25944 36086 563667 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1563) (undo-tree-id15642 . -1) (undo-tree-id15643 . -1) (undo-tree-id15644 . -1) (undo-tree-id15645 . -1) (undo-tree-id15646 . -1) (undo-tree-id15647 . -1) (undo-tree-id15648 . -1) (undo-tree-id15649 . -1) (undo-tree-id15650 . -1) (undo-tree-id15651 . -1) (undo-tree-id15652 . -1) (undo-tree-id15653 . -1) (undo-tree-id15654 . -1) (undo-tree-id15655 . -1) (undo-tree-id15656 . -1) (undo-tree-id15657 . -1) (undo-tree-id15658 . -1) (undo-tree-id15659 . -1) (undo-tree-id15660 . -1) (undo-tree-id15661 . -1) (undo-tree-id15662 . -1) (undo-tree-id15663 . -1) (undo-tree-id15664 . -1) (undo-tree-id15665 . -1) (undo-tree-id15666 . -1) (undo-tree-id15667 . -1) (undo-tree-id15668 . -1) (undo-tree-id15669 . -1) (undo-tree-id15670 . -1) (undo-tree-id15671 . -1) (undo-tree-id15672 . -1) (undo-tree-id15673 . -1) (undo-tree-id15674 . -1) (undo-tree-id15675 . -1) (undo-tree-id15676 . -1) (undo-tree-id15677 . -1) (undo-tree-id15678 . -1) (undo-tree-id15679 . -1) (undo-tree-id15680 . -1) (undo-tree-id15681 . -1) (undo-tree-id15682 . -1) (undo-tree-id15683 . -1) (undo-tree-id15684 . -1) (undo-tree-id15685 . -1) (undo-tree-id15686 . -1) (undo-tree-id15687 . -1) (undo-tree-id15688 . -1) (undo-tree-id15689 . -1) (undo-tree-id15690 . -1) (undo-tree-id15691 . -1) (undo-tree-id15692 . -1) (undo-tree-id15693 . -1) (undo-tree-id15694 . -1) (undo-tree-id15695 . -1) (undo-tree-id15696 . -1) (undo-tree-id15697 . -1) (undo-tree-id15698 . -1) (undo-tree-id15699 . -1) (undo-tree-id15700 . -1) (undo-tree-id15701 . -1) (undo-tree-id15702 . -1) (undo-tree-id15703 . -1) (undo-tree-id15704 . -1) (undo-tree-id15705 . -1) (undo-tree-id15706 . -1) (undo-tree-id15707 . -1) (undo-tree-id15708 . -1) (undo-tree-id15709 . -1) (undo-tree-id15710 . -1) (undo-tree-id15711 . -1) (undo-tree-id15712 . -1) (undo-tree-id15713 . -1) (undo-tree-id15714 . -1) (undo-tree-id15715 . -1) (undo-tree-id15716 . -1) (undo-tree-id15717 . -1) (undo-tree-id15718 . -1) (undo-tree-id15719 . -1) (undo-tree-id15720 . -1) (undo-tree-id15721 . -1) (undo-tree-id15722 . -1) (undo-tree-id15723 . -1) (undo-tree-id15724 . -1) (undo-tree-id15725 . -1) (undo-tree-id15726 . -1) (undo-tree-id15727 . -1) (undo-tree-id15728 . -1) (undo-tree-id15729 . -1) (undo-tree-id15730 . -1) (undo-tree-id15731 . -1) (undo-tree-id15732 . -1) (undo-tree-id15733 . -1) (undo-tree-id15734 . -1) (undo-tree-id15735 . -1) (undo-tree-id15736 . -1) (undo-tree-id15737 . -1) (undo-tree-id15738 . -1) (undo-tree-id15739 . -1) (undo-tree-id15740 . -1) (undo-tree-id15741 . -1) (undo-tree-id15742 . -1) (undo-tree-id15743 . -1) (undo-tree-id15744 . -1) (undo-tree-id15745 . -1) (undo-tree-id15746 . -1) (undo-tree-id15747 . -1) (undo-tree-id15748 . -1) 1564) nil (25944 36086 563657 0) 0 nil])
([nil nil ((1790 . 1791) (t 25944 36086 599195 614000)) nil (25944 36160 820578 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1790) (undo-tree-id15835 . -1) (undo-tree-id15836 . -1) (undo-tree-id15837 . -1) (undo-tree-id15838 . -1) (undo-tree-id15839 . -1) (undo-tree-id15840 . -1) 1791) nil (25944 36160 820577 0) 0 nil])
([nil nil ((1790 . 1792)) nil (25944 36160 820569 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1791 1799 #s(yas--snippet nil nil #s(yas--exit 1799 nil) 72 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1799 nil) 72 nil nil nil nil)) (1791 . 1799) (#("unwrap()$0" 0 10 (fontified nil)) . 1791) (1791 . 1801) (#("u" 0 1 (fontified nil)) . 1791) (1791 . 1792) (#("unwrap()" 0 8 (fontified nil)) . -1791) (1791 . 1799) (#("u" 0 1 (fontified t)) . -1791) (undo-tree-id15830 . -1) (undo-tree-id15831 . -1) (undo-tree-id15832 . -1) (undo-tree-id15833 . -1) (undo-tree-id15834 . -1) 1792) nil (25944 36160 820564 0) 0 nil])
([nil nil ((1904 . 1905) (#("	" 0 1 (fontified nil)) . 1903) (undo-tree-id15843 . -1) (undo-tree-id15844 . -1) (undo-tree-id15845 . -1) (1902 . 1905) (t 25944 36160 855618 199000)) nil (25944 36258 738867 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2504 . 2505) (nil fontified nil 1905 . 2505) (1905 . 2505)) nil (25944 36258 738862 0) 0 nil])
([nil nil ((2403 . 2405) (2373 . 2375) (2349 . 2351) (2331 . 2333) (#("              " 0 14 (fontified t)) . 2331) (2272 . 2274) (#("              " 0 14 (fontified t)) . 2272) (2240 . 2242) (2223 . 2224) (#("      " 0 6 (fontified t)) . 2223) (2221 . 2222) (#("      " 0 6 (fontified t)) . 2221) (undo-tree-id15841 . -6) (2180 . 2181) (#("      " 0 6 (fontified t)) . 2180) (2178 . 2179) (#("      " 0 6 (fontified t)) . 2178) (undo-tree-id15842 . -6) (2118 . 2120) (2083 . 2085) (2048 . 2050) (2025 . 2027) (1963 . 1965) (#("      " 0 6 (fontified t)) . -1905) 1904) nil (25944 36258 738856 0) 0 nil])
([nil nil ((#("    use web_sys::HtmlCanvasElement;" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 15 (face font-lock-constant-face fontified t) 15 17 (fontified t) 17 34 (face font-lock-type-face fontified t) 34 35 (fontified t)) . 1331) (undo-tree-id15847 . -35) (undo-tree-id15848 . -35) (undo-tree-id15849 . -35) (undo-tree-id15850 . -35) (undo-tree-id15851 . -35) (undo-tree-id15852 . -35) (undo-tree-id15853 . -35) (undo-tree-id15854 . -35) (undo-tree-id15855 . -35) (undo-tree-id15856 . -35) (undo-tree-id15857 . -35) (undo-tree-id15858 . -35) (undo-tree-id15859 . -35) (undo-tree-id15860 . -35) (undo-tree-id15861 . -35) (t 25944 36258 775298 203000)) nil (25944 36270 798024 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1331) (undo-tree-id15846 . -1)) nil (25944 36270 798004 0) 0 nil])
([nil nil ((#("100\"" 0 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t)) . -2688) (undo-tree-id15982 . -4) (undo-tree-id15983 . -4) (undo-tree-id15984 . -4) (undo-tree-id15985 . -4) (undo-tree-id15986 . -4) (undo-tree-id15987 . -4) (undo-tree-id15988 . -4) (undo-tree-id15989 . -4) (undo-tree-id15990 . -4) (undo-tree-id15991 . -4) (undo-tree-id15992 . -4) (undo-tree-id15993 . -4) (undo-tree-id15994 . -4) (undo-tree-id15995 . -4) (undo-tree-id15996 . -4) (undo-tree-id15997 . -4) 2692 (t 25944 36270 833426 939000)) nil (25944 36307 750342 0) 0 nil])
([nil nil ((#("height=\"" 0 7 (fontified t) 7 8 (face font-lock-string-face fontified t)) . -2680) (undo-tree-id15959 . -8) (undo-tree-id15960 . -8) (undo-tree-id15961 . -8) (undo-tree-id15962 . -8) (undo-tree-id15963 . -8) (undo-tree-id15964 . -8) (undo-tree-id15965 . -8) (undo-tree-id15966 . -8) (undo-tree-id15967 . -8) (undo-tree-id15968 . -8) (undo-tree-id15969 . -8) (undo-tree-id15970 . -8) (undo-tree-id15971 . -8) (undo-tree-id15972 . -8) (undo-tree-id15973 . -8) (undo-tree-id15974 . -8) (undo-tree-id15975 . -8) (undo-tree-id15976 . -8) (undo-tree-id15977 . -8) (undo-tree-id15978 . -8) (undo-tree-id15979 . -8) (undo-tree-id15980 . -8) (undo-tree-id15981 . -8) 2688) nil (25944 36307 750325 0) 0 nil])
([nil nil ((#("200\" " 0 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t) 4 5 (fontified t)) . -2675) (undo-tree-id15933 . -5) (undo-tree-id15934 . -5) (undo-tree-id15935 . -5) (undo-tree-id15936 . -5) (undo-tree-id15937 . -5) (undo-tree-id15938 . -5) (undo-tree-id15939 . -5) (undo-tree-id15940 . -5) (undo-tree-id15941 . -5) (undo-tree-id15942 . -5) (undo-tree-id15943 . -5) (undo-tree-id15944 . -5) (undo-tree-id15945 . -5) (undo-tree-id15946 . -5) (undo-tree-id15947 . -5) (undo-tree-id15948 . -5) (undo-tree-id15949 . -5) (undo-tree-id15950 . -5) (undo-tree-id15951 . -5) (undo-tree-id15952 . -5) (undo-tree-id15953 . -5) (undo-tree-id15954 . -5) (undo-tree-id15955 . -5) (undo-tree-id15956 . -5) (undo-tree-id15957 . -5) (undo-tree-id15958 . -5) 2680) nil (25944 36307 750300 0) 0 nil])
([nil nil ((#("width=\"" 0 1 (fontified t) 1 6 (fontified t) 6 7 (face font-lock-string-face fontified t)) . -2668) (undo-tree-id15900 . -7) (undo-tree-id15901 . -7) (undo-tree-id15902 . -7) (undo-tree-id15903 . -7) (undo-tree-id15904 . -7) (undo-tree-id15905 . -7) (undo-tree-id15906 . -7) (undo-tree-id15907 . -7) (undo-tree-id15908 . -7) (undo-tree-id15909 . -7) (undo-tree-id15910 . -7) (undo-tree-id15911 . -7) (undo-tree-id15912 . -7) (undo-tree-id15913 . -7) (undo-tree-id15914 . -7) (undo-tree-id15915 . -7) (undo-tree-id15916 . -7) (undo-tree-id15917 . -7) (undo-tree-id15918 . -7) (undo-tree-id15919 . -7) (undo-tree-id15920 . -7) (undo-tree-id15921 . -7) (undo-tree-id15922 . -7) (undo-tree-id15923 . -7) (undo-tree-id15924 . -7) (undo-tree-id15925 . -7) (undo-tree-id15926 . -7) (undo-tree-id15927 . -7) (undo-tree-id15928 . -7) (undo-tree-id15929 . -7) (undo-tree-id15930 . -7) (undo-tree-id15931 . -7) (undo-tree-id15932 . -7) 2675) nil (25944 36307 750272 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2667) (undo-tree-id15862 . -1) (undo-tree-id15863 . -1) (undo-tree-id15864 . -1) (undo-tree-id15865 . -1) (undo-tree-id15866 . -1) (undo-tree-id15867 . -1) (undo-tree-id15868 . -1) (undo-tree-id15869 . -1) (undo-tree-id15870 . -1) (undo-tree-id15871 . -1) (undo-tree-id15872 . -1) (undo-tree-id15873 . -1) (undo-tree-id15874 . -1) (undo-tree-id15875 . -1) (undo-tree-id15876 . -1) (undo-tree-id15877 . -1) (undo-tree-id15878 . -1) (undo-tree-id15879 . -1) (undo-tree-id15880 . -1) (undo-tree-id15881 . -1) (undo-tree-id15882 . -1) (undo-tree-id15883 . -1) (undo-tree-id15884 . -1) (undo-tree-id15885 . -1) (undo-tree-id15886 . -1) (undo-tree-id15887 . -1) (undo-tree-id15888 . -1) (undo-tree-id15889 . -1) (undo-tree-id15890 . -1) (undo-tree-id15891 . -1) (undo-tree-id15892 . -1) (undo-tree-id15893 . -1) (undo-tree-id15894 . -1) (undo-tree-id15895 . -1) (undo-tree-id15896 . -1) (undo-tree-id15897 . -1) (undo-tree-id15898 . -1) (undo-tree-id15899 . -1) 2668) nil (25944 36307 750232 0) 0 nil])
([nil nil ((apply -6 1575 1663 undo--wrap-and-run-primitive-undo 1575 1663 ((1621 . 1624) (1576 . 1579) 1575))) nil (25944 36337 117770 0) 0 nil])
([nil nil ((2662 . 2668) (t 25944 36337 154826 451000)) nil (25944 36423 462158 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2667) (undo-tree-id16017 . -1) (undo-tree-id16018 . -1) 2668) nil (25944 36423 462157 0) 0 nil])
([nil nil ((2667 . 2668)) nil (25944 36423 462154 0) 0 nil])
([nil nil ((2667 . 2669)) nil (25944 36423 462153 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2667) (undo-tree-id16010 . -1) (undo-tree-id16011 . -1) (undo-tree-id16012 . -1) (undo-tree-id16013 . -1) (undo-tree-id16014 . -1) (#("=" 0 1 (fontified t)) . -2668) (undo-tree-id16015 . -1) (undo-tree-id16016 . -1) 2669) nil (25944 36423 462151 0) 0 nil])
([nil nil ((2667 . 2670)) nil (25944 36423 462142 0) 0 nil])
([nil nil ((2669 . 2674)) nil (25944 36423 462141 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-string-face fontified t)) . -2671) (undo-tree-id15998 . -1) (undo-tree-id15999 . -1) (undo-tree-id16000 . -1) (undo-tree-id16001 . -1) (undo-tree-id16002 . -1) (undo-tree-id16003 . -1) (#("0" 0 1 (face font-lock-string-face fontified t)) . -2672) (undo-tree-id16004 . -1) (undo-tree-id16005 . -1) (undo-tree-id16006 . -1) (undo-tree-id16007 . -1) (#("0" 0 1 (face font-lock-string-face fontified t)) . -2673) (undo-tree-id16008 . -1) (undo-tree-id16009 . -1) 2674) nil (25944 36423 462139 0) 0 nil])
([nil nil ((2671 . 2675)) nil (25944 36423 462115 0) 0 nil])
([nil nil ((2443 . 2445) (t 25944 36423 498592 375000)) nil (25944 36595 471241 0) 0 nil])
([nil nil ((2445 . 2447)) nil (25944 36595 471240 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2445) (undo-tree-id16032 . -1) (undo-tree-id16033 . -1) (undo-tree-id16034 . -1) (undo-tree-id16035 . -1) (undo-tree-id16036 . -1) (#("e" 0 1 (fontified t)) . -2446) (undo-tree-id16037 . -1) (undo-tree-id16038 . -1) 2447) nil (25944 36595 471239 0) 0 nil])
([nil nil ((2445 . 2447)) nil (25944 36595 471230 0) 0 nil])
([nil nil ((2445 . 2457) (#("dr" 0 2 (fontified nil)) . 2445) (2445 . 2447) (#("drawing_area" 0 12 (fontified nil)) . -2445) (2445 . 2457) (#("dr" 0 2 (fontified t)) . -2445) (undo-tree-id16026 . -2) (undo-tree-id16027 . -1) (undo-tree-id16028 . -1) (undo-tree-id16029 . -1) (undo-tree-id16030 . -2) (undo-tree-id16031 . -2) 2447) nil (25944 36595 471228 0) 0 nil])
([nil nil ((2457 . 2461)) nil (25944 36595 471219 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2458 2467 #s(yas--snippet nil nil #s(yas--exit 2467 nil) 73 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 2467 nil) 73 nil nil nil nil)) (2458 . 2467) (#("present()$0" 0 11 (fontified nil)) . 2458) (2458 . 2469) (#("pre" 0 3 (fontified nil)) . 2458) (2458 . 2461) (#("present()" 0 9 (fontified nil)) . -2458) (2458 . 2467) (#("pre" 0 3 (fontified t)) . -2458) (undo-tree-id16019 . -3) (undo-tree-id16020 . -1) (undo-tree-id16021 . -1) (undo-tree-id16022 . -2) (undo-tree-id16023 . -2) (undo-tree-id16024 . -3) (undo-tree-id16025 . -3) 2461) nil (25944 36595 471216 0) 0 nil])
([nil nil ((2467 . 2468)) nil (25944 36595 471196 0) 0 nil])
([nil nil ((2467 . 2469) (t 25944 36595 507497 454000)) nil (25944 36599 51539 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2468 2476 #s(yas--snippet nil nil #s(yas--exit 2476 nil) 74 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 2476 nil) 74 nil nil nil nil)) (2468 . 2476) (#("unwrap()$0" 0 10 (fontified nil)) . 2468) (2468 . 2478) (#("u" 0 1 (fontified nil)) . 2468) (2468 . 2469) (#("unwrap()" 0 8 (fontified nil)) . -2468) (2468 . 2476) (#("u" 0 1 (fontified t)) . -2468) (undo-tree-id16039 . -1) (undo-tree-id16040 . -1) (undo-tree-id16041 . -1) (undo-tree-id16042 . -1) (undo-tree-id16043 . -1) 2469) nil (25944 36599 51535 0) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-string-face fontified t)) . -2703) (undo-tree-id16046 . -1) (undo-tree-id16047 . -1) (undo-tree-id16048 . -1) (undo-tree-id16049 . -1) (undo-tree-id16050 . -1) (undo-tree-id16051 . -1) (undo-tree-id16052 . -1) (undo-tree-id16053 . -1) (undo-tree-id16054 . -1) (undo-tree-id16055 . -1) (undo-tree-id16056 . -1) (undo-tree-id16057 . -1) (undo-tree-id16058 . -1) (undo-tree-id16059 . -1) (undo-tree-id16060 . -1) (undo-tree-id16061 . -1) (undo-tree-id16062 . -1) (undo-tree-id16063 . -1) (undo-tree-id16064 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . -2704) (undo-tree-id16065 . -1) (undo-tree-id16066 . -1) (undo-tree-id16067 . -1) (undo-tree-id16068 . -1) (undo-tree-id16069 . -1) (undo-tree-id16070 . -1) (undo-tree-id16071 . -1) (undo-tree-id16072 . -1) (undo-tree-id16073 . -1) (undo-tree-id16074 . -1) (undo-tree-id16075 . -1) (undo-tree-id16076 . -1) (undo-tree-id16077 . -1) (undo-tree-id16078 . -1) (undo-tree-id16079 . -1) (undo-tree-id16080 . -1) (undo-tree-id16081 . -1) (undo-tree-id16082 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -2705) (undo-tree-id16083 . -1) (undo-tree-id16084 . -1) (undo-tree-id16085 . -1) (undo-tree-id16086 . -1) (undo-tree-id16087 . -1) (undo-tree-id16088 . -1) (undo-tree-id16089 . -1) (undo-tree-id16090 . -1) (undo-tree-id16091 . -1) (undo-tree-id16092 . -1) (undo-tree-id16093 . -1) (undo-tree-id16094 . -1) (undo-tree-id16095 . -1) (undo-tree-id16096 . -1) (undo-tree-id16097 . -1) (undo-tree-id16098 . -1) (undo-tree-id16099 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -2706) (undo-tree-id16100 . -1) (undo-tree-id16101 . -1) (undo-tree-id16102 . -1) (undo-tree-id16103 . -1) (undo-tree-id16104 . -1) (undo-tree-id16105 . -1) (undo-tree-id16106 . -1) (undo-tree-id16107 . -1) (undo-tree-id16108 . -1) (undo-tree-id16109 . -1) (undo-tree-id16110 . -1) (undo-tree-id16111 . -1) (undo-tree-id16112 . -1) (undo-tree-id16113 . -1) (undo-tree-id16114 . -1) (undo-tree-id16115 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -2707) (undo-tree-id16116 . -1) (undo-tree-id16117 . -1) (undo-tree-id16118 . -1) (undo-tree-id16119 . -1) (undo-tree-id16120 . -1) (undo-tree-id16121 . -1) (undo-tree-id16122 . -1) (undo-tree-id16123 . -1) (undo-tree-id16124 . -1) (undo-tree-id16125 . -1) (undo-tree-id16126 . -1) (undo-tree-id16127 . -1) (undo-tree-id16128 . -1) (undo-tree-id16129 . -1) (undo-tree-id16130 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -2708) (undo-tree-id16131 . -1) (undo-tree-id16132 . -1) (undo-tree-id16133 . -1) (undo-tree-id16134 . -1) (undo-tree-id16135 . -1) (undo-tree-id16136 . -1) (undo-tree-id16137 . -1) (undo-tree-id16138 . -1) (undo-tree-id16139 . -1) (undo-tree-id16140 . -1) (undo-tree-id16141 . -1) (undo-tree-id16142 . -1) 2709 (t 25944 36599 88275 56000)) nil (25944 36669 502255 0) 0 nil])
([nil nil ((2703 . 2706)) nil (25944 36669 502156 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face fontified t)) . -2705) (undo-tree-id16044 . -1) (undo-tree-id16045 . -1) 2706) nil (25944 36669 502154 0) 0 nil])
([nil nil ((2705 . 2714)) nil (25944 36669 502142 0) 0 nil])
([nil nil ((#("center\"" 0 7 (face font-lock-string-face fontified t)) . -2708) (undo-tree-id16643 . -6) (undo-tree-id16644 . -7) (undo-tree-id16645 . 1) (undo-tree-id16646 . -6) (undo-tree-id16647 . -6) (undo-tree-id16648 . -6) (undo-tree-id16649 . -6) (undo-tree-id16650 . -6) (undo-tree-id16651 . -6) (undo-tree-id16652 . -6) (undo-tree-id16653 . -6) (undo-tree-id16654 . -6) (undo-tree-id16655 . -6) (undo-tree-id16656 . -6) (undo-tree-id16657 . -6) (undo-tree-id16658 . -6) (undo-tree-id16659 . -6) (undo-tree-id16660 . -6) (undo-tree-id16661 . -6) (undo-tree-id16662 . -6) (undo-tree-id16663 . -6) (undo-tree-id16664 . -6) (undo-tree-id16665 . -6) (undo-tree-id16666 . -6) (undo-tree-id16667 . -6) (undo-tree-id16668 . -6) (undo-tree-id16669 . -6) (undo-tree-id16670 . -6) (undo-tree-id16671 . -6) (undo-tree-id16672 . -6) (undo-tree-id16673 . -6) (undo-tree-id16674 . -6) (undo-tree-id16675 . -6) (undo-tree-id16676 . -6) (undo-tree-id16677 . -6) (undo-tree-id16678 . -6) (undo-tree-id16679 . -6) (undo-tree-id16680 . -6) (undo-tree-id16681 . -6) (undo-tree-id16682 . -6) (undo-tree-id16683 . -6) (undo-tree-id16684 . -6) (undo-tree-id16685 . -6) (undo-tree-id16686 . -6) (undo-tree-id16687 . -6) (undo-tree-id16688 . -6) (undo-tree-id16689 . -6) (undo-tree-id16690 . -6) (undo-tree-id16691 . -6) (undo-tree-id16692 . -6) (undo-tree-id16693 . -6) (undo-tree-id16694 . -6) (undo-tree-id16695 . -6) (undo-tree-id16696 . -6) (undo-tree-id16697 . -6) (undo-tree-id16698 . -6) (undo-tree-id16699 . -6) (undo-tree-id16700 . -6) (undo-tree-id16701 . -6) (undo-tree-id16702 . -6) (undo-tree-id16703 . -6) (undo-tree-id16704 . -6) (undo-tree-id16705 . -6) (undo-tree-id16706 . -6) (undo-tree-id16707 . -6) (undo-tree-id16708 . -6) (undo-tree-id16709 . -6) (undo-tree-id16710 . -6) (undo-tree-id16711 . -6) (undo-tree-id16712 . -6) (undo-tree-id16713 . -6) (undo-tree-id16714 . -6) (undo-tree-id16715 . -6) (undo-tree-id16716 . -6) (undo-tree-id16717 . -6) (undo-tree-id16718 . -6) (undo-tree-id16719 . -6) (undo-tree-id16720 . -6) (undo-tree-id16721 . -6) (undo-tree-id16722 . -6) (undo-tree-id16723 . -6) (undo-tree-id16724 . -6) (undo-tree-id16725 . -6) (undo-tree-id16726 . -6) (undo-tree-id16727 . -6) (undo-tree-id16728 . -6) (undo-tree-id16729 . -6) (undo-tree-id16730 . -6) (undo-tree-id16731 . -6) (undo-tree-id16732 . -6) (undo-tree-id16733 . -6) (undo-tree-id16734 . -6) (undo-tree-id16735 . -6) (undo-tree-id16736 . -6) (undo-tree-id16737 . -7) (undo-tree-id16738 . -7) (undo-tree-id16739 . -7) (undo-tree-id16740 . -7) (undo-tree-id16741 . -7) 2715 (t 25944 36669 539143 565000)) nil (25944 36709 357421 0) 0 nil])
([nil nil ((#("text-" 0 5 (face font-lock-string-face fontified t)) . -2703) (undo-tree-id16537 . -5) (undo-tree-id16538 . -5) (undo-tree-id16539 . -2) (undo-tree-id16540 . -5) (undo-tree-id16541 . -5) (undo-tree-id16542 . -5) (undo-tree-id16543 . -5) (undo-tree-id16544 . -5) (undo-tree-id16545 . -5) (undo-tree-id16546 . -5) (undo-tree-id16547 . -5) (undo-tree-id16548 . -5) (undo-tree-id16549 . -5) (undo-tree-id16550 . -5) (undo-tree-id16551 . -5) (undo-tree-id16552 . -5) (undo-tree-id16553 . -5) (undo-tree-id16554 . -5) (undo-tree-id16555 . -5) (undo-tree-id16556 . -5) (undo-tree-id16557 . -5) (undo-tree-id16558 . -5) (undo-tree-id16559 . -5) (undo-tree-id16560 . -5) (undo-tree-id16561 . -5) (undo-tree-id16562 . -5) (undo-tree-id16563 . -5) (undo-tree-id16564 . -5) (undo-tree-id16565 . -5) (undo-tree-id16566 . -5) (undo-tree-id16567 . -5) (undo-tree-id16568 . -5) (undo-tree-id16569 . -5) (undo-tree-id16570 . -5) (undo-tree-id16571 . -5) (undo-tree-id16572 . -5) (undo-tree-id16573 . -5) (undo-tree-id16574 . -5) (undo-tree-id16575 . -5) (undo-tree-id16576 . -5) (undo-tree-id16577 . -5) (undo-tree-id16578 . -5) (undo-tree-id16579 . -5) (undo-tree-id16580 . -5) (undo-tree-id16581 . -5) (undo-tree-id16582 . -5) (undo-tree-id16583 . -5) (undo-tree-id16584 . -5) (undo-tree-id16585 . -5) (undo-tree-id16586 . -5) (undo-tree-id16587 . -5) (undo-tree-id16588 . -5) (undo-tree-id16589 . -5) (undo-tree-id16590 . -5) (undo-tree-id16591 . -5) (undo-tree-id16592 . -5) (undo-tree-id16593 . -5) (undo-tree-id16594 . -5) (undo-tree-id16595 . -5) (undo-tree-id16596 . -5) (undo-tree-id16597 . -5) (undo-tree-id16598 . -5) (undo-tree-id16599 . -5) (undo-tree-id16600 . -5) (undo-tree-id16601 . -5) (undo-tree-id16602 . -5) (undo-tree-id16603 . -5) (undo-tree-id16604 . -5) (undo-tree-id16605 . -5) (undo-tree-id16606 . -5) (undo-tree-id16607 . -5) (undo-tree-id16608 . -5) (undo-tree-id16609 . -5) (undo-tree-id16610 . -5) (undo-tree-id16611 . -5) (undo-tree-id16612 . -5) (undo-tree-id16613 . -5) (undo-tree-id16614 . -5) (undo-tree-id16615 . -5) (undo-tree-id16616 . -5) (undo-tree-id16617 . -5) (undo-tree-id16618 . -5) (undo-tree-id16619 . -5) (undo-tree-id16620 . -5) (undo-tree-id16621 . -5) (undo-tree-id16622 . -5) (undo-tree-id16623 . -5) (undo-tree-id16624 . -5) (undo-tree-id16625 . -5) (undo-tree-id16626 . -5) (undo-tree-id16627 . -5) (undo-tree-id16628 . -5) (undo-tree-id16629 . -5) (undo-tree-id16630 . -5) (undo-tree-id16631 . -5) (undo-tree-id16632 . -5) (undo-tree-id16633 . -5) (undo-tree-id16634 . -5) (undo-tree-id16635 . -5) (undo-tree-id16636 . -5) (undo-tree-id16637 . -5) (undo-tree-id16638 . -5) (undo-tree-id16639 . -5) (undo-tree-id16640 . -5) (undo-tree-id16641 . -5) (undo-tree-id16642 . -5) 2708) nil (25944 36709 357318 0) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -2702) (undo-tree-id16412 . -1) (undo-tree-id16413 . -1) (undo-tree-id16414 . -1) (undo-tree-id16415 . -1) (undo-tree-id16416 . -1) (undo-tree-id16417 . -1) (undo-tree-id16418 . -1) (undo-tree-id16419 . -1) (undo-tree-id16420 . -1) (undo-tree-id16421 . -1) (undo-tree-id16422 . -1) (undo-tree-id16423 . -1) (undo-tree-id16424 . -1) (undo-tree-id16425 . -1) (undo-tree-id16426 . -1) (undo-tree-id16427 . -1) (undo-tree-id16428 . -1) (undo-tree-id16429 . -1) (undo-tree-id16430 . -1) (undo-tree-id16431 . -1) (undo-tree-id16432 . -1) (undo-tree-id16433 . -1) (undo-tree-id16434 . -1) (undo-tree-id16435 . -1) (undo-tree-id16436 . -1) (undo-tree-id16437 . -1) (undo-tree-id16438 . -1) (undo-tree-id16439 . -1) (undo-tree-id16440 . -1) (undo-tree-id16441 . -1) (undo-tree-id16442 . -1) (undo-tree-id16443 . -1) (undo-tree-id16444 . -1) (undo-tree-id16445 . -1) (undo-tree-id16446 . -1) (undo-tree-id16447 . -1) (undo-tree-id16448 . -1) (undo-tree-id16449 . -1) (undo-tree-id16450 . -1) (undo-tree-id16451 . -1) (undo-tree-id16452 . -1) (undo-tree-id16453 . -1) (undo-tree-id16454 . -1) (undo-tree-id16455 . -1) (undo-tree-id16456 . -1) (undo-tree-id16457 . -1) (undo-tree-id16458 . -1) (undo-tree-id16459 . -1) (undo-tree-id16460 . -1) (undo-tree-id16461 . -1) (undo-tree-id16462 . -1) (undo-tree-id16463 . -1) (undo-tree-id16464 . -1) (undo-tree-id16465 . -1) (undo-tree-id16466 . -1) (undo-tree-id16467 . -1) (undo-tree-id16468 . -1) (undo-tree-id16469 . -1) (undo-tree-id16470 . -1) (undo-tree-id16471 . -1) (undo-tree-id16472 . -1) (undo-tree-id16473 . -1) (undo-tree-id16474 . -1) (undo-tree-id16475 . -1) (undo-tree-id16476 . -1) (undo-tree-id16477 . -1) (undo-tree-id16478 . -1) (undo-tree-id16479 . -1) (undo-tree-id16480 . -1) (undo-tree-id16481 . -1) (undo-tree-id16482 . -1) (undo-tree-id16483 . -1) (undo-tree-id16484 . -1) (undo-tree-id16485 . -1) (undo-tree-id16486 . -1) (undo-tree-id16487 . -1) (undo-tree-id16488 . -1) (undo-tree-id16489 . -1) (undo-tree-id16490 . -1) (undo-tree-id16491 . -1) (undo-tree-id16492 . -1) (undo-tree-id16493 . -1) (undo-tree-id16494 . -1) (undo-tree-id16495 . -1) (undo-tree-id16496 . -1) (undo-tree-id16497 . -1) (undo-tree-id16498 . -1) (undo-tree-id16499 . -1) (undo-tree-id16500 . -1) (undo-tree-id16501 . -1) (undo-tree-id16502 . -1) (undo-tree-id16503 . -1) (undo-tree-id16504 . -1) (undo-tree-id16505 . -1) (undo-tree-id16506 . -1) (undo-tree-id16507 . -1) (undo-tree-id16508 . -1) (undo-tree-id16509 . -1) (undo-tree-id16510 . -1) (undo-tree-id16511 . -1) (undo-tree-id16512 . -1) (undo-tree-id16513 . -1) (undo-tree-id16514 . -1) (undo-tree-id16515 . -1) (undo-tree-id16516 . -1) (undo-tree-id16517 . -1) (undo-tree-id16518 . -1) (undo-tree-id16519 . -1) (undo-tree-id16520 . -1) (undo-tree-id16521 . -1) (undo-tree-id16522 . -1) (undo-tree-id16523 . -1) (undo-tree-id16524 . -1) (undo-tree-id16525 . -1) (undo-tree-id16526 . -1) (undo-tree-id16527 . -1) (undo-tree-id16528 . -1) (undo-tree-id16529 . -1) (undo-tree-id16530 . -1) (undo-tree-id16531 . -1) (undo-tree-id16532 . -1) (undo-tree-id16533 . -1) (undo-tree-id16534 . -1) (undo-tree-id16535 . -1) (undo-tree-id16536 . -1) 2703) nil (25944 36709 357212 0) 0 nil])
([nil nil ((#("class=" 0 6 (fontified t)) . -2696) (undo-tree-id16282 . -6) (undo-tree-id16283 . -6) (undo-tree-id16284 . -6) (undo-tree-id16285 . -6) (undo-tree-id16286 . -6) (undo-tree-id16287 . -6) (undo-tree-id16288 . -6) (undo-tree-id16289 . -6) (undo-tree-id16290 . -6) (undo-tree-id16291 . -6) (undo-tree-id16292 . -6) (undo-tree-id16293 . -6) (undo-tree-id16294 . -6) (undo-tree-id16295 . -6) (undo-tree-id16296 . -6) (undo-tree-id16297 . -6) (undo-tree-id16298 . -6) (undo-tree-id16299 . -6) (undo-tree-id16300 . -6) (undo-tree-id16301 . -6) (undo-tree-id16302 . -6) (undo-tree-id16303 . -6) (undo-tree-id16304 . -6) (undo-tree-id16305 . -6) (undo-tree-id16306 . -6) (undo-tree-id16307 . -6) (undo-tree-id16308 . -6) (undo-tree-id16309 . -6) (undo-tree-id16310 . -6) (undo-tree-id16311 . -6) (undo-tree-id16312 . -6) (undo-tree-id16313 . -6) (undo-tree-id16314 . -6) (undo-tree-id16315 . -6) (undo-tree-id16316 . -6) (undo-tree-id16317 . -6) (undo-tree-id16318 . -6) (undo-tree-id16319 . -6) (undo-tree-id16320 . -6) (undo-tree-id16321 . -6) (undo-tree-id16322 . -6) (undo-tree-id16323 . -6) (undo-tree-id16324 . -6) (undo-tree-id16325 . -6) (undo-tree-id16326 . -6) (undo-tree-id16327 . -6) (undo-tree-id16328 . -6) (undo-tree-id16329 . -6) (undo-tree-id16330 . -6) (undo-tree-id16331 . -6) (undo-tree-id16332 . -6) (undo-tree-id16333 . -6) (undo-tree-id16334 . -6) (undo-tree-id16335 . -6) (undo-tree-id16336 . -6) (undo-tree-id16337 . -6) (undo-tree-id16338 . -6) (undo-tree-id16339 . -6) (undo-tree-id16340 . -6) (undo-tree-id16341 . -6) (undo-tree-id16342 . -6) (undo-tree-id16343 . -6) (undo-tree-id16344 . -6) (undo-tree-id16345 . -6) (undo-tree-id16346 . -6) (undo-tree-id16347 . -6) (undo-tree-id16348 . -6) (undo-tree-id16349 . -6) (undo-tree-id16350 . -6) (undo-tree-id16351 . -6) (undo-tree-id16352 . -6) (undo-tree-id16353 . -6) (undo-tree-id16354 . -6) (undo-tree-id16355 . -6) (undo-tree-id16356 . -6) (undo-tree-id16357 . -6) (undo-tree-id16358 . -6) (undo-tree-id16359 . -6) (undo-tree-id16360 . -6) (undo-tree-id16361 . -6) (undo-tree-id16362 . -6) (undo-tree-id16363 . -6) (undo-tree-id16364 . -6) (undo-tree-id16365 . -6) (undo-tree-id16366 . -6) (undo-tree-id16367 . -6) (undo-tree-id16368 . -6) (undo-tree-id16369 . -6) (undo-tree-id16370 . -6) (undo-tree-id16371 . -6) (undo-tree-id16372 . -6) (undo-tree-id16373 . -6) (undo-tree-id16374 . -6) (undo-tree-id16375 . -6) (undo-tree-id16376 . -6) (undo-tree-id16377 . -6) (undo-tree-id16378 . -6) (undo-tree-id16379 . -6) (undo-tree-id16380 . -6) (undo-tree-id16381 . -6) (undo-tree-id16382 . -6) (undo-tree-id16383 . -6) (undo-tree-id16384 . -6) (undo-tree-id16385 . -6) (undo-tree-id16386 . -6) (undo-tree-id16387 . -6) (undo-tree-id16388 . -6) (undo-tree-id16389 . -6) (undo-tree-id16390 . -6) (undo-tree-id16391 . -6) (undo-tree-id16392 . -6) (undo-tree-id16393 . -6) (undo-tree-id16394 . -6) (undo-tree-id16395 . -6) (undo-tree-id16396 . -6) (undo-tree-id16397 . -6) (undo-tree-id16398 . -6) (undo-tree-id16399 . -6) (undo-tree-id16400 . -6) (undo-tree-id16401 . -6) (undo-tree-id16402 . -6) (undo-tree-id16403 . -6) (undo-tree-id16404 . -6) (undo-tree-id16405 . -6) (undo-tree-id16406 . -6) (undo-tree-id16407 . -6) (undo-tree-id16408 . -6) (undo-tree-id16409 . -6) (undo-tree-id16410 . -6) (undo-tree-id16411 . -6) 2702) nil (25944 36709 357087 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2695) (undo-tree-id16149 . -1) (undo-tree-id16150 . -1) (undo-tree-id16151 . -1) (undo-tree-id16152 . -1) (undo-tree-id16153 . -1) (undo-tree-id16154 . -1) (undo-tree-id16155 . -1) (undo-tree-id16156 . -1) (undo-tree-id16157 . -1) (undo-tree-id16158 . -1) (undo-tree-id16159 . -1) (undo-tree-id16160 . -1) (undo-tree-id16161 . -1) (undo-tree-id16162 . -1) (undo-tree-id16163 . -1) (undo-tree-id16164 . -1) (undo-tree-id16165 . -1) (undo-tree-id16166 . -1) (undo-tree-id16167 . -1) (undo-tree-id16168 . -1) (undo-tree-id16169 . -1) (undo-tree-id16170 . -1) (undo-tree-id16171 . -1) (undo-tree-id16172 . -1) (undo-tree-id16173 . -1) (undo-tree-id16174 . -1) (undo-tree-id16175 . -1) (undo-tree-id16176 . -1) (undo-tree-id16177 . -1) (undo-tree-id16178 . -1) (undo-tree-id16179 . -1) (undo-tree-id16180 . -1) (undo-tree-id16181 . -1) (undo-tree-id16182 . -1) (undo-tree-id16183 . -1) (undo-tree-id16184 . -1) (undo-tree-id16185 . -1) (undo-tree-id16186 . -1) (undo-tree-id16187 . -1) (undo-tree-id16188 . -1) (undo-tree-id16189 . -1) (undo-tree-id16190 . -1) (undo-tree-id16191 . -1) (undo-tree-id16192 . -1) (undo-tree-id16193 . -1) (undo-tree-id16194 . -1) (undo-tree-id16195 . -1) (undo-tree-id16196 . -1) (undo-tree-id16197 . -1) (undo-tree-id16198 . -1) (undo-tree-id16199 . -1) (undo-tree-id16200 . -1) (undo-tree-id16201 . -1) (undo-tree-id16202 . -1) (undo-tree-id16203 . -1) (undo-tree-id16204 . -1) (undo-tree-id16205 . -1) (undo-tree-id16206 . -1) (undo-tree-id16207 . -1) (undo-tree-id16208 . -1) (undo-tree-id16209 . -1) (undo-tree-id16210 . -1) (undo-tree-id16211 . -1) (undo-tree-id16212 . -1) (undo-tree-id16213 . -1) (undo-tree-id16214 . -1) (undo-tree-id16215 . -1) (undo-tree-id16216 . -1) (undo-tree-id16217 . -1) (undo-tree-id16218 . -1) (undo-tree-id16219 . -1) (undo-tree-id16220 . -1) (undo-tree-id16221 . -1) (undo-tree-id16222 . -1) (undo-tree-id16223 . -1) (undo-tree-id16224 . -1) (undo-tree-id16225 . -1) (undo-tree-id16226 . -1) (undo-tree-id16227 . -1) (undo-tree-id16228 . -1) (undo-tree-id16229 . -1) (undo-tree-id16230 . -1) (undo-tree-id16231 . -1) (undo-tree-id16232 . -1) (undo-tree-id16233 . -1) (undo-tree-id16234 . -1) (undo-tree-id16235 . -1) (undo-tree-id16236 . -1) (undo-tree-id16237 . -1) (undo-tree-id16238 . -1) (undo-tree-id16239 . -1) (undo-tree-id16240 . -1) (undo-tree-id16241 . -1) (undo-tree-id16242 . -1) (undo-tree-id16243 . -1) (undo-tree-id16244 . -1) (undo-tree-id16245 . -1) (undo-tree-id16246 . -1) (undo-tree-id16247 . -1) (undo-tree-id16248 . -1) (undo-tree-id16249 . -1) (undo-tree-id16250 . -1) (undo-tree-id16251 . -1) (undo-tree-id16252 . -1) (undo-tree-id16253 . -1) (undo-tree-id16254 . -1) (undo-tree-id16255 . -1) (undo-tree-id16256 . -1) (undo-tree-id16257 . -1) (undo-tree-id16258 . -1) (undo-tree-id16259 . -1) (undo-tree-id16260 . -1) (undo-tree-id16261 . -1) (undo-tree-id16262 . -1) (undo-tree-id16263 . -1) (undo-tree-id16264 . -1) (undo-tree-id16265 . -1) (undo-tree-id16266 . -1) (undo-tree-id16267 . -1) (undo-tree-id16268 . -1) (undo-tree-id16269 . -1) (undo-tree-id16270 . -1) (undo-tree-id16271 . -1) (undo-tree-id16272 . -1) (undo-tree-id16273 . -1) (undo-tree-id16274 . -1) (undo-tree-id16275 . -1) (undo-tree-id16276 . -1) (undo-tree-id16277 . -1) (undo-tree-id16278 . -1) (undo-tree-id16279 . -1) (undo-tree-id16280 . -1) (undo-tree-id16281 . -1) 2696) nil (25944 36709 356958 0) 0 nil])
([nil nil ((2680 . 2687)) nil (25944 36709 356820 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -2685) (undo-tree-id16143 . -1) (undo-tree-id16144 . -1) (undo-tree-id16145 . -1) (undo-tree-id16146 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -2686) (undo-tree-id16147 . -1) (undo-tree-id16148 . -1) 2687) nil (25944 36709 356818 0) 0 nil])
([nil nil ((2685 . 2692)) nil (25944 36709 356801 0) 0 nil])
([nil nil ((#("	<div class=\"col-md-6\">" 0 1 (fontified t) 1 2 (fontified t syntax-table (1)) 2 12 (fontified t) 12 22 (face font-lock-string-face fontified t) 22 23 (fontified t syntax-table (1))) . 2563) (undo-tree-id16756 . -23) (undo-tree-id16757 . -23) (undo-tree-id16758 . -23) (undo-tree-id16759 . -23) (undo-tree-id16760 . -23) (undo-tree-id16761 . -23) (undo-tree-id16762 . -23) (undo-tree-id16763 . -23) (undo-tree-id16764 . -23) (undo-tree-id16765 . -23) (undo-tree-id16766 . -23) (undo-tree-id16767 . -23) (undo-tree-id16768 . -23) (undo-tree-id16769 . -23) (t 25944 36709 394327 647000)) nil (25944 36749 524059 0) 0 nil])
([nil nil ((#("	</div>    " 0 1 (fontified t) 1 2 (syntax-table (1) fontified t) 2 6 (fontified t) 6 7 (syntax-table (1) fontified t) 7 11 (fontified t)) . 3134) (undo-tree-id16742 . -11) (undo-tree-id16743 . -11) (undo-tree-id16744 . -11) (undo-tree-id16745 . -11) (undo-tree-id16746 . -11) (undo-tree-id16747 . -11) (undo-tree-id16748 . -11) (undo-tree-id16749 . -11) (undo-tree-id16750 . -11) (undo-tree-id16751 . -11) (undo-tree-id16752 . -11) (undo-tree-id16753 . -11) (undo-tree-id16754 . -11) (undo-tree-id16755 . -11)) nil (25944 36749 524041 0) 0 nil])
([nil nil ((#("            .margin(5)" 0 22 (fontified t)) . 1985) (undo-tree-id16781 . -22) (undo-tree-id16782 . -22) (undo-tree-id16783 . -22) (undo-tree-id16784 . -22) (undo-tree-id16785 . -22) (undo-tree-id16786 . -22) (undo-tree-id16787 . -22) (undo-tree-id16788 . -22) (undo-tree-id16789 . -22) (undo-tree-id16790 . -22) (undo-tree-id16791 . -22) (undo-tree-id16792 . -22) (undo-tree-id16793 . -22) (undo-tree-id16794 . -22) (undo-tree-id16795 . -22) (undo-tree-id16796 . -22) (undo-tree-id16797 . -22) (undo-tree-id16798 . -22) (undo-tree-id16799 . -22) (undo-tree-id16800 . -22) (undo-tree-id16801 . -22) (undo-tree-id16802 . -22) (undo-tree-id16803 . -22) (undo-tree-id16804 . -22) (undo-tree-id16805 . -22) (undo-tree-id16806 . -22) (t 25944 36749 562057 223000)) nil (25944 36795 442487 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1985) (undo-tree-id16780 . -1)) nil (25944 36795 442459 0) 0 nil])
([nil nil ((#("	drawing_area.fill(&RGBColor(200,200,200)).unwrap();" 0 1 (fontified t) 1 19 (fontified t) 19 20 (face rust-ampersand-face fontified t) 20 28 (face font-lock-type-face fontified t) 28 51 (fontified t) 51 52 (fontified t rear-nonsticky t)) . 1820) (undo-tree-id16771 . -15) (undo-tree-id16772 . -15) (undo-tree-id16773 . -15) (undo-tree-id16774 . -15) (undo-tree-id16775 . -15) (undo-tree-id16776 . -15) (undo-tree-id16777 . -15) (undo-tree-id16778 . -15) (undo-tree-id16779 . -52)) nil (25944 36795 442456 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1820) (undo-tree-id16770 . -1)) nil (25944 36822 594296 0) 0 nil])
([nil nil ((2097 . 2101) (t 25944 36823 228258 721000)) nil (25944 36870 830509 0) 0 nil] [nil nil ((#("	chart.configure_mesh().draw().unwrap();" 0 1 (fontified t) 1 40 (fontified t)) . 2074) (undo-tree-id16808 . -40) (undo-tree-id16809 . -40) (undo-tree-id16810 . -40) (undo-tree-id16811 . -40) (undo-tree-id16812 . -40) (undo-tree-id16813 . -40) (undo-tree-id16814 . -40) (undo-tree-id16815 . -40) (undo-tree-id16816 . -40) (undo-tree-id16817 . -40) (undo-tree-id16818 . -40) (undo-tree-id16819 . -40) (undo-tree-id16820 . -40) (undo-tree-id16821 . -40) (undo-tree-id16822 . -40) (undo-tree-id16823 . -40) (t 25944 36795 479632 272000)) ((2074 . 2114)) (25944 36822 124549 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2098 2112 #s(yas--snippet nil nil #s(yas--exit 2112 nil) 75 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 2112 nil) 75 nil nil nil nil)) (2098 . 2112) (#("disable_mesh()$0" 0 16 (fontified nil)) . 2098) (2098 . 2114) (#("dis" 0 3 (fontified nil)) . 2098) (2098 . 2101) (#("disable_mesh()" 0 14 (fontified nil)) . -2098) (2098 . 2112) (#("dis" 0 3 (fontified t)) . -2098) (undo-tree-id16824 . -3) (undo-tree-id16825 . -1) (undo-tree-id16826 . -1) (undo-tree-id16827 . -2) (undo-tree-id16828 . -2) (undo-tree-id16829 . -3) (undo-tree-id16830 . -3) (undo-tree-id16831 . -3) (undo-tree-id16832 . -3) 2101) nil (25944 36921 349210 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2074) (undo-tree-id16807 . -1)) ((2074 . 2075) (t 25944 36816 159943 378000)) (25944 36816 122752 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -2184) (undo-tree-id18282 . -1) (undo-tree-id18283 . -1) (undo-tree-id18284 . -1) (undo-tree-id18285 . -1) (undo-tree-id18286 . -1) (undo-tree-id18287 . -1) (undo-tree-id18288 . -1) (undo-tree-id18289 . -1) (undo-tree-id18290 . -1) (undo-tree-id18291 . -1) (undo-tree-id18292 . -1) (undo-tree-id18293 . -1) (undo-tree-id18294 . -1) (undo-tree-id18295 . -1) (undo-tree-id18296 . -1) (undo-tree-id18297 . -1) (undo-tree-id18298 . -1) (undo-tree-id18299 . -1) (undo-tree-id18300 . -1) (undo-tree-id18301 . -1) (undo-tree-id18302 . -1) (undo-tree-id18303 . -1) (undo-tree-id18304 . -1) (undo-tree-id18305 . -1) (#("5" 0 1 (fontified t)) . -2185) (undo-tree-id18306 . -1) (undo-tree-id18307 . -1) (undo-tree-id18308 . -1) (undo-tree-id18309 . -1) (undo-tree-id18310 . -1) (undo-tree-id18311 . -1) (undo-tree-id18312 . -1) (undo-tree-id18313 . -1) (undo-tree-id18314 . -1) (undo-tree-id18315 . -1) (undo-tree-id18316 . -1) (undo-tree-id18317 . -1) (undo-tree-id18318 . -1) (undo-tree-id18319 . -1) (undo-tree-id18320 . -1) (undo-tree-id18321 . -1) (undo-tree-id18322 . -1) (undo-tree-id18323 . -1) (undo-tree-id18324 . -1) (undo-tree-id18325 . -1) (undo-tree-id18326 . -1) (undo-tree-id18327 . -1) (undo-tree-id18328 . -1) (#("0" 0 1 (fontified t)) . -2186) (undo-tree-id18329 . -1) (undo-tree-id18330 . -1) (undo-tree-id18331 . -1) (undo-tree-id18332 . -1) (undo-tree-id18333 . -1) (undo-tree-id18334 . -1) (undo-tree-id18335 . -1) (undo-tree-id18336 . -1) (undo-tree-id18337 . -1) (undo-tree-id18338 . -1) (undo-tree-id18339 . -1) (undo-tree-id18340 . -1) (undo-tree-id18341 . -1) (undo-tree-id18342 . -1) (undo-tree-id18343 . -1) (undo-tree-id18344 . -1) (undo-tree-id18345 . -1) (undo-tree-id18346 . -1) (undo-tree-id18347 . -1) (undo-tree-id18348 . -1) (undo-tree-id18349 . -1) (undo-tree-id18350 . -1) 2187 (t 25944 36921 939692 102000)) nil (25944 36985 237944 0) 0 nil] [nil nil ((apply -6 1932 2008 undo--wrap-and-run-primitive-undo 1932 2008 ((1982 . 1985) (1944 . 1947) 1932))) ((apply 6 1932 2002 undo--wrap-and-run-primitive-undo 1932 2002 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1944) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1982) 1932))) (25944 36914 445273 0) 0 nil])
nil
([nil nil ((2184 . 2185)) nil (25944 36985 237877 0) 0 nil])
nil
([nil nil ((#("5" 0 1 (fontified t)) . -2188) (undo-tree-id18259 . -1) (undo-tree-id18260 . -1) (undo-tree-id18261 . -1) (undo-tree-id18262 . -1) (undo-tree-id18263 . -1) (undo-tree-id18264 . -1) (undo-tree-id18265 . -1) (undo-tree-id18266 . -1) (undo-tree-id18267 . -1) (undo-tree-id18268 . -1) (undo-tree-id18269 . -1) (undo-tree-id18270 . -1) (undo-tree-id18271 . -1) (undo-tree-id18272 . -1) (undo-tree-id18273 . -1) (undo-tree-id18274 . -1) (undo-tree-id18275 . -1) (#("0" 0 1 (fontified t)) . -2189) (undo-tree-id18276 . -1) (undo-tree-id18277 . -1) (undo-tree-id18278 . -1) (undo-tree-id18279 . -1) (undo-tree-id18280 . -1) (undo-tree-id18281 . -1) 2190) nil (25944 36985 237875 0) 0 nil])
([nil nil ((2188 . 2190)) nil (25944 36985 237852 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -2189) (undo-tree-id18248 . -1) (undo-tree-id18249 . -1) (undo-tree-id18250 . -1) (undo-tree-id18251 . -1) (undo-tree-id18252 . -1) (undo-tree-id18253 . -1) (undo-tree-id18254 . -1) (undo-tree-id18255 . -1) (undo-tree-id18256 . -1) (undo-tree-id18257 . -1) (undo-tree-id18258 . -1) 2190) nil (25944 36985 237851 0) 0 nil])
([nil nil ((2189 . 2192)) nil (25944 36985 237839 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -2191) (undo-tree-id18244 . -1) (undo-tree-id18245 . -1) (undo-tree-id18246 . -1) (undo-tree-id18247 . -1) 2192) nil (25944 36985 237838 0) 0 nil])
([nil nil ((2191 . 2192)) nil (25944 36985 237832 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -2187) (undo-tree-id18211 . -1) (undo-tree-id18212 . -1) (undo-tree-id18213 . -1) (undo-tree-id18214 . -1) (undo-tree-id18215 . -1) (undo-tree-id18216 . -1) (undo-tree-id18217 . -1) (undo-tree-id18218 . -1) (undo-tree-id18219 . -1) (undo-tree-id18220 . -1) (undo-tree-id18221 . -1) (undo-tree-id18222 . -1) (undo-tree-id18223 . -1) (undo-tree-id18224 . -1) (undo-tree-id18225 . -1) (undo-tree-id18226 . -1) (undo-tree-id18227 . -1) (undo-tree-id18228 . -1) (undo-tree-id18229 . -1) (undo-tree-id18230 . -1) (undo-tree-id18231 . -1) (undo-tree-id18232 . -1) (undo-tree-id18233 . -1) (undo-tree-id18234 . -1) (undo-tree-id18235 . -1) (undo-tree-id18236 . -1) (undo-tree-id18237 . -1) (undo-tree-id18238 . -1) (undo-tree-id18239 . -1) (undo-tree-id18240 . -1) (undo-tree-id18241 . -1) (undo-tree-id18242 . -1) (undo-tree-id18243 . -1) 2188) nil (25944 36985 237830 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2209) (undo-tree-id17957 . -1) (undo-tree-id17958 . -1) (undo-tree-id17959 . -1) (undo-tree-id17960 . -1) (undo-tree-id17961 . -1) (undo-tree-id17962 . -1) (undo-tree-id17963 . -1) (undo-tree-id17964 . -1) (undo-tree-id17965 . -1) (undo-tree-id17966 . -1) (undo-tree-id17967 . -1) (undo-tree-id17968 . -1) (undo-tree-id17969 . -1) (undo-tree-id17970 . -1) (undo-tree-id17971 . -1) (undo-tree-id17972 . -1) (undo-tree-id17973 . -1) (undo-tree-id17974 . -1) (undo-tree-id17975 . -1) (undo-tree-id17976 . -1) (undo-tree-id17977 . -1) (undo-tree-id17978 . -1) (undo-tree-id17979 . -1) (undo-tree-id17980 . -1) (undo-tree-id17981 . -1) (undo-tree-id17982 . -1) (undo-tree-id17983 . -1) (undo-tree-id17984 . -1) (undo-tree-id17985 . -1) (undo-tree-id17986 . -1) (undo-tree-id17987 . -1) (undo-tree-id17988 . -1) (undo-tree-id17989 . -1) (undo-tree-id17990 . -1) (undo-tree-id17991 . -1) (undo-tree-id17992 . -1) (undo-tree-id17993 . -1) (undo-tree-id17994 . -1) (undo-tree-id17995 . -1) (undo-tree-id17996 . -1) (undo-tree-id17997 . -1) (undo-tree-id17998 . -1) (undo-tree-id17999 . -1) (undo-tree-id18000 . -1) (undo-tree-id18001 . -1) (undo-tree-id18002 . -1) (undo-tree-id18003 . -1) (undo-tree-id18004 . -1) (undo-tree-id18005 . -1) (undo-tree-id18006 . -1) (undo-tree-id18007 . -1) (undo-tree-id18008 . -1) (undo-tree-id18009 . -1) (undo-tree-id18010 . -1) (undo-tree-id18011 . -1) (undo-tree-id18012 . -1) (undo-tree-id18013 . -1) (undo-tree-id18014 . -1) (undo-tree-id18015 . -1) (undo-tree-id18016 . -1) (undo-tree-id18017 . -1) (undo-tree-id18018 . -1) (undo-tree-id18019 . -1) (undo-tree-id18020 . -1) (undo-tree-id18021 . -1) (undo-tree-id18022 . -1) (undo-tree-id18023 . -1) (undo-tree-id18024 . -1) (undo-tree-id18025 . -1) (undo-tree-id18026 . -1) (undo-tree-id18027 . -1) (undo-tree-id18028 . -1) (undo-tree-id18029 . -1) (#("/" 0 1 (fontified t)) . -2210) (undo-tree-id18030 . -1) (undo-tree-id18031 . -1) (undo-tree-id18032 . -1) (undo-tree-id18033 . -1) (undo-tree-id18034 . -1) (undo-tree-id18035 . -1) (undo-tree-id18036 . -1) (undo-tree-id18037 . -1) (undo-tree-id18038 . -1) (undo-tree-id18039 . -1) (undo-tree-id18040 . -1) (undo-tree-id18041 . -1) (undo-tree-id18042 . -1) (undo-tree-id18043 . -1) (undo-tree-id18044 . -1) (undo-tree-id18045 . -1) (undo-tree-id18046 . -1) (undo-tree-id18047 . -1) (undo-tree-id18048 . -1) (undo-tree-id18049 . -1) (undo-tree-id18050 . -1) (undo-tree-id18051 . -1) (undo-tree-id18052 . -1) (undo-tree-id18053 . -1) (undo-tree-id18054 . -1) (undo-tree-id18055 . -1) (undo-tree-id18056 . -1) (undo-tree-id18057 . -1) (undo-tree-id18058 . -1) (undo-tree-id18059 . -1) (undo-tree-id18060 . -1) (undo-tree-id18061 . -1) (undo-tree-id18062 . -1) (undo-tree-id18063 . -1) (undo-tree-id18064 . -1) (undo-tree-id18065 . -1) (undo-tree-id18066 . -1) (undo-tree-id18067 . -1) (undo-tree-id18068 . -1) (undo-tree-id18069 . -1) (undo-tree-id18070 . -1) (undo-tree-id18071 . -1) (undo-tree-id18072 . -1) (undo-tree-id18073 . -1) (undo-tree-id18074 . -1) (undo-tree-id18075 . -1) (undo-tree-id18076 . -1) (undo-tree-id18077 . -1) (undo-tree-id18078 . -1) (undo-tree-id18079 . -1) (undo-tree-id18080 . -1) (undo-tree-id18081 . -1) (undo-tree-id18082 . -1) (undo-tree-id18083 . -1) (undo-tree-id18084 . -1) (undo-tree-id18085 . -1) (undo-tree-id18086 . -1) (undo-tree-id18087 . -1) (undo-tree-id18088 . -1) (undo-tree-id18089 . -1) (undo-tree-id18090 . -1) (undo-tree-id18091 . -1) (undo-tree-id18092 . -1) (undo-tree-id18093 . -1) (undo-tree-id18094 . -1) (undo-tree-id18095 . -1) (#(" " 0 1 (fontified t)) . -2211) (undo-tree-id18096 . -1) (undo-tree-id18097 . -1) (undo-tree-id18098 . -1) (undo-tree-id18099 . -1) (undo-tree-id18100 . -1) (undo-tree-id18101 . -1) (undo-tree-id18102 . -1) (undo-tree-id18103 . -1) (undo-tree-id18104 . -1) (undo-tree-id18105 . -1) (undo-tree-id18106 . -1) (undo-tree-id18107 . -1) (undo-tree-id18108 . -1) (undo-tree-id18109 . -1) (undo-tree-id18110 . -1) (undo-tree-id18111 . -1) (undo-tree-id18112 . -1) (undo-tree-id18113 . -1) (undo-tree-id18114 . -1) (undo-tree-id18115 . -1) (undo-tree-id18116 . -1) (undo-tree-id18117 . -1) (undo-tree-id18118 . -1) (undo-tree-id18119 . -1) (undo-tree-id18120 . -1) (undo-tree-id18121 . -1) (undo-tree-id18122 . -1) (undo-tree-id18123 . -1) (undo-tree-id18124 . -1) (undo-tree-id18125 . -1) (undo-tree-id18126 . -1) (undo-tree-id18127 . -1) (undo-tree-id18128 . -1) (undo-tree-id18129 . -1) (undo-tree-id18130 . -1) (undo-tree-id18131 . -1) (undo-tree-id18132 . -1) (undo-tree-id18133 . -1) (undo-tree-id18134 . -1) (undo-tree-id18135 . -1) (undo-tree-id18136 . -1) (undo-tree-id18137 . -1) (undo-tree-id18138 . -1) (undo-tree-id18139 . -1) (undo-tree-id18140 . -1) (undo-tree-id18141 . -1) (undo-tree-id18142 . -1) (undo-tree-id18143 . -1) (undo-tree-id18144 . -1) (undo-tree-id18145 . -1) (undo-tree-id18146 . -1) (undo-tree-id18147 . -1) (undo-tree-id18148 . -1) (undo-tree-id18149 . -1) (undo-tree-id18150 . -1) (undo-tree-id18151 . -1) (undo-tree-id18152 . -1) (undo-tree-id18153 . -1) (undo-tree-id18154 . -1) (undo-tree-id18155 . -1) (undo-tree-id18156 . -1) (#("5" 0 1 (fontified t)) . -2212) (undo-tree-id18157 . -1) (undo-tree-id18158 . -1) (undo-tree-id18159 . -1) (undo-tree-id18160 . -1) (undo-tree-id18161 . -1) (undo-tree-id18162 . -1) (undo-tree-id18163 . -1) (undo-tree-id18164 . -1) (undo-tree-id18165 . -1) (undo-tree-id18166 . -1) (undo-tree-id18167 . -1) (undo-tree-id18168 . -1) (undo-tree-id18169 . -1) (undo-tree-id18170 . -1) (undo-tree-id18171 . -1) (#("0" 0 1 (fontified t)) . -2213) (undo-tree-id18172 . -1) (undo-tree-id18173 . -1) (undo-tree-id18174 . -1) (undo-tree-id18175 . -1) (undo-tree-id18176 . -1) (undo-tree-id18177 . -1) (undo-tree-id18178 . -1) (undo-tree-id18179 . -1) (undo-tree-id18180 . -1) (undo-tree-id18181 . -1) (undo-tree-id18182 . -1) (undo-tree-id18183 . -1) (undo-tree-id18184 . -1) (undo-tree-id18185 . -1) (#("." 0 1 (fontified t)) . -2214) (undo-tree-id18186 . -1) (undo-tree-id18187 . -1) (undo-tree-id18188 . -1) (undo-tree-id18189 . -1) (undo-tree-id18190 . -1) (undo-tree-id18191 . -1) (undo-tree-id18192 . -1) (undo-tree-id18193 . -1) (undo-tree-id18194 . -1) (undo-tree-id18195 . -1) (undo-tree-id18196 . -1) (undo-tree-id18197 . -1) (undo-tree-id18198 . -1) (#("0" 0 1 (fontified t)) . -2215) (undo-tree-id18199 . -1) (undo-tree-id18200 . -1) (undo-tree-id18201 . -1) (undo-tree-id18202 . -1) (undo-tree-id18203 . -1) (undo-tree-id18204 . -1) (undo-tree-id18205 . -1) (undo-tree-id18206 . -1) (undo-tree-id18207 . -1) (undo-tree-id18208 . -1) (undo-tree-id18209 . -1) (undo-tree-id18210 . -1) 2216) nil (25944 37001 585647 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2224) (undo-tree-id18379 . -1) (undo-tree-id18380 . -1) (undo-tree-id18381 . -1) (undo-tree-id18382 . -1) (undo-tree-id18383 . -1) (undo-tree-id18384 . -1) (undo-tree-id18385 . -1) (undo-tree-id18386 . -1) (undo-tree-id18387 . -1) (undo-tree-id18388 . -1) (undo-tree-id18389 . -1) (undo-tree-id18390 . -1) (undo-tree-id18391 . -1) (undo-tree-id18392 . -1) (undo-tree-id18393 . -1) (undo-tree-id18394 . -1) (undo-tree-id18395 . -1) (undo-tree-id18396 . -1) (undo-tree-id18397 . -1) (undo-tree-id18398 . -1) (undo-tree-id18399 . -1) (undo-tree-id18400 . -1) (undo-tree-id18401 . -1) (undo-tree-id18402 . -1) (undo-tree-id18403 . -1) (undo-tree-id18404 . -1) (undo-tree-id18405 . -1) (undo-tree-id18406 . -1) (undo-tree-id18407 . -1) (undo-tree-id18408 . -1) (undo-tree-id18409 . -1) (undo-tree-id18410 . -1) (undo-tree-id18411 . -1) (undo-tree-id18412 . -1) (undo-tree-id18413 . -1) (undo-tree-id18414 . -1) (undo-tree-id18415 . -1) (undo-tree-id18416 . -1) (undo-tree-id18417 . -1) (undo-tree-id18418 . -1) (undo-tree-id18419 . -1) (#("*" 0 1 (fontified t)) . -2225) (undo-tree-id18420 . -1) (undo-tree-id18421 . -1) (undo-tree-id18422 . -1) (undo-tree-id18423 . -1) (undo-tree-id18424 . -1) (undo-tree-id18425 . -1) (undo-tree-id18426 . -1) (undo-tree-id18427 . -1) (undo-tree-id18428 . -1) (undo-tree-id18429 . -1) (undo-tree-id18430 . -1) (undo-tree-id18431 . -1) (undo-tree-id18432 . -1) (undo-tree-id18433 . -1) (undo-tree-id18434 . -1) (undo-tree-id18435 . -1) (undo-tree-id18436 . -1) (undo-tree-id18437 . -1) (undo-tree-id18438 . -1) (undo-tree-id18439 . -1) (undo-tree-id18440 . -1) (undo-tree-id18441 . -1) (undo-tree-id18442 . -1) (undo-tree-id18443 . -1) (undo-tree-id18444 . -1) (undo-tree-id18445 . -1) (undo-tree-id18446 . -1) (undo-tree-id18447 . -1) (undo-tree-id18448 . -1) (undo-tree-id18449 . -1) (undo-tree-id18450 . -1) (undo-tree-id18451 . -1) (undo-tree-id18452 . -1) (#(" " 0 1 (fontified t)) . -2226) (undo-tree-id18453 . -1) (undo-tree-id18454 . -1) (undo-tree-id18455 . -1) (undo-tree-id18456 . -1) (undo-tree-id18457 . -1) (undo-tree-id18458 . -1) (undo-tree-id18459 . -1) (undo-tree-id18460 . -1) (undo-tree-id18461 . -1) (undo-tree-id18462 . -1) (undo-tree-id18463 . -1) (undo-tree-id18464 . -1) (undo-tree-id18465 . -1) (undo-tree-id18466 . -1) (undo-tree-id18467 . -1) (undo-tree-id18468 . -1) (undo-tree-id18469 . -1) (undo-tree-id18470 . -1) (undo-tree-id18471 . -1) (undo-tree-id18472 . -1) (undo-tree-id18473 . -1) (undo-tree-id18474 . -1) (undo-tree-id18475 . -1) (undo-tree-id18476 . -1) (undo-tree-id18477 . -1) (undo-tree-id18478 . -1) (undo-tree-id18479 . -1) (undo-tree-id18480 . -1) (undo-tree-id18481 . -1) (#("x" 0 1 (fontified t)) . -2227) (undo-tree-id18482 . -1) (undo-tree-id18483 . -1) (undo-tree-id18484 . -1) (undo-tree-id18485 . -1) (undo-tree-id18486 . -1) (undo-tree-id18487 . -1) (undo-tree-id18488 . -1) (undo-tree-id18489 . -1) (undo-tree-id18490 . -1) (undo-tree-id18491 . -1) (undo-tree-id18492 . -1) (undo-tree-id18493 . -1) (undo-tree-id18494 . -1) (undo-tree-id18495 . -1) (undo-tree-id18496 . -1) (undo-tree-id18497 . -1) (undo-tree-id18498 . -1) (undo-tree-id18499 . -1) (undo-tree-id18500 . -1) (undo-tree-id18501 . -1) 2228) nil (25944 37006 991460 0) 0 nil] [nil nil ((#("(" 0 1 (fontified t)) . -2219) (undo-tree-id17664 . -1) (undo-tree-id17665 . -1) (undo-tree-id17666 . -1) (undo-tree-id17667 . -1) (undo-tree-id17668 . -1) (undo-tree-id17669 . -1) (undo-tree-id17670 . -1) (undo-tree-id17671 . -1) (undo-tree-id17672 . -1) (undo-tree-id17673 . -1) (undo-tree-id17674 . -1) (undo-tree-id17675 . -1) (undo-tree-id17676 . -1) (undo-tree-id17677 . -1) (undo-tree-id17678 . -1) (undo-tree-id17679 . -1) (undo-tree-id17680 . -1) (undo-tree-id17681 . -1) (undo-tree-id17682 . -1) (undo-tree-id17683 . -1) (undo-tree-id17684 . -1) (undo-tree-id17685 . -1) (undo-tree-id17686 . -1) (undo-tree-id17687 . -1) (undo-tree-id17688 . -1) (undo-tree-id17689 . -1) (undo-tree-id17690 . -1) (undo-tree-id17691 . -1) (undo-tree-id17692 . -1) (undo-tree-id17693 . -1) (undo-tree-id17694 . -1) (undo-tree-id17695 . -1) (undo-tree-id17696 . -1) (undo-tree-id17697 . -1) (undo-tree-id17698 . -1) (undo-tree-id17699 . -1) (undo-tree-id17700 . -1) (undo-tree-id17701 . -1) (undo-tree-id17702 . -1) (undo-tree-id17703 . -1) (undo-tree-id17704 . -1) (undo-tree-id17705 . -1) (undo-tree-id17706 . -1) (#("x" 0 1 (fontified t)) . -2220) (undo-tree-id17707 . -1) (undo-tree-id17708 . -1) (undo-tree-id17709 . -1) (undo-tree-id17710 . -1) (undo-tree-id17711 . -1) (undo-tree-id17712 . -1) (undo-tree-id17713 . -1) (undo-tree-id17714 . -1) (undo-tree-id17715 . -1) (undo-tree-id17716 . -1) (undo-tree-id17717 . -1) (undo-tree-id17718 . -1) (undo-tree-id17719 . -1) (undo-tree-id17720 . -1) (undo-tree-id17721 . -1) (undo-tree-id17722 . -1) (undo-tree-id17723 . -1) (undo-tree-id17724 . -1) (undo-tree-id17725 . -1) (undo-tree-id17726 . -1) (undo-tree-id17727 . -1) (undo-tree-id17728 . -1) (undo-tree-id17729 . -1) (undo-tree-id17730 . -1) (undo-tree-id17731 . -1) (undo-tree-id17732 . -1) (undo-tree-id17733 . -1) (undo-tree-id17734 . -1) (undo-tree-id17735 . -1) (undo-tree-id17736 . -1) (undo-tree-id17737 . -1) (undo-tree-id17738 . -1) (undo-tree-id17739 . -1) (undo-tree-id17740 . -1) (undo-tree-id17741 . -1) (undo-tree-id17742 . -1) (undo-tree-id17743 . -1) (undo-tree-id17744 . -1) (undo-tree-id17745 . -1) (undo-tree-id17746 . -1) (#("," 0 1 (fontified t)) . -2221) (undo-tree-id17747 . -1) (undo-tree-id17748 . -1) (undo-tree-id17749 . -1) (undo-tree-id17750 . -1) (undo-tree-id17751 . -1) (undo-tree-id17752 . -1) (undo-tree-id17753 . -1) (undo-tree-id17754 . -1) (undo-tree-id17755 . -1) (undo-tree-id17756 . -1) (undo-tree-id17757 . -1) (undo-tree-id17758 . -1) (undo-tree-id17759 . -1) (undo-tree-id17760 . -1) (undo-tree-id17761 . -1) (undo-tree-id17762 . -1) (undo-tree-id17763 . -1) (undo-tree-id17764 . -1) (undo-tree-id17765 . -1) (undo-tree-id17766 . -1) (undo-tree-id17767 . -1) (undo-tree-id17768 . -1) (undo-tree-id17769 . -1) (undo-tree-id17770 . -1) (undo-tree-id17771 . -1) (undo-tree-id17772 . -1) (undo-tree-id17773 . -1) (undo-tree-id17774 . -1) (undo-tree-id17775 . -1) (undo-tree-id17776 . -1) (undo-tree-id17777 . -1) (undo-tree-id17778 . -1) (undo-tree-id17779 . -1) (undo-tree-id17780 . -1) (undo-tree-id17781 . -1) (undo-tree-id17782 . -1) (undo-tree-id17783 . -1) (#(" " 0 1 (fontified t)) . -2222) (undo-tree-id17784 . -1) (undo-tree-id17785 . -1) (undo-tree-id17786 . -1) (undo-tree-id17787 . -1) (undo-tree-id17788 . -1) (undo-tree-id17789 . -1) (undo-tree-id17790 . -1) (undo-tree-id17791 . -1) (undo-tree-id17792 . -1) (undo-tree-id17793 . -1) (undo-tree-id17794 . -1) (undo-tree-id17795 . -1) (undo-tree-id17796 . -1) (undo-tree-id17797 . -1) (undo-tree-id17798 . -1) (undo-tree-id17799 . -1) (undo-tree-id17800 . -1) (undo-tree-id17801 . -1) (undo-tree-id17802 . -1) (undo-tree-id17803 . -1) (undo-tree-id17804 . -1) (undo-tree-id17805 . -1) (undo-tree-id17806 . -1) (undo-tree-id17807 . -1) (undo-tree-id17808 . -1) (undo-tree-id17809 . -1) (undo-tree-id17810 . -1) (undo-tree-id17811 . -1) (undo-tree-id17812 . -1) (undo-tree-id17813 . -1) (undo-tree-id17814 . -1) (undo-tree-id17815 . -1) (undo-tree-id17816 . -1) (undo-tree-id17817 . -1) (#("x" 0 1 (fontified t)) . -2223) (undo-tree-id17818 . -1) (undo-tree-id17819 . -1) (undo-tree-id17820 . -1) (undo-tree-id17821 . -1) (undo-tree-id17822 . -1) (undo-tree-id17823 . -1) (undo-tree-id17824 . -1) (undo-tree-id17825 . -1) (undo-tree-id17826 . -1) (undo-tree-id17827 . -1) (undo-tree-id17828 . -1) (undo-tree-id17829 . -1) (undo-tree-id17830 . -1) (undo-tree-id17831 . -1) (undo-tree-id17832 . -1) (undo-tree-id17833 . -1) (undo-tree-id17834 . -1) (undo-tree-id17835 . -1) (undo-tree-id17836 . -1) (undo-tree-id17837 . -1) (undo-tree-id17838 . -1) (undo-tree-id17839 . -1) (undo-tree-id17840 . -1) (undo-tree-id17841 . -1) (undo-tree-id17842 . -1) (undo-tree-id17843 . -1) (undo-tree-id17844 . -1) (undo-tree-id17845 . -1) (undo-tree-id17846 . -1) (undo-tree-id17847 . -1) (undo-tree-id17848 . -1) (#(" " 0 1 (fontified t)) . -2224) (undo-tree-id17849 . -1) (undo-tree-id17850 . -1) (undo-tree-id17851 . -1) (undo-tree-id17852 . -1) (undo-tree-id17853 . -1) (undo-tree-id17854 . -1) (undo-tree-id17855 . -1) (undo-tree-id17856 . -1) (undo-tree-id17857 . -1) (undo-tree-id17858 . -1) (undo-tree-id17859 . -1) (undo-tree-id17860 . -1) (undo-tree-id17861 . -1) (undo-tree-id17862 . -1) (undo-tree-id17863 . -1) (undo-tree-id17864 . -1) (undo-tree-id17865 . -1) (undo-tree-id17866 . -1) (undo-tree-id17867 . -1) (undo-tree-id17868 . -1) (undo-tree-id17869 . -1) (undo-tree-id17870 . -1) (undo-tree-id17871 . -1) (undo-tree-id17872 . -1) (undo-tree-id17873 . -1) (undo-tree-id17874 . -1) (undo-tree-id17875 . -1) (undo-tree-id17876 . -1) (#("*" 0 1 (fontified t)) . -2225) (undo-tree-id17877 . -1) (undo-tree-id17878 . -1) (undo-tree-id17879 . -1) (undo-tree-id17880 . -1) (undo-tree-id17881 . -1) (undo-tree-id17882 . -1) (undo-tree-id17883 . -1) (undo-tree-id17884 . -1) (undo-tree-id17885 . -1) (undo-tree-id17886 . -1) (undo-tree-id17887 . -1) (undo-tree-id17888 . -1) (undo-tree-id17889 . -1) (undo-tree-id17890 . -1) (undo-tree-id17891 . -1) (undo-tree-id17892 . -1) (undo-tree-id17893 . -1) (undo-tree-id17894 . -1) (undo-tree-id17895 . -1) (undo-tree-id17896 . -1) (undo-tree-id17897 . -1) (undo-tree-id17898 . -1) (undo-tree-id17899 . -1) (undo-tree-id17900 . -1) (undo-tree-id17901 . -1) (#(" " 0 1 (fontified t)) . -2226) (undo-tree-id17902 . -1) (undo-tree-id17903 . -1) (undo-tree-id17904 . -1) (undo-tree-id17905 . -1) (undo-tree-id17906 . -1) (undo-tree-id17907 . -1) (undo-tree-id17908 . -1) (undo-tree-id17909 . -1) (undo-tree-id17910 . -1) (undo-tree-id17911 . -1) (undo-tree-id17912 . -1) (undo-tree-id17913 . -1) (undo-tree-id17914 . -1) (undo-tree-id17915 . -1) (undo-tree-id17916 . -1) (undo-tree-id17917 . -1) (undo-tree-id17918 . -1) (undo-tree-id17919 . -1) (undo-tree-id17920 . -1) (undo-tree-id17921 . -1) (undo-tree-id17922 . -1) (undo-tree-id17923 . -1) (#("x" 0 1 (fontified t)) . -2227) (undo-tree-id17924 . -1) (undo-tree-id17925 . -1) (undo-tree-id17926 . -1) (undo-tree-id17927 . -1) (undo-tree-id17928 . -1) (undo-tree-id17929 . -1) (undo-tree-id17930 . -1) (undo-tree-id17931 . -1) (undo-tree-id17932 . -1) (undo-tree-id17933 . -1) (undo-tree-id17934 . -1) (undo-tree-id17935 . -1) (undo-tree-id17936 . -1) (undo-tree-id17937 . -1) (undo-tree-id17938 . -1) (undo-tree-id17939 . -1) (undo-tree-id17940 . -1) (undo-tree-id17941 . -1) (undo-tree-id17942 . -1) (undo-tree-id17943 . -1) (undo-tree-id17944 . -1) (#(")" 0 1 (fontified t)) . -2228) (undo-tree-id17945 . -1) (undo-tree-id17946 . -1) (undo-tree-id17947 . -1) (undo-tree-id17948 . -1) (undo-tree-id17949 . -1) (undo-tree-id17950 . -1) (undo-tree-id17951 . -1) (undo-tree-id17952 . -1) (undo-tree-id17953 . -1) (undo-tree-id17954 . -1) (undo-tree-id17955 . -1) (undo-tree-id17956 . -1) 2229) ((2219 . 2229)) (25944 37001 142604 0) 0 nil])
([nil nil ((#("1f32" 0 1 (fontified t) 1 4 (face font-lock-type-face fontified t)) . -2041) (undo-tree-id18659 . -4) (undo-tree-id18660 . -4) (undo-tree-id18661 . -4) (undo-tree-id18662 . -4) (undo-tree-id18663 . -4) (undo-tree-id18664 . -4) (undo-tree-id18665 . -4) (undo-tree-id18666 . -4) (undo-tree-id18667 . -4) (undo-tree-id18668 . -4) (undo-tree-id18669 . -4) (undo-tree-id18670 . -4) (undo-tree-id18671 . -4) (undo-tree-id18672 . -4) (undo-tree-id18673 . -4) (undo-tree-id18674 . -4) 2045 (t 25944 37007 31068 182000)) nil (25944 37150 752581 0) 0 nil])
([nil nil ((2219 . 2220)) ((#("x" 0 1 (fontified t)) . 2219) (undo-tree-id18351 . -1) (undo-tree-id18352 . -1) (undo-tree-id18353 . -1) (undo-tree-id18354 . -1) (undo-tree-id18355 . -1) (undo-tree-id18356 . -1) (undo-tree-id18357 . -1) (undo-tree-id18358 . -1) (undo-tree-id18359 . -1) (undo-tree-id18360 . -1) (undo-tree-id18361 . -1) (undo-tree-id18362 . -1) (undo-tree-id18363 . -1) (undo-tree-id18364 . -1) (undo-tree-id18365 . -1) (undo-tree-id18366 . -1) (undo-tree-id18367 . -1) (undo-tree-id18368 . -1) (undo-tree-id18369 . -1) (undo-tree-id18370 . -1) (undo-tree-id18371 . -1) (undo-tree-id18372 . -1) (undo-tree-id18373 . -1) (undo-tree-id18374 . -1) (undo-tree-id18375 . -1) (undo-tree-id18376 . -1) (undo-tree-id18377 . -1) (undo-tree-id18378 . -1) (t 25944 36997 508206 505000)) (25944 36995 987331 0) 0 nil])
([nil nil ((#("1f32.." 0 1 (fontified t) 1 4 (face font-lock-type-face fontified t) 4 6 (fontified t)) . -2035) (undo-tree-id18642 . -6) (undo-tree-id18643 . -6) (undo-tree-id18644 . -6) (undo-tree-id18645 . -6) (undo-tree-id18646 . -6) (undo-tree-id18647 . -6) (undo-tree-id18648 . -6) (undo-tree-id18649 . -6) (undo-tree-id18650 . -6) (undo-tree-id18651 . -6) (undo-tree-id18652 . -6) (undo-tree-id18653 . -6) (undo-tree-id18654 . -6) (undo-tree-id18655 . -6) (undo-tree-id18656 . -6) (undo-tree-id18657 . -6) (undo-tree-id18658 . -6) 2041) nil (25944 37150 752560 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2210) (undo-tree-id16833 . -1) (undo-tree-id16834 . -1) (undo-tree-id16835 . -1) (undo-tree-id16836 . -1) (undo-tree-id16837 . -1) (undo-tree-id16838 . -1) (undo-tree-id16839 . -1) (undo-tree-id16840 . -1) (undo-tree-id16841 . -1) (undo-tree-id16842 . -1) (undo-tree-id16843 . -1) (undo-tree-id16844 . -1) (undo-tree-id16845 . -1) (undo-tree-id16846 . -1) (undo-tree-id16847 . -1) (undo-tree-id16848 . -1) (undo-tree-id16849 . -1) (undo-tree-id16850 . -1) (undo-tree-id16851 . -1) (undo-tree-id16852 . -1) (undo-tree-id16853 . -1) (undo-tree-id16854 . -1) (undo-tree-id16855 . -1) (undo-tree-id16856 . -1) (undo-tree-id16857 . -1) (undo-tree-id16858 . -1) (undo-tree-id16859 . -1) (undo-tree-id16860 . -1) (undo-tree-id16861 . -1) (undo-tree-id16862 . -1) (undo-tree-id16863 . -1) (undo-tree-id16864 . -1) (undo-tree-id16865 . -1) (undo-tree-id16866 . -1) (undo-tree-id16867 . -1) (undo-tree-id16868 . -1) (undo-tree-id16869 . -1) (undo-tree-id16870 . -1) (undo-tree-id16871 . -1) (undo-tree-id16872 . -1) (undo-tree-id16873 . -1) (undo-tree-id16874 . -1) (undo-tree-id16875 . -1) (undo-tree-id16876 . -1) (undo-tree-id16877 . -1) (undo-tree-id16878 . -1) (undo-tree-id16879 . -1) (undo-tree-id16880 . -1) (undo-tree-id16881 . -1) (undo-tree-id16882 . -1) (undo-tree-id16883 . -1) (undo-tree-id16884 . -1) (undo-tree-id16885 . -1) (undo-tree-id16886 . -1) (undo-tree-id16887 . -1) (undo-tree-id16888 . -1) (undo-tree-id16889 . -1) (undo-tree-id16890 . -1) (undo-tree-id16891 . -1) (undo-tree-id16892 . -1) (undo-tree-id16893 . -1) (undo-tree-id16894 . -1) (undo-tree-id16895 . -1) (undo-tree-id16896 . -1) (undo-tree-id16897 . -1) (undo-tree-id16898 . -1) (undo-tree-id16899 . -1) (undo-tree-id16900 . -1) (undo-tree-id16901 . -1) (undo-tree-id16902 . -1) (undo-tree-id16903 . -1) (undo-tree-id16904 . -1) (undo-tree-id16905 . -1) (undo-tree-id16906 . -1) (undo-tree-id16907 . -1) (undo-tree-id16908 . -1) (undo-tree-id16909 . -1) (undo-tree-id16910 . -1) (undo-tree-id16911 . -1) (undo-tree-id16912 . -1) (undo-tree-id16913 . -1) (undo-tree-id16914 . -1) (undo-tree-id16915 . -1) (undo-tree-id16916 . -1) (undo-tree-id16917 . -1) (undo-tree-id16918 . -1) (undo-tree-id16919 . -1) (undo-tree-id16920 . -1) (undo-tree-id16921 . -1) (undo-tree-id16922 . -1) (undo-tree-id16923 . -1) (undo-tree-id16924 . -1) (undo-tree-id16925 . -1) (#("m" 0 1 (fontified t)) . -2211) (undo-tree-id16926 . -1) (undo-tree-id16927 . -1) (undo-tree-id16928 . -1) (undo-tree-id16929 . -1) (undo-tree-id16930 . -1) (undo-tree-id16931 . -1) (undo-tree-id16932 . -1) (undo-tree-id16933 . -1) (undo-tree-id16934 . -1) (undo-tree-id16935 . -1) (undo-tree-id16936 . -1) (undo-tree-id16937 . -1) (undo-tree-id16938 . -1) (undo-tree-id16939 . -1) (undo-tree-id16940 . -1) (undo-tree-id16941 . -1) (undo-tree-id16942 . -1) (undo-tree-id16943 . -1) (undo-tree-id16944 . -1) (undo-tree-id16945 . -1) (undo-tree-id16946 . -1) (undo-tree-id16947 . -1) (undo-tree-id16948 . -1) (undo-tree-id16949 . -1) (undo-tree-id16950 . -1) (undo-tree-id16951 . -1) (undo-tree-id16952 . -1) (undo-tree-id16953 . -1) (undo-tree-id16954 . -1) (undo-tree-id16955 . -1) (undo-tree-id16956 . -1) (undo-tree-id16957 . -1) (undo-tree-id16958 . -1) (undo-tree-id16959 . -1) (undo-tree-id16960 . -1) (undo-tree-id16961 . -1) (undo-tree-id16962 . -1) (undo-tree-id16963 . -1) (undo-tree-id16964 . -1) (undo-tree-id16965 . -1) (undo-tree-id16966 . -1) (undo-tree-id16967 . -1) (undo-tree-id16968 . -1) (undo-tree-id16969 . -1) (undo-tree-id16970 . -1) (undo-tree-id16971 . -1) (undo-tree-id16972 . -1) (undo-tree-id16973 . -1) (undo-tree-id16974 . -1) (undo-tree-id16975 . -1) (undo-tree-id16976 . -1) (undo-tree-id16977 . -1) (undo-tree-id16978 . -1) (undo-tree-id16979 . -1) (undo-tree-id16980 . -1) (undo-tree-id16981 . -1) (undo-tree-id16982 . -1) (undo-tree-id16983 . -1) (undo-tree-id16984 . -1) (undo-tree-id16985 . -1) (undo-tree-id16986 . -1) (undo-tree-id16987 . -1) (undo-tree-id16988 . -1) (undo-tree-id16989 . -1) (undo-tree-id16990 . -1) (undo-tree-id16991 . -1) (undo-tree-id16992 . -1) (undo-tree-id16993 . -1) (undo-tree-id16994 . -1) (undo-tree-id16995 . -1) (undo-tree-id16996 . -1) (undo-tree-id16997 . -1) (undo-tree-id16998 . -1) (undo-tree-id16999 . -1) (undo-tree-id17000 . -1) (undo-tree-id17001 . -1) (undo-tree-id17002 . -1) (undo-tree-id17003 . -1) (undo-tree-id17004 . -1) (undo-tree-id17005 . -1) (undo-tree-id17006 . -1) (undo-tree-id17007 . -1) (undo-tree-id17008 . -1) (undo-tree-id17009 . -1) (undo-tree-id17010 . -1) (undo-tree-id17011 . -1) (undo-tree-id17012 . -1) (undo-tree-id17013 . -1) (undo-tree-id17014 . -1) (undo-tree-id17015 . -1) (undo-tree-id17016 . -1) (undo-tree-id17017 . -1) (#("a" 0 1 (fontified t)) . -2212) (undo-tree-id17018 . -1) (undo-tree-id17019 . -1) (undo-tree-id17020 . -1) (undo-tree-id17021 . -1) (undo-tree-id17022 . -1) (undo-tree-id17023 . -1) (undo-tree-id17024 . -1) (undo-tree-id17025 . -1) (undo-tree-id17026 . -1) (undo-tree-id17027 . -1) (undo-tree-id17028 . -1) (undo-tree-id17029 . -1) (undo-tree-id17030 . -1) (undo-tree-id17031 . -1) (undo-tree-id17032 . -1) (undo-tree-id17033 . -1) (undo-tree-id17034 . -1) (undo-tree-id17035 . -1) (undo-tree-id17036 . -1) (undo-tree-id17037 . -1) (undo-tree-id17038 . -1) (undo-tree-id17039 . -1) (undo-tree-id17040 . -1) (undo-tree-id17041 . -1) (undo-tree-id17042 . -1) (undo-tree-id17043 . -1) (undo-tree-id17044 . -1) (undo-tree-id17045 . -1) (undo-tree-id17046 . -1) (undo-tree-id17047 . -1) (undo-tree-id17048 . -1) (undo-tree-id17049 . -1) (undo-tree-id17050 . -1) (undo-tree-id17051 . -1) (undo-tree-id17052 . -1) (undo-tree-id17053 . -1) (undo-tree-id17054 . -1) (undo-tree-id17055 . -1) (undo-tree-id17056 . -1) (undo-tree-id17057 . -1) (undo-tree-id17058 . -1) (undo-tree-id17059 . -1) (undo-tree-id17060 . -1) (undo-tree-id17061 . -1) (undo-tree-id17062 . -1) (undo-tree-id17063 . -1) (undo-tree-id17064 . -1) (undo-tree-id17065 . -1) (undo-tree-id17066 . -1) (undo-tree-id17067 . -1) (undo-tree-id17068 . -1) (undo-tree-id17069 . -1) (undo-tree-id17070 . -1) (undo-tree-id17071 . -1) (undo-tree-id17072 . -1) (undo-tree-id17073 . -1) (undo-tree-id17074 . -1) (undo-tree-id17075 . -1) (undo-tree-id17076 . -1) (undo-tree-id17077 . -1) (undo-tree-id17078 . -1) (undo-tree-id17079 . -1) (undo-tree-id17080 . -1) (undo-tree-id17081 . -1) (undo-tree-id17082 . -1) (undo-tree-id17083 . -1) (undo-tree-id17084 . -1) (undo-tree-id17085 . -1) (undo-tree-id17086 . -1) (undo-tree-id17087 . -1) (undo-tree-id17088 . -1) (undo-tree-id17089 . -1) (undo-tree-id17090 . -1) (undo-tree-id17091 . -1) (undo-tree-id17092 . -1) (undo-tree-id17093 . -1) (undo-tree-id17094 . -1) (undo-tree-id17095 . -1) (undo-tree-id17096 . -1) (undo-tree-id17097 . -1) (undo-tree-id17098 . -1) (undo-tree-id17099 . -1) (undo-tree-id17100 . -1) (undo-tree-id17101 . -1) (undo-tree-id17102 . -1) (undo-tree-id17103 . -1) (undo-tree-id17104 . -1) (undo-tree-id17105 . -1) (undo-tree-id17106 . -1) (undo-tree-id17107 . -1) (undo-tree-id17108 . -1) (#("p" 0 1 (fontified t)) . -2213) (undo-tree-id17109 . -1) (undo-tree-id17110 . -1) (undo-tree-id17111 . -1) (undo-tree-id17112 . -1) (undo-tree-id17113 . -1) (undo-tree-id17114 . -1) (undo-tree-id17115 . -1) (undo-tree-id17116 . -1) (undo-tree-id17117 . -1) (undo-tree-id17118 . -1) (undo-tree-id17119 . -1) (undo-tree-id17120 . -1) (undo-tree-id17121 . -1) (undo-tree-id17122 . -1) (undo-tree-id17123 . -1) (undo-tree-id17124 . -1) (undo-tree-id17125 . -1) (undo-tree-id17126 . -1) (undo-tree-id17127 . -1) (undo-tree-id17128 . -1) (undo-tree-id17129 . -1) (undo-tree-id17130 . -1) (undo-tree-id17131 . -1) (undo-tree-id17132 . -1) (undo-tree-id17133 . -1) (undo-tree-id17134 . -1) (undo-tree-id17135 . -1) (undo-tree-id17136 . -1) (undo-tree-id17137 . -1) (undo-tree-id17138 . -1) (undo-tree-id17139 . -1) (undo-tree-id17140 . -1) (undo-tree-id17141 . -1) (undo-tree-id17142 . -1) (undo-tree-id17143 . -1) (undo-tree-id17144 . -1) (undo-tree-id17145 . -1) (undo-tree-id17146 . -1) (undo-tree-id17147 . -1) (undo-tree-id17148 . -1) (undo-tree-id17149 . -1) (undo-tree-id17150 . -1) (undo-tree-id17151 . -1) (undo-tree-id17152 . -1) (undo-tree-id17153 . -1) (undo-tree-id17154 . -1) (undo-tree-id17155 . -1) (undo-tree-id17156 . -1) (undo-tree-id17157 . -1) (undo-tree-id17158 . -1) (undo-tree-id17159 . -1) (undo-tree-id17160 . -1) (undo-tree-id17161 . -1) (undo-tree-id17162 . -1) (undo-tree-id17163 . -1) (undo-tree-id17164 . -1) (undo-tree-id17165 . -1) (undo-tree-id17166 . -1) (undo-tree-id17167 . -1) (undo-tree-id17168 . -1) (undo-tree-id17169 . -1) (undo-tree-id17170 . -1) (undo-tree-id17171 . -1) (undo-tree-id17172 . -1) (undo-tree-id17173 . -1) (undo-tree-id17174 . -1) (undo-tree-id17175 . -1) (undo-tree-id17176 . -1) (undo-tree-id17177 . -1) (undo-tree-id17178 . -1) (undo-tree-id17179 . -1) (undo-tree-id17180 . -1) (undo-tree-id17181 . -1) (undo-tree-id17182 . -1) (undo-tree-id17183 . -1) (undo-tree-id17184 . -1) (undo-tree-id17185 . -1) (undo-tree-id17186 . -1) (undo-tree-id17187 . -1) (undo-tree-id17188 . -1) (undo-tree-id17189 . -1) (undo-tree-id17190 . -1) (undo-tree-id17191 . -1) (undo-tree-id17192 . -1) (undo-tree-id17193 . -1) (undo-tree-id17194 . -1) (undo-tree-id17195 . -1) (undo-tree-id17196 . -1) (undo-tree-id17197 . -1) (undo-tree-id17198 . -1) (#("(" 0 1 (fontified t)) . -2214) (undo-tree-id17199 . -1) (undo-tree-id17200 . -1) (undo-tree-id17201 . -1) (undo-tree-id17202 . -1) (undo-tree-id17203 . -1) (undo-tree-id17204 . -1) (undo-tree-id17205 . -1) (undo-tree-id17206 . -1) (undo-tree-id17207 . -1) (undo-tree-id17208 . -1) (undo-tree-id17209 . -1) (undo-tree-id17210 . -1) (undo-tree-id17211 . -1) (undo-tree-id17212 . -1) (undo-tree-id17213 . -1) (undo-tree-id17214 . -1) (undo-tree-id17215 . -1) (undo-tree-id17216 . -1) (undo-tree-id17217 . -1) (undo-tree-id17218 . -1) (undo-tree-id17219 . -1) (undo-tree-id17220 . -1) (undo-tree-id17221 . -1) (undo-tree-id17222 . -1) (undo-tree-id17223 . -1) (undo-tree-id17224 . -1) (undo-tree-id17225 . -1) (undo-tree-id17226 . -1) (undo-tree-id17227 . -1) (undo-tree-id17228 . -1) (undo-tree-id17229 . -1) (undo-tree-id17230 . -1) (undo-tree-id17231 . -1) (undo-tree-id17232 . -1) (undo-tree-id17233 . -1) (undo-tree-id17234 . -1) (undo-tree-id17235 . -1) (undo-tree-id17236 . -1) (undo-tree-id17237 . -1) (undo-tree-id17238 . -1) (undo-tree-id17239 . -1) (undo-tree-id17240 . -1) (undo-tree-id17241 . -1) (undo-tree-id17242 . -1) (undo-tree-id17243 . -1) (undo-tree-id17244 . -1) (undo-tree-id17245 . -1) (undo-tree-id17246 . -1) (undo-tree-id17247 . -1) (undo-tree-id17248 . -1) (undo-tree-id17249 . -1) (undo-tree-id17250 . -1) (undo-tree-id17251 . -1) (undo-tree-id17252 . -1) (undo-tree-id17253 . -1) (undo-tree-id17254 . -1) (undo-tree-id17255 . -1) (undo-tree-id17256 . -1) (undo-tree-id17257 . -1) (undo-tree-id17258 . -1) (undo-tree-id17259 . -1) (undo-tree-id17260 . -1) (undo-tree-id17261 . -1) (undo-tree-id17262 . -1) (undo-tree-id17263 . -1) (undo-tree-id17264 . -1) (undo-tree-id17265 . -1) (undo-tree-id17266 . -1) (undo-tree-id17267 . -1) (undo-tree-id17268 . -1) (undo-tree-id17269 . -1) (undo-tree-id17270 . -1) (undo-tree-id17271 . -1) (undo-tree-id17272 . -1) (undo-tree-id17273 . -1) (undo-tree-id17274 . -1) (undo-tree-id17275 . -1) (undo-tree-id17276 . -1) (undo-tree-id17277 . -1) (undo-tree-id17278 . -1) (undo-tree-id17279 . -1) (undo-tree-id17280 . -1) (undo-tree-id17281 . -1) (undo-tree-id17282 . -1) (undo-tree-id17283 . -1) (undo-tree-id17284 . -1) (undo-tree-id17285 . -1) (undo-tree-id17286 . -1) (undo-tree-id17287 . -1) (#("|" 0 1 (fontified t)) . -2215) (undo-tree-id17288 . -1) (undo-tree-id17289 . -1) (undo-tree-id17290 . -1) (undo-tree-id17291 . -1) (undo-tree-id17292 . -1) (undo-tree-id17293 . -1) (undo-tree-id17294 . -1) (undo-tree-id17295 . -1) (undo-tree-id17296 . -1) (undo-tree-id17297 . -1) (undo-tree-id17298 . -1) (undo-tree-id17299 . -1) (undo-tree-id17300 . -1) (undo-tree-id17301 . -1) (undo-tree-id17302 . -1) (undo-tree-id17303 . -1) (undo-tree-id17304 . -1) (undo-tree-id17305 . -1) (undo-tree-id17306 . -1) (undo-tree-id17307 . -1) (undo-tree-id17308 . -1) (undo-tree-id17309 . -1) (undo-tree-id17310 . -1) (undo-tree-id17311 . -1) (undo-tree-id17312 . -1) (undo-tree-id17313 . -1) (undo-tree-id17314 . -1) (undo-tree-id17315 . -1) (undo-tree-id17316 . -1) (undo-tree-id17317 . -1) (undo-tree-id17318 . -1) (undo-tree-id17319 . -1) (undo-tree-id17320 . -1) (undo-tree-id17321 . -1) (undo-tree-id17322 . -1) (undo-tree-id17323 . -1) (undo-tree-id17324 . -1) (undo-tree-id17325 . -1) (undo-tree-id17326 . -1) (undo-tree-id17327 . -1) (undo-tree-id17328 . -1) (undo-tree-id17329 . -1) (undo-tree-id17330 . -1) (undo-tree-id17331 . -1) (undo-tree-id17332 . -1) (undo-tree-id17333 . -1) (undo-tree-id17334 . -1) (undo-tree-id17335 . -1) (undo-tree-id17336 . -1) (undo-tree-id17337 . -1) (undo-tree-id17338 . -1) (undo-tree-id17339 . -1) (undo-tree-id17340 . -1) (undo-tree-id17341 . -1) (undo-tree-id17342 . -1) (undo-tree-id17343 . -1) (undo-tree-id17344 . -1) (undo-tree-id17345 . -1) (undo-tree-id17346 . -1) (undo-tree-id17347 . -1) (undo-tree-id17348 . -1) (undo-tree-id17349 . -1) (undo-tree-id17350 . -1) (undo-tree-id17351 . -1) (undo-tree-id17352 . -1) (undo-tree-id17353 . -1) (undo-tree-id17354 . -1) (undo-tree-id17355 . -1) (undo-tree-id17356 . -1) (undo-tree-id17357 . -1) (undo-tree-id17358 . -1) (undo-tree-id17359 . -1) (undo-tree-id17360 . -1) (undo-tree-id17361 . -1) (undo-tree-id17362 . -1) (undo-tree-id17363 . -1) (undo-tree-id17364 . -1) (undo-tree-id17365 . -1) (undo-tree-id17366 . -1) (undo-tree-id17367 . -1) (undo-tree-id17368 . -1) (undo-tree-id17369 . -1) (undo-tree-id17370 . -1) (undo-tree-id17371 . -1) (undo-tree-id17372 . -1) (undo-tree-id17373 . -1) (undo-tree-id17374 . -1) (undo-tree-id17375 . -1) (#("x" 0 1 (fontified t)) . -2216) (undo-tree-id17376 . -1) (undo-tree-id17377 . -1) (undo-tree-id17378 . -1) (undo-tree-id17379 . -1) (undo-tree-id17380 . -1) (undo-tree-id17381 . -1) (undo-tree-id17382 . -1) (undo-tree-id17383 . -1) (undo-tree-id17384 . -1) (undo-tree-id17385 . -1) (undo-tree-id17386 . -1) (undo-tree-id17387 . -1) (undo-tree-id17388 . -1) (undo-tree-id17389 . -1) (undo-tree-id17390 . -1) (undo-tree-id17391 . -1) (undo-tree-id17392 . -1) (undo-tree-id17393 . -1) (undo-tree-id17394 . -1) (undo-tree-id17395 . -1) (undo-tree-id17396 . -1) (undo-tree-id17397 . -1) (undo-tree-id17398 . -1) (undo-tree-id17399 . -1) (undo-tree-id17400 . -1) (undo-tree-id17401 . -1) (undo-tree-id17402 . -1) (undo-tree-id17403 . -1) (undo-tree-id17404 . -1) (undo-tree-id17405 . -1) (undo-tree-id17406 . -1) (undo-tree-id17407 . -1) (undo-tree-id17408 . -1) (undo-tree-id17409 . -1) (undo-tree-id17410 . -1) (undo-tree-id17411 . -1) (undo-tree-id17412 . -1) (undo-tree-id17413 . -1) (undo-tree-id17414 . -1) (undo-tree-id17415 . -1) (undo-tree-id17416 . -1) (undo-tree-id17417 . -1) (undo-tree-id17418 . -1) (undo-tree-id17419 . -1) (undo-tree-id17420 . -1) (undo-tree-id17421 . -1) (undo-tree-id17422 . -1) (undo-tree-id17423 . -1) (undo-tree-id17424 . -1) (undo-tree-id17425 . -1) (undo-tree-id17426 . -1) (undo-tree-id17427 . -1) (undo-tree-id17428 . -1) (undo-tree-id17429 . -1) (undo-tree-id17430 . -1) (undo-tree-id17431 . -1) (undo-tree-id17432 . -1) (undo-tree-id17433 . -1) (undo-tree-id17434 . -1) (undo-tree-id17435 . -1) (undo-tree-id17436 . -1) (undo-tree-id17437 . -1) (undo-tree-id17438 . -1) (undo-tree-id17439 . -1) (undo-tree-id17440 . -1) (undo-tree-id17441 . -1) (undo-tree-id17442 . -1) (undo-tree-id17443 . -1) (undo-tree-id17444 . -1) (undo-tree-id17445 . -1) (undo-tree-id17446 . -1) (undo-tree-id17447 . -1) (undo-tree-id17448 . -1) (undo-tree-id17449 . -1) (undo-tree-id17450 . -1) (undo-tree-id17451 . -1) (undo-tree-id17452 . -1) (undo-tree-id17453 . -1) (undo-tree-id17454 . -1) (undo-tree-id17455 . -1) (undo-tree-id17456 . -1) (undo-tree-id17457 . -1) (undo-tree-id17458 . -1) (undo-tree-id17459 . -1) (undo-tree-id17460 . -1) (#("|" 0 1 (fontified t)) . -2217) (undo-tree-id17461 . -1) (undo-tree-id17462 . -1) (undo-tree-id17463 . -1) (undo-tree-id17464 . -1) (undo-tree-id17465 . -1) (undo-tree-id17466 . -1) (undo-tree-id17467 . -1) (undo-tree-id17468 . -1) (undo-tree-id17469 . -1) (undo-tree-id17470 . -1) (undo-tree-id17471 . -1) (undo-tree-id17472 . -1) (undo-tree-id17473 . -1) (undo-tree-id17474 . -1) (undo-tree-id17475 . -1) (undo-tree-id17476 . -1) (undo-tree-id17477 . -1) (undo-tree-id17478 . -1) (undo-tree-id17479 . -1) (undo-tree-id17480 . -1) (undo-tree-id17481 . -1) (undo-tree-id17482 . -1) (undo-tree-id17483 . -1) (undo-tree-id17484 . -1) (undo-tree-id17485 . -1) (undo-tree-id17486 . -1) (undo-tree-id17487 . -1) (undo-tree-id17488 . -1) (undo-tree-id17489 . -1) (undo-tree-id17490 . -1) (undo-tree-id17491 . -1) (undo-tree-id17492 . -1) (undo-tree-id17493 . -1) (undo-tree-id17494 . -1) (undo-tree-id17495 . -1) (undo-tree-id17496 . -1) (undo-tree-id17497 . -1) (undo-tree-id17498 . -1) (undo-tree-id17499 . -1) (undo-tree-id17500 . -1) (undo-tree-id17501 . -1) (undo-tree-id17502 . -1) (undo-tree-id17503 . -1) (undo-tree-id17504 . -1) (undo-tree-id17505 . -1) (undo-tree-id17506 . -1) (undo-tree-id17507 . -1) (undo-tree-id17508 . -1) (undo-tree-id17509 . -1) (undo-tree-id17510 . -1) (undo-tree-id17511 . -1) (undo-tree-id17512 . -1) (undo-tree-id17513 . -1) (undo-tree-id17514 . -1) (undo-tree-id17515 . -1) (undo-tree-id17516 . -1) (undo-tree-id17517 . -1) (undo-tree-id17518 . -1) (undo-tree-id17519 . -1) (undo-tree-id17520 . -1) (undo-tree-id17521 . -1) (undo-tree-id17522 . -1) (undo-tree-id17523 . -1) (undo-tree-id17524 . -1) (undo-tree-id17525 . -1) (undo-tree-id17526 . -1) (undo-tree-id17527 . -1) (undo-tree-id17528 . -1) (undo-tree-id17529 . -1) (undo-tree-id17530 . -1) (undo-tree-id17531 . -1) (undo-tree-id17532 . -1) (undo-tree-id17533 . -1) (undo-tree-id17534 . -1) (undo-tree-id17535 . -1) (undo-tree-id17536 . -1) (undo-tree-id17537 . -1) (undo-tree-id17538 . -1) (undo-tree-id17539 . -1) (undo-tree-id17540 . -1) (undo-tree-id17541 . -1) (undo-tree-id17542 . -1) (#(" " 0 1 (fontified t)) . -2218) (undo-tree-id17543 . -1) (undo-tree-id17544 . -1) (undo-tree-id17545 . -1) (undo-tree-id17546 . -1) (undo-tree-id17547 . -1) (undo-tree-id17548 . -1) (undo-tree-id17549 . -1) (undo-tree-id17550 . -1) (undo-tree-id17551 . -1) (undo-tree-id17552 . -1) (undo-tree-id17553 . -1) (undo-tree-id17554 . -1) (undo-tree-id17555 . -1) (undo-tree-id17556 . -1) (undo-tree-id17557 . -1) (undo-tree-id17558 . -1) (undo-tree-id17559 . -1) (undo-tree-id17560 . -1) (undo-tree-id17561 . -1) (undo-tree-id17562 . -1) (undo-tree-id17563 . -1) (undo-tree-id17564 . -1) (undo-tree-id17565 . -1) (undo-tree-id17566 . -1) (undo-tree-id17567 . -1) (undo-tree-id17568 . -1) (undo-tree-id17569 . -1) (undo-tree-id17570 . -1) (undo-tree-id17571 . -1) (undo-tree-id17572 . -1) (undo-tree-id17573 . -1) (undo-tree-id17574 . -1) (undo-tree-id17575 . -1) (undo-tree-id17576 . -1) (undo-tree-id17577 . -1) (undo-tree-id17578 . -1) (undo-tree-id17579 . -1) (undo-tree-id17580 . -1) (undo-tree-id17581 . -1) (undo-tree-id17582 . -1) (undo-tree-id17583 . -1) (undo-tree-id17584 . -1) (undo-tree-id17585 . -1) (undo-tree-id17586 . -1) (undo-tree-id17587 . -1) (undo-tree-id17588 . -1) (undo-tree-id17589 . -1) (undo-tree-id17590 . -1) (undo-tree-id17591 . -1) (undo-tree-id17592 . -1) (undo-tree-id17593 . -1) (undo-tree-id17594 . -1) (undo-tree-id17595 . -1) (undo-tree-id17596 . -1) (undo-tree-id17597 . -1) (undo-tree-id17598 . -1) (undo-tree-id17599 . -1) (undo-tree-id17600 . -1) (undo-tree-id17601 . -1) (undo-tree-id17602 . -1) (undo-tree-id17603 . -1) (undo-tree-id17604 . -1) (undo-tree-id17605 . -1) (undo-tree-id17606 . -1) (undo-tree-id17607 . -1) (undo-tree-id17608 . -1) (undo-tree-id17609 . -1) (undo-tree-id17610 . -1) (undo-tree-id17611 . -1) (undo-tree-id17612 . -1) (undo-tree-id17613 . -1) (undo-tree-id17614 . -1) (undo-tree-id17615 . -1) (undo-tree-id17616 . -1) (undo-tree-id17617 . -1) (undo-tree-id17618 . -1) (undo-tree-id17619 . -1) (undo-tree-id17620 . -1) (undo-tree-id17621 . -1) (#("x" 0 1 (fontified t)) . -2219) (undo-tree-id17622 . -1) (undo-tree-id17623 . -1) (undo-tree-id17624 . -1) (undo-tree-id17625 . -1) (undo-tree-id17626 . -1) (undo-tree-id17627 . -1) (undo-tree-id17628 . -1) (undo-tree-id17629 . -1) (undo-tree-id17630 . -1) (undo-tree-id17631 . -1) (undo-tree-id17632 . -1) (undo-tree-id17633 . -1) (undo-tree-id17634 . -1) (undo-tree-id17635 . -1) (undo-tree-id17636 . -1) (undo-tree-id17637 . -1) (undo-tree-id17638 . -1) (undo-tree-id17639 . -1) (undo-tree-id17640 . -1) (undo-tree-id17641 . -1) (undo-tree-id17642 . -1) (undo-tree-id17643 . -1) (undo-tree-id17644 . -1) (undo-tree-id17645 . -1) (undo-tree-id17646 . -1) (undo-tree-id17647 . -1) (undo-tree-id17648 . -1) (undo-tree-id17649 . -1) (undo-tree-id17650 . -1) (undo-tree-id17651 . -1) (undo-tree-id17652 . -1) (undo-tree-id17653 . -1) (undo-tree-id17654 . -1) (undo-tree-id17655 . -1) (undo-tree-id17656 . -1) (#(")" 0 1 (fontified t)) . -2220) (undo-tree-id17657 . -1) (undo-tree-id17658 . 1) (undo-tree-id17659 . -1) (undo-tree-id17660 . -1) (undo-tree-id17661 . -1) (undo-tree-id17662 . -1) (undo-tree-id17663 . -1) 2221) ((2210 . 2221) (t 25944 36985 277083 99000)) (25944 36985 237133 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -2034) (undo-tree-id18616 . -1) (undo-tree-id18617 . -1) (undo-tree-id18618 . -1) (undo-tree-id18619 . -1) (undo-tree-id18620 . -1) (undo-tree-id18621 . -1) (undo-tree-id18622 . -1) (undo-tree-id18623 . -1) (undo-tree-id18624 . -1) (undo-tree-id18625 . -1) (undo-tree-id18626 . -1) (undo-tree-id18627 . -1) (undo-tree-id18628 . -1) (undo-tree-id18629 . -1) (undo-tree-id18630 . -1) (undo-tree-id18631 . -1) (undo-tree-id18632 . -1) (undo-tree-id18633 . -1) (undo-tree-id18634 . -1) (undo-tree-id18635 . -1) (undo-tree-id18636 . -1) (undo-tree-id18637 . -1) (undo-tree-id18638 . -1) (undo-tree-id18639 . -1) (undo-tree-id18640 . -1) (undo-tree-id18641 . -1) 2035) nil (25944 37150 752541 0) 0 nil])
nil
([nil nil ((2034 . 2037)) nil (25944 37150 752514 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -2034) (undo-tree-id18590 . -1) (undo-tree-id18591 . -1) (undo-tree-id18592 . -1) (undo-tree-id18593 . -1) (undo-tree-id18594 . -1) (undo-tree-id18595 . -1) (undo-tree-id18596 . -1) (undo-tree-id18597 . -1) (undo-tree-id18598 . -1) (undo-tree-id18599 . -1) (undo-tree-id18600 . -1) (undo-tree-id18601 . -1) (undo-tree-id18602 . -1) (undo-tree-id18603 . -1) (undo-tree-id18604 . -1) (undo-tree-id18605 . -1) (#("1" 0 1 (fontified t)) . -2035) (undo-tree-id18606 . -1) (undo-tree-id18607 . -1) (undo-tree-id18608 . -1) (undo-tree-id18609 . -1) (undo-tree-id18610 . -1) (undo-tree-id18611 . -1) (#("0" 0 1 (fontified t)) . -2036) (undo-tree-id18612 . -1) (undo-tree-id18613 . -1) (undo-tree-id18614 . -1) (undo-tree-id18615 . -1) 2037) nil (25944 37150 752512 0) 0 nil])
([nil nil ((2034 . 2041)) nil (25944 37150 752485 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -2040) (undo-tree-id18586 . -1) (undo-tree-id18587 . -1) (undo-tree-id18588 . -1) (undo-tree-id18589 . -1) 2041) nil (25944 37150 752483 0) 0 nil])
([nil nil ((2040 . 2041)) nil (25944 37150 752478 0) 0 nil])
([nil nil ((#("1f32" 0 1 (fontified t) 1 4 (face font-lock-type-face fontified t)) . -2052) (undo-tree-id18572 . -4) (undo-tree-id18573 . -4) (undo-tree-id18574 . -4) (undo-tree-id18575 . -4) (undo-tree-id18576 . -4) (undo-tree-id18577 . -4) (undo-tree-id18578 . -4) (undo-tree-id18579 . -4) (undo-tree-id18580 . -4) (undo-tree-id18581 . -4) (undo-tree-id18582 . -4) (undo-tree-id18583 . -4) (undo-tree-id18584 . -4) (undo-tree-id18585 . -4) 2056) nil (25944 37150 752476 0) 0 nil])
([nil nil ((#("1f32.." 0 1 (fontified t) 1 4 (face font-lock-type-face fontified t) 4 6 (fontified t)) . -2046) (undo-tree-id18557 . -6) (undo-tree-id18558 . -6) (undo-tree-id18559 . -6) (undo-tree-id18560 . -6) (undo-tree-id18561 . -6) (undo-tree-id18562 . -6) (undo-tree-id18563 . -6) (undo-tree-id18564 . -6) (undo-tree-id18565 . -6) (undo-tree-id18566 . -6) (undo-tree-id18567 . -6) (undo-tree-id18568 . -6) (undo-tree-id18569 . -6) (undo-tree-id18570 . -6) (undo-tree-id18571 . -6) 2052) nil (25944 37150 752461 0) 0 nil])
([nil nil ((#("0." 0 2 (fontified t)) . -2044) (undo-tree-id18541 . -2) (undo-tree-id18542 . -2) (undo-tree-id18543 . -2) (undo-tree-id18544 . -2) (undo-tree-id18545 . -2) (undo-tree-id18546 . -2) (undo-tree-id18547 . -2) (undo-tree-id18548 . -2) (undo-tree-id18549 . -2) (undo-tree-id18550 . -2) (undo-tree-id18551 . -2) (undo-tree-id18552 . -2) (undo-tree-id18553 . -2) (undo-tree-id18554 . -2) (undo-tree-id18555 . -2) (undo-tree-id18556 . -2) 2046) nil (25944 37150 752441 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -2043) (undo-tree-id18518 . -1) (undo-tree-id18519 . -1) (undo-tree-id18520 . -1) (undo-tree-id18521 . -1) (undo-tree-id18522 . -1) (undo-tree-id18523 . -1) (undo-tree-id18524 . -1) (undo-tree-id18525 . -1) (undo-tree-id18526 . -1) (undo-tree-id18527 . -1) (undo-tree-id18528 . -1) (undo-tree-id18529 . -1) (undo-tree-id18530 . -1) (undo-tree-id18531 . -1) (undo-tree-id18532 . -1) (undo-tree-id18533 . -1) (undo-tree-id18534 . -1) (undo-tree-id18535 . -1) (undo-tree-id18536 . -1) (undo-tree-id18537 . -1) (undo-tree-id18538 . -1) (undo-tree-id18539 . -1) (undo-tree-id18540 . -1) 2044) nil (25944 37150 752424 0) 0 nil])
([nil nil ((2043 . 2045)) nil (25944 37150 752399 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -2043) (undo-tree-id18508 . -1) (undo-tree-id18509 . -1) (undo-tree-id18510 . -1) (undo-tree-id18511 . -1) (undo-tree-id18512 . -1) (undo-tree-id18513 . -1) (#("0" 0 1 (fontified t)) . -2044) (undo-tree-id18514 . -1) (undo-tree-id18515 . -1) (undo-tree-id18516 . -1) (undo-tree-id18517 . -1) 2045) nil (25944 37150 752397 0) 0 nil])
([nil nil ((2043 . 2044)) nil (25944 37150 752385 0) 0 nil])
([nil nil ((2044 . 2049)) nil (25944 37150 752384 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -2048) (undo-tree-id18504 . -1) (undo-tree-id18505 . -1) (undo-tree-id18506 . -1) (undo-tree-id18507 . -1) 2049) nil (25944 37150 752382 0) 0 nil])
([nil nil ((2048 . 2049)) nil (25944 37150 752376 0) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -2048) (undo-tree-id18502 . -1) (undo-tree-id18503 . -1) 2049) nil (25944 37150 752374 0) 0 nil])
([nil nil ((2048 . 2050)) nil (25944 37150 752362 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-keyword-face fontified t)) . -2194) (undo-tree-id18679 . -1) (undo-tree-id18680 . -1) (undo-tree-id18681 . -1) (undo-tree-id18682 . -1) (undo-tree-id18683 . -1) (undo-tree-id18684 . -1) (undo-tree-id18685 . -1) (undo-tree-id18686 . -1) (undo-tree-id18687 . -1) (undo-tree-id18688 . -1) (undo-tree-id18689 . -1) (undo-tree-id18690 . -1) (undo-tree-id18691 . -1) (undo-tree-id18692 . -1) (undo-tree-id18693 . -1) (undo-tree-id18694 . -1) (undo-tree-id18695 . -1) (undo-tree-id18696 . -1) (undo-tree-id18697 . -1) (undo-tree-id18698 . -1) (undo-tree-id18699 . -1) (undo-tree-id18700 . -1) (#(" " 0 1 (fontified t)) . -2195) (undo-tree-id18701 . -1) (undo-tree-id18702 . -1) (undo-tree-id18703 . -1) (undo-tree-id18704 . -1) (undo-tree-id18705 . -1) (undo-tree-id18706 . -1) (undo-tree-id18707 . -1) (undo-tree-id18708 . -1) (undo-tree-id18709 . -1) (undo-tree-id18710 . -1) (undo-tree-id18711 . -1) (undo-tree-id18712 . -1) (undo-tree-id18713 . -1) (undo-tree-id18714 . -1) (undo-tree-id18715 . -1) (undo-tree-id18716 . -1) (undo-tree-id18717 . -1) (undo-tree-id18718 . -1) (undo-tree-id18719 . -1) (undo-tree-id18720 . -1) (undo-tree-id18721 . -1) (#("f" 0 1 (fontified t)) . -2196) (undo-tree-id18722 . -1) (undo-tree-id18723 . -1) (undo-tree-id18724 . -1) (undo-tree-id18725 . -1) (undo-tree-id18726 . -1) (undo-tree-id18727 . -1) (undo-tree-id18728 . -1) (undo-tree-id18729 . -1) (undo-tree-id18730 . -1) (undo-tree-id18731 . -1) (undo-tree-id18732 . -1) (undo-tree-id18733 . -1) (undo-tree-id18734 . -1) (undo-tree-id18735 . -1) (undo-tree-id18736 . -1) (undo-tree-id18737 . -1) (undo-tree-id18738 . -1) (undo-tree-id18739 . -1) (undo-tree-id18740 . -1) (undo-tree-id18741 . -1) (#("3" 0 1 (fontified t)) . -2197) (undo-tree-id18742 . -1) (undo-tree-id18743 . -1) (undo-tree-id18744 . -1) (undo-tree-id18745 . -1) (undo-tree-id18746 . -1) (undo-tree-id18747 . -1) (undo-tree-id18748 . -1) (undo-tree-id18749 . -1) (undo-tree-id18750 . -1) (undo-tree-id18751 . -1) (undo-tree-id18752 . -1) (undo-tree-id18753 . -1) (undo-tree-id18754 . -1) (undo-tree-id18755 . -1) (undo-tree-id18756 . -1) (undo-tree-id18757 . -1) (undo-tree-id18758 . -1) (undo-tree-id18759 . -1) (undo-tree-id18760 . -1) (#("2" 0 1 (face font-lock-type-face fontified t)) . -2198) (undo-tree-id18761 . -1) (undo-tree-id18762 . -1) (undo-tree-id18763 . -1) (undo-tree-id18764 . -1) (undo-tree-id18765 . -1) (undo-tree-id18766 . -1) (undo-tree-id18767 . -1) (undo-tree-id18768 . -1) (undo-tree-id18769 . -1) (undo-tree-id18770 . -1) (undo-tree-id18771 . -1) (undo-tree-id18772 . -1) (undo-tree-id18773 . -1) (undo-tree-id18774 . -1) (undo-tree-id18775 . -1) (undo-tree-id18776 . -1) (undo-tree-id18777 . -1) (undo-tree-id18778 . -1) 2199 (t 25944 37150 792452 940000)) nil (25944 37172 911074 0) 0 nil])
([nil nil ((2194 . 2197)) nil (25944 37172 910971 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -2196) (undo-tree-id18675 . -1) (undo-tree-id18676 . -1) (undo-tree-id18677 . -1) (undo-tree-id18678 . -1) 2197) nil (25944 37172 910969 0) 0 nil])
([nil nil ((2196 . 2199)) nil (25944 37172 910955 0) 0 nil])
([nil nil ((#("6" 0 1 (fontified t)) . -2197) (undo-tree-id18779 . -1) (undo-tree-id18780 . -1) (undo-tree-id18781 . -1) (undo-tree-id18782 . -1) (undo-tree-id18783 . -1) (undo-tree-id18784 . -1) (undo-tree-id18785 . -1) (undo-tree-id18786 . -1) (undo-tree-id18787 . -1) (undo-tree-id18788 . -1) (undo-tree-id18789 . -1) (undo-tree-id18790 . -1) (undo-tree-id18791 . -1) (undo-tree-id18792 . -1) (undo-tree-id18793 . -1) (undo-tree-id18794 . -1) (undo-tree-id18795 . -1) (undo-tree-id18796 . -1) (undo-tree-id18797 . -1) (undo-tree-id18798 . -1) (undo-tree-id18799 . -1) (#("4" 0 1 (face font-lock-type-face fontified t)) . -2198) (undo-tree-id18800 . -1) (undo-tree-id18801 . -1) (undo-tree-id18802 . -1) (undo-tree-id18803 . -1) (undo-tree-id18804 . -1) (undo-tree-id18805 . -1) (undo-tree-id18806 . -1) (undo-tree-id18807 . -1) (undo-tree-id18808 . -1) (undo-tree-id18809 . -1) (undo-tree-id18810 . -1) (undo-tree-id18811 . -1) (undo-tree-id18812 . -1) (undo-tree-id18813 . -1) (undo-tree-id18814 . -1) (undo-tree-id18815 . -1) (undo-tree-id18816 . -1) (undo-tree-id18817 . -1) (undo-tree-id18818 . -1) (undo-tree-id18819 . -1) 2199 (t 25944 37172 950880 267000)) nil (25944 37184 25343 0) 0 nil])
([nil nil ((2197 . 2199)) nil (25944 37184 25289 0) 0 nil])
([nil nil ((1931 . 1937) (t 25944 37184 65477 933000)) nil (25944 37199 811072 0) 0 nil])
([nil nil ((1945 . 1947) (1932 . 1940) (#("	" 0 1 (fontified t)) . 1932) 1937 (1937 . 1937) (1937 . 1938)) nil (25944 37199 811071 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1952 1953 nil nil nil t #s(yas--exit 1954 nil))) #s(yas--exit 1954 nil) 76 nil #s(yas--field 1 1952 1953 nil nil nil t #s(yas--exit 1954 nil)) nil nil)) (1945 . 1957) (#("margin(${1:size})$0" 0 19 (fontified nil)) . 1945) (1945 . 1964) (#("ma" 0 2 (fontified nil)) . 1945) (1945 . 1947) (#("margin(…)" 0 9 (fontified nil)) . -1945) (1945 . 1954) (#("ma" 0 2 (fontified t)) . -1945) (undo-tree-id18821 . -2) (undo-tree-id18822 . -1) (undo-tree-id18823 . -1) (undo-tree-id18824 . -2) (undo-tree-id18825 . -2) 1947) nil (25944 37199 811067 0) 0 nil])
([nil nil ((#("size" 0 4 (fontified nil)) . 1953) (undo-tree-id18820 . -4) (1952 . 1953)) nil (25944 37199 811058 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1945 1954 #s(yas--snippet nil (#s(yas--field 1 1952 1953 nil nil nil t #s(yas--exit 1954 nil))) #s(yas--exit 1954 nil) 76 nil #s(yas--field 1 1952 1953 nil nil nil t #s(yas--exit 1954 nil)) nil nil))) nil (25944 37296 215165 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1195) (undo-tree-id18901 . -1) (undo-tree-id18902 . -1) (undo-tree-id18903 . -1) (undo-tree-id18904 . -1) (undo-tree-id18905 . -1) (undo-tree-id18906 . -1) (undo-tree-id18907 . -1) (undo-tree-id18908 . -1) (undo-tree-id18909 . -1) (undo-tree-id18910 . -1) (undo-tree-id18911 . -1) (undo-tree-id18912 . -1) (undo-tree-id18913 . -1) (undo-tree-id18914 . -1) (undo-tree-id18915 . -1) (undo-tree-id18916 . -1) (undo-tree-id18917 . -1) (undo-tree-id18918 . -1) (undo-tree-id18919 . -1) (undo-tree-id18920 . -1) (undo-tree-id18921 . -1) (undo-tree-id18922 . -1) (undo-tree-id18923 . -1) (undo-tree-id18924 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1196) (undo-tree-id18925 . -1) (undo-tree-id18926 . -1) (undo-tree-id18927 . -1) (undo-tree-id18928 . -1) (undo-tree-id18929 . -1) (undo-tree-id18930 . -1) (undo-tree-id18931 . -1) (undo-tree-id18932 . -1) (undo-tree-id18933 . -1) (undo-tree-id18934 . -1) (undo-tree-id18935 . -1) (undo-tree-id18936 . -1) (undo-tree-id18937 . -1) (undo-tree-id18938 . -1) (undo-tree-id18939 . -1) (undo-tree-id18940 . -1) (undo-tree-id18941 . -1) (undo-tree-id18942 . -1) (undo-tree-id18943 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1197) (undo-tree-id18944 . -1) (undo-tree-id18945 . -1) (undo-tree-id18946 . -1) (undo-tree-id18947 . -1) (undo-tree-id18948 . -1) (undo-tree-id18949 . -1) (undo-tree-id18950 . -1) (undo-tree-id18951 . -1) (undo-tree-id18952 . -1) (undo-tree-id18953 . -1) (undo-tree-id18954 . -1) (undo-tree-id18955 . -1) (undo-tree-id18956 . -1) (undo-tree-id18957 . -1) (undo-tree-id18958 . -1) (undo-tree-id18959 . -1) (undo-tree-id18960 . -1) (undo-tree-id18961 . -1) 1198 (t 25944 37297 125390 602000)) nil (25944 37357 973591 0) 0 nil] [nil nil ((#("3" 0 1 (fontified t)) . -2021) (undo-tree-id18826 . -1) (undo-tree-id18827 . -1) (undo-tree-id18828 . -1) (undo-tree-id18829 . -1) (undo-tree-id18830 . -1) 2022 (t 25944 37199 852267 405000)) ((2021 . 2022)) (25944 37295 762972 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1253) (undo-tree-id18863 . -1) (undo-tree-id18864 . -1) (undo-tree-id18865 . -1) (undo-tree-id18866 . -1) (undo-tree-id18867 . -1) (undo-tree-id18868 . -1) (undo-tree-id18869 . -1) (undo-tree-id18870 . -1) (undo-tree-id18871 . -1) (undo-tree-id18872 . -1) (undo-tree-id18873 . -1) (undo-tree-id18874 . -1) (undo-tree-id18875 . -1) (undo-tree-id18876 . -1) (undo-tree-id18877 . -1) (undo-tree-id18878 . -1) (undo-tree-id18879 . -1) (undo-tree-id18880 . -1) (undo-tree-id18881 . -1) (undo-tree-id18882 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1254) (undo-tree-id18883 . -1) (undo-tree-id18884 . -1) (undo-tree-id18885 . -1) (undo-tree-id18886 . -1) (undo-tree-id18887 . -1) (undo-tree-id18888 . -1) (undo-tree-id18889 . -1) (undo-tree-id18890 . -1) (undo-tree-id18891 . -1) (undo-tree-id18892 . -1) (undo-tree-id18893 . -1) (undo-tree-id18894 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1255) (undo-tree-id18895 . -1) (undo-tree-id18896 . -1) (undo-tree-id18897 . -1) (undo-tree-id18898 . -1) (undo-tree-id18899 . -1) (undo-tree-id18900 . -1) 1256) nil (25944 37357 973523 0) 0 nil])
([nil nil ((2021 . 2022)) ((#("4" 0 1 (fontified t)) . 2021) (undo-tree-id18831 . -1) (undo-tree-id18832 . -1) (undo-tree-id18833 . -1) (undo-tree-id18834 . -1) (undo-tree-id18835 . -1) (undo-tree-id18836 . -1) (undo-tree-id18837 . -1) (undo-tree-id18838 . -1) (undo-tree-id18839 . -1) (undo-tree-id18840 . -1) (undo-tree-id18841 . -1) (undo-tree-id18842 . -1) (undo-tree-id18843 . -1) (undo-tree-id18844 . -1) (undo-tree-id18845 . -1) (undo-tree-id18846 . -1) (undo-tree-id18847 . -1) (undo-tree-id18848 . -1) (undo-tree-id18849 . -1) (undo-tree-id18850 . -1) (undo-tree-id18851 . -1) (undo-tree-id18852 . -1) (undo-tree-id18853 . -1) (undo-tree-id18854 . -1) (undo-tree-id18855 . -1) (undo-tree-id18856 . -1) (undo-tree-id18857 . -1) (undo-tree-id18858 . -1) (undo-tree-id18859 . -1) (undo-tree-id18860 . -1) (undo-tree-id18861 . -1) (undo-tree-id18862 . -1) (t 25944 37286 985967 261000)) (25944 37286 943112 0) 0 nil])
([nil nil ((1480 . 1482) (t 25944 37358 14233 857000)) nil (25944 37376 309859 0) 0 nil])
nil
([nil nil ((1482 . 1499)) nil (25944 37376 309858 0) 0 nil])
([nil nil ((1498 . 1507) (#("e" 0 1 (fontified nil)) . 1498) (1498 . 1499) (#("event_vec" 0 9 (fontified nil)) . -1498) (1498 . 1507) (#("e" 0 1 (fontified t)) . -1498) (undo-tree-id18967 . -1) (undo-tree-id18968 . -1) (undo-tree-id18969 . -1) (undo-tree-id18970 . -1) 1499) nil (25944 37376 309856 0) 0 nil])
([nil nil ((1507 . 1509)) nil (25944 37376 309849 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1508 1513 #s(yas--snippet nil nil #s(yas--exit 1513 nil) 77 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1513 nil) 77 nil nil nil nil)) (1508 . 1513) (#("get()$0" 0 7 (fontified nil)) . 1508) (1508 . 1515) (#("g" 0 1 (fontified nil)) . 1508) (1508 . 1509) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -1508) (1508 . 1528) (#("g" 0 1 (fontified t)) . -1508) (undo-tree-id18962 . -1) (undo-tree-id18963 . -1) (undo-tree-id18964 . -1) (undo-tree-id18965 . -1) (undo-tree-id18966 . -1) 1509) nil (25944 37376 309846 0) 0 nil])
([nil nil ((1513 . 1514)) nil (25944 37376 309827 0) 0 nil])
([nil nil ((#("		(0..1024).map(|x| x as i32).map(|x| (x, x)),
		&RED,
            )).unwrap()
            .label(\"y = x^2\")
            .legend(|(x, y)| PathElement::new(vec![(x, y), (x + 20, y)], &RED));" 0 2 (fontified t) 2 22 (fontified t) 22 24 (face font-lock-keyword-face fontified t) 24 25 (fontified t) 25 28 (face font-lock-type-face fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 47 (fontified t) 47 49 (fontified t) 49 50 (face rust-ampersand-face fontified t) 50 53 (face font-lock-type-face fontified t) 53 55 (fontified t) 55 79 (fontified t) 79 98 (fontified t) 98 107 (face font-lock-string-face fontified t) 107 109 (fontified t) 109 138 (fontified t) 138 149 (face font-lock-type-face fontified t) 149 155 (fontified t) 155 159 (face font-lock-preprocessor-face fontified t) 159 182 (fontified t) 182 183 (face rust-ampersand-face fontified t) 183 186 (face font-lock-type-face fontified t) 186 188 (fontified t) 188 189 (fontified t rear-nonsticky t)) . 2222) (undo-tree-id19278 . -189) (t 25944 37376 350233 593000)) nil (25944 37548 882225 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2190) (undo-tree-id19277 . -1) 2191) nil (25944 37548 882223 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2186) (undo-tree-id19272 . -1) (#(" " 0 1 (fontified t)) . -2187) (undo-tree-id19273 . -1) (#(" " 0 1 (fontified t)) . -2188) (undo-tree-id19274 . -1) (#(" " 0 1 (fontified t)) . -2189) (undo-tree-id19275 . -1) (#(" " 0 1 (fontified t)) . -2190) (undo-tree-id19276 . -1) 2191) nil (25944 37548 882220 0) 0 nil])
([nil nil ((#("chart
      " 0 6 (fontified t) 6 12 (fontified t)) . -2174) (undo-tree-id19271 . -12) 2186) nil (25944 37548 882213 0) 0 nil])
([nil nil ((2174 . 2179)) nil (25944 37548 882211 0) 0 nil])
([nil nil ((#("new(" 0 4 (fontified t)) . -2204) (undo-tree-id19268 . -4) (undo-tree-id19269 . -4) (undo-tree-id19270 . -4) 2208) nil (25944 37548 882209 0) 0 nil])
([nil nil ((#("LineSeries::" 0 10 (face font-lock-type-face fontified t) 10 12 (fontified t)) . -2192) (undo-tree-id19265 . -12) (undo-tree-id19266 . -12) (undo-tree-id19267 . -12) 2204) nil (25944 37548 882205 0) 0 nil])
([nil nil ((2192 . 2196)) nil (25944 37548 882201 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2194 2202 #s(yas--snippet nil nil #s(yas--exit 2202 nil) 78 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 2202 nil) 78 nil nil nil nil)) (2194 . 2202) (#("unwrap()$0" 0 10 (fontified nil)) . 2194) (2194 . 2204) (#("un" 0 2 (fontified nil)) . 2194) (2194 . 2196) (#("unwrap()" 0 8 (fontified nil)) . -2194) (2194 . 2202) (#("un" 0 2 (fontified t)) . -2194) (undo-tree-id19264 . -2) 2196) nil (25944 37548 882199 0) 0 nil])
([nil nil ((2202 . 2203)) nil (25944 37548 882195 0) 0 nil])
([nil nil ((2194 . 2195) (#("	    " 0 5 (fontified nil)) . 2193) (undo-tree-id19263 . -1) (2194 . 2198) (2192 . 2195)) nil (25944 37548 882193 0) 0 nil])
([nil nil ((2193 . 2198)) nil (25944 37548 882190 0) 0 nil])
([nil nil ((2198 . 2203)) nil (25944 37548 882190 0) 0 nil])
([nil nil ((2198 . 2208) (#("LineS" 0 5 (fontified nil)) . 2198) (2198 . 2203) (#("LineSeries" 0 10 (fontified nil)) . -2198) (2198 . 2208) (#("LineS" 0 5 (face font-lock-type-face fontified t)) . -2198) (undo-tree-id19262 . -5) 2203) nil (25944 37548 882188 0) 0 nil])
([nil nil ((2208 . 2213)) nil (25944 37548 882184 0) 0 nil])
([nil nil ((2210 . 2213) (#("new" 0 3 (fontified nil)) . 2210) (2210 . 2213) (#("new" 0 3 (fontified t)) . -2210) (undo-tree-id19261 . -3) 2213) nil (25944 37548 882183 0) 0 nil])
([nil nil ((2213 . 2215)) nil (25944 37548 882180 0) 0 nil])
([nil nil ((2214 . 2215)) nil (25944 37548 882179 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2214) (undo-tree-id19259 . -1) (undo-tree-id19260 . -1) 2215) nil (25944 37548 882178 0) 0 nil])
([nil nil ((2214 . 2217)) nil (25944 37548 882175 0) 0 nil])
([nil nil ((2214 . 2223) (#("adc" 0 3 (fontified nil)) . 2214) (2214 . 2217) (#("adc_datas" 0 9 (fontified nil)) . -2214) (2214 . 2223) (#("adc" 0 3 (fontified t)) . -2214) (undo-tree-id19258 . -3) 2217) nil (25944 37548 882173 0) 0 nil])
([nil nil ((2223 . 2224)) nil (25944 37548 882170 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2224 2230 #s(yas--snippet nil nil #s(yas--exit 2230 nil) 79 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 2230 nil) 79 nil nil nil nil)) (2224 . 2230) (#("iter()$0" 0 8 (fontified nil)) . 2224) (2224 . 2232) (#("iter()" 0 6 (fontified nil)) . -2224) (2224 . 2230)) nil (25944 37548 882168 0) 0 nil])
([nil nil ((2230 . 2232)) nil (25944 37548 882166 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 2235 2238 nil nil nil t #s(yas--exit 2239 nil))) #s(yas--exit 2239 nil) 80 nil #s(yas--field 1 2235 2238 nil nil nil t #s(yas--exit 2239 nil)) nil nil)) (2231 . 2237) (#("map(${1:f})$0" 0 13 (fontified nil)) . 2231) (2231 . 2244) (#("m" 0 1 (fontified nil)) . 2231) (2231 . 2232) (#("map(…) (as Iterator)" 0 20 (fontified nil)) . -2231) (2231 . 2251) (#("m" 0 1 (fontified t)) . -2231) (undo-tree-id19257 . -1) 2232) nil (25944 37548 882164 0) 0 nil])
([nil nil ((2236 . 2237) (#("f" 0 1 (fontified nil)) . 2236) (2235 . 2236)) nil (25944 37548 882160 0) 0 nil])
([nil nil ((2236 . 2237)) nil (25944 37548 882158 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2231 2239 #s(yas--snippet nil (#s(yas--field 1 2235 2238 nil nil nil t #s(yas--exit 2239 nil))) #s(yas--exit 2239 nil) 80 nil #s(yas--field 1 2235 2238 nil nil nil t #s(yas--exit 2239 nil)) nil nil))) nil (25944 37548 882157 0) 0 nil])
([nil nil ((#("x|" 0 2 (fontified t)) . -2236) (undo-tree-id19254 . -2) (undo-tree-id19255 . -2) (undo-tree-id19256 . 1) 2238) nil (25944 37548 882156 0) 0 nil])
([nil nil ((#("map(|" 0 5 (fontified t)) . -2231) (undo-tree-id19251 . -5) (undo-tree-id19252 . -5) (undo-tree-id19253 . -4) 2236) nil (25944 37548 882152 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2230) (undo-tree-id19248 . -1) (undo-tree-id19249 . -1) (undo-tree-id19250 . -1) 2231) nil (25944 37548 882147 0) 0 nil])
([nil nil ((2230 . 2231)) nil (25944 37548 882143 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2230) (undo-tree-id19247 . -1) 2231) nil (25944 37548 882142 0) 0 nil])
([nil nil ((2230 . 2232)) nil (25944 37548 882140 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2224) (undo-tree-id19221 . -1) (undo-tree-id19222 . -1) (undo-tree-id19223 . -1) (undo-tree-id19224 . -1) (undo-tree-id19225 . -1) (undo-tree-id19226 . -1) (#("t" 0 1 (fontified t)) . -2225) (undo-tree-id19227 . -1) (undo-tree-id19228 . -1) (undo-tree-id19229 . -1) (undo-tree-id19230 . -1) (undo-tree-id19231 . -1) (#("e" 0 1 (fontified t)) . -2226) (undo-tree-id19232 . -1) (undo-tree-id19233 . -1) (undo-tree-id19234 . -1) (undo-tree-id19235 . -1) (#("r" 0 1 (fontified t)) . -2227) (undo-tree-id19236 . -1) (undo-tree-id19237 . -1) (undo-tree-id19238 . -1) (#("(" 0 1 (fontified t)) . -2228) (undo-tree-id19239 . -1) (undo-tree-id19240 . -1) (undo-tree-id19241 . -1) (#(")" 0 1 (fontified t)) . -2229) (undo-tree-id19242 . -1) (undo-tree-id19243 . -1) (undo-tree-id19244 . -1) (#("." 0 1 (fontified t)) . -2230) (undo-tree-id19245 . -1) (#("e" 0 1 (fontified t)) . -2231) (undo-tree-id19246 . -1) 2232) nil (25944 37548 882137 0) 0 nil])
([nil nil ((2224 . 2225)) nil (25944 37548 882109 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2223) (undo-tree-id19137 . -1) (undo-tree-id19138 . -1) (undo-tree-id19139 . -1) (undo-tree-id19140 . -1) (undo-tree-id19141 . -1) (undo-tree-id19142 . -1) (undo-tree-id19143 . -1) (undo-tree-id19144 . -1) (undo-tree-id19145 . -1) (undo-tree-id19146 . -1) (undo-tree-id19147 . -1) (undo-tree-id19148 . -1) (undo-tree-id19149 . -1) (undo-tree-id19150 . -1) (undo-tree-id19151 . -1) (undo-tree-id19152 . -1) (undo-tree-id19153 . -1) (undo-tree-id19154 . -1) (undo-tree-id19155 . -1) (undo-tree-id19156 . -1) (undo-tree-id19157 . -1) (undo-tree-id19158 . -1) (undo-tree-id19159 . -1) (undo-tree-id19160 . -1) (undo-tree-id19161 . -1) (undo-tree-id19162 . -1) (undo-tree-id19163 . -1) (undo-tree-id19164 . -1) (undo-tree-id19165 . -1) (undo-tree-id19166 . -1) (undo-tree-id19167 . -1) (undo-tree-id19168 . -1) (undo-tree-id19169 . -1) (undo-tree-id19170 . -1) (undo-tree-id19171 . -1) (undo-tree-id19172 . -1) (undo-tree-id19173 . -1) (undo-tree-id19174 . -1) (undo-tree-id19175 . -1) (#("e" 0 1 (fontified t)) . -2224) (undo-tree-id19176 . -1) (undo-tree-id19177 . -1) (undo-tree-id19178 . -1) (undo-tree-id19179 . -1) (undo-tree-id19180 . -1) (undo-tree-id19181 . -1) (undo-tree-id19182 . -1) (undo-tree-id19183 . -1) (undo-tree-id19184 . -1) (undo-tree-id19185 . -1) (undo-tree-id19186 . -1) (undo-tree-id19187 . -1) (undo-tree-id19188 . -1) (undo-tree-id19189 . -1) (undo-tree-id19190 . -1) (undo-tree-id19191 . -1) (undo-tree-id19192 . -1) (undo-tree-id19193 . -1) (undo-tree-id19194 . -1) (undo-tree-id19195 . -1) (undo-tree-id19196 . -1) (undo-tree-id19197 . -1) (undo-tree-id19198 . -1) (undo-tree-id19199 . -1) (#(")" 0 1 (fontified t)) . -2225) (undo-tree-id19200 . -1) (undo-tree-id19201 . 1) (undo-tree-id19202 . -1) (undo-tree-id19203 . -1) (undo-tree-id19204 . -1) (undo-tree-id19205 . -1) (undo-tree-id19206 . -1) (undo-tree-id19207 . -1) (undo-tree-id19208 . -1) (undo-tree-id19209 . -1) (undo-tree-id19210 . -1) (undo-tree-id19211 . -1) (undo-tree-id19212 . -1) (undo-tree-id19213 . -1) (undo-tree-id19214 . -1) (#(")" 0 1 (fontified t)) . -2226) (undo-tree-id19215 . -1) (undo-tree-id19216 . -1) (undo-tree-id19217 . -1) (undo-tree-id19218 . -1) (undo-tree-id19219 . -1) (undo-tree-id19220 . -1) 2227) nil (25944 37548 882104 0) 0 nil])
([nil nil ((2223 . 2225)) nil (25944 37548 882024 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -2223) (undo-tree-id19101 . -1) (undo-tree-id19102 . -1) (undo-tree-id19103 . -1) (undo-tree-id19104 . -1) (undo-tree-id19105 . -1) (undo-tree-id19106 . -1) (undo-tree-id19107 . -1) (undo-tree-id19108 . -1) (undo-tree-id19109 . -1) (undo-tree-id19110 . -1) (undo-tree-id19111 . -1) (undo-tree-id19112 . -1) (undo-tree-id19113 . -1) (undo-tree-id19114 . -1) (undo-tree-id19115 . -1) (undo-tree-id19116 . -1) (undo-tree-id19117 . -1) (undo-tree-id19118 . -1) (undo-tree-id19119 . -1) (undo-tree-id19120 . -1) (undo-tree-id19121 . -1) (undo-tree-id19122 . -1) (undo-tree-id19123 . -1) (undo-tree-id19124 . -1) (#("." 0 1 (fontified t)) . -2224) (undo-tree-id19125 . -1) (undo-tree-id19126 . -1) (undo-tree-id19127 . -1) (undo-tree-id19128 . -1) (undo-tree-id19129 . -1) (undo-tree-id19130 . -1) (undo-tree-id19131 . -1) (undo-tree-id19132 . -1) (undo-tree-id19133 . -1) (undo-tree-id19134 . -1) (undo-tree-id19135 . -1) (undo-tree-id19136 . -1) 2225) nil (25944 37548 882021 0) 0 nil])
([nil nil ((2223 . 2224)) nil (25944 37548 881985 0) 0 nil])
([nil nil ((2224 . 2225)) nil (25944 37548 881984 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2223) (undo-tree-id19059 . -1) (undo-tree-id19060 . -1) (undo-tree-id19061 . -1) (undo-tree-id19062 . -1) (undo-tree-id19063 . -1) (undo-tree-id19064 . -1) (undo-tree-id19065 . -1) (undo-tree-id19066 . -1) (undo-tree-id19067 . -1) (undo-tree-id19068 . -1) (undo-tree-id19069 . -1) (undo-tree-id19070 . -1) (undo-tree-id19071 . -1) (undo-tree-id19072 . -1) (undo-tree-id19073 . -1) (undo-tree-id19074 . -1) (undo-tree-id19075 . -1) (undo-tree-id19076 . -1) (undo-tree-id19077 . -1) (undo-tree-id19078 . -1) (undo-tree-id19079 . -1) (undo-tree-id19080 . -1) (undo-tree-id19081 . -1) (undo-tree-id19082 . -1) (undo-tree-id19083 . -1) (undo-tree-id19084 . -1) (undo-tree-id19085 . -1) (undo-tree-id19086 . -1) (undo-tree-id19087 . -1) (undo-tree-id19088 . -1) (#("e" 0 1 (fontified t)) . -2224) (undo-tree-id19089 . -1) (undo-tree-id19090 . -1) (undo-tree-id19091 . -1) (undo-tree-id19092 . -1) (undo-tree-id19093 . -1) (undo-tree-id19094 . -1) (undo-tree-id19095 . -1) (undo-tree-id19096 . -1) (undo-tree-id19097 . -1) (undo-tree-id19098 . -1) (undo-tree-id19099 . -1) (undo-tree-id19100 . -1) 2225) nil (25944 37548 881981 0) 0 nil])
([nil nil ((2223 . 2224)) nil (25944 37548 881939 0) 0 nil])
([nil nil ((2223 . 2224)) nil (25944 37548 881938 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2223) (undo-tree-id19052 . -1) (undo-tree-id19053 . -1) (undo-tree-id19054 . -1) (undo-tree-id19055 . -1) (undo-tree-id19056 . -1) (undo-tree-id19057 . -1) (undo-tree-id19058 . -1) 2224) nil (25944 37548 881937 0) 0 nil])
([nil nil ((2223 . 2228)) nil (25944 37548 881925 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2224) (undo-tree-id19004 . -1) (undo-tree-id19005 . -1) (undo-tree-id19006 . -1) (undo-tree-id19007 . -1) (undo-tree-id19008 . -1) (undo-tree-id19009 . -1) (undo-tree-id19010 . -1) (undo-tree-id19011 . -1) (undo-tree-id19012 . -1) (undo-tree-id19013 . -1) (undo-tree-id19014 . -1) (undo-tree-id19015 . -1) (undo-tree-id19016 . -1) (undo-tree-id19017 . -1) (undo-tree-id19018 . -1) (undo-tree-id19019 . -1) (undo-tree-id19020 . -1) (undo-tree-id19021 . -1) (undo-tree-id19022 . -1) (undo-tree-id19023 . -1) (#("m" 0 1 (fontified t)) . -2225) (undo-tree-id19024 . -1) (undo-tree-id19025 . -1) (undo-tree-id19026 . -1) (undo-tree-id19027 . -1) (undo-tree-id19028 . -1) (undo-tree-id19029 . -1) (undo-tree-id19030 . -1) (undo-tree-id19031 . -1) (undo-tree-id19032 . -1) (undo-tree-id19033 . -1) (undo-tree-id19034 . -1) (undo-tree-id19035 . -1) (undo-tree-id19036 . -1) (undo-tree-id19037 . -1) (#("u" 0 1 (fontified t)) . -2226) (undo-tree-id19038 . -1) (undo-tree-id19039 . -1) (undo-tree-id19040 . -1) (undo-tree-id19041 . -1) (undo-tree-id19042 . -1) (undo-tree-id19043 . -1) (undo-tree-id19044 . -1) (undo-tree-id19045 . -1) (undo-tree-id19046 . -1) (undo-tree-id19047 . -1) (#("n" 0 1 (fontified t)) . -2227) (undo-tree-id19048 . -1) (undo-tree-id19049 . -1) (undo-tree-id19050 . -1) (undo-tree-id19051 . -1) 2228) nil (25944 37548 881921 0) 0 nil])
([nil nil ((2224 . 2226)) nil (25944 37548 881872 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2224 2230 #s(yas--snippet nil nil #s(yas--exit 2230 nil) 81 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 2230 nil) 81 nil nil nil nil)) (2224 . 2230) (#("iter()$0" 0 8 (fontified nil)) . 2224) (2224 . 2232) (#("it" 0 2 (fontified nil)) . 2224) (2224 . 2226) (#("iter()" 0 6 (fontified nil)) . -2224) (2224 . 2230) (#("it" 0 2 (fontified t)) . -2224) (undo-tree-id18994 . -2) (undo-tree-id18995 . -2) (undo-tree-id18996 . -1) (undo-tree-id18997 . -1) (undo-tree-id18998 . -1) (undo-tree-id18999 . -1) (undo-tree-id19000 . -2) (undo-tree-id19001 . -2) (undo-tree-id19002 . -2) (undo-tree-id19003 . -2) 2226) nil (25944 37548 881870 0) 0 nil])
([nil nil ((2230 . 2233)) nil (25944 37548 881856 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2231 2242 #s(yas--snippet nil nil #s(yas--exit 2242 nil) 82 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 2242 nil) 82 nil nil nil nil)) (2231 . 2242) (#("enumerate()$0" 0 13 (fontified nil)) . 2231) (2231 . 2244) (#("em" 0 2 (fontified nil)) . 2231) (2231 . 2233) (#("enumerate() (as Iterator)" 0 25 (fontified nil)) . -2231) (2231 . 2256) (#("em" 0 2 (fontified t)) . -2231) (undo-tree-id18988 . -2) (undo-tree-id18989 . -2) (undo-tree-id18990 . -1) (undo-tree-id18991 . -1) (undo-tree-id18992 . -2) (undo-tree-id18993 . -2) 2233) nil (25944 37548 881854 0) 0 nil])
([nil nil ((2242 . 2244)) nil (25944 37548 881844 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 2247 2264 nil nil nil t #s(yas--exit 2265 nil))) #s(yas--exit 2265 nil) 83 nil #s(yas--field 1 2247 2264 nil nil nil t #s(yas--exit 2265 nil)) nil nil)) (2243 . 2249) (#("map(${1:f})$0" 0 13 (fontified nil)) . 2243) (2243 . 2256) (#("m" 0 1 (fontified nil)) . 2243) (2243 . 2244) (#("map(…) (as Iterator)" 0 20 (fontified nil)) . -2243) (2243 . 2263) (#("m" 0 1 (fontified t)) . -2243) (undo-tree-id18982 . -1) (undo-tree-id18983 . -1) (undo-tree-id18984 . -1) (undo-tree-id18985 . -1) (undo-tree-id18986 . -1) (undo-tree-id18987 . -1) 2244) nil (25944 37549 853569 0) 0 nil])
([nil nil ((2247 . 2249)) nil (25944 37583 889831 0) 0 nil] [nil nil ((#("f" 0 1 (fontified t)) . 2247) (undo-tree-id18981 . -1)) ((2247 . 2248)) (25944 37548 882491 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -2249) (undo-tree-id19353 . -1) (undo-tree-id19354 . -1) 2250) nil (25944 37583 889830 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -2246) (undo-tree-id18971 . -1) (undo-tree-id18972 . -1) (undo-tree-id18973 . -1) (undo-tree-id18974 . -1) (undo-tree-id18975 . -1) (undo-tree-id18976 . -1) (undo-tree-id18977 . -1) (undo-tree-id18978 . -1) (undo-tree-id18979 . -1) (undo-tree-id18980 . -1) 2247) ((2246 . 2247)) (25944 37548 881826 0) 0 nil])
([nil nil ((2248 . 2250)) nil (25944 37583 889826 0) 0 nil])
nil
([nil nil ((2249 . 2251)) nil (25944 37583 889826 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -2249) (undo-tree-id19351 . -1) (#("d" 0 1 (fontified t)) . -2250) (undo-tree-id19352 . -1) 2251) nil (25944 37583 889824 0) 0 nil])
([nil nil ((2249 . 2253)) nil (25944 37583 889821 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2252) (undo-tree-id19350 . -1) 2253) nil (25944 37583 889820 0) 0 nil])
([nil nil ((2252 . 2255)) nil (25944 37583 889818 0) 0 nil])
([nil nil ((2257 . 2260)) nil (25944 37583 889817 0) 0 nil])
([nil nil ((2259 . 2263)) nil (25944 37583 889816 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2262) (undo-tree-id19349 . -1) 2263) nil (25944 37583 889815 0) 0 nil])
([nil nil ((2262 . 2263)) nil (25944 37583 889812 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2243 2265 #s(yas--snippet nil (#s(yas--field 1 2247 2264 nil nil nil t #s(yas--exit 2265 nil))) #s(yas--exit 2265 nil) 83 nil #s(yas--field 1 2247 2264 nil nil nil t #s(yas--exit 2265 nil)) nil nil))) nil (25944 37583 889811 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -2245) (undo-tree-id19289 . -1) (undo-tree-id19290 . -1) (undo-tree-id19291 . -1) (#("(" 0 1 (fontified t)) . -2246) (undo-tree-id19292 . -1) (undo-tree-id19293 . -1) (undo-tree-id19294 . -1) (#("|" 0 1 (fontified t)) . -2247) (undo-tree-id19295 . -1) (undo-tree-id19296 . -1) (undo-tree-id19297 . -1) (#("(" 0 1 (fontified t)) . -2248) (undo-tree-id19298 . -1) (undo-tree-id19299 . -1) (undo-tree-id19300 . -1) (#("i" 0 1 (fontified t)) . -2249) (undo-tree-id19301 . -1) (undo-tree-id19302 . -1) (undo-tree-id19303 . -1) (#("d" 0 1 (fontified t)) . -2250) (undo-tree-id19304 . -1) (undo-tree-id19305 . -1) (undo-tree-id19306 . -1) (#("x" 0 1 (fontified t)) . -2251) (undo-tree-id19307 . -1) (undo-tree-id19308 . -1) (undo-tree-id19309 . -1) (#("," 0 1 (fontified t)) . -2252) (undo-tree-id19310 . -1) (undo-tree-id19311 . -1) (undo-tree-id19312 . -1) (#(" " 0 1 (fontified t)) . -2253) (undo-tree-id19313 . -1) (undo-tree-id19314 . -1) (undo-tree-id19315 . -1) (#("x" 0 1 (fontified t)) . -2254) (undo-tree-id19316 . -1) (undo-tree-id19317 . -1) (undo-tree-id19318 . -1) (#(")" 0 1 (fontified t)) . -2255) (undo-tree-id19319 . -1) (undo-tree-id19320 . -1) (undo-tree-id19321 . -1) (#("|" 0 1 (fontified t)) . -2256) (undo-tree-id19322 . -1) (undo-tree-id19323 . -1) (undo-tree-id19324 . -1) (#(" " 0 1 (fontified t)) . -2257) (undo-tree-id19325 . -1) (undo-tree-id19326 . -1) (undo-tree-id19327 . -1) (#("(" 0 1 (fontified t)) . -2258) (undo-tree-id19328 . -1) (undo-tree-id19329 . -1) (undo-tree-id19330 . -1) (#("i" 0 1 (fontified t)) . -2259) (undo-tree-id19331 . -1) (undo-tree-id19332 . -1) (undo-tree-id19333 . -1) (#("d" 0 1 (fontified t)) . -2260) (undo-tree-id19334 . -1) (undo-tree-id19335 . -1) (undo-tree-id19336 . -1) (#("x" 0 1 (fontified t)) . -2261) (undo-tree-id19337 . -1) (undo-tree-id19338 . -1) (undo-tree-id19339 . -1) (#("," 0 1 (fontified t)) . -2262) (undo-tree-id19340 . -1) (undo-tree-id19341 . -1) (undo-tree-id19342 . -1) (#(")" 0 1 (fontified t)) . -2263) (undo-tree-id19343 . -1) (undo-tree-id19344 . -1) (#(")" 0 1 (fontified t)) . -2264) (undo-tree-id19345 . -1) (undo-tree-id19346 . -1) (#(")" 0 1 (fontified t)) . -2265) (undo-tree-id19347 . -1) (undo-tree-id19348 . -1) 2266) nil (25944 37583 889806 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2242) (undo-tree-id19280 . -1) (undo-tree-id19281 . -1) (undo-tree-id19282 . -1) (#("m" 0 1 (fontified t)) . -2243) (undo-tree-id19283 . -1) (undo-tree-id19284 . -1) (undo-tree-id19285 . -1) (#("a" 0 1 (fontified t)) . -2244) (undo-tree-id19286 . -1) (undo-tree-id19287 . -1) (undo-tree-id19288 . -1) 2245) nil (25944 37583 889736 0) 0 nil])
([nil nil ((2242 . 2243)) nil (25944 37583 889725 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -2242) (undo-tree-id19279 . -1) 2243) nil (25944 37583 889723 0) 0 nil])
([nil nil ((2242 . 2251)) nil (25944 37583 889712 0) 0 nil])
([nil nil ((2242 . 2243) (t 25944 37583 931860 156000)) nil (25944 37619 861139 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2242) (undo-tree-id19365 . -1) 2243) nil (25944 37619 861137 0) 0 nil])
([nil nil ((2242 . 2243)) nil (25944 37619 861135 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2242) (undo-tree-id19364 . -1) 2243) nil (25944 37619 861134 0) 0 nil])
([nil nil ((2242 . 2245)) nil (25944 37619 861132 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2243) (undo-tree-id19362 . -1) (#("m" 0 1 (fontified t)) . -2244) (undo-tree-id19363 . -1) 2245) nil (25944 37619 861130 0) 0 nil])
([nil nil ((2243 . 2244)) nil (25944 37619 861127 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 2247 2264 nil nil nil t #s(yas--exit 2265 nil))) #s(yas--exit 2265 nil) 84 nil #s(yas--field 1 2247 2264 nil nil nil t #s(yas--exit 2265 nil)) nil nil)) (2243 . 2249) (#("map(${1:f})$0" 0 13 (fontified nil)) . 2243) (2243 . 2256) (#("m" 0 1 (fontified nil)) . 2243) (2243 . 2244) (#("map(…) (as Iterator)" 0 20 (fontified nil)) . -2243) (2243 . 2263) (#("m" 0 1 (fontified t)) . -2243) (undo-tree-id19361 . -1) 2244) nil (25944 37619 861125 0) 0 nil])
([nil nil ((2248 . 2249) (#("f" 0 1 (fontified nil)) . 2248) (2247 . 2248)) nil (25944 37619 861121 0) 0 nil])
([nil nil ((2248 . 2250)) nil (25944 37619 861119 0) 0 nil])
([nil nil ((2249 . 2255)) nil (25944 37619 861118 0) 0 nil])
([nil nil ((2257 . 2260)) nil (25944 37619 861117 0) 0 nil])
([nil nil ((2259 . 2261)) nil (25944 37619 861116 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -2259) (undo-tree-id19359 . -1) (#("d" 0 1 (fontified t)) . -2260) (undo-tree-id19360 . -1) 2261) nil (25944 37619 861115 0) 0 nil])
([nil nil ((2259 . 2263)) nil (25944 37619 861111 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2243 2265 #s(yas--snippet nil (#s(yas--field 1 2247 2264 nil nil nil t #s(yas--exit 2265 nil))) #s(yas--exit 2265 nil) 84 nil #s(yas--field 1 2247 2264 nil nil nil t #s(yas--exit 2265 nil)) nil nil))) nil (25944 37619 861110 0) 0 nil])
([nil nil ((2224 . 2228)) nil (25944 37619 861109 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -2227) (undo-tree-id19355 . -1) (undo-tree-id19356 . -1) (undo-tree-id19357 . -1) (undo-tree-id19358 . -1) 2228) nil (25944 37619 861107 0) 0 nil])
([nil nil ((2227 . 2229)) nil (25944 37619 861091 0) 0 nil])
([nil nil ((#("into_" 0 5 (fontified t)) . -2224) (undo-tree-id19393 . -5) (undo-tree-id19394 . -3) (undo-tree-id19395 . -3) (undo-tree-id19396 . -5) (undo-tree-id19397 . -5) (undo-tree-id19398 . -5) (undo-tree-id19399 . -5) (undo-tree-id19400 . -5) 2229 (t 25944 37619 903195 415000)) nil (25944 37635 923786 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2262) (undo-tree-id19371 . -1) (undo-tree-id19372 . -1) (undo-tree-id19373 . -1) (undo-tree-id19374 . -1) (undo-tree-id19375 . -1) (undo-tree-id19376 . -1) (undo-tree-id19377 . -1) (undo-tree-id19378 . -1) (undo-tree-id19379 . -1) (undo-tree-id19380 . -1) (undo-tree-id19381 . -1) (undo-tree-id19382 . -1) (undo-tree-id19383 . -1) (undo-tree-id19384 . -1) (undo-tree-id19385 . -1) (undo-tree-id19386 . -1) (undo-tree-id19387 . -1) (undo-tree-id19388 . -1) (undo-tree-id19389 . -1) (undo-tree-id19390 . -1) (undo-tree-id19391 . -1) (undo-tree-id19392 . -1) 2263) nil (25944 37635 923775 0) 0 nil])
([nil nil ((2262 . 2266)) nil (25944 37635 923750 0) 0 nil])
([nil nil ((2266 . 2271)) nil (25944 37635 923749 0) 0 nil])
([nil nil ((2271 . 2277)) nil (25944 37635 923748 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -2276) (undo-tree-id19366 . -1) (undo-tree-id19367 . -1) (undo-tree-id19368 . -1) (undo-tree-id19369 . -1) (undo-tree-id19370 . -1) 2277) nil (25944 37635 923746 0) 0 nil])
([nil nil ((2276 . 2279)) nil (25944 37635 923729 0) 0 nil])
([nil nil ((2271 . 2272) (t 25944 37635 966620 278000)) nil (25944 37668 833471 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-string-face fontified t)) . -1924) (undo-tree-id19503 . -1) (undo-tree-id19504 . -1) (undo-tree-id19505 . -1) (undo-tree-id19506 . -1) (undo-tree-id19507 . -1) (undo-tree-id19508 . -1) (undo-tree-id19509 . -1) (undo-tree-id19510 . -1) (undo-tree-id19511 . -1) (undo-tree-id19512 . -1) (undo-tree-id19513 . -1) (undo-tree-id19514 . -1) (undo-tree-id19515 . -1) (undo-tree-id19516 . -1) (undo-tree-id19517 . -1) (undo-tree-id19518 . -1) 1925) nil (25944 37675 379672 0) 0 nil] [nil nil ((#("            .caption(\"y=x^2\", (\"sans-serif\", 14).into_font())" 0 21 (fontified t) 21 28 (face font-lock-string-face fontified t) 28 31 (fontified t) 31 43 (face font-lock-string-face fontified t) 43 61 (fontified t)) . 1898) (undo-tree-id19402 . -41) (undo-tree-id19403 . -41) (undo-tree-id19404 . -41) (undo-tree-id19405 . -41) (undo-tree-id19406 . -41) (undo-tree-id19407 . -41) (undo-tree-id19408 . -41) (undo-tree-id19409 . -41) (undo-tree-id19410 . -41) (undo-tree-id19411 . -41) (undo-tree-id19412 . -41) (undo-tree-id19413 . -41) (undo-tree-id19414 . -41) (undo-tree-id19415 . -41) (undo-tree-id19416 . -41) (undo-tree-id19417 . -41) (undo-tree-id19418 . -41) (undo-tree-id19419 . -41) (undo-tree-id19420 . -61) (t 25944 37647 515772 988000)) ((1898 . 1959)) (25944 37668 399747 0) 0 nil])
([nil nil ((#("y" 0 1 (face font-lock-string-face fontified t)) . -1920) (undo-tree-id19421 . -1) (undo-tree-id19422 . -1) (undo-tree-id19423 . -1) (undo-tree-id19424 . -1) (undo-tree-id19425 . -1) (undo-tree-id19426 . -1) (undo-tree-id19427 . -1) (undo-tree-id19428 . -1) (undo-tree-id19429 . -1) (undo-tree-id19430 . -1) (undo-tree-id19431 . -1) (undo-tree-id19432 . -1) (undo-tree-id19433 . -1) (undo-tree-id19434 . -1) (undo-tree-id19435 . -1) (undo-tree-id19436 . -1) (undo-tree-id19437 . -1) (undo-tree-id19438 . -1) (undo-tree-id19439 . -1) (undo-tree-id19440 . -1) (undo-tree-id19441 . -1) (undo-tree-id19442 . -1) (#("=" 0 1 (face font-lock-string-face fontified t)) . -1921) (undo-tree-id19443 . -1) (undo-tree-id19444 . -1) (undo-tree-id19445 . -1) (undo-tree-id19446 . -1) (undo-tree-id19447 . -1) (undo-tree-id19448 . -1) (undo-tree-id19449 . -1) (undo-tree-id19450 . -1) (undo-tree-id19451 . -1) (undo-tree-id19452 . -1) (undo-tree-id19453 . -1) (undo-tree-id19454 . -1) (undo-tree-id19455 . -1) (undo-tree-id19456 . -1) (undo-tree-id19457 . -1) (undo-tree-id19458 . -1) (undo-tree-id19459 . -1) (undo-tree-id19460 . -1) (undo-tree-id19461 . -1) (undo-tree-id19462 . -1) (undo-tree-id19463 . -1) (#("x" 0 1 (face font-lock-string-face fontified t)) . -1922) (undo-tree-id19464 . -1) (undo-tree-id19465 . -1) (undo-tree-id19466 . -1) (undo-tree-id19467 . -1) (undo-tree-id19468 . -1) (undo-tree-id19469 . -1) (undo-tree-id19470 . -1) (undo-tree-id19471 . -1) (undo-tree-id19472 . -1) (undo-tree-id19473 . -1) (undo-tree-id19474 . -1) (undo-tree-id19475 . -1) (undo-tree-id19476 . -1) (undo-tree-id19477 . -1) (undo-tree-id19478 . -1) (undo-tree-id19479 . -1) (undo-tree-id19480 . -1) (undo-tree-id19481 . -1) (undo-tree-id19482 . -1) (undo-tree-id19483 . -1) (#("^" 0 1 (face font-lock-string-face fontified t)) . -1923) (undo-tree-id19484 . -1) (undo-tree-id19485 . -1) (undo-tree-id19486 . -1) (undo-tree-id19487 . -1) (undo-tree-id19488 . -1) (undo-tree-id19489 . -1) (undo-tree-id19490 . -1) (undo-tree-id19491 . -1) (undo-tree-id19492 . -1) (undo-tree-id19493 . -1) (undo-tree-id19494 . -1) (undo-tree-id19495 . -1) (undo-tree-id19496 . -1) (undo-tree-id19497 . -1) (undo-tree-id19498 . -1) (undo-tree-id19499 . -1) (undo-tree-id19500 . -1) (undo-tree-id19501 . -1) (undo-tree-id19502 . -1) 1924) nil (25944 37675 379651 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1898) (undo-tree-id19401 . -1)) ((1898 . 1899) (t 25944 37662 778923 70000)) (25944 37662 735927 0) 0 nil])
([nil nil ((1920 . 1928)) nil (25944 37675 379558 0) 0 nil])
nil
([nil nil ((#("event" 0 5 (face font-lock-string-face fontified t)) . -707) (undo-tree-id19534 . -5) (undo-tree-id19535 . -5) (undo-tree-id19536 . -5) (undo-tree-id19537 . -5) (undo-tree-id19538 . -5) (undo-tree-id19539 . -5) (undo-tree-id19540 . -5) (undo-tree-id19541 . -5) (undo-tree-id19542 . -5) (undo-tree-id19543 . -5) (undo-tree-id19544 . -5) (undo-tree-id19545 . -5) 712 (t 25944 37675 421509 554000)) nil (25944 37938 293200 0) 0 nil])
([nil nil ((#("generic-" 0 8 (face font-lock-string-face fontified t)) . -699) (undo-tree-id19519 . -8) (undo-tree-id19520 . -8) (undo-tree-id19521 . -8) (undo-tree-id19522 . -8) (undo-tree-id19523 . -8) (undo-tree-id19524 . -8) (undo-tree-id19525 . -8) (undo-tree-id19526 . -8) (undo-tree-id19527 . -8) (undo-tree-id19528 . -8) (undo-tree-id19529 . -8) (undo-tree-id19530 . -8) (undo-tree-id19531 . -8) (undo-tree-id19532 . -8) (undo-tree-id19533 . -8) 707) nil (25944 38852 128504 0) 0 nil])
([nil nil ((699 . 704)) ((#("js2rs" 0 5 (face font-lock-string-face fontified t)) . 699) (t 25944 37938 338123 163000)) (25944 38856 856223 0) 0 nil])
([nil nil ((apply -3 792 865 undo--wrap-and-run-primitive-undo 792 865 ((800 . 803) 861))) nil (25944 38887 971009 0) 0 nil])
([nil nil ((864 . 866)) nil (25944 38887 971009 0) 0 nil])
([nil nil ((866 . 867)) nil (25944 38887 971008 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -866) (undo-tree-id19593 . -1) (undo-tree-id19594 . -1) (undo-tree-id19595 . -1) 867) nil (25944 38887 971006 0) 0 nil])
([nil nil ((866 . 867)) nil (25944 38887 971002 0) 0 nil])
([nil nil ((867 . 870)) nil (25944 38887 971001 0) 0 nil])
([nil nil ((apply yas--snippet-revive 866 876 #s(yas--snippet nil nil #s(yas--exit 875 nil) 85 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 875 nil) 85 nil nil nil nil)) (866 . 876) (#("println!($0)" 0 12 (fontified nil)) . 866) (866 . 878) (#("prin" 0 4 (fontified nil)) . 866) (866 . 870) (#("println!(…)" 0 11 (fontified nil)) . -866) (866 . 877) (#("prin" 0 4 (fontified t)) . -866) (undo-tree-id19578 . -4) (undo-tree-id19579 . -1) (undo-tree-id19580 . -1) (undo-tree-id19581 . -1) (undo-tree-id19582 . -1) (undo-tree-id19583 . -2) (undo-tree-id19584 . -2) (undo-tree-id19585 . -2) (undo-tree-id19586 . -3) (undo-tree-id19587 . -3) (undo-tree-id19588 . -3) (undo-tree-id19589 . -4) (undo-tree-id19590 . -4) (undo-tree-id19591 . -4) (undo-tree-id19592 . -4) 870) nil (25944 38887 970999 0) 0 nil])
([nil nil ((875 . 877)) nil (25944 38887 970980 0) 0 nil])
([nil nil ((876 . 878)) nil (25944 38887 970979 0) 0 nil])
([nil nil ((877 . 878)) nil (25944 38887 970978 0) 0 nil])
([nil nil ((878 . 879)) nil (25944 38887 970977 0) 0 nil])
([nil nil ((881 . 884)) nil (25944 38887 970976 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -883) (undo-tree-id19573 . -1) (undo-tree-id19574 . -1) (undo-tree-id19575 . -1) (undo-tree-id19576 . -1) (undo-tree-id19577 . -1) 884) nil (25944 38887 970975 0) 0 nil])
([nil nil ((883 . 885)) nil (25944 38887 970968 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -884) (undo-tree-id19567 . -1) (undo-tree-id19568 . -1) (undo-tree-id19569 . -1) (undo-tree-id19570 . -1) (undo-tree-id19571 . -1) (undo-tree-id19572 . -1) 885) nil (25944 38887 970967 0) 0 nil])
([nil nil ((884 . 885)) nil (25944 38887 970959 0) 0 nil])
([nil nil ((883 . 888) (#("ev" 0 2 (fontified nil)) . 883) (883 . 885) (#("event" 0 5 (fontified nil)) . -883) (883 . 888) (#("ev" 0 2 (fontified t)) . -883) (undo-tree-id19552 . -2) (undo-tree-id19553 . -1) (undo-tree-id19554 . -1) (undo-tree-id19555 . -1) (undo-tree-id19556 . -1) (undo-tree-id19557 . -1) (undo-tree-id19558 . -1) (undo-tree-id19559 . -1) (undo-tree-id19560 . -1) (undo-tree-id19561 . -1) (undo-tree-id19562 . -2) (undo-tree-id19563 . -2) (undo-tree-id19564 . -2) (undo-tree-id19565 . -2) (undo-tree-id19566 . -2) 885) nil (25944 38887 970957 0) 0 nil])
([nil nil ((888 . 890)) nil (25944 38887 970939 0) 0 nil])
([nil nil ((889 . 896) (#("p" 0 1 (fontified nil)) . 889) (889 . 890) (#("payload" 0 7 (fontified nil)) . -889) (889 . 896) (#("p" 0 1 (fontified t)) . -889) (undo-tree-id19546 . -1) (undo-tree-id19547 . -1) (undo-tree-id19548 . -1) (undo-tree-id19549 . -1) (undo-tree-id19550 . -1) (undo-tree-id19551 . -1) 890) nil (25944 38887 970934 0) 0 nil])
([nil nil ((897 . 898)) nil (25944 38887 970901 0) 0 nil])
([nil nil ((#("
#[derive(Clone, PartialEq, Eq, Debug, Deserialize)]
struct GenericEventRes {
    message: String,
}" 0 1 (fontified t) 1 52 (face font-lock-preprocessor-face fontified t) 52 53 (fontified t) 53 59 (face font-lock-keyword-face fontified t) 59 60 (fontified t) 60 75 (face font-lock-type-face fontified t) 75 78 (fontified t) 78 82 (fontified t) 82 89 (face font-lock-variable-name-face fontified t) 89 91 (fontified t) 91 97 (face font-lock-type-face fontified t) 97 99 (fontified t) 99 100 (fontified t)) . 477) (undo-tree-id19669 . -100) (t 25944 38888 14008 877000)) nil (25944 39616 465665 0) 0 nil])
([nil nil ((nil fontified nil 548 . 549) (nil fontified nil 546 . 548) (nil fontified nil 540 . 546) (nil fontified nil 538 . 540) (nil fontified nil 531 . 538) (nil fontified nil 529 . 531) (nil fontified nil 526 . 529) (nil fontified nil 519 . 526) (nil fontified nil 518 . 519) (nil fontified nil 512 . 518) (nil fontified nil 511 . 512) (nil fontified nil 477 . 511) (477 . 549)) nil (25944 39616 465663 0) 0 nil])
([nil nil ((476 . 477)) nil (25944 39616 465659 0) 0 nil])
([nil nil ((#("GenericEventRes" 0 15 (face font-lock-type-face fontified t)) . -654) (undo-tree-id19664 . -15) (undo-tree-id19665 . -15) (undo-tree-id19666 . -15) (undo-tree-id19667 . -15) (undo-tree-id19668 . -15) 669) nil (25944 39616 465657 0) 0 nil])
([nil nil ((654 . 655)) nil (25944 39616 465651 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -654) (undo-tree-id19660 . -1) (undo-tree-id19661 . -1) (undo-tree-id19662 . -1) (undo-tree-id19663 . -1) 655) nil (25944 39616 465650 0) 0 nil])
([nil nil ((654 . 658)) nil (25944 39616 465645 0) 0 nil])
([nil nil ((654 . 661) (#("Payl" 0 4 (fontified nil)) . 654) (654 . 658) (#("Payload" 0 7 (fontified nil)) . -654) (654 . 661) (#("Payl" 0 4 (face font-lock-type-face fontified t)) . -654) (undo-tree-id19646 . -4) (undo-tree-id19647 . -1) (undo-tree-id19648 . -1) (undo-tree-id19649 . -1) (undo-tree-id19650 . -1) (undo-tree-id19651 . -2) (undo-tree-id19652 . -2) (undo-tree-id19653 . -2) (undo-tree-id19654 . -3) (undo-tree-id19655 . -3) (undo-tree-id19656 . -3) (undo-tree-id19657 . -4) (undo-tree-id19658 . -4) (undo-tree-id19659 . -4) 658) nil (25944 39616 465642 0) 0 nil])
([nil nil ((#("js2rs" 0 5 (face font-lock-string-face fontified t)) . -664) (undo-tree-id19632 . -5) (undo-tree-id19633 . -5) (undo-tree-id19634 . -5) (undo-tree-id19635 . -5) (undo-tree-id19636 . -5) (undo-tree-id19637 . -5) (undo-tree-id19638 . -5) (undo-tree-id19639 . -5) (undo-tree-id19640 . -5) (undo-tree-id19641 . -5) (undo-tree-id19642 . -5) (undo-tree-id19643 . -5) (undo-tree-id19644 . -5) (undo-tree-id19645 . -5) 669) nil (25944 39616 465625 0) 0 nil])
([nil nil ((664 . 667)) nil (25944 39616 465609 0) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . -665) (undo-tree-id19620 . -1) (undo-tree-id19621 . -1) (undo-tree-id19622 . -1) (undo-tree-id19623 . -1) (undo-tree-id19624 . -1) (undo-tree-id19625 . -1) (undo-tree-id19626 . -1) (undo-tree-id19627 . -1) (undo-tree-id19628 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -666) (undo-tree-id19629 . -1) (undo-tree-id19630 . -1) (undo-tree-id19631 . -1) 667) nil (25944 39616 465607 0) 0 nil])
([nil nil ((665 . 666)) nil (25944 39616 465595 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-string-face fontified t)) . -664) (undo-tree-id19596 . -1) (undo-tree-id19597 . -1) (undo-tree-id19598 . -1) (undo-tree-id19599 . -1) (undo-tree-id19600 . -1) (undo-tree-id19601 . -1) (undo-tree-id19602 . -1) (undo-tree-id19603 . -1) (undo-tree-id19604 . -1) (undo-tree-id19605 . -1) (undo-tree-id19606 . -1) (undo-tree-id19607 . -1) (undo-tree-id19608 . -1) (undo-tree-id19609 . -1) (undo-tree-id19610 . -1) (undo-tree-id19611 . -1) (undo-tree-id19612 . -1) (undo-tree-id19613 . -1) (undo-tree-id19614 . -1) (undo-tree-id19615 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -665) (undo-tree-id19616 . -1) (undo-tree-id19617 . -1) (undo-tree-id19618 . -1) (undo-tree-id19619 . -1) 666) nil (25944 39616 465592 0) 0 nil])
([nil nil ((664 . 672)) nil (25944 39616 465552 0) 0 nil])
([nil nil ((#("payload" 0 7 (fontified t)) . -857) (undo-tree-id19773 . -7) (undo-tree-id19774 . -7) (undo-tree-id19775 . -7) (undo-tree-id19776 . -7) (undo-tree-id19777 . -7) (undo-tree-id19778 . -7) (undo-tree-id19779 . -7) (undo-tree-id19780 . -7) (undo-tree-id19781 . -7) (undo-tree-id19782 . -7) (undo-tree-id19783 . -7) (undo-tree-id19784 . -7) (undo-tree-id19785 . -7) (undo-tree-id19786 . -7) (undo-tree-id19787 . -7) (undo-tree-id19788 . -7) (undo-tree-id19789 . -7) (undo-tree-id19790 . -7) (undo-tree-id19791 . -7) (undo-tree-id19792 . -7) (undo-tree-id19793 . -7) 864 (t 25944 39616 512105 742000)) nil (25944 39635 683908 0) 0 nil])
([nil nil ((857 . 861)) nil (25944 39635 683886 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -857) (undo-tree-id19689 . -1) (undo-tree-id19690 . -1) (undo-tree-id19691 . -1) (undo-tree-id19692 . -1) (undo-tree-id19693 . -1) (undo-tree-id19694 . -1) (undo-tree-id19695 . -1) (undo-tree-id19696 . -1) (undo-tree-id19697 . -1) (undo-tree-id19698 . -1) (undo-tree-id19699 . -1) (undo-tree-id19700 . -1) (undo-tree-id19701 . -1) (undo-tree-id19702 . -1) (undo-tree-id19703 . -1) (undo-tree-id19704 . -1) (undo-tree-id19705 . -1) (undo-tree-id19706 . -1) (undo-tree-id19707 . -1) (undo-tree-id19708 . -1) (undo-tree-id19709 . -1) (undo-tree-id19710 . -1) (undo-tree-id19711 . -1) (undo-tree-id19712 . -1) (undo-tree-id19713 . -1) (undo-tree-id19714 . -1) (undo-tree-id19715 . -1) (undo-tree-id19716 . -1) (undo-tree-id19717 . -1) (undo-tree-id19718 . -1) (undo-tree-id19719 . -1) (undo-tree-id19720 . -1) (undo-tree-id19721 . -1) (undo-tree-id19722 . -1) (undo-tree-id19723 . -1) (undo-tree-id19724 . -1) (#("e" 0 1 (fontified t)) . -858) (undo-tree-id19725 . -1) (undo-tree-id19726 . -1) (undo-tree-id19727 . -1) (undo-tree-id19728 . -1) (undo-tree-id19729 . -1) (undo-tree-id19730 . -1) (undo-tree-id19731 . -1) (undo-tree-id19732 . -1) (undo-tree-id19733 . -1) (undo-tree-id19734 . -1) (undo-tree-id19735 . -1) (undo-tree-id19736 . -1) (undo-tree-id19737 . -1) (undo-tree-id19738 . -1) (undo-tree-id19739 . -1) (undo-tree-id19740 . -1) (undo-tree-id19741 . -1) (undo-tree-id19742 . -1) (undo-tree-id19743 . -1) (undo-tree-id19744 . -1) (undo-tree-id19745 . -1) (undo-tree-id19746 . -1) (undo-tree-id19747 . -1) (#("s" 0 1 (fontified t)) . -859) (undo-tree-id19748 . -1) (undo-tree-id19749 . -1) (undo-tree-id19750 . -1) (undo-tree-id19751 . -1) (undo-tree-id19752 . -1) (undo-tree-id19753 . -1) (undo-tree-id19754 . -1) (undo-tree-id19755 . -1) (undo-tree-id19756 . -1) (undo-tree-id19757 . -1) (undo-tree-id19758 . -1) (undo-tree-id19759 . -1) (undo-tree-id19760 . -1) (undo-tree-id19761 . -1) (undo-tree-id19762 . -1) (undo-tree-id19763 . -1) (#("s" 0 1 (fontified t)) . -860) (undo-tree-id19764 . -1) (undo-tree-id19765 . -1) (undo-tree-id19766 . -1) (undo-tree-id19767 . -1) (undo-tree-id19768 . -1) (undo-tree-id19769 . -1) (undo-tree-id19770 . -1) (undo-tree-id19771 . -1) (undo-tree-id19772 . -1) 861) nil (25944 39635 683881 0) 0 nil])
([nil nil ((857 . 858)) nil (25944 39635 683794 0) 0 nil])
([nil nil ((857 . 864) (#("p" 0 1 (fontified nil)) . 857) (857 . 858) (#("payload" 0 7 (fontified nil)) . -857) (857 . 864) (#("p" 0 1 (fontified t)) . -857) (undo-tree-id19681 . -1) (undo-tree-id19682 . -1) (undo-tree-id19683 . -1) (undo-tree-id19684 . -1) (undo-tree-id19685 . -1) (undo-tree-id19686 . -1) (undo-tree-id19687 . -1) (undo-tree-id19688 . -1) 858) nil (25944 39635 683793 0) 0 nil])
([nil nil ((864 . 866)) nil (25944 39635 683782 0) 0 nil])
([nil nil ((866 . 867)) nil (25944 39635 683781 0) 0 nil])
([nil nil ((865 . 872) (#("me" 0 2 (fontified nil)) . 865) (865 . 867) (#("message" 0 7 (fontified nil)) . -865) (865 . 872) (#("me" 0 2 (fontified t)) . -865) (undo-tree-id19670 . -2) (undo-tree-id19671 . -1) (undo-tree-id19672 . -1) (undo-tree-id19673 . -1) (undo-tree-id19674 . -1) (undo-tree-id19675 . -1) (undo-tree-id19676 . -2) (undo-tree-id19677 . -2) (undo-tree-id19678 . -2) (undo-tree-id19679 . -2) (undo-tree-id19680 . -2) 867) nil (25944 39635 683776 0) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-preprocessor-face fontified t)) . -501) (undo-tree-id19802 . -1) (undo-tree-id19803 . -1) (undo-tree-id19804 . -1) (undo-tree-id19805 . -1) (undo-tree-id19806 . -1) (undo-tree-id19807 . -1) (undo-tree-id19808 . -1) (undo-tree-id19809 . -1) (undo-tree-id19810 . -1) (undo-tree-id19811 . -1) (undo-tree-id19812 . -1) (undo-tree-id19813 . -1) (undo-tree-id19814 . -1) (undo-tree-id19815 . -1) (undo-tree-id19816 . -1) (undo-tree-id19817 . -1) (undo-tree-id19818 . -1) (undo-tree-id19819 . -1) (undo-tree-id19820 . -1) (undo-tree-id19821 . -1) (undo-tree-id19822 . -1) 502 (t 25944 39635 727606 134000)) nil (25944 39649 180063 0) 0 nil])
([nil nil ((501 . 502)) nil (25944 39649 180040 0) 0 nil])
([nil nil ((501 . 512) (#("Derialize" 0 1 (fontified nil) 1 9 (face font-lock-preprocessor-face fontified nil)) . 501) (undo-tree-id19794 . 8) (501 . 502) (#("Deserialize" 0 11 (fontified nil)) . -501) (501 . 512) (#("D" 0 1 (face font-lock-preprocessor-face fontified t)) . -501) (undo-tree-id19795 . -1) (undo-tree-id19796 . -1) (undo-tree-id19797 . -1) (undo-tree-id19798 . -1) (undo-tree-id19799 . -1) (undo-tree-id19800 . -1) (undo-tree-id19801 . -1) 502) nil (25944 39649 180035 0) 0 nil])
([nil nil ((473 . 478) (t 25944 39649 223930 120000)) nil (25944 39709 451023 0) 0 nil])
([nil nil ((478 . 479)) nil (25944 39709 451021 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -478) (undo-tree-id20659 . -1) (undo-tree-id20660 . -1) (undo-tree-id20661 . -1) (undo-tree-id20662 . -1) (undo-tree-id20663 . -1) (undo-tree-id20664 . -1) (undo-tree-id20665 . -1) (undo-tree-id20666 . -1) 479) nil (25944 39709 451019 0) 0 nil])
([nil nil ((478 . 484)) nil (25944 39709 451011 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -474) (undo-tree-id19945 . -1) (undo-tree-id19946 . -1) (undo-tree-id19947 . -1) (undo-tree-id19948 . -1) (undo-tree-id19949 . -1) (undo-tree-id19950 . -1) (undo-tree-id19951 . -1) (undo-tree-id19952 . -1) (undo-tree-id19953 . -1) (undo-tree-id19954 . -1) (undo-tree-id19955 . -1) (undo-tree-id19956 . -1) (undo-tree-id19957 . -1) (undo-tree-id19958 . -1) (undo-tree-id19959 . -1) (undo-tree-id19960 . -1) (undo-tree-id19961 . -1) (undo-tree-id19962 . -1) (undo-tree-id19963 . -1) (undo-tree-id19964 . -1) (undo-tree-id19965 . -1) (undo-tree-id19966 . -1) (undo-tree-id19967 . -1) (undo-tree-id19968 . -1) (undo-tree-id19969 . -1) (undo-tree-id19970 . -1) (undo-tree-id19971 . -1) (undo-tree-id19972 . -1) (undo-tree-id19973 . -1) (undo-tree-id19974 . -1) (undo-tree-id19975 . -1) (undo-tree-id19976 . -1) (undo-tree-id19977 . -1) (undo-tree-id19978 . -1) (undo-tree-id19979 . -1) (undo-tree-id19980 . -1) (undo-tree-id19981 . -1) (undo-tree-id19982 . -1) (undo-tree-id19983 . -1) (undo-tree-id19984 . -1) (undo-tree-id19985 . -1) (undo-tree-id19986 . -1) (undo-tree-id19987 . -1) (undo-tree-id19988 . -1) (undo-tree-id19989 . -1) (undo-tree-id19990 . -1) (undo-tree-id19991 . -1) (undo-tree-id19992 . -1) (undo-tree-id19993 . -1) (undo-tree-id19994 . -1) (undo-tree-id19995 . -1) (undo-tree-id19996 . -1) (undo-tree-id19997 . -1) (undo-tree-id19998 . -1) (undo-tree-id19999 . -1) (undo-tree-id20000 . -1) (undo-tree-id20001 . -1) (undo-tree-id20002 . -1) (undo-tree-id20003 . -1) (undo-tree-id20004 . -1) (undo-tree-id20005 . -1) (undo-tree-id20006 . -1) (undo-tree-id20007 . -1) (undo-tree-id20008 . -1) (undo-tree-id20009 . -1) (undo-tree-id20010 . -1) (undo-tree-id20011 . -1) (undo-tree-id20012 . -1) (undo-tree-id20013 . -1) (undo-tree-id20014 . -1) (undo-tree-id20015 . -1) (undo-tree-id20016 . -1) (undo-tree-id20017 . -1) (undo-tree-id20018 . -1) (undo-tree-id20019 . -1) (undo-tree-id20020 . -1) (undo-tree-id20021 . -1) (undo-tree-id20022 . -1) (undo-tree-id20023 . -1) (undo-tree-id20024 . -1) (undo-tree-id20025 . -1) (undo-tree-id20026 . -1) (undo-tree-id20027 . -1) (undo-tree-id20028 . -1) (undo-tree-id20029 . -1) (undo-tree-id20030 . -1) (undo-tree-id20031 . -1) (undo-tree-id20032 . -1) (undo-tree-id20033 . -1) (undo-tree-id20034 . -1) (undo-tree-id20035 . -1) (undo-tree-id20036 . -1) (undo-tree-id20037 . -1) (undo-tree-id20038 . -1) (undo-tree-id20039 . -1) (undo-tree-id20040 . -1) (undo-tree-id20041 . -1) (undo-tree-id20042 . -1) (undo-tree-id20043 . -1) (undo-tree-id20044 . -1) (undo-tree-id20045 . -1) (undo-tree-id20046 . -1) (undo-tree-id20047 . -1) (undo-tree-id20048 . -1) (undo-tree-id20049 . -1) (undo-tree-id20050 . -1) (undo-tree-id20051 . -1) (undo-tree-id20052 . -1) (undo-tree-id20053 . -1) (undo-tree-id20054 . -1) (#(" " 0 1 (fontified t)) . -475) (undo-tree-id20055 . -1) (undo-tree-id20056 . -1) (undo-tree-id20057 . -1) (undo-tree-id20058 . -1) (undo-tree-id20059 . -1) (undo-tree-id20060 . -1) (undo-tree-id20061 . -1) (undo-tree-id20062 . -1) (undo-tree-id20063 . -1) (undo-tree-id20064 . -1) (undo-tree-id20065 . -1) (undo-tree-id20066 . -1) (undo-tree-id20067 . -1) (undo-tree-id20068 . -1) (undo-tree-id20069 . -1) (undo-tree-id20070 . -1) (undo-tree-id20071 . -1) (undo-tree-id20072 . -1) (undo-tree-id20073 . -1) (undo-tree-id20074 . -1) (undo-tree-id20075 . -1) (undo-tree-id20076 . -1) (undo-tree-id20077 . -1) (undo-tree-id20078 . -1) (undo-tree-id20079 . -1) (undo-tree-id20080 . -1) (undo-tree-id20081 . -1) (undo-tree-id20082 . -1) (undo-tree-id20083 . -1) (undo-tree-id20084 . -1) (undo-tree-id20085 . -1) (undo-tree-id20086 . -1) (undo-tree-id20087 . -1) (undo-tree-id20088 . -1) (undo-tree-id20089 . -1) (undo-tree-id20090 . -1) (undo-tree-id20091 . -1) (undo-tree-id20092 . -1) (undo-tree-id20093 . -1) (undo-tree-id20094 . -1) (undo-tree-id20095 . -1) (undo-tree-id20096 . -1) (undo-tree-id20097 . -1) (undo-tree-id20098 . -1) (undo-tree-id20099 . -1) (undo-tree-id20100 . -1) (undo-tree-id20101 . -1) (undo-tree-id20102 . -1) (undo-tree-id20103 . -1) (undo-tree-id20104 . -1) (undo-tree-id20105 . -1) (undo-tree-id20106 . -1) (undo-tree-id20107 . -1) (undo-tree-id20108 . -1) (undo-tree-id20109 . -1) (undo-tree-id20110 . -1) (undo-tree-id20111 . -1) (undo-tree-id20112 . -1) (undo-tree-id20113 . -1) (undo-tree-id20114 . -1) (undo-tree-id20115 . -1) (undo-tree-id20116 . -1) (undo-tree-id20117 . -1) (undo-tree-id20118 . -1) (undo-tree-id20119 . -1) (undo-tree-id20120 . -1) (undo-tree-id20121 . -1) (undo-tree-id20122 . -1) (undo-tree-id20123 . -1) (undo-tree-id20124 . -1) (undo-tree-id20125 . -1) (undo-tree-id20126 . -1) (undo-tree-id20127 . -1) (undo-tree-id20128 . -1) (undo-tree-id20129 . -1) (undo-tree-id20130 . -1) (undo-tree-id20131 . -1) (undo-tree-id20132 . -1) (undo-tree-id20133 . -1) (undo-tree-id20134 . -1) (undo-tree-id20135 . -1) (undo-tree-id20136 . -1) (undo-tree-id20137 . -1) (undo-tree-id20138 . -1) (undo-tree-id20139 . -1) (undo-tree-id20140 . -1) (undo-tree-id20141 . -1) (undo-tree-id20142 . -1) (undo-tree-id20143 . -1) (undo-tree-id20144 . -1) (undo-tree-id20145 . -1) (undo-tree-id20146 . -1) (undo-tree-id20147 . -1) (undo-tree-id20148 . -1) (undo-tree-id20149 . -1) (undo-tree-id20150 . -1) (undo-tree-id20151 . -1) (undo-tree-id20152 . -1) (undo-tree-id20153 . -1) (undo-tree-id20154 . -1) (undo-tree-id20155 . -1) (undo-tree-id20156 . -1) (undo-tree-id20157 . -1) (undo-tree-id20158 . -1) (undo-tree-id20159 . -1) (undo-tree-id20160 . -1) (undo-tree-id20161 . -1) (#(" " 0 1 (fontified t)) . -476) (undo-tree-id20162 . -1) (undo-tree-id20163 . -1) (undo-tree-id20164 . -1) (undo-tree-id20165 . -1) (undo-tree-id20166 . -1) (undo-tree-id20167 . -1) (undo-tree-id20168 . -1) (undo-tree-id20169 . -1) (undo-tree-id20170 . -1) (undo-tree-id20171 . -1) (undo-tree-id20172 . -1) (undo-tree-id20173 . -1) (undo-tree-id20174 . -1) (undo-tree-id20175 . -1) (undo-tree-id20176 . -1) (undo-tree-id20177 . -1) (undo-tree-id20178 . -1) (undo-tree-id20179 . -1) (undo-tree-id20180 . -1) (undo-tree-id20181 . -1) (undo-tree-id20182 . -1) (undo-tree-id20183 . -1) (undo-tree-id20184 . -1) (undo-tree-id20185 . -1) (undo-tree-id20186 . -1) (undo-tree-id20187 . -1) (undo-tree-id20188 . -1) (undo-tree-id20189 . -1) (undo-tree-id20190 . -1) (undo-tree-id20191 . -1) (undo-tree-id20192 . -1) (undo-tree-id20193 . -1) (undo-tree-id20194 . -1) (undo-tree-id20195 . -1) (undo-tree-id20196 . -1) (undo-tree-id20197 . -1) (undo-tree-id20198 . -1) (undo-tree-id20199 . -1) (undo-tree-id20200 . -1) (undo-tree-id20201 . -1) (undo-tree-id20202 . -1) (undo-tree-id20203 . -1) (undo-tree-id20204 . -1) (undo-tree-id20205 . -1) (undo-tree-id20206 . -1) (undo-tree-id20207 . -1) (undo-tree-id20208 . -1) (undo-tree-id20209 . -1) (undo-tree-id20210 . -1) (undo-tree-id20211 . -1) (undo-tree-id20212 . -1) (undo-tree-id20213 . -1) (undo-tree-id20214 . -1) (undo-tree-id20215 . -1) (undo-tree-id20216 . -1) (undo-tree-id20217 . -1) (undo-tree-id20218 . -1) (undo-tree-id20219 . -1) (undo-tree-id20220 . -1) (undo-tree-id20221 . -1) (undo-tree-id20222 . -1) (undo-tree-id20223 . -1) (undo-tree-id20224 . -1) (undo-tree-id20225 . -1) (undo-tree-id20226 . -1) (undo-tree-id20227 . -1) (undo-tree-id20228 . -1) (undo-tree-id20229 . -1) (undo-tree-id20230 . -1) (undo-tree-id20231 . -1) (undo-tree-id20232 . -1) (undo-tree-id20233 . -1) (undo-tree-id20234 . -1) (undo-tree-id20235 . -1) (undo-tree-id20236 . -1) (undo-tree-id20237 . -1) (undo-tree-id20238 . -1) (undo-tree-id20239 . -1) (undo-tree-id20240 . -1) (undo-tree-id20241 . -1) (undo-tree-id20242 . -1) (undo-tree-id20243 . -1) (undo-tree-id20244 . -1) (undo-tree-id20245 . -1) (undo-tree-id20246 . -1) (undo-tree-id20247 . -1) (undo-tree-id20248 . -1) (undo-tree-id20249 . -1) (undo-tree-id20250 . -1) (undo-tree-id20251 . -1) (undo-tree-id20252 . -1) (undo-tree-id20253 . -1) (undo-tree-id20254 . -1) (undo-tree-id20255 . -1) (undo-tree-id20256 . -1) (undo-tree-id20257 . -1) (undo-tree-id20258 . -1) (undo-tree-id20259 . -1) (undo-tree-id20260 . -1) (undo-tree-id20261 . -1) (undo-tree-id20262 . -1) (undo-tree-id20263 . -1) (undo-tree-id20264 . -1) (undo-tree-id20265 . -1) (#(" " 0 1 (fontified t)) . -477) (undo-tree-id20266 . -1) (undo-tree-id20267 . -1) (undo-tree-id20268 . -1) (undo-tree-id20269 . -1) (undo-tree-id20270 . -1) (undo-tree-id20271 . -1) (undo-tree-id20272 . -1) (undo-tree-id20273 . -1) (undo-tree-id20274 . -1) (undo-tree-id20275 . -1) (undo-tree-id20276 . -1) (undo-tree-id20277 . -1) (undo-tree-id20278 . -1) (undo-tree-id20279 . -1) (undo-tree-id20280 . -1) (undo-tree-id20281 . -1) (undo-tree-id20282 . -1) (undo-tree-id20283 . -1) (undo-tree-id20284 . -1) (undo-tree-id20285 . -1) (undo-tree-id20286 . -1) (undo-tree-id20287 . -1) (undo-tree-id20288 . -1) (undo-tree-id20289 . -1) (undo-tree-id20290 . -1) (undo-tree-id20291 . -1) (undo-tree-id20292 . -1) (undo-tree-id20293 . -1) (undo-tree-id20294 . -1) (undo-tree-id20295 . -1) (undo-tree-id20296 . -1) (undo-tree-id20297 . -1) (undo-tree-id20298 . -1) (undo-tree-id20299 . -1) (undo-tree-id20300 . -1) (undo-tree-id20301 . -1) (undo-tree-id20302 . -1) (undo-tree-id20303 . -1) (undo-tree-id20304 . -1) (undo-tree-id20305 . -1) (undo-tree-id20306 . -1) (undo-tree-id20307 . -1) (undo-tree-id20308 . -1) (undo-tree-id20309 . -1) (undo-tree-id20310 . -1) (undo-tree-id20311 . -1) (undo-tree-id20312 . -1) (undo-tree-id20313 . -1) (undo-tree-id20314 . -1) (undo-tree-id20315 . -1) (undo-tree-id20316 . -1) (undo-tree-id20317 . -1) (undo-tree-id20318 . -1) (undo-tree-id20319 . -1) (undo-tree-id20320 . -1) (undo-tree-id20321 . -1) (undo-tree-id20322 . -1) (undo-tree-id20323 . -1) (undo-tree-id20324 . -1) (undo-tree-id20325 . -1) (undo-tree-id20326 . -1) (undo-tree-id20327 . -1) (undo-tree-id20328 . -1) (undo-tree-id20329 . -1) (undo-tree-id20330 . -1) (undo-tree-id20331 . -1) (undo-tree-id20332 . -1) (undo-tree-id20333 . -1) (undo-tree-id20334 . -1) (undo-tree-id20335 . -1) (undo-tree-id20336 . -1) (undo-tree-id20337 . -1) (undo-tree-id20338 . -1) (undo-tree-id20339 . -1) (undo-tree-id20340 . -1) (undo-tree-id20341 . -1) (undo-tree-id20342 . -1) (undo-tree-id20343 . -1) (undo-tree-id20344 . -1) (undo-tree-id20345 . -1) (undo-tree-id20346 . -1) (undo-tree-id20347 . -1) (undo-tree-id20348 . -1) (undo-tree-id20349 . -1) (undo-tree-id20350 . -1) (undo-tree-id20351 . -1) (undo-tree-id20352 . -1) (undo-tree-id20353 . -1) (undo-tree-id20354 . -1) (undo-tree-id20355 . -1) (undo-tree-id20356 . -1) (undo-tree-id20357 . -1) (undo-tree-id20358 . -1) (undo-tree-id20359 . -1) (undo-tree-id20360 . -1) (undo-tree-id20361 . -1) (undo-tree-id20362 . -1) (undo-tree-id20363 . -1) (undo-tree-id20364 . -1) (undo-tree-id20365 . -1) (undo-tree-id20366 . -1) (#("e" 0 1 (fontified t)) . -478) (undo-tree-id20367 . -1) (undo-tree-id20368 . -1) (undo-tree-id20369 . -1) (undo-tree-id20370 . -1) (undo-tree-id20371 . -1) (undo-tree-id20372 . -1) (undo-tree-id20373 . -1) (undo-tree-id20374 . -1) (undo-tree-id20375 . -1) (undo-tree-id20376 . -1) (undo-tree-id20377 . -1) (undo-tree-id20378 . -1) (undo-tree-id20379 . -1) (undo-tree-id20380 . -1) (undo-tree-id20381 . -1) (undo-tree-id20382 . -1) (undo-tree-id20383 . -1) (undo-tree-id20384 . -1) (undo-tree-id20385 . -1) (undo-tree-id20386 . -1) (undo-tree-id20387 . -1) (undo-tree-id20388 . -1) (undo-tree-id20389 . -1) (undo-tree-id20390 . -1) (undo-tree-id20391 . -1) (undo-tree-id20392 . -1) (undo-tree-id20393 . -1) (undo-tree-id20394 . -1) (undo-tree-id20395 . -1) (undo-tree-id20396 . -1) (undo-tree-id20397 . -1) (undo-tree-id20398 . -1) (undo-tree-id20399 . -1) (undo-tree-id20400 . -1) (undo-tree-id20401 . -1) (undo-tree-id20402 . -1) (undo-tree-id20403 . -1) (undo-tree-id20404 . -1) (undo-tree-id20405 . -1) (undo-tree-id20406 . -1) (undo-tree-id20407 . -1) (undo-tree-id20408 . -1) (undo-tree-id20409 . -1) (undo-tree-id20410 . -1) (undo-tree-id20411 . -1) (undo-tree-id20412 . -1) (undo-tree-id20413 . -1) (undo-tree-id20414 . -1) (undo-tree-id20415 . -1) (undo-tree-id20416 . -1) (undo-tree-id20417 . -1) (undo-tree-id20418 . -1) (undo-tree-id20419 . -1) (undo-tree-id20420 . -1) (undo-tree-id20421 . -1) (undo-tree-id20422 . -1) (undo-tree-id20423 . -1) (undo-tree-id20424 . -1) (undo-tree-id20425 . -1) (undo-tree-id20426 . -1) (undo-tree-id20427 . -1) (undo-tree-id20428 . -1) (undo-tree-id20429 . -1) (undo-tree-id20430 . -1) (undo-tree-id20431 . -1) (undo-tree-id20432 . -1) (undo-tree-id20433 . -1) (undo-tree-id20434 . -1) (undo-tree-id20435 . -1) (undo-tree-id20436 . -1) (undo-tree-id20437 . -1) (undo-tree-id20438 . -1) (undo-tree-id20439 . -1) (undo-tree-id20440 . -1) (undo-tree-id20441 . -1) (undo-tree-id20442 . -1) (undo-tree-id20443 . -1) (undo-tree-id20444 . -1) (undo-tree-id20445 . -1) (undo-tree-id20446 . -1) (undo-tree-id20447 . -1) (#("v" 0 1 (fontified t)) . -479) (undo-tree-id20448 . -1) (undo-tree-id20449 . -1) (undo-tree-id20450 . -1) (undo-tree-id20451 . -1) (undo-tree-id20452 . -1) (undo-tree-id20453 . -1) (undo-tree-id20454 . -1) (undo-tree-id20455 . -1) (undo-tree-id20456 . -1) (undo-tree-id20457 . -1) (undo-tree-id20458 . -1) (undo-tree-id20459 . -1) (undo-tree-id20460 . -1) (undo-tree-id20461 . -1) (undo-tree-id20462 . -1) (undo-tree-id20463 . -1) (undo-tree-id20464 . -1) (undo-tree-id20465 . -1) (undo-tree-id20466 . -1) (undo-tree-id20467 . -1) (undo-tree-id20468 . -1) (undo-tree-id20469 . -1) (undo-tree-id20470 . -1) (undo-tree-id20471 . -1) (undo-tree-id20472 . -1) (undo-tree-id20473 . -1) (undo-tree-id20474 . -1) (undo-tree-id20475 . -1) (undo-tree-id20476 . -1) (undo-tree-id20477 . -1) (undo-tree-id20478 . -1) (undo-tree-id20479 . -1) (undo-tree-id20480 . -1) (undo-tree-id20481 . -1) (undo-tree-id20482 . -1) (undo-tree-id20483 . -1) (undo-tree-id20484 . -1) (undo-tree-id20485 . -1) (undo-tree-id20486 . -1) (undo-tree-id20487 . -1) (undo-tree-id20488 . -1) (undo-tree-id20489 . -1) (undo-tree-id20490 . -1) (undo-tree-id20491 . -1) (undo-tree-id20492 . -1) (undo-tree-id20493 . -1) (undo-tree-id20494 . -1) (undo-tree-id20495 . -1) (undo-tree-id20496 . -1) (undo-tree-id20497 . -1) (undo-tree-id20498 . -1) (undo-tree-id20499 . -1) (undo-tree-id20500 . -1) (undo-tree-id20501 . -1) (undo-tree-id20502 . -1) (undo-tree-id20503 . -1) (undo-tree-id20504 . -1) (undo-tree-id20505 . -1) (undo-tree-id20506 . -1) (undo-tree-id20507 . -1) (undo-tree-id20508 . -1) (undo-tree-id20509 . -1) (undo-tree-id20510 . -1) (undo-tree-id20511 . -1) (undo-tree-id20512 . -1) (undo-tree-id20513 . -1) (#("e" 0 1 (fontified t)) . -480) (undo-tree-id20514 . -1) (undo-tree-id20515 . -1) (undo-tree-id20516 . -1) (undo-tree-id20517 . -1) (undo-tree-id20518 . -1) (undo-tree-id20519 . -1) (undo-tree-id20520 . -1) (undo-tree-id20521 . -1) (undo-tree-id20522 . -1) (undo-tree-id20523 . -1) (undo-tree-id20524 . -1) (undo-tree-id20525 . -1) (undo-tree-id20526 . -1) (undo-tree-id20527 . -1) (undo-tree-id20528 . -1) (undo-tree-id20529 . -1) (undo-tree-id20530 . -1) (undo-tree-id20531 . -1) (undo-tree-id20532 . -1) (undo-tree-id20533 . -1) (undo-tree-id20534 . -1) (undo-tree-id20535 . -1) (undo-tree-id20536 . -1) (undo-tree-id20537 . -1) (undo-tree-id20538 . -1) (undo-tree-id20539 . -1) (undo-tree-id20540 . -1) (undo-tree-id20541 . -1) (undo-tree-id20542 . -1) (undo-tree-id20543 . -1) (undo-tree-id20544 . -1) (undo-tree-id20545 . -1) (undo-tree-id20546 . -1) (undo-tree-id20547 . -1) (undo-tree-id20548 . -1) (undo-tree-id20549 . -1) (undo-tree-id20550 . -1) (undo-tree-id20551 . -1) (undo-tree-id20552 . -1) (undo-tree-id20553 . -1) (undo-tree-id20554 . -1) (undo-tree-id20555 . -1) (undo-tree-id20556 . -1) (undo-tree-id20557 . -1) (undo-tree-id20558 . -1) (undo-tree-id20559 . -1) (undo-tree-id20560 . -1) (undo-tree-id20561 . -1) (undo-tree-id20562 . -1) (undo-tree-id20563 . -1) (undo-tree-id20564 . -1) (undo-tree-id20565 . -1) (undo-tree-id20566 . -1) (#("n" 0 1 (fontified t)) . -481) (undo-tree-id20567 . -1) (undo-tree-id20568 . -1) (undo-tree-id20569 . -1) (undo-tree-id20570 . -1) (undo-tree-id20571 . -1) (undo-tree-id20572 . -1) (undo-tree-id20573 . -1) (undo-tree-id20574 . -1) (undo-tree-id20575 . -1) (undo-tree-id20576 . -1) (undo-tree-id20577 . -1) (undo-tree-id20578 . -1) (undo-tree-id20579 . -1) (undo-tree-id20580 . -1) (undo-tree-id20581 . -1) (undo-tree-id20582 . -1) (undo-tree-id20583 . -1) (undo-tree-id20584 . -1) (undo-tree-id20585 . -1) (undo-tree-id20586 . -1) (undo-tree-id20587 . -1) (undo-tree-id20588 . -1) (undo-tree-id20589 . -1) (undo-tree-id20590 . -1) (undo-tree-id20591 . -1) (undo-tree-id20592 . -1) (undo-tree-id20593 . -1) (undo-tree-id20594 . -1) (undo-tree-id20595 . -1) (undo-tree-id20596 . -1) (undo-tree-id20597 . -1) (undo-tree-id20598 . -1) (undo-tree-id20599 . -1) (undo-tree-id20600 . -1) (undo-tree-id20601 . -1) (undo-tree-id20602 . -1) (undo-tree-id20603 . -1) (undo-tree-id20604 . -1) (undo-tree-id20605 . -1) (undo-tree-id20606 . -1) (undo-tree-id20607 . -1) (undo-tree-id20608 . -1) (undo-tree-id20609 . -1) (undo-tree-id20610 . -1) (#("t" 0 1 (fontified t)) . -482) (undo-tree-id20611 . -1) (undo-tree-id20612 . -1) (undo-tree-id20613 . -1) (undo-tree-id20614 . -1) (undo-tree-id20615 . -1) (undo-tree-id20616 . -1) (undo-tree-id20617 . -1) (undo-tree-id20618 . -1) (undo-tree-id20619 . -1) (undo-tree-id20620 . -1) (undo-tree-id20621 . -1) (undo-tree-id20622 . -1) (undo-tree-id20623 . -1) (undo-tree-id20624 . -1) (undo-tree-id20625 . -1) (undo-tree-id20626 . -1) (undo-tree-id20627 . -1) (undo-tree-id20628 . -1) (undo-tree-id20629 . -1) (undo-tree-id20630 . -1) (undo-tree-id20631 . -1) (undo-tree-id20632 . -1) (undo-tree-id20633 . -1) (undo-tree-id20634 . -1) (undo-tree-id20635 . -1) (undo-tree-id20636 . -1) (undo-tree-id20637 . -1) (undo-tree-id20638 . -1) (undo-tree-id20639 . -1) (undo-tree-id20640 . -1) (undo-tree-id20641 . -1) (undo-tree-id20642 . -1) (#("s" 0 1 (fontified t)) . -483) (undo-tree-id20643 . -1) (undo-tree-id20644 . -1) (undo-tree-id20645 . -1) (undo-tree-id20646 . -1) (undo-tree-id20647 . -1) (undo-tree-id20648 . -1) (undo-tree-id20649 . -1) (undo-tree-id20650 . -1) (undo-tree-id20651 . -1) (undo-tree-id20652 . -1) (undo-tree-id20653 . -1) (undo-tree-id20654 . -1) (undo-tree-id20655 . -1) (undo-tree-id20656 . -1) (undo-tree-id20657 . -1) (undo-tree-id20658 . -1) 484) nil (25944 39709 450977 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -473) (undo-tree-id19823 . -1) (undo-tree-id19824 . -1) (undo-tree-id19825 . 1) (undo-tree-id19826 . -1) (undo-tree-id19827 . -1) (undo-tree-id19828 . -1) (undo-tree-id19829 . -1) (undo-tree-id19830 . -1) (undo-tree-id19831 . -1) (undo-tree-id19832 . -1) (undo-tree-id19833 . -1) (undo-tree-id19834 . -1) (undo-tree-id19835 . -1) (undo-tree-id19836 . -1) (undo-tree-id19837 . -1) (undo-tree-id19838 . -1) (undo-tree-id19839 . -1) (undo-tree-id19840 . -1) (undo-tree-id19841 . -1) (undo-tree-id19842 . -1) (undo-tree-id19843 . -1) (undo-tree-id19844 . -1) (undo-tree-id19845 . -1) (undo-tree-id19846 . -1) (undo-tree-id19847 . -1) (undo-tree-id19848 . -1) (undo-tree-id19849 . -1) (undo-tree-id19850 . -1) (undo-tree-id19851 . -1) (undo-tree-id19852 . -1) (undo-tree-id19853 . -1) (undo-tree-id19854 . -1) (undo-tree-id19855 . -1) (undo-tree-id19856 . -1) (undo-tree-id19857 . -1) (undo-tree-id19858 . -1) (undo-tree-id19859 . -1) (undo-tree-id19860 . -1) (undo-tree-id19861 . -1) (undo-tree-id19862 . -1) (undo-tree-id19863 . -1) (undo-tree-id19864 . -1) (undo-tree-id19865 . -1) (undo-tree-id19866 . -1) (undo-tree-id19867 . -1) (undo-tree-id19868 . -1) (undo-tree-id19869 . -1) (undo-tree-id19870 . -1) (undo-tree-id19871 . -1) (undo-tree-id19872 . -1) (undo-tree-id19873 . -1) (undo-tree-id19874 . -1) (undo-tree-id19875 . -1) (undo-tree-id19876 . -1) (undo-tree-id19877 . -1) (undo-tree-id19878 . -1) (undo-tree-id19879 . -1) (undo-tree-id19880 . -1) (undo-tree-id19881 . -1) (undo-tree-id19882 . -1) (undo-tree-id19883 . -1) (undo-tree-id19884 . -1) (undo-tree-id19885 . -1) (undo-tree-id19886 . -1) (undo-tree-id19887 . -1) (undo-tree-id19888 . -1) (undo-tree-id19889 . -1) (undo-tree-id19890 . -1) (undo-tree-id19891 . -1) (undo-tree-id19892 . -1) (undo-tree-id19893 . -1) (undo-tree-id19894 . -1) (undo-tree-id19895 . -1) (undo-tree-id19896 . -1) (undo-tree-id19897 . -1) (undo-tree-id19898 . -1) (undo-tree-id19899 . -1) (undo-tree-id19900 . -1) (undo-tree-id19901 . -1) (undo-tree-id19902 . -1) (undo-tree-id19903 . -1) (undo-tree-id19904 . -1) (undo-tree-id19905 . -1) (undo-tree-id19906 . -1) (undo-tree-id19907 . -1) (undo-tree-id19908 . -1) (undo-tree-id19909 . -1) (undo-tree-id19910 . -1) (undo-tree-id19911 . -1) (undo-tree-id19912 . -1) (undo-tree-id19913 . -1) (undo-tree-id19914 . -1) (undo-tree-id19915 . -1) (undo-tree-id19916 . -1) (undo-tree-id19917 . -1) (undo-tree-id19918 . -1) (undo-tree-id19919 . -1) (undo-tree-id19920 . -1) (undo-tree-id19921 . -1) (undo-tree-id19922 . -1) (undo-tree-id19923 . -1) (undo-tree-id19924 . -1) (undo-tree-id19925 . -1) (undo-tree-id19926 . -1) (undo-tree-id19927 . -1) (undo-tree-id19928 . -1) (undo-tree-id19929 . -1) (undo-tree-id19930 . -1) (undo-tree-id19931 . -1) (undo-tree-id19932 . -1) (undo-tree-id19933 . -1) (undo-tree-id19934 . -1) (undo-tree-id19935 . -1) (undo-tree-id19936 . -1) (undo-tree-id19937 . -1) (undo-tree-id19938 . -1) (undo-tree-id19939 . -1) (undo-tree-id19940 . -1) (undo-tree-id19941 . -1) (undo-tree-id19942 . -1) (undo-tree-id19943 . -1) (undo-tree-id19944 . -1) 474) nil (25944 39709 450291 0) 0 nil])
([nil nil ((618 . 623) (t 25944 39709 496112 194000)) nil (25944 39768 528899 0) 0 nil])
([nil nil ((623 . 624)) nil (25944 39768 528898 0) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -623) (undo-tree-id20682 . -1) (undo-tree-id20683 . -1) (undo-tree-id20684 . -1) (undo-tree-id20685 . -1) (undo-tree-id20686 . -1) (undo-tree-id20687 . -1) (undo-tree-id20688 . -1) (undo-tree-id20689 . -1) (undo-tree-id20690 . -1) (undo-tree-id20691 . -1) (undo-tree-id20692 . -1) (undo-tree-id20693 . -1) (undo-tree-id20694 . -1) 624) nil (25944 39768 528896 0) 0 nil])
([nil nil ((623 . 624)) nil (25944 39768 528881 0) 0 nil])
([nil nil ((apply yas--snippet-revive 623 633 #s(yas--snippet nil nil #s(yas--exit 632 nil) 88 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 632 nil) 88 nil nil nil nil)) (623 . 633) (#("println!($0)" 0 12 (fontified nil)) . 623) (623 . 635) (#("p" 0 1 (fontified nil)) . 623) (623 . 624) (#("println!(…)" 0 11 (fontified nil)) . -623) (623 . 634) (#("p" 0 1 (fontified t)) . -623) (undo-tree-id20677 . -1) (undo-tree-id20678 . -1) (undo-tree-id20679 . -1) (undo-tree-id20680 . -1) (undo-tree-id20681 . -1) 624) nil (25944 39768 528879 0) 0 nil])
([nil nil ((632 . 633)) nil (25944 39768 528870 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -632) (undo-tree-id20667 . -1) (undo-tree-id20668 . -1) (undo-tree-id20669 . -1) (undo-tree-id20670 . -1) (undo-tree-id20671 . -1) (undo-tree-id20672 . -1) (undo-tree-id20673 . -1) (undo-tree-id20674 . -1) (undo-tree-id20675 . -1) (undo-tree-id20676 . -1) 633) nil (25944 39768 528868 0) 0 nil])
([nil nil ((632 . 634)) nil (25944 39768 528849 0) 0 nil])
([nil nil ((633 . 634)) nil (25944 39768 528848 0) 0 nil])
([nil nil ((636 . 637)) nil (25944 39768 528844 0) 0 nil])
([nil nil ((#("    println!(\"1\");" 0 4 (fontified t) 4 12 (face rust-builtin-formatting-macro fontified t) 12 13 (fontified t) 13 16 (face font-lock-string-face fontified t) 16 18 (fontified t)) . 619) (undo-tree-id20713 . -18) (undo-tree-id20714 . -4) (undo-tree-id20715 . -4) (undo-tree-id20716 . -4) (undo-tree-id20717 . -4) (undo-tree-id20718 . -4) (undo-tree-id20719 . -4) (undo-tree-id20720 . -4) (undo-tree-id20721 . -4) (undo-tree-id20722 . -4) (undo-tree-id20723 . -4) (undo-tree-id20724 . -4) (undo-tree-id20725 . -4) (undo-tree-id20726 . -4) (undo-tree-id20727 . -4) (undo-tree-id20728 . -4) (undo-tree-id20729 . -13) (undo-tree-id20730 . -13) (undo-tree-id20731 . -13) (undo-tree-id20732 . -13) (undo-tree-id20733 . -13) (undo-tree-id20734 . -13) (undo-tree-id20735 . -13) (undo-tree-id20736 . -13) (undo-tree-id20737 . -13) (undo-tree-id20738 . 3) (undo-tree-id20739 . -18) (undo-tree-id20740 . -18) (undo-tree-id20741 . -18) (undo-tree-id20742 . -18) (undo-tree-id20743 . -18) (undo-tree-id20744 . -18) (undo-tree-id20745 . -18) (undo-tree-id20746 . -18) (undo-tree-id20747 . -18) (undo-tree-id20748 . -18) (undo-tree-id20749 . -18) (undo-tree-id20750 . -18) (undo-tree-id20751 . -18) (undo-tree-id20752 . -18) (undo-tree-id20753 . -18) (undo-tree-id20754 . -18) (undo-tree-id20755 . -18) (undo-tree-id20756 . -18) (undo-tree-id20757 . -18) (undo-tree-id20758 . -18) (undo-tree-id20759 . -18) (undo-tree-id20760 . -18) (undo-tree-id20761 . -18) (undo-tree-id20762 . -18) (undo-tree-id20763 . -18) (undo-tree-id20764 . -18) (undo-tree-id20765 . -18) (undo-tree-id20766 . -18) (undo-tree-id20767 . -18) (undo-tree-id20768 . -18) (undo-tree-id20769 . -18) (undo-tree-id20770 . -18) (undo-tree-id20771 . -18) (undo-tree-id20772 . -18) (undo-tree-id20773 . -18) (undo-tree-id20774 . -18) (undo-tree-id20775 . -18) (undo-tree-id20776 . -18) (undo-tree-id20777 . -18) (undo-tree-id20778 . -18) (undo-tree-id20779 . -18) (undo-tree-id20780 . -18) (undo-tree-id20781 . -18) (undo-tree-id20782 . -18) (undo-tree-id20783 . -18) (undo-tree-id20784 . -18) (undo-tree-id20785 . -18) (undo-tree-id20786 . -18) (undo-tree-id20787 . -18) (undo-tree-id20788 . -18) (undo-tree-id20789 . -18) (undo-tree-id20790 . -18) (undo-tree-id20791 . -18) (undo-tree-id20792 . -18) (undo-tree-id20793 . -18) (undo-tree-id20794 . -18) (undo-tree-id20795 . -18) (undo-tree-id20796 . -18) (undo-tree-id20797 . -18) (undo-tree-id20798 . -18) (undo-tree-id20799 . -18) (undo-tree-id20800 . -18) (undo-tree-id20801 . -18) (undo-tree-id20802 . -18) (undo-tree-id20803 . -18) (undo-tree-id20804 . -18) (undo-tree-id20805 . -18) (t 25944 39768 573971 317000)) nil (25944 39804 3405 0) 0 nil])
([nil nil ((619 . 623)) nil (25944 39804 3310 0) 0 nil])
([nil nil ((623 . 624)) nil (25944 39804 3310 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -623) (undo-tree-id20708 . -1) (undo-tree-id20709 . -1) (undo-tree-id20710 . -1) (undo-tree-id20711 . -1) (undo-tree-id20712 . -1) 624) nil (25944 39804 3308 0) 0 nil])
([nil nil ((623 . 626)) nil (25944 39804 3302 0) 0 nil])
([nil nil ((623 . 630) (#("log" 0 3 (fontified nil)) . 623) (623 . 626) (#("logging" 0 7 (fontified nil)) . -623) (623 . 630) (#("log" 0 3 (fontified t)) . -623) (undo-tree-id20695 . -3) (undo-tree-id20696 . -1) (undo-tree-id20697 . -1) (undo-tree-id20698 . -2) (undo-tree-id20699 . -2) (undo-tree-id20700 . -2) (undo-tree-id20701 . -2) (undo-tree-id20702 . -2) (undo-tree-id20703 . -3) (undo-tree-id20704 . -3) (undo-tree-id20705 . -3) (undo-tree-id20706 . -3) (undo-tree-id20707 . -3) 626) nil (25944 39804 3300 0) 0 nil])
([nil nil ((630 . 632)) nil (25944 39804 3278 0) 0 nil])
([nil nil ((apply yas--snippet-revive 632 638 #s(yas--snippet nil nil #s(yas--exit 637 nil) 89 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 637 nil) 89 nil nil nil nil)) (632 . 638) (#("log!($0)" 0 8 (fontified nil)) . 632) (632 . 640) (#("log!(…)" 0 7 (fontified nil)) . -632) (632 . 639)) nil (25944 39804 3276 0) 0 nil])
([nil nil ((637 . 639)) nil (25944 39804 3273 0) 0 nil])
([nil nil ((638 . 639)) nil (25944 39804 3268 0) 0 nil])
([nil nil ((641 . 642) (t 25944 39804 50000 716000)) nil (25944 39805 715320 0) 0 nil])
([nil nil ((#("println" 0 7 (face rust-builtin-formatting-macro fontified t)) . -860) (undo-tree-id20893 . -7) (undo-tree-id20894 . -7) (undo-tree-id20895 . -7) (undo-tree-id20896 . -7) (undo-tree-id20897 . -7) (undo-tree-id20898 . -7) (undo-tree-id20899 . -7) (undo-tree-id20900 . -7) (undo-tree-id20901 . -7) (undo-tree-id20902 . -7) (undo-tree-id20903 . -7) (undo-tree-id20904 . -7) (undo-tree-id20905 . -7) (undo-tree-id20906 . -7) (undo-tree-id20907 . -7) (undo-tree-id20908 . -7) 867 (t 25944 39805 761335 234000)) nil (25944 39825 590604 0) 0 nil])
([nil nil ((860 . 864)) nil (25944 39825 590585 0) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-preprocessor-face fontified t)) . -862) (undo-tree-id20877 . -1) (undo-tree-id20878 . -1) (undo-tree-id20879 . -1) (undo-tree-id20880 . -1) (undo-tree-id20881 . -1) (undo-tree-id20882 . -1) (undo-tree-id20883 . -1) (undo-tree-id20884 . -1) (undo-tree-id20885 . -1) (undo-tree-id20886 . -1) (undo-tree-id20887 . -1) (undo-tree-id20888 . -1) (#("g" 0 1 (face font-lock-preprocessor-face fontified t)) . -863) (undo-tree-id20889 . -1) (undo-tree-id20890 . -1) (undo-tree-id20891 . -1) (undo-tree-id20892 . -1) 864) nil (25944 39825 590584 0) 0 nil])
([nil nil ((862 . 864)) nil (25944 39825 590566 0) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-preprocessor-face fontified t)) . -863) (undo-tree-id20871 . -1) (undo-tree-id20872 . -1) (undo-tree-id20873 . -1) (undo-tree-id20874 . -1) (undo-tree-id20875 . -1) (undo-tree-id20876 . -1) 864) nil (25944 39825 590564 0) 0 nil])
([nil nil ((860 . 867) (#("log" 0 3 (fontified nil)) . 860) (860 . 863) (#("logging" 0 7 (fontified nil)) . -860) (860 . 867) (#("log" 0 3 (face font-lock-preprocessor-face fontified t)) . -860) (undo-tree-id20836 . -3) (undo-tree-id20837 . -1) (undo-tree-id20838 . -1) (undo-tree-id20839 . -2) (undo-tree-id20840 . -2) (undo-tree-id20841 . -2) (undo-tree-id20842 . -2) (undo-tree-id20843 . -2) (undo-tree-id20844 . -2) (undo-tree-id20845 . -2) (undo-tree-id20846 . -2) (undo-tree-id20847 . -2) (undo-tree-id20848 . -2) (undo-tree-id20849 . -2) (undo-tree-id20850 . -2) (undo-tree-id20851 . -2) (undo-tree-id20852 . -2) (undo-tree-id20853 . -2) (undo-tree-id20854 . -2) (undo-tree-id20855 . -2) (undo-tree-id20856 . -3) (undo-tree-id20857 . -3) (undo-tree-id20858 . -3) (undo-tree-id20859 . -3) (undo-tree-id20860 . -3) (undo-tree-id20861 . -3) (undo-tree-id20862 . -3) (undo-tree-id20863 . -3) (undo-tree-id20864 . -3) (undo-tree-id20865 . -3) (undo-tree-id20866 . -3) (undo-tree-id20867 . -3) (undo-tree-id20868 . -3) (undo-tree-id20869 . -3) (undo-tree-id20870 . -3) 863) nil (25944 39825 590555 0) 0 nil])
([nil nil ((867 . 869)) nil (25944 39825 590515 0) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-preprocessor-face fontified t)) . -868) (undo-tree-id20831 . -1) (undo-tree-id20832 . -1) (undo-tree-id20833 . -1) (undo-tree-id20834 . -1) (undo-tree-id20835 . -1) 869) nil (25944 39825 590513 0) 0 nil])
([nil nil ((868 . 869)) nil (25944 39825 590507 0) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-preprocessor-face fontified t)) . -868) (undo-tree-id20826 . -1) (undo-tree-id20827 . -1) (undo-tree-id20828 . -1) (undo-tree-id20829 . -1) (undo-tree-id20830 . -1) 869) nil (25944 39825 590505 0) 0 nil])
([nil nil ((868 . 872)) nil (25944 39825 590499 0) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-preprocessor-face fontified t)) . -870) (undo-tree-id20806 . -1) (undo-tree-id20807 . -1) (undo-tree-id20808 . -1) (undo-tree-id20809 . -1) (undo-tree-id20810 . -1) (undo-tree-id20811 . -1) (undo-tree-id20812 . -1) (undo-tree-id20813 . -1) (undo-tree-id20814 . -1) (undo-tree-id20815 . -1) (undo-tree-id20816 . -1) (undo-tree-id20817 . -1) (#("o" 0 1 (face font-lock-preprocessor-face fontified t)) . -871) (undo-tree-id20818 . -1) (undo-tree-id20819 . -1) (undo-tree-id20820 . -1) (undo-tree-id20821 . -1) (undo-tree-id20822 . -1) (undo-tree-id20823 . -1) (undo-tree-id20824 . -1) (undo-tree-id20825 . -1) 872) nil (25944 39825 590496 0) 0 nil])
([nil nil ((870 . 872)) nil (25944 39825 590465 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -642) (undo-tree-id21499 . -1) (undo-tree-id21500 . -1) (undo-tree-id21501 . -1) (undo-tree-id21502 . -1) (undo-tree-id21503 . -1) (undo-tree-id21504 . -1) (undo-tree-id21505 . -1) (undo-tree-id21506 . -1) (undo-tree-id21507 . -1) (undo-tree-id21508 . -1) (undo-tree-id21509 . -1) (undo-tree-id21510 . -1) (undo-tree-id21511 . -1) (undo-tree-id21512 . -1) (undo-tree-id21513 . -1) (undo-tree-id21514 . -1) (undo-tree-id21515 . -1) (undo-tree-id21516 . -1) (undo-tree-id21517 . -1) (undo-tree-id21518 . -1) 643 (t 25944 39825 636275 899000)) nil (25944 40050 633460 0) 0 nil])
([nil nil ((642 . 643)) nil (25944 40050 633440 0) 0 nil])
([nil nil ((#("    logging::log!(\"1\");" 0 4 (fontified t) 4 11 (face font-lock-constant-face fontified t) 11 13 (fontified t) 13 17 (face font-lock-preprocessor-face fontified t) 17 18 (fontified t) 18 21 (face font-lock-string-face fontified t) 21 23 (fontified t)) . 619) (undo-tree-id21433 . -23) (undo-tree-id21434 . -1) (undo-tree-id21435 . -23) (undo-tree-id21436 . -23) (undo-tree-id21437 . -23) (undo-tree-id21438 . -23) (undo-tree-id21439 . -23) (undo-tree-id21440 . -23) (undo-tree-id21441 . -23) (undo-tree-id21442 . -23) (undo-tree-id21443 . -23) (undo-tree-id21444 . -23) (undo-tree-id21445 . -23) (undo-tree-id21446 . -23) (undo-tree-id21447 . -23) (undo-tree-id21448 . -23) (undo-tree-id21449 . -23) (undo-tree-id21450 . -23) (undo-tree-id21451 . -23) (undo-tree-id21452 . -23) (undo-tree-id21453 . -23) (undo-tree-id21454 . -23) (undo-tree-id21455 . -23) (undo-tree-id21456 . -23) (undo-tree-id21457 . -23) (undo-tree-id21458 . -23) (undo-tree-id21459 . -23) (undo-tree-id21460 . -23) (undo-tree-id21461 . -23) (undo-tree-id21462 . -23) (undo-tree-id21463 . -23) (undo-tree-id21464 . -23) (undo-tree-id21465 . -23) (undo-tree-id21466 . -23) (undo-tree-id21467 . -23) (undo-tree-id21468 . -23) (undo-tree-id21469 . -23) (undo-tree-id21470 . -23) (undo-tree-id21471 . -23) (undo-tree-id21472 . -23) (undo-tree-id21473 . -23) (undo-tree-id21474 . -23) (undo-tree-id21475 . -23) (undo-tree-id21476 . -23) (undo-tree-id21477 . -23) (undo-tree-id21478 . -17) (undo-tree-id21479 . -14) (undo-tree-id21480 . -12) (undo-tree-id21481 . -9) (undo-tree-id21482 . -8) (undo-tree-id21483 . -7) (undo-tree-id21484 . -6) (undo-tree-id21485 . -5) (undo-tree-id21486 . -4) (undo-tree-id21487 . -2) (undo-tree-id21488 . -1) (undo-tree-id21489 . -1) (undo-tree-id21490 . -1) (undo-tree-id21491 . -1) (undo-tree-id21492 . -1) (undo-tree-id21493 . -1) (undo-tree-id21494 . -1) (undo-tree-id21495 . -1) (undo-tree-id21496 . -23) (undo-tree-id21497 . -23) (undo-tree-id21498 . -23)) nil (25944 40050 633436 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -618) (undo-tree-id21353 . -1) (undo-tree-id21354 . -1) (undo-tree-id21355 . -1) (undo-tree-id21356 . -1) (undo-tree-id21357 . -1) (undo-tree-id21358 . -1) (undo-tree-id21359 . -1) (undo-tree-id21360 . -1) (undo-tree-id21361 . -1) (undo-tree-id21362 . -1) (undo-tree-id21363 . -1) (undo-tree-id21364 . -1) (undo-tree-id21365 . -1) (undo-tree-id21366 . -1) (undo-tree-id21367 . -1) (undo-tree-id21368 . -1) (undo-tree-id21369 . -1) (undo-tree-id21370 . -1) (undo-tree-id21371 . -1) (undo-tree-id21372 . -1) (undo-tree-id21373 . -1) (undo-tree-id21374 . -1) (undo-tree-id21375 . -1) (undo-tree-id21376 . -1) (undo-tree-id21377 . -1) (undo-tree-id21378 . -1) (undo-tree-id21379 . -1) (undo-tree-id21380 . -1) (undo-tree-id21381 . -1) (undo-tree-id21382 . -1) (undo-tree-id21383 . -1) (undo-tree-id21384 . -1) (undo-tree-id21385 . -1) (undo-tree-id21386 . -1) (undo-tree-id21387 . -1) (undo-tree-id21388 . -1) (undo-tree-id21389 . -1) (undo-tree-id21390 . -1) (undo-tree-id21391 . -1) (undo-tree-id21392 . -1) (undo-tree-id21393 . -1) (undo-tree-id21394 . -1) (undo-tree-id21395 . -1) (undo-tree-id21396 . -1) (undo-tree-id21397 . -1) (undo-tree-id21398 . -1) (undo-tree-id21399 . -1) (undo-tree-id21400 . -1) (undo-tree-id21401 . -1) (undo-tree-id21402 . -1) (undo-tree-id21403 . -1) (undo-tree-id21404 . -1) (undo-tree-id21405 . -1) (undo-tree-id21406 . -1) (undo-tree-id21407 . -1) (undo-tree-id21408 . -1) (undo-tree-id21409 . -1) (undo-tree-id21410 . -1) (undo-tree-id21411 . -1) (undo-tree-id21412 . -1) (undo-tree-id21413 . -1) (undo-tree-id21414 . -1) (undo-tree-id21415 . -1) (undo-tree-id21416 . -1) (undo-tree-id21417 . -1) (undo-tree-id21418 . -1) (undo-tree-id21419 . -1) (undo-tree-id21420 . -1) (undo-tree-id21421 . -1) (undo-tree-id21422 . -1) (undo-tree-id21423 . -1) (undo-tree-id21424 . -1) (undo-tree-id21425 . -1) (undo-tree-id21426 . -1) (undo-tree-id21427 . -1) (undo-tree-id21428 . -1) (undo-tree-id21429 . -1) (undo-tree-id21430 . -1) (undo-tree-id21431 . -1) (undo-tree-id21432 . -1) 619) nil (25944 40050 633369 0) 0 nil])
([nil nil ((#("      // logging::log!(\"Received generic-event {:#?}\", event.payload);
	logging::log!(\"{:?}\", event.payload.message);" 0 6 (fontified t) 6 9 (face font-lock-comment-delimiter-face fontified t) 9 16 (face font-lock-comment-face fontified t) 16 18 (face font-lock-comment-face fontified t) 18 21 (face font-lock-comment-face fontified t) 21 22 (face font-lock-comment-face fontified t) 22 23 (face font-lock-comment-face fontified t) 23 53 (face font-lock-comment-face fontified t) 53 61 (face font-lock-comment-face fontified t) 61 68 (face font-lock-comment-face fontified t) 68 71 (face font-lock-comment-face fontified t) 71 72 (fontified t) 72 79 (face font-lock-constant-face fontified t) 79 81 (fontified t) 81 84 (face font-lock-preprocessor-face fontified t) 84 85 (face font-lock-preprocessor-face fontified t) 85 86 (fontified t) 86 87 (face font-lock-string-face fontified t) 87 91 (face font-lock-string-face fontified t) 91 92 (face font-lock-string-face fontified t) 92 94 (fontified t) 94 100 (fontified t) 100 108 (fontified t) 108 115 (fontified t) 115 117 (fontified t)) . 764) (undo-tree-id21253 . -117) (undo-tree-id21254 . -1) (undo-tree-id21255 . -72) (undo-tree-id21256 . -72) (undo-tree-id21257 . -72) (undo-tree-id21258 . -72) (undo-tree-id21259 . -72) (undo-tree-id21260 . -72) (undo-tree-id21261 . -72) (undo-tree-id21262 . -72) (undo-tree-id21263 . -72) (undo-tree-id21264 . -72) (undo-tree-id21265 . -72) (undo-tree-id21266 . -72) (undo-tree-id21267 . -72) (undo-tree-id21268 . -72) (undo-tree-id21269 . -72) (undo-tree-id21270 . -72) (undo-tree-id21271 . -72) (undo-tree-id21272 . -72) (undo-tree-id21273 . -72) (undo-tree-id21274 . -72) (undo-tree-id21275 . -72) (undo-tree-id21276 . -72) (undo-tree-id21277 . -72) (undo-tree-id21278 . -72) (undo-tree-id21279 . -72) (undo-tree-id21280 . -72) (undo-tree-id21281 . -72) (undo-tree-id21282 . -72) (undo-tree-id21283 . -72) (undo-tree-id21284 . -72) (undo-tree-id21285 . -72) (undo-tree-id21286 . -72) (undo-tree-id21287 . -72) (undo-tree-id21288 . -72) (undo-tree-id21289 . -72) (undo-tree-id21290 . -72) (undo-tree-id21291 . -72) (undo-tree-id21292 . -72) (undo-tree-id21293 . -72) (undo-tree-id21294 . -72) (undo-tree-id21295 . -72) (undo-tree-id21296 . -72) (undo-tree-id21297 . -72) (undo-tree-id21298 . -72) (undo-tree-id21299 . -72) (undo-tree-id21300 . -72) (undo-tree-id21301 . -72) (undo-tree-id21302 . -80) (undo-tree-id21303 . -80) (undo-tree-id21304 . -80) (undo-tree-id21305 . -80) (undo-tree-id21306 . -80) (undo-tree-id21307 . -80) (undo-tree-id21308 . -80) (undo-tree-id21309 . -80) (undo-tree-id21310 . -82) (undo-tree-id21311 . -82) (undo-tree-id21312 . -82) (undo-tree-id21313 . -82) (undo-tree-id21314 . -82) (undo-tree-id21315 . -82) (undo-tree-id21316 . -82) (undo-tree-id21317 . -82) (undo-tree-id21318 . -82) (undo-tree-id21319 . -82) (undo-tree-id21320 . -82) (undo-tree-id21321 . 33) (undo-tree-id21322 . -117) (undo-tree-id21323 . -117) (undo-tree-id21324 . -117) (undo-tree-id21325 . -117) (undo-tree-id21326 . -117) (undo-tree-id21327 . -117) (undo-tree-id21328 . -117) (undo-tree-id21329 . -116) (undo-tree-id21330 . -112) (undo-tree-id21331 . -109) (undo-tree-id21332 . -107) (undo-tree-id21333 . -104) (undo-tree-id21334 . -100) (undo-tree-id21335 . -96) (undo-tree-id21336 . -92) (undo-tree-id21337 . -89) (undo-tree-id21338 . -86) (undo-tree-id21339 . -71) (undo-tree-id21340 . -71) (undo-tree-id21341 . -71) (undo-tree-id21342 . -1) (undo-tree-id21343 . -1) (undo-tree-id21344 . -1) (undo-tree-id21345 . -1) (undo-tree-id21346 . -1) (undo-tree-id21347 . -1) (undo-tree-id21348 . -1) (undo-tree-id21349 . -1) (undo-tree-id21350 . -1) (undo-tree-id21351 . -1) (undo-tree-id21352 . -117)) nil (25944 40050 633287 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -761) (undo-tree-id20909 . -1) (undo-tree-id20910 . -1) (undo-tree-id20911 . -1) (undo-tree-id20912 . -1) (undo-tree-id20913 . -1) (undo-tree-id20914 . -1) (undo-tree-id20915 . -1) (undo-tree-id20916 . -1) (undo-tree-id20917 . -1) (undo-tree-id20918 . -1) (undo-tree-id20919 . -1) (undo-tree-id20920 . -1) (undo-tree-id20921 . -1) (undo-tree-id20922 . -1) (undo-tree-id20923 . -1) (undo-tree-id20924 . -1) (undo-tree-id20925 . -1) (undo-tree-id20926 . -1) (undo-tree-id20927 . -1) (undo-tree-id20928 . -1) (undo-tree-id20929 . -1) (undo-tree-id20930 . -1) (undo-tree-id20931 . -1) (undo-tree-id20932 . -1) (undo-tree-id20933 . -1) (undo-tree-id20934 . -1) (undo-tree-id20935 . -1) (undo-tree-id20936 . -1) (undo-tree-id20937 . -1) (undo-tree-id20938 . -1) (undo-tree-id20939 . -1) (undo-tree-id20940 . -1) (undo-tree-id20941 . -1) (undo-tree-id20942 . -1) (undo-tree-id20943 . -1) (undo-tree-id20944 . -1) (undo-tree-id20945 . -1) (undo-tree-id20946 . -1) (undo-tree-id20947 . -1) (undo-tree-id20948 . -1) (undo-tree-id20949 . -1) (undo-tree-id20950 . -1) (undo-tree-id20951 . -1) (undo-tree-id20952 . -1) (undo-tree-id20953 . -1) (undo-tree-id20954 . -1) (undo-tree-id20955 . -1) (undo-tree-id20956 . -1) (undo-tree-id20957 . -1) (undo-tree-id20958 . -1) (undo-tree-id20959 . -1) (undo-tree-id20960 . -1) (undo-tree-id20961 . -1) (undo-tree-id20962 . -1) (undo-tree-id20963 . -1) (undo-tree-id20964 . -1) (undo-tree-id20965 . -1) (undo-tree-id20966 . -1) (undo-tree-id20967 . -1) (undo-tree-id20968 . -1) (undo-tree-id20969 . -1) (undo-tree-id20970 . -1) (undo-tree-id20971 . -1) (undo-tree-id20972 . -1) (undo-tree-id20973 . -1) (undo-tree-id20974 . -1) (undo-tree-id20975 . -1) (undo-tree-id20976 . -1) (undo-tree-id20977 . -1) (undo-tree-id20978 . -1) (undo-tree-id20979 . -1) (undo-tree-id20980 . -1) (undo-tree-id20981 . -1) (undo-tree-id20982 . -1) (undo-tree-id20983 . -1) (undo-tree-id20984 . -1) (undo-tree-id20985 . -1) (undo-tree-id20986 . -1) (undo-tree-id20987 . -1) (undo-tree-id20988 . -1) (undo-tree-id20989 . -1) (undo-tree-id20990 . -1) (undo-tree-id20991 . -1) (undo-tree-id20992 . -1) (undo-tree-id20993 . -1) (undo-tree-id20994 . -1) (undo-tree-id20995 . -1) (undo-tree-id20996 . -1) (undo-tree-id20997 . -1) (undo-tree-id20998 . -1) (undo-tree-id20999 . -1) (undo-tree-id21000 . -1) (undo-tree-id21001 . -1) (undo-tree-id21002 . -1) (undo-tree-id21003 . -1) (undo-tree-id21004 . -1) (undo-tree-id21005 . -1) (undo-tree-id21006 . -1) (undo-tree-id21007 . -1) (undo-tree-id21008 . -1) (undo-tree-id21009 . -1) (undo-tree-id21010 . -1) (undo-tree-id21011 . -1) (undo-tree-id21012 . -1) (undo-tree-id21013 . -1) (undo-tree-id21014 . -1) (undo-tree-id21015 . -1) (undo-tree-id21016 . -1) (undo-tree-id21017 . -1) (undo-tree-id21018 . -1) (undo-tree-id21019 . -1) (undo-tree-id21020 . -1) (undo-tree-id21021 . -1) (undo-tree-id21022 . -1) (undo-tree-id21023 . -1) (undo-tree-id21024 . -1) (undo-tree-id21025 . -1) (undo-tree-id21026 . -1) (undo-tree-id21027 . -1) (#(" " 0 1 (fontified t)) . -762) (undo-tree-id21028 . -1) (undo-tree-id21029 . -1) (undo-tree-id21030 . -1) (undo-tree-id21031 . -1) (undo-tree-id21032 . -1) (undo-tree-id21033 . -1) (undo-tree-id21034 . -1) (undo-tree-id21035 . -1) (undo-tree-id21036 . -1) (undo-tree-id21037 . -1) (undo-tree-id21038 . -1) (undo-tree-id21039 . -1) (undo-tree-id21040 . -1) (undo-tree-id21041 . -1) (undo-tree-id21042 . -1) (undo-tree-id21043 . -1) (undo-tree-id21044 . -1) (undo-tree-id21045 . -1) (undo-tree-id21046 . -1) (undo-tree-id21047 . -1) (undo-tree-id21048 . -1) (undo-tree-id21049 . -1) (undo-tree-id21050 . -1) (undo-tree-id21051 . -1) (undo-tree-id21052 . -1) (undo-tree-id21053 . -1) (undo-tree-id21054 . -1) (undo-tree-id21055 . -1) (undo-tree-id21056 . -1) (undo-tree-id21057 . -1) (undo-tree-id21058 . -1) (undo-tree-id21059 . -1) (undo-tree-id21060 . -1) (undo-tree-id21061 . -1) (undo-tree-id21062 . -1) (undo-tree-id21063 . -1) (undo-tree-id21064 . -1) (undo-tree-id21065 . -1) (undo-tree-id21066 . -1) (undo-tree-id21067 . -1) (undo-tree-id21068 . -1) (undo-tree-id21069 . -1) (undo-tree-id21070 . -1) (undo-tree-id21071 . -1) (undo-tree-id21072 . -1) (undo-tree-id21073 . -1) (undo-tree-id21074 . -1) (undo-tree-id21075 . -1) (undo-tree-id21076 . -1) (undo-tree-id21077 . -1) (undo-tree-id21078 . -1) (undo-tree-id21079 . -1) (undo-tree-id21080 . -1) (undo-tree-id21081 . -1) (undo-tree-id21082 . -1) (undo-tree-id21083 . -1) (undo-tree-id21084 . -1) (undo-tree-id21085 . -1) (undo-tree-id21086 . -1) (undo-tree-id21087 . -1) (undo-tree-id21088 . -1) (undo-tree-id21089 . -1) (undo-tree-id21090 . -1) (undo-tree-id21091 . -1) (undo-tree-id21092 . -1) (undo-tree-id21093 . -1) (undo-tree-id21094 . -1) (undo-tree-id21095 . -1) (undo-tree-id21096 . -1) (undo-tree-id21097 . -1) (undo-tree-id21098 . -1) (undo-tree-id21099 . -1) (undo-tree-id21100 . -1) (undo-tree-id21101 . -1) (undo-tree-id21102 . -1) (undo-tree-id21103 . -1) (undo-tree-id21104 . -1) (undo-tree-id21105 . -1) (undo-tree-id21106 . -1) (undo-tree-id21107 . -1) (undo-tree-id21108 . -1) (undo-tree-id21109 . -1) (undo-tree-id21110 . -1) (undo-tree-id21111 . -1) (undo-tree-id21112 . -1) (undo-tree-id21113 . -1) (undo-tree-id21114 . -1) (undo-tree-id21115 . -1) (undo-tree-id21116 . -1) (undo-tree-id21117 . -1) (undo-tree-id21118 . -1) (undo-tree-id21119 . -1) (undo-tree-id21120 . -1) (undo-tree-id21121 . -1) (undo-tree-id21122 . -1) (undo-tree-id21123 . -1) (undo-tree-id21124 . -1) (undo-tree-id21125 . -1) (undo-tree-id21126 . -1) (undo-tree-id21127 . -1) (undo-tree-id21128 . -1) (undo-tree-id21129 . -1) (undo-tree-id21130 . -1) (undo-tree-id21131 . -1) (undo-tree-id21132 . -1) (undo-tree-id21133 . -1) (undo-tree-id21134 . -1) (undo-tree-id21135 . -1) (undo-tree-id21136 . -1) (undo-tree-id21137 . -1) (undo-tree-id21138 . -1) (undo-tree-id21139 . -1) (undo-tree-id21140 . -1) (undo-tree-id21141 . -1) (#(" " 0 1 (fontified t)) . -763) (undo-tree-id21142 . -1) (undo-tree-id21143 . -1) (undo-tree-id21144 . -1) (undo-tree-id21145 . -1) (undo-tree-id21146 . -1) (undo-tree-id21147 . -1) (undo-tree-id21148 . -1) (undo-tree-id21149 . -1) (undo-tree-id21150 . -1) (undo-tree-id21151 . -1) (undo-tree-id21152 . -1) (undo-tree-id21153 . -1) (undo-tree-id21154 . -1) (undo-tree-id21155 . -1) (undo-tree-id21156 . -1) (undo-tree-id21157 . -1) (undo-tree-id21158 . -1) (undo-tree-id21159 . -1) (undo-tree-id21160 . -1) (undo-tree-id21161 . -1) (undo-tree-id21162 . -1) (undo-tree-id21163 . -1) (undo-tree-id21164 . -1) (undo-tree-id21165 . -1) (undo-tree-id21166 . -1) (undo-tree-id21167 . -1) (undo-tree-id21168 . -1) (undo-tree-id21169 . -1) (undo-tree-id21170 . -1) (undo-tree-id21171 . -1) (undo-tree-id21172 . -1) (undo-tree-id21173 . -1) (undo-tree-id21174 . -1) (undo-tree-id21175 . -1) (undo-tree-id21176 . -1) (undo-tree-id21177 . -1) (undo-tree-id21178 . -1) (undo-tree-id21179 . -1) (undo-tree-id21180 . -1) (undo-tree-id21181 . -1) (undo-tree-id21182 . -1) (undo-tree-id21183 . -1) (undo-tree-id21184 . -1) (undo-tree-id21185 . -1) (undo-tree-id21186 . -1) (undo-tree-id21187 . -1) (undo-tree-id21188 . -1) (undo-tree-id21189 . -1) (undo-tree-id21190 . -1) (undo-tree-id21191 . -1) (undo-tree-id21192 . -1) (undo-tree-id21193 . -1) (undo-tree-id21194 . -1) (undo-tree-id21195 . -1) (undo-tree-id21196 . -1) (undo-tree-id21197 . -1) (undo-tree-id21198 . -1) (undo-tree-id21199 . -1) (undo-tree-id21200 . -1) (undo-tree-id21201 . -1) (undo-tree-id21202 . -1) (undo-tree-id21203 . -1) (undo-tree-id21204 . -1) (undo-tree-id21205 . -1) (undo-tree-id21206 . -1) (undo-tree-id21207 . -1) (undo-tree-id21208 . -1) (undo-tree-id21209 . -1) (undo-tree-id21210 . -1) (undo-tree-id21211 . -1) (undo-tree-id21212 . -1) (undo-tree-id21213 . -1) (undo-tree-id21214 . -1) (undo-tree-id21215 . -1) (undo-tree-id21216 . -1) (undo-tree-id21217 . -1) (undo-tree-id21218 . -1) (undo-tree-id21219 . -1) (undo-tree-id21220 . -1) (undo-tree-id21221 . -1) (undo-tree-id21222 . -1) (undo-tree-id21223 . -1) (undo-tree-id21224 . -1) (undo-tree-id21225 . -1) (undo-tree-id21226 . -1) (undo-tree-id21227 . -1) (undo-tree-id21228 . -1) (undo-tree-id21229 . -1) (undo-tree-id21230 . -1) (undo-tree-id21231 . -1) (undo-tree-id21232 . -1) (undo-tree-id21233 . -1) (undo-tree-id21234 . -1) (undo-tree-id21235 . -1) (undo-tree-id21236 . -1) (undo-tree-id21237 . -1) (undo-tree-id21238 . -1) (undo-tree-id21239 . -1) (undo-tree-id21240 . -1) (undo-tree-id21241 . -1) (undo-tree-id21242 . -1) (undo-tree-id21243 . -1) (undo-tree-id21244 . -1) (undo-tree-id21245 . -1) (undo-tree-id21246 . -1) (undo-tree-id21247 . -1) (undo-tree-id21248 . -1) (undo-tree-id21249 . -1) (undo-tree-id21250 . -1) (undo-tree-id21251 . -1) (undo-tree-id21252 . -1) 764) nil (25944 40050 633175 0) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -895) (undo-tree-id21519 . -1) (undo-tree-id21520 . -1) (undo-tree-id21521 . -1) (undo-tree-id21522 . -1) (undo-tree-id21523 . -1) (undo-tree-id21524 . -1) (undo-tree-id21525 . -1) (undo-tree-id21526 . -1) 896 (t 25944 40050 681095 357000)) nil (25944 40136 143377 0) 0 nil])
([nil nil ((895 . 896)) nil (25944 40136 143355 0) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -895) (undo-tree-id21527 . -1) (undo-tree-id21528 . -1) (undo-tree-id21529 . -1) (undo-tree-id21530 . -1) (undo-tree-id21531 . -1) (undo-tree-id21532 . -1) (undo-tree-id21533 . -1) (undo-tree-id21534 . -1) (undo-tree-id21535 . -1) (undo-tree-id21536 . -1) (undo-tree-id21537 . -1) (undo-tree-id21538 . -1) (undo-tree-id21539 . -1) (undo-tree-id21540 . -1) (undo-tree-id21541 . -1) (undo-tree-id21542 . -1) (undo-tree-id21543 . -1) (undo-tree-id21544 . -1) (undo-tree-id21545 . -1) (undo-tree-id21546 . -1) (undo-tree-id21547 . -1) (undo-tree-id21548 . -1) (undo-tree-id21549 . -1) (undo-tree-id21550 . -1) (undo-tree-id21551 . -1) (undo-tree-id21552 . -1) (undo-tree-id21553 . -1) (undo-tree-id21554 . -1) (undo-tree-id21555 . -1) (undo-tree-id21556 . -1) (undo-tree-id21557 . -1) (undo-tree-id21558 . -1) (undo-tree-id21559 . -1) (undo-tree-id21560 . -1) (undo-tree-id21561 . -1) (undo-tree-id21562 . -1) (undo-tree-id21563 . -1) (undo-tree-id21564 . -1) (undo-tree-id21565 . -1) (undo-tree-id21566 . -1) (undo-tree-id21567 . -1) (undo-tree-id21568 . -1) (undo-tree-id21569 . -1) 896 (t 25944 40136 189015 225000)) nil (25944 40160 479788 0) 0 nil])
([nil nil ((895 . 896)) nil (25944 40315 213392 0) 0 nil])
([nil nil ((1213 . 1217) (#("    " 0 4 (fontified nil)) . 1212) (undo-tree-id21988 . -4) (undo-tree-id21989 . -4) (undo-tree-id21990 . -4) (undo-tree-id21991 . -4) (1216 . 1217)) nil (25944 40381 603538 0) 0 nil] [nil nil ((#("1" 0 1 (fontified t)) . -892) (undo-tree-id21570 . -1) (undo-tree-id21571 . -1) (undo-tree-id21572 . -1) (undo-tree-id21573 . -1) (undo-tree-id21574 . -1) (undo-tree-id21575 . -1) (undo-tree-id21576 . -1) (undo-tree-id21577 . -1) (undo-tree-id21578 . -1) (undo-tree-id21579 . -1) (undo-tree-id21580 . -1) (undo-tree-id21581 . -1) (undo-tree-id21582 . -1) (undo-tree-id21583 . -1) (undo-tree-id21584 . -1) (undo-tree-id21585 . -1) (undo-tree-id21586 . -1) (undo-tree-id21587 . -1) (undo-tree-id21588 . -1) (undo-tree-id21589 . -1) (undo-tree-id21590 . -1) (undo-tree-id21591 . -1) (undo-tree-id21592 . -1) (undo-tree-id21593 . -1) (undo-tree-id21594 . -1) (undo-tree-id21595 . -1) (undo-tree-id21596 . -1) (undo-tree-id21597 . -1) (undo-tree-id21598 . -1) (undo-tree-id21599 . -1) (undo-tree-id21600 . -1) (undo-tree-id21601 . -1) (undo-tree-id21602 . -1) (undo-tree-id21603 . -1) (undo-tree-id21604 . -1) (undo-tree-id21605 . -1) (undo-tree-id21606 . -1) (undo-tree-id21607 . -1) (undo-tree-id21608 . -1) (undo-tree-id21609 . -1) (undo-tree-id21610 . -1) (undo-tree-id21611 . -1) (undo-tree-id21612 . -1) (undo-tree-id21613 . -1) (undo-tree-id21614 . -1) (undo-tree-id21615 . -1) (undo-tree-id21616 . -1) (undo-tree-id21617 . -1) (undo-tree-id21618 . -1) (undo-tree-id21619 . -1) (undo-tree-id21620 . -1) (undo-tree-id21621 . -1) (undo-tree-id21622 . -1) (undo-tree-id21623 . -1) (undo-tree-id21624 . -1) (undo-tree-id21625 . -1) (undo-tree-id21626 . -1) (undo-tree-id21627 . -1) (undo-tree-id21628 . -1) (undo-tree-id21629 . -1) (undo-tree-id21630 . -1) (undo-tree-id21631 . -1) (undo-tree-id21632 . -1) (undo-tree-id21633 . -1) (undo-tree-id21634 . -1) (undo-tree-id21635 . -1) (undo-tree-id21636 . -1) (undo-tree-id21637 . -1) (undo-tree-id21638 . -1) (undo-tree-id21639 . -1) (undo-tree-id21640 . -1) (undo-tree-id21641 . -1) (undo-tree-id21642 . -1) (undo-tree-id21643 . -1) (undo-tree-id21644 . -1) (undo-tree-id21645 . -1) (undo-tree-id21646 . -1) (undo-tree-id21647 . -1) (undo-tree-id21648 . -1) (undo-tree-id21649 . -1) (undo-tree-id21650 . -1) (undo-tree-id21651 . -1) (undo-tree-id21652 . -1) (undo-tree-id21653 . -1) (undo-tree-id21654 . -1) (undo-tree-id21655 . -1) (undo-tree-id21656 . -1) (undo-tree-id21657 . -1) (undo-tree-id21658 . -1) (undo-tree-id21659 . -1) (undo-tree-id21660 . -1) (undo-tree-id21661 . -1) (undo-tree-id21662 . -1) (undo-tree-id21663 . -1) (undo-tree-id21664 . -1) (undo-tree-id21665 . -1) (undo-tree-id21666 . -1) (undo-tree-id21667 . -1) (undo-tree-id21668 . -1) (undo-tree-id21669 . -1) (undo-tree-id21670 . -1) (undo-tree-id21671 . -1) (#("0" 0 1 (fontified t)) . -893) (undo-tree-id21672 . -1) (undo-tree-id21673 . -1) (undo-tree-id21674 . -1) (undo-tree-id21675 . -1) (undo-tree-id21676 . -1) (undo-tree-id21677 . -1) (undo-tree-id21678 . -1) (undo-tree-id21679 . -1) (undo-tree-id21680 . -1) (undo-tree-id21681 . -1) (undo-tree-id21682 . -1) (undo-tree-id21683 . -1) (undo-tree-id21684 . -1) (undo-tree-id21685 . -1) (undo-tree-id21686 . -1) (undo-tree-id21687 . -1) (undo-tree-id21688 . -1) (undo-tree-id21689 . -1) (undo-tree-id21690 . -1) (undo-tree-id21691 . -1) (undo-tree-id21692 . -1) (undo-tree-id21693 . -1) (undo-tree-id21694 . -1) (undo-tree-id21695 . -1) (undo-tree-id21696 . -1) (undo-tree-id21697 . -1) (undo-tree-id21698 . -1) (undo-tree-id21699 . -1) (undo-tree-id21700 . -1) (undo-tree-id21701 . -1) (undo-tree-id21702 . -1) (undo-tree-id21703 . -1) (undo-tree-id21704 . -1) (undo-tree-id21705 . -1) (undo-tree-id21706 . -1) (undo-tree-id21707 . -1) (undo-tree-id21708 . -1) (undo-tree-id21709 . -1) (undo-tree-id21710 . -1) (undo-tree-id21711 . -1) (undo-tree-id21712 . -1) (undo-tree-id21713 . -1) (undo-tree-id21714 . -1) (undo-tree-id21715 . -1) (undo-tree-id21716 . -1) (undo-tree-id21717 . -1) (undo-tree-id21718 . -1) (undo-tree-id21719 . -1) (undo-tree-id21720 . -1) (undo-tree-id21721 . -1) (undo-tree-id21722 . -1) (undo-tree-id21723 . -1) (undo-tree-id21724 . -1) (undo-tree-id21725 . -1) (undo-tree-id21726 . -1) (undo-tree-id21727 . -1) (undo-tree-id21728 . -1) (undo-tree-id21729 . -1) (undo-tree-id21730 . -1) (undo-tree-id21731 . -1) (undo-tree-id21732 . -1) (undo-tree-id21733 . -1) (undo-tree-id21734 . -1) (undo-tree-id21735 . -1) (undo-tree-id21736 . -1) (undo-tree-id21737 . -1) (undo-tree-id21738 . -1) (undo-tree-id21739 . -1) (undo-tree-id21740 . -1) (undo-tree-id21741 . -1) (undo-tree-id21742 . -1) (undo-tree-id21743 . -1) (undo-tree-id21744 . -1) (undo-tree-id21745 . -1) (undo-tree-id21746 . -1) (undo-tree-id21747 . -1) (undo-tree-id21748 . -1) (undo-tree-id21749 . -1) (undo-tree-id21750 . -1) (undo-tree-id21751 . -1) (undo-tree-id21752 . -1) (undo-tree-id21753 . -1) (undo-tree-id21754 . -1) (undo-tree-id21755 . -1) (undo-tree-id21756 . -1) (undo-tree-id21757 . -1) (undo-tree-id21758 . -1) (undo-tree-id21759 . -1) (undo-tree-id21760 . -1) (undo-tree-id21761 . -1) (undo-tree-id21762 . -1) (undo-tree-id21763 . -1) (undo-tree-id21764 . -1) (undo-tree-id21765 . -1) (undo-tree-id21766 . -1) (undo-tree-id21767 . -1) (undo-tree-id21768 . -1) (undo-tree-id21769 . -1) (undo-tree-id21770 . -1) (#("2" 0 1 (fontified t)) . -894) (undo-tree-id21771 . -1) (undo-tree-id21772 . -1) (undo-tree-id21773 . -1) (undo-tree-id21774 . -1) (undo-tree-id21775 . -1) (undo-tree-id21776 . -1) (undo-tree-id21777 . -1) (undo-tree-id21778 . -1) (undo-tree-id21779 . -1) (undo-tree-id21780 . -1) (undo-tree-id21781 . -1) (undo-tree-id21782 . -1) (undo-tree-id21783 . -1) (undo-tree-id21784 . -1) (undo-tree-id21785 . -1) (undo-tree-id21786 . -1) (undo-tree-id21787 . -1) (undo-tree-id21788 . -1) (undo-tree-id21789 . -1) (undo-tree-id21790 . -1) (undo-tree-id21791 . -1) (undo-tree-id21792 . -1) (undo-tree-id21793 . -1) (undo-tree-id21794 . -1) (undo-tree-id21795 . -1) (undo-tree-id21796 . -1) (undo-tree-id21797 . -1) (undo-tree-id21798 . -1) (undo-tree-id21799 . -1) (undo-tree-id21800 . -1) (undo-tree-id21801 . -1) (undo-tree-id21802 . -1) (undo-tree-id21803 . -1) (undo-tree-id21804 . -1) (undo-tree-id21805 . -1) (undo-tree-id21806 . -1) (undo-tree-id21807 . -1) (undo-tree-id21808 . -1) (undo-tree-id21809 . -1) (undo-tree-id21810 . -1) (undo-tree-id21811 . -1) (undo-tree-id21812 . -1) (undo-tree-id21813 . -1) (undo-tree-id21814 . -1) (undo-tree-id21815 . -1) (undo-tree-id21816 . -1) (undo-tree-id21817 . -1) (undo-tree-id21818 . -1) (undo-tree-id21819 . -1) (undo-tree-id21820 . -1) (undo-tree-id21821 . -1) (undo-tree-id21822 . -1) (undo-tree-id21823 . -1) (undo-tree-id21824 . -1) (undo-tree-id21825 . -1) (undo-tree-id21826 . -1) (undo-tree-id21827 . -1) (undo-tree-id21828 . -1) (undo-tree-id21829 . -1) (undo-tree-id21830 . -1) (undo-tree-id21831 . -1) (undo-tree-id21832 . -1) (undo-tree-id21833 . -1) (undo-tree-id21834 . -1) (undo-tree-id21835 . -1) (undo-tree-id21836 . -1) (undo-tree-id21837 . -1) (undo-tree-id21838 . -1) (undo-tree-id21839 . -1) (undo-tree-id21840 . -1) (undo-tree-id21841 . -1) (undo-tree-id21842 . -1) (undo-tree-id21843 . -1) (undo-tree-id21844 . -1) (undo-tree-id21845 . -1) (undo-tree-id21846 . -1) (undo-tree-id21847 . -1) (undo-tree-id21848 . -1) (undo-tree-id21849 . -1) (undo-tree-id21850 . -1) (undo-tree-id21851 . -1) (undo-tree-id21852 . -1) (undo-tree-id21853 . -1) (undo-tree-id21854 . -1) (undo-tree-id21855 . -1) (undo-tree-id21856 . -1) (undo-tree-id21857 . -1) (undo-tree-id21858 . -1) (undo-tree-id21859 . -1) (undo-tree-id21860 . -1) (undo-tree-id21861 . -1) (undo-tree-id21862 . -1) (undo-tree-id21863 . -1) (undo-tree-id21864 . -1) (undo-tree-id21865 . -1) (undo-tree-id21866 . -1) (#("4" 0 1 (fontified t)) . -895) (undo-tree-id21867 . -1) (undo-tree-id21868 . -1) (undo-tree-id21869 . -1) (undo-tree-id21870 . -1) (undo-tree-id21871 . -1) (undo-tree-id21872 . -1) (undo-tree-id21873 . -1) (undo-tree-id21874 . -1) (undo-tree-id21875 . -1) (undo-tree-id21876 . -1) (undo-tree-id21877 . -1) (undo-tree-id21878 . -1) (undo-tree-id21879 . -1) (undo-tree-id21880 . -1) (undo-tree-id21881 . -1) (undo-tree-id21882 . -1) (undo-tree-id21883 . -1) (undo-tree-id21884 . -1) (undo-tree-id21885 . -1) (undo-tree-id21886 . -1) (undo-tree-id21887 . -1) (undo-tree-id21888 . -1) (undo-tree-id21889 . -1) (undo-tree-id21890 . -1) (undo-tree-id21891 . -1) (undo-tree-id21892 . -1) (undo-tree-id21893 . -1) (undo-tree-id21894 . -1) (undo-tree-id21895 . -1) (undo-tree-id21896 . -1) (undo-tree-id21897 . -1) (undo-tree-id21898 . -1) (undo-tree-id21899 . -1) (undo-tree-id21900 . -1) (undo-tree-id21901 . -1) (undo-tree-id21902 . -1) (undo-tree-id21903 . -1) (undo-tree-id21904 . -1) (undo-tree-id21905 . -1) (undo-tree-id21906 . -1) (undo-tree-id21907 . -1) (undo-tree-id21908 . -1) (undo-tree-id21909 . -1) (undo-tree-id21910 . -1) (undo-tree-id21911 . -1) (undo-tree-id21912 . -1) (undo-tree-id21913 . -1) (undo-tree-id21914 . -1) (undo-tree-id21915 . -1) (undo-tree-id21916 . -1) (undo-tree-id21917 . -1) (undo-tree-id21918 . -1) (undo-tree-id21919 . -1) 896 (t 25944 40160 526069 352000)) ((892 . 896)) (25944 40314 673376 0) 0 nil])
([nil nil ((1212 . 1216)) nil (25944 40381 603532 0) 0 nil])
([nil nil ((892 . 895)) ((#("512" 0 3 (fontified t)) . 892) (undo-tree-id21920 . -3) (undo-tree-id21921 . -3) (undo-tree-id21922 . -3) (undo-tree-id21923 . -3) (undo-tree-id21924 . -3) (undo-tree-id21925 . -3) (undo-tree-id21926 . -3) (undo-tree-id21927 . -3) (undo-tree-id21928 . -3) (undo-tree-id21929 . -3) (undo-tree-id21930 . -3) (undo-tree-id21931 . -3) (undo-tree-id21932 . -3) (undo-tree-id21933 . -3) (undo-tree-id21934 . -3) (undo-tree-id21935 . -3) (undo-tree-id21936 . -3) (undo-tree-id21937 . -3) (undo-tree-id21938 . -3) (undo-tree-id21939 . -3) (undo-tree-id21940 . -3) (undo-tree-id21941 . -3) (undo-tree-id21942 . -3) (undo-tree-id21943 . -3) (undo-tree-id21944 . -3) (undo-tree-id21945 . -3) (undo-tree-id21946 . -3) (undo-tree-id21947 . -3) (undo-tree-id21948 . -3) (undo-tree-id21949 . -3) (undo-tree-id21950 . -3) (undo-tree-id21951 . -3) (undo-tree-id21952 . -3) (undo-tree-id21953 . -3) (undo-tree-id21954 . -3) (undo-tree-id21955 . -3) (undo-tree-id21956 . -3) (undo-tree-id21957 . -3) (undo-tree-id21958 . -3) (undo-tree-id21959 . -3) (undo-tree-id21960 . -3) (t 25944 40281 851258 875000)) (25944 40281 804297 0) 0 nil])
([nil nil ((1216 . 1224)) nil (25944 40381 603531 0) 0 nil])
nil
([nil nil ((#(")" 0 1 (fontified t)) . -1223) (undo-tree-id21987 . -1) 1224) nil (25944 40381 603530 0) 0 nil])
([nil nil ((1223 . 1230)) nil (25944 40381 603528 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1228) (undo-tree-id21985 . -1) (#("e" 0 1 (fontified t)) . -1229) (undo-tree-id21986 . -1) 1230) nil (25944 40381 603527 0) 0 nil])
([nil nil ((1228 . 1237)) nil (25944 40381 603523 0) 0 nil])
([nil nil ((1237 . 1239)) nil (25944 40381 603522 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1247 1270 nil nil nil t #s(yas--exit 1271 nil))) #s(yas--exit 1271 nil) 90 nil #s(yas--field 1 1247 1270 nil nil nil t #s(yas--exit 1271 nil)) nil nil)) (1235 . 1249) (#("create_memo(${1:f})$0" 0 21 (fontified nil)) . 1235) (1235 . 1256) (#("crea" 0 4 (fontified nil)) . 1235) (1235 . 1239) (#("create_memo(…)" 0 14 (fontified nil)) . -1235) (1235 . 1249) (#("crea" 0 4 (fontified t)) . -1235) (undo-tree-id21984 . -4) 1239) nil (25944 40381 603520 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1247) (undo-tree-id21981 . -1) (undo-tree-id21982 . -1) (undo-tree-id21983 . -1) 1248) nil (25944 40381 603516 0) 0 nil])
([nil nil ((1247 . 1251)) nil (25944 40381 603511 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-keyword-face fontified t)) . -1249) (undo-tree-id21975 . -1) (undo-tree-id21976 . -1) (undo-tree-id21977 . -1) (#("e" 0 1 (fontified t)) . -1250) (undo-tree-id21978 . -1) (undo-tree-id21979 . -1) (undo-tree-id21980 . -1) 1251) nil (25944 40381 603510 0) 0 nil])
([nil nil ((1249 . 1256)) nil (25944 40381 603502 0) 0 nil])
([nil nil ((1255 . 1264) (#("e" 0 1 (fontified nil)) . 1255) (undo-tree-id21968 . -1) (1255 . 1256) (#("event_vec" 0 9 (fontified nil)) . -1255) (undo-tree-id21969 . -9) (1255 . 1264) (#("e" 0 1 (fontified t)) . -1255) (undo-tree-id21970 . -1) (undo-tree-id21971 . -1) (undo-tree-id21972 . -1) (undo-tree-id21973 . -1) (undo-tree-id21974 . -1) 1256) nil (25944 40381 603501 0) 0 nil])
([nil nil ((1264 . 1266)) nil (25944 40381 603491 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1265 1270 #s(yas--snippet nil nil #s(yas--exit 1270 nil) 91 nil nil #s(yas--field 1 1247 1270 nil nil nil t #s(yas--exit 1271 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1270 nil) 91 nil nil #s(yas--field 1 1247 1270 nil nil nil t #s(yas--exit 1271 nil)) nil)) (1265 . 1270) (#("get()$0" 0 7 (fontified nil)) . 1265) (undo-tree-id21961 . -7) (1265 . 1272) (#("g" 0 1 (fontified nil)) . 1265) (undo-tree-id21962 . -1) (1265 . 1266) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -1265) (undo-tree-id21963 . -20) (1265 . 1285) (#("g" 0 1 (fontified t)) . -1265) (undo-tree-id21964 . -1) (undo-tree-id21965 . -1) (undo-tree-id21966 . -1) (undo-tree-id21967 . -1) 1266) nil (25944 40381 603488 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1235 1271 #s(yas--snippet nil (#s(yas--field 1 1247 1270 nil nil nil t #s(yas--exit 1271 nil))) #s(yas--exit 1271 nil) 90 nil #s(yas--field 1 1247 1270 nil nil nil t #s(yas--exit 1271 nil)) nil nil))) nil (25944 40381 603472 0) 0 nil])
([nil nil ((1271 . 1272)) nil (25944 40381 603468 0) 0 nil])
([nil nil ((1253 . 1254) (t 25944 40381 650493 916000)) nil (25944 40423 619411 0) 0 nil])
([nil nil ((1461 . 1462) (t 25944 40423 666773 336000)) nil (25944 40608 382511 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1461) (undo-tree-id21995 . -1) 1462) nil (25944 40608 382510 0) 0 nil])
([nil nil ((1461 . 1464)) nil (25944 40608 382507 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1463) (undo-tree-id21992 . -1) (undo-tree-id21993 . -1) (undo-tree-id21994 . -1) 1464) nil (25944 40608 382505 0) 0 nil])
([nil nil ((1463 . 1466)) nil (25944 40608 382491 0) 0 nil])
([nil nil ((#("memo" 0 4 (fontified t)) . -1462) (undo-tree-id22056 . -4) (undo-tree-id22057 . -4) (undo-tree-id22058 . -1) (undo-tree-id22059 . -1) (undo-tree-id22060 . -4) (undo-tree-id22061 . -4) (undo-tree-id22062 . -4) (undo-tree-id22063 . -4) (undo-tree-id22064 . -4) (undo-tree-id22065 . -4) (undo-tree-id22066 . -4) (undo-tree-id22067 . -4) (undo-tree-id22068 . -4) (undo-tree-id22069 . -4) (undo-tree-id22070 . -4) (undo-tree-id22071 . -4) (undo-tree-id22072 . -4) (undo-tree-id22073 . -4) (undo-tree-id22074 . -4) (undo-tree-id22075 . -4) (undo-tree-id22076 . -4) (undo-tree-id22077 . -4) (undo-tree-id22078 . -4) (undo-tree-id22079 . -4) 1466 (t 25944 40608 429342 57000)) nil (25944 40616 854645 0) 0 nil])
([nil nil ((#("vec_" 0 4 (fontified t)) . -1458) (undo-tree-id22031 . -4) (undo-tree-id22032 . -4) (undo-tree-id22033 . -4) (undo-tree-id22034 . -4) (undo-tree-id22035 . -4) (undo-tree-id22036 . -4) (undo-tree-id22037 . -4) (undo-tree-id22038 . -4) (undo-tree-id22039 . -4) (undo-tree-id22040 . -4) (undo-tree-id22041 . -4) (undo-tree-id22042 . -4) (undo-tree-id22043 . -4) (undo-tree-id22044 . -4) (undo-tree-id22045 . -4) (undo-tree-id22046 . -4) (undo-tree-id22047 . -4) (undo-tree-id22048 . -4) (undo-tree-id22049 . -4) (undo-tree-id22050 . -4) (undo-tree-id22051 . -4) (undo-tree-id22052 . -4) (undo-tree-id22053 . -4) (undo-tree-id22054 . -4) (undo-tree-id22055 . -4) 1462) nil (25944 40616 854621 0) 0 nil])
([nil nil ((#("event_" 0 6 (fontified t)) . -1452) (undo-tree-id22005 . -6) (undo-tree-id22006 . -6) (undo-tree-id22007 . -6) (undo-tree-id22008 . -6) (undo-tree-id22009 . -6) (undo-tree-id22010 . -6) (undo-tree-id22011 . -6) (undo-tree-id22012 . -6) (undo-tree-id22013 . -6) (undo-tree-id22014 . -6) (undo-tree-id22015 . -6) (undo-tree-id22016 . -6) (undo-tree-id22017 . -6) (undo-tree-id22018 . -6) (undo-tree-id22019 . -6) (undo-tree-id22020 . -6) (undo-tree-id22021 . -6) (undo-tree-id22022 . -6) (undo-tree-id22023 . -6) (undo-tree-id22024 . -6) (undo-tree-id22025 . -6) (undo-tree-id22026 . -6) (undo-tree-id22027 . -6) (undo-tree-id22028 . -6) (undo-tree-id22029 . -6) (undo-tree-id22030 . -6) 1458) nil (25944 40616 854593 0) 0 nil])
([nil nil ((1452 . 1454)) nil (25944 40616 854566 0) 0 nil])
([nil nil ((1452 . 1464) (#("ad" 0 2 (fontified nil)) . 1452) (1452 . 1454) (#("adc_vec_memo" 0 12 (fontified nil)) . -1452) (1452 . 1464) (#("ad" 0 2 (fontified t)) . -1452) (undo-tree-id21996 . -2) (undo-tree-id21997 . -2) (undo-tree-id21998 . -1) (undo-tree-id21999 . -2) (undo-tree-id22000 . -2) (undo-tree-id22001 . -2) (undo-tree-id22002 . -2) (undo-tree-id22003 . -2) (undo-tree-id22004 . -2) 1454) nil (25944 40616 854562 0) 0 nil])
([nil nil ((apply -15 864 975 undo--wrap-and-run-primitive-undo 864 975 ((970 . 973) (959 . 962) (937 . 940) (903 . 906) (865 . 868) 864))) nil (25944 40768 985258 0) 0 nil])
([nil nil ((1431 . 1432) (t 25944 40769 33669 395000)) nil (25944 40978 76610 0) 0 nil])
([nil nil ((1431 . 1432)) nil (25944 40978 76608 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1432) (undo-tree-id22140 . -1) (undo-tree-id22141 . -1) (undo-tree-id22142 . -1) (undo-tree-id22143 . -1) (undo-tree-id22144 . -1) (undo-tree-id22145 . 1) (undo-tree-id22146 . -1) (undo-tree-id22147 . -1) (undo-tree-id22148 . -1) (undo-tree-id22149 . -1) (undo-tree-id22150 . -1) (undo-tree-id22151 . -1) (undo-tree-id22152 . -1) (undo-tree-id22153 . -1) (undo-tree-id22154 . -1) (undo-tree-id22155 . -1) (undo-tree-id22156 . -1) (undo-tree-id22157 . -1) (undo-tree-id22158 . -1) (undo-tree-id22159 . -1) 1433) nil (25944 40978 76606 0) 0 nil])
([nil nil ((1432 . 1433)) nil (25944 40978 76585 0) 0 nil])
([nil nil ((1425 . 1445) (#("createrr_effect" 0 8 (fontified nil) 8 15 (fontified nil)) . 1425) (undo-tree-id22080 . -12) (undo-tree-id22081 . -9) (undo-tree-id22082 . -9) (undo-tree-id22083 . -9) (undo-tree-id22084 . -9) (undo-tree-id22085 . -9) (undo-tree-id22086 . 7) (1425 . 1433) (#("create_render_effect" 0 20 (fontified nil)) . -1425) (1425 . 1445) (#("createrr" 0 8 (fontified t)) . -1425) (undo-tree-id22087 . -7) (undo-tree-id22088 . -8) (undo-tree-id22089 . -6) (undo-tree-id22090 . -6) (undo-tree-id22091 . -6) (undo-tree-id22092 . -6) (undo-tree-id22093 . -6) (undo-tree-id22094 . -6) (undo-tree-id22095 . -6) (undo-tree-id22096 . -6) (undo-tree-id22097 . -6) (undo-tree-id22098 . -6) (undo-tree-id22099 . -7) (undo-tree-id22100 . -7) (undo-tree-id22101 . -7) (undo-tree-id22102 . -6) (undo-tree-id22103 . -6) (undo-tree-id22104 . -6) (undo-tree-id22105 . -6) (undo-tree-id22106 . -6) (undo-tree-id22107 . -6) (undo-tree-id22108 . -6) (undo-tree-id22109 . -6) (undo-tree-id22110 . -6) (undo-tree-id22111 . -6) (undo-tree-id22112 . -6) (undo-tree-id22113 . -7) (undo-tree-id22114 . -7) (undo-tree-id22115 . -7) (undo-tree-id22116 . -7) (undo-tree-id22117 . -7) (undo-tree-id22118 . -7) (undo-tree-id22119 . -7) (undo-tree-id22120 . -7) (undo-tree-id22121 . -7) (undo-tree-id22122 . -7) (undo-tree-id22123 . -7) (undo-tree-id22124 . -7) (undo-tree-id22125 . -7) (undo-tree-id22126 . -7) (undo-tree-id22127 . -7) (undo-tree-id22128 . -7) (undo-tree-id22129 . -7) (undo-tree-id22130 . -7) (undo-tree-id22131 . -7) (undo-tree-id22132 . -7) (undo-tree-id22133 . -7) (undo-tree-id22134 . -7) (undo-tree-id22135 . -8) (undo-tree-id22136 . -8) (undo-tree-id22137 . -8) (undo-tree-id22138 . -8) (undo-tree-id22139 . -8) 1433) nil (25944 40978 76578 0) 0 nil])
([nil nil ((apply 15 864 959 undo--wrap-and-run-primitive-undo 864 959 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -958) (#<marker at 925 in component.rs> . -3) (#<marker at 925 in component.rs> . -2) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -950) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -931) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -900) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -865) 864))) nil (25944 40984 67898 0) 0 nil])
([nil nil ((#("render" 0 6 (fontified t)) . -1417) (undo-tree-id22177 . -6) (undo-tree-id22178 . -6) (undo-tree-id22179 . -6) (undo-tree-id22180 . -6) (undo-tree-id22181 . -6) (undo-tree-id22182 . -6) (undo-tree-id22183 . -6) (undo-tree-id22184 . -6) (undo-tree-id22185 . -6) (undo-tree-id22186 . -6) (undo-tree-id22187 . -6) (undo-tree-id22188 . -6) (undo-tree-id22189 . -6) (undo-tree-id22190 . -6) 1423 (t 25944 40984 115349 352000)) nil (25944 41026 472131 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -1416) (undo-tree-id22160 . -1) (undo-tree-id22161 . -1) (undo-tree-id22162 . -1) (undo-tree-id22163 . -1) (undo-tree-id22164 . -1) (undo-tree-id22165 . -1) (undo-tree-id22166 . -1) (undo-tree-id22167 . -1) (undo-tree-id22168 . -1) (undo-tree-id22169 . -1) (undo-tree-id22170 . -1) (undo-tree-id22171 . -1) (undo-tree-id22172 . -1) (undo-tree-id22173 . -1) (undo-tree-id22174 . -1) (undo-tree-id22175 . -1) (undo-tree-id22176 . -1) 1417) nil (25944 41026 472113 0) 0 nil])
([nil nil ((#("	logging::log!(\"{:?} {:?}\", rect.width(), rect.width());" 0 1 (fontified t) 1 8 (face font-lock-constant-face fontified t) 8 10 (fontified t) 10 14 (face font-lock-preprocessor-face fontified t) 14 15 (fontified t) 15 24 (face font-lock-string-face fontified t) 24 26 (face font-lock-string-face fontified t) 26 27 (fontified t) 27 33 (fontified t) 33 38 (fontified t) 38 42 (fontified t) 42 47 (fontified t) 47 54 (fontified t) 54 56 (fontified t)) . 2300) (undo-tree-id22192 . -56) (undo-tree-id22193 . -56) (undo-tree-id22194 . -56) (undo-tree-id22195 . -56) (undo-tree-id22196 . -56) (undo-tree-id22197 . -56) (undo-tree-id22198 . -56) (undo-tree-id22199 . -56) (undo-tree-id22200 . -56) (t 25944 41026 519700 758000)) nil (25944 41037 568137 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2300) (undo-tree-id22191 . -1)) nil (25944 41037 568124 0) 0 nil])
([nil nil ((#("	let rect = canvas.get_bounding_client_rect();" 0 1 (fontified t) 1 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 9 (face font-lock-variable-name-face fontified t) 9 12 (fontified t) 12 19 (fontified t) 19 46 (fontified t)) . 1513) (undo-tree-id22206 . -46) (undo-tree-id22207 . -46) (undo-tree-id22208 . -46) (undo-tree-id22209 . -46) (undo-tree-id22210 . -46) (undo-tree-id22211 . -46) (undo-tree-id22212 . -46) (undo-tree-id22213 . -46) (undo-tree-id22214 . -46) (undo-tree-id22215 . -46) (undo-tree-id22216 . -46) (undo-tree-id22217 . -46) (undo-tree-id22218 . -46) (undo-tree-id22219 . -46) (undo-tree-id22220 . -46) (undo-tree-id22221 . -46) (t 25944 41037 615381 258000)) nil (25944 41048 378123 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1513) (undo-tree-id22205 . -1)) nil (25944 41048 378105 0) 0 nil])
([nil nil ((#("	// canvas.set_height(rect.height() as u32);" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 10 (face font-lock-comment-face fontified t) 10 36 (face font-lock-comment-face fontified t) 36 38 (face font-lock-comment-face fontified t) 38 39 (face font-lock-comment-face fontified t) 39 42 (face font-lock-comment-face fontified t) 42 44 (face font-lock-comment-face fontified t)) . 1513) (undo-tree-id22204 . -44)) nil (25944 41048 378103 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1513) (undo-tree-id22203 . -1)) nil (25944 41048 378100 0) 0 nil])
([nil nil ((#("	// canvas.set_width(rect.width() as u32);" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 10 (face font-lock-comment-face fontified t) 10 34 (face font-lock-comment-face fontified t) 34 36 (face font-lock-comment-face fontified t) 36 37 (face font-lock-comment-face fontified t) 37 40 (face font-lock-comment-face fontified t) 40 41 (face font-lock-comment-face fontified t) 41 42 (face font-lock-comment-face fontified t rear-nonsticky t)) . 1513) (undo-tree-id22202 . -42)) nil (25944 41048 378097 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1513) (undo-tree-id22201 . -1)) nil (25944 41048 378093 0) 0 nil])
([nil nil ((1405 . 1410) (t 25944 41048 426058 351000)) nil (25944 41077 106338 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1405) (undo-tree-id22222 . 1) (undo-tree-id22223 . -1) (undo-tree-id22224 . -1) (undo-tree-id22225 . -1) (undo-tree-id22226 . -1) (undo-tree-id22227 . -1) (undo-tree-id22228 . -1) (undo-tree-id22229 . -1) (undo-tree-id22230 . -1) (undo-tree-id22231 . -1) (undo-tree-id22232 . -1) (undo-tree-id22233 . -1) (undo-tree-id22234 . -1) (undo-tree-id22235 . -1) (undo-tree-id22236 . -1) (undo-tree-id22237 . -1) (undo-tree-id22238 . -1) (undo-tree-id22239 . -1) (undo-tree-id22240 . -1) (undo-tree-id22241 . -1) (undo-tree-id22242 . -1) (undo-tree-id22243 . -1) (undo-tree-id22244 . -1) (undo-tree-id22245 . -1) (undo-tree-id22246 . -1) (undo-tree-id22247 . -1) (undo-tree-id22248 . -1) (undo-tree-id22249 . -1) (undo-tree-id22250 . -1) (undo-tree-id22251 . -1) (#(" " 0 1 (fontified t)) . -1406) (undo-tree-id22252 . -1) (undo-tree-id22253 . -1) (undo-tree-id22254 . -1) (undo-tree-id22255 . -1) (undo-tree-id22256 . -1) (undo-tree-id22257 . -1) (undo-tree-id22258 . -1) (undo-tree-id22259 . -1) (undo-tree-id22260 . -1) (undo-tree-id22261 . -1) (undo-tree-id22262 . -1) (undo-tree-id22263 . -1) (undo-tree-id22264 . -1) (undo-tree-id22265 . -1) (undo-tree-id22266 . -1) (undo-tree-id22267 . -1) (undo-tree-id22268 . -1) (undo-tree-id22269 . -1) (undo-tree-id22270 . -1) (undo-tree-id22271 . -1) (undo-tree-id22272 . -1) (undo-tree-id22273 . -1) (undo-tree-id22274 . -1) (undo-tree-id22275 . -1) (undo-tree-id22276 . -1) (undo-tree-id22277 . -1) (undo-tree-id22278 . -1) (#(" " 0 1 (fontified t)) . -1407) (undo-tree-id22279 . -1) (undo-tree-id22280 . -1) (undo-tree-id22281 . -1) (undo-tree-id22282 . -1) (undo-tree-id22283 . -1) (undo-tree-id22284 . -1) (undo-tree-id22285 . -1) (undo-tree-id22286 . -1) (undo-tree-id22287 . -1) (undo-tree-id22288 . -1) (undo-tree-id22289 . -1) (undo-tree-id22290 . -1) (undo-tree-id22291 . -1) (undo-tree-id22292 . -1) (undo-tree-id22293 . -1) (undo-tree-id22294 . -1) (undo-tree-id22295 . -1) (undo-tree-id22296 . -1) (undo-tree-id22297 . -1) (undo-tree-id22298 . -1) (undo-tree-id22299 . -1) (undo-tree-id22300 . -1) (undo-tree-id22301 . -1) (undo-tree-id22302 . -1) (undo-tree-id22303 . -1) (undo-tree-id22304 . -1) (#(" " 0 1 (fontified t)) . -1408) (undo-tree-id22305 . -1) (undo-tree-id22306 . -1) (undo-tree-id22307 . -1) (undo-tree-id22308 . -1) (undo-tree-id22309 . -1) (undo-tree-id22310 . -1) (undo-tree-id22311 . -1) (undo-tree-id22312 . -1) (undo-tree-id22313 . -1) (undo-tree-id22314 . -1) (undo-tree-id22315 . -1) (undo-tree-id22316 . -1) (undo-tree-id22317 . -1) (undo-tree-id22318 . -1) (undo-tree-id22319 . -1) (undo-tree-id22320 . -1) (undo-tree-id22321 . -1) (undo-tree-id22322 . -1) (undo-tree-id22323 . -1) (undo-tree-id22324 . -1) (undo-tree-id22325 . -1) (undo-tree-id22326 . -1) (undo-tree-id22327 . -1) (undo-tree-id22328 . -1) (undo-tree-id22329 . -1) (#(" " 0 1 (fontified t)) . -1409) (undo-tree-id22330 . -1) (undo-tree-id22331 . -1) (undo-tree-id22332 . -1) (undo-tree-id22333 . -1) (undo-tree-id22334 . -1) (undo-tree-id22335 . -1) (undo-tree-id22336 . -1) (undo-tree-id22337 . -1) (undo-tree-id22338 . -1) (undo-tree-id22339 . -1) (undo-tree-id22340 . -1) (undo-tree-id22341 . -1) (undo-tree-id22342 . -1) (undo-tree-id22343 . -1) (undo-tree-id22344 . -1) (undo-tree-id22345 . -1) (undo-tree-id22346 . -1) (undo-tree-id22347 . -1) (undo-tree-id22348 . -1) (undo-tree-id22349 . -1) (undo-tree-id22350 . -1) (undo-tree-id22351 . -1) (undo-tree-id22352 . -1) (undo-tree-id22353 . -1) 1410) nil (25944 41077 106328 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -890) (undo-tree-id22354 . -1) (undo-tree-id22355 . -1) (undo-tree-id22356 . -1) (undo-tree-id22357 . -1) (undo-tree-id22358 . -1) (undo-tree-id22359 . -1) (undo-tree-id22360 . -1) (undo-tree-id22361 . -1) (undo-tree-id22362 . -1) (undo-tree-id22363 . -1) (undo-tree-id22364 . -1) (undo-tree-id22365 . -1) (undo-tree-id22366 . -1) (undo-tree-id22367 . -1) (undo-tree-id22368 . -1) (undo-tree-id22369 . -1) (undo-tree-id22370 . -1) (undo-tree-id22371 . -1) (undo-tree-id22372 . -1) (undo-tree-id22373 . -1) 891 (t 25944 41077 153690 730000)) nil (25944 41113 21713 0) 0 nil])
([nil nil ((#("emove(0);" 0 9 (fontified t)) . 938) (undo-tree-id22465 . -9) (undo-tree-id22466 . -9) (undo-tree-id22467 . -9) (undo-tree-id22468 . -9) (undo-tree-id22469 . -9) (undo-tree-id22470 . -9) (undo-tree-id22471 . -9) (undo-tree-id22472 . -9) (undo-tree-id22473 . -7) (undo-tree-id22474 . -6) (undo-tree-id22475 . -4) (undo-tree-id22476 . -3) (undo-tree-id22477 . -2) (undo-tree-id22478 . -1) (undo-tree-id22479 . -9) (t 25944 41113 70792 838000)) nil (25944 41135 557031 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -936) (undo-tree-id22394 . -1) (undo-tree-id22395 . -1) (undo-tree-id22396 . -1) (undo-tree-id22397 . -1) (undo-tree-id22398 . -1) (undo-tree-id22399 . -1) (undo-tree-id22400 . -1) (undo-tree-id22401 . -1) (undo-tree-id22402 . -1) (undo-tree-id22403 . -1) (undo-tree-id22404 . -1) (undo-tree-id22405 . -1) (undo-tree-id22406 . -1) (undo-tree-id22407 . -1) (undo-tree-id22408 . -1) (undo-tree-id22409 . -1) (undo-tree-id22410 . -1) (undo-tree-id22411 . -1) (undo-tree-id22412 . -1) (undo-tree-id22413 . -1) (undo-tree-id22414 . -1) (undo-tree-id22415 . -1) (undo-tree-id22416 . -1) (undo-tree-id22417 . -1) (undo-tree-id22418 . -1) (undo-tree-id22419 . -1) (undo-tree-id22420 . -1) (undo-tree-id22421 . -1) (undo-tree-id22422 . -1) (undo-tree-id22423 . -1) (undo-tree-id22424 . -1) (undo-tree-id22425 . -1) (undo-tree-id22426 . -1) (undo-tree-id22427 . -1) (undo-tree-id22428 . -1) (undo-tree-id22429 . -1) (undo-tree-id22430 . -1) (undo-tree-id22431 . -1) (undo-tree-id22432 . -1) (undo-tree-id22433 . -1) (#("r" 0 1 (fontified t)) . -937) (undo-tree-id22434 . -1) (undo-tree-id22435 . -1) (undo-tree-id22436 . -1) (undo-tree-id22437 . -1) (undo-tree-id22438 . -1) (undo-tree-id22439 . -1) (undo-tree-id22440 . -1) (undo-tree-id22441 . -1) (undo-tree-id22442 . -1) (undo-tree-id22443 . -1) (undo-tree-id22444 . -1) (undo-tree-id22445 . -1) (undo-tree-id22446 . -1) (undo-tree-id22447 . -1) (undo-tree-id22448 . -1) (undo-tree-id22449 . -1) (undo-tree-id22450 . -1) (undo-tree-id22451 . -1) (undo-tree-id22452 . -1) (undo-tree-id22453 . -1) (undo-tree-id22454 . -1) (undo-tree-id22455 . -1) (undo-tree-id22456 . -1) (undo-tree-id22457 . -1) (undo-tree-id22458 . -1) (undo-tree-id22459 . -1) (undo-tree-id22460 . -1) (undo-tree-id22461 . -1) (undo-tree-id22462 . -1) (undo-tree-id22463 . -1) (undo-tree-id22464 . -1) 938) nil (25944 41135 557012 0) 0 nil])
([nil nil ((936 . 938)) nil (25944 41135 556939 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -937) (undo-tree-id22387 . -1) (undo-tree-id22388 . -1) (undo-tree-id22389 . -1) (undo-tree-id22390 . -1) (undo-tree-id22391 . -1) (undo-tree-id22392 . -1) (undo-tree-id22393 . -1) 938) nil (25944 41135 556938 0) 0 nil])
([nil nil ((937 . 939)) nil (25944 41135 556929 0) 0 nil])
([nil nil ((apply yas--snippet-revive 937 944 #s(yas--snippet nil nil #s(yas--exit 944 nil) 92 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 944 nil) 92 nil nil nil nil)) (937 . 944) (#("clear()$0" 0 9 (fontified nil)) . 937) (937 . 946) (#("cl" 0 2 (fontified nil)) . 937) (937 . 939) (#("clear()" 0 7 (fontified nil)) . -937) (937 . 944) (#("cl" 0 2 (fontified t)) . -937) (undo-tree-id22374 . -2) (undo-tree-id22375 . -1) (undo-tree-id22376 . -1) (undo-tree-id22377 . -1) (undo-tree-id22378 . -1) (undo-tree-id22379 . -1) (undo-tree-id22380 . -1) (undo-tree-id22381 . -2) (undo-tree-id22382 . -2) (undo-tree-id22383 . -2) (undo-tree-id22384 . -2) (undo-tree-id22385 . -2) (undo-tree-id22386 . -2) 939) nil (25944 41135 556926 0) 0 nil])
([nil nil ((944 . 945)) nil (25944 41135 556886 0) 0 nil])
([nil nil ((1668 . 1669) (#("	" 0 1 (fontified nil)) . 1667) (1667 . 1668) (1667 . 1668) (t 25944 41135 604981 75000)) nil (25944 42508 504664 0) 0 nil])
([nil nil ((1667 . 1668)) nil (25944 42508 504662 0) 0 nil])
([nil nil ((1668 . 1670)) nil (25944 42508 504661 0) 0 nil])
([nil nil ((1668 . 1680) (#("dr" 0 2 (fontified nil)) . 1668) (1668 . 1670) (#("drawing_area" 0 12 (fontified nil)) . -1668) (1668 . 1680) (#("dr" 0 2 (fontified t)) . -1668) (undo-tree-id22533 . -2) 1670) nil (25944 42508 504659 0) 0 nil])
([nil nil ((1680 . 1682)) nil (25944 42508 504656 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1686 1691 nil nil nil nil #s(yas--exit 1692 nil))) #s(yas--exit 1692 nil) 93 nil #s(yas--field 1 1686 1691 nil nil nil nil #s(yas--exit 1692 nil)) nil nil)) (1681 . 1692) (#("fill(${1:color})$0" 0 18 (fontified nil)) . 1681) (1681 . 1699) (#("f" 0 1 (fontified nil)) . 1681) (1681 . 1682) (#("fill(…)" 0 7 (fontified nil)) . -1681) (1681 . 1688) (#("f" 0 1 (fontified t)) . -1681) (undo-tree-id22532 . -1) 1682) nil (25944 42508 504654 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1681 1692 #s(yas--snippet nil (#s(yas--field 1 1686 1691 nil nil nil nil #s(yas--exit 1692 nil))) #s(yas--exit 1692 nil) 93 nil #s(yas--field 1 1686 1691 nil nil nil nil #s(yas--exit 1692 nil)) nil nil))) nil (25944 42508 504649 0) 0 nil])
([nil nil ((#("color)" 0 6 (fontified t)) . -1686) (undo-tree-id22531 . -6) 1692) nil (25944 42508 504648 0) 0 nil])
([nil nil ((#("fill(" 0 5 (fontified t)) . -1681) (undo-tree-id22525 . -2) (undo-tree-id22526 . -2) (undo-tree-id22527 . -5) (undo-tree-id22528 . -2) (undo-tree-id22529 . -2) (undo-tree-id22530 . -5) 1686) nil (25944 42508 504645 0) 0 nil])
([nil nil ((1681 . 1684)) nil (25944 42508 504638 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1681) (undo-tree-id22521 . -1) (undo-tree-id22522 . -1) (#("l" 0 1 (fontified t)) . -1682) (undo-tree-id22523 . -1) (#("e" 0 1 (fontified t)) . -1683) (undo-tree-id22524 . -1) 1684) nil (25944 42508 504637 0) 0 nil])
([nil nil ((1681 . 1683)) nil (25944 42508 504631 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1686 1691 nil nil nil nil #s(yas--exit 1692 nil))) #s(yas--exit 1692 nil) 94 nil #s(yas--field 1 1686 1691 nil nil nil nil #s(yas--exit 1692 nil)) nil nil)) (1681 . 1692) (#("fill(${1:color})$0" 0 18 (fontified nil)) . 1681) (1681 . 1699) (#("fi" 0 2 (fontified nil)) . 1681) (1681 . 1683) (#("fill(…)" 0 7 (fontified nil)) . -1681) (1681 . 1688) (#("fi" 0 2 (fontified t)) . -1681) (undo-tree-id22514 . -2) (undo-tree-id22515 . -1) (undo-tree-id22516 . -1) (undo-tree-id22517 . -2) (undo-tree-id22518 . -2) (undo-tree-id22519 . -2) (undo-tree-id22520 . -2) 1683) nil (25944 42508 504628 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1681 1692 #s(yas--snippet nil (#s(yas--field 1 1686 1691 nil nil nil nil #s(yas--exit 1692 nil))) #s(yas--exit 1692 nil) 94 nil #s(yas--field 1 1686 1691 nil nil nil nil #s(yas--exit 1692 nil)) nil nil))) nil (25944 42508 504618 0) 0 nil])
([nil nil ((#("color" 0 5 (fontified t)) . -1686) (undo-tree-id22480 . -5) (undo-tree-id22481 . -5) (undo-tree-id22482 . -3) (undo-tree-id22483 . -3) (undo-tree-id22484 . -3) (undo-tree-id22485 . -3) (undo-tree-id22486 . -3) (undo-tree-id22487 . -3) (undo-tree-id22488 . -3) (undo-tree-id22489 . -3) (undo-tree-id22490 . -3) (undo-tree-id22491 . -5) (undo-tree-id22492 . -5) (undo-tree-id22493 . -5) (undo-tree-id22494 . -5) (undo-tree-id22495 . -3) (undo-tree-id22496 . -3) (undo-tree-id22497 . -3) (undo-tree-id22498 . -3) (undo-tree-id22499 . -3) (undo-tree-id22500 . -3) (undo-tree-id22501 . -3) (undo-tree-id22502 . -3) (undo-tree-id22503 . -3) (undo-tree-id22504 . -3) (undo-tree-id22505 . -3) (undo-tree-id22506 . -5) (undo-tree-id22507 . -5) (undo-tree-id22508 . -5) (undo-tree-id22509 . -5) (undo-tree-id22510 . -5) (undo-tree-id22511 . -5) (undo-tree-id22512 . -5) (undo-tree-id22513 . -5) 1691) nil (25944 42508 504615 0) 0 nil])
([nil nil ((1686 . 1688)) nil (25944 42508 504568 0) 0 nil])
([nil nil ((1687 . 1694)) nil (25944 42508 504567 0) 0 nil])
([nil nil ((1696 . 1697)) nil (25944 42508 504563 0) 0 nil])
([nil nil ((1686 . 1687) (t 25944 42508 554800 299000)) nil (25944 42520 792427 0) 0 nil])
([nil nil ((#("0)" 0 2 (fontified t)) . -1694) (undo-tree-id22930 . -2) (undo-tree-id22931 . -2) (undo-tree-id22932 . 1) (undo-tree-id22933 . -1) (undo-tree-id22934 . -1) (undo-tree-id22935 . -1) (undo-tree-id22936 . -1) (undo-tree-id22937 . -1) (undo-tree-id22938 . -1) (undo-tree-id22939 . -1) (undo-tree-id22940 . -1) (undo-tree-id22941 . -1) (undo-tree-id22942 . -1) (undo-tree-id22943 . -1) (undo-tree-id22944 . -1) (undo-tree-id22945 . -1) (undo-tree-id22946 . -1) (undo-tree-id22947 . -1) (undo-tree-id22948 . -1) (undo-tree-id22949 . -1) (undo-tree-id22950 . -1) (undo-tree-id22951 . -1) (undo-tree-id22952 . -1) (undo-tree-id22953 . -1) (undo-tree-id22954 . -1) (undo-tree-id22955 . -1) (undo-tree-id22956 . -1) (undo-tree-id22957 . -1) (undo-tree-id22958 . -1) (undo-tree-id22959 . -1) (undo-tree-id22960 . -1) (undo-tree-id22961 . -1) (undo-tree-id22962 . -1) (undo-tree-id22963 . -1) (undo-tree-id22964 . -1) (undo-tree-id22965 . -1) (undo-tree-id22966 . -1) (undo-tree-id22967 . -1) (undo-tree-id22968 . -1) (undo-tree-id22969 . -1) (undo-tree-id22970 . -1) (undo-tree-id22971 . -1) (undo-tree-id22972 . -1) (undo-tree-id22973 . -1) (undo-tree-id22974 . -1) (undo-tree-id22975 . -1) (undo-tree-id22976 . -1) (undo-tree-id22977 . -1) (undo-tree-id22978 . -1) (undo-tree-id22979 . -1) (undo-tree-id22980 . -1) (undo-tree-id22981 . -1) (undo-tree-id22982 . -1) (undo-tree-id22983 . -1) (undo-tree-id22984 . -1) (undo-tree-id22985 . -1) (undo-tree-id22986 . -1) (undo-tree-id22987 . -1) (undo-tree-id22988 . -1) (undo-tree-id22989 . -1) (undo-tree-id22990 . -1) (undo-tree-id22991 . -1) (undo-tree-id22992 . -2) (undo-tree-id22993 . -2) (undo-tree-id22994 . -2) (undo-tree-id22995 . -2) (undo-tree-id22996 . -2) (undo-tree-id22997 . -2) (undo-tree-id22998 . -2) (undo-tree-id22999 . -2) (undo-tree-id23000 . -2) (undo-tree-id23001 . -2) (undo-tree-id23002 . -2) (undo-tree-id23003 . -2) (undo-tree-id23004 . -2) (undo-tree-id23005 . -2) 1696 (t 25944 42520 840664 333000)) nil (25944 42533 567414 0) 0 nil])
([nil nil ((#("0," 0 2 (fontified t)) . -1692) (undo-tree-id22846 . -2) (undo-tree-id22847 . -2) (undo-tree-id22848 . -2) (undo-tree-id22849 . -2) (undo-tree-id22850 . -2) (undo-tree-id22851 . -2) (undo-tree-id22852 . -2) (undo-tree-id22853 . -2) (undo-tree-id22854 . -2) (undo-tree-id22855 . -2) (undo-tree-id22856 . -2) (undo-tree-id22857 . -2) (undo-tree-id22858 . -2) (undo-tree-id22859 . -2) (undo-tree-id22860 . -2) (undo-tree-id22861 . -2) (undo-tree-id22862 . -2) (undo-tree-id22863 . -2) (undo-tree-id22864 . -2) (undo-tree-id22865 . -2) (undo-tree-id22866 . -2) (undo-tree-id22867 . -2) (undo-tree-id22868 . -2) (undo-tree-id22869 . -2) (undo-tree-id22870 . -2) (undo-tree-id22871 . -2) (undo-tree-id22872 . -2) (undo-tree-id22873 . -2) (undo-tree-id22874 . -2) (undo-tree-id22875 . -2) (undo-tree-id22876 . -2) (undo-tree-id22877 . -2) (undo-tree-id22878 . -2) (undo-tree-id22879 . -2) (undo-tree-id22880 . -2) (undo-tree-id22881 . -2) (undo-tree-id22882 . -2) (undo-tree-id22883 . -2) (undo-tree-id22884 . -2) (undo-tree-id22885 . -2) (undo-tree-id22886 . -2) (undo-tree-id22887 . -2) (undo-tree-id22888 . -2) (undo-tree-id22889 . -2) (undo-tree-id22890 . -2) (undo-tree-id22891 . -2) (undo-tree-id22892 . -2) (undo-tree-id22893 . -2) (undo-tree-id22894 . -2) (undo-tree-id22895 . -2) (undo-tree-id22896 . -2) (undo-tree-id22897 . -2) (undo-tree-id22898 . -2) (undo-tree-id22899 . -2) (undo-tree-id22900 . -2) (undo-tree-id22901 . -2) (undo-tree-id22902 . -2) (undo-tree-id22903 . -2) (undo-tree-id22904 . -2) (undo-tree-id22905 . -2) (undo-tree-id22906 . -2) (undo-tree-id22907 . -2) (undo-tree-id22908 . -2) (undo-tree-id22909 . -2) (undo-tree-id22910 . -2) (undo-tree-id22911 . -2) (undo-tree-id22912 . -2) (undo-tree-id22913 . -2) (undo-tree-id22914 . -2) (undo-tree-id22915 . -2) (undo-tree-id22916 . -2) (undo-tree-id22917 . -2) (undo-tree-id22918 . -2) (undo-tree-id22919 . -2) (undo-tree-id22920 . -2) (undo-tree-id22921 . -2) (undo-tree-id22922 . -2) (undo-tree-id22923 . -2) (undo-tree-id22924 . -2) (undo-tree-id22925 . -2) (undo-tree-id22926 . -2) (undo-tree-id22927 . -2) (undo-tree-id22928 . -2) (undo-tree-id22929 . -2) 1694) nil (25944 42533 567338 0) 0 nil])
([nil nil ((#("0," 0 2 (fontified t)) . -1690) (undo-tree-id22753 . -2) (undo-tree-id22754 . -2) (undo-tree-id22755 . -2) (undo-tree-id22756 . -2) (undo-tree-id22757 . -2) (undo-tree-id22758 . -2) (undo-tree-id22759 . -2) (undo-tree-id22760 . -2) (undo-tree-id22761 . -2) (undo-tree-id22762 . -2) (undo-tree-id22763 . -2) (undo-tree-id22764 . -2) (undo-tree-id22765 . -2) (undo-tree-id22766 . -2) (undo-tree-id22767 . -2) (undo-tree-id22768 . -2) (undo-tree-id22769 . -2) (undo-tree-id22770 . -2) (undo-tree-id22771 . -2) (undo-tree-id22772 . -2) (undo-tree-id22773 . -2) (undo-tree-id22774 . -2) (undo-tree-id22775 . -2) (undo-tree-id22776 . -2) (undo-tree-id22777 . -2) (undo-tree-id22778 . -2) (undo-tree-id22779 . -2) (undo-tree-id22780 . -2) (undo-tree-id22781 . -2) (undo-tree-id22782 . -2) (undo-tree-id22783 . -2) (undo-tree-id22784 . -2) (undo-tree-id22785 . -2) (undo-tree-id22786 . -2) (undo-tree-id22787 . -2) (undo-tree-id22788 . -2) (undo-tree-id22789 . -2) (undo-tree-id22790 . -2) (undo-tree-id22791 . -2) (undo-tree-id22792 . -2) (undo-tree-id22793 . -2) (undo-tree-id22794 . -2) (undo-tree-id22795 . -2) (undo-tree-id22796 . -2) (undo-tree-id22797 . -2) (undo-tree-id22798 . -2) (undo-tree-id22799 . -2) (undo-tree-id22800 . -2) (undo-tree-id22801 . -2) (undo-tree-id22802 . -2) (undo-tree-id22803 . -2) (undo-tree-id22804 . -2) (undo-tree-id22805 . -2) (undo-tree-id22806 . -2) (undo-tree-id22807 . -2) (undo-tree-id22808 . -2) (undo-tree-id22809 . -2) (undo-tree-id22810 . -2) (undo-tree-id22811 . -2) (undo-tree-id22812 . -2) (undo-tree-id22813 . -2) (undo-tree-id22814 . -2) (undo-tree-id22815 . -2) (undo-tree-id22816 . -2) (undo-tree-id22817 . -2) (undo-tree-id22818 . -2) (undo-tree-id22819 . -2) (undo-tree-id22820 . -2) (undo-tree-id22821 . -2) (undo-tree-id22822 . -2) (undo-tree-id22823 . -2) (undo-tree-id22824 . -2) (undo-tree-id22825 . -2) (undo-tree-id22826 . -2) (undo-tree-id22827 . -2) (undo-tree-id22828 . -2) (undo-tree-id22829 . -2) (undo-tree-id22830 . -2) (undo-tree-id22831 . -2) (undo-tree-id22832 . -2) (undo-tree-id22833 . -2) (undo-tree-id22834 . -2) (undo-tree-id22835 . -2) (undo-tree-id22836 . -2) (undo-tree-id22837 . -2) (undo-tree-id22838 . -2) (undo-tree-id22839 . -2) (undo-tree-id22840 . -2) (undo-tree-id22841 . -2) (undo-tree-id22842 . -2) (undo-tree-id22843 . -2) (undo-tree-id22844 . -2) (undo-tree-id22845 . -2) 1692) nil (25944 42533 567250 0) 0 nil])
([nil nil ((#("0," 0 2 (fontified t)) . -1688) (undo-tree-id22650 . -2) (undo-tree-id22651 . -2) (undo-tree-id22652 . -2) (undo-tree-id22653 . -2) (undo-tree-id22654 . -2) (undo-tree-id22655 . -2) (undo-tree-id22656 . -2) (undo-tree-id22657 . -2) (undo-tree-id22658 . -2) (undo-tree-id22659 . -2) (undo-tree-id22660 . -2) (undo-tree-id22661 . -2) (undo-tree-id22662 . -2) (undo-tree-id22663 . -2) (undo-tree-id22664 . -2) (undo-tree-id22665 . -2) (undo-tree-id22666 . -2) (undo-tree-id22667 . -2) (undo-tree-id22668 . -2) (undo-tree-id22669 . -2) (undo-tree-id22670 . -2) (undo-tree-id22671 . -2) (undo-tree-id22672 . -2) (undo-tree-id22673 . -2) (undo-tree-id22674 . -2) (undo-tree-id22675 . -2) (undo-tree-id22676 . -2) (undo-tree-id22677 . -2) (undo-tree-id22678 . -2) (undo-tree-id22679 . -2) (undo-tree-id22680 . -2) (undo-tree-id22681 . -2) (undo-tree-id22682 . -2) (undo-tree-id22683 . -2) (undo-tree-id22684 . -2) (undo-tree-id22685 . -2) (undo-tree-id22686 . -2) (undo-tree-id22687 . -2) (undo-tree-id22688 . -2) (undo-tree-id22689 . -2) (undo-tree-id22690 . -2) (undo-tree-id22691 . -2) (undo-tree-id22692 . -2) (undo-tree-id22693 . -2) (undo-tree-id22694 . -2) (undo-tree-id22695 . -2) (undo-tree-id22696 . -2) (undo-tree-id22697 . -2) (undo-tree-id22698 . -2) (undo-tree-id22699 . -2) (undo-tree-id22700 . -2) (undo-tree-id22701 . -2) (undo-tree-id22702 . -2) (undo-tree-id22703 . -2) (undo-tree-id22704 . -2) (undo-tree-id22705 . -2) (undo-tree-id22706 . -2) (undo-tree-id22707 . -2) (undo-tree-id22708 . -2) (undo-tree-id22709 . -2) (undo-tree-id22710 . -2) (undo-tree-id22711 . -2) (undo-tree-id22712 . -2) (undo-tree-id22713 . -2) (undo-tree-id22714 . -2) (undo-tree-id22715 . -2) (undo-tree-id22716 . -2) (undo-tree-id22717 . -2) (undo-tree-id22718 . -2) (undo-tree-id22719 . -2) (undo-tree-id22720 . -2) (undo-tree-id22721 . -2) (undo-tree-id22722 . -2) (undo-tree-id22723 . -2) (undo-tree-id22724 . -2) (undo-tree-id22725 . -2) (undo-tree-id22726 . -2) (undo-tree-id22727 . -2) (undo-tree-id22728 . -2) (undo-tree-id22729 . -2) (undo-tree-id22730 . -2) (undo-tree-id22731 . -2) (undo-tree-id22732 . -2) (undo-tree-id22733 . -2) (undo-tree-id22734 . -2) (undo-tree-id22735 . -2) (undo-tree-id22736 . -2) (undo-tree-id22737 . -2) (undo-tree-id22738 . -2) (undo-tree-id22739 . -2) (undo-tree-id22740 . -2) (undo-tree-id22741 . -2) (undo-tree-id22742 . -2) (undo-tree-id22743 . -2) (undo-tree-id22744 . -2) (undo-tree-id22745 . -2) (undo-tree-id22746 . -2) (undo-tree-id22747 . -2) (undo-tree-id22748 . -2) (undo-tree-id22749 . -2) (undo-tree-id22750 . -2) (undo-tree-id22751 . -2) (undo-tree-id22752 . -2) 1690) nil (25944 42533 567863 0) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -1686) (undo-tree-id23022 . -1) (undo-tree-id23023 . -1) (undo-tree-id23024 . -1) (undo-tree-id23025 . -1) (undo-tree-id23026 . -1) (undo-tree-id23027 . -1) (undo-tree-id23028 . -1) (undo-tree-id23029 . -1) (undo-tree-id23030 . -1) (undo-tree-id23031 . -1) (undo-tree-id23032 . -1) (undo-tree-id23033 . -1) (undo-tree-id23034 . -1) (undo-tree-id23035 . -1) (undo-tree-id23036 . -1) (undo-tree-id23037 . -1) (undo-tree-id23038 . -1) (undo-tree-id23039 . -1) (undo-tree-id23040 . -1) (undo-tree-id23041 . -1) (undo-tree-id23042 . -1) (undo-tree-id23043 . -1) (undo-tree-id23044 . -1) (undo-tree-id23045 . -1) (undo-tree-id23046 . -1) (undo-tree-id23047 . -1) (undo-tree-id23048 . -1) (undo-tree-id23049 . -1) (undo-tree-id23050 . -1) (undo-tree-id23051 . -1) (undo-tree-id23052 . -1) (undo-tree-id23053 . -1) (undo-tree-id23054 . -1) (undo-tree-id23055 . -1) (undo-tree-id23056 . -1) (undo-tree-id23057 . -1) (undo-tree-id23058 . -1) (undo-tree-id23059 . -1) (undo-tree-id23060 . -1) (undo-tree-id23061 . -1) (undo-tree-id23062 . -1) (undo-tree-id23063 . -1) (undo-tree-id23064 . -1) (undo-tree-id23065 . -1) (undo-tree-id23066 . -1) (undo-tree-id23067 . -1) (undo-tree-id23068 . -1) (undo-tree-id23069 . -1) (undo-tree-id23070 . -1) (undo-tree-id23071 . -1) (undo-tree-id23072 . -1) (undo-tree-id23073 . -1) (undo-tree-id23074 . -1) (undo-tree-id23075 . -1) (undo-tree-id23076 . -1) (undo-tree-id23077 . -1) (undo-tree-id23078 . -1) (undo-tree-id23079 . -1) (undo-tree-id23080 . -1) (undo-tree-id23081 . -1) (undo-tree-id23082 . -1) (undo-tree-id23083 . -1) (undo-tree-id23084 . -1) (undo-tree-id23085 . -1) (undo-tree-id23086 . -1) (undo-tree-id23087 . -1) (undo-tree-id23088 . -1) (undo-tree-id23089 . -1) (undo-tree-id23090 . -1) (undo-tree-id23091 . -1) (undo-tree-id23092 . -1) (undo-tree-id23093 . -1) (undo-tree-id23094 . -1) (undo-tree-id23095 . -1) (undo-tree-id23096 . -1) (undo-tree-id23097 . -1) (undo-tree-id23098 . -1) (undo-tree-id23099 . -1) (undo-tree-id23100 . -1) (undo-tree-id23101 . -1) (undo-tree-id23102 . -1) (undo-tree-id23103 . -1) (undo-tree-id23104 . -1) (undo-tree-id23105 . -1) (undo-tree-id23106 . -1) (undo-tree-id23107 . -1) (undo-tree-id23108 . -1) (undo-tree-id23109 . -1) (undo-tree-id23110 . -1) (undo-tree-id23111 . -1) (undo-tree-id23112 . -1) (undo-tree-id23113 . -1) (undo-tree-id23114 . -1) (undo-tree-id23115 . -1) (undo-tree-id23116 . -1) (undo-tree-id23117 . -1) (undo-tree-id23118 . -1) (undo-tree-id23119 . -1) (undo-tree-id23120 . -1) (undo-tree-id23121 . -1) (undo-tree-id23122 . -1) (undo-tree-id23123 . -1) (undo-tree-id23124 . -1) (undo-tree-id23125 . -1) (undo-tree-id23126 . -1) (undo-tree-id23127 . -1) (undo-tree-id23128 . -1) (undo-tree-id23129 . -1) (undo-tree-id23130 . -1) (undo-tree-id23131 . -1) (undo-tree-id23132 . -1) (undo-tree-id23133 . -1) (undo-tree-id23134 . -1) (undo-tree-id23135 . -1) (undo-tree-id23136 . -1) (undo-tree-id23137 . -1) (undo-tree-id23138 . -1) (undo-tree-id23139 . -1) (undo-tree-id23140 . -1) (undo-tree-id23141 . -1) (undo-tree-id23142 . -1) (undo-tree-id23143 . -1) (undo-tree-id23144 . -1) (undo-tree-id23145 . -1) (undo-tree-id23146 . -1) (undo-tree-id23147 . -1) (undo-tree-id23148 . -1) (undo-tree-id23149 . -1) (#("(" 0 1 (fontified t)) . -1687) (undo-tree-id23150 . -1) (undo-tree-id23151 . -1) (undo-tree-id23152 . -1) (undo-tree-id23153 . -1) (undo-tree-id23154 . -1) (undo-tree-id23155 . -1) (undo-tree-id23156 . -1) (undo-tree-id23157 . -1) (undo-tree-id23158 . -1) (undo-tree-id23159 . -1) (undo-tree-id23160 . -1) (undo-tree-id23161 . -1) (undo-tree-id23162 . -1) (undo-tree-id23163 . -1) (undo-tree-id23164 . -1) (undo-tree-id23165 . -1) (undo-tree-id23166 . -1) (undo-tree-id23167 . -1) (undo-tree-id23168 . -1) (undo-tree-id23169 . -1) (undo-tree-id23170 . -1) (undo-tree-id23171 . -1) (undo-tree-id23172 . -1) (undo-tree-id23173 . -1) (undo-tree-id23174 . -1) (undo-tree-id23175 . -1) (undo-tree-id23176 . -1) (undo-tree-id23177 . -1) (undo-tree-id23178 . -1) (undo-tree-id23179 . -1) (undo-tree-id23180 . -1) (undo-tree-id23181 . -1) (undo-tree-id23182 . -1) (undo-tree-id23183 . -1) (undo-tree-id23184 . -1) (undo-tree-id23185 . -1) (undo-tree-id23186 . -1) (undo-tree-id23187 . -1) (undo-tree-id23188 . -1) (undo-tree-id23189 . -1) (undo-tree-id23190 . -1) (undo-tree-id23191 . -1) (undo-tree-id23192 . -1) (undo-tree-id23193 . -1) (undo-tree-id23194 . -1) (undo-tree-id23195 . -1) (undo-tree-id23196 . -1) (undo-tree-id23197 . -1) (undo-tree-id23198 . -1) (undo-tree-id23199 . -1) (undo-tree-id23200 . -1) (undo-tree-id23201 . -1) (undo-tree-id23202 . -1) (undo-tree-id23203 . -1) (undo-tree-id23204 . -1) (undo-tree-id23205 . -1) (undo-tree-id23206 . -1) (undo-tree-id23207 . -1) (undo-tree-id23208 . -1) (undo-tree-id23209 . -1) (undo-tree-id23210 . -1) (undo-tree-id23211 . -1) (undo-tree-id23212 . -1) (undo-tree-id23213 . -1) (undo-tree-id23214 . -1) (undo-tree-id23215 . -1) (undo-tree-id23216 . -1) (undo-tree-id23217 . -1) (undo-tree-id23218 . -1) (undo-tree-id23219 . -1) (undo-tree-id23220 . -1) (undo-tree-id23221 . -1) (undo-tree-id23222 . -1) (undo-tree-id23223 . -1) (undo-tree-id23224 . -1) (undo-tree-id23225 . -1) (undo-tree-id23226 . -1) (undo-tree-id23227 . -1) (undo-tree-id23228 . -1) (undo-tree-id23229 . -1) (undo-tree-id23230 . -1) (undo-tree-id23231 . -1) (undo-tree-id23232 . -1) (undo-tree-id23233 . -1) (undo-tree-id23234 . -1) (undo-tree-id23235 . -1) (undo-tree-id23236 . -1) (undo-tree-id23237 . -1) (undo-tree-id23238 . -1) (undo-tree-id23239 . -1) (undo-tree-id23240 . -1) (undo-tree-id23241 . -1) (undo-tree-id23242 . -1) (undo-tree-id23243 . -1) (undo-tree-id23244 . -1) (undo-tree-id23245 . -1) (undo-tree-id23246 . -1) (undo-tree-id23247 . -1) (undo-tree-id23248 . -1) (undo-tree-id23249 . -1) (undo-tree-id23250 . -1) (undo-tree-id23251 . -1) (undo-tree-id23252 . -1) (undo-tree-id23253 . -1) (undo-tree-id23254 . -1) (undo-tree-id23255 . -1) (undo-tree-id23256 . -1) (undo-tree-id23257 . -1) (undo-tree-id23258 . -1) (undo-tree-id23259 . -1) (undo-tree-id23260 . -1) (undo-tree-id23261 . -1) (undo-tree-id23262 . -1) (undo-tree-id23263 . -1) (undo-tree-id23264 . -1) (undo-tree-id23265 . -1) (undo-tree-id23266 . -1) (undo-tree-id23267 . -1) (undo-tree-id23268 . -1) (undo-tree-id23269 . -1) (undo-tree-id23270 . -1) (undo-tree-id23271 . -1) (undo-tree-id23272 . -1) 1688) nil (25944 42553 950731 0) 0 nil] [nil nil ((#("fill(&(" 0 5 (fontified t) 5 6 (face rust-ampersand-face fontified t) 6 7 (fontified t)) . -1681) (undo-tree-id22534 . -1) (undo-tree-id22535 . -2) (undo-tree-id22536 . -7) (undo-tree-id22537 . -7) (undo-tree-id22538 . -1) (undo-tree-id22539 . -7) (undo-tree-id22540 . -5) (undo-tree-id22541 . -7) (undo-tree-id22542 . -7) (undo-tree-id22543 . -7) (undo-tree-id22544 . -7) (undo-tree-id22545 . -7) (undo-tree-id22546 . -7) (undo-tree-id22547 . -7) (undo-tree-id22548 . -7) (undo-tree-id22549 . -7) (undo-tree-id22550 . -7) (undo-tree-id22551 . -7) (undo-tree-id22552 . -7) (undo-tree-id22553 . -7) (undo-tree-id22554 . -7) (undo-tree-id22555 . -7) (undo-tree-id22556 . -7) (undo-tree-id22557 . -7) (undo-tree-id22558 . -7) (undo-tree-id22559 . -7) (undo-tree-id22560 . -7) (undo-tree-id22561 . -7) (undo-tree-id22562 . -7) (undo-tree-id22563 . -7) (undo-tree-id22564 . -7) (undo-tree-id22565 . -7) (undo-tree-id22566 . -7) (undo-tree-id22567 . -7) (undo-tree-id22568 . -7) (undo-tree-id22569 . -7) (undo-tree-id22570 . -7) (undo-tree-id22571 . -7) (undo-tree-id22572 . -7) (undo-tree-id22573 . -7) (undo-tree-id22574 . -7) (undo-tree-id22575 . -7) (undo-tree-id22576 . -7) (undo-tree-id22577 . -7) (undo-tree-id22578 . -7) (undo-tree-id22579 . -7) (undo-tree-id22580 . -7) (undo-tree-id22581 . -7) (undo-tree-id22582 . -7) (undo-tree-id22583 . -7) (undo-tree-id22584 . -7) (undo-tree-id22585 . -7) (undo-tree-id22586 . -7) (undo-tree-id22587 . -7) (undo-tree-id22588 . -7) (undo-tree-id22589 . -7) (undo-tree-id22590 . -7) (undo-tree-id22591 . -7) (undo-tree-id22592 . -7) (undo-tree-id22593 . -7) (undo-tree-id22594 . -7) (undo-tree-id22595 . -7) (undo-tree-id22596 . -7) (undo-tree-id22597 . -7) (undo-tree-id22598 . -7) (undo-tree-id22599 . -7) (undo-tree-id22600 . -7) (undo-tree-id22601 . -7) (undo-tree-id22602 . -7) (undo-tree-id22603 . -7) (undo-tree-id22604 . -7) (undo-tree-id22605 . -7) (undo-tree-id22606 . -7) (undo-tree-id22607 . -7) (undo-tree-id22608 . -7) (undo-tree-id22609 . -7) (undo-tree-id22610 . -7) (undo-tree-id22611 . -7) (undo-tree-id22612 . -7) (undo-tree-id22613 . -7) (undo-tree-id22614 . -7) (undo-tree-id22615 . -7) (undo-tree-id22616 . -7) (undo-tree-id22617 . -7) (undo-tree-id22618 . -7) (undo-tree-id22619 . -7) (undo-tree-id22620 . -7) (undo-tree-id22621 . -7) (undo-tree-id22622 . -7) (undo-tree-id22623 . -7) (undo-tree-id22624 . -7) (undo-tree-id22625 . -7) (undo-tree-id22626 . -7) (undo-tree-id22627 . -7) (undo-tree-id22628 . -7) (undo-tree-id22629 . -7) (undo-tree-id22630 . -7) (undo-tree-id22631 . -7) (undo-tree-id22632 . -7) (undo-tree-id22633 . -7) (undo-tree-id22634 . -7) (undo-tree-id22635 . -7) (undo-tree-id22636 . -7) (undo-tree-id22637 . -7) (undo-tree-id22638 . -7) (undo-tree-id22639 . -7) (undo-tree-id22640 . -7) (undo-tree-id22641 . -7) (undo-tree-id22642 . -7) (undo-tree-id22643 . -7) (undo-tree-id22644 . -7) (undo-tree-id22645 . -7) (undo-tree-id22646 . -7) (undo-tree-id22647 . -7) (undo-tree-id22648 . -7) (undo-tree-id22649 . -7) 1688) ((1681 . 1688)) (25944 42533 567049 0) 0 nil])
([nil nil ((1686 . 1689)) nil (25944 42553 950474 0) 0 nil])
nil
([nil nil ((1686 . 1695) (#("RGB" 0 3 (fontified nil)) . 1686) (1686 . 1689) (#("RGBAColor" 0 9 (fontified nil)) . -1686) (1686 . 1695) (#("RGB" 0 3 (face font-lock-type-face fontified t)) . -1686) (undo-tree-id23006 . -3) (undo-tree-id23007 . -3) (undo-tree-id23008 . -1) (undo-tree-id23009 . -1) (undo-tree-id23010 . -1) (undo-tree-id23011 . -1) (undo-tree-id23012 . -1) (undo-tree-id23013 . -2) (undo-tree-id23014 . -2) (undo-tree-id23015 . -2) (undo-tree-id23016 . -3) (undo-tree-id23017 . -3) (undo-tree-id23018 . -3) (undo-tree-id23019 . -3) (undo-tree-id23020 . -3) (undo-tree-id23021 . -3) 1689) nil (25944 42553 950471 0) 0 nil])
([nil nil ((1695 . 1697)) nil (25944 42553 950442 0) 0 nil])
([nil nil ((1696 . 1705)) nil (25944 42553 950437 0) 0 nil])
([nil nil ((1686 . 1687) (t 25944 42554 91 912000)) nil (25944 42561 767402 0) 0 nil])
([nil nil ((1708 . 1711) (t 25944 42561 817454 39000)) nil (25944 42567 930553 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1709 1717 #s(yas--snippet nil nil #s(yas--exit 1717 nil) 95 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1717 nil) 95 nil nil nil nil)) (1709 . 1717) (#("unwrap()$0" 0 10 (fontified nil)) . 1709) (1709 . 1719) (#("un" 0 2 (fontified nil)) . 1709) (1709 . 1711) (#("unwrap()" 0 8 (fontified nil)) . -1709) (1709 . 1717) (#("un" 0 2 (fontified t)) . -1709) (undo-tree-id23273 . -2) (undo-tree-id23274 . -2) (undo-tree-id23275 . -1) (undo-tree-id23276 . -1) (undo-tree-id23277 . -2) (undo-tree-id23278 . -2) (undo-tree-id23279 . -2) (undo-tree-id23280 . -2) (undo-tree-id23281 . -2) 1711) nil (25944 42567 930548 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1697) (undo-tree-id23320 . -1) (undo-tree-id23321 . -1) (undo-tree-id23322 . -1) (undo-tree-id23323 . -1) (undo-tree-id23324 . -1) (undo-tree-id23325 . -1) (undo-tree-id23326 . -1) 1698 (t 25944 42567 980012 404000)) nil (25944 42606 497745 0) 0 nil])
([nil nil ((1697 . 1700)) nil (25944 42606 497736 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1701) (undo-tree-id23307 . -1) (undo-tree-id23308 . -1) (undo-tree-id23309 . -1) (undo-tree-id23310 . -1) (undo-tree-id23311 . -1) (undo-tree-id23312 . -1) (undo-tree-id23313 . -1) (undo-tree-id23314 . -1) (undo-tree-id23315 . -1) (undo-tree-id23316 . -1) (undo-tree-id23317 . -1) (undo-tree-id23318 . -1) (undo-tree-id23319 . -1) 1702) nil (25944 42606 497735 0) 0 nil])
([nil nil ((1701 . 1704)) nil (25944 42606 497719 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1705) (undo-tree-id23296 . -1) (undo-tree-id23297 . -1) (undo-tree-id23298 . -1) (undo-tree-id23299 . -1) (undo-tree-id23300 . -1) (undo-tree-id23301 . -1) (undo-tree-id23302 . -1) (undo-tree-id23303 . -1) (undo-tree-id23304 . -1) (undo-tree-id23305 . -1) (undo-tree-id23306 . -1) 1706) nil (25944 42606 497717 0) 0 nil])
([nil nil ((1705 . 1708)) nil (25944 42606 497704 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1709) (undo-tree-id23282 . -1) (undo-tree-id23283 . -1) (undo-tree-id23284 . -1) (undo-tree-id23285 . -1) (undo-tree-id23286 . -1) (undo-tree-id23287 . -1) (undo-tree-id23288 . -1) (undo-tree-id23289 . -1) (undo-tree-id23290 . -1) (undo-tree-id23291 . -1) (undo-tree-id23292 . -1) (undo-tree-id23293 . -1) (undo-tree-id23294 . -1) (undo-tree-id23295 . -1) 1710) nil (25944 42652 2485 0) 0 nil])
([nil nil ((1709 . 1710)) ((#("1" 0 1 (fontified t)) . 1709) (t 25944 42606 550535 977000)) (25944 42656 131664 0) 0 nil])
([nil nil ((apply -3 929 949 undo--wrap-and-run-primitive-undo 929 949 ((931 . 934) 945))) nil (25944 42700 187004 0) 0 nil])
([nil nil ((948 . 951)) nil (25944 42700 187003 0) 0 nil])
([nil nil ((951 . 952)) nil (25944 42700 187002 0) 0 nil])
([nil nil ((951 . 956) (#("e" 0 1 (fontified nil)) . 951) (951 . 952) (#("e_vec" 0 5 (fontified nil)) . -951) (951 . 956) (#("e" 0 1 (fontified t)) . -951) (undo-tree-id23336 . -1) (undo-tree-id23337 . -1) (undo-tree-id23338 . -1) (undo-tree-id23339 . -1) (undo-tree-id23340 . -1) 952) nil (25944 42700 187000 0) 0 nil])
([nil nil ((956 . 959)) nil (25944 42700 186992 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 964 965 nil nil nil t #s(yas--exit 966 nil))) #s(yas--exit 966 nil) 96 nil #s(yas--field 1 964 965 nil nil nil t #s(yas--exit 966 nil)) nil nil)) (957 . 970) (#("remove(${1:index})$0" 0 20 (fontified nil)) . 957) (957 . 977) (#("re" 0 2 (fontified nil)) . 957) (957 . 959) (#("remove(…)" 0 9 (fontified nil)) . -957) (957 . 966) (#("re" 0 2 (fontified t)) . -957) (undo-tree-id23328 . -2) (undo-tree-id23329 . -1) (undo-tree-id23330 . -1) (undo-tree-id23331 . -2) (undo-tree-id23332 . -2) (undo-tree-id23333 . -2) (undo-tree-id23334 . -2) (undo-tree-id23335 . -2) 959) nil (25944 42700 186990 0) 0 nil])
([nil nil ((#("index" 0 5 (fontified nil)) . 965) (undo-tree-id23327 . -5) (964 . 965)) nil (25944 42700 186977 0) 0 nil])
([nil nil ((apply yas--snippet-revive 957 966 #s(yas--snippet nil (#s(yas--field 1 964 965 nil nil nil t #s(yas--exit 966 nil))) #s(yas--exit 966 nil) 96 nil #s(yas--field 1 964 965 nil nil nil t #s(yas--exit 966 nil)) nil nil))) nil (25944 42700 186963 0) 0 nil])
([nil nil ((966 . 967) (t 25944 42700 237404 219000)) nil (25944 42703 404886 0) 0 nil])
([nil nil ((#("	if event_rw.get().len() > 1024 {
	    event_rw.update(|e_vec| {
		// e_vec.clear();
		e_vec.remove(0);
	    })
	}" 0 1 (fontified t) 1 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 13 (fontified t) 13 19 (fontified t) 19 25 (fontified t) 25 26 (syntax-table (1) fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 34 (fontified t) 34 35 (fontified t) 35 39 (fontified t) 39 48 (fontified t) 48 61 (fontified t) 61 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 70 (face font-lock-comment-delimiter-face fontified t) 70 76 (face font-lock-comment-face fontified t) 76 85 (face font-lock-comment-face fontified t) 85 87 (fontified t) 87 93 (fontified t) 93 103 (fontified t) 103 104 (fontified t) 104 105 (fontified t) 105 109 (fontified t) 109 110 (fontified t) 110 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t)) . 864) (undo-tree-id23491 . -114) (undo-tree-id23492 . -84) (undo-tree-id23493 . -113) (undo-tree-id23494 . -113) (undo-tree-id23495 . -114) (undo-tree-id23496 . -75) (undo-tree-id23497 . -76) (undo-tree-id23498 . -100) (undo-tree-id23499 . 13) (undo-tree-id23500 . -102) (undo-tree-id23501 . -103) (undo-tree-id23502 . -103) (undo-tree-id23503 . -103) (undo-tree-id23504 . -103) (undo-tree-id23505 . -103) (undo-tree-id23506 . -103) (undo-tree-id23507 . -103) (undo-tree-id23508 . -103) (undo-tree-id23509 . -103) (undo-tree-id23510 . -103) (undo-tree-id23511 . -103) (undo-tree-id23512 . -103) (undo-tree-id23513 . -103) (undo-tree-id23514 . -103) (undo-tree-id23515 . -103) (undo-tree-id23516 . -103) (undo-tree-id23517 . -103) (undo-tree-id23518 . -103) (undo-tree-id23519 . -103) (undo-tree-id23520 . -103) (undo-tree-id23521 . -103) (undo-tree-id23522 . -103) (undo-tree-id23523 . -103) (undo-tree-id23524 . -103) (undo-tree-id23525 . -103) (undo-tree-id23526 . -103) (undo-tree-id23527 . -103) (undo-tree-id23528 . -103) (undo-tree-id23529 . -103) (undo-tree-id23530 . -103) (undo-tree-id23531 . -103) (undo-tree-id23532 . -103) (undo-tree-id23533 . -103) (undo-tree-id23534 . -103) (undo-tree-id23535 . -103) (undo-tree-id23536 . -103) (undo-tree-id23537 . -103) (undo-tree-id23538 . -103) (undo-tree-id23539 . -103) (undo-tree-id23540 . -103) (undo-tree-id23541 . -103) (undo-tree-id23542 . -103) (undo-tree-id23543 . -103) (undo-tree-id23544 . -103) (undo-tree-id23545 . -103) (undo-tree-id23546 . -103) (undo-tree-id23547 . -103) (undo-tree-id23548 . -103) (undo-tree-id23549 . -103) (undo-tree-id23550 . -103) (undo-tree-id23551 . -103) (undo-tree-id23552 . -103) (undo-tree-id23553 . -103) (undo-tree-id23554 . -103) (undo-tree-id23555 . -45) (undo-tree-id23556 . -45) (undo-tree-id23557 . -45) (undo-tree-id23558 . -45) (undo-tree-id23559 . -45) (undo-tree-id23560 . -45) (undo-tree-id23561 . -45) (undo-tree-id23562 . -45) (undo-tree-id23563 . -45) (undo-tree-id23564 . -45) (undo-tree-id23565 . -45) (undo-tree-id23566 . -45) (undo-tree-id23567 . -45) (undo-tree-id23568 . -45) (undo-tree-id23569 . -45) (undo-tree-id23570 . -45) (undo-tree-id23571 . -45) (undo-tree-id23572 . -45) (undo-tree-id23573 . -45) (undo-tree-id23574 . -114) (undo-tree-id23575 . -114) (undo-tree-id23576 . -114) (undo-tree-id23577 . -114) (undo-tree-id23578 . -114) (undo-tree-id23579 . -114) (undo-tree-id23580 . -114) (undo-tree-id23581 . -114) (undo-tree-id23582 . -114) (undo-tree-id23583 . -111) (undo-tree-id23584 . -86) (undo-tree-id23585 . -34) (undo-tree-id23586 . -65) (undo-tree-id23587 . -114) (t 25944 42703 454326 773000)) nil (25944 42740 230671 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -863) (undo-tree-id23370 . -1) (undo-tree-id23371 . -1) (undo-tree-id23372 . -1) (undo-tree-id23373 . -1) (undo-tree-id23374 . -1) (undo-tree-id23375 . -1) (undo-tree-id23376 . -1) (undo-tree-id23377 . -1) (undo-tree-id23378 . -1) (undo-tree-id23379 . -1) (undo-tree-id23380 . -1) (undo-tree-id23381 . -1) (undo-tree-id23382 . -1) (undo-tree-id23383 . -1) (undo-tree-id23384 . -1) (undo-tree-id23385 . -1) (undo-tree-id23386 . -1) (undo-tree-id23387 . -1) (undo-tree-id23388 . -1) (undo-tree-id23389 . -1) (undo-tree-id23390 . -1) (undo-tree-id23391 . -1) (undo-tree-id23392 . -1) (undo-tree-id23393 . -1) (undo-tree-id23394 . -1) (undo-tree-id23395 . -1) (undo-tree-id23396 . -1) (undo-tree-id23397 . -1) (undo-tree-id23398 . -1) (undo-tree-id23399 . -1) (undo-tree-id23400 . -1) (undo-tree-id23401 . -1) (undo-tree-id23402 . -1) (undo-tree-id23403 . -1) (undo-tree-id23404 . -1) (undo-tree-id23405 . -1) (undo-tree-id23406 . -1) (undo-tree-id23407 . -1) (undo-tree-id23408 . -1) (undo-tree-id23409 . -1) (undo-tree-id23410 . -1) (undo-tree-id23411 . -1) (undo-tree-id23412 . -1) (undo-tree-id23413 . -1) (undo-tree-id23414 . -1) (undo-tree-id23415 . -1) (undo-tree-id23416 . -1) (undo-tree-id23417 . -1) (undo-tree-id23418 . -1) (undo-tree-id23419 . -1) (undo-tree-id23420 . -1) (undo-tree-id23421 . -1) (undo-tree-id23422 . -1) (undo-tree-id23423 . -1) (undo-tree-id23424 . -1) (undo-tree-id23425 . -1) (undo-tree-id23426 . -1) (undo-tree-id23427 . -1) (undo-tree-id23428 . -1) (undo-tree-id23429 . -1) (undo-tree-id23430 . -1) (undo-tree-id23431 . -1) (undo-tree-id23432 . -1) (undo-tree-id23433 . -1) (undo-tree-id23434 . -1) (undo-tree-id23435 . -1) (undo-tree-id23436 . -1) (undo-tree-id23437 . -1) (undo-tree-id23438 . -1) (undo-tree-id23439 . -1) (undo-tree-id23440 . -1) (undo-tree-id23441 . -1) (undo-tree-id23442 . -1) (undo-tree-id23443 . -1) (undo-tree-id23444 . -1) (undo-tree-id23445 . -1) (undo-tree-id23446 . -1) (undo-tree-id23447 . -1) (undo-tree-id23448 . -1) (undo-tree-id23449 . -1) (undo-tree-id23450 . -1) (undo-tree-id23451 . -1) (undo-tree-id23452 . -1) (undo-tree-id23453 . -1) (undo-tree-id23454 . -1) (undo-tree-id23455 . -1) (undo-tree-id23456 . -1) (undo-tree-id23457 . -1) (undo-tree-id23458 . -1) (undo-tree-id23459 . -1) (undo-tree-id23460 . -1) (undo-tree-id23461 . -1) (undo-tree-id23462 . -1) (undo-tree-id23463 . -1) (undo-tree-id23464 . -1) (undo-tree-id23465 . -1) (undo-tree-id23466 . -1) (undo-tree-id23467 . -1) (undo-tree-id23468 . -1) (undo-tree-id23469 . -1) (undo-tree-id23470 . -1) (undo-tree-id23471 . -1) (undo-tree-id23472 . -1) (undo-tree-id23473 . -1) (undo-tree-id23474 . -1) (undo-tree-id23475 . -1) (undo-tree-id23476 . -1) (undo-tree-id23477 . -1) (undo-tree-id23478 . -1) (undo-tree-id23479 . -1) (undo-tree-id23480 . -1) (undo-tree-id23481 . -1) (undo-tree-id23482 . -1) (undo-tree-id23483 . -1) (undo-tree-id23484 . -1) (undo-tree-id23485 . -1) (undo-tree-id23486 . -1) (undo-tree-id23487 . -1) (undo-tree-id23488 . -1) (undo-tree-id23489 . -1) (undo-tree-id23490 . -1) 864) nil (25944 42740 230559 0) 0 nil])
([nil nil ((862 . 863) (799 . 799) (799 . 800)) nil (25944 42740 230435 0) 0 nil])
([nil nil ((800 . 806)) nil (25944 42740 231161 0) 0 nil])
([nil nil ((868 . 870)) nil (25944 42750 406158 0) 0 nil] [nil nil ((799 . 802) (#(" " 0 1 (fontified nil)) . 798) (undo-tree-id23341 . -1) (undo-tree-id23342 . -1) (undo-tree-id23343 . -1) (undo-tree-id23344 . -1) (undo-tree-id23345 . -1) (undo-tree-id23346 . -1) (undo-tree-id23347 . -1) (undo-tree-id23348 . -1) (undo-tree-id23349 . -1) (undo-tree-id23350 . -1) (undo-tree-id23351 . -1) (undo-tree-id23352 . -1) (undo-tree-id23353 . -1) (undo-tree-id23354 . -1) (undo-tree-id23355 . -1) (undo-tree-id23356 . -1) (undo-tree-id23357 . -1) (undo-tree-id23358 . -1) (undo-tree-id23359 . -1) (undo-tree-id23360 . -1) (undo-tree-id23361 . -1) (undo-tree-id23362 . -1) (undo-tree-id23363 . -1) (undo-tree-id23364 . -1) (undo-tree-id23365 . -1) (undo-tree-id23366 . -1) (undo-tree-id23367 . -1) (undo-tree-id23368 . -1) (undo-tree-id23369 . -1) (799 . 800)) ((#("
" 0 1 (fontified nil)) . 799) (undo-tree-id23588 . -1) (undo-tree-id23589 . -1) (798 . 799) (#("			" 0 3 (fontified t)) . 799) (undo-tree-id23590 . -3)) (25944 42740 230429 0) 0 nil])
([nil nil ((868 . 871)) nil (25944 42750 406515 0) 0 nil])
nil
([nil nil ((#("		
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 869) (undo-tree-id23761 . -2) (undo-tree-id23762 . -2) (undo-tree-id23763 . -2) (undo-tree-id23764 . -2) (undo-tree-id23765 . -2) (undo-tree-id23766 . -2) (undo-tree-id23767 . -2) (undo-tree-id23768 . -2) (undo-tree-id23769 . -2) (undo-tree-id23770 . -2) (undo-tree-id23771 . -2) (undo-tree-id23772 . -2) (undo-tree-id23773 . -2) (undo-tree-id23774 . -2) (undo-tree-id23775 . -2) (undo-tree-id23776 . -2) (undo-tree-id23777 . -2) (undo-tree-id23778 . -2) (undo-tree-id23779 . -2) (undo-tree-id23780 . -2) (undo-tree-id23781 . -2) (undo-tree-id23782 . -3)) nil (25944 42795 719263 0) 0 nil] [nil nil ((#("	" 0 1 (fontified nil)) . -870) (undo-tree-id23591 . -1) (undo-tree-id23592 . -1) (undo-tree-id23593 . -1) (undo-tree-id23594 . -1) (undo-tree-id23595 . -1) (871 . 872)) ((#("}" 0 1 (fontified nil)) . 871) (undo-tree-id23596 . -1) (870 . 871)) (25944 42750 406154 0) 0 nil])
([nil nil ((868 . 871)) nil (25944 42795 719241 0) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -868) (undo-tree-id23733 . -1) (undo-tree-id23734 . 1) (undo-tree-id23735 . -1) (undo-tree-id23736 . -1) (undo-tree-id23737 . -1) (undo-tree-id23738 . -1) (undo-tree-id23739 . -1) (undo-tree-id23740 . -1) (undo-tree-id23741 . -1) (undo-tree-id23742 . -1) (undo-tree-id23743 . -1) (undo-tree-id23744 . -1) (undo-tree-id23745 . -1) (undo-tree-id23746 . -1) (undo-tree-id23747 . -1) (#("	" 0 1 (fontified t)) . -869) (undo-tree-id23748 . -1) (undo-tree-id23749 . -1) (undo-tree-id23750 . -1) (undo-tree-id23751 . -1) (undo-tree-id23752 . -1) (undo-tree-id23753 . -1) (undo-tree-id23754 . -1) (undo-tree-id23755 . -1) (#("	" 0 1 (fontified t)) . -870) (undo-tree-id23756 . -1) (undo-tree-id23757 . -1) (undo-tree-id23758 . -1) (undo-tree-id23759 . -1) (undo-tree-id23760 . -1) 871) nil (25944 42795 719238 0) 0 nil])
([nil nil ((868 . 869)) nil (25944 42795 719209 0) 0 nil])
([nil nil ((868 . 874) (#("l" 0 1 (fontified nil)) . 868) (868 . 869) (#("leptos" 0 6 (fontified nil)) . -868) (868 . 874) (#("l" 0 1 (fontified t)) . -868) (undo-tree-id23730 . -1) (undo-tree-id23731 . -1) (undo-tree-id23732 . -1) 869) nil (25944 42795 719207 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -868) (undo-tree-id23653 . -1) (undo-tree-id23654 . -1) (undo-tree-id23655 . -1) (undo-tree-id23656 . -1) (undo-tree-id23657 . -1) (undo-tree-id23658 . -1) (undo-tree-id23659 . -1) (undo-tree-id23660 . -1) (undo-tree-id23661 . -1) (undo-tree-id23662 . -1) (undo-tree-id23663 . -1) (undo-tree-id23664 . -1) (undo-tree-id23665 . -1) (undo-tree-id23666 . -1) (undo-tree-id23667 . -1) (undo-tree-id23668 . -1) (undo-tree-id23669 . -1) (undo-tree-id23670 . -1) (undo-tree-id23671 . -1) (undo-tree-id23672 . -1) (undo-tree-id23673 . -1) (undo-tree-id23674 . -1) (#("e" 0 1 (fontified t)) . -869) (undo-tree-id23675 . -1) (undo-tree-id23676 . -1) (undo-tree-id23677 . -1) (undo-tree-id23678 . -1) (undo-tree-id23679 . -1) (undo-tree-id23680 . -1) (undo-tree-id23681 . -1) (undo-tree-id23682 . -1) (undo-tree-id23683 . -1) (undo-tree-id23684 . -1) (undo-tree-id23685 . -1) (undo-tree-id23686 . -1) (undo-tree-id23687 . -1) (undo-tree-id23688 . -1) (undo-tree-id23689 . -1) (undo-tree-id23690 . -1) (undo-tree-id23691 . -1) (#("p" 0 1 (fontified t)) . -870) (undo-tree-id23692 . -1) (undo-tree-id23693 . -1) (undo-tree-id23694 . -1) (undo-tree-id23695 . -1) (undo-tree-id23696 . -1) (undo-tree-id23697 . -1) (undo-tree-id23698 . -1) (undo-tree-id23699 . -1) (undo-tree-id23700 . -1) (undo-tree-id23701 . -1) (undo-tree-id23702 . -1) (undo-tree-id23703 . -1) (undo-tree-id23704 . -1) (undo-tree-id23705 . -1) (#("t" 0 1 (fontified t)) . -871) (undo-tree-id23706 . -1) (undo-tree-id23707 . -1) (undo-tree-id23708 . -1) (undo-tree-id23709 . -1) (undo-tree-id23710 . -1) (undo-tree-id23711 . -1) (undo-tree-id23712 . -1) (undo-tree-id23713 . -1) (undo-tree-id23714 . -1) (undo-tree-id23715 . -1) (undo-tree-id23716 . -1) (#("o" 0 1 (fontified t)) . -872) (undo-tree-id23717 . -1) (undo-tree-id23718 . -1) (undo-tree-id23719 . -1) (undo-tree-id23720 . -1) (undo-tree-id23721 . -1) (undo-tree-id23722 . -1) (undo-tree-id23723 . -1) (undo-tree-id23724 . -1) (#("s" 0 1 (fontified t)) . -873) (undo-tree-id23725 . -1) (undo-tree-id23726 . -1) (undo-tree-id23727 . -1) (undo-tree-id23728 . -1) (undo-tree-id23729 . -1) 874) nil (25944 42795 719197 0) 0 nil])
([nil nil ((868 . 869)) nil (25944 42795 719119 0) 0 nil])
([nil nil ((869 . 875)) nil (25944 42795 719118 0) 0 nil])
([nil nil ((875 . 878)) nil (25944 42795 719117 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -877) (undo-tree-id23645 . -1) (undo-tree-id23646 . -1) (undo-tree-id23647 . -1) (undo-tree-id23648 . -1) (undo-tree-id23649 . -1) (undo-tree-id23650 . -1) (undo-tree-id23651 . -1) (undo-tree-id23652 . -1) 878) nil (25944 42795 719116 0) 0 nil])
([nil nil ((877 . 879)) nil (25944 42795 719107 0) 0 nil])
([nil nil ((878 . 879)) nil (25944 42795 719106 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -878) (undo-tree-id23642 . -1) (undo-tree-id23643 . -1) (undo-tree-id23644 . -1) 879) nil (25944 42795 719104 0) 0 nil])
([nil nil ((878 . 880)) nil (25944 42795 719096 0) 0 nil])
([nil nil ((878 . 888) (#("al" 0 2 (fontified nil)) . 878) (878 . 880) (#("all_events" 0 10 (fontified nil)) . -878) (878 . 888) (#("al" 0 2 (fontified t)) . -878) (undo-tree-id23634 . -2) (undo-tree-id23635 . -1) (undo-tree-id23636 . -1) (undo-tree-id23637 . -2) (undo-tree-id23638 . -2) (undo-tree-id23639 . -2) (undo-tree-id23640 . -2) (undo-tree-id23641 . -2) 880) nil (25944 42795 719094 0) 0 nil])
([nil nil ((888 . 891)) nil (25944 42795 719084 0) 0 nil])
([nil nil ((891 . 892)) nil (25944 42795 719083 0) 0 nil])
([nil nil ((apply yas--snippet-revive 889 894 #s(yas--snippet nil nil #s(yas--exit 894 nil) 97 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 894 nil) 97 nil nil nil nil)) (889 . 894) (#("len()$0" 0 7 (fontified nil)) . 889) (889 . 896) (#("len" 0 3 (fontified nil)) . 889) (889 . 892) (#("len()" 0 5 (fontified nil)) . -889) (889 . 894) (#("len" 0 3 (fontified t)) . -889) (undo-tree-id23621 . -3) (undo-tree-id23622 . -3) (undo-tree-id23623 . -1) (undo-tree-id23624 . -1) (undo-tree-id23625 . -1) (undo-tree-id23626 . -2) (undo-tree-id23627 . -2) (undo-tree-id23628 . -2) (undo-tree-id23629 . -3) (undo-tree-id23630 . -3) (undo-tree-id23631 . -3) (undo-tree-id23632 . -3) (undo-tree-id23633 . -3) 892) nil (25944 42795 719080 0) 0 nil])
([nil nil ((894 . 899)) nil (25944 42795 719063 0) 0 nil])
([nil nil ((900 . 901)) nil (25944 42795 719062 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -900) (undo-tree-id23615 . -1) (undo-tree-id23616 . -1) (undo-tree-id23617 . -1) (undo-tree-id23618 . -1) (undo-tree-id23619 . -1) (undo-tree-id23620 . -1) 901) nil (25944 42795 719060 0) 0 nil])
([nil nil ((900 . 902)) nil (25944 42795 719053 0) 0 nil])
([nil nil ((901 . 902)) nil (25944 42795 719052 0) 0 nil])
([nil nil ((901 . 911) (#("a" 0 1 (fontified nil)) . 901) (901 . 902) (#("all_events" 0 10 (fontified nil)) . -901) (901 . 911) (#("a" 0 1 (fontified t)) . -901) (undo-tree-id23610 . -1) (undo-tree-id23611 . -1) (undo-tree-id23612 . -1) (undo-tree-id23613 . -1) (undo-tree-id23614 . -1) 902) nil (25944 42795 719050 0) 0 nil])
([nil nil ((911 . 915)) nil (25944 42795 719042 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 919 920 nil nil nil t #s(yas--exit 921 nil))) #s(yas--exit 921 nil) 98 nil #s(yas--field 1 919 920 nil nil nil t #s(yas--exit 921 nil)) nil nil)) (912 . 925) (#("remove(${1:index})$0" 0 20 (fontified nil)) . 912) (912 . 932) (#("rem" 0 3 (fontified nil)) . 912) (912 . 915) (#("remove(…)" 0 9 (fontified nil)) . -912) (912 . 921) (#("rem" 0 3 (fontified t)) . -912) (undo-tree-id23598 . -3) (undo-tree-id23599 . -1) (undo-tree-id23600 . -1) (undo-tree-id23601 . -1) (undo-tree-id23602 . -1) (undo-tree-id23603 . -1) (undo-tree-id23604 . -2) (undo-tree-id23605 . -2) (undo-tree-id23606 . -2) (undo-tree-id23607 . -3) (undo-tree-id23608 . -3) (undo-tree-id23609 . -3) 915) nil (25944 42795 719039 0) 0 nil])
([nil nil ((#("index" 0 5 (fontified nil)) . 920) (undo-tree-id23597 . -5) (919 . 920)) nil (25944 42795 719021 0) 0 nil])
([nil nil ((apply yas--snippet-revive 912 921 #s(yas--snippet nil (#s(yas--field 1 919 920 nil nil nil t #s(yas--exit 921 nil))) #s(yas--exit 921 nil) 98 nil #s(yas--field 1 919 920 nil nil nil t #s(yas--exit 921 nil)) nil nil))) nil (25944 42795 719007 0) 0 nil])
([nil nil ((921 . 922) (t 25944 42795 770623 272000)) nil (25944 42804 510265 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -899) (undo-tree-id23808 . -1) (undo-tree-id23809 . -1) (undo-tree-id23810 . -1) (undo-tree-id23811 . -1) (undo-tree-id23812 . -1) (undo-tree-id23813 . -1) (undo-tree-id23814 . -1) (undo-tree-id23815 . -1) (undo-tree-id23816 . -1) (undo-tree-id23817 . -1) (undo-tree-id23818 . -1) (undo-tree-id23819 . -1) (undo-tree-id23820 . -1) (undo-tree-id23821 . -1) (undo-tree-id23822 . -1) (undo-tree-id23823 . -1) (undo-tree-id23824 . -1) (undo-tree-id23825 . -1) (undo-tree-id23826 . -1) (undo-tree-id23827 . -1) (undo-tree-id23828 . -1) (undo-tree-id23829 . -1) (undo-tree-id23830 . -1) (undo-tree-id23831 . -1) (undo-tree-id23832 . -1) (undo-tree-id23833 . -1) (undo-tree-id23834 . -1) (undo-tree-id23835 . -1) (undo-tree-id23836 . -1) (undo-tree-id23837 . -1) (undo-tree-id23838 . -1) (undo-tree-id23839 . -1) (undo-tree-id23840 . -1) (undo-tree-id23841 . -1) (undo-tree-id23842 . -1) (undo-tree-id23843 . -1) (undo-tree-id23844 . -1) (undo-tree-id23845 . -1) (undo-tree-id23846 . -1) (undo-tree-id23847 . -1) (undo-tree-id23848 . -1) (undo-tree-id23849 . -1) (undo-tree-id23850 . -1) (undo-tree-id23851 . -1) (undo-tree-id23852 . -1) 900 (t 25944 42805 300668 284000)) nil (25944 42816 368336 0) 0 nil] [nil nil ((#("}" 0 1 (fontified t)) . -922) (undo-tree-id23792 . -1) (undo-tree-id23793 . -1) (undo-tree-id23794 . -1) (undo-tree-id23795 . -1) (undo-tree-id23796 . -1) (undo-tree-id23797 . -1) (undo-tree-id23798 . -1) 923 (t 25944 42797 665903 870000)) ((922 . 923)) (25944 42804 46075 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -877) (undo-tree-id23799 . -1) (undo-tree-id23800 . -1) (undo-tree-id23801 . -1) (undo-tree-id23802 . -1) (undo-tree-id23803 . -1) (undo-tree-id23804 . -1) (undo-tree-id23805 . -1) (undo-tree-id23806 . -1) (undo-tree-id23807 . -1) 878) nil (25944 42816 368281 0) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -900) (undo-tree-id23783 . -1) (undo-tree-id23784 . -1) (undo-tree-id23785 . -1) (undo-tree-id23786 . -1) (undo-tree-id23787 . -1) (undo-tree-id23788 . -1) (undo-tree-id23789 . -1) (undo-tree-id23790 . -1) (undo-tree-id23791 . -1) 901) ((900 . 901) (t 25944 42801 799356 504000)) (25944 42801 749034 0) 0 nil])
([nil nil ((877 . 878)) nil (25944 42816 368260 0) 0 nil])
nil
([nil nil ((899 . 900)) nil (25944 42816 368256 0) 0 nil])
([nil nil ((901 . 903) (t 25944 42816 419941 477000)) nil (25944 42952 299358 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -901) (undo-tree-id23888 . -1) (undo-tree-id23889 . -1) (undo-tree-id23890 . -1) (undo-tree-id23891 . -1) (undo-tree-id23892 . -1) (undo-tree-id23893 . -1) (undo-tree-id23894 . -1) (undo-tree-id23895 . -1) (undo-tree-id23896 . -1) (undo-tree-id23897 . -1) (undo-tree-id23898 . -1) (undo-tree-id23899 . -1) (undo-tree-id23900 . -1) (undo-tree-id23901 . -1) (undo-tree-id23902 . -1) (undo-tree-id23903 . -1) (undo-tree-id23904 . -1) (undo-tree-id23905 . -1) (#("0" 0 1 (fontified t)) . -902) (undo-tree-id23906 . -1) (undo-tree-id23907 . -1) (undo-tree-id23908 . -1) (undo-tree-id23909 . -1) (undo-tree-id23910 . -1) (undo-tree-id23911 . -1) (undo-tree-id23912 . -1) (undo-tree-id23913 . -1) 903) nil (25944 42952 299355 0) 0 nil])
([nil nil ((901 . 903)) nil (25944 42952 299327 0) 0 nil])
([nil nil ((901 . 902)) nil (25944 42952 299326 0) 0 nil])
([nil nil ((903 . 907)) nil (25944 42952 299325 0) 0 nil])
([nil nil ((907 . 908)) nil (25944 42952 299324 0) 0 nil])
([nil nil ((906 . 916) (#("al" 0 2 (fontified nil)) . 906) (906 . 908) (#("all_events" 0 10 (fontified nil)) . -906) (906 . 916) (#("al" 0 2 (fontified t)) . -906) (undo-tree-id23881 . -2) (undo-tree-id23882 . -1) (undo-tree-id23883 . -1) (undo-tree-id23884 . -1) (undo-tree-id23885 . -2) (undo-tree-id23886 . -2) (undo-tree-id23887 . -2) 908) nil (25944 42952 299323 0) 0 nil])
([nil nil ((916 . 920)) nil (25944 42952 299313 0) 0 nil])
([nil nil ((apply yas--snippet-revive 917 922 #s(yas--snippet nil nil #s(yas--exit 922 nil) 99 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 922 nil) 99 nil nil nil nil)) (917 . 922) (#("len()$0" 0 7 (fontified nil)) . 917) (917 . 924) (#("len" 0 3 (fontified nil)) . 917) (917 . 920) (#("len()" 0 5 (fontified nil)) . -917) (917 . 922) (#("len" 0 3 (fontified t)) . -917) (undo-tree-id23869 . -3) (undo-tree-id23870 . -1) (undo-tree-id23871 . -1) (undo-tree-id23872 . -1) (undo-tree-id23873 . -2) (undo-tree-id23874 . -2) (undo-tree-id23875 . -2) (undo-tree-id23876 . -3) (undo-tree-id23877 . -3) (undo-tree-id23878 . -3) (undo-tree-id23879 . -3) (undo-tree-id23880 . -3) 920) nil (25944 42952 299311 0) 0 nil])
([nil nil ((922 . 923)) nil (25944 42952 299295 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -922) (undo-tree-id23861 . -1) (undo-tree-id23862 . -1) (undo-tree-id23863 . -1) (undo-tree-id23864 . -1) (undo-tree-id23865 . -1) (undo-tree-id23866 . -1) (undo-tree-id23867 . -1) (undo-tree-id23868 . -1) 923) nil (25944 42952 299293 0) 0 nil])
([nil nil ((922 . 927)) nil (25944 42952 299284 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -926) (undo-tree-id23853 . -1) (undo-tree-id23854 . -1) (undo-tree-id23855 . -1) (undo-tree-id23856 . -1) (undo-tree-id23857 . -1) (undo-tree-id23858 . -1) (undo-tree-id23859 . -1) (undo-tree-id23860 . -1) 927) nil (25944 42952 299583 0) 0 nil])
([nil nil ((926 . 927)) nil (25944 42973 261180 0) 0 nil] [nil nil ((926 . 927)) ((#("4" 0 1 (fontified t)) . 926) (undo-tree-id23914 . -1)) (25944 42952 299261 0) 0 nil])
([nil nil ((928 . 932)) nil (25944 42973 261179 0) 0 nil])
nil
([nil nil ((#("o" 0 1 (fontified t)) . -931) (undo-tree-id23925 . -1) (undo-tree-id23926 . -1) (undo-tree-id23927 . -1) 932) nil (25944 42973 261177 0) 0 nil])
([nil nil ((931 . 932)) nil (25944 42973 261173 0) 0 nil])
([nil nil ((932 . 933)) nil (25944 42973 261172 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -953) (undo-tree-id23915 . -1) (undo-tree-id23916 . -1) (undo-tree-id23917 . -1) (undo-tree-id23918 . -1) (undo-tree-id23919 . -1) (undo-tree-id23920 . -1) (undo-tree-id23921 . -1) (undo-tree-id23922 . -1) (undo-tree-id23923 . -1) (undo-tree-id23924 . -1) 954) nil (25944 42973 261170 0) 0 nil])
([nil nil ((953 . 955)) nil (25944 42973 261151 0) 0 nil])
([nil nil ((933 . 935)) nil (25944 42973 261150 0) 0 nil])
([nil nil ((934 . 935)) nil (25944 42973 261149 0) 0 nil])
([nil nil ((936 . 937)) nil (25944 42991 886205 0) 0 nil])
([nil nil ((#("map" 0 3 (fontified t)) . -929) (undo-tree-id25152 . -3) (undo-tree-id25153 . -3) (undo-tree-id25154 . -3) (undo-tree-id25155 . -3) (undo-tree-id25156 . -3) (undo-tree-id25157 . -3) (undo-tree-id25158 . -3) (undo-tree-id25159 . -3) (undo-tree-id25160 . -3) (undo-tree-id25161 . -3) (undo-tree-id25162 . -3) (undo-tree-id25163 . -3) (undo-tree-id25164 . -3) (undo-tree-id25165 . -3) (undo-tree-id25166 . -3) (undo-tree-id25167 . -3) (undo-tree-id25168 . -3) (undo-tree-id25169 . -3) (undo-tree-id25170 . -3) (undo-tree-id25171 . -3) (undo-tree-id25172 . -3) (undo-tree-id25173 . -3) (undo-tree-id25174 . -3) (undo-tree-id25175 . -3) (undo-tree-id25176 . -3) (undo-tree-id25177 . -3) (undo-tree-id25178 . -3) (undo-tree-id25179 . -3) (undo-tree-id25180 . -3) (undo-tree-id25181 . -3) (undo-tree-id25182 . -3) (undo-tree-id25183 . -3) (undo-tree-id25184 . -3) (undo-tree-id25185 . -3) (undo-tree-id25186 . -3) (undo-tree-id25187 . -3) (undo-tree-id25188 . -3) (undo-tree-id25189 . -3) (undo-tree-id25190 . -3) (undo-tree-id25191 . -3) (undo-tree-id25192 . -3) (undo-tree-id25193 . -3) (undo-tree-id25194 . -3) (undo-tree-id25195 . -3) (undo-tree-id25196 . -2) (undo-tree-id25197 . -2) (undo-tree-id25198 . -2) (undo-tree-id25199 . -2) (undo-tree-id25200 . -2) (undo-tree-id25201 . -3) (undo-tree-id25202 . -3) (undo-tree-id25203 . -3) (undo-tree-id25204 . -3) (undo-tree-id25205 . -3) 932 (t 25944 42992 956749 276000)) nil (25944 43058 905427 0) 0 nil] [nil nil ((#(";" 0 1 (fontified t)) . -958) (undo-tree-id23928 . -1) (undo-tree-id23929 . -1) (undo-tree-id23930 . -1) (undo-tree-id23931 . -1) (undo-tree-id23932 . -1) (undo-tree-id23933 . -1) (undo-tree-id23934 . -1) (undo-tree-id23935 . -1) (undo-tree-id23936 . -1) (undo-tree-id23937 . -1) (undo-tree-id23938 . -1) (undo-tree-id23939 . -1) (undo-tree-id23940 . -1) (undo-tree-id23941 . -1) (undo-tree-id23942 . -1) (undo-tree-id23943 . -1) 959 (t 25944 42973 313948 395000)) ((958 . 959) (t 25944 42986 757377 808000)) (25944 42986 705302 0) 0 nil])
([nil nil ((929 . 930)) nil (25944 43058 905375 0) 0 nil])
nil
([nil nil ((929 . 930)) nil (25944 43058 905374 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -929) (undo-tree-id25147 . -1) (undo-tree-id25148 . -1) (undo-tree-id25149 . -1) (undo-tree-id25150 . -1) (undo-tree-id25151 . -1) 930) nil (25944 43058 905372 0) 0 nil])
([nil nil ((929 . 930)) nil (25944 43058 905366 0) 0 nil])
([nil nil ((930 . 931)) nil (25944 43058 905366 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -929) (undo-tree-id25108 . -1) (undo-tree-id25109 . -1) (undo-tree-id25110 . -1) (undo-tree-id25111 . -1) (undo-tree-id25112 . -1) (undo-tree-id25113 . -1) (undo-tree-id25114 . -1) (undo-tree-id25115 . -1) (undo-tree-id25116 . -1) (undo-tree-id25117 . -1) (undo-tree-id25118 . -1) (undo-tree-id25119 . -1) (undo-tree-id25120 . -1) (undo-tree-id25121 . -1) (undo-tree-id25122 . -1) (undo-tree-id25123 . -1) (undo-tree-id25124 . -1) (undo-tree-id25125 . -1) (undo-tree-id25126 . -1) (undo-tree-id25127 . -1) (undo-tree-id25128 . -1) (undo-tree-id25129 . -1) (undo-tree-id25130 . -1) (undo-tree-id25131 . -1) (undo-tree-id25132 . -1) (undo-tree-id25133 . -1) (undo-tree-id25134 . -1) (undo-tree-id25135 . -1) (#("d" 0 1 (fontified t)) . -930) (undo-tree-id25136 . -1) (undo-tree-id25137 . -1) (undo-tree-id25138 . -1) (undo-tree-id25139 . -1) (undo-tree-id25140 . -1) (undo-tree-id25141 . -1) (undo-tree-id25142 . -1) (undo-tree-id25143 . -1) (undo-tree-id25144 . -1) (undo-tree-id25145 . -1) (undo-tree-id25146 . -1) 931) nil (25944 43058 905362 0) 0 nil])
([nil nil ((929 . 930)) nil (25944 43058 905324 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -929) (undo-tree-id25098 . -1) (undo-tree-id25099 . -1) (undo-tree-id25100 . -1) (undo-tree-id25101 . -1) (undo-tree-id25102 . -1) (undo-tree-id25103 . -1) (undo-tree-id25104 . -1) (undo-tree-id25105 . -1) (undo-tree-id25106 . -1) (undo-tree-id25107 . -1) 930) nil (25944 43058 905323 0) 0 nil])
([nil nil ((929 . 930)) nil (25944 43058 905312 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -929) (undo-tree-id25084 . -1) (undo-tree-id25085 . -1) (undo-tree-id25086 . -1) (undo-tree-id25087 . -1) (undo-tree-id25088 . -1) (undo-tree-id25089 . -1) (undo-tree-id25090 . -1) (undo-tree-id25091 . -1) (undo-tree-id25092 . -1) (undo-tree-id25093 . -1) (undo-tree-id25094 . -1) (undo-tree-id25095 . -1) (undo-tree-id25096 . -1) (undo-tree-id25097 . -1) 930) nil (25944 43058 905310 0) 0 nil])
([nil nil ((929 . 930)) nil (25944 43058 905296 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -929) (undo-tree-id25076 . -1) (undo-tree-id25077 . -1) (undo-tree-id25078 . -1) (undo-tree-id25079 . -1) (undo-tree-id25080 . -1) (undo-tree-id25081 . -1) (undo-tree-id25082 . -1) (undo-tree-id25083 . -1) 930) nil (25944 43058 905294 0) 0 nil])
([nil nil ((929 . 930)) nil (25944 43058 905285 0) 0 nil])
([nil nil ((929 . 937) (#("f" 0 1 (fontified nil)) . 929) (929 . 930) (#("for_each (as Iterator)" 0 22 (fontified nil)) . -929) (929 . 951) (#("f" 0 1 (fontified t)) . -929) (undo-tree-id25064 . -1) (undo-tree-id25065 . -1) (undo-tree-id25066 . -1) (undo-tree-id25067 . -1) (undo-tree-id25068 . -1) (undo-tree-id25069 . -1) (undo-tree-id25070 . -1) (undo-tree-id25071 . -1) (undo-tree-id25072 . -1) (undo-tree-id25073 . -1) (undo-tree-id25074 . -1) (undo-tree-id25075 . -1) 930) nil (25944 43058 905283 0) 0 nil])
([nil nil ((#("each" 0 4 (fontified t)) . -933) (undo-tree-id25054 . -4) (undo-tree-id25055 . -4) (undo-tree-id25056 . -4) (undo-tree-id25057 . -4) (undo-tree-id25058 . -4) (undo-tree-id25059 . -4) (undo-tree-id25060 . -4) (undo-tree-id25061 . -4) (undo-tree-id25062 . -4) (undo-tree-id25063 . -4) 937) nil (25944 43061 569074 0) 0 nil])
([nil nil ((933 . 934)) nil (25944 43076 376067 0) 0 nil] [nil nil ((#("for_" 0 4 (fontified t)) . -929) (undo-tree-id25041 . -4) (undo-tree-id25042 . -4) (undo-tree-id25043 . -4) (undo-tree-id25044 . -4) (undo-tree-id25045 . -4) (undo-tree-id25046 . -4) (undo-tree-id25047 . -4) (undo-tree-id25048 . -4) (undo-tree-id25049 . -4) (undo-tree-id25050 . -4) (undo-tree-id25051 . -4) (undo-tree-id25052 . -4) (undo-tree-id25053 . -4) 933) ((929 . 933)) (25944 43061 90053 0) 0 nil])
([nil nil ((929 . 937) (#("for_e" 0 5 (fontified nil)) . 929) (929 . 934) (#("for_each (as Iterator)" 0 22 (fontified nil)) . -929) (929 . 951) (#("for_e" 0 5 (fontified t)) . -929) (undo-tree-id25215 . -5) (undo-tree-id25216 . -5) (undo-tree-id25217 . -4) (undo-tree-id25218 . -4) (undo-tree-id25219 . -4) (undo-tree-id25220 . -4) (undo-tree-id25221 . -4) (undo-tree-id25222 . -4) (undo-tree-id25223 . -4) (undo-tree-id25224 . -4) (undo-tree-id25225 . -4) (undo-tree-id25226 . -4) (undo-tree-id25227 . -4) (undo-tree-id25228 . -4) (undo-tree-id25229 . -4) (undo-tree-id25230 . -4) (undo-tree-id25231 . -4) (undo-tree-id25232 . -4) (undo-tree-id25233 . -4) (undo-tree-id25234 . -4) (undo-tree-id25235 . -4) (undo-tree-id25236 . -4) (undo-tree-id25237 . -4) (undo-tree-id25238 . -5) (undo-tree-id25239 . -5) (undo-tree-id25240 . -5) (undo-tree-id25241 . -5) (undo-tree-id25242 . -5) (undo-tree-id25243 . -5) (undo-tree-id25244 . -5) 934) nil (25944 43076 376063 0) 0 nil])
([nil nil ((#("1024)." 0 4 (fontified t) 4 6 (fontified t)) . -923) (undo-tree-id24841 . -6) (undo-tree-id24842 . -6) (undo-tree-id24843 . -6) (undo-tree-id24844 . -6) (undo-tree-id24845 . -6) (undo-tree-id24846 . -6) (undo-tree-id24847 . -6) (undo-tree-id24848 . -6) (undo-tree-id24849 . -6) (undo-tree-id24850 . -6) (undo-tree-id24851 . -6) (undo-tree-id24852 . -6) (undo-tree-id24853 . -6) (undo-tree-id24854 . -6) (undo-tree-id24855 . -6) (undo-tree-id24856 . -6) (undo-tree-id24857 . -6) (undo-tree-id24858 . -6) (undo-tree-id24859 . -6) (undo-tree-id24860 . -6) (undo-tree-id24861 . -6) (undo-tree-id24862 . -6) (undo-tree-id24863 . -6) (undo-tree-id24864 . -6) (undo-tree-id24865 . -6) (undo-tree-id24866 . -6) (undo-tree-id24867 . -6) (undo-tree-id24868 . -6) (undo-tree-id24869 . -6) (undo-tree-id24870 . -6) (undo-tree-id24871 . -6) (undo-tree-id24872 . -6) (undo-tree-id24873 . -6) (undo-tree-id24874 . -6) (undo-tree-id24875 . -6) (undo-tree-id24876 . -6) (undo-tree-id24877 . -6) (undo-tree-id24878 . -6) (undo-tree-id24879 . -6) (undo-tree-id24880 . -6) (undo-tree-id24881 . -6) (undo-tree-id24882 . -6) (undo-tree-id24883 . -6) (undo-tree-id24884 . -6) (undo-tree-id24885 . -6) (undo-tree-id24886 . -6) (undo-tree-id24887 . -6) (undo-tree-id24888 . -6) (undo-tree-id24889 . -6) (undo-tree-id24890 . -6) (undo-tree-id24891 . -6) (undo-tree-id24892 . -6) (undo-tree-id24893 . -6) (undo-tree-id24894 . -6) (undo-tree-id24895 . -6) (undo-tree-id24896 . -6) (undo-tree-id24897 . -6) (undo-tree-id24898 . -6) (undo-tree-id24899 . -6) (undo-tree-id24900 . -6) (undo-tree-id24901 . -6) (undo-tree-id24902 . -6) (undo-tree-id24903 . -6) (undo-tree-id24904 . -6) (undo-tree-id24905 . -6) (undo-tree-id24906 . -6) (undo-tree-id24907 . -6) (undo-tree-id24908 . -6) (undo-tree-id24909 . -6) (undo-tree-id24910 . -6) (undo-tree-id24911 . -6) (undo-tree-id24912 . -6) (undo-tree-id24913 . -6) (undo-tree-id24914 . -6) (undo-tree-id24915 . -6) (undo-tree-id24916 . -6) (undo-tree-id24917 . -6) (undo-tree-id24918 . -6) (undo-tree-id24919 . -6) (undo-tree-id24920 . -6) (undo-tree-id24921 . -6) (undo-tree-id24922 . -6) (undo-tree-id24923 . -6) (undo-tree-id24924 . -6) (undo-tree-id24925 . -6) (undo-tree-id24926 . -6) (undo-tree-id24927 . -6) (undo-tree-id24928 . -6) (undo-tree-id24929 . -6) (undo-tree-id24930 . -6) (undo-tree-id24931 . -6) (undo-tree-id24932 . -6) (undo-tree-id24933 . -6) (undo-tree-id24934 . -6) (undo-tree-id24935 . -6) (undo-tree-id24936 . -6) (undo-tree-id24937 . -6) (undo-tree-id24938 . -6) (undo-tree-id24939 . -6) (undo-tree-id24940 . -6) (undo-tree-id24941 . -6) (undo-tree-id24942 . -6) (undo-tree-id24943 . -6) (undo-tree-id24944 . -6) (undo-tree-id24945 . -6) (undo-tree-id24946 . -6) (undo-tree-id24947 . -6) (undo-tree-id24948 . -6) (undo-tree-id24949 . -6) (undo-tree-id24950 . -6) (undo-tree-id24951 . -6) (undo-tree-id24952 . -6) (undo-tree-id24953 . -6) (undo-tree-id24954 . -6) (undo-tree-id24955 . -6) (undo-tree-id24956 . -6) (undo-tree-id24957 . -6) (undo-tree-id24958 . -6) (undo-tree-id24959 . -6) (undo-tree-id24960 . -6) (undo-tree-id24961 . -6) (undo-tree-id24962 . -6) (undo-tree-id24963 . -6) (undo-tree-id24964 . -6) (undo-tree-id24965 . -6) (undo-tree-id24966 . -6) (undo-tree-id24967 . -6) (undo-tree-id24968 . -6) (undo-tree-id24969 . -6) (undo-tree-id24970 . -6) (undo-tree-id24971 . -6) (undo-tree-id24972 . -6) (undo-tree-id24973 . -6) (undo-tree-id24974 . -6) (undo-tree-id24975 . -6) (undo-tree-id24976 . -6) (undo-tree-id24977 . -6) (undo-tree-id24978 . -6) (undo-tree-id24979 . -6) (undo-tree-id24980 . -6) (undo-tree-id24981 . -6) (undo-tree-id24982 . -6) (undo-tree-id24983 . -6) (undo-tree-id24984 . -6) (undo-tree-id24985 . -6) (undo-tree-id24986 . -6) (undo-tree-id24987 . -6) (undo-tree-id24988 . -6) (undo-tree-id24989 . -6) (undo-tree-id24990 . -6) (undo-tree-id24991 . -6) (undo-tree-id24992 . -6) (undo-tree-id24993 . -6) (undo-tree-id24994 . -6) (undo-tree-id24995 . -6) (undo-tree-id24996 . -6) (undo-tree-id24997 . -6) (undo-tree-id24998 . -6) (undo-tree-id24999 . -6) (undo-tree-id25000 . -6) (undo-tree-id25001 . -6) (undo-tree-id25002 . -6) (undo-tree-id25003 . -6) (undo-tree-id25004 . -6) (undo-tree-id25005 . -6) (undo-tree-id25006 . -6) (undo-tree-id25007 . -6) (undo-tree-id25008 . -6) (undo-tree-id25009 . -6) (undo-tree-id25010 . -6) (undo-tree-id25011 . -6) (undo-tree-id25012 . -6) (undo-tree-id25013 . -6) (undo-tree-id25014 . -6) (undo-tree-id25015 . -6) (undo-tree-id25016 . -6) (undo-tree-id25017 . -6) (undo-tree-id25018 . -6) (undo-tree-id25019 . -6) (undo-tree-id25020 . -6) (undo-tree-id25021 . -6) (undo-tree-id25022 . -6) (undo-tree-id25023 . -6) (undo-tree-id25024 . -6) (undo-tree-id25025 . -6) (undo-tree-id25026 . -6) (undo-tree-id25027 . -6) (undo-tree-id25028 . -6) (undo-tree-id25029 . -6) (undo-tree-id25030 . -6) (undo-tree-id25031 . -6) (undo-tree-id25032 . -6) (undo-tree-id25033 . -6) (undo-tree-id25034 . -6) (undo-tree-id25035 . -6) (undo-tree-id25036 . -6) (undo-tree-id25037 . -6) (undo-tree-id25038 . -6) (undo-tree-id25039 . -6) (undo-tree-id25040 . -6) 929) ((923 . 929)) (25944 43060 599453 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -937) (undo-tree-id25206 . -1) (undo-tree-id25207 . -1) (undo-tree-id25208 . -1) (undo-tree-id25209 . -1) (undo-tree-id25210 . -1) (undo-tree-id25211 . -1) (undo-tree-id25212 . -1) (undo-tree-id25213 . -1) (undo-tree-id25214 . -1) 938) nil (25944 43076 376018 0) 0 nil])
([nil nil ((#("len()-" 0 6 (fontified t)) . -917) (undo-tree-id24630 . -6) (undo-tree-id24631 . -6) (undo-tree-id24632 . -6) (undo-tree-id24633 . -6) (undo-tree-id24634 . -6) (undo-tree-id24635 . -6) (undo-tree-id24636 . -6) (undo-tree-id24637 . -6) (undo-tree-id24638 . -6) (undo-tree-id24639 . -6) (undo-tree-id24640 . -6) (undo-tree-id24641 . -6) (undo-tree-id24642 . -6) (undo-tree-id24643 . -6) (undo-tree-id24644 . -6) (undo-tree-id24645 . -6) (undo-tree-id24646 . -6) (undo-tree-id24647 . -6) (undo-tree-id24648 . -6) (undo-tree-id24649 . -6) (undo-tree-id24650 . -6) (undo-tree-id24651 . -6) (undo-tree-id24652 . -6) (undo-tree-id24653 . -6) (undo-tree-id24654 . -6) (undo-tree-id24655 . -6) (undo-tree-id24656 . -6) (undo-tree-id24657 . -6) (undo-tree-id24658 . -6) (undo-tree-id24659 . -6) (undo-tree-id24660 . -6) (undo-tree-id24661 . -6) (undo-tree-id24662 . -6) (undo-tree-id24663 . -6) (undo-tree-id24664 . -6) (undo-tree-id24665 . -6) (undo-tree-id24666 . -6) (undo-tree-id24667 . -6) (undo-tree-id24668 . -6) (undo-tree-id24669 . -6) (undo-tree-id24670 . -6) (undo-tree-id24671 . -6) (undo-tree-id24672 . -6) (undo-tree-id24673 . -6) (undo-tree-id24674 . -6) (undo-tree-id24675 . -6) (undo-tree-id24676 . -6) (undo-tree-id24677 . -6) (undo-tree-id24678 . -6) (undo-tree-id24679 . -6) (undo-tree-id24680 . -6) (undo-tree-id24681 . -6) (undo-tree-id24682 . -6) (undo-tree-id24683 . -6) (undo-tree-id24684 . -6) (undo-tree-id24685 . -6) (undo-tree-id24686 . -6) (undo-tree-id24687 . -6) (undo-tree-id24688 . -6) (undo-tree-id24689 . -6) (undo-tree-id24690 . -6) (undo-tree-id24691 . -6) (undo-tree-id24692 . -6) (undo-tree-id24693 . -6) (undo-tree-id24694 . -6) (undo-tree-id24695 . -6) (undo-tree-id24696 . -6) (undo-tree-id24697 . -6) (undo-tree-id24698 . -6) (undo-tree-id24699 . -6) (undo-tree-id24700 . -6) (undo-tree-id24701 . -6) (undo-tree-id24702 . -6) (undo-tree-id24703 . -6) (undo-tree-id24704 . -6) (undo-tree-id24705 . -6) (undo-tree-id24706 . -6) (undo-tree-id24707 . -6) (undo-tree-id24708 . -6) (undo-tree-id24709 . -6) (undo-tree-id24710 . -6) (undo-tree-id24711 . -6) (undo-tree-id24712 . -6) (undo-tree-id24713 . -6) (undo-tree-id24714 . -6) (undo-tree-id24715 . -6) (undo-tree-id24716 . -6) (undo-tree-id24717 . -6) (undo-tree-id24718 . -6) (undo-tree-id24719 . -6) (undo-tree-id24720 . -6) (undo-tree-id24721 . -6) (undo-tree-id24722 . -6) (undo-tree-id24723 . -6) (undo-tree-id24724 . -6) (undo-tree-id24725 . -6) (undo-tree-id24726 . -6) (undo-tree-id24727 . -6) (undo-tree-id24728 . -6) (undo-tree-id24729 . -6) (undo-tree-id24730 . -6) (undo-tree-id24731 . -6) (undo-tree-id24732 . -6) (undo-tree-id24733 . -6) (undo-tree-id24734 . -6) (undo-tree-id24735 . -6) (undo-tree-id24736 . -6) (undo-tree-id24737 . -6) (undo-tree-id24738 . -6) (undo-tree-id24739 . -6) (undo-tree-id24740 . -6) (undo-tree-id24741 . -6) (undo-tree-id24742 . -6) (undo-tree-id24743 . -6) (undo-tree-id24744 . -6) (undo-tree-id24745 . -6) (undo-tree-id24746 . -6) (undo-tree-id24747 . -6) (undo-tree-id24748 . -6) (undo-tree-id24749 . -6) (undo-tree-id24750 . -6) (undo-tree-id24751 . -6) (undo-tree-id24752 . -6) (undo-tree-id24753 . -6) (undo-tree-id24754 . -6) (undo-tree-id24755 . -6) (undo-tree-id24756 . -6) (undo-tree-id24757 . -6) (undo-tree-id24758 . -6) (undo-tree-id24759 . -6) (undo-tree-id24760 . -6) (undo-tree-id24761 . -6) (undo-tree-id24762 . -6) (undo-tree-id24763 . -6) (undo-tree-id24764 . -6) (undo-tree-id24765 . -6) (undo-tree-id24766 . -6) (undo-tree-id24767 . -6) (undo-tree-id24768 . -6) (undo-tree-id24769 . -6) (undo-tree-id24770 . -6) (undo-tree-id24771 . -6) (undo-tree-id24772 . -6) (undo-tree-id24773 . -6) (undo-tree-id24774 . -6) (undo-tree-id24775 . -6) (undo-tree-id24776 . -6) (undo-tree-id24777 . -6) (undo-tree-id24778 . -6) (undo-tree-id24779 . -6) (undo-tree-id24780 . -6) (undo-tree-id24781 . -6) (undo-tree-id24782 . -6) (undo-tree-id24783 . -6) (undo-tree-id24784 . -6) (undo-tree-id24785 . -6) (undo-tree-id24786 . -6) (undo-tree-id24787 . -6) (undo-tree-id24788 . -6) (undo-tree-id24789 . -6) (undo-tree-id24790 . -6) (undo-tree-id24791 . -6) (undo-tree-id24792 . -6) (undo-tree-id24793 . -6) (undo-tree-id24794 . -6) (undo-tree-id24795 . -6) (undo-tree-id24796 . -6) (undo-tree-id24797 . -6) (undo-tree-id24798 . -6) (undo-tree-id24799 . -6) (undo-tree-id24800 . -6) (undo-tree-id24801 . -6) (undo-tree-id24802 . -6) (undo-tree-id24803 . -6) (undo-tree-id24804 . -6) (undo-tree-id24805 . -6) (undo-tree-id24806 . -6) (undo-tree-id24807 . -6) (undo-tree-id24808 . -6) (undo-tree-id24809 . -6) (undo-tree-id24810 . -6) (undo-tree-id24811 . -6) (undo-tree-id24812 . -6) (undo-tree-id24813 . -6) (undo-tree-id24814 . -6) (undo-tree-id24815 . -6) (undo-tree-id24816 . -6) (undo-tree-id24817 . -6) (undo-tree-id24818 . -6) (undo-tree-id24819 . -6) (undo-tree-id24820 . -6) (undo-tree-id24821 . -6) (undo-tree-id24822 . -6) (undo-tree-id24823 . -6) (undo-tree-id24824 . -6) (undo-tree-id24825 . -6) (undo-tree-id24826 . -6) (undo-tree-id24827 . -6) (undo-tree-id24828 . -6) (undo-tree-id24829 . -6) (undo-tree-id24830 . -6) (undo-tree-id24831 . -6) (undo-tree-id24832 . -6) (undo-tree-id24833 . -6) (undo-tree-id24834 . -6) (undo-tree-id24835 . -6) (undo-tree-id24836 . -6) (undo-tree-id24837 . -6) (undo-tree-id24838 . -6) (undo-tree-id24839 . -6) (undo-tree-id24840 . -6) 923) ((917 . 923)) (25944 43059 990016 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -963) (undo-tree-id25245 . -1) (undo-tree-id25246 . -1) (undo-tree-id25247 . -1) (undo-tree-id25248 . -1) (undo-tree-id25249 . -1) (undo-tree-id25250 . -1) (undo-tree-id25251 . -1) (undo-tree-id25252 . -1) (undo-tree-id25253 . -1) (undo-tree-id25254 . -1) (undo-tree-id25255 . -1) (undo-tree-id25256 . -1) (undo-tree-id25257 . -1) (undo-tree-id25258 . -1) 964 (t 25944 43076 429260 347000)) nil (25944 43093 278014 0) 0 nil])
([nil nil ((#("events." 0 7 (fontified t)) . -910) (undo-tree-id24411 . -7) (undo-tree-id24412 . -7) (undo-tree-id24413 . -7) (undo-tree-id24414 . -7) (undo-tree-id24415 . -7) (undo-tree-id24416 . -7) (undo-tree-id24417 . -7) (undo-tree-id24418 . -7) (undo-tree-id24419 . -7) (undo-tree-id24420 . -7) (undo-tree-id24421 . -7) (undo-tree-id24422 . -7) (undo-tree-id24423 . -7) (undo-tree-id24424 . -7) (undo-tree-id24425 . -7) (undo-tree-id24426 . -7) (undo-tree-id24427 . -7) (undo-tree-id24428 . -7) (undo-tree-id24429 . -7) (undo-tree-id24430 . -7) (undo-tree-id24431 . -7) (undo-tree-id24432 . -7) (undo-tree-id24433 . -7) (undo-tree-id24434 . -7) (undo-tree-id24435 . -7) (undo-tree-id24436 . -7) (undo-tree-id24437 . -7) (undo-tree-id24438 . -7) (undo-tree-id24439 . -7) (undo-tree-id24440 . -7) (undo-tree-id24441 . -7) (undo-tree-id24442 . -7) (undo-tree-id24443 . -7) (undo-tree-id24444 . -7) (undo-tree-id24445 . -7) (undo-tree-id24446 . -7) (undo-tree-id24447 . -7) (undo-tree-id24448 . -7) (undo-tree-id24449 . -7) (undo-tree-id24450 . -7) (undo-tree-id24451 . -7) (undo-tree-id24452 . -7) (undo-tree-id24453 . -7) (undo-tree-id24454 . -7) (undo-tree-id24455 . -7) (undo-tree-id24456 . -7) (undo-tree-id24457 . -7) (undo-tree-id24458 . -7) (undo-tree-id24459 . -7) (undo-tree-id24460 . -7) (undo-tree-id24461 . -7) (undo-tree-id24462 . -7) (undo-tree-id24463 . -7) (undo-tree-id24464 . -7) (undo-tree-id24465 . -7) (undo-tree-id24466 . -7) (undo-tree-id24467 . -7) (undo-tree-id24468 . -7) (undo-tree-id24469 . -7) (undo-tree-id24470 . -7) (undo-tree-id24471 . -7) (undo-tree-id24472 . -7) (undo-tree-id24473 . -7) (undo-tree-id24474 . -7) (undo-tree-id24475 . -7) (undo-tree-id24476 . -7) (undo-tree-id24477 . -7) (undo-tree-id24478 . -7) (undo-tree-id24479 . -7) (undo-tree-id24480 . -7) (undo-tree-id24481 . -7) (undo-tree-id24482 . -7) (undo-tree-id24483 . -7) (undo-tree-id24484 . -7) (undo-tree-id24485 . -7) (undo-tree-id24486 . -7) (undo-tree-id24487 . -7) (undo-tree-id24488 . -7) (undo-tree-id24489 . -7) (undo-tree-id24490 . -7) (undo-tree-id24491 . -7) (undo-tree-id24492 . -7) (undo-tree-id24493 . -7) (undo-tree-id24494 . -7) (undo-tree-id24495 . -7) (undo-tree-id24496 . -7) (undo-tree-id24497 . -7) (undo-tree-id24498 . -7) (undo-tree-id24499 . -7) (undo-tree-id24500 . -7) (undo-tree-id24501 . -7) (undo-tree-id24502 . -7) (undo-tree-id24503 . -7) (undo-tree-id24504 . -7) (undo-tree-id24505 . -7) (undo-tree-id24506 . -7) (undo-tree-id24507 . -7) (undo-tree-id24508 . -7) (undo-tree-id24509 . -7) (undo-tree-id24510 . -7) (undo-tree-id24511 . -7) (undo-tree-id24512 . -7) (undo-tree-id24513 . -7) (undo-tree-id24514 . -7) (undo-tree-id24515 . -7) (undo-tree-id24516 . -7) (undo-tree-id24517 . -7) (undo-tree-id24518 . -7) (undo-tree-id24519 . -7) (undo-tree-id24520 . -7) (undo-tree-id24521 . -7) (undo-tree-id24522 . -7) (undo-tree-id24523 . -7) (undo-tree-id24524 . -7) (undo-tree-id24525 . -7) (undo-tree-id24526 . -7) (undo-tree-id24527 . -7) (undo-tree-id24528 . -7) (undo-tree-id24529 . -7) (undo-tree-id24530 . -7) (undo-tree-id24531 . -7) (undo-tree-id24532 . -7) (undo-tree-id24533 . -7) (undo-tree-id24534 . -7) (undo-tree-id24535 . -7) (undo-tree-id24536 . -7) (undo-tree-id24537 . -7) (undo-tree-id24538 . -7) (undo-tree-id24539 . -7) (undo-tree-id24540 . -7) (undo-tree-id24541 . -7) (undo-tree-id24542 . -7) (undo-tree-id24543 . -7) (undo-tree-id24544 . -7) (undo-tree-id24545 . -7) (undo-tree-id24546 . -7) (undo-tree-id24547 . -7) (undo-tree-id24548 . -7) (undo-tree-id24549 . -7) (undo-tree-id24550 . -7) (undo-tree-id24551 . -7) (undo-tree-id24552 . -7) (undo-tree-id24553 . -7) (undo-tree-id24554 . -7) (undo-tree-id24555 . -7) (undo-tree-id24556 . -7) (undo-tree-id24557 . -7) (undo-tree-id24558 . -7) (undo-tree-id24559 . -7) (undo-tree-id24560 . -7) (undo-tree-id24561 . -7) (undo-tree-id24562 . -7) (undo-tree-id24563 . -7) (undo-tree-id24564 . -7) (undo-tree-id24565 . -7) (undo-tree-id24566 . -7) (undo-tree-id24567 . -7) (undo-tree-id24568 . -7) (undo-tree-id24569 . -7) (undo-tree-id24570 . -7) (undo-tree-id24571 . -7) (undo-tree-id24572 . -7) (undo-tree-id24573 . -7) (undo-tree-id24574 . -7) (undo-tree-id24575 . -7) (undo-tree-id24576 . -7) (undo-tree-id24577 . -7) (undo-tree-id24578 . -7) (undo-tree-id24579 . -7) (undo-tree-id24580 . -7) (undo-tree-id24581 . -7) (undo-tree-id24582 . -7) (undo-tree-id24583 . -7) (undo-tree-id24584 . -7) (undo-tree-id24585 . -7) (undo-tree-id24586 . -7) (undo-tree-id24587 . -7) (undo-tree-id24588 . -7) (undo-tree-id24589 . -7) (undo-tree-id24590 . -7) (undo-tree-id24591 . -7) (undo-tree-id24592 . -7) (undo-tree-id24593 . -7) (undo-tree-id24594 . -7) (undo-tree-id24595 . -7) (undo-tree-id24596 . -7) (undo-tree-id24597 . -7) (undo-tree-id24598 . -7) (undo-tree-id24599 . -7) (undo-tree-id24600 . -7) (undo-tree-id24601 . -7) (undo-tree-id24602 . -7) (undo-tree-id24603 . -7) (undo-tree-id24604 . -7) (undo-tree-id24605 . -7) (undo-tree-id24606 . -7) (undo-tree-id24607 . -7) (undo-tree-id24608 . -7) (undo-tree-id24609 . -7) (undo-tree-id24610 . -7) (undo-tree-id24611 . -7) (undo-tree-id24612 . -7) (undo-tree-id24613 . -7) (undo-tree-id24614 . -7) (undo-tree-id24615 . -7) (undo-tree-id24616 . -7) (undo-tree-id24617 . -7) (undo-tree-id24618 . -7) (undo-tree-id24619 . -7) (undo-tree-id24620 . -7) (undo-tree-id24621 . -7) (undo-tree-id24622 . -7) (undo-tree-id24623 . -7) (undo-tree-id24624 . -7) (undo-tree-id24625 . -7) (undo-tree-id24626 . -7) (undo-tree-id24627 . -7) (undo-tree-id24628 . -7) (undo-tree-id24629 . -7) 917) ((910 . 917)) (25944 43059 517955 0) 0 nil])
([nil nil ((962 . 963) (t 25944 43093 331072 531000)) nil (25944 43104 299472 0) 0 nil])
([nil nil ((#("all_" 0 4 (fontified t)) . -906) (undo-tree-id24183 . -4) (undo-tree-id24184 . -4) (undo-tree-id24185 . -4) (undo-tree-id24186 . -4) (undo-tree-id24187 . -4) (undo-tree-id24188 . -4) (undo-tree-id24189 . -4) (undo-tree-id24190 . -4) (undo-tree-id24191 . -4) (undo-tree-id24192 . -4) (undo-tree-id24193 . -4) (undo-tree-id24194 . -4) (undo-tree-id24195 . -4) (undo-tree-id24196 . -4) (undo-tree-id24197 . -4) (undo-tree-id24198 . -4) (undo-tree-id24199 . -4) (undo-tree-id24200 . -4) (undo-tree-id24201 . -4) (undo-tree-id24202 . -4) (undo-tree-id24203 . -4) (undo-tree-id24204 . -4) (undo-tree-id24205 . -4) (undo-tree-id24206 . -4) (undo-tree-id24207 . -4) (undo-tree-id24208 . -4) (undo-tree-id24209 . -4) (undo-tree-id24210 . -4) (undo-tree-id24211 . -4) (undo-tree-id24212 . -4) (undo-tree-id24213 . -4) (undo-tree-id24214 . -4) (undo-tree-id24215 . -4) (undo-tree-id24216 . -4) (undo-tree-id24217 . -4) (undo-tree-id24218 . -4) (undo-tree-id24219 . -4) (undo-tree-id24220 . -4) (undo-tree-id24221 . -4) (undo-tree-id24222 . -4) (undo-tree-id24223 . -4) (undo-tree-id24224 . -4) (undo-tree-id24225 . -4) (undo-tree-id24226 . -4) (undo-tree-id24227 . -4) (undo-tree-id24228 . -4) (undo-tree-id24229 . -4) (undo-tree-id24230 . -4) (undo-tree-id24231 . -4) (undo-tree-id24232 . -4) (undo-tree-id24233 . -4) (undo-tree-id24234 . -4) (undo-tree-id24235 . -4) (undo-tree-id24236 . -4) (undo-tree-id24237 . -4) (undo-tree-id24238 . -4) (undo-tree-id24239 . -4) (undo-tree-id24240 . -4) (undo-tree-id24241 . -4) (undo-tree-id24242 . -4) (undo-tree-id24243 . -4) (undo-tree-id24244 . -4) (undo-tree-id24245 . -4) (undo-tree-id24246 . -4) (undo-tree-id24247 . -4) (undo-tree-id24248 . -4) (undo-tree-id24249 . -4) (undo-tree-id24250 . -4) (undo-tree-id24251 . -4) (undo-tree-id24252 . -4) (undo-tree-id24253 . -4) (undo-tree-id24254 . -4) (undo-tree-id24255 . -4) (undo-tree-id24256 . -4) (undo-tree-id24257 . -4) (undo-tree-id24258 . -4) (undo-tree-id24259 . -4) (undo-tree-id24260 . -4) (undo-tree-id24261 . -4) (undo-tree-id24262 . -4) (undo-tree-id24263 . -4) (undo-tree-id24264 . -4) (undo-tree-id24265 . -4) (undo-tree-id24266 . -4) (undo-tree-id24267 . -4) (undo-tree-id24268 . -4) (undo-tree-id24269 . -4) (undo-tree-id24270 . -4) (undo-tree-id24271 . -4) (undo-tree-id24272 . -4) (undo-tree-id24273 . -4) (undo-tree-id24274 . -4) (undo-tree-id24275 . -4) (undo-tree-id24276 . -4) (undo-tree-id24277 . -4) (undo-tree-id24278 . -4) (undo-tree-id24279 . -4) (undo-tree-id24280 . -4) (undo-tree-id24281 . -4) (undo-tree-id24282 . -4) (undo-tree-id24283 . -4) (undo-tree-id24284 . -4) (undo-tree-id24285 . -4) (undo-tree-id24286 . -4) (undo-tree-id24287 . -4) (undo-tree-id24288 . -4) (undo-tree-id24289 . -4) (undo-tree-id24290 . -4) (undo-tree-id24291 . -4) (undo-tree-id24292 . -4) (undo-tree-id24293 . -4) (undo-tree-id24294 . -4) (undo-tree-id24295 . -4) (undo-tree-id24296 . -4) (undo-tree-id24297 . -4) (undo-tree-id24298 . -4) (undo-tree-id24299 . -4) (undo-tree-id24300 . -4) (undo-tree-id24301 . -4) (undo-tree-id24302 . -4) (undo-tree-id24303 . -4) (undo-tree-id24304 . -4) (undo-tree-id24305 . -4) (undo-tree-id24306 . -4) (undo-tree-id24307 . -4) (undo-tree-id24308 . -4) (undo-tree-id24309 . -4) (undo-tree-id24310 . -4) (undo-tree-id24311 . -4) (undo-tree-id24312 . -4) (undo-tree-id24313 . -4) (undo-tree-id24314 . -4) (undo-tree-id24315 . -4) (undo-tree-id24316 . -4) (undo-tree-id24317 . -4) (undo-tree-id24318 . -4) (undo-tree-id24319 . -4) (undo-tree-id24320 . -4) (undo-tree-id24321 . -4) (undo-tree-id24322 . -4) (undo-tree-id24323 . -4) (undo-tree-id24324 . -4) (undo-tree-id24325 . -4) (undo-tree-id24326 . -4) (undo-tree-id24327 . -4) (undo-tree-id24328 . -4) (undo-tree-id24329 . -4) (undo-tree-id24330 . -4) (undo-tree-id24331 . -4) (undo-tree-id24332 . -4) (undo-tree-id24333 . -4) (undo-tree-id24334 . -4) (undo-tree-id24335 . -4) (undo-tree-id24336 . -4) (undo-tree-id24337 . -4) (undo-tree-id24338 . -4) (undo-tree-id24339 . -4) (undo-tree-id24340 . -4) (undo-tree-id24341 . -4) (undo-tree-id24342 . -4) (undo-tree-id24343 . -4) (undo-tree-id24344 . -4) (undo-tree-id24345 . -4) (undo-tree-id24346 . -4) (undo-tree-id24347 . -4) (undo-tree-id24348 . -4) (undo-tree-id24349 . -4) (undo-tree-id24350 . -4) (undo-tree-id24351 . -4) (undo-tree-id24352 . -4) (undo-tree-id24353 . -4) (undo-tree-id24354 . -4) (undo-tree-id24355 . -4) (undo-tree-id24356 . -4) (undo-tree-id24357 . -4) (undo-tree-id24358 . -4) (undo-tree-id24359 . -4) (undo-tree-id24360 . -4) (undo-tree-id24361 . -4) (undo-tree-id24362 . -4) (undo-tree-id24363 . -4) (undo-tree-id24364 . -4) (undo-tree-id24365 . -4) (undo-tree-id24366 . -4) (undo-tree-id24367 . -4) (undo-tree-id24368 . -4) (undo-tree-id24369 . -4) (undo-tree-id24370 . -4) (undo-tree-id24371 . -4) (undo-tree-id24372 . -4) (undo-tree-id24373 . -4) (undo-tree-id24374 . -4) (undo-tree-id24375 . -4) (undo-tree-id24376 . -4) (undo-tree-id24377 . -4) (undo-tree-id24378 . -4) (undo-tree-id24379 . -4) (undo-tree-id24380 . -4) (undo-tree-id24381 . -4) (undo-tree-id24382 . -4) (undo-tree-id24383 . -4) (undo-tree-id24384 . -4) (undo-tree-id24385 . -4) (undo-tree-id24386 . -4) (undo-tree-id24387 . -4) (undo-tree-id24388 . -4) (undo-tree-id24389 . -4) (undo-tree-id24390 . -4) (undo-tree-id24391 . -4) (undo-tree-id24392 . -4) (undo-tree-id24393 . -4) (undo-tree-id24394 . -4) (undo-tree-id24395 . -4) (undo-tree-id24396 . -4) (undo-tree-id24397 . -4) (undo-tree-id24398 . -4) (undo-tree-id24399 . -4) (undo-tree-id24400 . -4) (undo-tree-id24401 . -4) (undo-tree-id24402 . -4) (undo-tree-id24403 . -4) (undo-tree-id24404 . -4) (undo-tree-id24405 . -4) (undo-tree-id24406 . -4) (undo-tree-id24407 . -4) (undo-tree-id24408 . -4) (undo-tree-id24409 . -4) (undo-tree-id24410 . -4) 910) ((906 . 910)) (25944 43058 906118 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -962) (undo-tree-id25259 . -1) (undo-tree-id25260 . -1) (undo-tree-id25261 . -1) (undo-tree-id25262 . -1) (undo-tree-id25263 . -1) (undo-tree-id25264 . -1) (undo-tree-id25265 . -1) (undo-tree-id25266 . -1) (undo-tree-id25267 . -1) (undo-tree-id25268 . -1) (undo-tree-id25269 . -1) (undo-tree-id25270 . -1) (undo-tree-id25271 . -1) (undo-tree-id25272 . -1) (undo-tree-id25273 . -1) (undo-tree-id25274 . -1) (undo-tree-id25275 . -1) (undo-tree-id25276 . -1) (undo-tree-id25277 . -1) (undo-tree-id25278 . -1) (undo-tree-id25279 . -1) (undo-tree-id25280 . -1) (undo-tree-id25281 . -1) (undo-tree-id25282 . -1) (undo-tree-id25283 . -1) (undo-tree-id25284 . -1) (undo-tree-id25285 . -1) (undo-tree-id25286 . -1) (undo-tree-id25287 . -1) (undo-tree-id25288 . -1) (undo-tree-id25289 . -1) (undo-tree-id25290 . -1) (undo-tree-id25291 . -1) (undo-tree-id25292 . -1) (undo-tree-id25293 . -1) (undo-tree-id25294 . -1) (undo-tree-id25295 . -1) 963 (t 25944 43104 352149 896000)) nil (25944 43110 415797 0) 0 nil])
([nil nil ((#("0.." 0 3 (fontified t)) . -903) (undo-tree-id23944 . -3) (undo-tree-id23945 . -3) (undo-tree-id23946 . -3) (undo-tree-id23947 . -3) (undo-tree-id23948 . -3) (undo-tree-id23949 . -3) (undo-tree-id23950 . -3) (undo-tree-id23951 . -3) (undo-tree-id23952 . -3) (undo-tree-id23953 . -3) (undo-tree-id23954 . -3) (undo-tree-id23955 . -3) (undo-tree-id23956 . -3) (undo-tree-id23957 . -3) (undo-tree-id23958 . -3) (undo-tree-id23959 . -3) (undo-tree-id23960 . -3) (undo-tree-id23961 . -3) (undo-tree-id23962 . -3) (undo-tree-id23963 . -3) (undo-tree-id23964 . -3) (undo-tree-id23965 . -3) (undo-tree-id23966 . -3) (undo-tree-id23967 . -3) (undo-tree-id23968 . -3) (undo-tree-id23969 . -3) (undo-tree-id23970 . -3) (undo-tree-id23971 . -3) (undo-tree-id23972 . -3) (undo-tree-id23973 . -3) (undo-tree-id23974 . -3) (undo-tree-id23975 . -3) (undo-tree-id23976 . -3) (undo-tree-id23977 . -3) (undo-tree-id23978 . -3) (undo-tree-id23979 . -3) (undo-tree-id23980 . -3) (undo-tree-id23981 . -3) (undo-tree-id23982 . -3) (undo-tree-id23983 . -3) (undo-tree-id23984 . -3) (undo-tree-id23985 . -3) (undo-tree-id23986 . -3) (undo-tree-id23987 . -3) (undo-tree-id23988 . -3) (undo-tree-id23989 . -3) (undo-tree-id23990 . -3) (undo-tree-id23991 . -3) (undo-tree-id23992 . -3) (undo-tree-id23993 . -3) (undo-tree-id23994 . -3) (undo-tree-id23995 . -3) (undo-tree-id23996 . -3) (undo-tree-id23997 . -3) (undo-tree-id23998 . -3) (undo-tree-id23999 . -3) (undo-tree-id24000 . -3) (undo-tree-id24001 . -3) (undo-tree-id24002 . -3) (undo-tree-id24003 . -3) (undo-tree-id24004 . -3) (undo-tree-id24005 . -3) (undo-tree-id24006 . -3) (undo-tree-id24007 . -3) (undo-tree-id24008 . -3) (undo-tree-id24009 . -3) (undo-tree-id24010 . -3) (undo-tree-id24011 . -3) (undo-tree-id24012 . -3) (undo-tree-id24013 . -3) (undo-tree-id24014 . -3) (undo-tree-id24015 . -3) (undo-tree-id24016 . -3) (undo-tree-id24017 . -3) (undo-tree-id24018 . -3) (undo-tree-id24019 . -3) (undo-tree-id24020 . -3) (undo-tree-id24021 . -3) (undo-tree-id24022 . -3) (undo-tree-id24023 . -3) (undo-tree-id24024 . -3) (undo-tree-id24025 . -3) (undo-tree-id24026 . -3) (undo-tree-id24027 . -3) (undo-tree-id24028 . -3) (undo-tree-id24029 . -3) (undo-tree-id24030 . -3) (undo-tree-id24031 . -3) (undo-tree-id24032 . -3) (undo-tree-id24033 . -3) (undo-tree-id24034 . -3) (undo-tree-id24035 . -3) (undo-tree-id24036 . -3) (undo-tree-id24037 . -3) (undo-tree-id24038 . -3) (undo-tree-id24039 . -3) (undo-tree-id24040 . -3) (undo-tree-id24041 . -3) (undo-tree-id24042 . -3) (undo-tree-id24043 . -3) (undo-tree-id24044 . -3) (undo-tree-id24045 . -3) (undo-tree-id24046 . -3) (undo-tree-id24047 . -3) (undo-tree-id24048 . -3) (undo-tree-id24049 . -3) (undo-tree-id24050 . -3) (undo-tree-id24051 . -3) (undo-tree-id24052 . -3) (undo-tree-id24053 . -3) (undo-tree-id24054 . -3) (undo-tree-id24055 . -3) (undo-tree-id24056 . -3) (undo-tree-id24057 . -3) (undo-tree-id24058 . -3) (undo-tree-id24059 . -3) (undo-tree-id24060 . -3) (undo-tree-id24061 . -3) (undo-tree-id24062 . -3) (undo-tree-id24063 . -3) (undo-tree-id24064 . -3) (undo-tree-id24065 . -3) (undo-tree-id24066 . -3) (undo-tree-id24067 . -3) (undo-tree-id24068 . -3) (undo-tree-id24069 . -3) (undo-tree-id24070 . -3) (undo-tree-id24071 . -3) (undo-tree-id24072 . -3) (undo-tree-id24073 . -3) (undo-tree-id24074 . -3) (undo-tree-id24075 . -3) (undo-tree-id24076 . -3) (undo-tree-id24077 . -3) (undo-tree-id24078 . -3) (undo-tree-id24079 . -3) (undo-tree-id24080 . -3) (undo-tree-id24081 . -3) (undo-tree-id24082 . -3) (undo-tree-id24083 . -3) (undo-tree-id24084 . -3) (undo-tree-id24085 . -3) (undo-tree-id24086 . -3) (undo-tree-id24087 . -3) (undo-tree-id24088 . -3) (undo-tree-id24089 . -3) (undo-tree-id24090 . -3) (undo-tree-id24091 . -3) (undo-tree-id24092 . -3) (undo-tree-id24093 . -3) (undo-tree-id24094 . -3) (undo-tree-id24095 . -3) (undo-tree-id24096 . -3) (undo-tree-id24097 . -3) (undo-tree-id24098 . -3) (undo-tree-id24099 . -3) (undo-tree-id24100 . -3) (undo-tree-id24101 . -3) (undo-tree-id24102 . -3) (undo-tree-id24103 . -3) (undo-tree-id24104 . -3) (undo-tree-id24105 . -3) (undo-tree-id24106 . -3) (undo-tree-id24107 . -3) (undo-tree-id24108 . -3) (undo-tree-id24109 . -3) (undo-tree-id24110 . -3) (undo-tree-id24111 . -3) (undo-tree-id24112 . -3) (undo-tree-id24113 . -3) (undo-tree-id24114 . -3) (undo-tree-id24115 . -3) (undo-tree-id24116 . -3) (undo-tree-id24117 . -3) (undo-tree-id24118 . -3) (undo-tree-id24119 . -3) (undo-tree-id24120 . -3) (undo-tree-id24121 . -3) (undo-tree-id24122 . -3) (undo-tree-id24123 . -3) (undo-tree-id24124 . -3) (undo-tree-id24125 . -3) (undo-tree-id24126 . -3) (undo-tree-id24127 . -3) (undo-tree-id24128 . -3) (undo-tree-id24129 . -3) (undo-tree-id24130 . -3) (undo-tree-id24131 . -3) (undo-tree-id24132 . -3) (undo-tree-id24133 . -3) (undo-tree-id24134 . -3) (undo-tree-id24135 . -3) (undo-tree-id24136 . -3) (undo-tree-id24137 . -3) (undo-tree-id24138 . -3) (undo-tree-id24139 . -3) (undo-tree-id24140 . -3) (undo-tree-id24141 . -3) (undo-tree-id24142 . -3) (undo-tree-id24143 . -3) (undo-tree-id24144 . -3) (undo-tree-id24145 . -3) (undo-tree-id24146 . -3) (undo-tree-id24147 . -3) (undo-tree-id24148 . -3) (undo-tree-id24149 . -3) (undo-tree-id24150 . -3) (undo-tree-id24151 . -3) (undo-tree-id24152 . -3) (undo-tree-id24153 . -3) (undo-tree-id24154 . -3) (undo-tree-id24155 . -3) (undo-tree-id24156 . -3) (undo-tree-id24157 . -3) (undo-tree-id24158 . -3) (undo-tree-id24159 . -3) (undo-tree-id24160 . -3) (undo-tree-id24161 . -3) (undo-tree-id24162 . -3) (undo-tree-id24163 . -3) (undo-tree-id24164 . -3) (undo-tree-id24165 . -3) (undo-tree-id24166 . -3) (undo-tree-id24167 . -3) (undo-tree-id24168 . -3) (undo-tree-id24169 . -3) (undo-tree-id24170 . -3) (undo-tree-id24171 . -3) (undo-tree-id24172 . -3) (undo-tree-id24173 . -3) (undo-tree-id24174 . -3) (undo-tree-id24175 . -3) (undo-tree-id24176 . -3) (undo-tree-id24177 . -3) (undo-tree-id24178 . -3) (undo-tree-id24179 . -3) (undo-tree-id24180 . -3) (undo-tree-id24181 . -3) (undo-tree-id24182 . -3) 906) ((903 . 906)) (25944 43058 904369 0) 0 nil])
([nil nil ((962 . 963) (t 25944 43110 468874 489000)) nil (25944 43117 336769 0) 0 nil])
nil
([nil nil ((963 . 964)) nil (25944 43117 336768 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -963) (undo-tree-id25326 . -1) (undo-tree-id25327 . -1) (undo-tree-id25328 . -1) (undo-tree-id25329 . -1) (undo-tree-id25330 . -1) (undo-tree-id25331 . -1) 964) nil (25944 43117 336766 0) 0 nil])
([nil nil ((963 . 964)) nil (25944 43117 336759 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -962) (undo-tree-id25296 . -1) (undo-tree-id25297 . -1) (undo-tree-id25298 . -1) (undo-tree-id25299 . -1) (undo-tree-id25300 . -1) (undo-tree-id25301 . -1) (undo-tree-id25302 . -1) (undo-tree-id25303 . -1) (undo-tree-id25304 . -1) (undo-tree-id25305 . -1) (undo-tree-id25306 . -1) (undo-tree-id25307 . -1) (undo-tree-id25308 . -1) (undo-tree-id25309 . -1) (undo-tree-id25310 . -1) (undo-tree-id25311 . -1) (undo-tree-id25312 . -1) (undo-tree-id25313 . -1) (undo-tree-id25314 . -1) (undo-tree-id25315 . -1) (undo-tree-id25316 . -1) (undo-tree-id25317 . -1) (undo-tree-id25318 . -1) (undo-tree-id25319 . -1) (#("d" 0 1 (fontified t)) . -963) (undo-tree-id25320 . -1) (undo-tree-id25321 . -1) (undo-tree-id25322 . -1) (undo-tree-id25323 . -1) (undo-tree-id25324 . -1) (undo-tree-id25325 . -1) 964) nil (25944 43117 336753 0) 0 nil])
([nil nil ((962 . 963) (t 25944 43117 393394 447000)) nil (25944 43123 97266 0) 0 nil])
([nil nil ((963 . 965) (t 25944 43123 150016 599000)) nil (25944 43125 428961 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -962) (undo-tree-id25710 . -1) (undo-tree-id25711 . -1) (undo-tree-id25712 . -1) (undo-tree-id25713 . -1) (undo-tree-id25714 . -1) (undo-tree-id25715 . -1) (undo-tree-id25716 . -1) (undo-tree-id25717 . -1) (undo-tree-id25718 . -1) (undo-tree-id25719 . -1) (undo-tree-id25720 . -1) (undo-tree-id25721 . -1) (undo-tree-id25722 . -1) (undo-tree-id25723 . -1) (undo-tree-id25724 . -1) (undo-tree-id25725 . -1) (undo-tree-id25726 . -1) (undo-tree-id25727 . -1) (undo-tree-id25728 . -1) (undo-tree-id25729 . -1) (undo-tree-id25730 . -1) (undo-tree-id25731 . -1) (undo-tree-id25732 . -1) (undo-tree-id25733 . -1) (undo-tree-id25734 . -1) (undo-tree-id25735 . -1) (undo-tree-id25736 . -1) (undo-tree-id25737 . -1) (undo-tree-id25738 . -1) (undo-tree-id25739 . -1) (undo-tree-id25740 . -1) (undo-tree-id25741 . -1) (undo-tree-id25742 . -1) (undo-tree-id25743 . -1) (undo-tree-id25744 . -1) (undo-tree-id25745 . -1) (undo-tree-id25746 . -1) (undo-tree-id25747 . -1) (undo-tree-id25748 . -1) (undo-tree-id25749 . -1) (undo-tree-id25750 . -1) (undo-tree-id25751 . -1) (undo-tree-id25752 . -1) (undo-tree-id25753 . -1) (undo-tree-id25754 . -1) (undo-tree-id25755 . -1) (#("(" 0 1 (fontified t)) . -963) (undo-tree-id25756 . -1) (undo-tree-id25757 . -1) (undo-tree-id25758 . -1) (undo-tree-id25759 . -1) (undo-tree-id25760 . -1) (undo-tree-id25761 . -1) (undo-tree-id25762 . -1) (undo-tree-id25763 . -1) (undo-tree-id25764 . -1) (undo-tree-id25765 . -1) (undo-tree-id25766 . -1) (undo-tree-id25767 . -1) (undo-tree-id25768 . -1) (undo-tree-id25769 . -1) (undo-tree-id25770 . -1) (undo-tree-id25771 . -1) (undo-tree-id25772 . -1) (undo-tree-id25773 . -1) (undo-tree-id25774 . -1) (undo-tree-id25775 . -1) (undo-tree-id25776 . -1) (undo-tree-id25777 . -1) (undo-tree-id25778 . -1) (undo-tree-id25779 . -1) (undo-tree-id25780 . -1) (undo-tree-id25781 . -1) (undo-tree-id25782 . -1) (undo-tree-id25783 . -1) (undo-tree-id25784 . -1) (undo-tree-id25785 . -1) (undo-tree-id25786 . -1) (undo-tree-id25787 . -1) (undo-tree-id25788 . -1) (undo-tree-id25789 . -1) (undo-tree-id25790 . -1) (undo-tree-id25791 . -1) (undo-tree-id25792 . -1) (#(")" 0 1 (fontified t)) . -964) (undo-tree-id25793 . -1) (undo-tree-id25794 . -1) (undo-tree-id25795 . -1) (undo-tree-id25796 . -1) (undo-tree-id25797 . -1) (undo-tree-id25798 . -1) (undo-tree-id25799 . -1) (undo-tree-id25800 . -1) (undo-tree-id25801 . -1) (undo-tree-id25802 . -1) (undo-tree-id25803 . -1) (undo-tree-id25804 . -1) (undo-tree-id25805 . -1) (undo-tree-id25806 . -1) (undo-tree-id25807 . -1) (undo-tree-id25808 . -1) (undo-tree-id25809 . -1) (undo-tree-id25810 . -1) (undo-tree-id25811 . -1) (undo-tree-id25812 . -1) (undo-tree-id25813 . -1) (undo-tree-id25814 . -1) (undo-tree-id25815 . -1) (undo-tree-id25816 . -1) (undo-tree-id25817 . -1) (undo-tree-id25818 . -1) (undo-tree-id25819 . -1) (undo-tree-id25820 . -1) 965 (t 25944 43125 482354 110000)) nil (25944 43177 380160 0) 0 nil])
([nil nil ((#("0)" 0 2 (fontified t)) . -960) (undo-tree-id25651 . -2) (undo-tree-id25652 . -2) (undo-tree-id25653 . -2) (undo-tree-id25654 . -2) (undo-tree-id25655 . -2) (undo-tree-id25656 . -2) (undo-tree-id25657 . -2) (undo-tree-id25658 . -2) (undo-tree-id25659 . -2) (undo-tree-id25660 . -2) (undo-tree-id25661 . -2) (undo-tree-id25662 . -2) (undo-tree-id25663 . -2) (undo-tree-id25664 . -2) (undo-tree-id25665 . -2) (undo-tree-id25666 . -2) (undo-tree-id25667 . -2) (undo-tree-id25668 . -2) (undo-tree-id25669 . -2) (undo-tree-id25670 . -2) (undo-tree-id25671 . -2) (undo-tree-id25672 . -2) (undo-tree-id25673 . -2) (undo-tree-id25674 . -2) (undo-tree-id25675 . -2) (undo-tree-id25676 . -2) (undo-tree-id25677 . -2) (undo-tree-id25678 . -2) (undo-tree-id25679 . -2) (undo-tree-id25680 . -2) (undo-tree-id25681 . -2) (undo-tree-id25682 . -2) (undo-tree-id25683 . -2) (undo-tree-id25684 . -2) (undo-tree-id25685 . -2) (undo-tree-id25686 . -2) (undo-tree-id25687 . -2) (undo-tree-id25688 . -2) (undo-tree-id25689 . -2) (undo-tree-id25690 . -2) (undo-tree-id25691 . -2) (undo-tree-id25692 . -2) (undo-tree-id25693 . -2) (undo-tree-id25694 . -2) (undo-tree-id25695 . -2) (undo-tree-id25696 . -2) (undo-tree-id25697 . -2) (undo-tree-id25698 . -2) (undo-tree-id25699 . -2) (undo-tree-id25700 . -2) (undo-tree-id25701 . -2) (undo-tree-id25702 . -2) (undo-tree-id25703 . -2) (undo-tree-id25704 . -2) (undo-tree-id25705 . -2) (undo-tree-id25706 . -2) (undo-tree-id25707 . -2) (undo-tree-id25708 . -2) (undo-tree-id25709 . -2) 962) nil (25944 43177 380051 0) 0 nil])
([nil nil ((#("remove(" 0 7 (fontified t)) . -953) (undo-tree-id25583 . -4) (undo-tree-id25584 . -7) (undo-tree-id25585 . -7) (undo-tree-id25586 . -7) (undo-tree-id25587 . -7) (undo-tree-id25588 . -7) (undo-tree-id25589 . -7) (undo-tree-id25590 . -7) (undo-tree-id25591 . -7) (undo-tree-id25592 . -7) (undo-tree-id25593 . -7) (undo-tree-id25594 . -7) (undo-tree-id25595 . -7) (undo-tree-id25596 . -7) (undo-tree-id25597 . -7) (undo-tree-id25598 . -7) (undo-tree-id25599 . -7) (undo-tree-id25600 . -7) (undo-tree-id25601 . -7) (undo-tree-id25602 . -7) (undo-tree-id25603 . -7) (undo-tree-id25604 . -7) (undo-tree-id25605 . -7) (undo-tree-id25606 . -7) (undo-tree-id25607 . -7) (undo-tree-id25608 . -7) (undo-tree-id25609 . -7) (undo-tree-id25610 . -7) (undo-tree-id25611 . -7) (undo-tree-id25612 . -7) (undo-tree-id25613 . -7) (undo-tree-id25614 . -7) (undo-tree-id25615 . -7) (undo-tree-id25616 . -7) (undo-tree-id25617 . -7) (undo-tree-id25618 . -7) (undo-tree-id25619 . -7) (undo-tree-id25620 . -7) (undo-tree-id25621 . -7) (undo-tree-id25622 . -7) (undo-tree-id25623 . -7) (undo-tree-id25624 . -7) (undo-tree-id25625 . -7) (undo-tree-id25626 . -7) (undo-tree-id25627 . -7) (undo-tree-id25628 . -7) (undo-tree-id25629 . -7) (undo-tree-id25630 . -7) (undo-tree-id25631 . -7) (undo-tree-id25632 . -7) (undo-tree-id25633 . -7) (undo-tree-id25634 . -7) (undo-tree-id25635 . -7) (undo-tree-id25636 . -7) (undo-tree-id25637 . -7) (undo-tree-id25638 . -7) (undo-tree-id25639 . -7) (undo-tree-id25640 . -7) (undo-tree-id25641 . -7) (undo-tree-id25642 . -7) (undo-tree-id25643 . -7) (undo-tree-id25644 . -7) (undo-tree-id25645 . -7) (undo-tree-id25646 . -7) (undo-tree-id25647 . -7) (undo-tree-id25648 . -7) (undo-tree-id25649 . -7) (undo-tree-id25650 . -7) 960) nil (25944 43177 379992 0) 0 nil])
([nil nil ((#("events." 0 7 (fontified t)) . -946) (undo-tree-id25506 . -7) (undo-tree-id25507 . -7) (undo-tree-id25508 . -7) (undo-tree-id25509 . -7) (undo-tree-id25510 . -7) (undo-tree-id25511 . -7) (undo-tree-id25512 . -7) (undo-tree-id25513 . -7) (undo-tree-id25514 . -7) (undo-tree-id25515 . -7) (undo-tree-id25516 . -7) (undo-tree-id25517 . -7) (undo-tree-id25518 . -7) (undo-tree-id25519 . -7) (undo-tree-id25520 . -7) (undo-tree-id25521 . -7) (undo-tree-id25522 . -7) (undo-tree-id25523 . -7) (undo-tree-id25524 . -7) (undo-tree-id25525 . -7) (undo-tree-id25526 . -7) (undo-tree-id25527 . -7) (undo-tree-id25528 . -7) (undo-tree-id25529 . -7) (undo-tree-id25530 . -7) (undo-tree-id25531 . -7) (undo-tree-id25532 . -7) (undo-tree-id25533 . -7) (undo-tree-id25534 . -7) (undo-tree-id25535 . -7) (undo-tree-id25536 . -7) (undo-tree-id25537 . -7) (undo-tree-id25538 . -7) (undo-tree-id25539 . -7) (undo-tree-id25540 . -7) (undo-tree-id25541 . -7) (undo-tree-id25542 . -7) (undo-tree-id25543 . -7) (undo-tree-id25544 . -7) (undo-tree-id25545 . -7) (undo-tree-id25546 . -7) (undo-tree-id25547 . -7) (undo-tree-id25548 . -7) (undo-tree-id25549 . -7) (undo-tree-id25550 . -7) (undo-tree-id25551 . -7) (undo-tree-id25552 . -7) (undo-tree-id25553 . -7) (undo-tree-id25554 . -7) (undo-tree-id25555 . -7) (undo-tree-id25556 . -7) (undo-tree-id25557 . -7) (undo-tree-id25558 . -7) (undo-tree-id25559 . -7) (undo-tree-id25560 . -7) (undo-tree-id25561 . -7) (undo-tree-id25562 . -7) (undo-tree-id25563 . -7) (undo-tree-id25564 . -7) (undo-tree-id25565 . -7) (undo-tree-id25566 . -7) (undo-tree-id25567 . -7) (undo-tree-id25568 . -7) (undo-tree-id25569 . -7) (undo-tree-id25570 . -7) (undo-tree-id25571 . -7) (undo-tree-id25572 . -7) (undo-tree-id25573 . -7) (undo-tree-id25574 . -7) (undo-tree-id25575 . -7) (undo-tree-id25576 . -7) (undo-tree-id25577 . -7) (undo-tree-id25578 . -7) (undo-tree-id25579 . -7) (undo-tree-id25580 . -7) (undo-tree-id25581 . -7) (undo-tree-id25582 . -7) 953) nil (25944 43177 379924 0) 0 nil])
([nil nil ((#("all_" 0 4 (fontified t)) . -942) (undo-tree-id25422 . -4) (undo-tree-id25423 . -4) (undo-tree-id25424 . -4) (undo-tree-id25425 . -4) (undo-tree-id25426 . -4) (undo-tree-id25427 . -4) (undo-tree-id25428 . -4) (undo-tree-id25429 . -4) (undo-tree-id25430 . -4) (undo-tree-id25431 . -4) (undo-tree-id25432 . -4) (undo-tree-id25433 . -4) (undo-tree-id25434 . -4) (undo-tree-id25435 . -4) (undo-tree-id25436 . -4) (undo-tree-id25437 . -4) (undo-tree-id25438 . -4) (undo-tree-id25439 . -4) (undo-tree-id25440 . -4) (undo-tree-id25441 . -4) (undo-tree-id25442 . -4) (undo-tree-id25443 . -4) (undo-tree-id25444 . -4) (undo-tree-id25445 . -4) (undo-tree-id25446 . -4) (undo-tree-id25447 . -4) (undo-tree-id25448 . -4) (undo-tree-id25449 . -4) (undo-tree-id25450 . -4) (undo-tree-id25451 . -4) (undo-tree-id25452 . -4) (undo-tree-id25453 . -4) (undo-tree-id25454 . -4) (undo-tree-id25455 . -4) (undo-tree-id25456 . -4) (undo-tree-id25457 . -4) (undo-tree-id25458 . -4) (undo-tree-id25459 . -4) (undo-tree-id25460 . -4) (undo-tree-id25461 . -4) (undo-tree-id25462 . -4) (undo-tree-id25463 . -4) (undo-tree-id25464 . -4) (undo-tree-id25465 . -4) (undo-tree-id25466 . -4) (undo-tree-id25467 . -4) (undo-tree-id25468 . -4) (undo-tree-id25469 . -4) (undo-tree-id25470 . -4) (undo-tree-id25471 . -4) (undo-tree-id25472 . -4) (undo-tree-id25473 . -4) (undo-tree-id25474 . -4) (undo-tree-id25475 . -4) (undo-tree-id25476 . -4) (undo-tree-id25477 . -4) (undo-tree-id25478 . -4) (undo-tree-id25479 . -4) (undo-tree-id25480 . -4) (undo-tree-id25481 . -4) (undo-tree-id25482 . -4) (undo-tree-id25483 . -4) (undo-tree-id25484 . -4) (undo-tree-id25485 . -4) (undo-tree-id25486 . -4) (undo-tree-id25487 . -4) (undo-tree-id25488 . -4) (undo-tree-id25489 . -4) (undo-tree-id25490 . -4) (undo-tree-id25491 . -4) (undo-tree-id25492 . -4) (undo-tree-id25493 . -4) (undo-tree-id25494 . -4) (undo-tree-id25495 . -4) (undo-tree-id25496 . -4) (undo-tree-id25497 . -4) (undo-tree-id25498 . -4) (undo-tree-id25499 . -4) (undo-tree-id25500 . -4) (undo-tree-id25501 . -4) (undo-tree-id25502 . -4) (undo-tree-id25503 . -4) (undo-tree-id25504 . -4) (undo-tree-id25505 . -4) 946) nil (25944 43177 379844 0) 0 nil])
([nil nil ((942 . 944)) nil (25944 43177 379759 0) 0 nil])
([nil nil ((943 . 946)) nil (25944 43177 379758 0) 0 nil])
([nil nil ((943 . 953) (#("all" 0 3 (fontified nil)) . 943) (943 . 946) (#("all_events" 0 10 (fontified nil)) . -943) (943 . 953) (#("all" 0 3 (fontified t)) . -943) (undo-tree-id25409 . -3) (undo-tree-id25410 . -1) (undo-tree-id25411 . -1) (undo-tree-id25412 . -1) (undo-tree-id25413 . -1) (undo-tree-id25414 . -2) (undo-tree-id25415 . -2) (undo-tree-id25416 . -2) (undo-tree-id25417 . -3) (undo-tree-id25418 . -3) (undo-tree-id25419 . -3) (undo-tree-id25420 . -3) (undo-tree-id25421 . -3) 946) nil (25944 43177 379756 0) 0 nil])
([nil nil ((953 . 956)) nil (25944 43177 379740 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 962 972 nil nil nil nil #s(yas--exit 973 nil))) #s(yas--exit 973 nil) 100 nil #s(yas--field 1 962 972 nil nil nil nil #s(yas--exit 973 nil)) nil nil)) (954 . 973) (#("reserve(${1:additional})$0" 0 26 (fontified nil)) . 954) (954 . 980) (#("re" 0 2 (fontified nil)) . 954) (954 . 956) (#("reserve(…)" 0 10 (fontified nil)) . -954) (954 . 964) (#("re" 0 2 (fontified t)) . -954) (undo-tree-id25401 . -2) (undo-tree-id25402 . -1) (undo-tree-id25403 . -1) (undo-tree-id25404 . -2) (undo-tree-id25405 . -2) (undo-tree-id25406 . -2) (undo-tree-id25407 . -2) (undo-tree-id25408 . -2) 956) nil (25944 43177 379738 0) 0 nil])
([nil nil ((apply yas--snippet-revive 954 973 #s(yas--snippet nil (#s(yas--field 1 962 972 nil nil nil nil #s(yas--exit 973 nil))) #s(yas--exit 973 nil) 100 nil #s(yas--field 1 962 972 nil nil nil nil #s(yas--exit 973 nil)) nil nil))) nil (25944 43177 379727 0) 0 nil])
([nil nil ((#("reserve" 0 7 (fontified t)) . -954) (undo-tree-id25352 . -3) (undo-tree-id25353 . -3) (undo-tree-id25354 . -3) (undo-tree-id25355 . -3) (undo-tree-id25356 . -7) (undo-tree-id25357 . -3) (undo-tree-id25358 . -3) (undo-tree-id25359 . -3) (undo-tree-id25360 . -3) (undo-tree-id25361 . -3) (undo-tree-id25362 . -3) (undo-tree-id25363 . -3) (undo-tree-id25364 . -3) (undo-tree-id25365 . -3) (undo-tree-id25366 . -3) (undo-tree-id25367 . -3) (undo-tree-id25368 . -3) (undo-tree-id25369 . -3) (undo-tree-id25370 . -3) (undo-tree-id25371 . -3) (undo-tree-id25372 . -3) (undo-tree-id25373 . -3) (undo-tree-id25374 . -3) (undo-tree-id25375 . -3) (undo-tree-id25376 . -3) (undo-tree-id25377 . -3) (undo-tree-id25378 . -3) (undo-tree-id25379 . -3) (undo-tree-id25380 . -3) (undo-tree-id25381 . -4) (undo-tree-id25382 . -4) (undo-tree-id25383 . -4) (undo-tree-id25384 . -4) (undo-tree-id25385 . -4) (undo-tree-id25386 . -5) (undo-tree-id25387 . -5) (undo-tree-id25388 . -5) (undo-tree-id25389 . -6) (undo-tree-id25390 . -6) (undo-tree-id25391 . -6) (undo-tree-id25392 . -6) (undo-tree-id25393 . -6) (undo-tree-id25394 . -6) (undo-tree-id25395 . -6) (undo-tree-id25396 . -7) (undo-tree-id25397 . -7) (undo-tree-id25398 . -7) (undo-tree-id25399 . -7) (undo-tree-id25400 . -7) 961) nil (25944 43177 379723 0) 0 nil])
([nil nil ((954 . 958)) nil (25944 43177 379666 0) 0 nil])
([nil nil ((954 . 960) (#("remo" 0 4 (fontified nil)) . 954) (954 . 958) (#("remove" 0 6 (fontified nil)) . -954) (954 . 960) (#("remo" 0 4 (fontified t)) . -954) (undo-tree-id25344 . -2) (undo-tree-id25345 . -4) (undo-tree-id25346 . -2) (undo-tree-id25347 . -3) (undo-tree-id25348 . -3) (undo-tree-id25349 . -4) (undo-tree-id25350 . -4) (undo-tree-id25351 . -4) 958) nil (25944 43177 379664 0) 0 nil])
([nil nil ((#("additional" 0 10 (fontified t)) . -961) (undo-tree-id25332 . -10) (undo-tree-id25333 . -10) (undo-tree-id25334 . -10) (undo-tree-id25335 . -10) (undo-tree-id25336 . -10) (undo-tree-id25337 . -10) (undo-tree-id25338 . -10) (undo-tree-id25339 . -10) (undo-tree-id25340 . -10) (undo-tree-id25341 . -10) (undo-tree-id25342 . -10) (undo-tree-id25343 . -10) 971) nil (25944 43177 379652 0) 0 nil])
([nil nil ((961 . 962)) nil (25944 43177 379627 0) 0 nil])
([nil nil ((963 . 964) (t 25944 43177 435165 286000)) nil (25944 43180 145179 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -895) (undo-tree-id25901 . -1) (undo-tree-id25902 . -1) (undo-tree-id25903 . -1) (undo-tree-id25904 . -1) (undo-tree-id25905 . -1) (undo-tree-id25906 . -1) (undo-tree-id25907 . -1) (undo-tree-id25908 . -1) (undo-tree-id25909 . -1) (undo-tree-id25910 . -1) (undo-tree-id25911 . -1) (undo-tree-id25912 . -1) (undo-tree-id25913 . -1) (undo-tree-id25914 . -1) (undo-tree-id25915 . -1) (#("0" 0 1 (fontified t)) . -896) (undo-tree-id25916 . -1) (undo-tree-id25917 . -1) (undo-tree-id25918 . -1) (undo-tree-id25919 . -1) (undo-tree-id25920 . -1) (undo-tree-id25921 . -1) (undo-tree-id25922 . -1) (undo-tree-id25923 . -1) (undo-tree-id25924 . -1) (undo-tree-id25925 . -1) (undo-tree-id25926 . -1) (undo-tree-id25927 . -1) (#("2" 0 1 (fontified t)) . -897) (undo-tree-id25928 . -1) (undo-tree-id25929 . -1) (undo-tree-id25930 . -1) (undo-tree-id25931 . -1) (undo-tree-id25932 . -1) (undo-tree-id25933 . -1) (undo-tree-id25934 . -1) (undo-tree-id25935 . -1) (undo-tree-id25936 . -1) (#("4" 0 1 (fontified t)) . -898) (undo-tree-id25937 . -1) (undo-tree-id25938 . -1) (undo-tree-id25939 . -1) (undo-tree-id25940 . -1) (undo-tree-id25941 . -1) (undo-tree-id25942 . -1) 899 (t 25944 43180 199316 641000)) nil (25944 43631 375375 0) 0 nil])
([nil nil ((895 . 897)) nil (25944 43631 375332 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -896) (undo-tree-id25895 . -1) (undo-tree-id25896 . -1) (undo-tree-id25897 . -1) (undo-tree-id25898 . -1) (undo-tree-id25899 . -1) (undo-tree-id25900 . -1) 897) nil (25944 43631 375330 0) 0 nil])
([nil nil ((896 . 898)) nil (25944 43631 375323 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -1984) (undo-tree-id25823 . -1) (undo-tree-id25824 . -1) (undo-tree-id25825 . -1) (undo-tree-id25826 . -1) (undo-tree-id25827 . -1) (undo-tree-id25828 . -1) (undo-tree-id25829 . -1) (undo-tree-id25830 . -1) (undo-tree-id25831 . -1) (undo-tree-id25832 . -1) (undo-tree-id25833 . -1) (undo-tree-id25834 . -1) (undo-tree-id25835 . -1) (undo-tree-id25836 . -1) (undo-tree-id25837 . -1) (undo-tree-id25838 . -1) (undo-tree-id25839 . -1) (undo-tree-id25840 . -1) (undo-tree-id25841 . -1) (undo-tree-id25842 . -1) (undo-tree-id25843 . -1) (#("0" 0 1 (fontified t)) . -1985) (undo-tree-id25844 . -1) (undo-tree-id25845 . -1) (undo-tree-id25846 . -1) (undo-tree-id25847 . -1) (undo-tree-id25848 . -1) (undo-tree-id25849 . -1) (undo-tree-id25850 . -1) (undo-tree-id25851 . -1) (undo-tree-id25852 . -1) (undo-tree-id25853 . -1) (undo-tree-id25854 . -1) (undo-tree-id25855 . -1) (undo-tree-id25856 . -1) (undo-tree-id25857 . -1) (undo-tree-id25858 . -1) (undo-tree-id25859 . -1) (undo-tree-id25860 . -1) (undo-tree-id25861 . -1) (#("2" 0 1 (fontified t)) . -1986) (undo-tree-id25862 . -1) (undo-tree-id25863 . -1) (undo-tree-id25864 . -1) (undo-tree-id25865 . -1) (undo-tree-id25866 . -1) (undo-tree-id25867 . -1) (undo-tree-id25868 . -1) (undo-tree-id25869 . -1) (undo-tree-id25870 . -1) (undo-tree-id25871 . -1) (undo-tree-id25872 . -1) (undo-tree-id25873 . -1) (undo-tree-id25874 . -1) (undo-tree-id25875 . -1) (undo-tree-id25876 . -1) (undo-tree-id25877 . -1) (undo-tree-id25878 . -1) (#("4" 0 1 (fontified t)) . -1987) (undo-tree-id25879 . -1) (undo-tree-id25880 . -1) (undo-tree-id25881 . -1) (undo-tree-id25882 . -1) (undo-tree-id25883 . -1) (undo-tree-id25884 . -1) (undo-tree-id25885 . -1) (undo-tree-id25886 . -1) (undo-tree-id25887 . -1) (undo-tree-id25888 . -1) (undo-tree-id25889 . -1) (undo-tree-id25890 . -1) (undo-tree-id25891 . -1) (undo-tree-id25892 . -1) (undo-tree-id25893 . -1) (undo-tree-id25894 . -1) 1988) nil (25944 43631 375318 0) 0 nil])
([nil nil ((1984 . 1986)) nil (25944 43631 375240 0) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -1985) (undo-tree-id25821 . -1) (undo-tree-id25822 . -1) 1986) nil (25944 43631 375238 0) 0 nil])
([nil nil ((1985 . 1987)) nil (25944 43631 375222 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -922) (undo-tree-id25960 . -1) (undo-tree-id25961 . -1) (undo-tree-id25962 . -1) (undo-tree-id25963 . -1) (undo-tree-id25964 . -1) (undo-tree-id25965 . -1) (undo-tree-id25966 . -1) (undo-tree-id25967 . -1) (undo-tree-id25968 . -1) (undo-tree-id25969 . -1) (undo-tree-id25970 . -1) (undo-tree-id25971 . -1) (undo-tree-id25972 . -1) (undo-tree-id25973 . -1) (undo-tree-id25974 . -1) (undo-tree-id25975 . -1) (undo-tree-id25976 . -1) (undo-tree-id25977 . -1) (undo-tree-id25978 . -1) (undo-tree-id25979 . -1) (undo-tree-id25980 . -1) (undo-tree-id25981 . -1) (undo-tree-id25982 . -1) (undo-tree-id25983 . -1) (undo-tree-id25984 . -1) (undo-tree-id25985 . -1) (undo-tree-id25986 . -1) (undo-tree-id25987 . -1) (undo-tree-id25988 . -1) (undo-tree-id25989 . -1) (undo-tree-id25990 . -1) (undo-tree-id25991 . -1) (undo-tree-id25992 . -1) (undo-tree-id25993 . -1) (#("0" 0 1 (fontified t)) . -923) (undo-tree-id25994 . -1) (undo-tree-id25995 . -1) (undo-tree-id25996 . -1) (undo-tree-id25997 . -1) (undo-tree-id25998 . -1) (undo-tree-id25999 . -1) (undo-tree-id26000 . -1) (undo-tree-id26001 . -1) (undo-tree-id26002 . -1) (undo-tree-id26003 . -1) (undo-tree-id26004 . -1) (undo-tree-id26005 . -1) (undo-tree-id26006 . -1) (undo-tree-id26007 . -1) (undo-tree-id26008 . -1) (undo-tree-id26009 . -1) (undo-tree-id26010 . -1) (undo-tree-id26011 . -1) (undo-tree-id26012 . -1) (undo-tree-id26013 . -1) (undo-tree-id26014 . -1) (undo-tree-id26015 . -1) (undo-tree-id26016 . -1) (undo-tree-id26017 . -1) (undo-tree-id26018 . -1) (undo-tree-id26019 . -1) (undo-tree-id26020 . -1) (undo-tree-id26021 . -1) (undo-tree-id26022 . -1) (undo-tree-id26023 . -1) (undo-tree-id26024 . -1) (#("2" 0 1 (fontified t)) . -924) (undo-tree-id26025 . -1) (undo-tree-id26026 . -1) (undo-tree-id26027 . -1) (undo-tree-id26028 . -1) (undo-tree-id26029 . -1) (undo-tree-id26030 . -1) (undo-tree-id26031 . -1) (undo-tree-id26032 . -1) (undo-tree-id26033 . -1) (undo-tree-id26034 . -1) (undo-tree-id26035 . -1) (undo-tree-id26036 . -1) (undo-tree-id26037 . -1) (undo-tree-id26038 . -1) (undo-tree-id26039 . -1) (undo-tree-id26040 . -1) (undo-tree-id26041 . -1) (undo-tree-id26042 . -1) (undo-tree-id26043 . -1) (undo-tree-id26044 . -1) (undo-tree-id26045 . -1) (undo-tree-id26046 . -1) (undo-tree-id26047 . -1) (undo-tree-id26048 . -1) (undo-tree-id26049 . -1) (undo-tree-id26050 . -1) (undo-tree-id26051 . -1) (undo-tree-id26052 . -1) (#("4" 0 1 (fontified t)) . -925) (undo-tree-id26053 . -1) (undo-tree-id26054 . -1) (undo-tree-id26055 . -1) (undo-tree-id26056 . -1) (undo-tree-id26057 . -1) (undo-tree-id26058 . -1) (undo-tree-id26059 . -1) (undo-tree-id26060 . -1) (undo-tree-id26061 . -1) (undo-tree-id26062 . -1) 926 (t 25944 43631 430472 857000)) nil (25944 43655 242117 0) 0 nil])
([nil nil ((922 . 923)) nil (25944 43655 242013 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -922) (undo-tree-id25957 . -1) (undo-tree-id25958 . -1) (undo-tree-id25959 . -1) 923) nil (25944 43655 242011 0) 0 nil])
([nil nil ((922 . 925)) nil (25944 43655 242007 0) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -923) (undo-tree-id25943 . -1) (undo-tree-id25944 . -1) (undo-tree-id25945 . -1) (undo-tree-id25946 . -1) (undo-tree-id25947 . -1) (undo-tree-id25948 . -1) (undo-tree-id25949 . -1) (undo-tree-id25950 . -1) (undo-tree-id25951 . -1) (undo-tree-id25952 . -1) (#("5" 0 1 (fontified t)) . -924) (undo-tree-id25953 . -1) (undo-tree-id25954 . -1) (undo-tree-id25955 . -1) (undo-tree-id25956 . -1) 925) nil (25944 43655 242004 0) 0 nil])
([nil nil ((923 . 925)) nil (25944 43655 241978 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -922) (undo-tree-id26165 . -1) (undo-tree-id26166 . -1) (undo-tree-id26167 . -1) (undo-tree-id26168 . -1) (undo-tree-id26169 . -1) (undo-tree-id26170 . -1) (undo-tree-id26171 . -1) (undo-tree-id26172 . -1) (undo-tree-id26173 . -1) (undo-tree-id26174 . -1) (undo-tree-id26175 . -1) (undo-tree-id26176 . -1) (undo-tree-id26177 . -1) (undo-tree-id26178 . -1) (undo-tree-id26179 . -1) (undo-tree-id26180 . -1) (undo-tree-id26181 . -1) (undo-tree-id26182 . -1) (undo-tree-id26183 . -1) (undo-tree-id26184 . -1) (undo-tree-id26185 . -1) (undo-tree-id26186 . -1) (undo-tree-id26187 . -1) (undo-tree-id26188 . -1) (undo-tree-id26189 . -1) (undo-tree-id26190 . -1) (undo-tree-id26191 . -1) (undo-tree-id26192 . -1) (undo-tree-id26193 . -1) (undo-tree-id26194 . -1) (undo-tree-id26195 . -1) (undo-tree-id26196 . -1) (undo-tree-id26197 . -1) (undo-tree-id26198 . -1) (undo-tree-id26199 . -1) (undo-tree-id26200 . -1) (undo-tree-id26201 . -1) (undo-tree-id26202 . -1) (undo-tree-id26203 . -1) (undo-tree-id26204 . -1) (undo-tree-id26205 . -1) (undo-tree-id26206 . -1) (undo-tree-id26207 . -1) (undo-tree-id26208 . -1) (undo-tree-id26209 . -1) (undo-tree-id26210 . -1) (undo-tree-id26211 . -1) (undo-tree-id26212 . -1) (undo-tree-id26213 . -1) (undo-tree-id26214 . -1) (undo-tree-id26215 . -1) (undo-tree-id26216 . -1) (undo-tree-id26217 . -1) (undo-tree-id26218 . -1) (#("5" 0 1 (fontified t)) . -923) (undo-tree-id26219 . -1) (undo-tree-id26220 . -1) (undo-tree-id26221 . -1) (undo-tree-id26222 . -1) (undo-tree-id26223 . -1) (undo-tree-id26224 . -1) (undo-tree-id26225 . -1) (undo-tree-id26226 . -1) (undo-tree-id26227 . -1) (undo-tree-id26228 . -1) (undo-tree-id26229 . -1) (undo-tree-id26230 . -1) (undo-tree-id26231 . -1) (undo-tree-id26232 . -1) (undo-tree-id26233 . -1) (undo-tree-id26234 . -1) (undo-tree-id26235 . -1) (undo-tree-id26236 . -1) (undo-tree-id26237 . -1) (undo-tree-id26238 . -1) (undo-tree-id26239 . -1) (undo-tree-id26240 . -1) (undo-tree-id26241 . -1) (undo-tree-id26242 . -1) (undo-tree-id26243 . -1) (undo-tree-id26244 . -1) (undo-tree-id26245 . -1) (undo-tree-id26246 . -1) (undo-tree-id26247 . -1) (undo-tree-id26248 . -1) (undo-tree-id26249 . -1) (undo-tree-id26250 . -1) (undo-tree-id26251 . -1) (undo-tree-id26252 . -1) (undo-tree-id26253 . -1) (undo-tree-id26254 . -1) (undo-tree-id26255 . -1) (undo-tree-id26256 . -1) (undo-tree-id26257 . -1) (undo-tree-id26258 . -1) (undo-tree-id26259 . -1) (undo-tree-id26260 . -1) (#("6" 0 1 (fontified t)) . -924) (undo-tree-id26261 . -1) (undo-tree-id26262 . -1) (undo-tree-id26263 . -1) (undo-tree-id26264 . -1) (undo-tree-id26265 . -1) (undo-tree-id26266 . -1) (undo-tree-id26267 . -1) (undo-tree-id26268 . -1) (undo-tree-id26269 . -1) (undo-tree-id26270 . -1) (undo-tree-id26271 . -1) (undo-tree-id26272 . -1) (undo-tree-id26273 . -1) (undo-tree-id26274 . -1) (undo-tree-id26275 . -1) (undo-tree-id26276 . -1) (undo-tree-id26277 . -1) (undo-tree-id26278 . -1) (undo-tree-id26279 . -1) (undo-tree-id26280 . -1) (undo-tree-id26281 . -1) (undo-tree-id26282 . -1) (undo-tree-id26283 . -1) (undo-tree-id26284 . -1) (undo-tree-id26285 . -1) (undo-tree-id26286 . -1) (undo-tree-id26287 . -1) (undo-tree-id26288 . -1) (undo-tree-id26289 . -1) (undo-tree-id26290 . -1) (undo-tree-id26291 . -1) (undo-tree-id26292 . -1) (undo-tree-id26293 . -1) (undo-tree-id26294 . -1) (undo-tree-id26295 . -1) (undo-tree-id26296 . -1) (undo-tree-id26297 . -1) (undo-tree-id26298 . -1) (undo-tree-id26299 . -1) 925 (t 25944 43655 296497 408000)) nil (25944 43695 23969 0) 0 nil])
([nil nil ((922 . 925)) nil (25944 43695 23830 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -895) (undo-tree-id26120 . -1) (undo-tree-id26121 . -1) (undo-tree-id26122 . -1) (undo-tree-id26123 . -1) (undo-tree-id26124 . -1) (undo-tree-id26125 . -1) (undo-tree-id26126 . -1) (undo-tree-id26127 . -1) (undo-tree-id26128 . -1) (undo-tree-id26129 . -1) (undo-tree-id26130 . -1) (undo-tree-id26131 . -1) (undo-tree-id26132 . -1) (undo-tree-id26133 . -1) (undo-tree-id26134 . -1) (undo-tree-id26135 . -1) (undo-tree-id26136 . -1) (undo-tree-id26137 . -1) (#("5" 0 1 (fontified t)) . -896) (undo-tree-id26138 . -1) (undo-tree-id26139 . -1) (undo-tree-id26140 . -1) (undo-tree-id26141 . -1) (undo-tree-id26142 . -1) (undo-tree-id26143 . -1) (undo-tree-id26144 . -1) (undo-tree-id26145 . -1) (undo-tree-id26146 . -1) (undo-tree-id26147 . -1) (undo-tree-id26148 . -1) (undo-tree-id26149 . -1) (undo-tree-id26150 . -1) (undo-tree-id26151 . -1) (undo-tree-id26152 . -1) (#("6" 0 1 (fontified t)) . -897) (undo-tree-id26153 . -1) (undo-tree-id26154 . -1) (undo-tree-id26155 . -1) (undo-tree-id26156 . -1) (undo-tree-id26157 . -1) (undo-tree-id26158 . -1) (undo-tree-id26159 . -1) (undo-tree-id26160 . -1) (undo-tree-id26161 . -1) (undo-tree-id26162 . -1) (undo-tree-id26163 . -1) (undo-tree-id26164 . -1) 898) nil (25944 43695 23826 0) 0 nil])
([nil nil ((895 . 898)) nil (25944 43695 23777 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -1983) (undo-tree-id26063 . -1) (undo-tree-id26064 . -1) (undo-tree-id26065 . -1) (undo-tree-id26066 . -1) (undo-tree-id26067 . -1) (undo-tree-id26068 . -1) (undo-tree-id26069 . -1) (undo-tree-id26070 . -1) (undo-tree-id26071 . -1) (undo-tree-id26072 . -1) (undo-tree-id26073 . -1) (undo-tree-id26074 . -1) (undo-tree-id26075 . -1) (undo-tree-id26076 . -1) (undo-tree-id26077 . -1) (undo-tree-id26078 . -1) (undo-tree-id26079 . -1) (undo-tree-id26080 . -1) (undo-tree-id26081 . -1) (undo-tree-id26082 . -1) (undo-tree-id26083 . -1) (undo-tree-id26084 . -1) (#("5" 0 1 (fontified t)) . -1984) (undo-tree-id26085 . -1) (undo-tree-id26086 . -1) (undo-tree-id26087 . -1) (undo-tree-id26088 . -1) (undo-tree-id26089 . -1) (undo-tree-id26090 . -1) (undo-tree-id26091 . -1) (undo-tree-id26092 . -1) (undo-tree-id26093 . -1) (undo-tree-id26094 . -1) (undo-tree-id26095 . -1) (undo-tree-id26096 . -1) (undo-tree-id26097 . -1) (undo-tree-id26098 . -1) (undo-tree-id26099 . -1) (undo-tree-id26100 . -1) (undo-tree-id26101 . -1) (undo-tree-id26102 . -1) (undo-tree-id26103 . -1) (#("6" 0 1 (fontified t)) . -1985) (undo-tree-id26104 . -1) (undo-tree-id26105 . -1) (undo-tree-id26106 . -1) (undo-tree-id26107 . -1) (undo-tree-id26108 . -1) (undo-tree-id26109 . -1) (undo-tree-id26110 . -1) (undo-tree-id26111 . -1) (undo-tree-id26112 . -1) (undo-tree-id26113 . -1) (undo-tree-id26114 . -1) (undo-tree-id26115 . -1) (undo-tree-id26116 . -1) (undo-tree-id26117 . -1) (undo-tree-id26118 . -1) (undo-tree-id26119 . -1) 1986) nil (25944 43695 23773 0) 0 nil])
([nil nil ((1983 . 1986)) nil (25944 43695 23706 0) 0 nil])
([nil nil ((1740 . 1741) (#("	" 0 1 (fontified nil)) . 1739) (undo-tree-id26340 . -1) (1738 . 1741) (t 25944 43695 82868 375000)) nil (25944 44243 672939 0) 0 nil])
([nil nil ((1741 . 1747)) nil (25944 44243 672936 0) 0 nil])
([nil nil ((1746 . 1758)) nil (25944 44243 672936 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1757) (undo-tree-id26338 . -1) (undo-tree-id26339 . -1) 1758) nil (25944 44243 672934 0) 0 nil])
([nil nil ((1758 . 1761)) nil (25944 44243 672931 0) 0 nil])
([nil nil ((1761 . 1763)) nil (25944 44243 672930 0) 0 nil])
([nil nil ((1761 . 1773) (#("dr" 0 2 (fontified nil)) . 1761) (1761 . 1763) (#("drawing_area" 0 12 (fontified nil)) . -1761) (1761 . 1773) (#("dr" 0 2 (fontified t)) . -1761) (undo-tree-id26333 . -2) (undo-tree-id26334 . -2) (undo-tree-id26335 . -2) (undo-tree-id26336 . -2) (undo-tree-id26337 . -2) 1763) nil (25944 44243 672928 0) 0 nil])
([nil nil ((1773 . 1776)) nil (25944 44243 672921 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1793 1794 nil nil nil nil #s(yas--exit 1795 nil))) #s(yas--exit 1795 nil) 101 nil #s(yas--field 1 1793 1794 nil nil nil nil #s(yas--exit 1795 nil)) nil nil)) (1774 . 1795) (#("split_horizontally(${1:x})$0" 0 28 (fontified nil)) . 1774) (1774 . 1802) (#("sp" 0 2 (fontified nil)) . 1774) (1774 . 1776) (#("split_horizontally(…)" 0 21 (fontified nil)) . -1774) (1774 . 1795) (#("sp" 0 2 (fontified t)) . -1774) (undo-tree-id26322 . -2) (undo-tree-id26323 . -2) (undo-tree-id26324 . -1) (undo-tree-id26325 . -1) (undo-tree-id26326 . -1) (undo-tree-id26327 . -1) (undo-tree-id26328 . -1) (undo-tree-id26329 . -2) (undo-tree-id26330 . -2) (undo-tree-id26331 . -2) (undo-tree-id26332 . -2) 1776) nil (25944 44243 672918 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1774 1795 #s(yas--snippet nil (#s(yas--field 1 1793 1794 nil nil nil nil #s(yas--exit 1795 nil))) #s(yas--exit 1795 nil) 101 nil #s(yas--field 1 1793 1794 nil nil nil nil #s(yas--exit 1795 nil)) nil nil))) nil (25944 44243 672903 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -1793) (undo-tree-id26308 . -1) (undo-tree-id26309 . -1) (undo-tree-id26310 . -1) (undo-tree-id26311 . -1) (undo-tree-id26312 . -1) (undo-tree-id26313 . -1) (undo-tree-id26314 . -1) (undo-tree-id26315 . -1) (undo-tree-id26316 . -1) (undo-tree-id26317 . -1) (undo-tree-id26318 . -1) (undo-tree-id26319 . -1) (undo-tree-id26320 . -1) (undo-tree-id26321 . -1) 1794) nil (25944 44243 672901 0) 0 nil])
([nil nil ((1793 . 1796)) nil (25944 44243 672885 0) 0 nil])
([nil nil ((1797 . 1799)) nil (25944 44243 672884 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1797) (undo-tree-id26300 . -1) (undo-tree-id26301 . -1) (undo-tree-id26302 . -1) (undo-tree-id26303 . -1) (undo-tree-id26304 . -1) (undo-tree-id26305 . -1) (#(";" 0 1 (fontified t)) . -1798) (undo-tree-id26306 . -1) (undo-tree-id26307 . -1) 1799) nil (25944 44243 672881 0) 0 nil])
([nil nil ((1797 . 1798)) nil (25944 44243 672854 0) 0 nil])
([nil nil ((#("area" 0 4 (fontified t)) . -1844) (undo-tree-id26401 . -4) (undo-tree-id26402 . -4) (undo-tree-id26403 . -3) (undo-tree-id26404 . -3) (undo-tree-id26405 . -3) (undo-tree-id26406 . -3) (undo-tree-id26407 . -3) (undo-tree-id26408 . -3) (undo-tree-id26409 . -3) (undo-tree-id26410 . -3) (undo-tree-id26411 . -3) (undo-tree-id26412 . -3) (undo-tree-id26413 . -3) (undo-tree-id26414 . -3) (undo-tree-id26415 . -3) (undo-tree-id26416 . -3) (undo-tree-id26417 . -3) (undo-tree-id26418 . -3) (undo-tree-id26419 . -3) (undo-tree-id26420 . -4) (undo-tree-id26421 . -4) (undo-tree-id26422 . -4) (undo-tree-id26423 . -4) (undo-tree-id26424 . -4) (undo-tree-id26425 . -4) (undo-tree-id26426 . -4) (undo-tree-id26427 . -4) (undo-tree-id26428 . -4) (undo-tree-id26429 . -4) (undo-tree-id26430 . -4) (undo-tree-id26431 . -4) (undo-tree-id26432 . -4) (undo-tree-id26433 . -4) 1848 (t 25944 44243 730320 55000)) nil (25944 44257 444249 0) 0 nil])
([nil nil ((#("drawing_" 0 8 (fontified t)) . -1836) (undo-tree-id26350 . -8) (undo-tree-id26351 . -8) (undo-tree-id26352 . -3) (undo-tree-id26353 . -3) (undo-tree-id26354 . -3) (undo-tree-id26355 . -3) (undo-tree-id26356 . -3) (undo-tree-id26357 . -3) (undo-tree-id26358 . -3) (undo-tree-id26359 . -3) (undo-tree-id26360 . -3) (undo-tree-id26361 . -3) (undo-tree-id26362 . -3) (undo-tree-id26363 . -3) (undo-tree-id26364 . -3) (undo-tree-id26365 . -3) (undo-tree-id26366 . -3) (undo-tree-id26367 . -8) (undo-tree-id26368 . -8) (undo-tree-id26369 . -8) (undo-tree-id26370 . -8) (undo-tree-id26371 . -8) (undo-tree-id26372 . -8) (undo-tree-id26373 . -8) (undo-tree-id26374 . -8) (undo-tree-id26375 . -8) (undo-tree-id26376 . -8) (undo-tree-id26377 . -8) (undo-tree-id26378 . -8) (undo-tree-id26379 . -8) (undo-tree-id26380 . -8) (undo-tree-id26381 . -8) (undo-tree-id26382 . -8) (undo-tree-id26383 . -8) (undo-tree-id26384 . -8) (undo-tree-id26385 . -8) (undo-tree-id26386 . -8) (undo-tree-id26387 . -8) (undo-tree-id26388 . -8) (undo-tree-id26389 . -8) (undo-tree-id26390 . -8) (undo-tree-id26391 . -8) (undo-tree-id26392 . -8) (undo-tree-id26393 . -8) (undo-tree-id26394 . -8) (undo-tree-id26395 . -8) (undo-tree-id26396 . -8) (undo-tree-id26397 . -8) (undo-tree-id26398 . -8) (undo-tree-id26399 . -8) (undo-tree-id26400 . -8) 1844) nil (25944 44257 444213 0) 0 nil])
([nil nil ((1836 . 1840)) nil (25944 44257 444156 0) 0 nil])
([nil nil ((1836 . 1840) (#("left" 0 4 (fontified nil)) . 1836) (1836 . 1840) (#("left" 0 4 (fontified t)) . -1836) (undo-tree-id26341 . -4) (undo-tree-id26342 . -1) (undo-tree-id26343 . -2) (undo-tree-id26344 . -3) (undo-tree-id26345 . -3) (undo-tree-id26346 . -4) (undo-tree-id26347 . -4) (undo-tree-id26348 . -4) (undo-tree-id26349 . -4) 1840) nil (25944 44257 444151 0) 0 nil])
([nil nil ((2447 . 2457) (t 25944 44257 499031 573000)) nil (25944 44311 998369 0) 0 nil])
([nil nil ((1680 . 1682) (t 25944 44312 54981 33000)) nil (25944 44918 152555 0) 0 nil])
([nil nil ((1682 . 1694)) nil (25944 44918 152554 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1693) (undo-tree-id26978 . -1) 1694) nil (25944 44918 152552 0) 0 nil])
([nil nil ((#("	let rect = " 0 1 (fontified t) 1 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 9 (face font-lock-variable-name-face fontified t) 9 12 (fontified t)) . 1681)) nil (25944 44918 152550 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1681) (undo-tree-id26977 . -1)) nil (25944 44918 152549 0) 0 nil])
([nil nil ((1523 . 1525)) nil (25944 44918 152547 0) 0 nil])
([nil nil ((1525 . 1539)) nil (25944 44918 152546 0) 0 nil])
([nil nil ((1536 . 1542) (#("can" 0 3 (fontified nil)) . 1536) (1536 . 1539) (#("canvas" 0 6 (fontified nil)) . -1536) (1536 . 1542) (#("can" 0 3 (fontified t)) . -1536) (undo-tree-id26976 . -3) 1539) nil (25944 44918 152544 0) 0 nil])
([nil nil ((1542 . 1544)) nil (25944 44918 152541 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -1543) (undo-tree-id26974 . -1) (undo-tree-id26975 . -1) 1544) nil (25944 44918 152540 0) 0 nil])
([nil nil ((1543 . 1545)) nil (25944 44918 152536 0) 0 nil])
([nil nil ((1545 . 1546)) nil (25944 44918 152535 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1543) (undo-tree-id26971 . -1) (#("i" 0 1 (fontified t)) . -1544) (undo-tree-id26972 . -1) (#("z" 0 1 (fontified t)) . -1545) (undo-tree-id26973 . -1) 1546) nil (25944 44918 152534 0) 0 nil])
([nil nil ((1543 . 1544)) nil (25944 44918 152529 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1543) (undo-tree-id26969 . -1) (undo-tree-id26970 . -1) 1544) nil (25944 44918 152528 0) 0 nil])
([nil nil ((1543 . 1544)) nil (25944 44918 152524 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1543 1559 #s(yas--snippet nil nil #s(yas--exit 1559 nil) 102 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1559 nil) 102 nil nil nil nil)) (1543 . 1559) (#("parent_element()$0" 0 18 (fontified nil)) . 1543) (1543 . 1561) (#("p" 0 1 (fontified nil)) . 1543) (1543 . 1544) (#("parent_element()" 0 16 (fontified nil)) . -1543) (1543 . 1559) (#("p" 0 1 (fontified t)) . -1543) (undo-tree-id26968 . -1) 1544) nil (25944 44918 152522 0) 0 nil])
([nil nil ((1559 . 1562)) nil (25944 44918 152518 0) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . -1561) (undo-tree-id26967 . -1) 1562) nil (25944 44918 152517 0) 0 nil])
([nil nil ((1561 . 1563)) nil (25944 44918 152515 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1560) (undo-tree-id26964 . -1) (#("i" 0 1 (fontified t)) . -1561) (undo-tree-id26965 . -1) (#("z" 0 1 (fontified t)) . -1562) (undo-tree-id26966 . -1) 1563) nil (25944 44918 152513 0) 0 nil])
([nil nil ((1560 . 1561)) nil (25944 44918 152508 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1559) (undo-tree-id26962 . -1) (#("h" 0 1 (fontified t)) . -1560) (undo-tree-id26963 . -1) 1561) nil (25944 44918 152507 0) 0 nil])
([nil nil ((1559 . 1561)) nil (25944 44918 152503 0) 0 nil])
([nil nil ((1561 . 1563)) nil (25944 44918 152502 0) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -1560) (undo-tree-id26959 . -1) (#("e" 0 1 (fontified t)) . -1561) (undo-tree-id26960 . -1) (#("i" 0 1 (fontified t)) . -1562) (undo-tree-id26961 . -1) 1563) nil (25944 44918 152500 0) 0 nil])
([nil nil ((1560 . 1562)) nil (25944 44918 152496 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1560) (undo-tree-id26957 . -1) (#("i" 0 1 (fontified t)) . -1561) (undo-tree-id26958 . -1) 1562) nil (25944 44918 152494 0) 0 nil])
([nil nil ((1560 . 1561)) nil (25944 44918 152491 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -1560) (undo-tree-id26955 . -1) (undo-tree-id26956 . -1) 1561) nil (25944 44918 152490 0) 0 nil])
([nil nil ((#("element()." 0 10 (fontified t)) . -1550) (undo-tree-id26953 . -10) (undo-tree-id26954 . -10) 1560) nil (25944 44918 152487 0) 0 nil])
([nil nil ((#("parent_" 0 7 (fontified t)) . -1543) (undo-tree-id26951 . -7) (undo-tree-id26952 . -7) 1550) nil (25944 44918 152483 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1542) (undo-tree-id26949 . -1) (undo-tree-id26950 . -1) 1543) nil (25944 44918 152480 0) 0 nil])
([nil nil ((1542 . 1544)) nil (25944 44918 152477 0) 0 nil])
([nil nil ((1536 . 1546) (#("canvas_r" 0 8 (fontified nil)) . 1536) (1536 . 1544) (#("canvas_ref" 0 10 (fontified nil)) . -1536) (1536 . 1546) (#("canvas_r" 0 8 (fontified t)) . -1536) (undo-tree-id26947 . -6) (undo-tree-id26948 . -8) 1544) nil (25944 44918 152475 0) 0 nil])
([nil nil ((1546 . 1548)) nil (25944 44918 152471 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1547) (undo-tree-id26945 . -1) (undo-tree-id26946 . -1) 1548) nil (25944 44918 152470 0) 0 nil])
([nil nil ((#("ref." 0 4 (fontified t)) . -1543) (undo-tree-id26943 . -4) (undo-tree-id26944 . -4) 1547) nil (25944 44918 152467 0) 0 nil])
([nil nil ((#("canvas_" 0 7 (fontified t)) . -1536) (undo-tree-id26941 . -7) (undo-tree-id26942 . -7) 1543) nil (25944 44918 152463 0) 0 nil])
([nil nil ((1536 . 1539)) nil (25944 44918 152460 0) 0 nil])
([nil nil ((1536 . 1542) (#("can" 0 3 (fontified nil)) . 1536) (1536 . 1539) (#("canvas" 0 6 (fontified nil)) . -1536) (1536 . 1542) (#("can" 0 3 (fontified t)) . -1536) (undo-tree-id26939 . -3) (undo-tree-id26940 . -3) 1539) nil (25944 44918 152458 0) 0 nil])
([nil nil ((1542 . 1544)) nil (25944 44918 152454 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1543 1559 #s(yas--snippet nil nil #s(yas--exit 1559 nil) 103 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1559 nil) 103 nil nil nil nil)) (1543 . 1559) (#("parent_element()$0" 0 18 (fontified nil)) . 1543) (1543 . 1561) (#("p" 0 1 (fontified nil)) . 1543) (1543 . 1544) (#("parent_element()" 0 16 (fontified nil)) . -1543) (1543 . 1559) (#("p" 0 1 (fontified t)) . -1543) (undo-tree-id26932 . -1) (undo-tree-id26933 . -1) (undo-tree-id26934 . -1) (undo-tree-id26935 . -1) (undo-tree-id26936 . -1) (undo-tree-id26937 . -1) (undo-tree-id26938 . -1) 1544) nil (25944 44918 152452 0) 0 nil])
([nil nil ((1559 . 1563)) nil (25944 44918 152442 0) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -1560) (undo-tree-id26901 . -1) (undo-tree-id26902 . -1) (undo-tree-id26903 . -1) (undo-tree-id26904 . -1) (undo-tree-id26905 . -1) (undo-tree-id26906 . -1) (undo-tree-id26907 . -1) (undo-tree-id26908 . -1) (undo-tree-id26909 . -1) (undo-tree-id26910 . -1) (undo-tree-id26911 . -1) (undo-tree-id26912 . -1) (undo-tree-id26913 . -1) (undo-tree-id26914 . -1) (undo-tree-id26915 . -1) (undo-tree-id26916 . -1) (undo-tree-id26917 . -1) (#("e" 0 1 (fontified t)) . -1561) (undo-tree-id26918 . -1) (undo-tree-id26919 . -1) (undo-tree-id26920 . -1) (undo-tree-id26921 . -1) (undo-tree-id26922 . -1) (undo-tree-id26923 . -1) (undo-tree-id26924 . -1) (undo-tree-id26925 . -1) (undo-tree-id26926 . -1) (#("i" 0 1 (fontified t)) . -1562) (undo-tree-id26927 . -1) (undo-tree-id26928 . -1) (undo-tree-id26929 . -1) (undo-tree-id26930 . -1) (undo-tree-id26931 . -1) 1563) nil (25944 44918 152439 0) 0 nil])
([nil nil ((1560 . 1562)) nil (25944 44918 152408 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1559) (undo-tree-id26853 . -1) (undo-tree-id26854 . -1) (undo-tree-id26855 . -1) (undo-tree-id26856 . -1) (undo-tree-id26857 . -1) (undo-tree-id26858 . -1) (undo-tree-id26859 . -1) (undo-tree-id26860 . -1) (undo-tree-id26861 . -1) (undo-tree-id26862 . -1) (undo-tree-id26863 . -1) (undo-tree-id26864 . -1) (undo-tree-id26865 . -1) (undo-tree-id26866 . -1) (undo-tree-id26867 . -1) (undo-tree-id26868 . -1) (undo-tree-id26869 . -1) (undo-tree-id26870 . -1) (undo-tree-id26871 . -1) (undo-tree-id26872 . -1) (undo-tree-id26873 . -1) (undo-tree-id26874 . -1) (undo-tree-id26875 . -1) (undo-tree-id26876 . -1) (undo-tree-id26877 . -1) (undo-tree-id26878 . -1) (undo-tree-id26879 . -1) (undo-tree-id26880 . -1) (undo-tree-id26881 . -1) (undo-tree-id26882 . -1) (undo-tree-id26883 . -1) (undo-tree-id26884 . -1) (undo-tree-id26885 . -1) (undo-tree-id26886 . -1) (#("w" 0 1 (fontified t)) . -1560) (undo-tree-id26887 . -1) (undo-tree-id26888 . -1) (undo-tree-id26889 . -1) (undo-tree-id26890 . -1) (undo-tree-id26891 . -1) (undo-tree-id26892 . -1) (undo-tree-id26893 . -1) (undo-tree-id26894 . -1) (undo-tree-id26895 . -1) (#("i" 0 1 (fontified t)) . -1561) (undo-tree-id26896 . -1) (undo-tree-id26897 . -1) (undo-tree-id26898 . -1) (undo-tree-id26899 . -1) (undo-tree-id26900 . -1) 1562) nil (25944 44918 152404 0) 0 nil])
([nil nil ((1559 . 1561)) nil (25944 44918 152358 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1559) (undo-tree-id26832 . -1) (undo-tree-id26833 . -1) (undo-tree-id26834 . -1) (undo-tree-id26835 . -1) (undo-tree-id26836 . -1) (undo-tree-id26837 . -1) (undo-tree-id26838 . -1) (undo-tree-id26839 . -1) (undo-tree-id26840 . -1) (undo-tree-id26841 . -1) (undo-tree-id26842 . -1) (undo-tree-id26843 . -1) (undo-tree-id26844 . -1) (undo-tree-id26845 . -1) (#("h" 0 1 (fontified t)) . -1560) (undo-tree-id26846 . -1) (undo-tree-id26847 . -1) (undo-tree-id26848 . -1) (undo-tree-id26849 . -1) (undo-tree-id26850 . -1) (undo-tree-id26851 . -1) (undo-tree-id26852 . -1) 1561) nil (25944 44918 152355 0) 0 nil])
([nil nil ((#("element()" 0 9 (fontified t)) . -1550) (undo-tree-id26774 . -9) (undo-tree-id26775 . -9) (undo-tree-id26776 . -9) (undo-tree-id26777 . -9) (undo-tree-id26778 . -9) (undo-tree-id26779 . -9) (undo-tree-id26780 . -9) (undo-tree-id26781 . -9) (undo-tree-id26782 . -9) (undo-tree-id26783 . -9) (undo-tree-id26784 . -9) (undo-tree-id26785 . -9) (undo-tree-id26786 . -9) (undo-tree-id26787 . -9) (undo-tree-id26788 . -9) (undo-tree-id26789 . -9) (undo-tree-id26790 . -9) (undo-tree-id26791 . -9) (undo-tree-id26792 . -9) (undo-tree-id26793 . -9) (undo-tree-id26794 . -9) (undo-tree-id26795 . -9) (undo-tree-id26796 . -9) (undo-tree-id26797 . -9) (undo-tree-id26798 . -9) (undo-tree-id26799 . -9) (undo-tree-id26800 . -9) (undo-tree-id26801 . -9) (undo-tree-id26802 . -9) (undo-tree-id26803 . -9) (undo-tree-id26804 . -9) (undo-tree-id26805 . -9) (undo-tree-id26806 . -9) (undo-tree-id26807 . -9) (undo-tree-id26808 . -9) (undo-tree-id26809 . -9) (undo-tree-id26810 . -9) (undo-tree-id26811 . -9) (undo-tree-id26812 . -9) (undo-tree-id26813 . -9) (undo-tree-id26814 . -9) (undo-tree-id26815 . -9) (undo-tree-id26816 . -9) (undo-tree-id26817 . -9) (undo-tree-id26818 . -9) (undo-tree-id26819 . -9) (undo-tree-id26820 . -9) (undo-tree-id26821 . -9) (undo-tree-id26822 . -9) (undo-tree-id26823 . -9) (undo-tree-id26824 . -9) (undo-tree-id26825 . -9) (undo-tree-id26826 . -9) (undo-tree-id26827 . -9) (undo-tree-id26828 . -9) (undo-tree-id26829 . -9) (undo-tree-id26830 . -9) (undo-tree-id26831 . -9) 1559) nil (25944 44918 152331 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -1549) (undo-tree-id26713 . -1) (undo-tree-id26714 . -1) (undo-tree-id26715 . -1) (undo-tree-id26716 . -1) (undo-tree-id26717 . -1) (undo-tree-id26718 . -1) (undo-tree-id26719 . -1) (undo-tree-id26720 . -1) (undo-tree-id26721 . -1) (undo-tree-id26722 . -1) (undo-tree-id26723 . -1) (undo-tree-id26724 . -1) (undo-tree-id26725 . -1) (undo-tree-id26726 . -1) (undo-tree-id26727 . -1) (undo-tree-id26728 . -1) (undo-tree-id26729 . -1) (undo-tree-id26730 . -1) (undo-tree-id26731 . -1) (undo-tree-id26732 . -1) (undo-tree-id26733 . -1) (undo-tree-id26734 . -1) (undo-tree-id26735 . -1) (undo-tree-id26736 . -1) (undo-tree-id26737 . -1) (undo-tree-id26738 . -1) (undo-tree-id26739 . -1) (undo-tree-id26740 . -1) (undo-tree-id26741 . -1) (undo-tree-id26742 . -1) (undo-tree-id26743 . -1) (undo-tree-id26744 . -1) (undo-tree-id26745 . -1) (undo-tree-id26746 . -1) (undo-tree-id26747 . -1) (undo-tree-id26748 . -1) (undo-tree-id26749 . -1) (undo-tree-id26750 . -1) (undo-tree-id26751 . -1) (undo-tree-id26752 . -1) (undo-tree-id26753 . -1) (undo-tree-id26754 . -1) (undo-tree-id26755 . -1) (undo-tree-id26756 . -1) (undo-tree-id26757 . -1) (undo-tree-id26758 . -1) (undo-tree-id26759 . -1) (undo-tree-id26760 . -1) (undo-tree-id26761 . -1) (undo-tree-id26762 . -1) (undo-tree-id26763 . -1) (undo-tree-id26764 . -1) (undo-tree-id26765 . -1) (undo-tree-id26766 . -1) (undo-tree-id26767 . -1) (undo-tree-id26768 . -1) (undo-tree-id26769 . -1) (undo-tree-id26770 . -1) (undo-tree-id26771 . -1) (undo-tree-id26772 . -1) (undo-tree-id26773 . -1) 1550) nil (25944 44918 152273 0) 0 nil])
([nil nil ((1549 . 1551)) nil (25944 44918 152214 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1550) (undo-tree-id26710 . -1) (undo-tree-id26711 . -1) (undo-tree-id26712 . -1) 1551) nil (25944 44918 152213 0) 0 nil])
([nil nil ((1550 . 1551)) nil (25944 44918 152209 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1543 1556 #s(yas--snippet nil nil #s(yas--exit 1556 nil) 104 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1556 nil) 104 nil nil nil nil)) (1543 . 1556) (#("parent_node()$0" 0 15 (fontified nil)) . 1543) (1543 . 1558) (#("parent_n" 0 8 (fontified nil)) . 1543) (1543 . 1551) (#("parent_node()" 0 13 (fontified nil)) . -1543) (1543 . 1556) (#("parent_n" 0 8 (fontified t)) . -1543) (undo-tree-id26631 . -6) (undo-tree-id26632 . -8) (undo-tree-id26633 . -6) (undo-tree-id26634 . -6) (undo-tree-id26635 . -6) (undo-tree-id26636 . -6) (undo-tree-id26637 . -6) (undo-tree-id26638 . -6) (undo-tree-id26639 . -6) (undo-tree-id26640 . -6) (undo-tree-id26641 . -6) (undo-tree-id26642 . -6) (undo-tree-id26643 . -6) (undo-tree-id26644 . -6) (undo-tree-id26645 . -6) (undo-tree-id26646 . -6) (undo-tree-id26647 . -6) (undo-tree-id26648 . -6) (undo-tree-id26649 . -6) (undo-tree-id26650 . -6) (undo-tree-id26651 . -6) (undo-tree-id26652 . -6) (undo-tree-id26653 . -6) (undo-tree-id26654 . -6) (undo-tree-id26655 . -6) (undo-tree-id26656 . -6) (undo-tree-id26657 . -6) (undo-tree-id26658 . -6) (undo-tree-id26659 . -6) (undo-tree-id26660 . -6) (undo-tree-id26661 . -6) (undo-tree-id26662 . -6) (undo-tree-id26663 . -6) (undo-tree-id26664 . -6) (undo-tree-id26665 . -6) (undo-tree-id26666 . -6) (undo-tree-id26667 . -6) (undo-tree-id26668 . -6) (undo-tree-id26669 . -6) (undo-tree-id26670 . -6) (undo-tree-id26671 . -6) (undo-tree-id26672 . -6) (undo-tree-id26673 . -6) (undo-tree-id26674 . -6) (undo-tree-id26675 . -6) (undo-tree-id26676 . -6) (undo-tree-id26677 . -6) (undo-tree-id26678 . -6) (undo-tree-id26679 . -6) (undo-tree-id26680 . -6) (undo-tree-id26681 . -6) (undo-tree-id26682 . -6) (undo-tree-id26683 . -6) (undo-tree-id26684 . -6) (undo-tree-id26685 . -6) (undo-tree-id26686 . -6) (undo-tree-id26687 . -6) (undo-tree-id26688 . -6) (undo-tree-id26689 . -6) (undo-tree-id26690 . -6) (undo-tree-id26691 . -6) (undo-tree-id26692 . -6) (undo-tree-id26693 . -6) (undo-tree-id26694 . -6) (undo-tree-id26695 . -6) (undo-tree-id26696 . -6) (undo-tree-id26697 . -6) (undo-tree-id26698 . -6) (undo-tree-id26699 . -7) (undo-tree-id26700 . -7) (undo-tree-id26701 . -7) (undo-tree-id26702 . -7) (undo-tree-id26703 . -7) (undo-tree-id26704 . -7) (undo-tree-id26705 . -7) (undo-tree-id26706 . -8) (undo-tree-id26707 . -8) (undo-tree-id26708 . -8) (undo-tree-id26709 . -8) 1551) nil (25944 44918 152203 0) 0 nil])
([nil nil ((1556 . 1559)) nil (25944 44918 152126 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1557) (undo-tree-id26615 . -1) (undo-tree-id26616 . -1) (undo-tree-id26617 . -1) (undo-tree-id26618 . -1) (undo-tree-id26619 . -1) (undo-tree-id26620 . -1) (undo-tree-id26621 . -1) (undo-tree-id26622 . -1) (undo-tree-id26623 . -1) (undo-tree-id26624 . -1) (undo-tree-id26625 . -1) (#("i" 0 1 (fontified t)) . -1558) (undo-tree-id26626 . -1) (undo-tree-id26627 . -1) (undo-tree-id26628 . -1) (undo-tree-id26629 . -1) (undo-tree-id26630 . -1) 1559) nil (25944 44918 152124 0) 0 nil])
([nil nil ((1557 . 1560)) nil (25944 44918 152107 0) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -1557) (undo-tree-id26588 . -1) (undo-tree-id26589 . -1) (undo-tree-id26590 . -1) (undo-tree-id26591 . -1) (undo-tree-id26592 . -1) (undo-tree-id26593 . -1) (undo-tree-id26594 . -1) (undo-tree-id26595 . -1) (undo-tree-id26596 . -1) (undo-tree-id26597 . -1) (undo-tree-id26598 . -1) (undo-tree-id26599 . -1) (undo-tree-id26600 . -1) (#("e" 0 1 (fontified t)) . -1558) (undo-tree-id26601 . -1) (undo-tree-id26602 . -1) (undo-tree-id26603 . -1) (undo-tree-id26604 . -1) (undo-tree-id26605 . -1) (undo-tree-id26606 . -1) (undo-tree-id26607 . -1) (undo-tree-id26608 . -1) (undo-tree-id26609 . -1) (#("i" 0 1 (fontified t)) . -1559) (undo-tree-id26610 . -1) (undo-tree-id26611 . -1) (undo-tree-id26612 . -1) (undo-tree-id26613 . -1) (undo-tree-id26614 . -1) 1560) nil (25944 44918 152104 0) 0 nil])
([nil nil ((1557 . 1558)) nil (25944 44918 152077 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -1557) (undo-tree-id26581 . -1) (undo-tree-id26582 . -1) (undo-tree-id26583 . -1) (undo-tree-id26584 . -1) (undo-tree-id26585 . -1) (undo-tree-id26586 . -1) (undo-tree-id26587 . -1) 1558) nil (25944 44918 152075 0) 0 nil])
([nil nil ((#("	let rect = canvas.parent_node()." 0 1 (fontified t) 1 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 9 (face font-lock-variable-name-face fontified t) 9 12 (fontified t) 12 19 (fontified t) 19 33 (fontified t)) . 1524) (undo-tree-id26437 . -33) (undo-tree-id26438 . -12) (undo-tree-id26439 . -18) (undo-tree-id26440 . -18) (undo-tree-id26441 . -19) (undo-tree-id26442 . -19) (undo-tree-id26443 . -19) (undo-tree-id26444 . -19) (undo-tree-id26445 . -19) (undo-tree-id26446 . -19) (undo-tree-id26447 . -19) (undo-tree-id26448 . -19) (undo-tree-id26449 . -19) (undo-tree-id26450 . -19) (undo-tree-id26451 . -19) (undo-tree-id26452 . -19) (undo-tree-id26453 . -19) (undo-tree-id26454 . -19) (undo-tree-id26455 . -19) (undo-tree-id26456 . -19) (undo-tree-id26457 . -19) (undo-tree-id26458 . -19) (undo-tree-id26459 . -19) (undo-tree-id26460 . -19) (undo-tree-id26461 . -19) (undo-tree-id26462 . -19) (undo-tree-id26463 . -19) (undo-tree-id26464 . -19) (undo-tree-id26465 . -19) (undo-tree-id26466 . -19) (undo-tree-id26467 . -19) (undo-tree-id26468 . -19) (undo-tree-id26469 . -19) (undo-tree-id26470 . -19) (undo-tree-id26471 . -19) (undo-tree-id26472 . -19) (undo-tree-id26473 . -19) (undo-tree-id26474 . -19) (undo-tree-id26475 . -19) (undo-tree-id26476 . -19) (undo-tree-id26477 . -19) (undo-tree-id26478 . -19) (undo-tree-id26479 . -19) (undo-tree-id26480 . -19) (undo-tree-id26481 . -19) (undo-tree-id26482 . -19) (undo-tree-id26483 . -19) (undo-tree-id26484 . -19) (undo-tree-id26485 . -19) (undo-tree-id26486 . -19) (undo-tree-id26487 . -19) (undo-tree-id26488 . -19) (undo-tree-id26489 . -19) (undo-tree-id26490 . -19) (undo-tree-id26491 . -19) (undo-tree-id26492 . -19) (undo-tree-id26493 . -19) (undo-tree-id26494 . -19) (undo-tree-id26495 . -19) (undo-tree-id26496 . -19) (undo-tree-id26497 . -19) (undo-tree-id26498 . -19) (undo-tree-id26499 . -19) (undo-tree-id26500 . -19) (undo-tree-id26501 . -19) (undo-tree-id26502 . -19) (undo-tree-id26503 . -19) (undo-tree-id26504 . -19) (undo-tree-id26505 . -19) (undo-tree-id26506 . -19) (undo-tree-id26507 . -19) (undo-tree-id26508 . -19) (undo-tree-id26509 . -19) (undo-tree-id26510 . -19) (undo-tree-id26511 . -19) (undo-tree-id26512 . -19) (undo-tree-id26513 . -19) (undo-tree-id26514 . -19) (undo-tree-id26515 . -19) (undo-tree-id26516 . -19) (undo-tree-id26517 . -19) (undo-tree-id26518 . -19) (undo-tree-id26519 . -19) (undo-tree-id26520 . -19) (undo-tree-id26521 . -19) (undo-tree-id26522 . -19) (undo-tree-id26523 . -19) (undo-tree-id26524 . -19) (undo-tree-id26525 . -19) (undo-tree-id26526 . -19) (undo-tree-id26527 . -19) (undo-tree-id26528 . -32) (undo-tree-id26529 . -32) (undo-tree-id26530 . -32) (undo-tree-id26531 . -32) (undo-tree-id26532 . -32) (undo-tree-id26533 . -32) (undo-tree-id26534 . -33) (undo-tree-id26535 . -33) (undo-tree-id26536 . -33) (undo-tree-id26537 . -33) (undo-tree-id26538 . -33) (undo-tree-id26539 . -33) (undo-tree-id26540 . -33) (undo-tree-id26541 . -33) (undo-tree-id26542 . -33) (undo-tree-id26543 . -33) (undo-tree-id26544 . -33) (undo-tree-id26545 . -33) (undo-tree-id26546 . -33) (undo-tree-id26547 . -33) (undo-tree-id26548 . -33) (undo-tree-id26549 . -33) (undo-tree-id26550 . -33) (undo-tree-id26551 . -33) (undo-tree-id26552 . -33) (undo-tree-id26553 . -33) (undo-tree-id26554 . -33) (undo-tree-id26555 . -33) (undo-tree-id26556 . -33) (undo-tree-id26557 . -33) (undo-tree-id26558 . -33) (undo-tree-id26559 . -33) (undo-tree-id26560 . -33) (undo-tree-id26561 . -33) (undo-tree-id26562 . -33) (undo-tree-id26563 . -33) (undo-tree-id26564 . -33) (undo-tree-id26565 . -33) (undo-tree-id26566 . -33) (undo-tree-id26567 . -33) (undo-tree-id26568 . -33) (undo-tree-id26569 . -33) (undo-tree-id26570 . -33) (undo-tree-id26571 . -33) (undo-tree-id26572 . -33) (undo-tree-id26573 . -33) (undo-tree-id26574 . -33) (undo-tree-id26575 . -33) (undo-tree-id26576 . -33) (undo-tree-id26577 . -33) (undo-tree-id26578 . -33) (undo-tree-id26579 . -33) (undo-tree-id26580 . -33)) nil (25944 44918 152061 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1524) (undo-tree-id26434 . -1) (undo-tree-id26435 . 1) (undo-tree-id26436 . -1)) nil (25944 44918 151905 0) 0 nil])
([nil nil ((1523 . 1525) (t 25944 44918 209410 687000)) nil (25944 45008 685906 0) 0 nil])
([nil nil ((1525 . 1539)) nil (25944 45008 685905 0) 0 nil])
([nil nil ((1536 . 1542) (#("can" 0 3 (fontified nil)) . 1536) (1536 . 1539) (#("canvas" 0 6 (fontified nil)) . -1536) (1536 . 1542) (#("can" 0 3 (fontified t)) . -1536) (undo-tree-id27605 . -3) 1539) nil (25944 45008 685903 0) 0 nil])
([nil nil ((1542 . 1546)) nil (25944 45008 685900 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -1543) (undo-tree-id27601 . -1) (undo-tree-id27602 . -1) (#("e" 0 1 (fontified t)) . -1544) (undo-tree-id27603 . -1) (#("t" 0 1 (fontified t)) . -1545) (undo-tree-id27604 . -1) 1546) nil (25944 45008 685899 0) 0 nil])
([nil nil ((1543 . 1544)) nil (25944 45008 685893 0) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -1543) (undo-tree-id27599 . -1) (undo-tree-id27600 . -1) 1544) nil (25944 45008 685892 0) 0 nil])
([nil nil ((1543 . 1545)) nil (25944 45008 685889 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1543 1559 #s(yas--snippet nil nil #s(yas--exit 1559 nil) 105 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1559 nil) 105 nil nil nil nil)) (1543 . 1559) (#("parent_element()$0" 0 18 (fontified nil)) . 1543) (1543 . 1561) (#("pa" 0 2 (fontified nil)) . 1543) (1543 . 1545) (#("parent_element()" 0 16 (fontified nil)) . -1543) (1543 . 1559) (#("pa" 0 2 (fontified t)) . -1543) (undo-tree-id27598 . -2) 1545) nil (25944 45008 685887 0) 0 nil])
([nil nil ((1559 . 1563)) nil (25944 45008 685882 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1556) (undo-tree-id27501 . -1) (undo-tree-id27502 . -1) (undo-tree-id27503 . -1) (undo-tree-id27504 . -1) (undo-tree-id27505 . -1) (undo-tree-id27506 . -1) (undo-tree-id27507 . -1) (undo-tree-id27508 . -1) (undo-tree-id27509 . -1) (undo-tree-id27510 . -1) (undo-tree-id27511 . -1) (undo-tree-id27512 . -1) (undo-tree-id27513 . -1) (undo-tree-id27514 . -1) (undo-tree-id27515 . -1) (undo-tree-id27516 . -1) (undo-tree-id27517 . -1) (undo-tree-id27518 . -1) (undo-tree-id27519 . -1) (undo-tree-id27520 . -1) (undo-tree-id27521 . -1) (undo-tree-id27522 . -1) (undo-tree-id27523 . -1) (#("(" 0 1 (fontified t)) . -1557) (undo-tree-id27524 . -1) (undo-tree-id27525 . -1) (undo-tree-id27526 . -1) (undo-tree-id27527 . -1) (undo-tree-id27528 . -1) (undo-tree-id27529 . -1) (undo-tree-id27530 . -1) (undo-tree-id27531 . -1) (undo-tree-id27532 . -1) (undo-tree-id27533 . -1) (undo-tree-id27534 . -1) (undo-tree-id27535 . -1) (undo-tree-id27536 . -1) (undo-tree-id27537 . -1) (undo-tree-id27538 . -1) (undo-tree-id27539 . -1) (undo-tree-id27540 . -1) (undo-tree-id27541 . -1) (undo-tree-id27542 . -1) (undo-tree-id27543 . -1) (undo-tree-id27544 . -1) (undo-tree-id27545 . -1) (#(")" 0 1 (fontified t)) . -1558) (undo-tree-id27546 . -1) (undo-tree-id27547 . -1) (undo-tree-id27548 . -1) (undo-tree-id27549 . -1) (undo-tree-id27550 . -1) (undo-tree-id27551 . -1) (undo-tree-id27552 . -1) (undo-tree-id27553 . -1) (undo-tree-id27554 . -1) (undo-tree-id27555 . -1) (undo-tree-id27556 . -1) (undo-tree-id27557 . -1) (undo-tree-id27558 . -1) (undo-tree-id27559 . -1) (undo-tree-id27560 . -1) (undo-tree-id27561 . -1) (undo-tree-id27562 . -1) (undo-tree-id27563 . -1) (undo-tree-id27564 . -1) (#("." 0 1 (fontified t)) . -1559) (undo-tree-id27565 . -1) (undo-tree-id27566 . -1) (undo-tree-id27567 . -1) (undo-tree-id27568 . -1) (undo-tree-id27569 . -1) (undo-tree-id27570 . -1) (undo-tree-id27571 . -1) (undo-tree-id27572 . -1) (undo-tree-id27573 . -1) (undo-tree-id27574 . -1) (undo-tree-id27575 . -1) (undo-tree-id27576 . -1) (undo-tree-id27577 . -1) (undo-tree-id27578 . -1) (undo-tree-id27579 . -1) (#("g" 0 1 (fontified t)) . -1560) (undo-tree-id27580 . -1) (undo-tree-id27581 . -1) (undo-tree-id27582 . -1) (undo-tree-id27583 . -1) (undo-tree-id27584 . -1) (undo-tree-id27585 . -1) (undo-tree-id27586 . -1) (undo-tree-id27587 . -1) (#("e" 0 1 (fontified t)) . -1561) (undo-tree-id27588 . -1) (undo-tree-id27589 . -1) (undo-tree-id27590 . -1) (undo-tree-id27591 . -1) (undo-tree-id27592 . -1) (undo-tree-id27593 . -1) (#("t" 0 1 (fontified t)) . -1562) (undo-tree-id27594 . -1) (undo-tree-id27595 . -1) (undo-tree-id27596 . -1) (undo-tree-id27597 . -1) 1563) nil (25944 45008 685876 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1550) (undo-tree-id27252 . -1) (undo-tree-id27253 . -1) (undo-tree-id27254 . -1) (undo-tree-id27255 . -1) (undo-tree-id27256 . -1) (undo-tree-id27257 . -1) (undo-tree-id27258 . -1) (undo-tree-id27259 . -1) (undo-tree-id27260 . -1) (undo-tree-id27261 . -1) (undo-tree-id27262 . -1) (undo-tree-id27263 . -1) (undo-tree-id27264 . -1) (undo-tree-id27265 . -1) (undo-tree-id27266 . -1) (undo-tree-id27267 . -1) (undo-tree-id27268 . -1) (undo-tree-id27269 . -1) (undo-tree-id27270 . -1) (undo-tree-id27271 . -1) (undo-tree-id27272 . -1) (undo-tree-id27273 . -1) (undo-tree-id27274 . -1) (undo-tree-id27275 . -1) (undo-tree-id27276 . -1) (undo-tree-id27277 . -1) (undo-tree-id27278 . -1) (undo-tree-id27279 . -1) (undo-tree-id27280 . -1) (undo-tree-id27281 . -1) (undo-tree-id27282 . -1) (undo-tree-id27283 . -1) (undo-tree-id27284 . -1) (undo-tree-id27285 . -1) (undo-tree-id27286 . -1) (undo-tree-id27287 . -1) (undo-tree-id27288 . -1) (undo-tree-id27289 . -1) (undo-tree-id27290 . -1) (undo-tree-id27291 . -1) (undo-tree-id27292 . -1) (undo-tree-id27293 . -1) (undo-tree-id27294 . -1) (undo-tree-id27295 . -1) (undo-tree-id27296 . -1) (undo-tree-id27297 . -1) (undo-tree-id27298 . -1) (undo-tree-id27299 . -1) (undo-tree-id27300 . -1) (undo-tree-id27301 . -1) (undo-tree-id27302 . -1) (undo-tree-id27303 . -1) (undo-tree-id27304 . -1) (undo-tree-id27305 . -1) (undo-tree-id27306 . -1) (#("l" 0 1 (fontified t)) . -1551) (undo-tree-id27307 . -1) (undo-tree-id27308 . -1) (undo-tree-id27309 . -1) (undo-tree-id27310 . -1) (undo-tree-id27311 . -1) (undo-tree-id27312 . -1) (undo-tree-id27313 . -1) (undo-tree-id27314 . -1) (undo-tree-id27315 . -1) (undo-tree-id27316 . -1) (undo-tree-id27317 . -1) (undo-tree-id27318 . -1) (undo-tree-id27319 . -1) (undo-tree-id27320 . -1) (undo-tree-id27321 . -1) (undo-tree-id27322 . -1) (undo-tree-id27323 . -1) (undo-tree-id27324 . -1) (undo-tree-id27325 . -1) (undo-tree-id27326 . -1) (undo-tree-id27327 . -1) (undo-tree-id27328 . -1) (undo-tree-id27329 . -1) (undo-tree-id27330 . -1) (undo-tree-id27331 . -1) (undo-tree-id27332 . -1) (undo-tree-id27333 . -1) (undo-tree-id27334 . -1) (undo-tree-id27335 . -1) (undo-tree-id27336 . -1) (undo-tree-id27337 . -1) (undo-tree-id27338 . -1) (undo-tree-id27339 . -1) (undo-tree-id27340 . -1) (undo-tree-id27341 . -1) (undo-tree-id27342 . -1) (undo-tree-id27343 . -1) (undo-tree-id27344 . -1) (undo-tree-id27345 . -1) (undo-tree-id27346 . -1) (undo-tree-id27347 . -1) (undo-tree-id27348 . -1) (undo-tree-id27349 . -1) (undo-tree-id27350 . -1) (undo-tree-id27351 . -1) (undo-tree-id27352 . -1) (undo-tree-id27353 . -1) (undo-tree-id27354 . -1) (undo-tree-id27355 . -1) (undo-tree-id27356 . -1) (#("e" 0 1 (fontified t)) . -1552) (undo-tree-id27357 . -1) (undo-tree-id27358 . -1) (undo-tree-id27359 . -1) (undo-tree-id27360 . -1) (undo-tree-id27361 . -1) (undo-tree-id27362 . -1) (undo-tree-id27363 . -1) (undo-tree-id27364 . -1) (undo-tree-id27365 . -1) (undo-tree-id27366 . -1) (undo-tree-id27367 . -1) (undo-tree-id27368 . -1) (undo-tree-id27369 . -1) (undo-tree-id27370 . -1) (undo-tree-id27371 . -1) (undo-tree-id27372 . -1) (undo-tree-id27373 . -1) (undo-tree-id27374 . -1) (undo-tree-id27375 . -1) (undo-tree-id27376 . -1) (undo-tree-id27377 . -1) (undo-tree-id27378 . -1) (undo-tree-id27379 . -1) (undo-tree-id27380 . -1) (undo-tree-id27381 . -1) (undo-tree-id27382 . -1) (undo-tree-id27383 . -1) (undo-tree-id27384 . -1) (undo-tree-id27385 . -1) (undo-tree-id27386 . -1) (undo-tree-id27387 . -1) (undo-tree-id27388 . -1) (undo-tree-id27389 . -1) (undo-tree-id27390 . -1) (undo-tree-id27391 . -1) (undo-tree-id27392 . -1) (undo-tree-id27393 . -1) (undo-tree-id27394 . -1) (undo-tree-id27395 . -1) (undo-tree-id27396 . -1) (undo-tree-id27397 . -1) (undo-tree-id27398 . -1) (undo-tree-id27399 . -1) (undo-tree-id27400 . -1) (undo-tree-id27401 . -1) (#("m" 0 1 (fontified t)) . -1553) (undo-tree-id27402 . -1) (undo-tree-id27403 . -1) (undo-tree-id27404 . -1) (undo-tree-id27405 . -1) (undo-tree-id27406 . -1) (undo-tree-id27407 . -1) (undo-tree-id27408 . -1) (undo-tree-id27409 . -1) (undo-tree-id27410 . -1) (undo-tree-id27411 . -1) (undo-tree-id27412 . -1) (undo-tree-id27413 . -1) (undo-tree-id27414 . -1) (undo-tree-id27415 . -1) (undo-tree-id27416 . -1) (undo-tree-id27417 . -1) (undo-tree-id27418 . -1) (undo-tree-id27419 . -1) (undo-tree-id27420 . -1) (undo-tree-id27421 . -1) (undo-tree-id27422 . -1) (undo-tree-id27423 . -1) (undo-tree-id27424 . -1) (undo-tree-id27425 . -1) (undo-tree-id27426 . -1) (undo-tree-id27427 . -1) (undo-tree-id27428 . -1) (undo-tree-id27429 . -1) (undo-tree-id27430 . -1) (undo-tree-id27431 . -1) (undo-tree-id27432 . -1) (undo-tree-id27433 . -1) (undo-tree-id27434 . -1) (undo-tree-id27435 . -1) (undo-tree-id27436 . -1) (undo-tree-id27437 . -1) (undo-tree-id27438 . -1) (undo-tree-id27439 . -1) (#("e" 0 1 (fontified t)) . -1554) (undo-tree-id27440 . -1) (undo-tree-id27441 . -1) (undo-tree-id27442 . -1) (undo-tree-id27443 . -1) (undo-tree-id27444 . -1) (undo-tree-id27445 . -1) (undo-tree-id27446 . -1) (undo-tree-id27447 . -1) (undo-tree-id27448 . -1) (undo-tree-id27449 . -1) (undo-tree-id27450 . -1) (undo-tree-id27451 . -1) (undo-tree-id27452 . -1) (undo-tree-id27453 . -1) (undo-tree-id27454 . -1) (undo-tree-id27455 . -1) (undo-tree-id27456 . -1) (undo-tree-id27457 . -1) (undo-tree-id27458 . -1) (undo-tree-id27459 . -1) (undo-tree-id27460 . -1) (undo-tree-id27461 . -1) (undo-tree-id27462 . -1) (undo-tree-id27463 . -1) (undo-tree-id27464 . -1) (undo-tree-id27465 . -1) (undo-tree-id27466 . -1) (undo-tree-id27467 . -1) (undo-tree-id27468 . -1) (undo-tree-id27469 . -1) (undo-tree-id27470 . -1) (undo-tree-id27471 . -1) (undo-tree-id27472 . -1) (#("n" 0 1 (fontified t)) . -1555) (undo-tree-id27473 . -1) (undo-tree-id27474 . -1) (undo-tree-id27475 . -1) (undo-tree-id27476 . -1) (undo-tree-id27477 . -1) (undo-tree-id27478 . -1) (undo-tree-id27479 . -1) (undo-tree-id27480 . -1) (undo-tree-id27481 . -1) (undo-tree-id27482 . -1) (undo-tree-id27483 . -1) (undo-tree-id27484 . -1) (undo-tree-id27485 . -1) (undo-tree-id27486 . -1) (undo-tree-id27487 . -1) (undo-tree-id27488 . -1) (undo-tree-id27489 . -1) (undo-tree-id27490 . -1) (undo-tree-id27491 . -1) (undo-tree-id27492 . -1) (undo-tree-id27493 . -1) (undo-tree-id27494 . -1) (undo-tree-id27495 . -1) (undo-tree-id27496 . -1) (undo-tree-id27497 . -1) (undo-tree-id27498 . -1) (undo-tree-id27499 . -1) (undo-tree-id27500 . -1) 1556) nil (25944 45008 685771 0) 0 nil])
([nil nil ((1550 . 1552)) nil (25944 45008 685537 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1543 1556 #s(yas--snippet nil nil #s(yas--exit 1556 nil) 106 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1556 nil) 106 nil nil nil nil)) (1543 . 1556) (#("parent_node()$0" 0 15 (fontified nil)) . 1543) (1543 . 1558) (#("parent_no" 0 9 (fontified nil)) . 1543) (1543 . 1552) (#("parent_node()" 0 13 (fontified nil)) . -1543) (1543 . 1556) (#("parent_no" 0 9 (fontified t)) . -1543) (undo-tree-id27185 . -7) (undo-tree-id27186 . -9) (undo-tree-id27187 . -7) (undo-tree-id27188 . -7) (undo-tree-id27189 . -7) (undo-tree-id27190 . -7) (undo-tree-id27191 . -7) (undo-tree-id27192 . -7) (undo-tree-id27193 . -7) (undo-tree-id27194 . -7) (undo-tree-id27195 . -7) (undo-tree-id27196 . -7) (undo-tree-id27197 . -7) (undo-tree-id27198 . -7) (undo-tree-id27199 . -7) (undo-tree-id27200 . -7) (undo-tree-id27201 . -7) (undo-tree-id27202 . -7) (undo-tree-id27203 . -7) (undo-tree-id27204 . -7) (undo-tree-id27205 . -7) (undo-tree-id27206 . -7) (undo-tree-id27207 . -7) (undo-tree-id27208 . -7) (undo-tree-id27209 . -7) (undo-tree-id27210 . -7) (undo-tree-id27211 . -7) (undo-tree-id27212 . -7) (undo-tree-id27213 . -7) (undo-tree-id27214 . -7) (undo-tree-id27215 . -7) (undo-tree-id27216 . -7) (undo-tree-id27217 . -7) (undo-tree-id27218 . -7) (undo-tree-id27219 . -7) (undo-tree-id27220 . -7) (undo-tree-id27221 . -7) (undo-tree-id27222 . -7) (undo-tree-id27223 . -7) (undo-tree-id27224 . -7) (undo-tree-id27225 . -7) (undo-tree-id27226 . -7) (undo-tree-id27227 . -7) (undo-tree-id27228 . -7) (undo-tree-id27229 . -7) (undo-tree-id27230 . -7) (undo-tree-id27231 . -7) (undo-tree-id27232 . -7) (undo-tree-id27233 . -7) (undo-tree-id27234 . -7) (undo-tree-id27235 . -7) (undo-tree-id27236 . -7) (undo-tree-id27237 . -7) (undo-tree-id27238 . -7) (undo-tree-id27239 . -7) (undo-tree-id27240 . -7) (undo-tree-id27241 . -7) (undo-tree-id27242 . -7) (undo-tree-id27243 . -7) (undo-tree-id27244 . -7) (undo-tree-id27245 . -8) (undo-tree-id27246 . -8) (undo-tree-id27247 . -8) (undo-tree-id27248 . -9) (undo-tree-id27249 . -9) (undo-tree-id27250 . -9) (undo-tree-id27251 . -9) 1552) nil (25944 45008 685533 0) 0 nil])
([nil nil ((1556 . 1558)) nil (25944 45008 685467 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -1557) (undo-tree-id27180 . -1) (undo-tree-id27181 . -1) (undo-tree-id27182 . -1) (undo-tree-id27183 . -1) (undo-tree-id27184 . -1) 1558) nil (25944 45008 685465 0) 0 nil])
([nil nil ((1557 . 1560)) nil (25944 45008 685459 0) 0 nil])
([nil nil ((#("get" 0 3 (fontified t)) . -1557) (undo-tree-id27169 . -1) (undo-tree-id27170 . -3) (undo-tree-id27171 . -1) (undo-tree-id27172 . -1) (undo-tree-id27173 . -1) (undo-tree-id27174 . -2) (undo-tree-id27175 . -2) (undo-tree-id27176 . -3) (undo-tree-id27177 . -3) (undo-tree-id27178 . -3) (undo-tree-id27179 . -3) 1560) nil (25944 45008 685457 0) 0 nil])
([nil nil ((#("node()." 0 7 (fontified t)) . -1550) (undo-tree-id27139 . -7) (undo-tree-id27140 . -7) (undo-tree-id27141 . -6) (undo-tree-id27142 . -6) (undo-tree-id27143 . -6) (undo-tree-id27144 . -6) (undo-tree-id27145 . -6) (undo-tree-id27146 . -6) (undo-tree-id27147 . -7) (undo-tree-id27148 . -7) (undo-tree-id27149 . -7) (undo-tree-id27150 . -7) (undo-tree-id27151 . -7) (undo-tree-id27152 . -7) (undo-tree-id27153 . -7) (undo-tree-id27154 . -7) (undo-tree-id27155 . -7) (undo-tree-id27156 . -7) (undo-tree-id27157 . -7) (undo-tree-id27158 . -7) (undo-tree-id27159 . -7) (undo-tree-id27160 . -7) (undo-tree-id27161 . -7) (undo-tree-id27162 . -7) (undo-tree-id27163 . -7) (undo-tree-id27164 . -7) (undo-tree-id27165 . -7) (undo-tree-id27166 . -7) (undo-tree-id27167 . -7) (undo-tree-id27168 . -7) 1557) nil (25944 45008 685445 0) 0 nil])
([nil nil ((#("parent_" 0 7 (fontified t)) . -1543) (undo-tree-id27105 . -7) (undo-tree-id27106 . -7) (undo-tree-id27107 . -7) (undo-tree-id27108 . -7) (undo-tree-id27109 . -7) (undo-tree-id27110 . -7) (undo-tree-id27111 . -7) (undo-tree-id27112 . -7) (undo-tree-id27113 . -7) (undo-tree-id27114 . -7) (undo-tree-id27115 . -7) (undo-tree-id27116 . -7) (undo-tree-id27117 . -7) (undo-tree-id27118 . -7) (undo-tree-id27119 . -7) (undo-tree-id27120 . -7) (undo-tree-id27121 . -7) (undo-tree-id27122 . -7) (undo-tree-id27123 . -7) (undo-tree-id27124 . -7) (undo-tree-id27125 . -7) (undo-tree-id27126 . -7) (undo-tree-id27127 . -7) (undo-tree-id27128 . -7) (undo-tree-id27129 . -7) (undo-tree-id27130 . -7) (undo-tree-id27131 . -7) (undo-tree-id27132 . -7) (undo-tree-id27133 . -7) (undo-tree-id27134 . -7) (undo-tree-id27135 . -7) (undo-tree-id27136 . -7) (undo-tree-id27137 . -7) (undo-tree-id27138 . -7) 1550) nil (25944 45008 685414 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1542) (undo-tree-id26997 . -1) (undo-tree-id26998 . -1) (undo-tree-id26999 . -1) (undo-tree-id27000 . -1) (undo-tree-id27001 . -1) (undo-tree-id27002 . -1) (undo-tree-id27003 . -1) (undo-tree-id27004 . -1) (undo-tree-id27005 . -1) (undo-tree-id27006 . -1) (undo-tree-id27007 . -1) (undo-tree-id27008 . -1) (undo-tree-id27009 . -1) (undo-tree-id27010 . -1) (undo-tree-id27011 . -1) (undo-tree-id27012 . -1) (undo-tree-id27013 . -1) (undo-tree-id27014 . -1) (undo-tree-id27015 . -1) (undo-tree-id27016 . -1) (undo-tree-id27017 . -1) (undo-tree-id27018 . -1) (undo-tree-id27019 . -1) (undo-tree-id27020 . -1) (undo-tree-id27021 . -1) (undo-tree-id27022 . -1) (undo-tree-id27023 . -1) (undo-tree-id27024 . -1) (undo-tree-id27025 . -1) (undo-tree-id27026 . -1) (undo-tree-id27027 . -1) (undo-tree-id27028 . -1) (undo-tree-id27029 . -1) (undo-tree-id27030 . -1) (undo-tree-id27031 . -1) (undo-tree-id27032 . -1) (undo-tree-id27033 . -1) (undo-tree-id27034 . -1) (undo-tree-id27035 . -1) (undo-tree-id27036 . -1) (undo-tree-id27037 . -1) (undo-tree-id27038 . -1) (undo-tree-id27039 . -1) (undo-tree-id27040 . -1) (undo-tree-id27041 . -1) (undo-tree-id27042 . -1) (undo-tree-id27043 . -1) (undo-tree-id27044 . -1) (undo-tree-id27045 . -1) (undo-tree-id27046 . -1) (undo-tree-id27047 . -1) (undo-tree-id27048 . -1) (undo-tree-id27049 . -1) (undo-tree-id27050 . -1) (undo-tree-id27051 . -1) (undo-tree-id27052 . -1) (undo-tree-id27053 . -1) (undo-tree-id27054 . -1) (undo-tree-id27055 . -1) (undo-tree-id27056 . -1) (undo-tree-id27057 . -1) (undo-tree-id27058 . -1) (undo-tree-id27059 . -1) (undo-tree-id27060 . -1) (undo-tree-id27061 . -1) (undo-tree-id27062 . -1) (undo-tree-id27063 . -1) (undo-tree-id27064 . -1) (undo-tree-id27065 . -1) (undo-tree-id27066 . -1) (undo-tree-id27067 . -1) (undo-tree-id27068 . -1) (undo-tree-id27069 . -1) (undo-tree-id27070 . -1) (undo-tree-id27071 . -1) (undo-tree-id27072 . -1) (undo-tree-id27073 . -1) (undo-tree-id27074 . -1) (undo-tree-id27075 . -1) (undo-tree-id27076 . -1) (undo-tree-id27077 . -1) (undo-tree-id27078 . -1) (undo-tree-id27079 . -1) (undo-tree-id27080 . -1) (undo-tree-id27081 . -1) (undo-tree-id27082 . -1) (undo-tree-id27083 . -1) (undo-tree-id27084 . -1) (undo-tree-id27085 . -1) (undo-tree-id27086 . -1) (undo-tree-id27087 . -1) (undo-tree-id27088 . -1) (undo-tree-id27089 . -1) (undo-tree-id27090 . -1) (undo-tree-id27091 . -1) (undo-tree-id27092 . -1) (undo-tree-id27093 . -1) (undo-tree-id27094 . -1) (undo-tree-id27095 . -1) (undo-tree-id27096 . -1) (undo-tree-id27097 . -1) (undo-tree-id27098 . -1) (undo-tree-id27099 . -1) (undo-tree-id27100 . -1) (undo-tree-id27101 . -1) (undo-tree-id27102 . -1) (undo-tree-id27103 . -1) (undo-tree-id27104 . -1) 1543) nil (25944 45008 685376 0) 0 nil])
([nil nil ((1542 . 1543)) nil (25944 45008 685265 0) 0 nil])
([nil nil ((1543 . 1544)) nil (25944 45008 685264 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1543) (undo-tree-id26990 . -1) (undo-tree-id26991 . -1) (undo-tree-id26992 . -1) (undo-tree-id26993 . -1) (undo-tree-id26994 . -1) (undo-tree-id26995 . -1) (undo-tree-id26996 . -1) 1544) nil (25944 45008 685263 0) 0 nil])
([nil nil ((1543 . 1546)) nil (25944 45008 685254 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1543 1569 #s(yas--snippet nil nil #s(yas--exit 1569 nil) 107 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1569 nil) 107 nil nil nil nil)) (1543 . 1569) (#("get_bounding_client_rect()$0" 0 28 (fontified nil)) . 1543) (1543 . 1571) (#("get" 0 3 (fontified nil)) . 1543) (1543 . 1546) (#("get_bounding_client_rect()" 0 26 (fontified nil)) . -1543) (1543 . 1569) (#("get" 0 3 (fontified t)) . -1543) (undo-tree-id26979 . -3) (undo-tree-id26980 . -1) (undo-tree-id26981 . -1) (undo-tree-id26982 . -1) (undo-tree-id26983 . -1) (undo-tree-id26984 . -2) (undo-tree-id26985 . -2) (undo-tree-id26986 . -3) (undo-tree-id26987 . -3) (undo-tree-id26988 . -3) (undo-tree-id26989 . -3) 1546) nil (25944 45008 685250 0) 0 nil])
([nil nil ((1569 . 1570)) nil (25944 45008 685223 0) 0 nil])
([nil nil ((1570 . 1572) (t 25944 45008 744033 871000)) nil (25944 45038 182456 0) 0 nil])
([nil nil ((1572 . 1573)) nil (25944 45038 182455 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1572) (undo-tree-id27671 . -1) (undo-tree-id27672 . -1) (undo-tree-id27673 . -1) 1573) nil (25944 45038 182453 0) 0 nil])
([nil nil ((1572 . 1574)) nil (25944 45038 182449 0) 0 nil])
([nil nil ((1572 . 1579) (#("lo" 0 2 (fontified nil)) . 1572) (1572 . 1574) (#("logging" 0 7 (fontified nil)) . -1572) (1572 . 1579) (#("lo" 0 2 (fontified t)) . -1572) (undo-tree-id27661 . -2) (undo-tree-id27662 . -1) (undo-tree-id27663 . -1) (undo-tree-id27664 . -1) (undo-tree-id27665 . -1) (undo-tree-id27666 . -1) (undo-tree-id27667 . -2) (undo-tree-id27668 . -2) (undo-tree-id27669 . -2) (undo-tree-id27670 . -2) 1574) nil (25944 45038 182447 0) 0 nil])
([nil nil ((1579 . 1582)) nil (25944 45038 182433 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1581 1587 #s(yas--snippet nil nil #s(yas--exit 1586 nil) 108 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1586 nil) 108 nil nil nil nil)) (1581 . 1587) (#("log!($0)" 0 8 (fontified nil)) . 1581) (1581 . 1589) (#("l" 0 1 (fontified nil)) . 1581) (1581 . 1582) (#("log!(…)" 0 7 (fontified nil)) . -1581) (1581 . 1588) (#("l" 0 1 (fontified t)) . -1581) (undo-tree-id27656 . -1) (undo-tree-id27657 . -1) (undo-tree-id27658 . -1) (undo-tree-id27659 . -1) (undo-tree-id27660 . -1) 1582) nil (25944 45038 182431 0) 0 nil])
([nil nil ((1586 . 1587)) nil (25944 45038 182422 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1586) (undo-tree-id27647 . -1) (undo-tree-id27648 . -1) (undo-tree-id27649 . -1) (undo-tree-id27650 . -1) (undo-tree-id27651 . -1) (undo-tree-id27652 . -1) (undo-tree-id27653 . -1) (undo-tree-id27654 . -1) (undo-tree-id27655 . -1) 1587) nil (25944 45038 182421 0) 0 nil])
([nil nil ((1586 . 1588)) nil (25944 45038 182411 0) 0 nil])
([nil nil ((1587 . 1589)) nil (25944 45038 182410 0) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-string-face fontified t)) . -1587) (undo-tree-id27641 . -1) (undo-tree-id27642 . -1) (undo-tree-id27643 . -1) (undo-tree-id27644 . -1) (#("[" 0 1 (face font-lock-string-face fontified t)) . -1588) (undo-tree-id27645 . -1) (undo-tree-id27646 . -1) 1589) nil (25944 45038 182408 0) 0 nil])
([nil nil ((1587 . 1592)) nil (25944 45038 182400 0) 0 nil])
([nil nil ((1593 . 1597)) nil (25944 45038 182399 0) 0 nil])
([nil nil ((1595 . 1599) (#("re" 0 2 (fontified nil)) . 1595) (1595 . 1597) (#("rect" 0 4 (fontified nil)) . -1595) (1595 . 1599) (#("re" 0 2 (fontified t)) . -1595) (undo-tree-id27636 . -2) (undo-tree-id27637 . -1) (undo-tree-id27638 . -2) (undo-tree-id27639 . -2) (undo-tree-id27640 . -2) 1597) nil (25944 45038 182398 0) 0 nil])
([nil nil ((1599 . 1601)) nil (25944 45038 182390 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1600 1607 #s(yas--snippet nil nil #s(yas--exit 1607 nil) 109 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1607 nil) 109 nil nil nil nil)) (1600 . 1607) (#("width()$0" 0 9 (fontified nil)) . 1600) (1600 . 1609) (#("w" 0 1 (fontified nil)) . 1600) (1600 . 1601) (#("width()" 0 7 (fontified nil)) . -1600) (1600 . 1607) (#("w" 0 1 (fontified t)) . -1600) (undo-tree-id27631 . -1) (undo-tree-id27632 . -1) (undo-tree-id27633 . -1) (undo-tree-id27634 . -1) (undo-tree-id27635 . -1) 1601) nil (25944 45038 182388 0) 0 nil])
([nil nil ((1607 . 1611)) nil (25944 45038 182379 0) 0 nil])
([nil nil ((1609 . 1613) (#("re" 0 2 (fontified nil)) . 1609) (1609 . 1611) (#("rect" 0 4 (fontified nil)) . -1609) (1609 . 1613) (#("re" 0 2 (fontified t)) . -1609) (undo-tree-id27626 . -2) (undo-tree-id27627 . -1) (undo-tree-id27628 . -2) (undo-tree-id27629 . -2) (undo-tree-id27630 . -2) 1611) nil (25944 45038 182377 0) 0 nil])
([nil nil ((1613 . 1615)) nil (25944 45038 182370 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -1614) (undo-tree-id27623 . -1) (undo-tree-id27624 . -1) (undo-tree-id27625 . -1) 1615) nil (25944 45038 182368 0) 0 nil])
([nil nil ((1614 . 1615)) nil (25944 45038 182364 0) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -1614) (undo-tree-id27618 . -1) (undo-tree-id27619 . -1) (undo-tree-id27620 . -1) (undo-tree-id27621 . -1) (undo-tree-id27622 . -1) 1615) nil (25944 45038 182363 0) 0 nil])
([nil nil ((1614 . 1615)) nil (25944 45038 182356 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -1614) (undo-tree-id27615 . -1) (undo-tree-id27616 . -1) (undo-tree-id27617 . -1) 1615) nil (25944 45038 182355 0) 0 nil])
([nil nil ((1614 . 1617)) nil (25944 45038 182351 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1614 1622 #s(yas--snippet nil nil #s(yas--exit 1622 nil) 110 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1622 nil) 110 nil nil nil nil)) (1614 . 1622) (#("height()$0" 0 10 (fontified nil)) . 1614) (1614 . 1624) (#("hei" 0 3 (fontified nil)) . 1614) (1614 . 1617) (#("height()" 0 8 (fontified nil)) . -1614) (1614 . 1622) (#("hei" 0 3 (fontified t)) . -1614) (undo-tree-id27606 . -3) (undo-tree-id27607 . -1) (undo-tree-id27608 . -1) (undo-tree-id27609 . -2) (undo-tree-id27610 . -2) (undo-tree-id27611 . -3) (undo-tree-id27612 . -3) (undo-tree-id27613 . -3) (undo-tree-id27614 . -3) 1617) nil (25944 45038 182348 0) 0 nil])
([nil nil ((1623 . 1624)) nil (25944 45038 182323 0) 0 nil])
([nil nil ((#("800" 0 3 (fontified t)) . -2555) (undo-tree-id27698 . -3) (undo-tree-id27699 . -3) (undo-tree-id27700 . -3) (undo-tree-id27701 . -3) (undo-tree-id27702 . -3) (undo-tree-id27703 . -3) (undo-tree-id27704 . -3) (undo-tree-id27705 . -3) (undo-tree-id27706 . -3) (undo-tree-id27707 . -3) (undo-tree-id27708 . -3) (undo-tree-id27709 . -3) (undo-tree-id27710 . -3) (undo-tree-id27711 . -3) (undo-tree-id27712 . -3) (undo-tree-id27713 . -3) (undo-tree-id27714 . -3) (undo-tree-id27715 . -3) (undo-tree-id27716 . -3) (undo-tree-id27717 . -3) (undo-tree-id27718 . -3) 2558 (t 25944 45038 240527 231000)) nil (25944 45092 854255 0) 0 nil])
([nil nil ((#("width=" 0 6 (fontified t)) . -2549) (undo-tree-id27674 . -6) (undo-tree-id27675 . -6) (undo-tree-id27676 . -6) (undo-tree-id27677 . -6) (undo-tree-id27678 . -6) (undo-tree-id27679 . -6) (undo-tree-id27680 . -6) (undo-tree-id27681 . -6) (undo-tree-id27682 . -6) (undo-tree-id27683 . -6) (undo-tree-id27684 . -6) (undo-tree-id27685 . -6) (undo-tree-id27686 . -6) (undo-tree-id27687 . -6) (undo-tree-id27688 . -6) (undo-tree-id27689 . -6) (undo-tree-id27690 . -6) (undo-tree-id27691 . -6) (undo-tree-id27692 . -6) (undo-tree-id27693 . -6) (undo-tree-id27694 . -6) (undo-tree-id27695 . -6) (undo-tree-id27696 . -6) (undo-tree-id27697 . -6) 2555) nil (25944 45092 854227 0) 0 nil])
([nil nil ((2549 . 2563)) nil (25944 45092 854186 0) 0 nil])
([nil nil ((2562 . 2566)) nil (25944 45092 854182 0) 0 nil])
([nil nil ((#("400)" 0 4 (fontified t)) . -1894) (undo-tree-id27737 . -4) (undo-tree-id27738 . -4) 1898 (t 25944 45092 913855 296000)) nil (25944 45130 680828 0) 0 nil])
([nil nil ((#("horizontally(" 0 13 (fontified t)) . -1881) (undo-tree-id27734 . -7) (undo-tree-id27735 . -13) (undo-tree-id27736 . -13) 1894) nil (25944 45130 680824 0) 0 nil])
([nil nil ((1881 . 1882)) nil (25944 45130 680819 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1888 1893 nil nil nil t #s(yas--exit 1894 nil))) #s(yas--exit 1894 nil) 111 nil #s(yas--field 1 1888 1893 nil nil nil t #s(yas--exit 1894 nil)) nil nil)) (1875 . 1890) (#("split_evenly(${1:_})$0" 0 22 (fontified nil)) . 1875) (1875 . 1897) (#("split_e" 0 7 (fontified nil)) . 1875) (1875 . 1882) (#("split_evenly(…)" 0 15 (fontified nil)) . -1875) (1875 . 1890) (#("split_e" 0 7 (fontified t)) . -1875) (undo-tree-id27731 . -6) (undo-tree-id27732 . -6) (undo-tree-id27733 . -7) 1882) nil (25944 45130 680817 0) 0 nil])
([nil nil ((1889 . 1890) (#("_" 0 1 (fontified nil)) . 1889) (1888 . 1889)) nil (25944 45130 680810 0) 0 nil])
([nil nil ((1889 . 1892)) nil (25944 45130 680808 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1875 1894 #s(yas--snippet nil (#s(yas--field 1 1888 1893 nil nil nil t #s(yas--exit 1894 nil))) #s(yas--exit 1894 nil) 111 nil #s(yas--field 1 1888 1893 nil nil nil t #s(yas--exit 1894 nil)) nil nil))) nil (25944 45130 680807 0) 0 nil])
([nil nil ((#("right)" 0 5 (fontified t) 5 6 (fontified t)) . -1853) (undo-tree-id27727 . -6) (undo-tree-id27728 . -6) (undo-tree-id27729 . -6) (undo-tree-id27730 . -6) 1859) nil (25944 45130 680806 0) 0 nil])
([nil nil ((#("left, " 0 6 (fontified t)) . -1847) (undo-tree-id27723 . -6) (undo-tree-id27724 . -6) (undo-tree-id27725 . -6) (undo-tree-id27726 . -6) 1853) nil (25944 45130 680800 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -1846) (undo-tree-id27719 . -1) (undo-tree-id27720 . -1) (undo-tree-id27721 . -1) (undo-tree-id27722 . -1) 1847) nil (25944 45130 680793 0) 0 nil])
([nil nil ((1846 . 1862)) nil (25944 45130 680778 0) 0 nil])
([nil nil ((#("left" 0 4 (fontified t)) . -1936) (undo-tree-id27748 . -3) (undo-tree-id27749 . -4) (undo-tree-id27750 . -3) (undo-tree-id27751 . -3) (undo-tree-id27752 . -3) (undo-tree-id27753 . -3) (undo-tree-id27754 . -3) (undo-tree-id27755 . -3) (undo-tree-id27756 . -3) (undo-tree-id27757 . -3) (undo-tree-id27758 . -3) (undo-tree-id27759 . -3) (undo-tree-id27760 . -3) (undo-tree-id27761 . -3) (undo-tree-id27762 . -3) (undo-tree-id27763 . -3) (undo-tree-id27764 . -3) (undo-tree-id27765 . -3) (undo-tree-id27766 . -3) (undo-tree-id27767 . -3) (undo-tree-id27768 . -4) (undo-tree-id27769 . -4) (undo-tree-id27770 . -4) (undo-tree-id27771 . -4) (undo-tree-id27772 . -4) 1940 (t 25944 45130 742853 328000)) nil (25944 45137 634122 0) 0 nil])
([nil nil ((1936 . 1938)) nil (25944 45137 634094 0) 0 nil])
([nil nil ((1936 . 1948) (#("dr" 0 2 (fontified nil)) . 1936) (1936 . 1938) (#("drawing_area" 0 12 (fontified nil)) . -1936) (1936 . 1948) (#("dr" 0 2 (fontified t)) . -1936) (undo-tree-id27739 . -2) (undo-tree-id27740 . -2) (undo-tree-id27741 . -1) (undo-tree-id27742 . -2) (undo-tree-id27743 . -2) (undo-tree-id27744 . -2) (undo-tree-id27745 . -2) (undo-tree-id27746 . -2) (undo-tree-id27747 . -2) 1938) nil (25944 45137 634092 0) 0 nil])
([nil nil ((1948 . 1950)) nil (25944 45137 634075 0) 0 nil])
([nil nil ((1949 . 1950)) nil (25944 45137 634070 0) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -1948) (undo-tree-id27920 . -1) (undo-tree-id27921 . -1) (undo-tree-id27922 . -1) (undo-tree-id27923 . -1) (undo-tree-id27924 . -1) (undo-tree-id27925 . -1) (undo-tree-id27926 . -1) (undo-tree-id27927 . -1) (undo-tree-id27928 . -1) (undo-tree-id27929 . -1) (undo-tree-id27930 . -1) (undo-tree-id27931 . -1) (undo-tree-id27932 . -1) (undo-tree-id27933 . -1) (undo-tree-id27934 . -1) (undo-tree-id27935 . -1) (undo-tree-id27936 . -1) (undo-tree-id27937 . -1) (undo-tree-id27938 . -1) (undo-tree-id27939 . -1) (undo-tree-id27940 . -1) (undo-tree-id27941 . -1) (undo-tree-id27942 . -1) (undo-tree-id27943 . -1) (undo-tree-id27944 . -1) (undo-tree-id27945 . -1) (undo-tree-id27946 . -1) (undo-tree-id27947 . -1) (undo-tree-id27948 . -1) (undo-tree-id27949 . -1) (undo-tree-id27950 . -1) (undo-tree-id27951 . -1) (undo-tree-id27952 . -1) (undo-tree-id27953 . -1) (undo-tree-id27954 . -1) (undo-tree-id27955 . -1) (undo-tree-id27956 . -1) (undo-tree-id27957 . -1) (undo-tree-id27958 . -1) (undo-tree-id27959 . -1) (undo-tree-id27960 . -1) (undo-tree-id27961 . -1) (undo-tree-id27962 . -1) (undo-tree-id27963 . -1) (undo-tree-id27964 . -1) (undo-tree-id27965 . -1) (undo-tree-id27966 . -1) (undo-tree-id27967 . -1) (undo-tree-id27968 . -1) (undo-tree-id27969 . -1) (undo-tree-id27970 . -1) (undo-tree-id27971 . -1) (undo-tree-id27972 . -1) (undo-tree-id27973 . -1) (undo-tree-id27974 . -1) (undo-tree-id27975 . -1) (undo-tree-id27976 . -1) (undo-tree-id27977 . -1) (undo-tree-id27978 . -1) (undo-tree-id27979 . -1) (#("0" 0 1 (fontified t)) . -1949) (undo-tree-id27980 . -1) (undo-tree-id27981 . -1) (undo-tree-id27982 . -1) (undo-tree-id27983 . -1) (undo-tree-id27984 . -1) (undo-tree-id27985 . -1) (undo-tree-id27986 . -1) (undo-tree-id27987 . -1) (undo-tree-id27988 . -1) (undo-tree-id27989 . -1) (undo-tree-id27990 . -1) (undo-tree-id27991 . -1) (undo-tree-id27992 . -1) (undo-tree-id27993 . -1) (undo-tree-id27994 . -1) (undo-tree-id27995 . -1) (undo-tree-id27996 . -1) (undo-tree-id27997 . -1) (undo-tree-id27998 . -1) (undo-tree-id27999 . -1) (undo-tree-id28000 . -1) (undo-tree-id28001 . -1) (undo-tree-id28002 . -1) (undo-tree-id28003 . -1) (undo-tree-id28004 . -1) (undo-tree-id28005 . -1) (undo-tree-id28006 . -1) (undo-tree-id28007 . -1) (undo-tree-id28008 . -1) (undo-tree-id28009 . -1) (undo-tree-id28010 . -1) (undo-tree-id28011 . -1) (undo-tree-id28012 . -1) (undo-tree-id28013 . -1) (undo-tree-id28014 . -1) (undo-tree-id28015 . -1) (undo-tree-id28016 . -1) (undo-tree-id28017 . -1) (undo-tree-id28018 . -1) (undo-tree-id28019 . -1) (undo-tree-id28020 . -1) (undo-tree-id28021 . -1) (undo-tree-id28022 . -1) (undo-tree-id28023 . -1) (undo-tree-id28024 . -1) (undo-tree-id28025 . -1) (undo-tree-id28026 . -1) (undo-tree-id28027 . -1) (undo-tree-id28028 . -1) (undo-tree-id28029 . -1) (#("]" 0 1 (fontified t)) . -1950) (undo-tree-id28030 . -1) (undo-tree-id28031 . 1) (undo-tree-id28032 . -1) (undo-tree-id28033 . -1) (undo-tree-id28034 . -1) (undo-tree-id28035 . -1) (undo-tree-id28036 . -1) (undo-tree-id28037 . -1) (undo-tree-id28038 . -1) (undo-tree-id28039 . -1) 1951 (t 25944 45137 692510 638000)) nil (25944 45195 951083 0) 0 nil])
([nil nil ((1948 . 1950)) nil (25944 45195 950968 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -1949) (undo-tree-id27912 . -1) (undo-tree-id27913 . -1) (undo-tree-id27914 . -1) (undo-tree-id27915 . -1) (undo-tree-id27916 . -1) (undo-tree-id27917 . -1) (undo-tree-id27918 . -1) (undo-tree-id27919 . -1) 1950) nil (25944 45195 950966 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1948) (undo-tree-id27878 . -1) (undo-tree-id27879 . -1) (undo-tree-id27880 . -1) (undo-tree-id27881 . -1) (undo-tree-id27882 . -1) (undo-tree-id27883 . -1) (undo-tree-id27884 . -1) (undo-tree-id27885 . -1) (undo-tree-id27886 . -1) (undo-tree-id27887 . -1) (undo-tree-id27888 . -1) (undo-tree-id27889 . -1) (undo-tree-id27890 . -1) (undo-tree-id27891 . -1) (undo-tree-id27892 . -1) (undo-tree-id27893 . -1) (undo-tree-id27894 . -1) (undo-tree-id27895 . -1) (undo-tree-id27896 . -1) (undo-tree-id27897 . -1) (undo-tree-id27898 . -1) (undo-tree-id27899 . -1) (undo-tree-id27900 . -1) (undo-tree-id27901 . -1) (undo-tree-id27902 . -1) (undo-tree-id27903 . -1) (undo-tree-id27904 . -1) (undo-tree-id27905 . -1) (undo-tree-id27906 . -1) (undo-tree-id27907 . -1) (undo-tree-id27908 . -1) (undo-tree-id27909 . -1) (undo-tree-id27910 . -1) (undo-tree-id27911 . -1) 1949) nil (25944 45195 950955 0) 0 nil])
([nil nil ((1948 . 1950)) nil (25944 45195 950922 0) 0 nil])
([nil nil ((1936 . 1952) (#("drawing_area_v" 0 14 (fontified nil)) . 1936) (1936 . 1950) (#("drawing_area_vec" 0 16 (fontified nil)) . -1936) (1936 . 1952) (#("drawing_area_v" 0 14 (fontified t)) . -1936) (undo-tree-id27773 . -12) (undo-tree-id27774 . -12) (undo-tree-id27775 . -12) (undo-tree-id27776 . -12) (undo-tree-id27777 . -12) (undo-tree-id27778 . -12) (undo-tree-id27779 . -12) (undo-tree-id27780 . -12) (undo-tree-id27781 . -12) (undo-tree-id27782 . -12) (undo-tree-id27783 . -12) (undo-tree-id27784 . -12) (undo-tree-id27785 . -12) (undo-tree-id27786 . -12) (undo-tree-id27787 . -12) (undo-tree-id27788 . -12) (undo-tree-id27789 . -12) (undo-tree-id27790 . -12) (undo-tree-id27791 . -12) (undo-tree-id27792 . -12) (undo-tree-id27793 . -12) (undo-tree-id27794 . -12) (undo-tree-id27795 . -12) (undo-tree-id27796 . -12) (undo-tree-id27797 . -12) (undo-tree-id27798 . -12) (undo-tree-id27799 . -12) (undo-tree-id27800 . -12) (undo-tree-id27801 . -12) (undo-tree-id27802 . -12) (undo-tree-id27803 . -12) (undo-tree-id27804 . -12) (undo-tree-id27805 . -12) (undo-tree-id27806 . -12) (undo-tree-id27807 . -12) (undo-tree-id27808 . -12) (undo-tree-id27809 . -12) (undo-tree-id27810 . -12) (undo-tree-id27811 . -12) (undo-tree-id27812 . -12) (undo-tree-id27813 . -12) (undo-tree-id27814 . -12) (undo-tree-id27815 . -12) (undo-tree-id27816 . -12) (undo-tree-id27817 . -12) (undo-tree-id27818 . -12) (undo-tree-id27819 . -12) (undo-tree-id27820 . -12) (undo-tree-id27821 . -12) (undo-tree-id27822 . -12) (undo-tree-id27823 . -12) (undo-tree-id27824 . -12) (undo-tree-id27825 . -12) (undo-tree-id27826 . -12) (undo-tree-id27827 . -12) (undo-tree-id27828 . -12) (undo-tree-id27829 . -12) (undo-tree-id27830 . -12) (undo-tree-id27831 . -12) (undo-tree-id27832 . -12) (undo-tree-id27833 . -12) (undo-tree-id27834 . -12) (undo-tree-id27835 . -12) (undo-tree-id27836 . -12) (undo-tree-id27837 . -12) (undo-tree-id27838 . -12) (undo-tree-id27839 . -12) (undo-tree-id27840 . -12) (undo-tree-id27841 . -12) (undo-tree-id27842 . -12) (undo-tree-id27843 . -12) (undo-tree-id27844 . -12) (undo-tree-id27845 . -12) (undo-tree-id27846 . -12) (undo-tree-id27847 . -12) (undo-tree-id27848 . -12) (undo-tree-id27849 . -12) (undo-tree-id27850 . -12) (undo-tree-id27851 . -14) (undo-tree-id27852 . -12) (undo-tree-id27853 . -12) (undo-tree-id27854 . -12) (undo-tree-id27855 . -12) (undo-tree-id27856 . -12) (undo-tree-id27857 . -12) (undo-tree-id27858 . -12) (undo-tree-id27859 . -12) (undo-tree-id27860 . -12) (undo-tree-id27861 . -12) (undo-tree-id27862 . -12) (undo-tree-id27863 . -12) (undo-tree-id27864 . -12) (undo-tree-id27865 . -12) (undo-tree-id27866 . -12) (undo-tree-id27867 . -12) (undo-tree-id27868 . -12) (undo-tree-id27869 . -12) (undo-tree-id27870 . -12) (undo-tree-id27871 . -12) (undo-tree-id27872 . -12) (undo-tree-id27873 . -13) (undo-tree-id27874 . -13) (undo-tree-id27875 . -13) (undo-tree-id27876 . -14) (undo-tree-id27877 . -14) 1950) nil (25944 45195 950916 0) 0 nil])
([nil nil ((1952 . 1954)) nil (25944 45195 950801 0) 0 nil])
([nil nil ((1953 . 1954)) nil (25944 45195 950797 0) 0 nil])
([nil nil ((#("	logging::log!(\"{} {}\", rect.width(), rect.height());" 0 1 (fontified t) 1 8 (face font-lock-constant-face fontified t) 8 10 (fontified t) 10 14 (face font-lock-preprocessor-face fontified t) 14 15 (fontified t) 15 22 (face font-lock-string-face fontified t) 22 24 (fontified t) 24 29 (fontified t) 29 38 (fontified t) 38 43 (fontified t) 43 51 (fontified t) 51 53 (fontified t)) . 1571) (undo-tree-id28063 . -53) (undo-tree-id28064 . -53) (undo-tree-id28065 . -53) (undo-tree-id28066 . -53) (undo-tree-id28067 . -53) (undo-tree-id28068 . -53) (undo-tree-id28069 . -53) (undo-tree-id28070 . -53) (undo-tree-id28071 . -53) (undo-tree-id28072 . -53) (undo-tree-id28073 . -53) (undo-tree-id28074 . -53) (undo-tree-id28075 . -53) (undo-tree-id28076 . -53) (t 25944 45196 10943 46000)) nil (25944 45262 536194 0) 0 nil])
([nil nil ((#("	let rect = canvas.get_bounding_client_rect();" 0 1 (fontified t) 1 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 9 (face font-lock-variable-name-face fontified t) 9 12 (fontified t) 12 19 (fontified t) 19 46 (fontified t)) . 1524) (undo-tree-id28062 . -46)) nil (25944 45262 536178 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1524) (undo-tree-id28042 . -1) (undo-tree-id28043 . -1) (undo-tree-id28044 . -1) (undo-tree-id28045 . -1) (undo-tree-id28046 . -1) (undo-tree-id28047 . -1) (undo-tree-id28048 . -1) (undo-tree-id28049 . -1) (undo-tree-id28050 . -1) (undo-tree-id28051 . -1) (undo-tree-id28052 . -1) (undo-tree-id28053 . -1) (undo-tree-id28054 . -1) (undo-tree-id28055 . -1) (undo-tree-id28056 . -1) (undo-tree-id28057 . -1) (undo-tree-id28058 . -1) (undo-tree-id28059 . -1) (undo-tree-id28060 . -1) (undo-tree-id28061 . -1)) nil (25944 45262 536175 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1524) (undo-tree-id28040 . -1) (undo-tree-id28041 . -1)) nil (25944 47401 377689 0) 0 nil])
([nil nil ((10454 . 10458) (#("    " 0 4 (fontified nil)) . 10453) (undo-tree-id28125 . -4) (undo-tree-id28126 . -4) (undo-tree-id28127 . -4) (10452 . 10458) (t 25944 47402 218538 995000)) nil (25944 47815 832868 0) 0 nil] [nil nil ((#("1" 0 1 (fontified t)) . -1723) (undo-tree-id28077 . -1) (undo-tree-id28078 . -1) (undo-tree-id28079 . -1) (undo-tree-id28080 . -1) (undo-tree-id28081 . -1) (undo-tree-id28082 . -1) (undo-tree-id28083 . -1) (undo-tree-id28084 . -1) (undo-tree-id28085 . -1) (undo-tree-id28086 . -1) (undo-tree-id28087 . -1) (undo-tree-id28088 . -1) 1724 (t 25944 45262 594823 909000)) ((1723 . 1724)) (25944 47400 703708 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10793 . 10794) (nil fontified nil 10758 . 10794) (nil fontified nil 10755 . 10758) (nil fontified nil 10697 . 10755) (nil fontified nil 10695 . 10697) (nil fontified nil 10674 . 10695) (nil fontified nil 10672 . 10674) (nil fontified nil 10671 . 10672) (nil fontified nil 10668 . 10671) (nil fontified nil 10667 . 10668) (nil fontified nil 10664 . 10667) (nil fontified nil 10645 . 10664) (nil fontified nil 10637 . 10645) (nil fontified nil 10552 . 10637) (nil fontified nil 10546 . 10552) (nil fontified nil 10545 . 10546) (nil fontified nil 10542 . 10545) (nil fontified nil 10536 . 10542) (nil fontified nil 10535 . 10536) (nil fontified nil 10513 . 10535) (nil fontified nil 10512 . 10513) (nil fontified nil 10511 . 10512) (nil fontified nil 10508 . 10511) (nil fontified nil 10500 . 10508) (nil fontified nil 10493 . 10500) (nil fontified nil 10492 . 10493) (nil fontified nil 10488 . 10492) (nil fontified nil 10484 . 10488) (nil fontified nil 10466 . 10484) (nil fontified nil 10465 . 10466) (nil fontified nil 10462 . 10465) (nil fontified nil 10458 . 10462) (10458 . 10794)) nil (25944 47876 1151 0) 0 nil] [nil nil ((nil rear-nonsticky nil 10793 . 10794) (nil fontified nil 10758 . 10794) (nil fontified nil 10755 . 10758) (nil fontified nil 10697 . 10755) (nil fontified nil 10695 . 10697) (nil fontified nil 10674 . 10695) (nil fontified nil 10672 . 10674) (nil fontified nil 10671 . 10672) (nil fontified nil 10668 . 10671) (nil fontified nil 10667 . 10668) (nil fontified nil 10664 . 10667) (nil fontified nil 10645 . 10664) (nil fontified nil 10637 . 10645) (nil fontified nil 10552 . 10637) (nil fontified nil 10546 . 10552) (nil fontified nil 10545 . 10546) (nil fontified nil 10542 . 10545) (nil fontified nil 10536 . 10542) (nil fontified nil 10535 . 10536) (nil fontified nil 10513 . 10535) (nil fontified nil 10512 . 10513) (nil fontified nil 10511 . 10512) (nil fontified nil 10508 . 10511) (nil fontified nil 10500 . 10508) (nil fontified nil 10493 . 10500) (nil fontified nil 10492 . 10493) (nil fontified nil 10488 . 10492) (nil fontified nil 10484 . 10488) (nil fontified nil 10466 . 10484) (nil fontified nil 10465 . 10466) (nil fontified nil 10462 . 10465) (nil fontified nil 10458 . 10462) (10458 . 10794)) ((#("    let update_reset_value =  move |ev| {
        let v = event_target_value(&ev);
	let number = selected_num.get();
        reset_value.1.set(v.clone());
	keyboard_state.update(|Keyboard{keys, ..}| {
	    for key in keys.iter_mut() {
		if key.selected || number==0{
		    key.value.2 = v.parse::<u32>().unwrap();
		}
	    }
	});
    };" 0 4 (fontified nil) 4 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil) 8 26 (face font-lock-variable-name-face fontified nil) 26 30 (fontified nil) 30 34 (face font-lock-keyword-face fontified nil) 34 35 (fontified nil) 35 42 (fontified nil) 42 50 (fontified nil) 50 53 (face font-lock-keyword-face fontified nil) 53 54 (fontified nil) 54 55 (face font-lock-variable-name-face fontified nil) 55 77 (fontified nil) 77 78 (face rust-ampersand-face fontified nil) 78 83 (fontified nil) 83 84 (fontified nil) 84 87 (face font-lock-keyword-face fontified nil) 87 88 (fontified nil) 88 94 (face font-lock-variable-name-face fontified nil) 94 155 (fontified nil) 155 179 (fontified nil) 179 187 (face font-lock-type-face fontified nil) 187 201 (fontified nil) 201 206 (fontified nil) 206 209 (face font-lock-keyword-face fontified nil) 209 210 (fontified nil) 210 213 (face font-lock-variable-name-face fontified nil) 213 214 (fontified nil) 214 216 (face font-lock-keyword-face fontified nil) 216 235 (fontified nil) 235 237 (fontified nil) 237 239 (face font-lock-keyword-face fontified nil) 239 267 (fontified nil) 267 297 (fontified nil) 297 300 (face font-lock-type-face fontified nil) 300 330 (fontified nil) 330 335 (fontified nil) 335 336 (rear-nonsticky nil fontified nil)) . 10458) (undo-tree-id28128 . -235) (undo-tree-id28129 . -235) (nil fontified t 10493 . 10500) (nil fontified t 10536 . 10541) (nil fontified t 10552 . 10613) (nil fontified t 10645 . 10659) (nil fontified t 10674 . 10693) (nil fontified t 10697 . 10725) (nil fontified t 10758 . 10788) (nil rear-nonsticky t 10793 . 10794)) (25944 47815 831593 0) 0 nil])
([nil nil ((1723 . 1724)) ((#("0" 0 1 (fontified t)) . 1723) (undo-tree-id28089 . -1) (undo-tree-id28090 . -1) (undo-tree-id28091 . -1) (undo-tree-id28092 . -1) (undo-tree-id28093 . -1) (undo-tree-id28094 . -1) (undo-tree-id28095 . -1) (undo-tree-id28096 . -1) (undo-tree-id28097 . -1) (undo-tree-id28098 . -1) (undo-tree-id28099 . -1) (undo-tree-id28100 . -1) (undo-tree-id28101 . -1) (undo-tree-id28102 . -1) (undo-tree-id28103 . -1) (undo-tree-id28104 . -1) (undo-tree-id28105 . -1) (undo-tree-id28106 . -1) (undo-tree-id28107 . -1) (undo-tree-id28108 . -1) (undo-tree-id28109 . -1) (undo-tree-id28110 . -1) (undo-tree-id28111 . -1) (undo-tree-id28112 . -1) (undo-tree-id28113 . -1) (undo-tree-id28114 . -1) (undo-tree-id28115 . -1) (undo-tree-id28116 . -1) (undo-tree-id28117 . -1) (undo-tree-id28118 . -1) (undo-tree-id28119 . -1) (undo-tree-id28120 . -1) (undo-tree-id28121 . -1) (undo-tree-id28122 . -1) (undo-tree-id28123 . -1) (undo-tree-id28124 . -1) (t 25944 47373 517959 641000)) (25944 47373 458450 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -10458) 10454) nil (25944 47876 1142 0) 0 nil])
nil
nil
([nil nil ((#("value" 0 5 (face font-lock-variable-name-face fontified t)) . -10475) (undo-tree-id28154 . -5) (undo-tree-id28155 . -5) 10480) nil (25944 47876 1140 0) 0 nil])
([nil nil ((#("reset_" 0 6 (face font-lock-variable-name-face fontified t)) . -10469) (undo-tree-id28152 . -6) (undo-tree-id28153 . -6) 10475) nil (25944 47876 1137 0) 0 nil])
([nil nil ((10469 . 10474)) nil (25944 47876 1134 0) 0 nil])
([nil nil ((10474 . 10483)) nil (25944 47876 1133 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified t)) . -10588) (undo-tree-id28150 . -5) (undo-tree-id28151 . -5) 10593) nil (25944 47876 1132 0) 0 nil])
([nil nil ((#("reset_" 0 6 (fontified t)) . -10582) (undo-tree-id28148 . -6) (undo-tree-id28149 . -6) 10588) nil (25944 47876 1128 0) 0 nil])
([nil nil ((10582 . 10596)) nil (25944 47876 1125 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -10743) (undo-tree-id28130 . -1) (undo-tree-id28131 . -1) (undo-tree-id28132 . -1) (undo-tree-id28133 . -1) (undo-tree-id28134 . -1) (undo-tree-id28135 . -1) (undo-tree-id28136 . -1) (undo-tree-id28137 . -1) (undo-tree-id28138 . -1) (undo-tree-id28139 . -1) (undo-tree-id28140 . -1) (undo-tree-id28141 . -1) (undo-tree-id28142 . -1) (undo-tree-id28143 . -1) (undo-tree-id28144 . -1) (undo-tree-id28145 . -1) (undo-tree-id28146 . -1) (undo-tree-id28147 . -1) 10744) nil (25944 47876 1122 0) 0 nil])
([nil nil ((10743 . 10744)) nil (25944 47876 1081 0) 0 nil])
([nil nil ((9174 . 9179) (t 25944 47876 59647 160000)) nil (25944 47908 872132 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 9233 . 9234) (nil fontified nil 9219 . 9234) (nil fontified nil 9215 . 9219) (nil fontified nil 9198 . 9215) (nil fontified nil 9187 . 9198) (nil fontified nil 9186 . 9187) (nil fontified nil 9183 . 9186) (nil fontified nil 9179 . 9183) (9179 . 9234)) nil (25944 47908 872130 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -9179) 9231) nil (25944 47908 872127 0) 0 nil])
([nil nil ((#("value" 0 5 (face font-lock-variable-name-face fontified t)) . -9189) (undo-tree-id28225 . -5) (undo-tree-id28226 . -5) (undo-tree-id28227 . -5) (undo-tree-id28228 . -5) 9194) nil (25944 47908 872125 0) 0 nil])
([nil nil ((#("reset_" 0 6 (face font-lock-variable-name-face fontified t)) . -9183) (undo-tree-id28221 . -6) (undo-tree-id28222 . -6) (undo-tree-id28223 . -6) (undo-tree-id28224 . -6) 9189) nil (25944 47908 872120 0) 0 nil])
([nil nil ((9183 . 9197)) nil (25944 47908 872115 0) 0 nil])
([nil nil ((#("5" 0 1 (face font-lock-string-face fontified t)) . -9102) (undo-tree-id28188 . -1) (undo-tree-id28189 . -1) (undo-tree-id28190 . -1) (undo-tree-id28191 . -1) (undo-tree-id28192 . -1) (undo-tree-id28193 . -1) (undo-tree-id28194 . -1) (undo-tree-id28195 . -1) (undo-tree-id28196 . -1) (undo-tree-id28197 . -1) (undo-tree-id28198 . -1) (undo-tree-id28199 . -1) (undo-tree-id28200 . -1) (undo-tree-id28201 . -1) (undo-tree-id28202 . -1) (undo-tree-id28203 . -1) (undo-tree-id28204 . -1) (#("0" 0 1 (face font-lock-string-face fontified t)) . -9103) (undo-tree-id28205 . -1) (undo-tree-id28206 . -1) (undo-tree-id28207 . -1) (undo-tree-id28208 . -1) (undo-tree-id28209 . -1) (undo-tree-id28210 . -1) (undo-tree-id28211 . -1) (undo-tree-id28212 . -1) (undo-tree-id28213 . -1) (undo-tree-id28214 . -1) (undo-tree-id28215 . -1) (undo-tree-id28216 . -1) (undo-tree-id28217 . -1) (undo-tree-id28218 . -1) (undo-tree-id28219 . -1) (undo-tree-id28220 . -1) 9104) nil (25944 47908 872112 0) 0 nil])
([nil nil ((9102 . 9103)) nil (25944 47908 872077 0) 0 nil])
([nil nil ((#("4" 0 1 (face font-lock-string-face fontified t)) . -9102) (undo-tree-id28182 . -1) (undo-tree-id28183 . -1) (undo-tree-id28184 . -1) (undo-tree-id28185 . -1) (undo-tree-id28186 . -1) (undo-tree-id28187 . -1) 9103) nil (25944 47908 872076 0) 0 nil])
([nil nil ((9102 . 9103)) nil (25944 47908 872069 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-string-face fontified t)) . -9157) (undo-tree-id28174 . -1) (undo-tree-id28175 . -1) (undo-tree-id28176 . -1) (undo-tree-id28177 . -1) (undo-tree-id28178 . -1) (undo-tree-id28179 . -1) (undo-tree-id28180 . -1) (undo-tree-id28181 . -1) 9158) nil (25944 47908 872067 0) 0 nil])
([nil nil ((#("5" 0 1 (face font-lock-string-face fontified t)) . -9213) (undo-tree-id28156 . -1) (undo-tree-id28157 . -1) (undo-tree-id28158 . -1) (undo-tree-id28159 . -1) (undo-tree-id28160 . -1) (undo-tree-id28161 . -1) (undo-tree-id28162 . -1) (undo-tree-id28163 . -1) (undo-tree-id28164 . -1) (undo-tree-id28165 . -1) (undo-tree-id28166 . -1) (undo-tree-id28167 . -1) (#("0" 0 1 (face font-lock-string-face fontified t)) . -9214) (undo-tree-id28168 . -1) (undo-tree-id28169 . -1) (undo-tree-id28170 . -1) (undo-tree-id28171 . -1) (undo-tree-id28172 . -1) (undo-tree-id28173 . -1) 9215) nil (25944 47908 872056 0) 0 nil])
([nil nil ((9213 . 9215)) nil (25944 47908 872024 0) 0 nil])
([nil nil ((13637 . 13643) (#("		    " 0 6 (fontified nil)) . 13636) (undo-tree-id28301 . -6) (13636 . 13643) (#("		    " 0 6 (fontified nil)) . 13635) (undo-tree-id28302 . -6) (13634 . 13642) (t 25944 47908 930865 933000)) nil (25944 48022 308664 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 14039 . 14040) (nil fontified nil 14039 . 14040) (nil fontified nil 14013 . 14039) (nil fontified nil 14011 . 14013) (nil fontified nil 13990 . 14011) (nil fontified nil 13986 . 13990) (nil fontified nil 13985 . 13986) (nil fontified nil 13980 . 13985) (nil fontified nil 13973 . 13980) (nil fontified nil 13968 . 13973) (nil fontified nil 13967 . 13968) (nil fontified nil 13953 . 13967) (nil fontified nil 13946 . 13953) (nil fontified nil 13938 . 13946) (nil fontified nil 13927 . 13938) (nil fontified nil 13926 . 13927) (nil fontified nil 13919 . 13926) (nil fontified nil 13918 . 13919) (nil fontified nil 13913 . 13918) (nil fontified nil 13912 . 13913) (nil fontified nil 13911 . 13912) (nil fontified nil 13885 . 13911) (nil fontified nil 13883 . 13885) (nil fontified nil 13862 . 13883) (nil fontified nil 13858 . 13862) (nil fontified nil 13857 . 13858) (nil fontified nil 13847 . 13857) (nil fontified nil 13843 . 13847) (nil fontified nil 13835 . 13843) (nil fontified nil 13828 . 13835) (nil fontified nil 13823 . 13828) (nil fontified nil 13818 . 13823) (nil fontified nil 13815 . 13818) (nil fontified nil 13810 . 13815) (nil fontified nil 13803 . 13810) (nil fontified nil 13792 . 13803) (nil fontified nil 13791 . 13792) (nil fontified nil 13790 . 13791) (nil fontified nil 13785 . 13790) (nil fontified nil 13778 . 13785) (nil fontified nil 13773 . 13778) (nil fontified nil 13768 . 13773) (nil fontified nil 13767 . 13768) (nil fontified nil 13761 . 13767) (nil fontified nil 13760 . 13761) (nil fontified nil 13759 . 13760) (nil fontified nil 13708 . 13759) (nil fontified nil 13701 . 13708) (nil fontified nil 13700 . 13701) (nil fontified nil 13691 . 13700) (nil fontified nil 13681 . 13691) (nil fontified nil 13680 . 13681) (nil fontified nil 13673 . 13680) (nil fontified nil 13672 . 13673) (nil fontified nil 13669 . 13672) (nil fontified nil 13668 . 13669) (nil fontified nil 13646 . 13668) (nil fontified nil 13645 . 13646) (nil fontified nil 13643 . 13645) (nil fontified nil 13642 . 13643) (nil fontified nil 13636 . 13642) (13636 . 14040)) nil (25944 48022 308657 0) 0 nil])
([nil nil ((#("Travel" 0 6 (face font-lock-string-face fontified t)) . -13661) (undo-tree-id28300 . -6) 13667) nil (25944 48022 308640 0) 0 nil])
([nil nil ((#("Reset " 0 6 (face font-lock-string-face fontified t)) . -13655) (undo-tree-id28298 . -5) (undo-tree-id28299 . -6) 13661) nil (25944 48022 308638 0) 0 nil])
([nil nil ((#("Dynamic " 0 8 (face font-lock-string-face fontified t)) . -13647) (undo-tree-id28296 . -8) (undo-tree-id28297 . -8) 13655) nil (25944 48022 308634 0) 0 nil])
([nil nil ((13647 . 13648)) nil (25944 48022 308631 0) 0 nil])
([nil nil ((#("D" 0 1 (face font-lock-string-face fontified t)) . -13647) (undo-tree-id28295 . -1) 13648) nil (25944 48022 308630 0) 0 nil])
([nil nil ((13647 . 13649)) nil (25944 48022 308628 0) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-string-face fontified t)) . -13647) (undo-tree-id28293 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -13648) (undo-tree-id28294 . -1) 13649) nil (25944 48022 308627 0) 0 nil])
([nil nil ((13647 . 13661)) nil (25944 48022 308623 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-string-face fontified t)) . -13849) (undo-tree-id28291 . -1) (undo-tree-id28292 . -1) 13850) nil (25944 48022 308622 0) 0 nil])
([nil nil ((13849 . 13850)) nil (25944 48022 308619 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified t)) . -13869) (undo-tree-id28289 . -5) (undo-tree-id28290 . -5) 13874) nil (25944 48022 308618 0) 0 nil])
([nil nil ((#("reset_" 0 6 (fontified t)) . -13863) (undo-tree-id28287 . -6) (undo-tree-id28288 . -6) 13869) nil (25944 48022 308614 0) 0 nil])
([nil nil ((13863 . 13865)) nil (25944 48022 308611 0) 0 nil])
([nil nil ((13863 . 13877) (#("lo" 0 2 (fontified nil)) . 13863) (13857 . 13865) (#("lower_deadzone" 0 14 (fontified nil)) . -13857) (13857 . 13871) (#("value=lo" 0 8 (fontified t)) . -13857) (undo-tree-id28285 . -6) (undo-tree-id28286 . -8) 13865) nil (25944 48022 308610 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified t)) . -13902) (undo-tree-id28283 . -5) (undo-tree-id28284 . -5) 13907) nil (25944 48022 308605 0) 0 nil])
([nil nil ((#("reset_" 0 6 (fontified t)) . -13896) (undo-tree-id28281 . -6) (undo-tree-id28282 . -6) 13902) nil (25944 48022 308598 0) 0 nil])
([nil nil ((13896 . 13897)) nil (25944 48022 308595 0) 0 nil])
([nil nil ((13889 . 13910) (#("update_l" 0 8 (fontified nil)) . 13889) (13883 . 13897) (#("update_lower_deadzone" 0 21 (fontified nil)) . -13883) (13883 . 13904) (#("input=update_l" 0 14 (fontified t)) . -13883) (undo-tree-id28279 . -13) (undo-tree-id28280 . -14) 13897) nil (25944 48022 308593 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified t)) . -14003) (undo-tree-id28275 . -5) (undo-tree-id28276 . -5) (undo-tree-id28277 . -5) (undo-tree-id28278 . -5) 14008) nil (25944 48028 233985 0) 0 nil])
([nil nil ((14003 . 14004) (t 25944 48028 786601 285000)) nil (25944 48034 806074 0) 0 nil] [nil nil ((#("reset_" 0 6 (fontified t)) . -13997) (undo-tree-id28271 . -6) (undo-tree-id28272 . -6) (undo-tree-id28273 . -6) (undo-tree-id28274 . -6) 14003) ((13997 . 14003)) (25944 48027 813281 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -14002) (undo-tree-id28396 . -1) (undo-tree-id28397 . -1) (undo-tree-id28398 . -1) (undo-tree-id28399 . -1) (undo-tree-id28400 . -1) (undo-tree-id28401 . -1) (undo-tree-id28402 . -1) (undo-tree-id28403 . -1) (undo-tree-id28404 . -1) (undo-tree-id28405 . -1) (undo-tree-id28406 . -1) (undo-tree-id28407 . -1) (undo-tree-id28408 . -1) (undo-tree-id28409 . -1) (undo-tree-id28410 . -1) (undo-tree-id28411 . -1) (undo-tree-id28412 . -1) (undo-tree-id28413 . -1) (undo-tree-id28414 . -1) (undo-tree-id28415 . -1) (undo-tree-id28416 . -1) (undo-tree-id28417 . -1) (undo-tree-id28418 . -1) (undo-tree-id28419 . -1) (undo-tree-id28420 . -1) (undo-tree-id28421 . -1) (undo-tree-id28422 . -1) (undo-tree-id28423 . -1) (undo-tree-id28424 . -1) (undo-tree-id28425 . -1) (undo-tree-id28426 . -1) (undo-tree-id28427 . -1) (undo-tree-id28428 . -1) (undo-tree-id28429 . -1) (undo-tree-id28430 . -1) (#("l" 0 1 (fontified t)) . -14003) (undo-tree-id28431 . -1) (undo-tree-id28432 . -1) (undo-tree-id28433 . -1) (undo-tree-id28434 . -1) 14004) nil (25944 48034 806070 0) 0 nil])
([nil nil ((13997 . 13999)) ((#("lo" 0 2 (fontified t)) . 13997) (undo-tree-id28310 . -2) (undo-tree-id28311 . -2)) (25944 48027 407272 0) 0 nil])
([nil nil ((#("reset" 0 5 (fontified t)) . -13997) (undo-tree-id28359 . -5) (undo-tree-id28360 . -5) (undo-tree-id28361 . -5) (undo-tree-id28362 . -5) (undo-tree-id28363 . -5) (undo-tree-id28364 . -5) (undo-tree-id28365 . -5) (undo-tree-id28366 . -5) (undo-tree-id28367 . -5) (undo-tree-id28368 . -5) (undo-tree-id28369 . -5) (undo-tree-id28370 . -5) (undo-tree-id28371 . -5) (undo-tree-id28372 . -5) (undo-tree-id28373 . -5) (undo-tree-id28374 . -5) (undo-tree-id28375 . -5) (undo-tree-id28376 . -5) (undo-tree-id28377 . -5) (undo-tree-id28378 . -5) (undo-tree-id28379 . -5) (undo-tree-id28380 . -5) (undo-tree-id28381 . -5) (undo-tree-id28382 . -5) (undo-tree-id28383 . -5) (undo-tree-id28384 . -5) (undo-tree-id28385 . -5) (undo-tree-id28386 . -5) (undo-tree-id28387 . -5) (undo-tree-id28388 . -5) (undo-tree-id28389 . -5) (undo-tree-id28390 . -5) (undo-tree-id28391 . -5) (undo-tree-id28392 . -5) (undo-tree-id28393 . -5) (undo-tree-id28394 . -5) (undo-tree-id28395 . -5) 14002) nil (25944 48034 806031 0) 0 nil])
([nil nil ((13997 . 14011) (#("lo" 0 2 (fontified nil)) . 13997) (13991 . 13999) (#("lower_deadzone" 0 14 (fontified nil)) . -13991) (13991 . 14005) (#("value=lo" 0 8 (fontified t)) . -13991) (undo-tree-id28267 . -6) (undo-tree-id28268 . -8) (undo-tree-id28269 . -6) (undo-tree-id28270 . -6) 13999) ((13991 . 13999) (#("lower_deadzone" 0 14 (fontified nil)) . 13991) (13991 . 14005) (#("value=lo" 0 6 (fontified nil) 6 8 (fontified nil)) . 13991) (13997 . 13999) (#("lower_deadzone" 0 14 (fontified t)) . 13997)) (25944 48027 12389 0) 0 nil])
([nil nil ((13997 . 13998)) nil (25944 48034 805989 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified t)) . -14036) (undo-tree-id28257 . -5) (undo-tree-id28258 . -5) (undo-tree-id28259 . -5) (undo-tree-id28260 . -5) (undo-tree-id28261 . -5) (undo-tree-id28262 . -5) (undo-tree-id28263 . -5) (undo-tree-id28264 . -5) (undo-tree-id28265 . -5) (undo-tree-id28266 . -5) 14041) ((14036 . 14041)) (25944 48026 694994 0) 0 nil])
([nil nil ((13997 . 14011) (#("l" 0 1 (fontified nil)) . 13997) (13991 . 13998) (#("lower_deadzone" 0 14 (fontified nil)) . -13991) (13991 . 14005) (#("value=l" 0 7 (fontified t)) . -13991) (undo-tree-id28312 . -7) (undo-tree-id28313 . -7) (undo-tree-id28314 . -6) (undo-tree-id28315 . -6) (undo-tree-id28316 . -6) (undo-tree-id28317 . -6) (undo-tree-id28318 . -6) (undo-tree-id28319 . -6) (undo-tree-id28320 . -6) (undo-tree-id28321 . -6) (undo-tree-id28322 . -6) (undo-tree-id28323 . -6) (undo-tree-id28324 . -6) (undo-tree-id28325 . -6) (undo-tree-id28326 . -6) (undo-tree-id28327 . -6) (undo-tree-id28328 . -6) (undo-tree-id28329 . -6) (undo-tree-id28330 . -6) (undo-tree-id28331 . -6) (undo-tree-id28332 . -6) (undo-tree-id28333 . -6) (undo-tree-id28334 . -6) (undo-tree-id28335 . -6) (undo-tree-id28336 . -6) (undo-tree-id28337 . -6) (undo-tree-id28338 . -6) (undo-tree-id28339 . -6) (undo-tree-id28340 . -6) (undo-tree-id28341 . -6) (undo-tree-id28342 . -6) (undo-tree-id28343 . -6) (undo-tree-id28344 . -6) (undo-tree-id28345 . -6) (undo-tree-id28346 . -6) (undo-tree-id28347 . -6) (undo-tree-id28348 . -6) (undo-tree-id28349 . -6) (undo-tree-id28350 . -6) (undo-tree-id28351 . -6) (undo-tree-id28352 . -6) (undo-tree-id28353 . -7) (undo-tree-id28354 . -7) (undo-tree-id28355 . -7) (undo-tree-id28356 . -7) (undo-tree-id28357 . -7) (undo-tree-id28358 . -7) 13998) nil (25944 48034 805983 0) 0 nil])
([nil nil ((#("reset_" 0 6 (fontified t)) . -14030) (undo-tree-id28246 . -6) (undo-tree-id28247 . -6) (undo-tree-id28248 . -6) (undo-tree-id28249 . -6) (undo-tree-id28250 . -6) (undo-tree-id28251 . -6) (undo-tree-id28252 . -6) (undo-tree-id28253 . -6) (undo-tree-id28254 . -6) (undo-tree-id28255 . -6) (undo-tree-id28256 . -6) 14036) ((14030 . 14036)) (25944 48026 409435 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified t)) . -14036) (undo-tree-id28471 . -5) (undo-tree-id28472 . -5) (undo-tree-id28473 . -5) (undo-tree-id28474 . -5) (undo-tree-id28475 . -5) (undo-tree-id28476 . -5) (undo-tree-id28477 . -5) (undo-tree-id28478 . -5) (undo-tree-id28479 . -5) (undo-tree-id28480 . -5) (undo-tree-id28481 . -5) (undo-tree-id28482 . -5) 14041 (t 25944 48034 867689 952000)) nil (25944 48039 131175 0) 0 nil])
([nil nil ((14030 . 14032)) ((#("lo" 0 2 (fontified t)) . 14030) (undo-tree-id28303 . -2) (undo-tree-id28304 . -1) (undo-tree-id28305 . -2) (undo-tree-id28306 . -2) (undo-tree-id28307 . -2) (undo-tree-id28308 . -2) (undo-tree-id28309 . -2)) (25944 48026 31406 0) 0 nil])
([nil nil ((#("reset_" 0 6 (fontified t)) . -14030) (undo-tree-id28456 . -6) (undo-tree-id28457 . -6) (undo-tree-id28458 . -6) (undo-tree-id28459 . -6) (undo-tree-id28460 . -6) (undo-tree-id28461 . -6) (undo-tree-id28462 . -6) (undo-tree-id28463 . -6) (undo-tree-id28464 . -6) (undo-tree-id28465 . -6) (undo-tree-id28466 . -6) (undo-tree-id28467 . -6) (undo-tree-id28468 . -6) (undo-tree-id28469 . -6) (undo-tree-id28470 . -6) 14036) nil (25944 48039 131161 0) 0 nil])
([nil nil ((14023 . 14044) (#("update_lo" 0 9 (fontified nil)) . 14023) (14017 . 14032) (#("update_lower_deadzone" 0 21 (fontified nil)) . -14017) (14017 . 14038) (#("input=update_lo" 0 15 (fontified t)) . -14017) (undo-tree-id28229 . -13) (undo-tree-id28230 . -15) (undo-tree-id28231 . -13) (undo-tree-id28232 . -13) (undo-tree-id28233 . -13) (undo-tree-id28234 . -13) (undo-tree-id28235 . -13) (undo-tree-id28236 . -13) (undo-tree-id28237 . -13) (undo-tree-id28238 . -13) (undo-tree-id28239 . -13) (undo-tree-id28240 . -13) (undo-tree-id28241 . -14) (undo-tree-id28242 . -15) (undo-tree-id28243 . -15) (undo-tree-id28244 . -15) (undo-tree-id28245 . -15) 14032) ((14017 . 14032) (#("update_lower_deadzone" 0 21 (fontified nil)) . 14017) (14017 . 14038) (#("input=update_lo" 0 6 (fontified nil) 6 15 (fontified nil)) . 14017) (14023 . 14032) (#("update_lower_deadzone" 0 21 (fontified t)) . 14023) (t 25944 48022 368954 269000)) (25944 48022 308539 0) 0 nil])
([nil nil ((14030 . 14032)) nil (25944 48039 131145 0) 0 nil])
nil
([nil nil ((14023 . 14044) (#("update_lo" 0 9 (fontified nil)) . 14023) (14017 . 14032) (#("update_lower_deadzone" 0 21 (fontified nil)) . -14017) (14017 . 14038) (#("input=update_lo" 0 15 (fontified t)) . -14017) (undo-tree-id28435 . -13) (undo-tree-id28436 . -15) (undo-tree-id28437 . -13) (undo-tree-id28438 . -13) (undo-tree-id28439 . -13) (undo-tree-id28440 . -13) (undo-tree-id28441 . -13) (undo-tree-id28442 . -13) (undo-tree-id28443 . -13) (undo-tree-id28444 . -13) (undo-tree-id28445 . -13) (undo-tree-id28446 . -13) (undo-tree-id28447 . -13) (undo-tree-id28448 . -13) (undo-tree-id28449 . -13) (undo-tree-id28450 . -13) (undo-tree-id28451 . -14) (undo-tree-id28452 . -15) (undo-tree-id28453 . -15) (undo-tree-id28454 . -15) (undo-tree-id28455 . -15) 14032) nil (25944 48039 131140 0) 0 nil])
([nil nil ((13635 . 13641) (t 25944 48039 191402 199000)) nil (25944 48055 331022 0) 0 nil])
([nil nil ((13641 . 13643)) nil (25944 48055 331020 0) 0 nil])
([nil nil ((13642 . 13646)) nil (25944 48103 711605 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-string-face fontified t)) . -11417) (undo-tree-id28590 . -1) (undo-tree-id28591 . -1) (undo-tree-id28592 . -1) (undo-tree-id28593 . -1) (undo-tree-id28594 . -1) (undo-tree-id28595 . -1) (undo-tree-id28596 . -1) (undo-tree-id28597 . -1) (undo-tree-id28598 . -1) (undo-tree-id28599 . -1) (undo-tree-id28600 . -1) (undo-tree-id28601 . -1) (undo-tree-id28602 . -1) (undo-tree-id28603 . -1) (undo-tree-id28604 . -1) (undo-tree-id28605 . -1) (undo-tree-id28606 . -1) (undo-tree-id28607 . -1) (undo-tree-id28608 . -1) (undo-tree-id28609 . -1) 11418 (t 25944 48106 602871 488000)) nil (25944 48137 518491 0) 0 nil] [nil nil ((#("6" 0 1 (fontified t face font-lock-string-face)) . -12262) (undo-tree-id28483 . -1) (undo-tree-id28484 . -1) (undo-tree-id28485 . -1) (undo-tree-id28487 . -1) (undo-tree-id28489 . -1) (undo-tree-id28490 . -1) (undo-tree-id28492 . -1) (undo-tree-id28494 . -1) (undo-tree-id28496 . -1) (undo-tree-id28498 . -1) (undo-tree-id28500 . -1) (undo-tree-id28502 . -1) 12263 (t 25944 48055 390840 307000)) ((12262 . 12263)) (25944 48103 498348 0) 0 nil])
([nil nil ((11417 . 11418)) nil (25944 48137 518459 0) 0 nil])
([nil nil ((12262 . 12263)) ((#("7" 0 1 (face font-lock-string-face fontified t)) . 12262) (undo-tree-id28545 . -1) (undo-tree-id28546 . -1) (undo-tree-id28547 . -1) (undo-tree-id28548 . -1) (undo-tree-id28549 . -1) (undo-tree-id28550 . -1) (undo-tree-id28551 . -1) (undo-tree-id28552 . -1) (undo-tree-id28553 . -1) (undo-tree-id28554 . -1) (undo-tree-id28555 . -1) (undo-tree-id28556 . -1) (undo-tree-id28557 . -1) (undo-tree-id28558 . -1) (undo-tree-id28559 . -1) (undo-tree-id28560 . -1) (undo-tree-id28561 . -1) (undo-tree-id28562 . -1) (undo-tree-id28563 . -1) (undo-tree-id28564 . -1) (undo-tree-id28565 . -1) (undo-tree-id28566 . -1) (undo-tree-id28567 . -1) (undo-tree-id28568 . -1) (undo-tree-id28569 . -1) (undo-tree-id28570 . -1) (undo-tree-id28571 . -1) (undo-tree-id28572 . -1) (undo-tree-id28573 . -1) (undo-tree-id28574 . -1) (undo-tree-id28575 . -1) (undo-tree-id28576 . -1) (undo-tree-id28577 . -1) (undo-tree-id28578 . -1) (undo-tree-id28579 . -1) (undo-tree-id28580 . -1) (undo-tree-id28581 . -1) (undo-tree-id28582 . -1) (undo-tree-id28583 . -1) (undo-tree-id28584 . -1) (undo-tree-id28585 . -1) (undo-tree-id28586 . -1) (undo-tree-id28587 . -1) (undo-tree-id28588 . -1) (undo-tree-id28589 . -1) (t 25944 48085 817275 906000)) (25944 48102 842907 0) 0 nil])
([nil nil ((#("3" 0 1 (face font-lock-string-face fontified t)) . -11417) (undo-tree-id28619 . -1) (undo-tree-id28620 . -1) (undo-tree-id28621 . -1) (undo-tree-id28622 . -1) (undo-tree-id28623 . -1) (undo-tree-id28624 . -1) (undo-tree-id28625 . -1) (undo-tree-id28626 . -1) (undo-tree-id28627 . -1) (undo-tree-id28628 . -1) (undo-tree-id28629 . -1) (undo-tree-id28630 . -1) (undo-tree-id28631 . -1) (undo-tree-id28632 . -1) (undo-tree-id28633 . -1) (undo-tree-id28634 . -1) (undo-tree-id28635 . -1) (undo-tree-id28636 . -1) (undo-tree-id28637 . -1) (undo-tree-id28638 . -1) (undo-tree-id28639 . -1) (undo-tree-id28640 . -1) (undo-tree-id28641 . -1) (undo-tree-id28642 . -1) (undo-tree-id28643 . -1) (undo-tree-id28644 . -1) 11418 (t 25944 48137 579160 457000)) nil (25944 48146 339548 0) 0 nil])
([nil nil ((#("7" 0 1 (face font-lock-string-face fontified t)) . -12262) (undo-tree-id28503 . -1) (undo-tree-id28504 . -1) (undo-tree-id28505 . -1) (undo-tree-id28506 . -1) (undo-tree-id28507 . -1) (undo-tree-id28508 . -1) (undo-tree-id28509 . -1) (undo-tree-id28510 . -1) (undo-tree-id28511 . -1) (undo-tree-id28512 . -1) (undo-tree-id28513 . -1) (undo-tree-id28514 . -1) (undo-tree-id28515 . -1) (undo-tree-id28516 . -1) (undo-tree-id28517 . -1) (undo-tree-id28518 . -1) (undo-tree-id28519 . -1) (undo-tree-id28520 . -1) (undo-tree-id28521 . -1) (undo-tree-id28522 . -1) (undo-tree-id28523 . -1) (undo-tree-id28524 . -1) (undo-tree-id28525 . -1) (undo-tree-id28526 . -1) (undo-tree-id28527 . -1) (undo-tree-id28528 . -1) (undo-tree-id28529 . -1) (undo-tree-id28530 . -1) (undo-tree-id28531 . -1) (undo-tree-id28532 . -1) (undo-tree-id28533 . -1) (undo-tree-id28534 . -1) (undo-tree-id28535 . -1) (undo-tree-id28536 . -1) (undo-tree-id28537 . -1) (undo-tree-id28538 . -1) (undo-tree-id28539 . -1) (undo-tree-id28540 . -1) (undo-tree-id28541 . -1) (undo-tree-id28542 . -1) (undo-tree-id28543 . -1) 12263 (t 25944 48085 817275 906000)) ((12262 . 12263)) (25944 48102 462719 0) 0 nil])
([nil nil ((11417 . 11418)) nil (25944 48146 339521 0) 0 nil])
([nil nil ((12262 . 12263)) ((#("8" 0 1 (face font-lock-string-face fontified t)) . 12262) (undo-tree-id28544 . -1)) (25944 48102 462432 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-string-face fontified t)) . -11418) (undo-tree-id28610 . -1) (undo-tree-id28611 . 1) (undo-tree-id28612 . -1) (undo-tree-id28613 . -1) (undo-tree-id28614 . -1) (undo-tree-id28615 . -1) (undo-tree-id28616 . -1) (undo-tree-id28617 . -1) (undo-tree-id28618 . -1) 11419) nil (25944 48146 339518 0) 0 nil])
nil
([nil nil ((11418 . 11419)) nil (25944 48146 339500 0) 0 nil])
([nil nil ((7647 . 7649) (t 25944 48146 400257 953000)) nil (25944 51269 194371 0) 0 nil])
([nil nil ((7649 . 7651)) nil (25944 51269 194370 0) 0 nil])
([nil nil ((7649 . 7663) (#("ke" 0 2 (fontified nil)) . 7649) (7649 . 7651) (#("keyboard_state" 0 14 (fontified nil)) . -7649) (7649 . 7663) (#("ke" 0 2 (fontified t)) . -7649) (undo-tree-id28731 . -2) 7651) nil (25944 51269 194368 0) 0 nil])
([nil nil ((7663 . 7665)) nil (25944 51269 194364 0) 0 nil])
([nil nil ((apply yas--snippet-revive 7664 7669 #s(yas--snippet nil nil #s(yas--exit 7669 nil) 141 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 7669 nil) 141 nil nil nil nil)) (7664 . 7669) (#("get()$0" 0 7 (fontified nil)) . 7664) (7664 . 7671) (#("g" 0 1 (fontified nil)) . 7664) (7664 . 7665) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -7664) (7664 . 7684) (#("g" 0 1 (fontified t)) . -7664) (undo-tree-id28730 . -1) 7665) nil (25944 51269 194361 0) 0 nil])
([nil nil ((7669 . 7670)) nil (25944 51269 194357 0) 0 nil])
([nil nil ((7670 . 7674) (#("keys" 0 4 (fontified nil)) . -7670) (7670 . 7674)) nil (25944 51269 194356 0) 0 nil])
([nil nil ((7674 . 7676)) nil (25944 51269 194354 0) 0 nil])
([nil nil ((7676 . 7678)) nil (25944 51269 194353 0) 0 nil])
([nil nil ((apply yas--snippet-revive 7675 7685 #s(yas--snippet nil nil #s(yas--exit 7685 nil) 142 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 7685 nil) 142 nil nil nil nil)) (7675 . 7685) (#("iter_mut()$0" 0 12 (fontified nil)) . 7675) (7675 . 7687) (#("itr" 0 3 (fontified nil)) . 7675) (7675 . 7678) (#("iter_mut()" 0 10 (fontified nil)) . -7675) (7675 . 7685) (#("itr" 0 3 (fontified t)) . -7675) (undo-tree-id28729 . -3) 7678) nil (25944 51269 194351 0) 0 nil])
([nil nil ((7685 . 7689)) nil (25944 51269 194346 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 7690 7691 nil nil nil nil #s(yas--exit 7692 nil))) #s(yas--exit 7692 nil) 143 nil #s(yas--field 1 7690 7691 nil nil nil nil #s(yas--exit 7692 nil)) nil nil)) (7686 . 7692) (#("map(${1:f})$0" 0 13 (fontified nil)) . 7686) (7686 . 7699) (#("map" 0 3 (fontified nil)) . 7686) (7686 . 7689) (#("map(…) (as Iterator)" 0 20 (fontified nil)) . -7686) (7686 . 7706) (#("map" 0 3 (fontified t)) . -7686) (undo-tree-id28728 . -3) 7689) nil (25944 51269 194344 0) 0 nil])
([nil nil ((apply yas--snippet-revive 7686 7692 #s(yas--snippet nil (#s(yas--field 1 7690 7691 nil nil nil nil #s(yas--exit 7692 nil))) #s(yas--exit 7692 nil) 143 nil #s(yas--field 1 7690 7691 nil nil nil nil #s(yas--exit 7692 nil)) nil nil))) nil (25944 51269 194340 0) 0 nil])
([nil nil ((#("f)" 0 2 (fontified t)) . -7690) (undo-tree-id28726 . -2) (undo-tree-id28727 . -2) 7692) nil (25944 51269 194339 0) 0 nil])
([nil nil ((#("map(" 0 4 (fontified t)) . -7686) (undo-tree-id28724 . -4) (undo-tree-id28725 . -4) 7690) nil (25944 51269 194335 0) 0 nil])
([nil nil ((#("mut()." 0 6 (fontified t)) . -7680) (undo-tree-id28722 . -6) (undo-tree-id28723 . -6) 7686) nil (25944 51269 194332 0) 0 nil])
([nil nil ((#("iter_" 0 5 (fontified t)) . -7675) (undo-tree-id28720 . -5) (undo-tree-id28721 . -5) 7680) nil (25944 51269 194328 0) 0 nil])
([nil nil ((#("keys." 0 5 (fontified t)) . -7670) (undo-tree-id28718 . -5) (undo-tree-id28719 . -5) 7675) nil (25944 51269 194325 0) 0 nil])
([nil nil ((#("get()." 0 6 (fontified t)) . -7664) (undo-tree-id28716 . -6) (undo-tree-id28717 . -6) 7670) nil (25944 51269 194321 0) 0 nil])
([nil nil ((7664 . 7666)) nil (25944 51269 194318 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 7671 7673 nil nil nil t #s(yas--exit 7674 nil))) #s(yas--exit 7674 nil) 144 nil #s(yas--field 1 7671 7673 nil nil nil t #s(yas--exit 7674 nil)) nil nil)) (7664 . 7673) (#("update(${1:f})$0" 0 16 (fontified nil)) . 7664) (7664 . 7680) (#("up" 0 2 (fontified nil)) . 7664) (7664 . 7666) (#("update(…) (as SignalUpdate)" 0 27 (fontified nil)) . -7664) (7664 . 7691) (#("up" 0 2 (fontified t)) . -7664) (undo-tree-id28715 . -2) 7666) nil (25944 51269 194316 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -7671) (undo-tree-id28713 . -1) (undo-tree-id28714 . -1) 7672) nil (25944 51269 194311 0) 0 nil])
([nil nil ((7671 . 7673)) nil (25944 51269 194308 0) 0 nil])
([nil nil ((apply yas--snippet-revive 7664 7674 #s(yas--snippet nil (#s(yas--field 1 7671 7673 nil nil nil t #s(yas--exit 7674 nil))) #s(yas--exit 7674 nil) 144 nil #s(yas--field 1 7671 7673 nil nil nil t #s(yas--exit 7674 nil)) nil nil))) nil (25944 51269 194307 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 7689 . 7690) (nil fontified nil 7680 . 7690) (nil fontified nil 7672 . 7680) (7672 . 7690)) nil (25944 51269 194306 0) 0 nil])
([nil nil ((7692 . 7693)) nil (25944 51269 194304 0) 0 nil])
([nil nil ((7691 . 7694)) nil (25944 51269 194303 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -7692) (undo-tree-id28711 . -1) (#("o" 0 1 (fontified t)) . -7693) (undo-tree-id28712 . -1) 7694) nil (25944 51269 194302 0) 0 nil])
([nil nil ((7692 . 7695)) nil (25944 51269 194298 0) 0 nil])
([nil nil ((7692 . 7696) (#("key" 0 3 (fontified nil)) . 7692) (7692 . 7695) (#("keys" 0 4 (fontified nil)) . -7692) (7692 . 7696) (#("key" 0 3 (fontified t)) . -7692) (undo-tree-id28710 . -3) 7695) nil (25944 51269 194297 0) 0 nil])
([nil nil ((7696 . 7699)) nil (25944 51269 194293 0) 0 nil])
([nil nil ((apply yas--snippet-revive 7697 7707 #s(yas--snippet nil nil #s(yas--exit 7707 nil) 145 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 7707 nil) 145 nil nil nil nil)) (7697 . 7707) (#("iter_mut()$0" 0 12 (fontified nil)) . 7697) (7697 . 7709) (#("it" 0 2 (fontified nil)) . 7697) (7697 . 7699) (#("iter_mut()" 0 10 (fontified nil)) . -7697) (7697 . 7707) (#("it" 0 2 (fontified t)) . -7697) (undo-tree-id28709 . -2) 7699) nil (25944 51269 194290 0) 0 nil])
([nil nil ((7707 . 7711)) nil (25944 51269 194286 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -7710) (undo-tree-id28708 . -1) 7711) nil (25944 51269 194285 0) 0 nil])
([nil nil ((7710 . 7711)) nil (25944 51269 194283 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 7712 7727 nil nil nil t #s(yas--exit 7728 nil))) #s(yas--exit 7728 nil) 146 nil #s(yas--field 1 7712 7727 nil nil nil t #s(yas--exit 7728 nil)) nil nil)) (7708 . 7714) (#("map(${1:f})$0" 0 13 (fontified nil)) . 7708) (7708 . 7721) (#("map" 0 3 (fontified nil)) . 7708) (7708 . 7711) (#("map(…) (as Iterator)" 0 20 (fontified nil)) . -7708) (7708 . 7728) (#("map" 0 3 (fontified t)) . -7708) (undo-tree-id28707 . -3) 7711) nil (25944 51269 194281 0) 0 nil])
([nil nil ((7713 . 7714) (#("f" 0 1 (fontified nil)) . 7713) (undo-tree-id28706 . -1) (7712 . 7713)) nil (25944 51269 194276 0) 0 nil])
([nil nil ((7713 . 7714)) nil (25944 51269 194273 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -7713) (undo-tree-id28704 . -1) (undo-tree-id28705 . -1) 7714) nil (25944 51269 194272 0) 0 nil])
([nil nil ((7713 . 7714)) nil (25944 51269 194269 0) 0 nil])
([nil nil ((#("K" 0 1 (face font-lock-type-face fontified t)) . -7713) (undo-tree-id28702 . -1) (undo-tree-id28703 . -1) 7714) nil (25944 51269 194267 0) 0 nil])
([nil nil ((7713 . 7715)) nil (25944 51269 194264 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -7713) (undo-tree-id28698 . -1) (undo-tree-id28699 . -1) (#("e" 0 1 (fontified t)) . -7714) (undo-tree-id28700 . -1) (undo-tree-id28701 . -1) 7715) nil (25944 51269 194263 0) 0 nil])
([nil nil ((7713 . 7718)) nil (25944 51269 194257 0) 0 nil])
([nil nil ((7717 . 7725)) nil (25944 51269 194256 0) 0 nil])
([nil nil ((apply yas--snippet-revive 7708 7728 #s(yas--snippet nil (#s(yas--field 1 7712 7727 nil nil nil t #s(yas--exit 7728 nil))) #s(yas--exit 7728 nil) 146 nil #s(yas--field 1 7712 7727 nil nil nil t #s(yas--exit 7728 nil)) nil nil))) nil (25944 51269 194255 0) 0 nil])
([nil nil ((7725 . 7729)) nil (25944 51269 194254 0) 0 nil])
([nil nil ((7731 . 7734)) nil (25944 51269 194253 0) 0 nil])
([nil nil ((7732 . 7740) (#("se" 0 2 (fontified nil)) . 7732) (7732 . 7734) (#("selected" 0 8 (fontified nil)) . -7732) (7732 . 7740) (#("se" 0 2 (fontified t)) . -7732) (undo-tree-id28692 . -2) (undo-tree-id28693 . -1) (undo-tree-id28694 . -2) (undo-tree-id28695 . -2) (undo-tree-id28696 . -2) (undo-tree-id28697 . -2) 7734) nil (25944 51269 194251 0) 0 nil])
([nil nil ((7732 . 7733)) nil (25944 51269 194242 0) 0 nil])
([nil nil ((7741 . 7743)) nil (25944 51269 194241 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -7742) (undo-tree-id28681 . -1) (undo-tree-id28682 . -1) (undo-tree-id28683 . -1) (undo-tree-id28684 . -1) (undo-tree-id28685 . -1) (undo-tree-id28686 . -1) (undo-tree-id28687 . -1) (undo-tree-id28688 . -1) (undo-tree-id28689 . -1) (undo-tree-id28690 . -1) (undo-tree-id28691 . -1) 7743) nil (25944 51269 194239 0) 0 nil])
([nil nil ((7742 . 7744)) nil (25944 51269 194224 0) 0 nil])
([nil nil ((apply yas--snippet-revive 7742 7747 #s(yas--snippet nil nil nil 147 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 147 nil nil nil nil)) (7742 . 7747) (#("false" 0 5 (fontified nil)) . 7742) (7742 . 7747) (#("fa" 0 2 (fontified nil)) . 7742) (7733 . 7744) (#("false" 0 5 (fontified nil)) . -7733) (7733 . 7738) (#("selected=fa" 0 11 (fontified t)) . -7733) (undo-tree-id28645 . -9) (undo-tree-id28646 . -11) (undo-tree-id28647 . -8) (undo-tree-id28648 . -8) (undo-tree-id28649 . -8) (undo-tree-id28650 . -8) (undo-tree-id28651 . -8) (undo-tree-id28652 . -8) (undo-tree-id28653 . -8) (undo-tree-id28654 . -8) (undo-tree-id28655 . -8) (undo-tree-id28656 . -9) (undo-tree-id28657 . -9) (undo-tree-id28658 . -9) (undo-tree-id28659 . -9) (undo-tree-id28660 . -9) (undo-tree-id28661 . -9) (undo-tree-id28662 . -9) (undo-tree-id28663 . -9) (undo-tree-id28664 . -9) (undo-tree-id28665 . -9) (undo-tree-id28666 . -9) (undo-tree-id28667 . -9) (undo-tree-id28668 . -9) (undo-tree-id28669 . -9) (undo-tree-id28670 . -9) (undo-tree-id28671 . -9) (undo-tree-id28672 . -9) (undo-tree-id28673 . -9) (undo-tree-id28674 . -9) (undo-tree-id28675 . -9) (undo-tree-id28676 . -10) (undo-tree-id28677 . -11) (undo-tree-id28678 . -11) (undo-tree-id28679 . -11) (undo-tree-id28680 . -11) 7744) nil (25944 51269 194217 0) 0 nil])
([nil nil ((#("selected, ..}" 0 13 (fontified t)) . -7717) (undo-tree-id28795 . -13) (undo-tree-id28796 . -8) (undo-tree-id28797 . -8) (undo-tree-id28798 . -13) (undo-tree-id28799 . -13) (undo-tree-id28800 . -13) (undo-tree-id28801 . -13) (undo-tree-id28802 . -13) (undo-tree-id28803 . -13) (undo-tree-id28804 . -13) 7730 (t 25944 51269 257979 31000)) nil (25944 51287 858493 0) 0 nil])
([nil nil ((#("Key{" 0 3 (face font-lock-type-face fontified t) 3 4 (fontified t)) . -7713) (undo-tree-id28775 . -4) (undo-tree-id28776 . -4) (undo-tree-id28777 . -4) (undo-tree-id28778 . -4) (undo-tree-id28779 . -4) (undo-tree-id28780 . -4) (undo-tree-id28781 . -4) (undo-tree-id28782 . -4) (undo-tree-id28783 . -4) (undo-tree-id28784 . -4) (undo-tree-id28785 . -4) (undo-tree-id28786 . -4) (undo-tree-id28787 . -4) (undo-tree-id28788 . -4) (undo-tree-id28789 . -4) (undo-tree-id28790 . -4) (undo-tree-id28791 . -4) (undo-tree-id28792 . -4) (undo-tree-id28793 . -4) (undo-tree-id28794 . -4) 7717) nil (25944 51287 858481 0) 0 nil])
([nil nil ((7713 . 7716)) nil (25944 51287 858459 0) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -7718) (undo-tree-id28732 . -1) (undo-tree-id28733 . -1) (undo-tree-id28734 . -1) (undo-tree-id28735 . -1) (undo-tree-id28736 . -1) (undo-tree-id28737 . -1) (undo-tree-id28738 . -1) (undo-tree-id28739 . -1) (undo-tree-id28740 . -1) (undo-tree-id28741 . -1) (undo-tree-id28742 . -1) (undo-tree-id28743 . -1) (undo-tree-id28744 . -1) (undo-tree-id28745 . -1) (undo-tree-id28746 . -1) (undo-tree-id28747 . -1) (undo-tree-id28748 . -1) (undo-tree-id28749 . -1) (undo-tree-id28750 . -1) (undo-tree-id28751 . -1) (undo-tree-id28752 . -1) (undo-tree-id28753 . -1) (undo-tree-id28754 . -1) (undo-tree-id28755 . -1) (undo-tree-id28756 . -1) (undo-tree-id28757 . -1) (undo-tree-id28758 . -1) (undo-tree-id28759 . -1) (undo-tree-id28760 . -1) (undo-tree-id28761 . -1) (undo-tree-id28762 . -1) (undo-tree-id28763 . -1) (undo-tree-id28764 . -1) (undo-tree-id28765 . -1) (undo-tree-id28766 . -1) (undo-tree-id28767 . -1) (undo-tree-id28768 . -1) (undo-tree-id28769 . -1) (undo-tree-id28770 . -1) (undo-tree-id28771 . -1) (undo-tree-id28772 . -1) (undo-tree-id28773 . -1) (undo-tree-id28774 . -1) 7719) nil (25944 51287 858456 0) 0 nil])
([nil nil ((7718 . 7722)) nil (25944 51287 858400 0) 0 nil])
([nil nil ((7738 . 7739) (7692 . 7692) (7692 . 7693) (t 25944 51287 920209 575000)) nil (25944 51397 938170 0) 0 nil])
([nil nil ((7693 . 7699)) nil (25944 51397 938168 0) 0 nil])
([nil nil ((7744 . 7746)) nil (25944 51397 938167 0) 0 nil])
([nil nil ((7744 . 7745) (7725 . 7725) (7725 . 7726)) nil (25944 51397 938165 0) 0 nil])
([nil nil ((7726 . 7729)) nil (25944 51397 938164 0) 0 nil])
([nil nil ((7747 . 7753)) nil (25944 51397 938159 0) 0 nil])
([nil nil ((7747 . 7748) (t 25944 51398 107 493000)) nil (25944 51405 111762 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -7747) (undo-tree-id28805 . -1) (undo-tree-id28806 . -1) (undo-tree-id28807 . -1) (undo-tree-id28808 . -1) (undo-tree-id28809 . -1) (undo-tree-id28810 . -1) (undo-tree-id28811 . -1) (undo-tree-id28812 . -1) (undo-tree-id28813 . -1) (undo-tree-id28814 . -1) (undo-tree-id28815 . -1) (undo-tree-id28816 . -1) (undo-tree-id28817 . -1) (undo-tree-id28818 . -1) (undo-tree-id28819 . -1) (undo-tree-id28820 . -1) (undo-tree-id28821 . -1) (undo-tree-id28822 . -1) (undo-tree-id28823 . -1) (undo-tree-id28824 . -1) (undo-tree-id28825 . -1) (undo-tree-id28826 . -1) (undo-tree-id28827 . -1) (undo-tree-id28828 . -1) (undo-tree-id28829 . -1) (undo-tree-id28830 . -1) (undo-tree-id28831 . -1) (undo-tree-id28832 . -1) (undo-tree-id28833 . -1) (undo-tree-id28834 . -1) (undo-tree-id28835 . -1) (undo-tree-id28836 . -1) (undo-tree-id28837 . -1) 7748 (t 25944 51405 173360 676000)) nil (25944 51406 806455 0) 0 nil])
([nil nil ((#("	    keys.iter_mut().map(|key| {
		key.selected=false
	    })" 0 5 (fontified t) 5 10 (fontified t) 10 21 (fontified t) 21 29 (fontified t) 29 33 (fontified t) 33 39 (fontified t) 39 48 (fontified t) 48 54 (fontified t) 54 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t)) . 7694) (undo-tree-id28861 . -61) (undo-tree-id28862 . -25) (undo-tree-id28863 . -61) (undo-tree-id28864 . -61) (t 25944 51406 867950 678000)) nil (25944 51429 220964 0) 0 nil])
([nil nil ((7694 . 7699)) nil (25944 51429 220959 0) 0 nil])
([nil nil ((7699 . 7706)) nil (25944 51429 220958 0) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-variable-name-face fontified t)) . -7705) (undo-tree-id28859 . -1) (undo-tree-id28860 . -1) 7706) nil (25944 51429 220957 0) 0 nil])
([nil nil ((7705 . 7707)) nil (25944 51429 220954 0) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-variable-name-face fontified t)) . -7705) (undo-tree-id28857 . -1) (#(" " 0 1 (fontified t)) . -7706) (undo-tree-id28858 . -1) 7707) nil (25944 51429 220952 0) 0 nil])
([nil nil ((7705 . 7709)) nil (25944 51429 220949 0) 0 nil])
([nil nil ((7709 . 7717)) nil (25944 51429 220948 0) 0 nil])
([nil nil ((apply yas--snippet-revive 7715 7725 #s(yas--snippet nil nil #s(yas--exit 7725 nil) 148 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 7725 nil) 148 nil nil nil nil)) (7715 . 7725) (#("iter_mut()$0" 0 12 (fontified nil)) . 7715) (7715 . 7727) (#("it" 0 2 (fontified nil)) . 7715) (7715 . 7717) (#("iter_mut()" 0 10 (fontified nil)) . -7715) (7715 . 7725) (#("it" 0 2 (fontified t)) . -7715) (undo-tree-id28855 . -2) (undo-tree-id28856 . -2) 7717) nil (25944 51429 220946 0) 0 nil])
([nil nil ((7725 . 7728)) nil (25944 51429 220938 0) 0 nil])
([nil nil ((7729 . 7734) (#("		" 0 2 (fontified nil)) . 7728) (undo-tree-id28853 . -1) (7729 . 7730) (#("    " 0 4 (fontified nil)) . 7729) (undo-tree-id28854 . -4) (7727 . 7734)) nil (25944 51429 220937 0) 0 nil])
([nil nil ((7728 . 7730)) nil (25944 51429 220933 0) 0 nil])
([nil nil ((7730 . 7735)) nil (25944 51429 220932 0) 0 nil])
([nil nil ((7734 . 7742) (#("s" 0 1 (fontified nil)) . 7734) (7734 . 7735) (#("selected" 0 8 (fontified nil)) . -7734) (7734 . 7742) (#("s" 0 1 (fontified t)) . -7734) (undo-tree-id28851 . -1) (undo-tree-id28852 . -1) 7735) nil (25944 51429 220930 0) 0 nil])
([nil nil ((7742 . 7744)) nil (25944 51429 220925 0) 0 nil])
([nil nil ((7744 . 7747)) nil (25944 51429 220924 0) 0 nil])
([nil nil ((apply yas--snippet-revive 7745 7750 #s(yas--snippet nil nil nil 149 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 149 nil nil nil nil)) (7745 . 7750) (#("false" 0 5 (fontified nil)) . 7745) (7745 . 7750) (#("fa" 0 2 (fontified nil)) . 7745) (7745 . 7747) (#("false" 0 5 (fontified nil)) . -7745) (7745 . 7750) (#("fa" 0 2 (fontified t)) . -7745) (undo-tree-id28838 . -2) (undo-tree-id28839 . -2) (undo-tree-id28840 . -1) (undo-tree-id28841 . -1) (undo-tree-id28842 . -1) (undo-tree-id28843 . -1) (undo-tree-id28844 . -2) (undo-tree-id28845 . -2) (undo-tree-id28846 . -2) (undo-tree-id28847 . -2) (undo-tree-id28848 . -2) (undo-tree-id28849 . -2) (undo-tree-id28850 . -2) 7747) nil (25944 51429 220921 0) 0 nil])
([nil nil ((7750 . 7751)) nil (25944 51429 220895 0) 0 nil])
([nil nil ((#("in " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -7707) (undo-tree-id28941 . -3) (undo-tree-id28942 . -3) 7710 (t 25944 51429 282363 150000)) nil (25944 51464 845782 0) 0 nil])
([nil nil ((#("key " 0 3 (face font-lock-variable-name-face fontified t) 3 4 (fontified t)) . -7703) (undo-tree-id28939 . -4) (undo-tree-id28940 . -4) 7707) nil (25944 51464 845778 0) 0 nil])
([nil nil ((#("for " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -7699) (undo-tree-id28937 . -4) (undo-tree-id28938 . -4) 7703) nil (25944 51464 845774 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -7739) (undo-tree-id28905 . -1) (undo-tree-id28906 . -1) (undo-tree-id28907 . -1) (undo-tree-id28908 . -1) (#("
" 0 1 (fontified t)) . -7740) (undo-tree-id28909 . -1) (undo-tree-id28910 . -1) (undo-tree-id28911 . -1) (undo-tree-id28912 . -1) (#("	" 0 1 (fontified t)) . -7741) (undo-tree-id28913 . -1) (undo-tree-id28914 . -1) (undo-tree-id28915 . -1) (undo-tree-id28916 . -1) (#(" " 0 1 (fontified t)) . -7742) (undo-tree-id28917 . -1) (undo-tree-id28918 . -1) (undo-tree-id28919 . -1) (undo-tree-id28920 . -1) (#(" " 0 1 (fontified t)) . -7743) (undo-tree-id28921 . -1) (undo-tree-id28922 . -1) (undo-tree-id28923 . -1) (undo-tree-id28924 . -1) (#(" " 0 1 (fontified t)) . -7744) (undo-tree-id28925 . -1) (undo-tree-id28926 . -1) (undo-tree-id28927 . -1) (undo-tree-id28928 . -1) (#(" " 0 1 (fontified t)) . -7745) (undo-tree-id28929 . -1) (undo-tree-id28930 . -1) (undo-tree-id28931 . -1) (undo-tree-id28932 . -1) (#("}" 0 1 (fontified t)) . -7746) (undo-tree-id28933 . -1) (undo-tree-id28934 . -1) (undo-tree-id28935 . -1) (undo-tree-id28936 . -1) 7747) nil (25944 51464 845769 0) 0 nil])
([nil nil ((#("false" 0 5 (face font-lock-keyword-face fontified t)) . -7734) (undo-tree-id28901 . -5) (undo-tree-id28902 . -5) (undo-tree-id28903 . -5) (undo-tree-id28904 . -5) 7739) nil (25944 51464 845733 0) 0 nil])
([nil nil ((#("selected = " 0 11 (fontified t)) . -7723) (undo-tree-id28897 . -11) (undo-tree-id28898 . -11) (undo-tree-id28899 . -11) (undo-tree-id28900 . -11) 7734) nil (25944 51464 845727 0) 0 nil])
([nil nil ((#("key." 0 4 (fontified t)) . -7719) (undo-tree-id28893 . -4) (undo-tree-id28894 . -4) (undo-tree-id28895 . -4) (undo-tree-id28896 . -4) 7723) nil (25944 51464 845722 0) 0 nil])
([nil nil ((#("mut() {
		" 0 8 (fontified t) 8 10 (fontified t)) . -7709) (undo-tree-id28889 . -10) (undo-tree-id28890 . -10) (undo-tree-id28891 . -10) (undo-tree-id28892 . -10) 7719) nil (25944 51464 845717 0) 0 nil])
([nil nil ((7709 . 7710)) nil (25944 51464 845711 0) 0 nil])
([nil nil ((apply yas--snippet-revive 7704 7714 #s(yas--snippet nil nil #s(yas--exit 7714 nil) 150 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 7714 nil) 150 nil nil nil nil)) (7704 . 7714) (#("iter_mut()$0" 0 12 (fontified nil)) . 7704) (7704 . 7716) (#("iter_m" 0 6 (fontified nil)) . 7704) (7704 . 7710) (#("iter_mut()" 0 10 (fontified nil)) . -7704) (7704 . 7714) (#("iter_m" 0 6 (fontified t)) . -7704) (undo-tree-id28885 . -5) (undo-tree-id28886 . -6) (undo-tree-id28887 . -5) (undo-tree-id28888 . -5) 7710) nil (25944 51464 845709 0) 0 nil])
([nil nil ((7714 . 7716)) nil (25944 51464 845702 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 7719 7740 nil nil nil t #s(yas--exit 7741 nil))) #s(yas--exit 7741 nil) 151 nil #s(yas--field 1 7719 7740 nil nil nil t #s(yas--exit 7741 nil)) nil nil)) (7715 . 7721) (#("map(${1:f})$0" 0 13 (fontified nil)) . 7715) (7715 . 7728) (#("m" 0 1 (fontified nil)) . 7715) (7715 . 7716) (#("map(…) (as Iterator)" 0 20 (fontified nil)) . -7715) (7715 . 7735) (#("m" 0 1 (fontified t)) . -7715) (undo-tree-id28884 . -1) 7716) nil (25944 51464 845700 0) 0 nil])
([nil nil ((7720 . 7721) (#("f" 0 1 (fontified nil)) . 7720) (undo-tree-id28883 . -1) (7719 . 7720)) nil (25944 51464 845696 0) 0 nil])
([nil nil ((7720 . 7723)) nil (25944 51464 845693 0) 0 nil])
([nil nil ((7724 . 7730)) nil (25944 51464 845692 0) 0 nil])
([nil nil ((7729 . 7737) (#("s" 0 1 (fontified nil)) . 7729) (undo-tree-id28878 . -1) (7729 . 7730) (#("selected" 0 8 (fontified nil)) . -7729) (undo-tree-id28879 . -8) (7729 . 7737) (#("s" 0 1 (fontified t)) . -7729) (undo-tree-id28880 . -1) (undo-tree-id28881 . -1) (undo-tree-id28882 . -1) 7730) nil (25944 51464 845690 0) 0 nil])
([nil nil ((7737 . 7739)) nil (25944 51464 845683 0) 0 nil])
([nil nil ((7739 . 7741)) nil (25944 51464 845682 0) 0 nil])
([nil nil ((apply yas--snippet-revive 7738 7743 #s(yas--snippet nil nil nil 152 nil nil #s(yas--field 1 7719 7740 nil nil nil t #s(yas--exit 7741 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 152 nil nil #s(yas--field 1 7719 7740 nil nil nil t #s(yas--exit 7741 nil)) nil)) (7738 . 7743) (#("false" 0 5 (fontified nil)) . 7738) (undo-tree-id28865 . -5) (7738 . 7743) (#("fal" 0 3 (fontified nil)) . 7738) (undo-tree-id28866 . -3) (7729 . 7741) (#("false" 0 5 (fontified nil)) . -7729) (undo-tree-id28867 . -5) (7729 . 7734) (#("selected=fal" 0 12 (fontified t)) . -7729) (undo-tree-id28868 . -12) (undo-tree-id28869 . -12) (undo-tree-id28870 . -12) (undo-tree-id28871 . -10) (undo-tree-id28872 . -10) (undo-tree-id28873 . -10) (undo-tree-id28874 . -11) (undo-tree-id28875 . -11) (undo-tree-id28876 . -12) (undo-tree-id28877 . -12) 7741) nil (25944 51464 845679 0) 0 nil])
([nil nil ((7725 . 7726)) nil (25944 51464 845653 0) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -7725) (undo-tree-id28943 . -1) (undo-tree-id28944 . -1) (undo-tree-id28945 . -1) (undo-tree-id28946 . -1) (undo-tree-id28947 . -1) (undo-tree-id28948 . -1) (undo-tree-id28949 . -1) (undo-tree-id28950 . -1) (undo-tree-id28951 . -1) (undo-tree-id28952 . -1) (undo-tree-id28953 . -1) (undo-tree-id28954 . -1) (undo-tree-id28955 . -1) (undo-tree-id28956 . -1) (undo-tree-id28957 . -1) (undo-tree-id28958 . -1) (undo-tree-id28959 . -1) (undo-tree-id28960 . -1) (undo-tree-id28961 . -1) (undo-tree-id28962 . -1) (undo-tree-id28963 . -1) (undo-tree-id28964 . -1) (undo-tree-id28965 . -1) (undo-tree-id28966 . -1) (undo-tree-id28967 . -1) (undo-tree-id28968 . -1) (undo-tree-id28969 . -1) (undo-tree-id28970 . -1) (undo-tree-id28971 . -1) (undo-tree-id28972 . -1) (undo-tree-id28973 . -1) (undo-tree-id28974 . -1) (undo-tree-id28975 . -1) (undo-tree-id28976 . -1) (undo-tree-id28977 . -1) (undo-tree-id28978 . -1) (undo-tree-id28979 . -1) (undo-tree-id28980 . -1) (undo-tree-id28981 . -1) (undo-tree-id28982 . -1) (undo-tree-id28983 . -1) (undo-tree-id28984 . -1) (undo-tree-id28985 . -1) (undo-tree-id28986 . -1) (undo-tree-id28987 . -1) (undo-tree-id28988 . -1) 7726 (t 25944 51464 907785 387000)) nil (25944 51471 968625 0) 0 nil])
([nil nil ((#("key" 0 3 (fontified t)) . -7720) (undo-tree-id29012 . -3) (undo-tree-id29013 . -3) (undo-tree-id29014 . -3) (undo-tree-id29015 . -3) 7723 (t 25944 51472 30437 636000)) nil (25944 51523 154597 0) 0 nil])
([nil nil ((7720 . 7723)) nil (25944 51523 154591 0) 0 nil])
([nil nil ((#("K" 0 1 (face font-lock-type-face fontified t)) . -7720) (undo-tree-id28994 . -1) (undo-tree-id28995 . -1) (undo-tree-id28996 . -1) (undo-tree-id28997 . -1) (undo-tree-id28998 . -1) (undo-tree-id28999 . -1) (undo-tree-id29000 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -7721) (undo-tree-id29001 . -1) (undo-tree-id29002 . -1) (undo-tree-id29003 . -1) (undo-tree-id29004 . -1) (undo-tree-id29005 . -1) (undo-tree-id29006 . -1) (#("y" 0 1 (face font-lock-type-face fontified t)) . -7722) (undo-tree-id29007 . -1) (undo-tree-id29008 . -1) (undo-tree-id29009 . -1) (undo-tree-id29010 . -1) (undo-tree-id29011 . -1) 7723) nil (25944 51523 154589 0) 0 nil])
([nil nil ((apply yas--snippet-revive 7715 7741 #s(yas--snippet nil (#s(yas--field 1 7719 7740 nil nil nil t #s(yas--exit 7741 nil))) #s(yas--exit 7741 nil) 151 nil #s(yas--field 1 7719 7740 nil nil nil t #s(yas--exit 7741 nil)) nil nil))) nil (25944 51523 154569 0) 0 nil])
([nil nil ((286 . 288)) nil (25944 51523 154568 0) 0 nil])
([nil nil ((287 . 290) (#("K" 0 1 (fontified nil)) . 287) (287 . 288) (#("Key" 0 3 (fontified nil)) . -287) (287 . 290) (#("K" 0 1 (face font-lock-type-face fontified t)) . -287) (undo-tree-id28989 . -1) (undo-tree-id28990 . -1) (undo-tree-id28991 . -1) (undo-tree-id28992 . -1) (undo-tree-id28993 . -1) 288) nil (25944 51523 154565 0) 0 nil])
([nil nil ((290 . 291)) nil (25944 51523 154548 0) 0 nil])
([nil nil ((7725 . 7730) (t 25944 51523 217772 491000)) nil (25944 51537 644604 0) 0 nil])
([nil nil ((7729 . 7730)) nil (25944 51537 644603 0) 0 nil])
([nil nil ((7730 . 7731)) nil (25944 51537 644602 0) 0 nil])
([nil nil ((7729 . 7737) (#("se" 0 2 (fontified nil)) . 7729) (7729 . 7731) (#("selected" 0 8 (fontified nil)) . -7729) (7729 . 7737) (#("se" 0 2 (fontified t)) . -7729) (undo-tree-id29065 . -2) (undo-tree-id29066 . -1) (undo-tree-id29067 . -2) (undo-tree-id29068 . -2) 7731) nil (25944 51537 644600 0) 0 nil])
([nil nil ((7737 . 7740)) nil (25944 51537 644592 0) 0 nil])
([nil nil ((7738 . 7739)) nil (25944 51537 644591 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -7744) (undo-tree-id29019 . -1) (undo-tree-id29020 . -1) (undo-tree-id29021 . -1) (undo-tree-id29022 . -1) (undo-tree-id29023 . -1) (undo-tree-id29024 . -1) (undo-tree-id29025 . -1) (undo-tree-id29026 . -1) (undo-tree-id29027 . -1) (undo-tree-id29028 . -1) (undo-tree-id29029 . -1) (undo-tree-id29030 . -1) (undo-tree-id29031 . -1) (undo-tree-id29032 . -1) (undo-tree-id29033 . -1) (#("e" 0 1 (fontified t)) . -7745) (undo-tree-id29034 . -1) (undo-tree-id29035 . -1) (undo-tree-id29036 . -1) (undo-tree-id29037 . -1) (undo-tree-id29038 . -1) (undo-tree-id29039 . -1) (undo-tree-id29040 . -1) (undo-tree-id29041 . -1) (undo-tree-id29042 . -1) (undo-tree-id29043 . -1) (undo-tree-id29044 . -1) (undo-tree-id29045 . -1) (undo-tree-id29046 . -1) (#("y" 0 1 (fontified t)) . -7746) (undo-tree-id29047 . -1) (undo-tree-id29048 . -1) (undo-tree-id29049 . -1) (undo-tree-id29050 . -1) (undo-tree-id29051 . -1) (undo-tree-id29052 . -1) (undo-tree-id29053 . -1) (undo-tree-id29054 . -1) (undo-tree-id29055 . -1) (undo-tree-id29056 . -1) (undo-tree-id29057 . -1) (#("." 0 1 (fontified t)) . -7747) (undo-tree-id29058 . -1) (undo-tree-id29059 . -1) (undo-tree-id29060 . -1) (undo-tree-id29061 . -1) (undo-tree-id29062 . -1) (undo-tree-id29063 . -1) (undo-tree-id29064 . -1) 7748) nil (25944 51537 644587 0) 0 nil])
([nil nil ((7744 . 7745)) nil (25944 51537 644538 0) 0 nil])
([nil nil ((#("&" 0 1 (face rust-ampersand-face fontified t)) . -7744) (undo-tree-id29016 . -1) (undo-tree-id29017 . -1) (undo-tree-id29018 . -1) 7745) nil (25944 51537 644536 0) 0 nil])
([nil nil ((7744 . 7745)) nil (25944 51537 644522 0) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -7744) (undo-tree-id29069 . -1) (undo-tree-id29070 . -1) (undo-tree-id29071 . -1) (undo-tree-id29072 . -1) (undo-tree-id29073 . -1) (undo-tree-id29074 . -1) (undo-tree-id29075 . -1) (undo-tree-id29076 . -1) (undo-tree-id29077 . -1) (undo-tree-id29078 . -1) (undo-tree-id29079 . -1) (undo-tree-id29080 . -1) (undo-tree-id29081 . -1) (undo-tree-id29082 . -1) (undo-tree-id29083 . -1) (undo-tree-id29084 . -1) (undo-tree-id29085 . -1) (undo-tree-id29086 . -1) (undo-tree-id29087 . -1) (undo-tree-id29088 . -1) (undo-tree-id29089 . -1) (undo-tree-id29090 . -1) (undo-tree-id29091 . -1) (undo-tree-id29092 . -1) (undo-tree-id29093 . -1) (undo-tree-id29094 . -1) (undo-tree-id29095 . -1) (undo-tree-id29096 . -1) (undo-tree-id29097 . -1) (undo-tree-id29098 . -1) (undo-tree-id29099 . -1) (undo-tree-id29100 . -1) (undo-tree-id29101 . -1) (undo-tree-id29102 . -1) (undo-tree-id29103 . -1) (undo-tree-id29104 . -1) (undo-tree-id29105 . -1) (undo-tree-id29106 . -1) (undo-tree-id29107 . -1) (undo-tree-id29108 . -1) (undo-tree-id29109 . -1) (undo-tree-id29110 . -1) (#("s" 0 1 (fontified t)) . -7745) (undo-tree-id29111 . -1) (undo-tree-id29112 . -1) (undo-tree-id29113 . -1) (undo-tree-id29114 . -1) (undo-tree-id29115 . -1) (undo-tree-id29116 . -1) (undo-tree-id29117 . -1) (undo-tree-id29118 . -1) (undo-tree-id29119 . -1) (undo-tree-id29120 . -1) (undo-tree-id29121 . -1) (undo-tree-id29122 . -1) 7746 (t 25944 51537 709459 47000)) nil (25944 51542 601774 0) 0 nil])
([nil nil ((7744 . 7745)) nil (25944 51542 601706 0) 0 nil])
([nil nil ((7759 . 7760) (t 25944 51542 664016 925000)) nil (25944 51566 224680 0) 0 nil])
([nil nil ((7744 . 7745) (t 25944 51566 287520 793000)) nil (25944 51571 669667 0) 0 nil])
([nil nil ((#("map" 0 3 (fontified t)) . -7720) (undo-tree-id29155 . -3) (undo-tree-id29156 . -3) (undo-tree-id29157 . -3) (undo-tree-id29158 . -3) (undo-tree-id29159 . -3) (undo-tree-id29160 . -3) (undo-tree-id29161 . -3) (undo-tree-id29162 . -3) (undo-tree-id29163 . -3) (undo-tree-id29164 . -3) (undo-tree-id29165 . -3) (undo-tree-id29166 . -3) (undo-tree-id29167 . -3) (undo-tree-id29168 . -3) (undo-tree-id29169 . -3) (undo-tree-id29170 . -3) (undo-tree-id29171 . -3) (undo-tree-id29172 . -3) 7723 (t 25944 51571 731492 351000)) nil (25944 51590 815247 0) 0 nil])
([nil nil ((7720 . 7721)) nil (25944 51590 815226 0) 0 nil])
([nil nil ((7720 . 7722)) nil (25944 51590 815226 0) 0 nil])
([nil nil ((7722 . 7723)) nil (25944 51590 815224 0) 0 nil])
([nil nil ((7720 . 7728) (#("for" 0 3 (fontified nil)) . 7720) (7720 . 7723) (#("for_each (as Iterator)" 0 22 (fontified nil)) . -7720) (7720 . 7742) (#("for" 0 3 (face font-lock-keyword-face fontified t)) . -7720) (undo-tree-id29138 . -3) (undo-tree-id29139 . -3) (undo-tree-id29140 . -1) (undo-tree-id29141 . -1) (undo-tree-id29142 . -1) (undo-tree-id29143 . -1) (undo-tree-id29144 . -1) (undo-tree-id29145 . -2) (undo-tree-id29146 . -2) (undo-tree-id29147 . -2) (undo-tree-id29148 . -3) (undo-tree-id29149 . -3) (undo-tree-id29150 . -3) (undo-tree-id29151 . -3) (undo-tree-id29152 . -3) (undo-tree-id29153 . -3) (undo-tree-id29154 . -3) 7723) nil (25944 51590 815222 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -7728) (undo-tree-id29130 . -1) (undo-tree-id29131 . -1) (undo-tree-id29132 . -1) (undo-tree-id29133 . -1) (undo-tree-id29134 . -1) (undo-tree-id29135 . -1) (undo-tree-id29136 . -1) (undo-tree-id29137 . -1) 7729) nil (25944 51590 815201 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -7765) (undo-tree-id29123 . -1) (undo-tree-id29124 . -1) (undo-tree-id29125 . -1) (undo-tree-id29126 . -1) (undo-tree-id29127 . -1) (undo-tree-id29128 . -1) (undo-tree-id29129 . -1) 7766) nil (25944 51590 815188 0) 0 nil])
([nil nil ((#("	keyboard_state.update(|Keyboard{keys, ..}| {
	    keys.iter_mut().for_each(|Key{selected, ..}| *selected=false)
	});" 0 1 (fontified t) 1 16 (fontified t) 16 24 (fontified t) 24 32 (face font-lock-type-face fontified t) 32 41 (fontified t) 41 42 (fontified t rear-nonsticky t) 42 46 (fontified t) 46 51 (fontified t) 51 55 (fontified t) 55 56 (fontified t) 56 67 (fontified t) 67 75 (fontified t) 75 77 (fontified t) 77 80 (face font-lock-type-face fontified t) 80 81 (fontified t) 81 93 (fontified t) 93 94 (fontified t) 94 98 (fontified t) 98 106 (fontified t) 106 111 (fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 117 (fontified t)) . 7653) (undo-tree-id29336 . -117) (undo-tree-id29337 . -24) (undo-tree-id29338 . -90) (undo-tree-id29339 . -67) (undo-tree-id29340 . -67) (undo-tree-id29341 . -67) (undo-tree-id29342 . -67) (undo-tree-id29343 . -67) (undo-tree-id29344 . -67) (undo-tree-id29345 . -67) (undo-tree-id29346 . -67) (undo-tree-id29347 . -67) (undo-tree-id29348 . -67) (undo-tree-id29349 . -67) (undo-tree-id29350 . -67) (undo-tree-id29351 . -67) (undo-tree-id29352 . -67) (undo-tree-id29353 . -67) (undo-tree-id29354 . -75) (undo-tree-id29355 . -67) (undo-tree-id29356 . -67) (undo-tree-id29357 . -67) (undo-tree-id29358 . -67) (undo-tree-id29359 . -67) (undo-tree-id29360 . -67) (undo-tree-id29361 . -67) (undo-tree-id29362 . -67) (undo-tree-id29363 . -67) (undo-tree-id29364 . -67) (undo-tree-id29365 . -67) (undo-tree-id29366 . -67) (undo-tree-id29367 . -67) (undo-tree-id29368 . -67) (undo-tree-id29369 . -67) (undo-tree-id29370 . -75) (undo-tree-id29371 . -75) (undo-tree-id29372 . -75) (undo-tree-id29373 . -75) (undo-tree-id29374 . -75) (undo-tree-id29375 . -112) (undo-tree-id29376 . -112) (undo-tree-id29377 . -112) (undo-tree-id29378 . -112) (undo-tree-id29379 . -112) (undo-tree-id29380 . -112) (undo-tree-id29381 . -112) (undo-tree-id29382 . -112) (undo-tree-id29383 . -112) (undo-tree-id29384 . -112) (undo-tree-id29385 . -112) (undo-tree-id29386 . -112) (undo-tree-id29387 . -112) (undo-tree-id29388 . -112) (undo-tree-id29389 . -112) (undo-tree-id29390 . -112) (undo-tree-id29391 . -112) (undo-tree-id29392 . -112) (undo-tree-id29393 . -112) (undo-tree-id29394 . -112) (undo-tree-id29395 . -112) (undo-tree-id29396 . -112) (undo-tree-id29397 . -112) (undo-tree-id29398 . -112) (undo-tree-id29399 . -112) (undo-tree-id29400 . -112) (undo-tree-id29401 . -112) (undo-tree-id29402 . -112) (undo-tree-id29403 . -112) (undo-tree-id29404 . -112) (undo-tree-id29405 . -112) (undo-tree-id29406 . -112) (undo-tree-id29407 . -112) (undo-tree-id29408 . -112) (undo-tree-id29409 . -112) (undo-tree-id29410 . -112) (undo-tree-id29411 . -112) (undo-tree-id29412 . -112) (undo-tree-id29413 . -112) (undo-tree-id29414 . -112) (undo-tree-id29415 . -112) (undo-tree-id29416 . -112) (undo-tree-id29417 . -112) (undo-tree-id29418 . -112) (undo-tree-id29419 . -112) (undo-tree-id29420 . -112) (undo-tree-id29421 . -112) (undo-tree-id29422 . -112) (undo-tree-id29423 . -112) (undo-tree-id29424 . -112) (undo-tree-id29425 . -112) (undo-tree-id29426 . -112) (undo-tree-id29427 . -112) (undo-tree-id29428 . -112) (undo-tree-id29429 . -112) (undo-tree-id29430 . -112) (undo-tree-id29431 . -112) (undo-tree-id29432 . -112) (undo-tree-id29433 . -112) (undo-tree-id29434 . -112) (undo-tree-id29435 . -112) (undo-tree-id29436 . -112) (undo-tree-id29437 . -112) (undo-tree-id29438 . -112) (undo-tree-id29439 . -112) (undo-tree-id29440 . -112) (undo-tree-id29441 . -112) (undo-tree-id29442 . -112) (undo-tree-id29443 . -112) (undo-tree-id29444 . -112) (undo-tree-id29445 . -112) (undo-tree-id29446 . -112) (undo-tree-id29447 . -112) (undo-tree-id29448 . -112) (undo-tree-id29449 . -112) (undo-tree-id29450 . -112) (undo-tree-id29451 . -112) (undo-tree-id29452 . -112) (undo-tree-id29453 . -112) (undo-tree-id29454 . -112) (undo-tree-id29455 . -112) (undo-tree-id29456 . -112) (undo-tree-id29457 . -112) (undo-tree-id29458 . -112) (undo-tree-id29459 . -112) (undo-tree-id29460 . -112) (undo-tree-id29461 . -112) (undo-tree-id29462 . -112) (undo-tree-id29463 . -112) (undo-tree-id29464 . -112) (undo-tree-id29465 . -112) (undo-tree-id29466 . -112) (undo-tree-id29467 . -112) (undo-tree-id29468 . -112) (undo-tree-id29469 . -112) (undo-tree-id29470 . -117) (undo-tree-id29471 . -117) (undo-tree-id29472 . -117) (undo-tree-id29473 . -117) (undo-tree-id29474 . -117) (undo-tree-id29475 . -117) (undo-tree-id29476 . -117) (undo-tree-id29477 . -116) (undo-tree-id29478 . -115) (undo-tree-id29479 . -113) (undo-tree-id29480 . -46) (undo-tree-id29481 . -46) (undo-tree-id29482 . -46) (undo-tree-id29483 . -46) (undo-tree-id29484 . -46) (undo-tree-id29485 . -46) (undo-tree-id29486 . -46) (undo-tree-id29487 . -117) (t 25944 51590 877867 831000)) nil (25944 51643 905617 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7652) (undo-tree-id29173 . -1) (undo-tree-id29174 . -1) (undo-tree-id29175 . -1) (undo-tree-id29176 . -1) (undo-tree-id29177 . -1) (undo-tree-id29178 . -1) (undo-tree-id29179 . -1) (undo-tree-id29180 . -1) (undo-tree-id29181 . -1) (undo-tree-id29182 . -1) (undo-tree-id29183 . -1) (undo-tree-id29184 . -1) (undo-tree-id29185 . -1) (undo-tree-id29186 . -1) (undo-tree-id29187 . -1) (undo-tree-id29188 . -1) (undo-tree-id29189 . -1) (undo-tree-id29190 . -1) (undo-tree-id29191 . -1) (undo-tree-id29192 . -1) (undo-tree-id29193 . -1) (undo-tree-id29194 . -1) (undo-tree-id29195 . -1) (undo-tree-id29196 . -1) (undo-tree-id29197 . -1) (undo-tree-id29198 . -1) (undo-tree-id29199 . -1) (undo-tree-id29200 . -1) (undo-tree-id29201 . -1) (undo-tree-id29202 . -1) (undo-tree-id29203 . -1) (undo-tree-id29204 . -1) (undo-tree-id29205 . -1) (undo-tree-id29206 . -1) (undo-tree-id29207 . -1) (undo-tree-id29208 . -1) (undo-tree-id29209 . -1) (undo-tree-id29210 . -1) (undo-tree-id29211 . -1) (undo-tree-id29212 . -1) (undo-tree-id29213 . -1) (undo-tree-id29214 . -1) (undo-tree-id29215 . -1) (undo-tree-id29216 . -1) (undo-tree-id29217 . -1) (undo-tree-id29218 . -1) (undo-tree-id29219 . -1) (undo-tree-id29220 . -1) (undo-tree-id29221 . -1) (undo-tree-id29222 . -1) (undo-tree-id29223 . -1) (undo-tree-id29224 . -1) (undo-tree-id29225 . -1) (undo-tree-id29226 . -1) (undo-tree-id29227 . -1) (undo-tree-id29228 . -1) (undo-tree-id29229 . -1) (undo-tree-id29230 . -1) (undo-tree-id29231 . -1) (undo-tree-id29232 . -1) (undo-tree-id29233 . -1) (undo-tree-id29234 . -1) (undo-tree-id29235 . -1) (undo-tree-id29236 . -1) (undo-tree-id29237 . -1) (undo-tree-id29238 . -1) (undo-tree-id29239 . -1) (undo-tree-id29240 . -1) (undo-tree-id29241 . -1) (undo-tree-id29242 . -1) (undo-tree-id29243 . -1) (undo-tree-id29244 . -1) (undo-tree-id29245 . -1) (undo-tree-id29246 . -1) (undo-tree-id29247 . -1) (undo-tree-id29248 . -1) (undo-tree-id29249 . -1) (undo-tree-id29250 . -1) (undo-tree-id29251 . -1) (undo-tree-id29252 . -1) (undo-tree-id29253 . -1) (undo-tree-id29254 . -1) (undo-tree-id29255 . -1) (undo-tree-id29256 . -1) (undo-tree-id29257 . -1) (undo-tree-id29258 . -1) (undo-tree-id29259 . -1) (undo-tree-id29260 . -1) (undo-tree-id29261 . -1) (undo-tree-id29262 . -1) (undo-tree-id29263 . -1) (undo-tree-id29264 . -1) (undo-tree-id29265 . -1) (undo-tree-id29266 . -1) (undo-tree-id29267 . -1) (undo-tree-id29268 . -1) (undo-tree-id29269 . -1) (undo-tree-id29270 . -1) (undo-tree-id29271 . -1) (undo-tree-id29272 . -1) (undo-tree-id29273 . -1) (undo-tree-id29274 . -1) (undo-tree-id29275 . -1) (undo-tree-id29276 . -1) (undo-tree-id29277 . -1) (undo-tree-id29278 . -1) (undo-tree-id29279 . -1) (undo-tree-id29280 . -1) (undo-tree-id29281 . -1) (undo-tree-id29282 . -1) (undo-tree-id29283 . -1) (undo-tree-id29284 . -1) (undo-tree-id29285 . -1) (undo-tree-id29286 . -1) (undo-tree-id29287 . -1) (undo-tree-id29288 . -1) (undo-tree-id29289 . -1) (undo-tree-id29290 . -1) (undo-tree-id29291 . -1) (undo-tree-id29292 . -1) (undo-tree-id29293 . -1) (undo-tree-id29294 . -1) (undo-tree-id29295 . -1) (undo-tree-id29296 . -1) (undo-tree-id29297 . -1) (undo-tree-id29298 . -1) (undo-tree-id29299 . -1) (undo-tree-id29300 . -1) (undo-tree-id29301 . -1) (undo-tree-id29302 . -1) (undo-tree-id29303 . -1) (undo-tree-id29304 . -1) (undo-tree-id29305 . -1) (undo-tree-id29306 . -1) (undo-tree-id29307 . -1) (undo-tree-id29308 . -1) (undo-tree-id29309 . -1) (undo-tree-id29310 . -1) (undo-tree-id29311 . -1) (undo-tree-id29312 . -1) (undo-tree-id29313 . -1) (undo-tree-id29314 . -1) (undo-tree-id29315 . -1) (undo-tree-id29316 . -1) (undo-tree-id29317 . -1) (undo-tree-id29318 . -1) (undo-tree-id29319 . -1) (undo-tree-id29320 . -1) (undo-tree-id29321 . -1) (undo-tree-id29322 . -1) (undo-tree-id29323 . -1) (undo-tree-id29324 . -1) (undo-tree-id29325 . -1) (undo-tree-id29326 . -1) (undo-tree-id29327 . -1) (undo-tree-id29328 . -1) (undo-tree-id29329 . -1) (undo-tree-id29330 . -1) (undo-tree-id29331 . -1) (undo-tree-id29332 . -1) (undo-tree-id29333 . -1) (undo-tree-id29334 . -1) (undo-tree-id29335 . -1) 7653) nil (25944 51643 905465 0) 0 nil])
([nil nil ((#("use web_sys::HtmlCanvasElement;
" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 11 (face font-lock-constant-face fontified t) 11 13 (fontified t) 13 30 (face font-lock-type-face fontified t) 30 31 (fontified t) 31 32 (fontified t)) . -142) (undo-tree-id29513 . -32) (undo-tree-id29514 . -32) (undo-tree-id29515 . -24) (undo-tree-id29516 . -24) (undo-tree-id29517 . -24) (undo-tree-id29518 . -24) (undo-tree-id29519 . -24) (undo-tree-id29520 . -13) (undo-tree-id29521 . -30) (undo-tree-id29522 . -30) (undo-tree-id29523 . -13) (undo-tree-id29524 . -30) (undo-tree-id29525 . -30) (undo-tree-id29526 . -32) (undo-tree-id29527 . -32) (undo-tree-id29528 . -13) (undo-tree-id29529 . -32) (undo-tree-id29530 . -32) (undo-tree-id29531 . -32) (undo-tree-id29532 . -32) (undo-tree-id29533 . -32) (undo-tree-id29534 . -32) (undo-tree-id29535 . -32) (undo-tree-id29536 . -32) (undo-tree-id29537 . -32) 174 (t 25944 51643 969372 16000)) nil (25944 54310 64493 0) 0 nil])
([nil nil ((#("use leptos_chart::*;
" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 16 (face font-lock-constant-face fontified t) 16 21 (fontified t)) . -35) (undo-tree-id29488 . -21) (undo-tree-id29489 . -21) (undo-tree-id29490 . -18) (undo-tree-id29491 . -18) (undo-tree-id29492 . -18) (undo-tree-id29493 . -18) (undo-tree-id29494 . -18) (undo-tree-id29495 . -18) (undo-tree-id29496 . -19) (undo-tree-id29497 . -19) (undo-tree-id29498 . -18) (undo-tree-id29499 . -19) (undo-tree-id29500 . -19) (undo-tree-id29501 . -21) (undo-tree-id29502 . -21) (undo-tree-id29503 . -18) (undo-tree-id29504 . -21) (undo-tree-id29505 . -21) (undo-tree-id29506 . -21) (undo-tree-id29507 . -21) (undo-tree-id29508 . -21) (undo-tree-id29509 . -21) (undo-tree-id29510 . -21) (undo-tree-id29511 . -21) (undo-tree-id29512 . -21) 56) nil (25944 54310 64461 0) 0 nil])
([nil nil ((#("Key, " 0 3 (face font-lock-type-face fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -234) (undo-tree-id29569 . -4) (undo-tree-id29570 . -5) (undo-tree-id29571 . -4) (undo-tree-id29572 . -4) (undo-tree-id29573 . -4) (undo-tree-id29574 . -4) (undo-tree-id29575 . -4) (undo-tree-id29576 . -4) (undo-tree-id29577 . -4) (undo-tree-id29578 . -4) (undo-tree-id29579 . -4) (undo-tree-id29580 . -4) (undo-tree-id29581 . -4) (undo-tree-id29582 . -4) (undo-tree-id29583 . -4) (undo-tree-id29584 . -4) (undo-tree-id29585 . -4) (undo-tree-id29586 . -4) (undo-tree-id29587 . -4) (undo-tree-id29588 . -5) (undo-tree-id29589 . -5) (undo-tree-id29590 . -5) (undo-tree-id29591 . -5) (undo-tree-id29592 . -5) 239 (t 25944 54310 130154 591000)) nil (25944 54321 997132 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -233) (undo-tree-id29538 . -1) (undo-tree-id29539 . -1) (undo-tree-id29540 . -1) (undo-tree-id29541 . -1) (undo-tree-id29542 . -1) (undo-tree-id29543 . -1) (undo-tree-id29544 . -1) (undo-tree-id29545 . -1) (undo-tree-id29546 . -1) (undo-tree-id29547 . -1) (undo-tree-id29548 . -1) (undo-tree-id29549 . -1) (undo-tree-id29550 . -1) (undo-tree-id29551 . -1) (undo-tree-id29552 . -1) (undo-tree-id29553 . -1) (undo-tree-id29554 . -1) (undo-tree-id29555 . -1) (undo-tree-id29556 . -1) (undo-tree-id29557 . -1) (undo-tree-id29558 . -1) (undo-tree-id29559 . -1) (undo-tree-id29560 . -1) (undo-tree-id29561 . -1) (undo-tree-id29562 . -1) (undo-tree-id29563 . -1) (undo-tree-id29564 . -1) (undo-tree-id29565 . -1) (undo-tree-id29566 . -1) (undo-tree-id29567 . -1) (undo-tree-id29568 . -1) 234) nil (25944 54321 997102 0) 0 nil])
([nil nil ((233 . 234)) nil (25944 54321 997058 0) 0 nil])
([nil nil ((apply -3 4266 4388 undo--wrap-and-run-primitive-undo 4266 4388 ((4271 . 4274) 4384))) nil (25944 54471 227413 0) 0 nil])
([nil nil ((4384 . 4389) (#("    " 0 4 (fontified nil)) . -4267) (4387 . 4388)) nil (25944 54471 227411 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 4501 . 4502) (nil fontified nil 4483 . 4502) (nil fontified nil 4472 . 4483) (nil fontified nil 4447 . 4472) (nil fontified nil 4439 . 4447) (nil fontified nil 4431 . 4439) (nil fontified nil 4391 . 4431) (nil fontified nil 4389 . 4391) (4389 . 4502)) nil (25944 54471 227410 0) 0 nil])
([nil nil ((#("keys[index].selected = keys[index].selected.not())" 0 21 (fontified t) 21 32 (fontified t) 32 50 (fontified t)) . -4451) (undo-tree-id29665 . -50) (undo-tree-id29666 . -50) (undo-tree-id29667 . -1) (undo-tree-id29668 . -3) (undo-tree-id29669 . -8) (undo-tree-id29670 . -10) (undo-tree-id29671 . -15) (undo-tree-id29672 . -19) (undo-tree-id29673 . -23) (undo-tree-id29674 . -25) (undo-tree-id29675 . -27) (undo-tree-id29676 . -29) (undo-tree-id29677 . -31) (undo-tree-id29678 . -32) (undo-tree-id29679 . -33) (undo-tree-id29680 . -35) (undo-tree-id29681 . -36) (undo-tree-id29682 . -37) (undo-tree-id29683 . -38) (undo-tree-id29684 . -39) (undo-tree-id29685 . -40) (undo-tree-id29686 . -40) (undo-tree-id29687 . -40) (undo-tree-id29688 . -48) (undo-tree-id29689 . -49) (undo-tree-id29690 . -50) (undo-tree-id29691 . -50) (undo-tree-id29692 . -50) (undo-tree-id29693 . -50) (undo-tree-id29694 . -50) (undo-tree-id29695 . -50) (undo-tree-id29696 . -50) (undo-tree-id29697 . -50) (undo-tree-id29698 . -50) (undo-tree-id29699 . -50) (undo-tree-id29700 . -50) 4501) nil (25944 54471 227405 0) 0 nil])
([nil nil ((4451 . 4455)) nil (25944 54471 227364 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -4454) (undo-tree-id29649 . -1) (undo-tree-id29650 . -1) (undo-tree-id29651 . -1) (undo-tree-id29652 . -1) (undo-tree-id29653 . -1) (undo-tree-id29654 . -1) (undo-tree-id29655 . -1) (undo-tree-id29656 . -1) (undo-tree-id29657 . -1) (undo-tree-id29658 . -1) (undo-tree-id29659 . -1) (undo-tree-id29660 . -1) (undo-tree-id29661 . -1) (undo-tree-id29662 . -1) (undo-tree-id29663 . -1) (undo-tree-id29664 . -1) 4455) nil (25944 54471 227363 0) 0 nil])
([nil nil ((4454 . 4456)) nil (25944 54471 227343 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -4454) (undo-tree-id29593 . -1) (undo-tree-id29594 . -1) (undo-tree-id29595 . -1) (undo-tree-id29596 . -1) (undo-tree-id29597 . -1) (undo-tree-id29598 . -1) (undo-tree-id29599 . -1) (undo-tree-id29600 . -1) (undo-tree-id29601 . -1) (undo-tree-id29602 . -1) (undo-tree-id29603 . -1) (undo-tree-id29604 . -1) (undo-tree-id29605 . -1) (undo-tree-id29606 . -1) (undo-tree-id29607 . -1) (undo-tree-id29608 . -1) (undo-tree-id29609 . -1) (undo-tree-id29610 . -1) (undo-tree-id29611 . -1) (undo-tree-id29612 . -1) (undo-tree-id29613 . -1) (undo-tree-id29614 . -1) (undo-tree-id29615 . -1) (undo-tree-id29616 . -1) (undo-tree-id29617 . -1) (undo-tree-id29618 . -1) (undo-tree-id29619 . -1) (undo-tree-id29620 . -1) (undo-tree-id29621 . -1) (undo-tree-id29622 . -1) (undo-tree-id29623 . -1) (undo-tree-id29624 . -1) (undo-tree-id29625 . -1) (undo-tree-id29626 . -1) (undo-tree-id29627 . -1) (undo-tree-id29628 . -1) (undo-tree-id29629 . -1) (undo-tree-id29630 . -1) (undo-tree-id29631 . -1) (undo-tree-id29632 . -1) (#("i" 0 1 (fontified t)) . -4455) (undo-tree-id29633 . -1) (undo-tree-id29634 . -1) (undo-tree-id29635 . -1) (undo-tree-id29636 . -1) (undo-tree-id29637 . -1) (undo-tree-id29638 . -1) (undo-tree-id29639 . -1) (undo-tree-id29640 . -1) (undo-tree-id29641 . -1) (undo-tree-id29642 . -1) (undo-tree-id29643 . -1) (undo-tree-id29644 . -1) (undo-tree-id29645 . -1) (undo-tree-id29646 . -1) (undo-tree-id29647 . -1) (undo-tree-id29648 . -1) 4456) nil (25944 54471 227338 0) 0 nil])
([nil nil ((4454 . 4455)) nil (25944 54471 227261 0) 0 nil])
([nil nil ((4455 . 4458) (t 25944 54471 292898 789000)) nil (25944 54494 474786 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -4451) (undo-tree-id29764 . -1) (undo-tree-id29765 . -1) (undo-tree-id29766 . -1) (undo-tree-id29767 . -1) (undo-tree-id29768 . -1) (undo-tree-id29769 . -1) (undo-tree-id29770 . -1) (undo-tree-id29771 . -1) (undo-tree-id29772 . -1) (undo-tree-id29773 . -1) (undo-tree-id29774 . -1) (undo-tree-id29775 . -1) (undo-tree-id29776 . -1) (undo-tree-id29777 . -1) (undo-tree-id29778 . -1) (undo-tree-id29779 . -1) (undo-tree-id29780 . -1) (undo-tree-id29781 . -1) (undo-tree-id29782 . -1) (undo-tree-id29783 . -1) (undo-tree-id29784 . -1) (undo-tree-id29785 . -1) (undo-tree-id29786 . -1) (undo-tree-id29787 . -1) (undo-tree-id29788 . -1) (undo-tree-id29789 . -1) (undo-tree-id29790 . -1) (undo-tree-id29791 . -1) (undo-tree-id29792 . -1) (undo-tree-id29793 . -1) (undo-tree-id29794 . -1) (undo-tree-id29795 . -1) (undo-tree-id29796 . -1) (undo-tree-id29797 . -1) (undo-tree-id29798 . -1) (undo-tree-id29799 . -1) (undo-tree-id29800 . -1) (undo-tree-id29801 . -1) (undo-tree-id29802 . -1) (undo-tree-id29803 . -1) (undo-tree-id29804 . -1) (undo-tree-id29805 . -1) (undo-tree-id29806 . -1) (undo-tree-id29807 . -1) (undo-tree-id29808 . -1) (undo-tree-id29809 . -1) (undo-tree-id29810 . -1) (undo-tree-id29811 . -1) (undo-tree-id29812 . -1) (undo-tree-id29813 . -1) (undo-tree-id29814 . -1) (undo-tree-id29815 . -1) (undo-tree-id29816 . -1) (undo-tree-id29817 . -1) (undo-tree-id29818 . -1) (undo-tree-id29819 . -1) (undo-tree-id29820 . -1) (undo-tree-id29821 . -1) (undo-tree-id29822 . -1) (undo-tree-id29823 . -1) (undo-tree-id29824 . -1) (undo-tree-id29825 . -1) (undo-tree-id29826 . -1) (undo-tree-id29827 . -1) (undo-tree-id29828 . -1) (undo-tree-id29829 . -1) (undo-tree-id29830 . -1) (undo-tree-id29831 . -1) (undo-tree-id29832 . -1) (undo-tree-id29833 . -1) (undo-tree-id29834 . -1) (undo-tree-id29835 . -1) (undo-tree-id29836 . -1) (undo-tree-id29837 . -1) (undo-tree-id29838 . -1) (undo-tree-id29839 . -1) (undo-tree-id29840 . -1) (undo-tree-id29841 . -1) (undo-tree-id29842 . -1) (undo-tree-id29843 . -1) (undo-tree-id29844 . -1) (undo-tree-id29845 . -1) (undo-tree-id29846 . -1) (undo-tree-id29847 . -1) (undo-tree-id29848 . -1) (undo-tree-id29849 . -1) (undo-tree-id29850 . -1) (undo-tree-id29851 . -1) (undo-tree-id29852 . -1) (undo-tree-id29853 . -1) (undo-tree-id29854 . -1) (undo-tree-id29855 . -1) (undo-tree-id29856 . -1) (undo-tree-id29857 . -1) (undo-tree-id29858 . -1) (undo-tree-id29859 . -1) (undo-tree-id29860 . -1) (undo-tree-id29861 . -1) (undo-tree-id29862 . -1) (undo-tree-id29863 . -1) (undo-tree-id29864 . -1) (undo-tree-id29865 . -1) (undo-tree-id29866 . -1) (undo-tree-id29867 . -1) (undo-tree-id29868 . -1) (undo-tree-id29869 . -1) (undo-tree-id29870 . -1) (undo-tree-id29871 . -1) (undo-tree-id29872 . -1) (undo-tree-id29873 . -1) (undo-tree-id29874 . -1) (undo-tree-id29875 . -1) (undo-tree-id29876 . -1) (undo-tree-id29877 . -1) (undo-tree-id29878 . -1) (undo-tree-id29879 . -1) (undo-tree-id29880 . -1) (undo-tree-id29881 . -1) (undo-tree-id29882 . -1) (undo-tree-id29883 . -1) (undo-tree-id29884 . -1) (undo-tree-id29885 . -1) (undo-tree-id29886 . -1) (undo-tree-id29887 . -1) (undo-tree-id29888 . -1) (undo-tree-id29889 . -1) (undo-tree-id29890 . -1) (undo-tree-id29891 . -1) (undo-tree-id29892 . -1) (undo-tree-id29893 . -1) (undo-tree-id29894 . -1) (undo-tree-id29895 . -1) (undo-tree-id29896 . -1) (undo-tree-id29897 . -1) (undo-tree-id29898 . -1) (undo-tree-id29899 . -1) (undo-tree-id29900 . -1) (undo-tree-id29901 . -1) (undo-tree-id29902 . -1) (undo-tree-id29903 . -1) (undo-tree-id29904 . -1) (undo-tree-id29905 . -1) (undo-tree-id29906 . -1) (undo-tree-id29907 . -1) (undo-tree-id29908 . -1) (undo-tree-id29909 . -1) (undo-tree-id29910 . -1) (undo-tree-id29911 . -1) (undo-tree-id29912 . -1) (undo-tree-id29913 . -1) (undo-tree-id29914 . -1) (undo-tree-id29915 . -1) (undo-tree-id29916 . -1) (undo-tree-id29917 . -1) (undo-tree-id29918 . -1) (undo-tree-id29919 . -1) (undo-tree-id29920 . -1) (undo-tree-id29921 . -1) (undo-tree-id29922 . -1) (undo-tree-id29923 . -1) (undo-tree-id29924 . -1) (undo-tree-id29925 . -1) (undo-tree-id29926 . -1) (undo-tree-id29927 . -1) (undo-tree-id29928 . -1) (undo-tree-id29929 . -1) (undo-tree-id29930 . -1) (undo-tree-id29931 . -1) (undo-tree-id29932 . -1) (undo-tree-id29933 . -1) (undo-tree-id29934 . -1) (undo-tree-id29935 . -1) (undo-tree-id29936 . -1) (undo-tree-id29937 . -1) (undo-tree-id29938 . -1) (undo-tree-id29939 . -1) (undo-tree-id29940 . -1) (undo-tree-id29941 . -1) (undo-tree-id29942 . -1) (undo-tree-id29943 . -1) (undo-tree-id29944 . -1) (undo-tree-id29945 . -1) (undo-tree-id29946 . -1) (#("e" 0 1 (fontified t)) . -4452) (undo-tree-id29947 . -1) (undo-tree-id29948 . -1) (undo-tree-id29949 . -1) (undo-tree-id29950 . -1) (undo-tree-id29951 . -1) (undo-tree-id29952 . -1) (undo-tree-id29953 . -1) (undo-tree-id29954 . -1) (undo-tree-id29955 . -1) (undo-tree-id29956 . -1) (undo-tree-id29957 . -1) (undo-tree-id29958 . -1) (undo-tree-id29959 . -1) (undo-tree-id29960 . -1) (undo-tree-id29961 . -1) (undo-tree-id29962 . -1) (undo-tree-id29963 . -1) (undo-tree-id29964 . -1) (undo-tree-id29965 . -1) (undo-tree-id29966 . -1) (undo-tree-id29967 . -1) (undo-tree-id29968 . -1) (undo-tree-id29969 . -1) (undo-tree-id29970 . -1) (undo-tree-id29971 . -1) (undo-tree-id29972 . -1) (undo-tree-id29973 . -1) (undo-tree-id29974 . -1) (undo-tree-id29975 . -1) (undo-tree-id29976 . -1) (undo-tree-id29977 . -1) (undo-tree-id29978 . -1) (undo-tree-id29979 . -1) (undo-tree-id29980 . -1) (undo-tree-id29981 . -1) (undo-tree-id29982 . -1) (undo-tree-id29983 . -1) (undo-tree-id29984 . -1) (undo-tree-id29985 . -1) (undo-tree-id29986 . -1) (undo-tree-id29987 . -1) (undo-tree-id29988 . -1) (undo-tree-id29989 . -1) (undo-tree-id29990 . -1) (undo-tree-id29991 . -1) (undo-tree-id29992 . -1) (undo-tree-id29993 . -1) (undo-tree-id29994 . -1) (undo-tree-id29995 . -1) (undo-tree-id29996 . -1) (undo-tree-id29997 . -1) (undo-tree-id29998 . -1) (undo-tree-id29999 . -1) (undo-tree-id30000 . -1) (undo-tree-id30001 . -1) (undo-tree-id30002 . -1) (undo-tree-id30003 . -1) (undo-tree-id30004 . -1) (undo-tree-id30005 . -1) (undo-tree-id30006 . -1) (undo-tree-id30007 . -1) (undo-tree-id30008 . -1) (undo-tree-id30009 . -1) (undo-tree-id30010 . -1) (undo-tree-id30011 . -1) (undo-tree-id30012 . -1) (undo-tree-id30013 . -1) (undo-tree-id30014 . -1) (undo-tree-id30015 . -1) (undo-tree-id30016 . -1) (undo-tree-id30017 . -1) (undo-tree-id30018 . -1) (undo-tree-id30019 . -1) (undo-tree-id30020 . -1) (undo-tree-id30021 . -1) (undo-tree-id30022 . -1) (undo-tree-id30023 . -1) (undo-tree-id30024 . -1) (undo-tree-id30025 . -1) (undo-tree-id30026 . -1) (undo-tree-id30027 . -1) (undo-tree-id30028 . -1) (undo-tree-id30029 . -1) (undo-tree-id30030 . -1) (undo-tree-id30031 . -1) (undo-tree-id30032 . -1) (undo-tree-id30033 . -1) (undo-tree-id30034 . -1) (undo-tree-id30035 . -1) (undo-tree-id30036 . -1) (undo-tree-id30037 . -1) (undo-tree-id30038 . -1) (undo-tree-id30039 . -1) (undo-tree-id30040 . -1) (undo-tree-id30041 . -1) (undo-tree-id30042 . -1) (undo-tree-id30043 . -1) (undo-tree-id30044 . -1) (undo-tree-id30045 . -1) (undo-tree-id30046 . -1) (undo-tree-id30047 . -1) (undo-tree-id30048 . -1) (undo-tree-id30049 . -1) (undo-tree-id30050 . -1) (undo-tree-id30051 . -1) (undo-tree-id30052 . -1) (undo-tree-id30053 . -1) (undo-tree-id30054 . -1) (undo-tree-id30055 . -1) (undo-tree-id30056 . -1) (undo-tree-id30057 . -1) (undo-tree-id30058 . -1) (undo-tree-id30059 . -1) (undo-tree-id30060 . -1) (undo-tree-id30061 . -1) (undo-tree-id30062 . -1) (undo-tree-id30063 . -1) (undo-tree-id30064 . -1) (undo-tree-id30065 . -1) (undo-tree-id30066 . -1) (undo-tree-id30067 . -1) (undo-tree-id30068 . -1) (undo-tree-id30069 . -1) (undo-tree-id30070 . -1) (undo-tree-id30071 . -1) (undo-tree-id30072 . -1) (undo-tree-id30073 . -1) (undo-tree-id30074 . -1) (undo-tree-id30075 . -1) (undo-tree-id30076 . -1) (undo-tree-id30077 . -1) (undo-tree-id30078 . -1) (undo-tree-id30079 . -1) (undo-tree-id30080 . -1) (undo-tree-id30081 . -1) (undo-tree-id30082 . -1) (undo-tree-id30083 . -1) (undo-tree-id30084 . -1) (undo-tree-id30085 . -1) (undo-tree-id30086 . -1) (undo-tree-id30087 . -1) (undo-tree-id30088 . -1) (undo-tree-id30089 . -1) (undo-tree-id30090 . -1) (undo-tree-id30091 . -1) (undo-tree-id30092 . -1) (undo-tree-id30093 . -1) (undo-tree-id30094 . -1) (undo-tree-id30095 . -1) (undo-tree-id30096 . -1) (undo-tree-id30097 . -1) (undo-tree-id30098 . -1) (undo-tree-id30099 . -1) (undo-tree-id30100 . -1) (undo-tree-id30101 . -1) (undo-tree-id30102 . -1) (undo-tree-id30103 . -1) (undo-tree-id30104 . -1) (undo-tree-id30105 . -1) (undo-tree-id30106 . -1) (undo-tree-id30107 . -1) (undo-tree-id30108 . -1) (undo-tree-id30109 . -1) (undo-tree-id30110 . -1) (undo-tree-id30111 . -1) (undo-tree-id30112 . -1) (undo-tree-id30113 . -1) (undo-tree-id30114 . -1) (undo-tree-id30115 . -1) (undo-tree-id30116 . -1) (undo-tree-id30117 . -1) (undo-tree-id30118 . -1) (#("y" 0 1 (fontified t)) . -4453) (undo-tree-id30119 . -1) (undo-tree-id30120 . -1) (undo-tree-id30121 . -1) (undo-tree-id30122 . -1) (undo-tree-id30123 . -1) (undo-tree-id30124 . -1) (undo-tree-id30125 . -1) (undo-tree-id30126 . -1) (undo-tree-id30127 . -1) (undo-tree-id30128 . -1) (undo-tree-id30129 . -1) (undo-tree-id30130 . -1) (undo-tree-id30131 . -1) (undo-tree-id30132 . -1) (undo-tree-id30133 . -1) (undo-tree-id30134 . -1) (undo-tree-id30135 . -1) (undo-tree-id30136 . -1) (undo-tree-id30137 . -1) (undo-tree-id30138 . -1) (undo-tree-id30139 . -1) (undo-tree-id30140 . -1) (undo-tree-id30141 . -1) (undo-tree-id30142 . -1) (undo-tree-id30143 . -1) (undo-tree-id30144 . -1) (undo-tree-id30145 . -1) (undo-tree-id30146 . -1) (undo-tree-id30147 . -1) (undo-tree-id30148 . -1) (undo-tree-id30149 . -1) (undo-tree-id30150 . -1) (undo-tree-id30151 . -1) (undo-tree-id30152 . -1) (undo-tree-id30153 . -1) (undo-tree-id30154 . -1) (undo-tree-id30155 . -1) (undo-tree-id30156 . -1) (undo-tree-id30157 . -1) (undo-tree-id30158 . -1) (undo-tree-id30159 . -1) (undo-tree-id30160 . -1) (undo-tree-id30161 . -1) (undo-tree-id30162 . -1) (undo-tree-id30163 . -1) (undo-tree-id30164 . -1) (undo-tree-id30165 . -1) (undo-tree-id30166 . -1) (undo-tree-id30167 . -1) (undo-tree-id30168 . -1) (undo-tree-id30169 . -1) (undo-tree-id30170 . -1) (undo-tree-id30171 . -1) (undo-tree-id30172 . -1) (undo-tree-id30173 . -1) (undo-tree-id30174 . -1) (undo-tree-id30175 . -1) (undo-tree-id30176 . -1) (undo-tree-id30177 . -1) (undo-tree-id30178 . -1) (undo-tree-id30179 . -1) (undo-tree-id30180 . -1) (undo-tree-id30181 . -1) (undo-tree-id30182 . -1) (undo-tree-id30183 . -1) (undo-tree-id30184 . -1) (undo-tree-id30185 . -1) (undo-tree-id30186 . -1) (undo-tree-id30187 . -1) (undo-tree-id30188 . -1) (undo-tree-id30189 . -1) (undo-tree-id30190 . -1) (undo-tree-id30191 . -1) (undo-tree-id30192 . -1) (undo-tree-id30193 . -1) (undo-tree-id30194 . -1) (undo-tree-id30195 . -1) (undo-tree-id30196 . -1) (undo-tree-id30197 . -1) (undo-tree-id30198 . -1) (undo-tree-id30199 . -1) (undo-tree-id30200 . -1) (undo-tree-id30201 . -1) (undo-tree-id30202 . -1) (undo-tree-id30203 . -1) (undo-tree-id30204 . -1) (undo-tree-id30205 . -1) (undo-tree-id30206 . -1) (undo-tree-id30207 . -1) (undo-tree-id30208 . -1) (undo-tree-id30209 . -1) (undo-tree-id30210 . -1) (undo-tree-id30211 . -1) (undo-tree-id30212 . -1) (undo-tree-id30213 . -1) (undo-tree-id30214 . -1) (undo-tree-id30215 . -1) (undo-tree-id30216 . -1) (undo-tree-id30217 . -1) (undo-tree-id30218 . -1) (undo-tree-id30219 . -1) (undo-tree-id30220 . -1) (undo-tree-id30221 . -1) (undo-tree-id30222 . -1) (undo-tree-id30223 . -1) (undo-tree-id30224 . -1) (undo-tree-id30225 . -1) (undo-tree-id30226 . -1) (undo-tree-id30227 . -1) (undo-tree-id30228 . -1) (undo-tree-id30229 . -1) (undo-tree-id30230 . -1) (undo-tree-id30231 . -1) (undo-tree-id30232 . -1) (undo-tree-id30233 . -1) (undo-tree-id30234 . -1) (undo-tree-id30235 . -1) (undo-tree-id30236 . -1) (undo-tree-id30237 . -1) (undo-tree-id30238 . -1) (undo-tree-id30239 . -1) (undo-tree-id30240 . -1) (undo-tree-id30241 . -1) (undo-tree-id30242 . -1) (undo-tree-id30243 . -1) (undo-tree-id30244 . -1) (undo-tree-id30245 . -1) (undo-tree-id30246 . -1) (undo-tree-id30247 . -1) (undo-tree-id30248 . -1) (undo-tree-id30249 . -1) (undo-tree-id30250 . -1) (undo-tree-id30251 . -1) (undo-tree-id30252 . -1) (undo-tree-id30253 . -1) (undo-tree-id30254 . -1) (undo-tree-id30255 . -1) (undo-tree-id30256 . -1) (undo-tree-id30257 . -1) (undo-tree-id30258 . -1) (undo-tree-id30259 . -1) (undo-tree-id30260 . -1) (undo-tree-id30261 . -1) (undo-tree-id30262 . -1) (undo-tree-id30263 . -1) (undo-tree-id30264 . -1) (undo-tree-id30265 . -1) (undo-tree-id30266 . -1) (undo-tree-id30267 . -1) (undo-tree-id30268 . -1) (undo-tree-id30269 . -1) (undo-tree-id30270 . -1) (undo-tree-id30271 . -1) (undo-tree-id30272 . -1) (undo-tree-id30273 . -1) (undo-tree-id30274 . -1) (undo-tree-id30275 . -1) (undo-tree-id30276 . -1) (undo-tree-id30277 . -1) (undo-tree-id30278 . -1) (undo-tree-id30279 . -1) (#("s" 0 1 (fontified t)) . -4454) (undo-tree-id30280 . -1) (undo-tree-id30281 . -1) (undo-tree-id30282 . -1) (undo-tree-id30283 . -1) (undo-tree-id30284 . -1) (undo-tree-id30285 . -1) (undo-tree-id30286 . -1) (undo-tree-id30287 . -1) (undo-tree-id30288 . -1) (undo-tree-id30289 . -1) (undo-tree-id30290 . -1) (undo-tree-id30291 . -1) (undo-tree-id30292 . -1) (undo-tree-id30293 . -1) (undo-tree-id30294 . -1) (undo-tree-id30295 . -1) (undo-tree-id30296 . -1) (undo-tree-id30297 . -1) (undo-tree-id30298 . -1) (undo-tree-id30299 . -1) (undo-tree-id30300 . -1) (undo-tree-id30301 . -1) (undo-tree-id30302 . -1) (undo-tree-id30303 . -1) (undo-tree-id30304 . -1) (undo-tree-id30305 . -1) (undo-tree-id30306 . -1) (undo-tree-id30307 . -1) (undo-tree-id30308 . -1) (undo-tree-id30309 . -1) (undo-tree-id30310 . -1) (undo-tree-id30311 . -1) (undo-tree-id30312 . -1) (undo-tree-id30313 . -1) (undo-tree-id30314 . -1) (undo-tree-id30315 . -1) (undo-tree-id30316 . -1) (undo-tree-id30317 . -1) (undo-tree-id30318 . -1) (undo-tree-id30319 . -1) (undo-tree-id30320 . -1) (undo-tree-id30321 . -1) (undo-tree-id30322 . -1) (undo-tree-id30323 . -1) (undo-tree-id30324 . -1) (undo-tree-id30325 . -1) (undo-tree-id30326 . -1) (undo-tree-id30327 . -1) (undo-tree-id30328 . -1) (undo-tree-id30329 . -1) (undo-tree-id30330 . -1) (undo-tree-id30331 . -1) (undo-tree-id30332 . -1) (undo-tree-id30333 . -1) (undo-tree-id30334 . -1) (undo-tree-id30335 . -1) (undo-tree-id30336 . -1) (undo-tree-id30337 . -1) (undo-tree-id30338 . -1) (undo-tree-id30339 . -1) (undo-tree-id30340 . -1) (undo-tree-id30341 . -1) (undo-tree-id30342 . -1) (undo-tree-id30343 . -1) (undo-tree-id30344 . -1) (undo-tree-id30345 . -1) (undo-tree-id30346 . -1) (undo-tree-id30347 . -1) (undo-tree-id30348 . -1) (undo-tree-id30349 . -1) (undo-tree-id30350 . -1) (undo-tree-id30351 . -1) (undo-tree-id30352 . -1) (undo-tree-id30353 . -1) (undo-tree-id30354 . -1) (undo-tree-id30355 . -1) (undo-tree-id30356 . -1) (undo-tree-id30357 . -1) (undo-tree-id30358 . -1) (undo-tree-id30359 . -1) (undo-tree-id30360 . -1) (undo-tree-id30361 . -1) (undo-tree-id30362 . -1) (undo-tree-id30363 . -1) (undo-tree-id30364 . -1) (undo-tree-id30365 . -1) (undo-tree-id30366 . -1) (undo-tree-id30367 . -1) (undo-tree-id30368 . -1) (undo-tree-id30369 . -1) (undo-tree-id30370 . -1) (undo-tree-id30371 . -1) (undo-tree-id30372 . -1) (undo-tree-id30373 . -1) (undo-tree-id30374 . -1) (undo-tree-id30375 . -1) (#("." 0 1 (fontified t)) . -4455) (undo-tree-id30376 . -1) (undo-tree-id30377 . -1) (undo-tree-id30378 . -1) (undo-tree-id30379 . -1) (undo-tree-id30380 . -1) (undo-tree-id30381 . -1) (undo-tree-id30382 . -1) (undo-tree-id30383 . -1) (undo-tree-id30384 . -1) (undo-tree-id30385 . -1) (undo-tree-id30386 . -1) (undo-tree-id30387 . -1) (undo-tree-id30388 . -1) (undo-tree-id30389 . -1) (undo-tree-id30390 . -1) (undo-tree-id30391 . -1) (undo-tree-id30392 . -1) (undo-tree-id30393 . -1) (undo-tree-id30394 . -1) (undo-tree-id30395 . -1) (undo-tree-id30396 . -1) (undo-tree-id30397 . -1) (undo-tree-id30398 . -1) (undo-tree-id30399 . -1) (undo-tree-id30400 . -1) (undo-tree-id30401 . -1) (undo-tree-id30402 . -1) (undo-tree-id30403 . -1) (undo-tree-id30404 . -1) (undo-tree-id30405 . -1) (undo-tree-id30406 . -1) (undo-tree-id30407 . -1) (undo-tree-id30408 . -1) (undo-tree-id30409 . -1) (undo-tree-id30410 . -1) (undo-tree-id30411 . -1) (undo-tree-id30412 . -1) (undo-tree-id30413 . -1) (undo-tree-id30414 . -1) (undo-tree-id30415 . -1) (undo-tree-id30416 . -1) (undo-tree-id30417 . -1) (undo-tree-id30418 . -1) (undo-tree-id30419 . -1) (undo-tree-id30420 . -1) (undo-tree-id30421 . -1) (undo-tree-id30422 . -1) (undo-tree-id30423 . -1) (undo-tree-id30424 . -1) (undo-tree-id30425 . -1) (undo-tree-id30426 . -1) (undo-tree-id30427 . -1) (undo-tree-id30428 . -1) (undo-tree-id30429 . -1) (undo-tree-id30430 . -1) (undo-tree-id30431 . -1) (undo-tree-id30432 . -1) (undo-tree-id30433 . -1) (undo-tree-id30434 . -1) (undo-tree-id30435 . -1) (undo-tree-id30436 . -1) (undo-tree-id30437 . -1) (undo-tree-id30438 . -1) (undo-tree-id30439 . -1) (undo-tree-id30440 . -1) (undo-tree-id30441 . -1) (undo-tree-id30442 . -1) (undo-tree-id30443 . -1) (undo-tree-id30444 . -1) (undo-tree-id30445 . -1) (undo-tree-id30446 . -1) (undo-tree-id30447 . -1) (undo-tree-id30448 . -1) (#("i" 0 1 (fontified t)) . -4456) (undo-tree-id30449 . -1) (undo-tree-id30450 . -1) (undo-tree-id30451 . -1) (undo-tree-id30452 . -1) (undo-tree-id30453 . -1) (undo-tree-id30454 . -1) (undo-tree-id30455 . -1) (undo-tree-id30456 . -1) (undo-tree-id30457 . -1) (undo-tree-id30458 . -1) (undo-tree-id30459 . -1) (undo-tree-id30460 . -1) (undo-tree-id30461 . -1) (undo-tree-id30462 . -1) (undo-tree-id30463 . -1) (undo-tree-id30464 . -1) (undo-tree-id30465 . -1) (undo-tree-id30466 . -1) (undo-tree-id30467 . -1) (undo-tree-id30468 . -1) (undo-tree-id30469 . -1) (undo-tree-id30470 . -1) (undo-tree-id30471 . -1) (undo-tree-id30472 . -1) (undo-tree-id30473 . -1) (undo-tree-id30474 . -1) (undo-tree-id30475 . -1) (undo-tree-id30476 . -1) (undo-tree-id30477 . -1) (undo-tree-id30478 . -1) (undo-tree-id30479 . -1) (undo-tree-id30480 . -1) (undo-tree-id30481 . -1) (undo-tree-id30482 . -1) (undo-tree-id30483 . -1) (undo-tree-id30484 . -1) (undo-tree-id30485 . -1) (undo-tree-id30486 . -1) (undo-tree-id30487 . -1) (#("t" 0 1 (fontified t)) . -4457) (undo-tree-id30488 . -1) (undo-tree-id30489 . -1) (undo-tree-id30490 . -1) (undo-tree-id30491 . -1) (undo-tree-id30492 . -1) (undo-tree-id30493 . -1) (undo-tree-id30494 . -1) (undo-tree-id30495 . -1) (undo-tree-id30496 . -1) (undo-tree-id30497 . -1) (undo-tree-id30498 . -1) (undo-tree-id30499 . -1) (undo-tree-id30500 . -1) (undo-tree-id30501 . -1) (undo-tree-id30502 . -1) (undo-tree-id30503 . -1) (undo-tree-id30504 . -1) (undo-tree-id30505 . -1) (undo-tree-id30506 . -1) (undo-tree-id30507 . -1) (undo-tree-id30508 . -1) 4458) nil (25944 54494 474752 0) 0 nil])
([nil nil ((4451 . 4452)) nil (25944 54496 583791 0) 0 nil])
([nil nil ((4451 . 4464)) nil (25944 54574 444212 0) 0 nil] [nil nil ((4451 . 4453)) ((#("sk" 0 1 (fontified t) 1 2 (fontified t)) . 4451) (undo-tree-id30591 . -2) (undo-tree-id30592 . -2) (undo-tree-id30593 . -1) (undo-tree-id30594 . -1) (undo-tree-id30595 . -1) (undo-tree-id30596 . -1) (undo-tree-id30597 . -1) (undo-tree-id30598 . -1) (undo-tree-id30599 . -1) (undo-tree-id30600 . -1) (undo-tree-id30601 . -1) (undo-tree-id30602 . -1) (undo-tree-id30603 . -1) (undo-tree-id30604 . -1) (undo-tree-id30605 . -1) (undo-tree-id30606 . -2) (undo-tree-id30607 . -2) (undo-tree-id30608 . -2) (undo-tree-id30609 . -2) (undo-tree-id30610 . -2) (undo-tree-id30611 . -2) (undo-tree-id30612 . -2) (undo-tree-id30613 . -2) (undo-tree-id30614 . -2) (undo-tree-id30615 . -2) (undo-tree-id30616 . -2) (undo-tree-id30617 . -2) (undo-tree-id30618 . -2) (undo-tree-id30619 . -1) (undo-tree-id30620 . -1) (undo-tree-id30621 . -1) (undo-tree-id30622 . -1) (undo-tree-id30623 . -1) (undo-tree-id30624 . -1) (undo-tree-id30625 . -1) (undo-tree-id30626 . -1) (undo-tree-id30627 . -1) (undo-tree-id30628 . -1) (undo-tree-id30629 . -1) (undo-tree-id30630 . -2) (undo-tree-id30631 . -2) (undo-tree-id30632 . -2) (undo-tree-id30633 . -2) (undo-tree-id30634 . -2) (undo-tree-id30635 . -2) (undo-tree-id30636 . -2) (undo-tree-id30637 . -2) (undo-tree-id30638 . -2) (undo-tree-id30639 . -2) (undo-tree-id30640 . -2)) (25944 54496 345060 0) 0 nil])
([nil nil ((4464 . 4474)) nil (25944 54574 444211 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -4451) (undo-tree-id29712 . -1) (undo-tree-id29713 . -1) (undo-tree-id29714 . -1) (undo-tree-id29715 . -1) (undo-tree-id29716 . -1) (undo-tree-id29717 . -1) (undo-tree-id29718 . -1) (undo-tree-id29719 . -1) (undo-tree-id29720 . -1) (undo-tree-id29721 . -1) (undo-tree-id29722 . -1) (undo-tree-id29723 . -1) (undo-tree-id29724 . -1) (undo-tree-id29725 . -1) (undo-tree-id29726 . -1) (undo-tree-id29727 . -1) (undo-tree-id29728 . -1) (undo-tree-id29729 . -1) (undo-tree-id29730 . -1) (undo-tree-id29731 . -1) (undo-tree-id29732 . -1) (undo-tree-id29733 . -1) (undo-tree-id29734 . -1) (undo-tree-id29735 . -1) (undo-tree-id29736 . -1) (undo-tree-id29737 . -1) (undo-tree-id29738 . -1) (undo-tree-id29739 . -1) (undo-tree-id29740 . -1) (undo-tree-id29741 . -1) (undo-tree-id29742 . -1) (undo-tree-id29743 . -1) (undo-tree-id29744 . -1) (undo-tree-id29745 . -1) (undo-tree-id29746 . -1) (undo-tree-id29747 . -1) (undo-tree-id29748 . -1) (undo-tree-id29749 . -1) (#("k" 0 1 (fontified t)) . -4452) (undo-tree-id29750 . -1) (undo-tree-id29751 . -1) (undo-tree-id29752 . -1) (undo-tree-id29753 . -1) (undo-tree-id29754 . -1) (undo-tree-id29755 . -1) (undo-tree-id29756 . -1) (undo-tree-id29757 . -1) (undo-tree-id29758 . -1) (undo-tree-id29759 . -1) (undo-tree-id29760 . -1) (undo-tree-id29761 . -1) (undo-tree-id29762 . -1) (undo-tree-id29763 . -1) 4453) ((4451 . 4453)) (25944 54496 177143 0) 0 nil])
([nil nil ((4473 . 4475)) nil (25944 54574 444210 0) 0 nil])
([nil nil ((4451 . 4456)) ((#("keys," 0 4 (fontified t) 4 5 (fontified t)) . 4451) (undo-tree-id30534 . -5) (undo-tree-id30535 . -5) (undo-tree-id30536 . -5) (undo-tree-id30537 . -5) (undo-tree-id30538 . -5) (undo-tree-id30539 . -5) (undo-tree-id30540 . -5) (undo-tree-id30541 . -5) (undo-tree-id30542 . -5) (undo-tree-id30543 . -5) (undo-tree-id30544 . -5) (undo-tree-id30545 . -4) (undo-tree-id30546 . -4) (undo-tree-id30547 . -4) (undo-tree-id30548 . -4) (undo-tree-id30549 . -4) (undo-tree-id30550 . -4) (undo-tree-id30551 . -4) (undo-tree-id30552 . -4) (undo-tree-id30553 . -4) (undo-tree-id30554 . -4) (undo-tree-id30555 . -4) (undo-tree-id30556 . -4) (undo-tree-id30557 . -4) (undo-tree-id30558 . -4) (undo-tree-id30559 . -4) (undo-tree-id30560 . -4) (undo-tree-id30561 . -4) (undo-tree-id30562 . -4) (undo-tree-id30563 . -4) (undo-tree-id30564 . -4) (undo-tree-id30565 . -4) (undo-tree-id30566 . -4) (undo-tree-id30567 . -4) (undo-tree-id30568 . -4) (undo-tree-id30569 . -4) (undo-tree-id30570 . -4) (undo-tree-id30571 . -4) (undo-tree-id30572 . -4) (undo-tree-id30573 . -4) (undo-tree-id30574 . -4) (undo-tree-id30575 . -4) (undo-tree-id30576 . -4) (undo-tree-id30577 . -4) (undo-tree-id30578 . -4) (undo-tree-id30579 . -4) (undo-tree-id30580 . -5) (undo-tree-id30581 . -5) (undo-tree-id30582 . -5) (undo-tree-id30583 . -5) (undo-tree-id30584 . -5) (undo-tree-id30585 . -5) (undo-tree-id30586 . -5) (undo-tree-id30587 . -5) (undo-tree-id30588 . -5) (undo-tree-id30589 . -5) (undo-tree-id30590 . -5)) (25944 54495 982599 0) 0 nil])
([nil nil ((4474 . 4477)) nil (25944 54574 444209 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -4455) (undo-tree-id29701 . -1) (undo-tree-id29702 . -1) (undo-tree-id29703 . -1) (undo-tree-id29704 . -1) (undo-tree-id29705 . -1) (undo-tree-id29706 . -1) (undo-tree-id29707 . -1) (undo-tree-id29708 . -1) (undo-tree-id29709 . -1) (undo-tree-id29710 . -1) (undo-tree-id29711 . -1) 4456) ((4455 . 4456)) (25944 54495 695993 0) 0 nil])
([nil nil ((4478 . 4482)) nil (25944 54574 444208 0) 0 nil])
([nil nil ((4455 . 4464)) ((#(".iter_mut" 0 9 (fontified t)) . 4455) (undo-tree-id30509 . -9) (undo-tree-id30510 . -9) (undo-tree-id30511 . -9) (undo-tree-id30512 . -9) (undo-tree-id30513 . -9) (undo-tree-id30514 . -9) (undo-tree-id30515 . -9) (undo-tree-id30516 . -9) (undo-tree-id30517 . -9) (undo-tree-id30518 . -9) (undo-tree-id30519 . -9) (undo-tree-id30520 . -9) (undo-tree-id30521 . -9) (undo-tree-id30522 . -9) (undo-tree-id30523 . -9) (undo-tree-id30524 . -9) (undo-tree-id30525 . -9) (undo-tree-id30526 . -9) (undo-tree-id30527 . -9) (undo-tree-id30528 . -9) (undo-tree-id30529 . -9) (undo-tree-id30530 . -9) (undo-tree-id30531 . -9) (undo-tree-id30532 . -9) (undo-tree-id30533 . -9) (t 25944 54494 539069 709000)) (25944 54494 473953 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -4479) (undo-tree-id30816 . -1) (#("e" 0 1 (fontified t)) . -4480) (undo-tree-id30817 . -1) (#("y" 0 1 (fontified t)) . -4481) (undo-tree-id30818 . -1) 4482) nil (25944 54574 444206 0) 0 nil])
nil
([nil nil ((4479 . 4489)) nil (25944 54574 444202 0) 0 nil])
([nil nil ((4489 . 4494)) nil (25944 54574 444201 0) 0 nil])
([nil nil ((4494 . 4499)) nil (25944 54574 444200 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -4495) (undo-tree-id30812 . -1) (#("a" 0 1 (fontified t)) . -4496) (undo-tree-id30813 . -1) (#("s" 0 1 (fontified t)) . -4497) (undo-tree-id30814 . -1) (#("e" 0 1 (fontified t)) . -4498) (undo-tree-id30815 . -1) 4499) nil (25944 54574 444198 0) 0 nil])
([nil nil ((4495 . 4499)) nil (25944 54574 444192 0) 0 nil])
([nil nil ((4500 . 4506)) nil (25944 54574 444191 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -4503) (undo-tree-id30702 . -1) (undo-tree-id30703 . -1) (undo-tree-id30704 . -1) (undo-tree-id30705 . -1) (undo-tree-id30706 . -1) (undo-tree-id30707 . -1) (undo-tree-id30708 . -1) (undo-tree-id30709 . -1) (undo-tree-id30710 . -1) (undo-tree-id30711 . -1) (undo-tree-id30712 . -1) (undo-tree-id30713 . -1) (undo-tree-id30714 . -1) (undo-tree-id30715 . -1) (undo-tree-id30716 . -1) (undo-tree-id30717 . -1) (undo-tree-id30718 . -1) (undo-tree-id30719 . -1) (undo-tree-id30720 . -1) (undo-tree-id30721 . -1) (undo-tree-id30722 . -1) (undo-tree-id30723 . -1) (undo-tree-id30724 . -1) (undo-tree-id30725 . -1) (undo-tree-id30726 . -1) (undo-tree-id30727 . -1) (undo-tree-id30728 . -1) (undo-tree-id30729 . -1) (undo-tree-id30730 . -1) (undo-tree-id30731 . -1) (undo-tree-id30732 . -1) (undo-tree-id30733 . -1) (undo-tree-id30734 . -1) (undo-tree-id30735 . -1) (undo-tree-id30736 . -1) (undo-tree-id30737 . -1) (undo-tree-id30738 . -1) (undo-tree-id30739 . -1) (undo-tree-id30740 . -1) (undo-tree-id30741 . -1) (undo-tree-id30742 . -1) (undo-tree-id30743 . -1) (undo-tree-id30744 . -1) (undo-tree-id30745 . -1) (undo-tree-id30746 . -1) (undo-tree-id30747 . -1) (undo-tree-id30748 . -1) (undo-tree-id30749 . -1) (undo-tree-id30750 . -1) (undo-tree-id30751 . -1) (undo-tree-id30752 . -1) (undo-tree-id30753 . -1) (undo-tree-id30754 . -1) (undo-tree-id30755 . -1) (undo-tree-id30756 . -1) (undo-tree-id30757 . -1) (undo-tree-id30758 . -1) (undo-tree-id30759 . -1) (undo-tree-id30760 . -1) (undo-tree-id30761 . -1) (#("e" 0 1 (fontified t)) . -4504) (undo-tree-id30762 . -1) (undo-tree-id30763 . -1) (undo-tree-id30764 . -1) (undo-tree-id30765 . -1) (undo-tree-id30766 . -1) (undo-tree-id30767 . -1) (undo-tree-id30768 . -1) (undo-tree-id30769 . -1) (undo-tree-id30770 . -1) (undo-tree-id30771 . -1) (undo-tree-id30772 . -1) (undo-tree-id30773 . -1) (undo-tree-id30774 . -1) (undo-tree-id30775 . -1) (undo-tree-id30776 . -1) (undo-tree-id30777 . -1) (undo-tree-id30778 . -1) (undo-tree-id30779 . -1) (undo-tree-id30780 . -1) (undo-tree-id30781 . -1) (undo-tree-id30782 . -1) (undo-tree-id30783 . -1) (undo-tree-id30784 . -1) (undo-tree-id30785 . -1) (undo-tree-id30786 . -1) (undo-tree-id30787 . -1) (undo-tree-id30788 . -1) (undo-tree-id30789 . -1) (undo-tree-id30790 . -1) (undo-tree-id30791 . -1) (undo-tree-id30792 . -1) (undo-tree-id30793 . -1) (undo-tree-id30794 . -1) (undo-tree-id30795 . -1) (undo-tree-id30796 . -1) (undo-tree-id30797 . -1) (#("s" 0 1 (fontified t)) . -4505) (undo-tree-id30798 . -1) (undo-tree-id30799 . -1) (undo-tree-id30800 . -1) (undo-tree-id30801 . -1) (undo-tree-id30802 . -1) (undo-tree-id30803 . -1) (undo-tree-id30804 . -1) (undo-tree-id30805 . -1) (undo-tree-id30806 . -1) (undo-tree-id30807 . -1) (undo-tree-id30808 . -1) (undo-tree-id30809 . -1) (undo-tree-id30810 . -1) (undo-tree-id30811 . -1) 4506) nil (25944 54574 444185 0) 0 nil])
([nil nil ((4503 . 4508)) nil (25944 54574 444071 0) 0 nil])
([nil nil ((4507 . 4512)) nil (25944 54574 444070 0) 0 nil])
([nil nil ((4513 . 4515)) nil (25944 54575 132806 0) 0 nil])
([nil nil ((#("	    on:click=move |_| {keyboard_state.update(|Keyboard{keys, ..}| keys.iter_mut.foreach(|key| key.selected = false); keys[index] = }" 0 5 (fontified t) 5 7 (face font-lock-variable-name-face fontified t) 7 47 (fontified t) 47 55 (face font-lock-type-face fontified t) 55 63 (fontified t) 63 81 (fontified t) 81 110 (fontified t) 110 115 (face font-lock-keyword-face fontified t) 115 123 (fontified t) 123 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 133 (rear-nonsticky t fontified t)) . 4384) (undo-tree-id30860 . -67) (undo-tree-id30861 . -82) (undo-tree-id30862 . -5) (undo-tree-id30863 . -67) (undo-tree-id30864 . -119) (undo-tree-id30865 . -119) (undo-tree-id30866 . -119) (undo-tree-id30867 . -119) (undo-tree-id30868 . -119) (undo-tree-id30869 . -119) (undo-tree-id30870 . -119) (undo-tree-id30871 . -119) (undo-tree-id30872 . -119) (undo-tree-id30873 . -119) (undo-tree-id30874 . -119) (undo-tree-id30875 . -119) (undo-tree-id30876 . -119) (undo-tree-id30877 . -119) (undo-tree-id30878 . -119) (undo-tree-id30879 . -119) (undo-tree-id30880 . -119) (undo-tree-id30881 . -119) (undo-tree-id30882 . -119) (undo-tree-id30883 . -119) (undo-tree-id30884 . -119) (undo-tree-id30885 . -119) (undo-tree-id30886 . -119) (undo-tree-id30887 . -119) (undo-tree-id30888 . -119) (undo-tree-id30889 . -119) (undo-tree-id30890 . -119) (undo-tree-id30891 . -119) (undo-tree-id30892 . -119) (undo-tree-id30893 . -119) (undo-tree-id30894 . -119) (undo-tree-id30895 . -119) (undo-tree-id30896 . -119) (undo-tree-id30897 . -119) (undo-tree-id30898 . -119) (undo-tree-id30899 . -119) (undo-tree-id30900 . -119) (undo-tree-id30901 . -119) (undo-tree-id30902 . -119) (undo-tree-id30903 . -119) (undo-tree-id30904 . -119) (undo-tree-id30905 . -119) (undo-tree-id30906 . -119) (undo-tree-id30907 . -119) (undo-tree-id30908 . -119) (undo-tree-id30909 . -119) (undo-tree-id30910 . -119) (undo-tree-id30911 . -119) (undo-tree-id30912 . -119) (undo-tree-id30913 . -119) (undo-tree-id30914 . -119) (undo-tree-id30915 . -119) (undo-tree-id30916 . -119) (undo-tree-id30917 . -119) (undo-tree-id30918 . -119) (undo-tree-id30919 . -119) (undo-tree-id30920 . -119) (undo-tree-id30921 . -119) (undo-tree-id30922 . -119) (undo-tree-id30923 . -130) (undo-tree-id30924 . -130) (undo-tree-id30925 . -130) (undo-tree-id30926 . -130) (undo-tree-id30927 . -130) (undo-tree-id30928 . -130) (undo-tree-id30929 . -130) (undo-tree-id30930 . -131) (undo-tree-id30931 . -131) (undo-tree-id30932 . -131) (undo-tree-id30933 . -131) (undo-tree-id30934 . -131) (undo-tree-id30935 . -131) (undo-tree-id30936 . -131) (undo-tree-id30937 . -131) (undo-tree-id30938 . -131) (undo-tree-id30939 . -131) (undo-tree-id30940 . -131) (undo-tree-id30941 . -131) (undo-tree-id30942 . -131) (undo-tree-id30943 . -130) (undo-tree-id30944 . -130) (undo-tree-id30945 . -130) (undo-tree-id30946 . -130) (undo-tree-id30947 . -130) (undo-tree-id30948 . -130) (undo-tree-id30949 . -130) (undo-tree-id30950 . -130) (undo-tree-id30951 . -130) (undo-tree-id30952 . -129) (undo-tree-id30953 . -129) (undo-tree-id30954 . -129) (undo-tree-id30955 . -129) (undo-tree-id30956 . -129) (undo-tree-id30957 . -129) (undo-tree-id30958 . -129) (undo-tree-id30959 . -129) (undo-tree-id30960 . -129) (undo-tree-id30961 . -129) (undo-tree-id30962 . -129) (undo-tree-id30963 . -129) (undo-tree-id30964 . -129) (undo-tree-id30965 . -129) (undo-tree-id30966 . -129) (undo-tree-id30967 . -129) (undo-tree-id30968 . 2) (undo-tree-id30969 . -129) (undo-tree-id30970 . -129) (undo-tree-id30971 . -129) (undo-tree-id30972 . -129) (undo-tree-id30973 . -129) (undo-tree-id30974 . -129) (undo-tree-id30975 . -129) (undo-tree-id30976 . -129) (undo-tree-id30977 . -129) (undo-tree-id30978 . -129) (undo-tree-id30979 . -129) (undo-tree-id30980 . -129) (undo-tree-id30981 . -129) (undo-tree-id30982 . -129) (undo-tree-id30983 . -129) (undo-tree-id30984 . -129) (undo-tree-id30985 . -129) (undo-tree-id30986 . -129) (undo-tree-id30987 . -129) (undo-tree-id30988 . -129) (undo-tree-id30989 . -129) (undo-tree-id30990 . -129) (undo-tree-id30991 . -129) (undo-tree-id30992 . -129) (undo-tree-id30993 . -129) (undo-tree-id30994 . -129) (undo-tree-id30995 . -129) (undo-tree-id30996 . -129) (undo-tree-id30997 . -129) (undo-tree-id30998 . -129) (undo-tree-id30999 . -129) (undo-tree-id31000 . -129) (undo-tree-id31001 . -129) (undo-tree-id31002 . -129) (undo-tree-id31003 . -129) (undo-tree-id31004 . -129) (undo-tree-id31005 . -129) (undo-tree-id31006 . -129) (undo-tree-id31007 . -129) (undo-tree-id31008 . -129) (undo-tree-id31009 . -129) (undo-tree-id31010 . -129) (undo-tree-id31011 . -131) (undo-tree-id31012 . -131) (undo-tree-id31013 . -131) (undo-tree-id31014 . -131) (undo-tree-id31015 . -131) (undo-tree-id31016 . -131) (undo-tree-id31017 . -131) (undo-tree-id31018 . -131) (undo-tree-id31019 . -131) (undo-tree-id31020 . -131) (undo-tree-id31021 . -131) (undo-tree-id31022 . -133)) nil (25944 54576 952729 0) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . -4513) (undo-tree-id30658 . -1) (undo-tree-id30659 . -1) (undo-tree-id30660 . -1) (undo-tree-id30661 . -1) (undo-tree-id30662 . -1) (undo-tree-id30663 . -1) (undo-tree-id30664 . -1) (undo-tree-id30665 . -1) (undo-tree-id30666 . -1) (undo-tree-id30667 . -1) (undo-tree-id30668 . -1) (undo-tree-id30669 . -1) (undo-tree-id30670 . -1) (undo-tree-id30671 . -1) (undo-tree-id30672 . -1) (undo-tree-id30673 . -1) (undo-tree-id30674 . -1) (undo-tree-id30675 . -1) (undo-tree-id30676 . -1) (undo-tree-id30677 . -1) (undo-tree-id30678 . -1) (undo-tree-id30679 . -1) (undo-tree-id30680 . -1) (undo-tree-id30681 . -1) (undo-tree-id30682 . -1) (undo-tree-id30683 . -1) (undo-tree-id30684 . -1) (undo-tree-id30685 . -1) (undo-tree-id30686 . -1) (undo-tree-id30687 . -1) (#("=" 0 1 (fontified t)) . -4514) (undo-tree-id30688 . -1) (undo-tree-id30689 . -1) (undo-tree-id30690 . -1) (undo-tree-id30691 . -1) (undo-tree-id30692 . -1) (undo-tree-id30693 . -1) (undo-tree-id30694 . -1) (undo-tree-id30695 . -1) (undo-tree-id30696 . -1) (undo-tree-id30697 . -1) (undo-tree-id30698 . -1) (undo-tree-id30699 . -1) (undo-tree-id30700 . -1) (undo-tree-id30701 . -1) 4515) ((4513 . 4515)) (25944 54574 944585 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4384) (undo-tree-id30858 . 1) (undo-tree-id30859 . -1)) nil (25944 54576 952555 0) 0 nil])
([nil nil ((4513 . 4514)) ((#("," 0 1 (fontified t)) . 4513) (undo-tree-id30830 . -1) (undo-tree-id30831 . -1) (undo-tree-id30832 . -1) (undo-tree-id30833 . -1) (undo-tree-id30834 . -1) (undo-tree-id30835 . -1) (undo-tree-id30836 . -1) (undo-tree-id30837 . -1) (undo-tree-id30838 . -1) (undo-tree-id30839 . -1) (undo-tree-id30840 . -1) (undo-tree-id30841 . -1) (undo-tree-id30842 . -1) (undo-tree-id30843 . -1) (undo-tree-id30844 . -1) (undo-tree-id30845 . -1) (undo-tree-id30846 . -1) (undo-tree-id30847 . -1) (undo-tree-id30848 . -1) (undo-tree-id30849 . -1) (undo-tree-id30850 . -1) (undo-tree-id30851 . -1) (undo-tree-id30852 . -1) (undo-tree-id30853 . -1) (undo-tree-id30854 . -1) (undo-tree-id30855 . -1) (undo-tree-id30856 . -1) (undo-tree-id30857 . -1)) (25944 54574 755763 0) 0 nil])
([nil nil ((4384 . 4389) (t 25944 54577 17871 777000)) nil (25944 54652 870073 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -4513) (undo-tree-id30641 . -1) (undo-tree-id30642 . -1) (undo-tree-id30643 . -1) (undo-tree-id30644 . -1) (undo-tree-id30645 . -1) (undo-tree-id30646 . -1) (undo-tree-id30647 . -1) (undo-tree-id30648 . -1) (undo-tree-id30649 . -1) (undo-tree-id30650 . -1) (undo-tree-id30651 . -1) (undo-tree-id30652 . -1) (undo-tree-id30653 . -1) (undo-tree-id30654 . -1) (undo-tree-id30655 . -1) (undo-tree-id30656 . -1) (undo-tree-id30657 . -1) 4514) ((4513 . 4514)) (25944 54574 575437 0) 0 nil])
([nil nil ((4389 . 4392)) nil (25944 54652 870071 0) 0 nil])
([nil nil ((4513 . 4520)) ((#(".select" 0 7 (fontified t)) . 4513) (undo-tree-id30820 . -7) (undo-tree-id30821 . -7) (undo-tree-id30822 . -7) (undo-tree-id30823 . -7) (undo-tree-id30824 . -7) (undo-tree-id30825 . -7) (undo-tree-id30826 . -7) (undo-tree-id30827 . -7) (undo-tree-id30828 . -7) (undo-tree-id30829 . -7)) (25944 54574 444445 0) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -4391) (undo-tree-id31069 . -1) 4392) nil (25944 54652 870070 0) 0 nil])
([nil nil ((4520 . 4525)) ((#("ed = " 0 5 (fontified t)) . 4520) (undo-tree-id30819 . -5)) (25944 54574 443986 0) 0 nil])
([nil nil ((4391 . 4399)) nil (25944 54652 870068 0) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . -4397) (undo-tree-id31067 . -1) (#("=" 0 1 (fontified t)) . -4398) (undo-tree-id31068 . -1) 4399) nil (25944 54652 870067 0) 0 nil])
([nil nil ((4397 . 4402)) nil (25944 54652 870063 0) 0 nil])
([nil nil ((4402 . 4405)) nil (25944 54652 870062 0) 0 nil])
([nil nil ((4404 . 4405)) nil (25944 54652 870061 0) 0 nil])
([nil nil ((4406 . 4409)) nil (25944 54652 870060 0) 0 nil])
([nil nil ((4408 . 4411)) nil (25944 54652 870059 0) 0 nil])
([nil nil ((4408 . 4422) (#("key" 0 3 (fontified nil)) . 4408) (4408 . 4411) (#("keyboard_state" 0 14 (fontified nil)) . -4408) (4408 . 4422) (#("key" 0 3 (fontified t)) . -4408) (undo-tree-id31066 . -3) 4411) nil (25944 54652 870057 0) 0 nil])
([nil nil ((4422 . 4425)) nil (25944 54652 870054 0) 0 nil])
([nil nil ((4425 . 4426)) nil (25944 54652 870053 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 4430 4448 nil nil nil t #s(yas--exit 4449 nil))) #s(yas--exit 4449 nil) 158 nil #s(yas--field 1 4430 4448 nil nil nil t #s(yas--exit 4449 nil)) nil nil)) (4423 . 4432) (#("update(${1:f})$0" 0 16 (fontified nil)) . 4423) (4423 . 4439) (#("upd" 0 3 (fontified nil)) . 4423) (4423 . 4426) (#("update(…) (as SignalUpdate)" 0 27 (fontified nil)) . -4423) (4423 . 4450) (#("upd" 0 3 (fontified t)) . -4423) (undo-tree-id31065 . -3) 4426) nil (25944 54652 870051 0) 0 nil])
([nil nil ((4431 . 4433) (#("f" 0 1 (fontified nil)) . 4431) (undo-tree-id31064 . -1) (4430 . 4431)) nil (25944 54652 870047 0) 0 nil])
([nil nil ((4430 . 4438) (#("Key" 0 3 (fontified nil)) . 4430) (undo-tree-id31059 . -3) (4430 . 4433) (#("Keyboard" 0 8 (fontified nil)) . -4430) (undo-tree-id31060 . -8) (4430 . 4438) (#("Key" 0 3 (face font-lock-type-face fontified t)) . -4430) (undo-tree-id31061 . -3) (undo-tree-id31062 . -3) (undo-tree-id31063 . -3) 4433) nil (25944 54652 870043 0) 0 nil])
([nil nil ((4438 . 4440)) nil (25944 54652 870036 0) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-type-face fontified t)) . -4438) (undo-tree-id31023 . -1) (undo-tree-id31024 . -1) (undo-tree-id31025 . -1) (undo-tree-id31026 . -1) (undo-tree-id31027 . -1) (undo-tree-id31028 . -1) (undo-tree-id31029 . -1) (undo-tree-id31030 . -1) (undo-tree-id31031 . -1) (undo-tree-id31032 . -1) (undo-tree-id31033 . -1) (undo-tree-id31034 . -1) (undo-tree-id31035 . -1) (undo-tree-id31036 . -1) (undo-tree-id31037 . -1) (undo-tree-id31038 . -1) (undo-tree-id31039 . -1) (undo-tree-id31040 . -1) (undo-tree-id31041 . -1) (#("{" 0 1 (fontified t)) . -4439) (undo-tree-id31042 . -1) (undo-tree-id31043 . -1) (undo-tree-id31044 . -1) (undo-tree-id31045 . -1) (undo-tree-id31046 . -1) (undo-tree-id31047 . -1) (undo-tree-id31048 . -1) (undo-tree-id31049 . -1) (undo-tree-id31050 . -1) (undo-tree-id31051 . -1) (undo-tree-id31052 . -1) (undo-tree-id31053 . -1) (undo-tree-id31054 . -1) (undo-tree-id31055 . -1) (undo-tree-id31056 . -1) (undo-tree-id31057 . -1) (undo-tree-id31058 . -1) 4440) nil (25944 54652 870032 0) 0 nil])
([nil nil ((4438 . 4440)) nil (25944 54652 869988 0) 0 nil])
([nil nil ((4439 . 4443)) nil (25944 54652 870309 0) 0 nil])
([nil nil ((4443 . 4447)) nil (25944 54751 700683 0) 0 nil] [nil nil ((4443 . 4449)) ((#("
	    " 0 6 (fontified t)) . 4443) (undo-tree-id31070 . -6) (undo-tree-id31071 . -1)) (25944 54652 869982 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4423 4449 #s(yas--snippet nil (#s(yas--field 1 4430 4448 nil nil nil t #s(yas--exit 4449 nil))) #s(yas--exit 4449 nil) 158 nil #s(yas--field 1 4430 4448 nil nil nil t #s(yas--exit 4449 nil)) nil nil))) nil (25944 54751 700682 0) 0 nil])
nil
([nil nil ((4449 . 4450)) nil (25944 54751 700681 0) 0 nil])
([nil nil ((4430 . 4431)) nil (25944 54751 700680 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -4449) (undo-tree-id31096 . -1) (undo-tree-id31097 . -1) (undo-tree-id31098 . -1) (undo-tree-id31099 . -1) (undo-tree-id31100 . -1) (undo-tree-id31101 . -1) (undo-tree-id31102 . -1) (undo-tree-id31103 . -1) (undo-tree-id31104 . -1) (undo-tree-id31105 . -1) (undo-tree-id31106 . -1) (undo-tree-id31107 . -1) (undo-tree-id31108 . -1) (undo-tree-id31109 . -1) (undo-tree-id31110 . -1) (undo-tree-id31111 . -1) (undo-tree-id31112 . -1) 4450) nil (25944 54751 700678 0) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -4450) (undo-tree-id31090 . -1) (undo-tree-id31091 . -1) (undo-tree-id31092 . -1) (undo-tree-id31093 . -1) (undo-tree-id31094 . -1) (undo-tree-id31095 . -1) 4451) nil (25944 54751 700659 0) 0 nil])
([nil nil ((4450 . 4451)) nil (25944 54751 700651 0) 0 nil])
([nil nil ((4450 . 4453)) nil (25944 54751 700650 0) 0 nil])
([nil nil ((4452 . 4458)) nil (25944 54751 700649 0) 0 nil])
([nil nil ((4454 . 4459) (#("		" 0 2 (fontified nil)) . 4453) (undo-tree-id31072 . -1) (undo-tree-id31073 . -1) (undo-tree-id31074 . -1) (undo-tree-id31075 . -1) (undo-tree-id31076 . -1) (undo-tree-id31077 . -1) (undo-tree-id31078 . -1) (undo-tree-id31079 . -1) (undo-tree-id31080 . -1) (4454 . 4455) (#("    " 0 4 (fontified nil)) . 4454) (undo-tree-id31081 . -4) (undo-tree-id31082 . -4) (undo-tree-id31083 . -4) (undo-tree-id31084 . -4) (undo-tree-id31085 . -4) (undo-tree-id31086 . -4) (undo-tree-id31087 . -4) (undo-tree-id31088 . -4) (undo-tree-id31089 . -4) (4458 . 4459)) nil (25944 54751 700647 0) 0 nil])
([nil nil ((4453 . 4455)) nil (25944 54751 700618 0) 0 nil])
([nil nil ((4455 . 4475)) nil (25944 54751 700613 0) 0 nil])
([nil nil ((3911 . 3915) (#("    " 0 4 (fontified nil)) . 3910) (undo-tree-id31218 . -4) (3909 . 3915) (t 25944 54751 767285 949000)) nil (25944 54811 706488 0) 0 nil])
([nil nil ((3915 . 3918)) nil (25944 54811 706486 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -3915) (undo-tree-id31215 . -1) (#("e" 0 1 (fontified t)) . -3916) (undo-tree-id31216 . -1) (#("y" 0 1 (fontified t)) . -3917) (undo-tree-id31217 . -1) 3918) nil (25944 54811 706484 0) 0 nil])
([nil nil ((3915 . 3923)) nil (25944 54811 706479 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -3921) (undo-tree-id31213 . -1) (#("c" 0 1 (fontified t)) . -3922) (undo-tree-id31214 . -1) 3923) nil (25944 54811 706478 0) 0 nil])
([nil nil ((3921 . 3930)) nil (25944 54811 706474 0) 0 nil])
([nil nil ((#("move |_| {keyboard_state.update(|Keyboard{keys, ..}| {
		for key in keys.iter
	    })" 0 10 (fontified t) 10 25 (fontified t) 25 33 (fontified t) 33 41 (face font-lock-type-face fontified t) 41 51 (fontified t) 51 55 (fontified t) 55 57 (fontified t) 57 60 (face font-lock-keyword-face fontified t) 60 61 (fontified t) 61 64 (face font-lock-variable-name-face fontified t) 64 65 (fontified t) 65 67 (face font-lock-keyword-face fontified t) 67 77 (fontified t) 77 78 (fontified t) 78 85 (fontified t)) . 4419) (undo-tree-id31211 . -85) (undo-tree-id31212 . -47) 4504) nil (25944 54811 706473 0) 0 nil])
([nil nil ((4419 . 4424)) nil (25944 54811 706469 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -4421) (undo-tree-id31208 . -1) (#("l" 0 1 (fontified t)) . -4422) (undo-tree-id31209 . -1) (#("i" 0 1 (fontified t)) . -4423) (undo-tree-id31210 . -1) 4424) nil (25944 54811 706468 0) 0 nil])
([nil nil ((4421 . 4422)) nil (25944 54811 706463 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -4421) (undo-tree-id31207 . -1) 4422) nil (25944 54811 706462 0) 0 nil])
([nil nil ((4421 . 4427)) nil (25944 54811 706460 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -4425) (undo-tree-id31197 . -1) (undo-tree-id31198 . -1) (undo-tree-id31199 . -1) (undo-tree-id31200 . -1) (undo-tree-id31201 . -1) (undo-tree-id31202 . -1) (#("k" 0 1 (fontified t)) . -4426) (undo-tree-id31203 . -1) (undo-tree-id31204 . -1) (undo-tree-id31205 . -1) (undo-tree-id31206 . -1) 4427) nil (25944 54811 706458 0) 0 nil])
([nil nil ((4425 . 4427)) nil (25944 54811 706446 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3983 . 3984) (nil fontified nil 3930 . 3984) (3930 . 3984)) nil (25944 54811 706445 0) 0 nil])
([nil nil ((3984 . 3985)) nil (25944 54811 706444 0) 0 nil])
([nil nil ((#("{" 0 1 (rear-nonsticky t fontified t)) . -3983) (undo-tree-id31155 . -1) (undo-tree-id31156 . -1) (undo-tree-id31157 . -1) (undo-tree-id31158 . -1) (undo-tree-id31159 . -1) (undo-tree-id31160 . -1) (undo-tree-id31161 . -1) (undo-tree-id31162 . -1) (undo-tree-id31163 . -1) (undo-tree-id31164 . -1) (undo-tree-id31165 . -1) (undo-tree-id31166 . -1) (undo-tree-id31167 . -1) (undo-tree-id31168 . -1) (undo-tree-id31169 . -1) (undo-tree-id31170 . -1) (undo-tree-id31171 . -1) (undo-tree-id31172 . -1) (undo-tree-id31173 . -1) (undo-tree-id31174 . -1) (undo-tree-id31175 . -1) (undo-tree-id31176 . -1) (undo-tree-id31177 . -1) (undo-tree-id31178 . -1) (undo-tree-id31179 . -1) (undo-tree-id31180 . -1) (undo-tree-id31181 . -1) (undo-tree-id31182 . -1) (undo-tree-id31183 . -1) (undo-tree-id31184 . -1) (undo-tree-id31185 . -1) (undo-tree-id31186 . -1) (#("}" 0 1 (fontified t)) . -3984) (undo-tree-id31187 . -1) (undo-tree-id31188 . -1) (undo-tree-id31189 . -1) (undo-tree-id31190 . -1) (undo-tree-id31191 . -1) (undo-tree-id31192 . -1) (undo-tree-id31193 . -1) (undo-tree-id31194 . -1) (undo-tree-id31195 . -1) (undo-tree-id31196 . -1) 3985) nil (25944 54811 706441 0) 0 nil])
([nil nil ((3983 . 3984)) nil (25944 54811 706392 0) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -3983) (undo-tree-id31142 . -1) (undo-tree-id31143 . -1) (undo-tree-id31144 . -1) (undo-tree-id31145 . -1) (undo-tree-id31146 . -1) (undo-tree-id31147 . -1) (undo-tree-id31148 . -1) (undo-tree-id31149 . -1) (undo-tree-id31150 . -1) (undo-tree-id31151 . -1) (undo-tree-id31152 . -1) (undo-tree-id31153 . -1) (undo-tree-id31154 . -1) 3984) nil (25944 54811 706390 0) 0 nil])
([nil nil ((3983 . 3984)) nil (25944 54811 706372 0) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -3983) (undo-tree-id31129 . -1) (undo-tree-id31130 . -1) (undo-tree-id31131 . -1) (undo-tree-id31132 . -1) (undo-tree-id31133 . -1) (undo-tree-id31134 . -1) (undo-tree-id31135 . -1) (undo-tree-id31136 . -1) (undo-tree-id31137 . -1) (undo-tree-id31138 . -1) (undo-tree-id31139 . -1) (undo-tree-id31140 . -1) (undo-tree-id31141 . -1) 3984) nil (25944 54811 706370 0) 0 nil])
([nil nil ((3983 . 3984)) nil (25944 54811 706355 0) 0 nil])
([nil nil ((3940 . 3942)) nil (25944 54811 706354 0) 0 nil])
([nil nil ((3986 . 3988)) nil (25944 54811 706353 0) 0 nil])
([nil nil ((3986 . 3991)) nil (25944 54811 706352 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -3917) (undo-tree-id31113 . -1) (undo-tree-id31114 . -1) (undo-tree-id31115 . -1) (undo-tree-id31116 . -1) (undo-tree-id31117 . -1) (undo-tree-id31118 . -1) (undo-tree-id31119 . -1) (undo-tree-id31120 . -1) (undo-tree-id31121 . -1) (undo-tree-id31122 . -1) (undo-tree-id31123 . -1) (undo-tree-id31124 . -1) (undo-tree-id31125 . -1) (undo-tree-id31126 . -1) (undo-tree-id31127 . -1) (undo-tree-id31128 . -1) 3918) nil (25944 54811 706349 0) 0 nil])
([nil nil ((3917 . 3918)) nil (25944 54811 706321 0) 0 nil])
([nil nil ((3985 . 3987) (t 25944 54811 773788 672000)) nil (25944 54818 888631 0) 0 nil])
([nil nil ((3988 . 3989) (#("	    " 0 5 (fontified nil)) . 3987) (undo-tree-id31219 . -1) (undo-tree-id31220 . -1) (undo-tree-id31221 . -1) (3988 . 3992) (3986 . 3989)) nil (25944 54818 888629 0) 0 nil])
([nil nil ((3987 . 3992)) nil (25944 54818 888617 0) 0 nil])
([nil nil ((3996 . 3997)) nil (25944 54818 888613 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3991) (undo-tree-id31278 . -1) (undo-tree-id31279 . -1) 3992 (t 25944 54818 955395 640000)) nil (25944 54886 176251 0) 0 nil])
([nil nil ((3991 . 4009)) nil (25944 54886 176248 0) 0 nil])
([nil nil ((4009 . 4011)) nil (25944 54886 176247 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4007 4017 #s(yas--snippet nil nil #s(yas--exit 4017 nil) 159 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 4017 nil) 159 nil nil nil nil)) (4007 . 4017) (#("iter_mut()$0" 0 12 (fontified nil)) . 4007) (4007 . 4019) (#("iter" 0 4 (fontified nil)) . 4007) (4007 . 4011) (#("iter_mut()" 0 10 (fontified nil)) . -4007) (4007 . 4017) (#("iter" 0 4 (fontified t)) . -4007) (undo-tree-id31276 . -1) (undo-tree-id31277 . -4) 4011) nil (25944 54886 176245 0) 0 nil])
([nil nil ((3991 . 3992) (4017 . 4020)) nil (25944 54886 176239 0) 0 nil])
([nil nil ((4022 . 4027) (#("		" 0 2 (fontified nil)) . 4021) (undo-tree-id31274 . -1) (4022 . 4023) (#("    " 0 4 (fontified nil)) . 4022) (undo-tree-id31275 . -4) (4020 . 4027)) nil (25944 54886 176238 0) 0 nil])
([nil nil ((4021 . 4023)) nil (25944 54886 176234 0) 0 nil])
([nil nil ((4023 . 4026)) nil (25944 54886 176233 0) 0 nil])
([nil nil ((4018 . 4020)) nil (25944 54886 176232 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4019 4030 #s(yas--snippet nil nil #s(yas--exit 4030 nil) 160 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 4030 nil) 160 nil nil nil nil)) (4019 . 4030) (#("enumerate()$0" 0 13 (fontified nil)) . 4019) (4019 . 4032) (#("e" 0 1 (fontified nil)) . 4019) (4019 . 4020) (#("enumerate() (as Iterator)" 0 25 (fontified nil)) . -4019) (4019 . 4044) (#("e" 0 1 (fontified t)) . -4019) (undo-tree-id31273 . -1) 4020) nil (25944 54886 176230 0) 0 nil])
([nil nil ((3996 . 4000)) nil (25944 54886 176225 0) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-variable-name-face fontified t)) . -3999) (undo-tree-id31272 . -1) 4000) nil (25944 54886 176224 0) 0 nil])
([nil nil ((3999 . 4001)) nil (25944 54886 176222 0) 0 nil])
([nil nil ((3996 . 3997)) nil (25944 54886 176221 0) 0 nil])
([nil nil ((4005 . 4006)) nil (25944 54886 176220 0) 0 nil])
([nil nil ((4045 . 4055)) nil (25944 54886 176219 0) 0 nil])
([nil nil ((4051 . 4056) (#("inde" 0 4 (fontified nil)) . 4051) (4051 . 4055) (#("index" 0 5 (fontified nil)) . -4051) (4051 . 4056) (#("inde" 0 4 (fontified t)) . -4051) (undo-tree-id31271 . -4) 4055) nil (25944 54886 176217 0) 0 nil])
([nil nil ((4056 . 4059)) nil (25944 54886 176214 0) 0 nil])
([nil nil ((4060 . 4062) (#("		    " 0 6 (fontified nil)) . 4059) (undo-tree-id31270 . -2) (4061 . 4065) (4058 . 4062)) nil (25944 54886 176213 0) 0 nil])
([nil nil ((4059 . 4065)) nil (25944 54886 176210 0) 0 nil])
([nil nil ((4065 . 4070)) nil (25944 54886 176209 0) 0 nil])
([nil nil ((4069 . 4077) (#("s" 0 1 (fontified nil)) . 4069) (4069 . 4070) (#("selected" 0 8 (fontified nil)) . -4069) (4069 . 4077) (#("s" 0 1 (fontified t)) . -4069) (undo-tree-id31269 . -1) 4070) nil (25944 54886 176207 0) 0 nil])
([nil nil ((4077 . 4081)) nil (25944 54886 176204 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -4080) (undo-tree-id31268 . -1) 4081) nil (25944 54886 176203 0) 0 nil])
([nil nil ((4080 . 4085)) nil (25944 54886 176200 0) 0 nil])
([nil nil ((4084 . 4092) (#("s" 0 1 (fontified nil)) . 4084) (4084 . 4085) (#("selected" 0 8 (fontified nil)) . -4084) (4084 . 4092) (#("s" 0 1 (fontified t)) . -4084) (undo-tree-id31267 . -1) 4085) nil (25944 54886 176199 0) 0 nil])
([nil nil ((4092 . 4095)) nil (25944 54886 176195 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4093 4098 #s(yas--snippet nil nil #s(yas--exit 4098 nil) 161 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 4098 nil) 161 nil nil nil nil)) (4093 . 4098) (#("not()$0" 0 7 (fontified nil)) . 4093) (4093 . 4100) (#("no" 0 2 (fontified nil)) . 4093) (4093 . 4095) (#("not() (as Not)" 0 14 (fontified nil)) . -4093) (4093 . 4107) (#("no" 0 2 (fontified t)) . -4093) (undo-tree-id31266 . -2) 4095) nil (25944 54886 176194 0) 0 nil])
([nil nil ((4098 . 4099)) nil (25944 54886 176189 0) 0 nil])
([nil nil ((4103 . 4111)) nil (25944 54886 176188 0) 0 nil])
([nil nil ((4112 . 4114) (#("		    " 0 6 (fontified nil)) . 4111) (undo-tree-id31263 . -2) (undo-tree-id31264 . -2) (undo-tree-id31265 . -2) (4113 . 4117) (4110 . 4114)) nil (25944 54886 176187 0) 0 nil])
([nil nil ((4111 . 4117)) nil (25944 54886 176182 0) 0 nil])
([nil nil ((4117 . 4121)) nil (25944 54886 176181 0) 0 nil])
([nil nil ((4121 . 4123)) nil (25944 54886 176180 0) 0 nil])
([nil nil ((4121 . 4129) (#("se" 0 2 (fontified nil)) . 4121) (4121 . 4123) (#("selected" 0 8 (fontified nil)) . -4121) (4121 . 4129) (#("se" 0 2 (fontified t)) . -4121) (undo-tree-id31258 . -2) (undo-tree-id31259 . -1) (undo-tree-id31260 . -1) (undo-tree-id31261 . -2) (undo-tree-id31262 . -2) 4123) nil (25944 54886 176178 0) 0 nil])
([nil nil ((4129 . 4136)) nil (25944 54886 176170 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -4134) (undo-tree-id31249 . -1) (undo-tree-id31250 . -1) (undo-tree-id31251 . -1) (undo-tree-id31252 . -1) (undo-tree-id31253 . -1) (undo-tree-id31254 . -1) (#(";" 0 1 (fontified t)) . -4135) (undo-tree-id31255 . -1) (undo-tree-id31256 . -1) (undo-tree-id31257 . -1) 4136) nil (25944 54886 176168 0) 0 nil])
([nil nil ((4134 . 4135)) nil (25944 54886 176158 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -4134) (undo-tree-id31245 . -1) (undo-tree-id31246 . -1) (undo-tree-id31247 . -1) (undo-tree-id31248 . -1) 4135) nil (25944 54886 176157 0) 0 nil])
([nil nil ((4134 . 4135)) nil (25944 54886 176151 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4132 4137 #s(yas--snippet nil nil nil 162 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 162 nil nil nil nil)) (4132 . 4137) (#("false" 0 5 (fontified nil)) . 4132) (4132 . 4137) (#("fal" 0 3 (fontified nil)) . 4132) (4132 . 4135) (#("false" 0 5 (fontified nil)) . -4132) (4132 . 4137) (#("fal" 0 3 (fontified t)) . -4132) (undo-tree-id31222 . -3) (undo-tree-id31223 . -1) (undo-tree-id31224 . -1) (undo-tree-id31225 . -1) (undo-tree-id31226 . -2) (undo-tree-id31227 . -2) (undo-tree-id31228 . -2) (undo-tree-id31229 . -2) (undo-tree-id31230 . -2) (undo-tree-id31231 . -2) (undo-tree-id31232 . -2) (undo-tree-id31233 . -2) (undo-tree-id31234 . -2) (undo-tree-id31235 . -2) (undo-tree-id31236 . -2) (undo-tree-id31237 . -2) (undo-tree-id31238 . -2) (undo-tree-id31239 . -2) (undo-tree-id31240 . -2) (undo-tree-id31241 . -3) (undo-tree-id31242 . -3) (undo-tree-id31243 . -3) (undo-tree-id31244 . -3) 4135) nil (25944 54886 176148 0) 0 nil])
([nil nil ((4137 . 4138)) nil (25944 54886 176111 0) 0 nil])
([nil nil ((4050 . 4051) (t 25944 54886 242936 433000)) nil (25944 54889 420658 0) 0 nil])
([nil nil ((3910 . 3914) (t 25944 54889 488200 108000)) nil (25944 55140 431800 0) 0 nil])
([nil nil ((3914 . 3922)) nil (25944 55140 431798 0) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -3920) (undo-tree-id31288 . -1) (#("c" 0 1 (face font-lock-variable-name-face fontified t)) . -3921) (undo-tree-id31289 . -1) 3922) nil (25944 55140 431797 0) 0 nil])
([nil nil ((3920 . 3932)) nil (25944 55140 431793 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3929 3943 #s(yas--snippet nil nil #s(yas--exit 3943 nil) 163 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3943 nil) 163 nil nil nil nil)) (3929 . 3943) (#("use_location()$0" 0 16 (fontified nil)) . 3929) (3929 . 3945) (#("use" 0 3 (fontified nil)) . 3929) (3929 . 3932) (#("use_location()" 0 14 (fontified nil)) . -3929) (3929 . 3943) (#("use" 0 3 (face font-lock-keyword-face fontified t)) . -3929) (undo-tree-id31280 . -3) (undo-tree-id31281 . -1) (undo-tree-id31282 . -2) (undo-tree-id31283 . -2) (undo-tree-id31284 . -3) (undo-tree-id31285 . -3) (undo-tree-id31286 . -3) (undo-tree-id31287 . -3) 3932) nil (25944 55140 431791 0) 0 nil])
([nil nil ((3943 . 3944)) nil (25944 55140 431767 0) 0 nil])
([nil nil ((3944 . 3952) (#("pathname" 0 8 (fontified nil)) . -3944) (3944 . 3952)) nil (25944 55140 431765 0) 0 nil])
([nil nil ((3952 . 3953)) nil (25944 55140 431760 0) 0 nil])
([nil nil ((4200 . 4201) (#("	" 0 1 (fontified nil)) . 4199) (undo-tree-id31523 . -1) (undo-tree-id31524 . -1) (undo-tree-id31525 . -1) (4198 . 4201) (t 25944 55140 497617 188000)) nil (25944 55235 80705 0) 0 nil])
([nil nil ((4201 . 4205)) nil (25944 55235 80700 0) 0 nil])
([nil nil ((4204 . 4212) (#("l" 0 1 (fontified nil)) . 4204) (4204 . 4205) (#("location" 0 8 (fontified nil)) . -4204) (4204 . 4212) (#("l" 0 1 (fontified t)) . -4204) (undo-tree-id31519 . -1) (undo-tree-id31520 . -1) (undo-tree-id31521 . -1) (undo-tree-id31522 . -1) 4205) nil (25944 55235 80699 0) 0 nil])
([nil nil ((4212 . 4215)) nil (25944 55235 80692 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4213) (undo-tree-id31494 . -1) (undo-tree-id31495 . -1) (undo-tree-id31496 . -1) (undo-tree-id31497 . -1) (undo-tree-id31498 . -1) (undo-tree-id31499 . -1) (undo-tree-id31500 . -1) (undo-tree-id31501 . -1) (undo-tree-id31502 . -1) (undo-tree-id31503 . -1) (undo-tree-id31504 . -1) (undo-tree-id31505 . -1) (undo-tree-id31506 . -1) (undo-tree-id31507 . -1) (undo-tree-id31508 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -4214) (undo-tree-id31509 . -1) (undo-tree-id31510 . -1) (undo-tree-id31511 . -1) (undo-tree-id31512 . -1) (undo-tree-id31513 . -1) (undo-tree-id31514 . -1) (undo-tree-id31515 . -1) (undo-tree-id31516 . -1) (undo-tree-id31517 . -1) (undo-tree-id31518 . -1) 4215) nil (25944 55235 80690 0) 0 nil])
([nil nil ((4213 . 4215)) nil (25944 55235 80664 0) 0 nil])
([nil nil ((4215 . 4216)) nil (25944 55235 80663 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -4214) (undo-tree-id31478 . -1) (undo-tree-id31479 . -1) (undo-tree-id31480 . -1) (undo-tree-id31481 . -1) (undo-tree-id31482 . -1) (undo-tree-id31483 . -1) (undo-tree-id31484 . -1) (undo-tree-id31485 . -1) (undo-tree-id31486 . -1) (undo-tree-id31487 . -1) (undo-tree-id31488 . -1) (#("s" 0 1 (fontified t)) . -4215) (undo-tree-id31489 . -1) (undo-tree-id31490 . -1) (undo-tree-id31491 . -1) (undo-tree-id31492 . -1) (undo-tree-id31493 . -1) 4216) nil (25944 55235 80661 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -4213) (undo-tree-id31461 . -1) (undo-tree-id31462 . -1) (undo-tree-id31463 . -1) (undo-tree-id31464 . -1) (undo-tree-id31465 . -1) (undo-tree-id31466 . -1) (undo-tree-id31467 . -1) (undo-tree-id31468 . -1) (undo-tree-id31469 . -1) (undo-tree-id31470 . -1) (undo-tree-id31471 . -1) (undo-tree-id31472 . -1) (undo-tree-id31473 . -1) (undo-tree-id31474 . -1) (undo-tree-id31475 . -1) (undo-tree-id31476 . -1) (undo-tree-id31477 . -1) 4214) nil (25944 55235 80643 0) 0 nil])
([nil nil ((4213 . 4216)) nil (25944 55235 80626 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4213) (undo-tree-id31442 . -1) (undo-tree-id31443 . -1) (undo-tree-id31444 . -1) (undo-tree-id31445 . -1) (undo-tree-id31446 . -1) (undo-tree-id31447 . -1) (undo-tree-id31448 . -1) (undo-tree-id31449 . -1) (undo-tree-id31450 . -1) (undo-tree-id31451 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -4214) (undo-tree-id31452 . -1) (undo-tree-id31453 . -1) (undo-tree-id31454 . -1) (undo-tree-id31455 . -1) (undo-tree-id31456 . -1) (undo-tree-id31457 . -1) (undo-tree-id31458 . -1) (#("s" 0 1 (fontified t)) . -4215) (undo-tree-id31459 . -1) (undo-tree-id31460 . -1) 4216) nil (25944 55235 80624 0) 0 nil])
([nil nil ((4213 . 4214)) nil (25944 55235 80603 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -4213) (undo-tree-id31440 . -1) (undo-tree-id31441 . -1) 4214) nil (25944 55235 80602 0) 0 nil])
([nil nil ((4213 . 4215)) nil (25944 55235 80599 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -4212) (undo-tree-id31356 . -1) (undo-tree-id31357 . -1) (undo-tree-id31358 . -1) (undo-tree-id31359 . -1) (undo-tree-id31360 . -1) (undo-tree-id31361 . -1) (undo-tree-id31362 . -1) (undo-tree-id31363 . -1) (undo-tree-id31364 . -1) (undo-tree-id31365 . -1) (undo-tree-id31366 . -1) (undo-tree-id31367 . -1) (undo-tree-id31368 . -1) (undo-tree-id31369 . -1) (undo-tree-id31370 . -1) (undo-tree-id31371 . -1) (undo-tree-id31372 . -1) (undo-tree-id31373 . -1) (undo-tree-id31374 . -1) (undo-tree-id31375 . -1) (undo-tree-id31376 . -1) (undo-tree-id31377 . -1) (undo-tree-id31378 . -1) (undo-tree-id31379 . -1) (undo-tree-id31380 . -1) (undo-tree-id31381 . -1) (undo-tree-id31382 . -1) (undo-tree-id31383 . -1) (undo-tree-id31384 . -1) (undo-tree-id31385 . -1) (undo-tree-id31386 . -1) (undo-tree-id31387 . -1) (undo-tree-id31388 . -1) (undo-tree-id31389 . -1) (undo-tree-id31390 . -1) (undo-tree-id31391 . -1) (undo-tree-id31392 . -1) (undo-tree-id31393 . -1) (undo-tree-id31394 . -1) (undo-tree-id31395 . -1) (undo-tree-id31396 . -1) (undo-tree-id31397 . -1) (undo-tree-id31398 . -1) (undo-tree-id31399 . -1) (undo-tree-id31400 . -1) (undo-tree-id31401 . -1) (undo-tree-id31402 . -1) (undo-tree-id31403 . -1) (undo-tree-id31404 . -1) (undo-tree-id31405 . -1) (undo-tree-id31406 . -1) (undo-tree-id31407 . -1) (undo-tree-id31408 . -1) (undo-tree-id31409 . -1) (undo-tree-id31410 . -1) (undo-tree-id31411 . -1) (undo-tree-id31412 . -1) (undo-tree-id31413 . -1) (undo-tree-id31414 . -1) (undo-tree-id31415 . -1) (undo-tree-id31416 . -1) (undo-tree-id31417 . -1) (undo-tree-id31418 . -1) (undo-tree-id31419 . -1) (undo-tree-id31420 . -1) (undo-tree-id31421 . -1) (undo-tree-id31422 . -1) (undo-tree-id31423 . -1) (#("s" 0 1 (fontified t)) . -4213) (undo-tree-id31424 . -1) (undo-tree-id31425 . -1) (undo-tree-id31426 . -1) (undo-tree-id31427 . -1) (undo-tree-id31428 . -1) (undo-tree-id31429 . -1) (undo-tree-id31430 . -1) (undo-tree-id31431 . -1) (undo-tree-id31432 . -1) (undo-tree-id31433 . -1) (undo-tree-id31434 . -1) (#("t" 0 1 (fontified t)) . -4214) (undo-tree-id31435 . -1) (undo-tree-id31436 . -1) (undo-tree-id31437 . -1) (undo-tree-id31438 . -1) (undo-tree-id31439 . -1) 4215) nil (25944 55235 80594 0) 0 nil])
([nil nil ((4212 . 4213)) nil (25944 55235 80509 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4213 4218 #s(yas--snippet nil nil #s(yas--exit 4218 nil) 164 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 4218 nil) 164 nil nil nil nil)) (4213 . 4218) (#("get()$0" 0 7 (fontified nil)) . 4213) (4213 . 4220) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -4213) (4213 . 4233)) nil (25944 55235 80508 0) 0 nil])
([nil nil ((4218 . 4220)) nil (25944 55235 80505 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4219) (undo-tree-id31351 . -1) (undo-tree-id31352 . -1) (undo-tree-id31353 . -1) (undo-tree-id31354 . -1) (undo-tree-id31355 . -1) 4220) nil (25944 55235 80504 0) 0 nil])
([nil nil ((4219 . 4222)) nil (25944 55235 80498 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4219 4227 #s(yas--snippet nil nil #s(yas--exit 4227 nil) 165 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 4227 nil) 165 nil nil nil nil)) (4219 . 4227) (#("as_str()$0" 0 10 (fontified nil)) . 4219) (4219 . 4229) (#("str" 0 3 (fontified nil)) . 4219) (4219 . 4222) (#("as_str()" 0 8 (fontified nil)) . -4219) (4219 . 4227) (#("str" 0 3 (face font-lock-type-face fontified t)) . -4219) (undo-tree-id31350 . -3) 4222) nil (25944 55235 80495 0) 0 nil])
([nil nil ((4227 . 4233)) nil (25944 55235 80491 0) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -4231) (undo-tree-id31332 . -1) (undo-tree-id31333 . -1) (undo-tree-id31334 . -1) (undo-tree-id31335 . -1) (undo-tree-id31336 . -1) (undo-tree-id31337 . -1) (undo-tree-id31338 . -1) (undo-tree-id31339 . -1) (undo-tree-id31340 . -1) (undo-tree-id31341 . -1) (undo-tree-id31342 . -1) (undo-tree-id31343 . -1) (#("\\" 0 1 (fontified t)) . -4232) (undo-tree-id31344 . -1) (undo-tree-id31345 . -1) (undo-tree-id31346 . -1) (undo-tree-id31347 . -1) (undo-tree-id31348 . -1) (undo-tree-id31349 . -1) 4233) nil (25944 55235 80488 0) 0 nil])
([nil nil ((4231 . 4232)) nil (25944 55235 80469 0) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -4231) (undo-tree-id31319 . -1) (undo-tree-id31320 . -1) (undo-tree-id31321 . -1) (undo-tree-id31322 . -1) (undo-tree-id31323 . -1) (undo-tree-id31324 . -1) (undo-tree-id31325 . -1) (undo-tree-id31326 . -1) (undo-tree-id31327 . -1) (undo-tree-id31328 . -1) (undo-tree-id31329 . -1) (undo-tree-id31330 . -1) (undo-tree-id31331 . -1) 4232) nil (25944 55235 80467 0) 0 nil])
([nil nil ((4231 . 4233)) nil (25944 55235 80453 0) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -4231) (undo-tree-id31297 . -1) (undo-tree-id31298 . -1) (undo-tree-id31299 . -1) (undo-tree-id31300 . -1) (undo-tree-id31301 . -1) (undo-tree-id31302 . -1) (undo-tree-id31303 . -1) (undo-tree-id31304 . -1) (undo-tree-id31305 . -1) (undo-tree-id31306 . -1) (undo-tree-id31307 . -1) (undo-tree-id31308 . -1) (undo-tree-id31309 . -1) (undo-tree-id31310 . -1) (#("'" 0 1 (fontified t)) . -4232) (undo-tree-id31311 . -1) (undo-tree-id31312 . -1) (undo-tree-id31313 . -1) (undo-tree-id31314 . -1) (undo-tree-id31315 . -1) (undo-tree-id31316 . -1) (undo-tree-id31317 . -1) (undo-tree-id31318 . -1) 4233) nil (25944 55235 80451 0) 0 nil])
([nil nil ((4231 . 4232)) nil (25944 55235 80420 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -4231) (undo-tree-id31293 . -1) (undo-tree-id31294 . -1) (undo-tree-id31295 . -1) (undo-tree-id31296 . -1) 4232) nil (25944 55235 80419 0) 0 nil])
([nil nil ((4231 . 4233)) nil (25944 55235 80413 0) 0 nil])
([nil nil ((4232 . 4238)) nil (25944 55235 80412 0) 0 nil])
([nil nil ((4239 . 4242)) nil (25944 55235 80411 0) 0 nil])
([nil nil ((4243 . 4244) (#("	    " 0 5 (fontified nil)) . 4242) (undo-tree-id31290 . -1) (undo-tree-id31291 . -1) (undo-tree-id31292 . -1) (4243 . 4247) (4241 . 4244)) nil (25944 55235 80407 0) 0 nil])
([nil nil ((4242 . 4247) (t 25944 55235 148173 615000)) nil (25944 55295 568439 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 4537 . 4538) (nil fontified nil 4526 . 4538) (nil fontified nil 4522 . 4526) (nil fontified nil 4521 . 4522) (nil fontified nil 4517 . 4521) (nil fontified nil 4515 . 4517) (nil fontified nil 4508 . 4515) (nil fontified nil 4503 . 4508) (nil fontified nil 4480 . 4503) (nil fontified nil 4475 . 4480) (nil fontified nil 4467 . 4475) (nil fontified nil 4450 . 4467) (nil fontified nil 4441 . 4450) (nil fontified nil 4440 . 4441) (nil fontified nil 4437 . 4440) (nil fontified nil 4436 . 4437) (nil fontified nil 4433 . 4436) (nil fontified nil 4398 . 4433) (nil fontified nil 4397 . 4398) (nil fontified nil 4378 . 4397) (nil fontified nil 4368 . 4378) (nil fontified nil 4367 . 4368) (nil fontified nil 4365 . 4367) (nil fontified nil 4358 . 4365) (nil fontified nil 4356 . 4358) (nil fontified nil 4345 . 4356) (nil fontified nil 4344 . 4345) (nil fontified nil 4332 . 4344) (nil fontified nil 4328 . 4332) (nil fontified nil 4327 . 4328) (nil fontified nil 4324 . 4327) (nil fontified nil 4289 . 4324) (nil fontified nil 4282 . 4289) (nil fontified nil 4281 . 4282) (nil fontified nil 4278 . 4281) (nil fontified nil 4270 . 4278) (nil fontified nil 4266 . 4270) (nil fontified nil 4265 . 4266) (nil fontified nil 4260 . 4265) (nil fontified nil 4247 . 4260) (4247 . 4538)) nil (25944 55295 568436 0) 0 nil])
([nil nil ((4522 . 4526) (4494 . 4495) (#("    " 0 4 (fontified t)) . 4494) (undo-tree-id31667 . -2) (undo-tree-id31668 . -1) (4422 . 4423) (#("    " 0 4 (fontified t)) . 4422) (4316 . 4317) (#("    " 0 4 (fontified t)) . 4316) (4273 . 4274) (#("    " 0 4 (fontified t)) . 4273) (#("	" 0 1 (fontified t)) . -4247) 4242) nil (25944 55295 568423 0) 0 nil])
([nil nil ((#("keys;" 0 5 (fontified t)) . -4309) (undo-tree-id31646 . -4) (undo-tree-id31647 . -5) (undo-tree-id31648 . -4) (undo-tree-id31649 . -4) (undo-tree-id31650 . -4) (undo-tree-id31651 . -4) (undo-tree-id31652 . -4) (undo-tree-id31653 . -4) (undo-tree-id31654 . -4) (undo-tree-id31655 . -4) (undo-tree-id31656 . -4) (undo-tree-id31657 . -4) (undo-tree-id31658 . -4) (undo-tree-id31659 . -4) (undo-tree-id31660 . -4) (undo-tree-id31661 . -4) (undo-tree-id31662 . -5) (undo-tree-id31663 . -5) (undo-tree-id31664 . -5) (undo-tree-id31665 . -5) (undo-tree-id31666 . -5) 4314) nil (25944 55295 568417 0) 0 nil])
([nil nil ((#("get()." 0 6 (fontified t)) . -4303) (undo-tree-id31618 . -6) (undo-tree-id31619 . -6) (undo-tree-id31620 . -6) (undo-tree-id31621 . -6) (undo-tree-id31622 . -6) (undo-tree-id31623 . -6) (undo-tree-id31624 . -6) (undo-tree-id31625 . -6) (undo-tree-id31626 . -6) (undo-tree-id31627 . -6) (undo-tree-id31628 . -6) (undo-tree-id31629 . -6) (undo-tree-id31630 . -6) (undo-tree-id31631 . -6) (undo-tree-id31632 . -6) (undo-tree-id31633 . -6) (undo-tree-id31634 . -6) (undo-tree-id31635 . -6) (undo-tree-id31636 . -6) (undo-tree-id31637 . -6) (undo-tree-id31638 . -6) (undo-tree-id31639 . -6) (undo-tree-id31640 . -6) (undo-tree-id31641 . -6) (undo-tree-id31642 . -6) (undo-tree-id31643 . -6) (undo-tree-id31644 . -6) (undo-tree-id31645 . -6) 4309) nil (25944 55295 568393 0) 0 nil])
([nil nil ((#("state." 0 6 (fontified t)) . -4297) (undo-tree-id31583 . -6) (undo-tree-id31584 . -6) (undo-tree-id31585 . -6) (undo-tree-id31586 . -6) (undo-tree-id31587 . -6) (undo-tree-id31588 . -6) (undo-tree-id31589 . -6) (undo-tree-id31590 . -6) (undo-tree-id31591 . -6) (undo-tree-id31592 . -6) (undo-tree-id31593 . -6) (undo-tree-id31594 . -6) (undo-tree-id31595 . -6) (undo-tree-id31596 . -6) (undo-tree-id31597 . -6) (undo-tree-id31598 . -6) (undo-tree-id31599 . -6) (undo-tree-id31600 . -6) (undo-tree-id31601 . -6) (undo-tree-id31602 . -6) (undo-tree-id31603 . -6) (undo-tree-id31604 . -6) (undo-tree-id31605 . -6) (undo-tree-id31606 . -6) (undo-tree-id31607 . -6) (undo-tree-id31608 . -6) (undo-tree-id31609 . -6) (undo-tree-id31610 . -6) (undo-tree-id31611 . -6) (undo-tree-id31612 . -6) (undo-tree-id31613 . -6) (undo-tree-id31614 . -6) (undo-tree-id31615 . -6) (undo-tree-id31616 . -6) (undo-tree-id31617 . -6) 4303) nil (25944 55295 568363 0) 0 nil])
([nil nil ((#("keyboard_" 0 9 (fontified t)) . -4288) (undo-tree-id31543 . -9) (undo-tree-id31544 . -9) (undo-tree-id31545 . -9) (undo-tree-id31546 . -9) (undo-tree-id31547 . -9) (undo-tree-id31548 . -9) (undo-tree-id31549 . -9) (undo-tree-id31550 . -9) (undo-tree-id31551 . -9) (undo-tree-id31552 . -9) (undo-tree-id31553 . -9) (undo-tree-id31554 . -9) (undo-tree-id31555 . -9) (undo-tree-id31556 . -9) (undo-tree-id31557 . -9) (undo-tree-id31558 . -9) (undo-tree-id31559 . -9) (undo-tree-id31560 . -9) (undo-tree-id31561 . -9) (undo-tree-id31562 . -9) (undo-tree-id31563 . -9) (undo-tree-id31564 . -9) (undo-tree-id31565 . -9) (undo-tree-id31566 . -9) (undo-tree-id31567 . -9) (undo-tree-id31568 . -9) (undo-tree-id31569 . -9) (undo-tree-id31570 . -9) (undo-tree-id31571 . -9) (undo-tree-id31572 . -9) (undo-tree-id31573 . -9) (undo-tree-id31574 . -9) (undo-tree-id31575 . -9) (undo-tree-id31576 . -9) (undo-tree-id31577 . -9) (undo-tree-id31578 . -9) (undo-tree-id31579 . -9) (undo-tree-id31580 . -9) (undo-tree-id31581 . -9) (undo-tree-id31582 . -9) 4297) nil (25944 55295 568326 0) 0 nil])
([nil nil ((4288 . 4289)) nil (25944 55295 568282 0) 0 nil])
([nil nil ((#("I" 0 1 (face font-lock-type-face fontified t)) . -4288) (undo-tree-id31539 . -1) (undo-tree-id31540 . -1) (undo-tree-id31541 . -1) (undo-tree-id31542 . -1) 4289) nil (25944 55295 568281 0) 0 nil])
([nil nil ((4288 . 4290)) nil (25944 55295 568275 0) 0 nil])
([nil nil ((4288 . 4293) (#("in" 0 2 (fontified nil)) . 4288) (4288 . 4290) (#("index" 0 5 (fontified nil)) . -4288) (4288 . 4293) (#("in" 0 2 (face font-lock-keyword-face fontified t)) . -4288) (undo-tree-id31533 . -2) (undo-tree-id31534 . -1) (undo-tree-id31535 . -2) (undo-tree-id31536 . -2) (undo-tree-id31537 . -2) (undo-tree-id31538 . -2) 4290) nil (25944 55295 568273 0) 0 nil])
([nil nil ((4293 . 4296)) nil (25944 55295 568257 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4294 4305 #s(yas--snippet nil nil #s(yas--exit 4305 nil) 166 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 4305 nil) 166 nil nil nil nil)) (4294 . 4305) (#("to_string()$0" 0 13 (fontified nil)) . 4294) (4294 . 4307) (#("to" 0 2 (fontified nil)) . 4294) (4294 . 4296) (#("to_string() (as ToString)" 0 25 (fontified nil)) . -4294) (4294 . 4319) (#("to" 0 2 (fontified t)) . -4294) (undo-tree-id31526 . -2) (undo-tree-id31527 . -1) (undo-tree-id31528 . -1) (undo-tree-id31529 . -2) (undo-tree-id31530 . -2) (undo-tree-id31531 . -2) (undo-tree-id31532 . -2) 4296) nil (25944 55295 568254 0) 0 nil])
([nil nil ((4305 . 4306)) nil (25944 55295 568234 0) 0 nil])
([nil nil ((#("unwrap()}" 0 9 (fontified t)) . -4392) (undo-tree-id32050 . -9) (undo-tree-id32051 . -9) (undo-tree-id32052 . -9) (undo-tree-id32053 . -9) (undo-tree-id32054 . -9) (undo-tree-id32055 . -9) (undo-tree-id32056 . -9) (undo-tree-id32057 . -9) (undo-tree-id32058 . -9) (undo-tree-id32059 . -9) (undo-tree-id32060 . -9) (undo-tree-id32061 . -9) (undo-tree-id32062 . -9) (undo-tree-id32063 . -9) (undo-tree-id32064 . -9) (undo-tree-id32065 . -9) 4401 (t 25944 55295 637583 651000)) nil (25944 55317 589346 0) 0 nil])
([nil nil ((#("payload)." 0 9 (fontified t)) . -4383) (undo-tree-id32023 . -9) (undo-tree-id32024 . -9) (undo-tree-id32025 . -9) (undo-tree-id32026 . -9) (undo-tree-id32027 . -9) (undo-tree-id32028 . -9) (undo-tree-id32029 . -9) (undo-tree-id32030 . -9) (undo-tree-id32031 . -9) (undo-tree-id32032 . -9) (undo-tree-id32033 . -9) (undo-tree-id32034 . -9) (undo-tree-id32035 . -9) (undo-tree-id32036 . -9) (undo-tree-id32037 . -9) (undo-tree-id32038 . -9) (undo-tree-id32039 . -9) (undo-tree-id32040 . -9) (undo-tree-id32041 . -9) (undo-tree-id32042 . -9) (undo-tree-id32043 . -9) (undo-tree-id32044 . -9) (undo-tree-id32045 . -9) (undo-tree-id32046 . -9) (undo-tree-id32047 . -9) (undo-tree-id32048 . -9) (undo-tree-id32049 . -9) 4392) nil (25944 55317 589326 0) 0 nil])
([nil nil ((#("pretty(&" 0 7 (fontified t) 7 8 (fontified t)) . -4375) (undo-tree-id31993 . -8) (undo-tree-id31994 . -8) (undo-tree-id31995 . -8) (undo-tree-id31996 . -8) (undo-tree-id31997 . -8) (undo-tree-id31998 . -8) (undo-tree-id31999 . -8) (undo-tree-id32000 . -8) (undo-tree-id32001 . -8) (undo-tree-id32002 . -8) (undo-tree-id32003 . -8) (undo-tree-id32004 . -8) (undo-tree-id32005 . -8) (undo-tree-id32006 . -8) (undo-tree-id32007 . -8) (undo-tree-id32008 . -8) (undo-tree-id32009 . -8) (undo-tree-id32010 . -8) (undo-tree-id32011 . -8) (undo-tree-id32012 . -8) (undo-tree-id32013 . -8) (undo-tree-id32014 . -8) (undo-tree-id32015 . -8) (undo-tree-id32016 . -8) (undo-tree-id32017 . -8) (undo-tree-id32018 . -8) (undo-tree-id32019 . -8) (undo-tree-id32020 . -8) (undo-tree-id32021 . -8) (undo-tree-id32022 . -8) 4383) nil (25944 55317 589295 0) 0 nil])
([nil nil ((#("string_" 0 7 (fontified t)) . -4368) (undo-tree-id31960 . -7) (undo-tree-id31961 . -7) (undo-tree-id31962 . -7) (undo-tree-id31963 . -7) (undo-tree-id31964 . -7) (undo-tree-id31965 . -7) (undo-tree-id31966 . -7) (undo-tree-id31967 . -7) (undo-tree-id31968 . -7) (undo-tree-id31969 . -7) (undo-tree-id31970 . -7) (undo-tree-id31971 . -7) (undo-tree-id31972 . -7) (undo-tree-id31973 . -7) (undo-tree-id31974 . -7) (undo-tree-id31975 . -7) (undo-tree-id31976 . -7) (undo-tree-id31977 . -7) (undo-tree-id31978 . -7) (undo-tree-id31979 . -7) (undo-tree-id31980 . -7) (undo-tree-id31981 . -7) (undo-tree-id31982 . -7) (undo-tree-id31983 . -7) (undo-tree-id31984 . -7) (undo-tree-id31985 . -7) (undo-tree-id31986 . -7) (undo-tree-id31987 . -7) (undo-tree-id31988 . -7) (undo-tree-id31989 . -7) (undo-tree-id31990 . -7) (undo-tree-id31991 . -7) (undo-tree-id31992 . -7) 4375) nil (25944 55317 589262 0) 0 nil])
([nil nil ((#("to_" 0 3 (fontified t)) . -4365) (undo-tree-id31924 . -3) (undo-tree-id31925 . -3) (undo-tree-id31926 . -3) (undo-tree-id31927 . -3) (undo-tree-id31928 . -3) (undo-tree-id31929 . -3) (undo-tree-id31930 . -3) (undo-tree-id31931 . -3) (undo-tree-id31932 . -3) (undo-tree-id31933 . -3) (undo-tree-id31934 . -3) (undo-tree-id31935 . -3) (undo-tree-id31936 . -3) (undo-tree-id31937 . -3) (undo-tree-id31938 . -3) (undo-tree-id31939 . -3) (undo-tree-id31940 . -3) (undo-tree-id31941 . -3) (undo-tree-id31942 . -3) (undo-tree-id31943 . -3) (undo-tree-id31944 . -3) (undo-tree-id31945 . -3) (undo-tree-id31946 . -3) (undo-tree-id31947 . -3) (undo-tree-id31948 . -3) (undo-tree-id31949 . -3) (undo-tree-id31950 . -3) (undo-tree-id31951 . -3) (undo-tree-id31952 . -3) (undo-tree-id31953 . -3) (undo-tree-id31954 . -3) (undo-tree-id31955 . -3) (undo-tree-id31956 . -3) (undo-tree-id31957 . -3) (undo-tree-id31958 . -3) (undo-tree-id31959 . -3) 4368) nil (25944 55317 589226 0) 0 nil])
([nil nil ((#("json::" 0 4 (face font-lock-constant-face fontified t) 4 6 (fontified t)) . -4359) (undo-tree-id31885 . -6) (undo-tree-id31886 . -6) (undo-tree-id31887 . -6) (undo-tree-id31888 . -6) (undo-tree-id31889 . -6) (undo-tree-id31890 . -6) (undo-tree-id31891 . -6) (undo-tree-id31892 . -6) (undo-tree-id31893 . -6) (undo-tree-id31894 . -6) (undo-tree-id31895 . -6) (undo-tree-id31896 . -6) (undo-tree-id31897 . -6) (undo-tree-id31898 . -6) (undo-tree-id31899 . -6) (undo-tree-id31900 . -6) (undo-tree-id31901 . -6) (undo-tree-id31902 . -6) (undo-tree-id31903 . -6) (undo-tree-id31904 . -6) (undo-tree-id31905 . -6) (undo-tree-id31906 . -6) (undo-tree-id31907 . -6) (undo-tree-id31908 . -6) (undo-tree-id31909 . -6) (undo-tree-id31910 . -6) (undo-tree-id31911 . -6) (undo-tree-id31912 . -6) (undo-tree-id31913 . -6) (undo-tree-id31914 . -6) (undo-tree-id31915 . -6) (undo-tree-id31916 . -6) (undo-tree-id31917 . -6) (undo-tree-id31918 . -6) (undo-tree-id31919 . -6) (undo-tree-id31920 . -6) (undo-tree-id31921 . -6) (undo-tree-id31922 . -6) (undo-tree-id31923 . -6) 4365) nil (25944 55317 589180 0) 0 nil])
([nil nil ((#("serde_" 0 6 (fontified t)) . -4353) (undo-tree-id31843 . -6) (undo-tree-id31844 . -6) (undo-tree-id31845 . -6) (undo-tree-id31846 . -6) (undo-tree-id31847 . -6) (undo-tree-id31848 . -6) (undo-tree-id31849 . -6) (undo-tree-id31850 . -6) (undo-tree-id31851 . -6) (undo-tree-id31852 . -6) (undo-tree-id31853 . -6) (undo-tree-id31854 . -6) (undo-tree-id31855 . -6) (undo-tree-id31856 . -6) (undo-tree-id31857 . -6) (undo-tree-id31858 . -6) (undo-tree-id31859 . -6) (undo-tree-id31860 . -6) (undo-tree-id31861 . -6) (undo-tree-id31862 . -6) (undo-tree-id31863 . -6) (undo-tree-id31864 . -6) (undo-tree-id31865 . -6) (undo-tree-id31866 . -6) (undo-tree-id31867 . -6) (undo-tree-id31868 . -6) (undo-tree-id31869 . -6) (undo-tree-id31870 . -6) (undo-tree-id31871 . -6) (undo-tree-id31872 . -6) (undo-tree-id31873 . -6) (undo-tree-id31874 . -6) (undo-tree-id31875 . -6) (undo-tree-id31876 . -6) (undo-tree-id31877 . -6) (undo-tree-id31878 . -6) (undo-tree-id31879 . -6) (undo-tree-id31880 . -6) (undo-tree-id31881 . -6) (undo-tree-id31882 . -6) (undo-tree-id31883 . -6) (undo-tree-id31884 . -6) 4359) nil (25944 55317 589138 0) 0 nil])
([nil nil ((#("payload: &" 0 7 (face font-lock-variable-name-face fontified t) 7 9 (fontified t) 9 10 (fontified t)) . -4343) (undo-tree-id31798 . -10) (undo-tree-id31799 . -10) (undo-tree-id31800 . -10) (undo-tree-id31801 . -10) (undo-tree-id31802 . -10) (undo-tree-id31803 . -10) (undo-tree-id31804 . -10) (undo-tree-id31805 . -10) (undo-tree-id31806 . -10) (undo-tree-id31807 . -10) (undo-tree-id31808 . -10) (undo-tree-id31809 . -10) (undo-tree-id31810 . -10) (undo-tree-id31811 . -10) (undo-tree-id31812 . -10) (undo-tree-id31813 . -10) (undo-tree-id31814 . -10) (undo-tree-id31815 . -10) (undo-tree-id31816 . -10) (undo-tree-id31817 . -10) (undo-tree-id31818 . -10) (undo-tree-id31819 . -10) (undo-tree-id31820 . -10) (undo-tree-id31821 . -10) (undo-tree-id31822 . -10) (undo-tree-id31823 . -10) (undo-tree-id31824 . -10) (undo-tree-id31825 . -10) (undo-tree-id31826 . -10) (undo-tree-id31827 . -10) (undo-tree-id31828 . -10) (undo-tree-id31829 . -10) (undo-tree-id31830 . -10) (undo-tree-id31831 . -10) (undo-tree-id31832 . -10) (undo-tree-id31833 . -10) (undo-tree-id31834 . -10) (undo-tree-id31835 . -10) (undo-tree-id31836 . -10) (undo-tree-id31837 . -10) (undo-tree-id31838 . -10) (undo-tree-id31839 . -10) (undo-tree-id31840 . -10) (undo-tree-id31841 . -10) (undo-tree-id31842 . -10) 4353) nil (25944 55317 589096 0) 0 nil])
([nil nil ((#("MessageArgs {" 0 11 (face font-lock-type-face fontified t) 11 13 (fontified t)) . -4330) (undo-tree-id31675 . -13) (undo-tree-id31676 . -13) (undo-tree-id31677 . -11) (undo-tree-id31678 . -11) (undo-tree-id31679 . -11) (undo-tree-id31680 . -11) (undo-tree-id31681 . -11) (undo-tree-id31682 . -11) (undo-tree-id31683 . -11) (undo-tree-id31684 . -11) (undo-tree-id31685 . -11) (undo-tree-id31686 . -11) (undo-tree-id31687 . -11) (undo-tree-id31688 . -11) (undo-tree-id31689 . -11) (undo-tree-id31690 . -11) (undo-tree-id31691 . -11) (undo-tree-id31692 . -11) (undo-tree-id31693 . -11) (undo-tree-id31694 . -11) (undo-tree-id31695 . -11) (undo-tree-id31696 . -11) (undo-tree-id31697 . -11) (undo-tree-id31698 . -11) (undo-tree-id31699 . -11) (undo-tree-id31700 . -11) (undo-tree-id31701 . -11) (undo-tree-id31702 . -11) (undo-tree-id31703 . -11) (undo-tree-id31704 . -11) (undo-tree-id31705 . -11) (undo-tree-id31706 . -11) (undo-tree-id31707 . -11) (undo-tree-id31708 . -11) (undo-tree-id31709 . -11) (undo-tree-id31710 . -11) (undo-tree-id31711 . -11) (undo-tree-id31712 . -11) (undo-tree-id31713 . -11) (undo-tree-id31714 . -11) (undo-tree-id31715 . -11) (undo-tree-id31716 . -11) (undo-tree-id31717 . -11) (undo-tree-id31718 . -11) (undo-tree-id31719 . -11) (undo-tree-id31720 . -11) (undo-tree-id31721 . -11) (undo-tree-id31722 . -11) (undo-tree-id31723 . -11) (undo-tree-id31724 . -11) (undo-tree-id31725 . -11) (undo-tree-id31726 . -11) (undo-tree-id31727 . -11) (undo-tree-id31728 . -11) (undo-tree-id31729 . -11) (undo-tree-id31730 . -11) (undo-tree-id31731 . -11) (undo-tree-id31732 . -11) (undo-tree-id31733 . -11) (undo-tree-id31734 . -11) (undo-tree-id31735 . -11) (undo-tree-id31736 . -11) (undo-tree-id31737 . -11) (undo-tree-id31738 . -11) (undo-tree-id31739 . -11) (undo-tree-id31740 . -11) (undo-tree-id31741 . -11) (undo-tree-id31742 . -11) (undo-tree-id31743 . -11) (undo-tree-id31744 . -11) (undo-tree-id31745 . -11) (undo-tree-id31746 . -11) (undo-tree-id31747 . -11) (undo-tree-id31748 . -11) (undo-tree-id31749 . -11) (undo-tree-id31750 . -11) (undo-tree-id31751 . -11) (undo-tree-id31752 . -13) (undo-tree-id31753 . -13) (undo-tree-id31754 . -13) (undo-tree-id31755 . -13) (undo-tree-id31756 . -13) (undo-tree-id31757 . -13) (undo-tree-id31758 . -13) (undo-tree-id31759 . -13) (undo-tree-id31760 . -13) (undo-tree-id31761 . -13) (undo-tree-id31762 . -13) (undo-tree-id31763 . -13) (undo-tree-id31764 . -13) (undo-tree-id31765 . -13) (undo-tree-id31766 . -13) (undo-tree-id31767 . -13) (undo-tree-id31768 . -13) (undo-tree-id31769 . -13) (undo-tree-id31770 . -13) (undo-tree-id31771 . -13) (undo-tree-id31772 . -13) (undo-tree-id31773 . -13) (undo-tree-id31774 . -13) (undo-tree-id31775 . -13) (undo-tree-id31776 . -13) (undo-tree-id31777 . -13) (undo-tree-id31778 . -13) (undo-tree-id31779 . -13) (undo-tree-id31780 . -13) (undo-tree-id31781 . -13) (undo-tree-id31782 . -13) (undo-tree-id31783 . -13) (undo-tree-id31784 . -13) (undo-tree-id31785 . -13) (undo-tree-id31786 . -13) (undo-tree-id31787 . -13) (undo-tree-id31788 . -13) (undo-tree-id31789 . -13) (undo-tree-id31790 . -13) (undo-tree-id31791 . -13) (undo-tree-id31792 . -13) (undo-tree-id31793 . -13) (undo-tree-id31794 . -13) (undo-tree-id31795 . -13) (undo-tree-id31796 . -13) (undo-tree-id31797 . -13) 4343) nil (25944 55317 589041 0) 0 nil])
([nil nil ((4330 . 4332)) nil (25944 55317 588909 0) 0 nil])
([nil nil ((4330 . 4335) (#("in" 0 2 (fontified nil)) . 4330) (4330 . 4332) (#("index" 0 5 (fontified nil)) . -4330) (4330 . 4335) (#("in" 0 2 (face font-lock-keyword-face fontified t)) . -4330) (undo-tree-id31669 . -2) (undo-tree-id31670 . -2) (undo-tree-id31671 . -1) (undo-tree-id31672 . -2) (undo-tree-id31673 . -2) (undo-tree-id31674 . -2) 4332) nil (25944 55317 588905 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -4330) (undo-tree-id32070 . -1) (undo-tree-id32071 . -1) (undo-tree-id32072 . -1) (undo-tree-id32073 . -1) (undo-tree-id32074 . -1) (undo-tree-id32075 . -1) (undo-tree-id32076 . -1) (undo-tree-id32077 . -1) (undo-tree-id32078 . -1) (undo-tree-id32079 . -1) (undo-tree-id32080 . -1) (undo-tree-id32081 . -1) (undo-tree-id32082 . -1) (undo-tree-id32083 . -1) (undo-tree-id32084 . -1) (undo-tree-id32085 . -1) (undo-tree-id32086 . -1) (undo-tree-id32087 . -1) (undo-tree-id32088 . -1) (undo-tree-id32089 . -1) (undo-tree-id32090 . -1) (undo-tree-id32091 . -1) (undo-tree-id32092 . -1) (undo-tree-id32093 . -1) (undo-tree-id32094 . -1) (undo-tree-id32095 . -1) (undo-tree-id32096 . -1) (undo-tree-id32097 . -1) (undo-tree-id32098 . -1) (undo-tree-id32099 . -1) (undo-tree-id32100 . -1) (undo-tree-id32101 . -1) (undo-tree-id32102 . -1) (undo-tree-id32103 . -1) (undo-tree-id32104 . -1) (undo-tree-id32105 . -1) (undo-tree-id32106 . -1) (undo-tree-id32107 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -4331) (undo-tree-id32108 . -1) (undo-tree-id32109 . -1) (undo-tree-id32110 . -1) (undo-tree-id32111 . -1) (undo-tree-id32112 . -1) (undo-tree-id32113 . -1) (undo-tree-id32114 . -1) (undo-tree-id32115 . -1) (undo-tree-id32116 . -1) (undo-tree-id32117 . -1) (undo-tree-id32118 . -1) (undo-tree-id32119 . -1) (undo-tree-id32120 . -1) (undo-tree-id32121 . -1) (undo-tree-id32122 . -1) (undo-tree-id32123 . -1) (undo-tree-id32124 . -1) (undo-tree-id32125 . -1) (undo-tree-id32126 . -1) (undo-tree-id32127 . -1) (undo-tree-id32128 . -1) (undo-tree-id32129 . -1) (undo-tree-id32130 . -1) (undo-tree-id32131 . -1) (undo-tree-id32132 . -1) (undo-tree-id32133 . -1) (undo-tree-id32134 . -1) (undo-tree-id32135 . -1) (undo-tree-id32136 . -1) (undo-tree-id32137 . -1) (undo-tree-id32138 . -1) (#("d" 0 1 (fontified t)) . -4332) (undo-tree-id32139 . -1) (undo-tree-id32140 . -1) (undo-tree-id32141 . -1) (undo-tree-id32142 . -1) (undo-tree-id32143 . -1) (undo-tree-id32144 . -1) (undo-tree-id32145 . -1) (undo-tree-id32146 . -1) (undo-tree-id32147 . -1) (undo-tree-id32148 . -1) (undo-tree-id32149 . -1) (undo-tree-id32150 . -1) (undo-tree-id32151 . -1) (undo-tree-id32152 . -1) (undo-tree-id32153 . -1) (undo-tree-id32154 . -1) (undo-tree-id32155 . -1) (undo-tree-id32156 . -1) (undo-tree-id32157 . -1) (undo-tree-id32158 . -1) (undo-tree-id32159 . -1) (undo-tree-id32160 . -1) (undo-tree-id32161 . -1) (undo-tree-id32162 . -1) (undo-tree-id32163 . -1) (undo-tree-id32164 . -1) (undo-tree-id32165 . -1) (undo-tree-id32166 . -1) (#("e" 0 1 (fontified t)) . -4333) (undo-tree-id32167 . -1) (undo-tree-id32168 . -1) (undo-tree-id32169 . -1) (undo-tree-id32170 . -1) (undo-tree-id32171 . -1) (undo-tree-id32172 . -1) (undo-tree-id32173 . -1) (undo-tree-id32174 . -1) (undo-tree-id32175 . -1) (undo-tree-id32176 . -1) (undo-tree-id32177 . -1) (undo-tree-id32178 . -1) (undo-tree-id32179 . -1) (undo-tree-id32180 . -1) (undo-tree-id32181 . -1) (undo-tree-id32182 . -1) (undo-tree-id32183 . -1) (undo-tree-id32184 . -1) (undo-tree-id32185 . -1) (undo-tree-id32186 . -1) (undo-tree-id32187 . -1) (undo-tree-id32188 . -1) (undo-tree-id32189 . -1) (undo-tree-id32190 . -1) (undo-tree-id32191 . -1) (undo-tree-id32192 . -1) (undo-tree-id32193 . -1) (#("x" 0 1 (fontified t)) . -4334) (undo-tree-id32194 . -1) (undo-tree-id32195 . -1) (undo-tree-id32196 . -1) (undo-tree-id32197 . -1) (undo-tree-id32198 . -1) (undo-tree-id32199 . -1) (undo-tree-id32200 . -1) (undo-tree-id32201 . -1) (undo-tree-id32202 . -1) (undo-tree-id32203 . -1) (undo-tree-id32204 . -1) (undo-tree-id32205 . -1) (undo-tree-id32206 . -1) (undo-tree-id32207 . -1) (undo-tree-id32208 . -1) (undo-tree-id32209 . -1) (undo-tree-id32210 . -1) (undo-tree-id32211 . -1) (undo-tree-id32212 . -1) (undo-tree-id32213 . -1) (undo-tree-id32214 . -1) (undo-tree-id32215 . -1) (undo-tree-id32216 . -1) (undo-tree-id32217 . -1) (undo-tree-id32218 . -1) (undo-tree-id32219 . -1) 4335 (t 25944 55317 657667 774000)) nil (25944 55322 548711 0) 0 nil])
([nil nil ((4330 . 4331)) nil (25944 55322 548554 0) 0 nil])
([nil nil ((4330 . 4337) (#("p" 0 1 (fontified nil)) . 4330) (4330 . 4331) (#("payload" 0 7 (fontified nil)) . -4330) (4330 . 4337) (#("p" 0 1 (fontified t)) . -4330) (undo-tree-id32066 . -1) (undo-tree-id32067 . -1) (undo-tree-id32068 . -1) (undo-tree-id32069 . -1) 4331) nil (25944 55322 548549 0) 0 nil])
([nil nil ((#("		let payload = index.to_string();" 0 2 (fontified t) 2 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face font-lock-variable-name-face fontified t) 13 16 (fontified t) 16 22 (fontified t) 22 34 (fontified t)) . 4272) (undo-tree-id32469 . -34) (undo-tree-id32470 . -20) (undo-tree-id32471 . -20) (undo-tree-id32472 . -20) (undo-tree-id32473 . -20) (undo-tree-id32474 . -20) (undo-tree-id32475 . -20) (undo-tree-id32476 . -20) (undo-tree-id32477 . -20) (undo-tree-id32478 . -20) (undo-tree-id32479 . -20) (undo-tree-id32480 . -20) (undo-tree-id32481 . -20) (undo-tree-id32482 . -20) (undo-tree-id32483 . -20) (undo-tree-id32484 . -20) (undo-tree-id32485 . -20) (undo-tree-id32486 . -20) (undo-tree-id32487 . -20) (undo-tree-id32488 . -20) (undo-tree-id32489 . -20) (undo-tree-id32490 . -20) (undo-tree-id32491 . -20) (undo-tree-id32492 . -20) (undo-tree-id32493 . -20) (undo-tree-id32494 . -20) (undo-tree-id32495 . -20) (undo-tree-id32496 . -20) (undo-tree-id32497 . -20) (undo-tree-id32498 . -20) (undo-tree-id32499 . -20) (undo-tree-id32500 . -20) (undo-tree-id32501 . -20) (undo-tree-id32502 . -20) (undo-tree-id32503 . -20) (undo-tree-id32504 . -34) (undo-tree-id32505 . -34) (undo-tree-id32506 . -34) (undo-tree-id32507 . -34) (undo-tree-id32508 . -34) (undo-tree-id32509 . -34) (undo-tree-id32510 . -34) (undo-tree-id32511 . -34) (undo-tree-id32512 . -34) (undo-tree-id32513 . -34) (undo-tree-id32514 . -34) (undo-tree-id32515 . -34) (undo-tree-id32516 . -34) (t 25944 55322 617626 326000)) nil (25944 55348 84989 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4272) (undo-tree-id32468 . -1)) nil (25944 55348 84940 0) 0 nil])
([nil nil ((#("payload)" 0 7 (fontified t) 7 8 (fontified t)) . -4295) (undo-tree-id32371 . -6) (undo-tree-id32372 . -8) (undo-tree-id32373 . -7) (undo-tree-id32374 . -7) (undo-tree-id32375 . -7) (undo-tree-id32376 . -7) (undo-tree-id32377 . -7) (undo-tree-id32378 . -7) (undo-tree-id32379 . -7) (undo-tree-id32380 . -7) (undo-tree-id32381 . -7) (undo-tree-id32382 . -7) (undo-tree-id32383 . -7) (undo-tree-id32384 . -7) (undo-tree-id32385 . -7) (undo-tree-id32386 . -7) (undo-tree-id32387 . -7) (undo-tree-id32388 . -7) (undo-tree-id32389 . -7) (undo-tree-id32390 . -7) (undo-tree-id32391 . -7) (undo-tree-id32392 . -7) (undo-tree-id32393 . -7) (undo-tree-id32394 . -7) (undo-tree-id32395 . -7) (undo-tree-id32396 . -7) (undo-tree-id32397 . -7) (undo-tree-id32398 . -7) (undo-tree-id32399 . -7) (undo-tree-id32400 . -7) (undo-tree-id32401 . -7) (undo-tree-id32402 . -7) (undo-tree-id32403 . -7) (undo-tree-id32404 . -7) (undo-tree-id32405 . -7) (undo-tree-id32406 . -7) (undo-tree-id32407 . -7) (undo-tree-id32408 . -7) (undo-tree-id32409 . -7) (undo-tree-id32410 . -7) (undo-tree-id32411 . -7) (undo-tree-id32412 . -7) (undo-tree-id32413 . -7) (undo-tree-id32414 . -7) (undo-tree-id32415 . -7) (undo-tree-id32416 . -7) (undo-tree-id32417 . -4) (undo-tree-id32418 . -4) (undo-tree-id32419 . -4) (undo-tree-id32420 . -4) (undo-tree-id32421 . -4) (undo-tree-id32422 . -4) (undo-tree-id32423 . -4) (undo-tree-id32424 . -4) (undo-tree-id32425 . -4) (undo-tree-id32426 . -4) (undo-tree-id32427 . -4) (undo-tree-id32428 . -4) (undo-tree-id32429 . -4) (undo-tree-id32430 . -4) (undo-tree-id32431 . -4) (undo-tree-id32432 . -4) (undo-tree-id32433 . -4) (undo-tree-id32434 . -4) (undo-tree-id32435 . -4) (undo-tree-id32436 . -4) (undo-tree-id32437 . -4) (undo-tree-id32438 . -4) (undo-tree-id32439 . -4) (undo-tree-id32440 . -4) (undo-tree-id32441 . -4) (undo-tree-id32442 . -4) (undo-tree-id32443 . -4) (undo-tree-id32444 . -6) (undo-tree-id32445 . -6) (undo-tree-id32446 . -6) (undo-tree-id32447 . -6) (undo-tree-id32448 . -6) (undo-tree-id32449 . -6) (undo-tree-id32450 . -6) (undo-tree-id32451 . -6) (undo-tree-id32452 . -6) (undo-tree-id32453 . -6) (undo-tree-id32454 . -6) (undo-tree-id32455 . -6) (undo-tree-id32456 . -6) (undo-tree-id32457 . -6) (undo-tree-id32458 . -6) (undo-tree-id32459 . -6) (undo-tree-id32460 . -6) (undo-tree-id32461 . -6) (undo-tree-id32462 . -7) (undo-tree-id32463 . -8) (undo-tree-id32464 . -8) (undo-tree-id32465 . -8) (undo-tree-id32466 . -8) (undo-tree-id32467 . -8) 4303) nil (25944 55348 84934 0) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -4294) (undo-tree-id32225 . -1) (undo-tree-id32226 . -1) (undo-tree-id32227 . -1) (undo-tree-id32228 . -1) (undo-tree-id32229 . -1) (undo-tree-id32230 . -1) (undo-tree-id32231 . -1) (undo-tree-id32232 . -1) (undo-tree-id32233 . -1) (undo-tree-id32234 . -1) (undo-tree-id32235 . -1) (undo-tree-id32236 . -1) (undo-tree-id32237 . -1) (undo-tree-id32238 . -1) (undo-tree-id32239 . -1) (undo-tree-id32240 . -1) (undo-tree-id32241 . -1) (undo-tree-id32242 . -1) (undo-tree-id32243 . -1) (undo-tree-id32244 . -1) (undo-tree-id32245 . -1) (undo-tree-id32246 . -1) (undo-tree-id32247 . -1) (undo-tree-id32248 . -1) (undo-tree-id32249 . -1) (undo-tree-id32250 . -1) (undo-tree-id32251 . -1) (undo-tree-id32252 . -1) (undo-tree-id32253 . -1) (undo-tree-id32254 . -1) (undo-tree-id32255 . -1) (undo-tree-id32256 . -1) (undo-tree-id32257 . -1) (undo-tree-id32258 . -1) (undo-tree-id32259 . -1) (undo-tree-id32260 . -1) (undo-tree-id32261 . -1) (undo-tree-id32262 . -1) (undo-tree-id32263 . -1) (undo-tree-id32264 . -1) (undo-tree-id32265 . -1) (undo-tree-id32266 . -1) (undo-tree-id32267 . -1) (undo-tree-id32268 . -1) (undo-tree-id32269 . -1) (undo-tree-id32270 . -1) (undo-tree-id32271 . -1) (undo-tree-id32272 . -1) (undo-tree-id32273 . -1) (undo-tree-id32274 . -1) (undo-tree-id32275 . -1) (undo-tree-id32276 . -1) (undo-tree-id32277 . -1) (undo-tree-id32278 . -1) (undo-tree-id32279 . -1) (undo-tree-id32280 . -1) (undo-tree-id32281 . -1) (undo-tree-id32282 . -1) (undo-tree-id32283 . -1) (undo-tree-id32284 . -1) (undo-tree-id32285 . -1) (undo-tree-id32286 . -1) (undo-tree-id32287 . -1) (undo-tree-id32288 . -1) (undo-tree-id32289 . -1) (undo-tree-id32290 . -1) (undo-tree-id32291 . -1) (undo-tree-id32292 . -1) (undo-tree-id32293 . -1) (undo-tree-id32294 . -1) (undo-tree-id32295 . -1) (undo-tree-id32296 . -1) (undo-tree-id32297 . -1) (undo-tree-id32298 . -1) (undo-tree-id32299 . -1) (undo-tree-id32300 . -1) (undo-tree-id32301 . -1) (undo-tree-id32302 . -1) (undo-tree-id32303 . -1) (undo-tree-id32304 . -1) (undo-tree-id32305 . -1) (undo-tree-id32306 . -1) (undo-tree-id32307 . -1) (undo-tree-id32308 . -1) (undo-tree-id32309 . -1) (undo-tree-id32310 . -1) (undo-tree-id32311 . -1) (undo-tree-id32312 . -1) (undo-tree-id32313 . -1) (undo-tree-id32314 . -1) (undo-tree-id32315 . -1) (undo-tree-id32316 . -1) (undo-tree-id32317 . -1) (undo-tree-id32318 . -1) (undo-tree-id32319 . -1) (undo-tree-id32320 . -1) (undo-tree-id32321 . -1) (undo-tree-id32322 . -1) (undo-tree-id32323 . -1) (undo-tree-id32324 . -1) (undo-tree-id32325 . -1) (undo-tree-id32326 . -1) (undo-tree-id32327 . -1) (undo-tree-id32328 . -1) (undo-tree-id32329 . -1) (undo-tree-id32330 . -1) (undo-tree-id32331 . -1) (undo-tree-id32332 . -1) (undo-tree-id32333 . -1) (undo-tree-id32334 . -1) (undo-tree-id32335 . -1) (undo-tree-id32336 . -1) (undo-tree-id32337 . -1) (undo-tree-id32338 . -1) (undo-tree-id32339 . -1) (undo-tree-id32340 . -1) (undo-tree-id32341 . -1) (undo-tree-id32342 . -1) (undo-tree-id32343 . -1) (undo-tree-id32344 . -1) (undo-tree-id32345 . -1) (undo-tree-id32346 . -1) (undo-tree-id32347 . -1) (undo-tree-id32348 . -1) (undo-tree-id32349 . -1) (undo-tree-id32350 . -1) (undo-tree-id32351 . -1) (undo-tree-id32352 . -1) (undo-tree-id32353 . -1) (undo-tree-id32354 . -1) (undo-tree-id32355 . -1) (undo-tree-id32356 . -1) (undo-tree-id32357 . -1) (undo-tree-id32358 . -1) (undo-tree-id32359 . -1) (undo-tree-id32360 . -1) (undo-tree-id32361 . -1) (undo-tree-id32362 . -1) (undo-tree-id32363 . -1) (undo-tree-id32364 . -1) (undo-tree-id32365 . -1) (undo-tree-id32366 . -1) (undo-tree-id32367 . -1) (undo-tree-id32368 . -1) (undo-tree-id32369 . -1) (undo-tree-id32370 . -1) 4295) nil (25944 55348 84834 0) 0 nil])
([nil nil ((4294 . 4295)) nil (25944 55348 302497 0) 0 nil])
([nil nil ((4294 . 4299)) nil (25944 55351 145813 0) 0 nil] [nil nil ((4294 . 4296)) ((#("in" 0 2 (face font-lock-keyword-face fontified t)) . 4294) (undo-tree-id32519 . -2) (undo-tree-id32520 . -1) (undo-tree-id32521 . -2) (undo-tree-id32522 . -2) (undo-tree-id32523 . -2) (undo-tree-id32524 . -2) (undo-tree-id32525 . -2) (undo-tree-id32526 . -2)) (25944 55348 86193 0) 0 nil])
([nil nil ((4294 . 4299) (#("index" 0 5 (fontified nil)) . 4294) (4294 . 4299) (#("index" 0 5 (fontified t)) . -4294) (undo-tree-id32527 . -5) (undo-tree-id32528 . -5) (undo-tree-id32529 . -1) (undo-tree-id32530 . -2) (undo-tree-id32531 . -3) (undo-tree-id32532 . -4) (undo-tree-id32533 . -5) (undo-tree-id32534 . -5) (undo-tree-id32535 . -5) (undo-tree-id32536 . -5) 4299) nil (25944 55351 145809 0) 0 nil])
([nil nil ((10 . 11) (18 . 38) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 4300 4304 nil nil nil nil #s(yas--field 2 4306 4311 nil nil nil nil #s(yas--exit 4312 nil))) #s(yas--field 2 4306 4311 nil nil nil nil #s(yas--exit 4312 nil))) #s(yas--exit 4312 nil) 167 nil #s(yas--field 1 4300 4304 nil nil nil nil #s(yas--field 2 4306 4311 nil nil nil nil #s(yas--exit 4312 nil))) nil nil)) (4294 . 4312) (#("index(${1:self}, ${2:slice})$0" 0 30 (fontified nil)) . 4294) (4294 . 4324) (#("in" 0 2 (fontified nil)) . 4294) (4294 . 4296) (#("index(…) (use std::slice::SliceIndex)" 0 37 (fontified nil)) . -4294) (4294 . 4331) (#("in" 0 2 (face font-lock-keyword-face fontified t)) . -4294) (undo-tree-id32220 . -2) (undo-tree-id32221 . -1) (undo-tree-id32222 . -2) (undo-tree-id32223 . -2) (undo-tree-id32224 . -2) 4296) ((4294 . 4296) (#("index(…) (use std::slice::SliceIndex)" 0 37 (fontified nil)) . 4294) (4294 . 4331) (#("in" 0 2 (fontified nil)) . 4294) (4294 . 4296) (#("index(${1:self}, ${2:slice})$0" 0 30 (fontified nil)) . 4294) (4294 . 4324) (#("index(self, slice)" 0 6 (fontified t) 6 10 (face font-lock-keyword-face fontified t) 10 18 (fontified t)) . 4294) (undo-tree-id32517 . -6) (undo-tree-id32518 . -6) (apply yas--snippet-revive 4294 4312 #s(yas--snippet nil (#s(yas--field 1 4300 4304 nil nil nil nil #s(yas--field 2 4306 4311 nil nil nil nil #s(yas--exit 4312 nil))) #s(yas--field 2 4306 4311 nil nil nil nil #s(yas--exit 4312 nil))) #s(yas--exit 4312 nil) 167 nil #s(yas--field 1 4300 4304 nil nil nil nil #s(yas--field 2 4306 4311 nil nil nil nil #s(yas--exit 4312 nil))) nil nil)) (#(", slice::SliceIndex}" 0 20 (fontified nil)) . 18) ("{" . 10)) (25944 55348 84676 0) 0 nil])
([nil nil ((4294 . 4295) (t 25944 55351 214402 454000)) nil (25944 55355 650264 0) 0 nil])
nil
([nil nil ((4300 . 4303) (t 25944 55355 719348 279000)) nil (25944 55380 826173 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4301) (undo-tree-id32601 . -1) (undo-tree-id32602 . -1) (undo-tree-id32603 . -1) (undo-tree-id32604 . -1) (undo-tree-id32605 . -1) (undo-tree-id32606 . -1) (undo-tree-id32607 . -1) (undo-tree-id32608 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -4302) (undo-tree-id32609 . -1) (undo-tree-id32610 . -1) (undo-tree-id32611 . -1) (undo-tree-id32612 . -1) (undo-tree-id32613 . -1) 4303) nil (25944 55380 826171 0) 0 nil])
([nil nil ((4301 . 4303)) nil (25944 55380 826156 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -4302) (undo-tree-id32596 . -1) (undo-tree-id32597 . -1) (undo-tree-id32598 . -1) (undo-tree-id32599 . -1) (undo-tree-id32600 . -1) 4303) nil (25944 55380 826155 0) 0 nil])
([nil nil ((4302 . 4303)) nil (25944 55380 826149 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -4301) (undo-tree-id32577 . -1) (undo-tree-id32578 . -1) (undo-tree-id32579 . -1) (undo-tree-id32580 . -1) (undo-tree-id32581 . -1) (undo-tree-id32582 . -1) (undo-tree-id32583 . -1) (undo-tree-id32584 . -1) (undo-tree-id32585 . -1) (undo-tree-id32586 . -1) (undo-tree-id32587 . -1) (undo-tree-id32588 . -1) (undo-tree-id32589 . -1) (undo-tree-id32590 . -1) (#("o" 0 1 (fontified t)) . -4302) (undo-tree-id32591 . -1) (undo-tree-id32592 . -1) (undo-tree-id32593 . -1) (undo-tree-id32594 . -1) (undo-tree-id32595 . -1) 4303) nil (25944 55380 826147 0) 0 nil])
([nil nil ((4301 . 4304)) nil (25944 55380 826126 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-type-face fontified t)) . -4303) (undo-tree-id32572 . -1) (undo-tree-id32573 . -1) (undo-tree-id32574 . -1) (undo-tree-id32575 . -1) (undo-tree-id32576 . -1) 4304) nil (25944 55380 826124 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -4301) (undo-tree-id32544 . -1) (undo-tree-id32545 . -1) (undo-tree-id32546 . -1) (undo-tree-id32547 . -1) (undo-tree-id32548 . -1) (undo-tree-id32549 . -1) (undo-tree-id32550 . -1) (undo-tree-id32551 . -1) (undo-tree-id32552 . -1) (undo-tree-id32553 . -1) (undo-tree-id32554 . -1) (undo-tree-id32555 . -1) (undo-tree-id32556 . -1) (undo-tree-id32557 . -1) (undo-tree-id32558 . -1) (undo-tree-id32559 . -1) (undo-tree-id32560 . -1) (#("t" 0 1 (fontified t)) . -4302) (undo-tree-id32561 . -1) (undo-tree-id32562 . -1) (undo-tree-id32563 . -1) (undo-tree-id32564 . -1) (undo-tree-id32565 . -1) (undo-tree-id32566 . -1) (undo-tree-id32567 . -1) (undo-tree-id32568 . -1) (undo-tree-id32569 . -1) (undo-tree-id32570 . -1) (undo-tree-id32571 . -1) 4303) nil (25944 55380 826117 0) 0 nil])
([nil nil ((4301 . 4303)) nil (25944 55380 826086 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4301 4312 #s(yas--snippet nil nil #s(yas--exit 4312 nil) 168 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 4312 nil) 168 nil nil nil nil)) (4301 . 4312) (#("to_string()$0" 0 13 (fontified nil)) . 4301) (4301 . 4314) (#("to" 0 2 (fontified nil)) . 4301) (4301 . 4303) (#("to_string() (as ToString)" 0 25 (fontified nil)) . -4301) (4301 . 4326) (#("to" 0 2 (fontified t)) . -4301) (undo-tree-id32537 . -2) (undo-tree-id32538 . -1) (undo-tree-id32539 . -1) (undo-tree-id32540 . -2) (undo-tree-id32541 . -2) (undo-tree-id32542 . -2) (undo-tree-id32543 . -2) 4303) nil (25944 55380 826081 0) 0 nil])
([nil nil ((#("settings" 0 8 (face font-lock-string-face fontified t)) . -4351) (undo-tree-id32665 . -8) (undo-tree-id32666 . -8) (undo-tree-id32667 . -8) (undo-tree-id32668 . -8) (undo-tree-id32669 . -8) (undo-tree-id32670 . -8) (undo-tree-id32671 . -8) (undo-tree-id32672 . -8) (undo-tree-id32673 . -8) (undo-tree-id32674 . -8) (undo-tree-id32675 . -8) (undo-tree-id32676 . -8) (undo-tree-id32677 . -8) (undo-tree-id32678 . -8) (undo-tree-id32679 . -8) (undo-tree-id32680 . -8) 4359 (t 25944 55380 895322 678000)) nil (25944 55394 10864 0) 0 nil])
([nil nil ((#("upload_" 0 7 (face font-lock-string-face fontified t)) . -4344) (undo-tree-id32648 . -7) (undo-tree-id32649 . -7) (undo-tree-id32650 . -7) (undo-tree-id32651 . -7) (undo-tree-id32652 . -7) (undo-tree-id32653 . -7) (undo-tree-id32654 . -7) (undo-tree-id32655 . -7) (undo-tree-id32656 . -7) (undo-tree-id32657 . -7) (undo-tree-id32658 . -7) (undo-tree-id32659 . -7) (undo-tree-id32660 . -7) (undo-tree-id32661 . -7) (undo-tree-id32662 . -7) (undo-tree-id32663 . -7) (undo-tree-id32664 . -7) 4351) nil (25944 55394 10842 0) 0 nil])
([nil nil ((4344 . 4348)) nil (25944 55394 10823 0) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . -4344) (undo-tree-id32620 . -1) (undo-tree-id32621 . -1) (undo-tree-id32622 . -1) (undo-tree-id32623 . -1) (undo-tree-id32624 . -1) (undo-tree-id32625 . -1) (undo-tree-id32626 . -1) (undo-tree-id32627 . -1) (undo-tree-id32628 . -1) (undo-tree-id32629 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -4345) (undo-tree-id32630 . -1) (undo-tree-id32631 . -1) (undo-tree-id32632 . -1) (undo-tree-id32633 . -1) (undo-tree-id32634 . -1) (undo-tree-id32635 . -1) (undo-tree-id32636 . -1) (undo-tree-id32637 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -4346) (undo-tree-id32638 . -1) (undo-tree-id32639 . -1) (undo-tree-id32640 . -1) (undo-tree-id32641 . -1) (undo-tree-id32642 . -1) (undo-tree-id32643 . -1) (#(")" 0 1 (face font-lock-string-face fontified t)) . -4347) (undo-tree-id32644 . -1) (undo-tree-id32645 . -1) (undo-tree-id32646 . -1) (undo-tree-id32647 . -1) 4348) nil (25944 55394 10820 0) 0 nil])
([nil nil ((4344 . 4351)) nil (25944 55394 10790 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-string-face fontified t)) . -4349) (undo-tree-id32614 . -1) (undo-tree-id32615 . -1) (undo-tree-id32616 . -1) (undo-tree-id32617 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -4350) (undo-tree-id32618 . -1) (undo-tree-id32619 . -1) 4351) nil (25944 55394 10787 0) 0 nil])
([nil nil ((4349 . 4355)) nil (25944 55394 10769 0) 0 nil])
([nil nil ((4241 . 4247) (t 25944 55394 80062 694000)) nil (25944 55516 992439 0) 0 nil])
([nil nil ((4247 . 4250)) nil (25944 55516 992438 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -4249) (undo-tree-id32717 . -1) (undo-tree-id32718 . -1) (undo-tree-id32719 . -1) (undo-tree-id32720 . -1) (undo-tree-id32721 . -1) 4250) nil (25944 55516 992436 0) 0 nil])
([nil nil ((4249 . 4253)) nil (25944 55516 992430 0) 0 nil])
([nil nil ((4247 . 4254) (#("loggin" 0 6 (fontified nil)) . 4247) (4247 . 4253) (#("logging" 0 7 (fontified nil)) . -4247) (4247 . 4254) (#("loggin" 0 6 (fontified t)) . -4247) (undo-tree-id32697 . -6) (undo-tree-id32698 . -1) (undo-tree-id32699 . -2) (undo-tree-id32700 . -2) (undo-tree-id32701 . -2) (undo-tree-id32702 . -2) (undo-tree-id32703 . -2) (undo-tree-id32704 . -2) (undo-tree-id32705 . -2) (undo-tree-id32706 . -2) (undo-tree-id32707 . -3) (undo-tree-id32708 . -3) (undo-tree-id32709 . -4) (undo-tree-id32710 . -4) (undo-tree-id32711 . -5) (undo-tree-id32712 . -5) (undo-tree-id32713 . -6) (undo-tree-id32714 . -6) (undo-tree-id32715 . -6) (undo-tree-id32716 . -6) 4253) nil (25944 55516 992427 0) 0 nil])
([nil nil ((4254 . 4257)) nil (25944 55516 992404 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4256 4262 #s(yas--snippet nil nil #s(yas--exit 4261 nil) 169 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 4261 nil) 169 nil nil nil nil)) (4256 . 4262) (#("log!($0)" 0 8 (fontified nil)) . 4256) (4256 . 4264) (#("l" 0 1 (fontified nil)) . 4256) (4256 . 4257) (#("log!(…)" 0 7 (fontified nil)) . -4256) (4256 . 4263) (#("l" 0 1 (fontified t)) . -4256) (undo-tree-id32692 . -1) (undo-tree-id32693 . -1) (undo-tree-id32694 . -1) (undo-tree-id32695 . -1) (undo-tree-id32696 . -1) 4257) nil (25944 55516 992401 0) 0 nil])
([nil nil ((4261 . 4263)) nil (25944 55516 992393 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -4261) (undo-tree-id32681 . -1) (undo-tree-id32682 . -1) (undo-tree-id32683 . -1) (undo-tree-id32684 . -1) (undo-tree-id32685 . -1) (undo-tree-id32686 . -1) (undo-tree-id32687 . -1) (#(":" 0 1 (fontified t)) . -4262) (undo-tree-id32688 . -1) (undo-tree-id32689 . -1) (undo-tree-id32690 . -1) (undo-tree-id32691 . -1) 4263) nil (25944 55516 992390 0) 0 nil])
([nil nil ((4261 . 4263)) nil (25944 55516 992371 0) 0 nil])
([nil nil ((4262 . 4269)) nil (25944 55516 992370 0) 0 nil])
([nil nil ((4269 . 4273)) nil (25944 55516 992368 0) 0 nil])
([nil nil ((4275 . 4276)) nil (25944 55516 992364 0) 0 nil])
([nil nil ((#("&" 0 1 (face rust-ampersand-face fontified t)) . -4329) (undo-tree-id32722 . -1) (undo-tree-id32723 . -1) (undo-tree-id32724 . -1) (undo-tree-id32725 . -1) (undo-tree-id32726 . -1) (undo-tree-id32727 . -1) (undo-tree-id32728 . -1) (undo-tree-id32729 . -1) (undo-tree-id32730 . -1) (undo-tree-id32731 . -1) (undo-tree-id32732 . -1) (undo-tree-id32733 . -1) (undo-tree-id32734 . -1) (undo-tree-id32735 . -1) (undo-tree-id32736 . -1) (undo-tree-id32737 . -1) (undo-tree-id32738 . -1) (undo-tree-id32739 . -1) (undo-tree-id32740 . -1) (undo-tree-id32741 . -1) 4330 (t 25944 55517 61704 628000)) nil (25944 55540 132065 0) 0 nil])
([nil nil ((4329 . 4330) (t 25944 55540 202187 879000)) nil (25944 55582 736225 0) 0 nil])
([nil nil ((4329 . 4331)) nil (25944 55582 736224 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -4329) (undo-tree-id32971 . -1) (undo-tree-id32972 . -1) (undo-tree-id32973 . -1) (undo-tree-id32974 . -1) (undo-tree-id32975 . -1) (undo-tree-id32976 . -1) (undo-tree-id32977 . -1) (undo-tree-id32978 . -1) (undo-tree-id32979 . -1) (undo-tree-id32980 . -1) (undo-tree-id32981 . -1) (undo-tree-id32982 . -1) (undo-tree-id32983 . -1) (undo-tree-id32984 . -1) (undo-tree-id32985 . -1) (undo-tree-id32986 . -1) (undo-tree-id32987 . -1) (#("a" 0 1 (fontified t)) . -4330) (undo-tree-id32988 . -1) (undo-tree-id32989 . -1) (undo-tree-id32990 . -1) (undo-tree-id32991 . -1) (undo-tree-id32992 . -1) (undo-tree-id32993 . -1) (undo-tree-id32994 . -1) (undo-tree-id32995 . -1) (undo-tree-id32996 . -1) 4331) nil (25944 55582 736222 0) 0 nil])
([nil nil ((4329 . 4333)) nil (25944 55582 736195 0) 0 nil])
([nil nil ((4329 . 4336) (#("Payl" 0 4 (fontified nil)) . 4329) (4329 . 4333) (#("Payload" 0 7 (fontified nil)) . -4329) (4329 . 4336) (#("Payl" 0 4 (face font-lock-type-face fontified t)) . -4329) (undo-tree-id32957 . -2) (undo-tree-id32958 . -4) (undo-tree-id32959 . -1) (undo-tree-id32960 . -1) (undo-tree-id32961 . -1) (undo-tree-id32962 . -1) (undo-tree-id32963 . -1) (undo-tree-id32964 . -2) (undo-tree-id32965 . -2) (undo-tree-id32966 . -2) (undo-tree-id32967 . -3) (undo-tree-id32968 . -3) (undo-tree-id32969 . -4) (undo-tree-id32970 . -4) 4333) nil (25944 55582 736193 0) 0 nil])
([nil nil ((4336 . 4338)) nil (25944 55582 736176 0) 0 nil])
([nil nil ((4337 . 4338)) nil (25944 55582 736175 0) 0 nil])
([nil nil ((4337 . 4344) (#("m" 0 1 (fontified nil)) . 4337) (4337 . 4338) (#("message" 0 7 (fontified nil)) . -4337) (4337 . 4344) (#("m" 0 1 (fontified t)) . -4337) (undo-tree-id32950 . -1) (undo-tree-id32951 . -1) (undo-tree-id32952 . -1) (undo-tree-id32953 . -1) (undo-tree-id32954 . -1) (undo-tree-id32955 . -1) (undo-tree-id32956 . -1) 4338) nil (25944 55582 736173 0) 0 nil])
([nil nil ((4344 . 4346)) nil (25944 55582 736164 0) 0 nil])
([nil nil ((#("index.to_string()" 0 6 (fontified t) 6 17 (fontified t)) . 4348) (undo-tree-id32867 . -17) (undo-tree-id32868 . -1) (undo-tree-id32869 . -1) (undo-tree-id32870 . -1) (undo-tree-id32871 . -1) (undo-tree-id32872 . -1) (undo-tree-id32873 . -1) (undo-tree-id32874 . -1) (undo-tree-id32875 . -1) (undo-tree-id32876 . -1) (undo-tree-id32877 . -1) (undo-tree-id32878 . -1) (undo-tree-id32879 . -1) (undo-tree-id32880 . -1) (undo-tree-id32881 . -1) (undo-tree-id32882 . -1) (undo-tree-id32883 . -1) (undo-tree-id32884 . -1) (undo-tree-id32885 . -2) (undo-tree-id32886 . -3) (undo-tree-id32887 . -4) (undo-tree-id32888 . -4) (undo-tree-id32889 . -4) (undo-tree-id32890 . -4) (undo-tree-id32891 . -4) (undo-tree-id32892 . -8) (undo-tree-id32893 . -9) (undo-tree-id32894 . -10) (undo-tree-id32895 . -11) (undo-tree-id32896 . -12) (undo-tree-id32897 . -13) (undo-tree-id32898 . -14) (undo-tree-id32899 . -15) (undo-tree-id32900 . -16) (undo-tree-id32901 . -17) (undo-tree-id32902 . -17) (undo-tree-id32903 . -17) (undo-tree-id32904 . -17) (undo-tree-id32905 . -17) (undo-tree-id32906 . -17) (undo-tree-id32907 . -17) (undo-tree-id32908 . -17) (undo-tree-id32909 . -17) (undo-tree-id32910 . -17) (undo-tree-id32911 . -17) (undo-tree-id32912 . -17) (undo-tree-id32913 . -17) (undo-tree-id32914 . -17) (undo-tree-id32915 . -17) (undo-tree-id32916 . -17) (undo-tree-id32917 . -17) (undo-tree-id32918 . -17) (undo-tree-id32919 . -17) (undo-tree-id32920 . -17) (undo-tree-id32921 . -17) (undo-tree-id32922 . -17) (undo-tree-id32923 . -17) (undo-tree-id32924 . -17) (undo-tree-id32925 . -17) (undo-tree-id32926 . -17) (undo-tree-id32927 . -17) (undo-tree-id32928 . -1) (undo-tree-id32929 . -2) (undo-tree-id32930 . -4) (undo-tree-id32931 . -5) (undo-tree-id32932 . -7) (undo-tree-id32933 . -8) (undo-tree-id32934 . -9) (undo-tree-id32935 . -10) (undo-tree-id32936 . -11) (undo-tree-id32937 . -12) (undo-tree-id32938 . -13) (undo-tree-id32939 . -14) (undo-tree-id32940 . -15) (undo-tree-id32941 . -17) (undo-tree-id32942 . -17) (undo-tree-id32943 . -17) (undo-tree-id32944 . -17) (undo-tree-id32945 . -17) (undo-tree-id32946 . -17) (undo-tree-id32947 . -17) (undo-tree-id32948 . -17) (undo-tree-id32949 . -17) 4365) nil (25944 55582 736159 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 4362 . 4363) (nil fontified nil 4352 . 4363) (nil fontified nil 4346 . 4352) (4346 . 4363)) nil (25944 55582 736063 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4364) (undo-tree-id32742 . -1) (undo-tree-id32743 . -1) (undo-tree-id32744 . -1) (undo-tree-id32745 . -1) (undo-tree-id32746 . -1) (undo-tree-id32747 . -1) (undo-tree-id32748 . -1) (undo-tree-id32749 . -1) (undo-tree-id32750 . -1) (undo-tree-id32751 . -1) (undo-tree-id32752 . -1) (undo-tree-id32753 . -1) (undo-tree-id32754 . -1) (undo-tree-id32755 . -1) (undo-tree-id32756 . -1) (undo-tree-id32757 . -1) (undo-tree-id32758 . -1) (undo-tree-id32759 . -1) (undo-tree-id32760 . -1) (undo-tree-id32761 . -1) (undo-tree-id32762 . -1) (undo-tree-id32763 . -1) (undo-tree-id32764 . -1) (undo-tree-id32765 . -1) (undo-tree-id32766 . -1) (undo-tree-id32767 . -1) (undo-tree-id32768 . -1) (undo-tree-id32769 . -1) (undo-tree-id32770 . -1) (undo-tree-id32771 . -1) (undo-tree-id32772 . -1) (undo-tree-id32773 . -1) (undo-tree-id32774 . -1) (undo-tree-id32775 . -1) (undo-tree-id32776 . -1) (undo-tree-id32777 . -1) (undo-tree-id32778 . -1) (undo-tree-id32779 . -1) (undo-tree-id32780 . -1) (undo-tree-id32781 . -1) (undo-tree-id32782 . -1) (undo-tree-id32783 . -1) (undo-tree-id32784 . -1) (undo-tree-id32785 . -1) (undo-tree-id32786 . -1) (undo-tree-id32787 . -1) (undo-tree-id32788 . -1) (undo-tree-id32789 . -1) (undo-tree-id32790 . -1) (undo-tree-id32791 . -1) (undo-tree-id32792 . -1) (undo-tree-id32793 . -1) (undo-tree-id32794 . -1) (undo-tree-id32795 . -1) (undo-tree-id32796 . -1) (undo-tree-id32797 . -1) (undo-tree-id32798 . -1) (undo-tree-id32799 . -1) (undo-tree-id32800 . -1) (undo-tree-id32801 . -1) (undo-tree-id32802 . -1) (undo-tree-id32803 . -1) (undo-tree-id32804 . -1) (undo-tree-id32805 . -1) (undo-tree-id32806 . -1) (undo-tree-id32807 . -1) (undo-tree-id32808 . -1) (undo-tree-id32809 . -1) (undo-tree-id32810 . -1) (undo-tree-id32811 . -1) (undo-tree-id32812 . -1) (undo-tree-id32813 . -1) (undo-tree-id32814 . -1) (undo-tree-id32815 . -1) (undo-tree-id32816 . -1) (undo-tree-id32817 . -1) (undo-tree-id32818 . -1) (undo-tree-id32819 . -1) (undo-tree-id32820 . -1) (undo-tree-id32821 . -1) (undo-tree-id32822 . -1) (undo-tree-id32823 . -1) (undo-tree-id32824 . -1) (undo-tree-id32825 . -1) (undo-tree-id32826 . -1) (undo-tree-id32827 . -1) (undo-tree-id32828 . -1) (undo-tree-id32829 . -1) (undo-tree-id32830 . -1) (undo-tree-id32831 . -1) (undo-tree-id32832 . -1) (undo-tree-id32833 . -1) (undo-tree-id32834 . -1) (undo-tree-id32835 . -1) (undo-tree-id32836 . -1) (undo-tree-id32837 . -1) (undo-tree-id32838 . -1) (undo-tree-id32839 . -1) (undo-tree-id32840 . -1) (undo-tree-id32841 . -1) (undo-tree-id32842 . -1) (undo-tree-id32843 . -1) (undo-tree-id32844 . -1) (undo-tree-id32845 . -1) (undo-tree-id32846 . -1) (undo-tree-id32847 . -1) (undo-tree-id32848 . -1) (undo-tree-id32849 . -1) (undo-tree-id32850 . -1) (undo-tree-id32851 . -1) (undo-tree-id32852 . -1) (undo-tree-id32853 . -1) (undo-tree-id32854 . -1) (undo-tree-id32855 . -1) (undo-tree-id32856 . -1) (undo-tree-id32857 . -1) (undo-tree-id32858 . -1) (undo-tree-id32859 . -1) (undo-tree-id32860 . -1) (undo-tree-id32861 . -1) (undo-tree-id32862 . -1) (undo-tree-id32863 . -1) (undo-tree-id32864 . -1) (undo-tree-id32865 . -1) (undo-tree-id32866 . -1) 4365) nil (25944 55582 736055 0) 0 nil])
([nil nil ((4329 . 4330)) nil (25944 55582 735910 0) 0 nil])
([nil nil ((#("Payload" 0 7 (face font-lock-type-face fontified t)) . -4330) (undo-tree-id33037 . -7) (undo-tree-id33038 . -7) (undo-tree-id33039 . -7) (undo-tree-id33040 . -7) (undo-tree-id33041 . -7) (undo-tree-id33042 . -7) (undo-tree-id33043 . -7) (undo-tree-id33044 . -7) (undo-tree-id33045 . -7) (undo-tree-id33046 . -7) (undo-tree-id33047 . -7) (undo-tree-id33048 . -7) (undo-tree-id33049 . -7) (undo-tree-id33050 . -7) (undo-tree-id33051 . -7) (undo-tree-id33052 . -7) 4337 (t 25944 55582 806311 484000)) nil (25944 55631 84025 0) 0 nil])
([nil nil ((4330 . 4331)) nil (25944 55631 84006 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -4330) (undo-tree-id33033 . -1) (undo-tree-id33034 . -1) (undo-tree-id33035 . -1) (undo-tree-id33036 . -1) 4331) nil (25944 55631 84005 0) 0 nil])
([nil nil ((4330 . 4334)) nil (25944 55631 83999 0) 0 nil])
([nil nil ((4330 . 4341) (#("Mess" 0 4 (fontified nil)) . 4330) (4330 . 4334) (#("MessageArgs" 0 11 (fontified nil)) . -4330) (4330 . 4341) (#("Mess" 0 4 (face font-lock-type-face fontified t)) . -4330) (undo-tree-id33020 . -4) (undo-tree-id33021 . -4) (undo-tree-id33022 . -1) (undo-tree-id33023 . -2) (undo-tree-id33024 . -2) (undo-tree-id33025 . -3) (undo-tree-id33026 . -3) (undo-tree-id33027 . -4) (undo-tree-id33028 . -4) (undo-tree-id33029 . -4) (undo-tree-id33030 . -4) (undo-tree-id33031 . -4) (undo-tree-id33032 . -4) 4334) nil (25944 55631 83997 0) 0 nil])
([nil nil ((#("message" 0 7 (face font-lock-variable-name-face fontified t)) . -4342) (undo-tree-id33013 . -7) (undo-tree-id33014 . -7) (undo-tree-id33015 . -7) (undo-tree-id33016 . -7) (undo-tree-id33017 . -7) (undo-tree-id33018 . -7) (undo-tree-id33019 . -7) 4349) nil (25944 55631 83980 0) 0 nil])
([nil nil ((4342 . 4343)) nil (25944 55631 83972 0) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-variable-name-face fontified t)) . -4342) (undo-tree-id33004 . -1) (undo-tree-id33005 . -1) (undo-tree-id33006 . -1) (undo-tree-id33007 . -1) (undo-tree-id33008 . -1) (undo-tree-id33009 . -1) (undo-tree-id33010 . -1) (undo-tree-id33011 . -1) (undo-tree-id33012 . -1) 4343) nil (25944 55631 83970 0) 0 nil])
([nil nil ((4342 . 4345)) nil (25944 55631 83959 0) 0 nil])
([nil nil ((4342 . 4349) (#("pay" 0 3 (fontified nil)) . 4342) (4342 . 4345) (#("payload" 0 7 (fontified nil)) . -4342) (4342 . 4349) (#("pay" 0 3 (face font-lock-variable-name-face fontified t)) . -4342) (undo-tree-id32997 . -1) (undo-tree-id32998 . -3) (undo-tree-id32999 . -1) (undo-tree-id33000 . -2) (undo-tree-id33001 . -2) (undo-tree-id33002 . -3) (undo-tree-id33003 . -3) 4345) nil (25944 55631 83954 0) 0 nil])
([nil nil ((#("string()" 0 7 (fontified t) 7 8 (rear-nonsticky t fontified t)) . -4360) (undo-tree-id33219 . -8) (undo-tree-id33220 . -8) (undo-tree-id33221 . -8) (undo-tree-id33222 . -8) (undo-tree-id33223 . -8) (undo-tree-id33224 . -8) (undo-tree-id33225 . -8) (undo-tree-id33226 . -8) (undo-tree-id33227 . -8) (undo-tree-id33228 . -8) (undo-tree-id33229 . -8) (undo-tree-id33230 . -8) (undo-tree-id33231 . -8) (undo-tree-id33232 . -8) (undo-tree-id33233 . -8) (undo-tree-id33234 . -8) (undo-tree-id33235 . -8) (undo-tree-id33236 . -8) 4368 (t 25944 55631 155051 589000)) nil (25944 55651 760886 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -4357) (undo-tree-id33143 . -1) (undo-tree-id33144 . -1) (undo-tree-id33145 . -1) (undo-tree-id33146 . -1) (undo-tree-id33147 . -1) (undo-tree-id33148 . -1) (undo-tree-id33149 . -1) (undo-tree-id33150 . -1) (undo-tree-id33151 . -1) (undo-tree-id33152 . -1) (undo-tree-id33153 . -1) (undo-tree-id33154 . -1) (undo-tree-id33155 . -1) (undo-tree-id33156 . -1) (undo-tree-id33157 . -1) (undo-tree-id33158 . -1) (undo-tree-id33159 . -1) (undo-tree-id33160 . -1) (undo-tree-id33161 . -1) (undo-tree-id33162 . -1) (undo-tree-id33163 . -1) (undo-tree-id33164 . -1) (undo-tree-id33165 . -1) (undo-tree-id33166 . -1) (undo-tree-id33167 . -1) (undo-tree-id33168 . -1) (undo-tree-id33169 . -1) (undo-tree-id33170 . -1) (undo-tree-id33171 . -1) (#("o" 0 1 (fontified t)) . -4358) (undo-tree-id33172 . -1) (undo-tree-id33173 . -1) (undo-tree-id33174 . -1) (undo-tree-id33175 . -1) (undo-tree-id33176 . -1) (undo-tree-id33177 . -1) (undo-tree-id33178 . -1) (undo-tree-id33179 . -1) (undo-tree-id33180 . -1) (undo-tree-id33181 . -1) (undo-tree-id33182 . -1) (undo-tree-id33183 . -1) (undo-tree-id33184 . -1) (undo-tree-id33185 . -1) (undo-tree-id33186 . -1) (undo-tree-id33187 . -1) (undo-tree-id33188 . -1) (undo-tree-id33189 . -1) (undo-tree-id33190 . -1) (undo-tree-id33191 . -1) (undo-tree-id33192 . -1) (undo-tree-id33193 . -1) (undo-tree-id33194 . -1) (undo-tree-id33195 . -1) (#("_" 0 1 (fontified t)) . -4359) (undo-tree-id33196 . -1) (undo-tree-id33197 . -1) (undo-tree-id33198 . -1) (undo-tree-id33199 . -1) (undo-tree-id33200 . -1) (undo-tree-id33201 . -1) (undo-tree-id33202 . -1) (undo-tree-id33203 . -1) (undo-tree-id33204 . -1) (undo-tree-id33205 . -1) (undo-tree-id33206 . -1) (undo-tree-id33207 . -1) (undo-tree-id33208 . -1) (undo-tree-id33209 . -1) (undo-tree-id33210 . -1) (undo-tree-id33211 . -1) (undo-tree-id33212 . -1) (undo-tree-id33213 . -1) (undo-tree-id33214 . -1) (undo-tree-id33215 . -1) (undo-tree-id33216 . -1) (undo-tree-id33217 . -1) (undo-tree-id33218 . -1) 4360) nil (25944 55651 760864 0) 0 nil])
([nil nil ((4357 . 4359)) nil (25944 55651 760785 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4357) (undo-tree-id33107 . -1) (undo-tree-id33108 . -1) (undo-tree-id33109 . -1) (undo-tree-id33110 . -1) (undo-tree-id33111 . -1) (undo-tree-id33112 . -1) (undo-tree-id33113 . -1) (undo-tree-id33114 . -1) (undo-tree-id33115 . -1) (undo-tree-id33116 . -1) (undo-tree-id33117 . -1) (undo-tree-id33118 . -1) (undo-tree-id33119 . -1) (undo-tree-id33120 . -1) (undo-tree-id33121 . -1) (undo-tree-id33122 . -1) (undo-tree-id33123 . -1) (undo-tree-id33124 . -1) (undo-tree-id33125 . -1) (undo-tree-id33126 . -1) (undo-tree-id33127 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -4358) (undo-tree-id33128 . -1) (undo-tree-id33129 . -1) (undo-tree-id33130 . -1) (undo-tree-id33131 . -1) (undo-tree-id33132 . -1) (undo-tree-id33133 . -1) (undo-tree-id33134 . -1) (undo-tree-id33135 . -1) (undo-tree-id33136 . -1) (undo-tree-id33137 . -1) (undo-tree-id33138 . -1) (undo-tree-id33139 . -1) (undo-tree-id33140 . -1) (undo-tree-id33141 . -1) (undo-tree-id33142 . -1) 4359) nil (25944 55651 760782 0) 0 nil])
([nil nil ((4357 . 4360)) nil (25944 55651 760742 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4357 4368 #s(yas--snippet nil nil #s(yas--exit 4368 nil) 170 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 4368 nil) 170 nil nil nil nil)) (4357 . 4368) (#("to_string()$0" 0 13 (fontified nil)) . 4357) (4357 . 4370) (#("str" 0 3 (fontified nil)) . 4357) (4357 . 4360) (#("to_string() (as ToString)" 0 25 (fontified nil)) . -4357) (4357 . 4382) (#("str" 0 3 (face font-lock-type-face fontified t)) . -4357) (undo-tree-id33090 . -3) (undo-tree-id33091 . -3) (undo-tree-id33092 . -1) (undo-tree-id33093 . -2) (undo-tree-id33094 . -2) (undo-tree-id33095 . -2) (undo-tree-id33096 . -2) (undo-tree-id33097 . -2) (undo-tree-id33098 . -2) (undo-tree-id33099 . -3) (undo-tree-id33100 . -3) (undo-tree-id33101 . -3) (undo-tree-id33102 . -3) (undo-tree-id33103 . -3) (undo-tree-id33104 . -3) (undo-tree-id33105 . -3) (undo-tree-id33106 . -3) 4360) nil (25944 55651 760739 0) 0 nil])
([nil nil ((4368 . 4371)) nil (25944 55651 760718 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4369) (undo-tree-id33065 . -1) (undo-tree-id33066 . -1) (undo-tree-id33067 . -1) (undo-tree-id33068 . -1) (undo-tree-id33069 . -1) (undo-tree-id33070 . -1) (undo-tree-id33071 . -1) (undo-tree-id33072 . -1) (undo-tree-id33073 . -1) (undo-tree-id33074 . -1) (undo-tree-id33075 . -1) (undo-tree-id33076 . -1) (undo-tree-id33077 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -4370) (undo-tree-id33078 . -1) (undo-tree-id33079 . -1) (undo-tree-id33080 . -1) (undo-tree-id33081 . -1) (undo-tree-id33082 . -1) (undo-tree-id33083 . -1) (undo-tree-id33084 . -1) (undo-tree-id33085 . -1) (undo-tree-id33086 . -1) (undo-tree-id33087 . -1) (undo-tree-id33088 . -1) (undo-tree-id33089 . -1) 4371) nil (25944 55651 760715 0) 0 nil])
([nil nil ((4369 . 4372)) nil (25944 55651 760688 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4369 4377 #s(yas--snippet nil nil #s(yas--exit 4377 nil) 171 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 4377 nil) 171 nil nil nil nil)) (4369 . 4377) (#("as_str()$0" 0 10 (fontified nil)) . 4369) (4369 . 4379) (#("str" 0 3 (fontified nil)) . 4369) (4369 . 4372) (#("as_str()" 0 8 (fontified nil)) . -4369) (4369 . 4377) (#("str" 0 3 (face font-lock-type-face fontified t)) . -4369) (undo-tree-id33053 . -3) (undo-tree-id33054 . -1) (undo-tree-id33055 . -1) (undo-tree-id33056 . -1) (undo-tree-id33057 . -2) (undo-tree-id33058 . -2) (undo-tree-id33059 . -2) (undo-tree-id33060 . -2) (undo-tree-id33061 . -3) (undo-tree-id33062 . -3) (undo-tree-id33063 . -3) (undo-tree-id33064 . -3) 4372) nil (25944 55651 760683 0) 0 nil])
([nil nil ((4351 . 4354) (t 25944 55651 831236 154000)) nil (25944 56274 572639 0) 0 nil])
([nil nil ((#("K" 0 1 (face font-lock-type-face fontified t)) . -4351) (undo-tree-id33242 . -1) (undo-tree-id33243 . -1) (undo-tree-id33244 . -1) (undo-tree-id33245 . -1) (undo-tree-id33246 . -1) (undo-tree-id33247 . -1) (undo-tree-id33248 . -1) (undo-tree-id33249 . -1) (undo-tree-id33250 . -1) (undo-tree-id33251 . -1) (undo-tree-id33252 . -1) (undo-tree-id33253 . -1) (undo-tree-id33254 . -1) (undo-tree-id33255 . -1) (#("E" 0 1 (face font-lock-type-face fontified t)) . -4352) (undo-tree-id33256 . -1) (undo-tree-id33257 . -1) (undo-tree-id33258 . -1) (undo-tree-id33259 . -1) (undo-tree-id33260 . -1) (undo-tree-id33261 . -1) (undo-tree-id33262 . -1) (undo-tree-id33263 . -1) (undo-tree-id33264 . -1) (undo-tree-id33265 . -1) (undo-tree-id33266 . -1) (#("Y" 0 1 (face font-lock-type-face fontified t)) . -4353) (undo-tree-id33267 . -1) (undo-tree-id33268 . -1) (undo-tree-id33269 . -1) (undo-tree-id33270 . -1) (undo-tree-id33271 . -1) (undo-tree-id33272 . -1) (undo-tree-id33273 . -1) 4354) nil (25944 56274 572636 0) 0 nil])
([nil nil ((249 . 251)) nil (25944 56274 572601 0) 0 nil])
([nil nil ((250 . 256) (#("K" 0 1 (fontified nil)) . 250) (250 . 251) (#("KEYMAP" 0 6 (fontified nil)) . -250) (250 . 256) (#("K" 0 1 (face font-lock-type-face fontified t)) . -250) (undo-tree-id33237 . -1) (undo-tree-id33238 . -1) (undo-tree-id33239 . -1) (undo-tree-id33240 . -1) (undo-tree-id33241 . -1) 251) nil (25944 56274 572598 0) 0 nil])
([nil nil ((256 . 257)) nil (25944 56274 572569 0) 0 nil])
([nil nil ((4359 . 4360) (t 25944 56274 644466 514000)) nil (25944 56284 869350 0) 0 nil])
([nil nil ((4359 . 4365) (#("Kindex" 0 1 (fontified nil) 1 6 (face font-lock-type-face fontified nil)) . 4359) (undo-tree-id33278 . 5) (4359 . 4360) (#("KEYMAP" 0 6 (fontified nil)) . -4359) (4359 . 4365) (#("K" 0 1 (face font-lock-type-face fontified t)) . -4359) (undo-tree-id33279 . -1) (undo-tree-id33280 . -1) (undo-tree-id33281 . -1) (undo-tree-id33282 . -1) (undo-tree-id33283 . -1) (undo-tree-id33284 . -1) 4360) nil (25944 56284 869348 0) 0 nil])
([nil nil ((4365 . 4367)) nil (25944 56284 869338 0) 0 nil])
([nil nil ((4366 . 4367)) nil (25944 56284 869337 0) 0 nil])
([nil nil ((4366 . 4371) (#("i" 0 1 (fontified nil)) . 4366) (4366 . 4367) (#("index" 0 5 (fontified nil)) . -4366) (4366 . 4371) (#("i" 0 1 (fontified t)) . -4366) (undo-tree-id33274 . -1) (undo-tree-id33275 . -1) (undo-tree-id33276 . -1) (undo-tree-id33277 . -1) 4367) nil (25944 57792 201281 0) 0 nil])
([nil nil ((#("key" 0 3 (fontified t)) . -5217) (undo-tree-id33706 . -3) (undo-tree-id33707 . -3) (undo-tree-id33708 . -3) (undo-tree-id33709 . -3) (undo-tree-id33710 . -3) (undo-tree-id33711 . -3) (undo-tree-id33712 . -3) (undo-tree-id33713 . -3) (undo-tree-id33714 . -3) (undo-tree-id33715 . -3) (undo-tree-id33716 . -3) (undo-tree-id33717 . -3) (undo-tree-id33718 . -3) (undo-tree-id33719 . -3) (undo-tree-id33720 . -3) (undo-tree-id33721 . -3) 5220 (t 25944 57793 581448 465000)) nil (25944 57978 32005 0) 0 nil] [nil nil ((#("key" 0 3 (fontified t)) . -5217) (undo-tree-id33406 . -3) (undo-tree-id33407 . -3) (undo-tree-id33408 . -3) (undo-tree-id33410 . -3) (undo-tree-id33412 . -3) (undo-tree-id33413 . -3) (undo-tree-id33415 . -3) (undo-tree-id33417 . -3) (undo-tree-id33419 . -3) (undo-tree-id33421 . -3) (undo-tree-id33423 . -3) (undo-tree-id33425 . -3) (undo-tree-id33427 . -3) (undo-tree-id33429 . -3) (undo-tree-id33431 . -3) (undo-tree-id33433 . -3) (undo-tree-id33435 . -3) (undo-tree-id33437 . -3) (undo-tree-id33439 . -3) (undo-tree-id33441 . -3) (undo-tree-id33443 . -3) (undo-tree-id33445 . -3) (undo-tree-id33447 . -3) (undo-tree-id33449 . -3) (undo-tree-id33451 . -3) (undo-tree-id33453 . -3) (undo-tree-id33455 . -3) (undo-tree-id33457 . -3) (undo-tree-id33459 . -3) (undo-tree-id33461 . -3) (undo-tree-id33463 . -3) (undo-tree-id33465 . -3) (undo-tree-id33467 . -3) (undo-tree-id33469 . -3) (undo-tree-id33471 . -3) (undo-tree-id33473 . -3) (undo-tree-id33475 . -3) (undo-tree-id33477 . -3) (undo-tree-id33479 . -3) 5220 (t 25944 56284 941652 5000)) ((5217 . 5220)) (25944 57791 506924 0) 0 nil])
([nil nil ((#("bind_" 0 5 (fontified t)) . -5212) (undo-tree-id33687 . -5) (undo-tree-id33688 . -5) (undo-tree-id33689 . -5) (undo-tree-id33690 . -5) (undo-tree-id33691 . -5) (undo-tree-id33692 . -5) (undo-tree-id33693 . -5) (undo-tree-id33694 . -5) (undo-tree-id33695 . -5) (undo-tree-id33696 . -5) (undo-tree-id33697 . -5) (undo-tree-id33698 . -5) (undo-tree-id33699 . -5) (undo-tree-id33700 . -5) (undo-tree-id33701 . -5) (undo-tree-id33702 . -5) (undo-tree-id33703 . -5) (undo-tree-id33704 . -5) (undo-tree-id33705 . -5) 5217) nil (25944 57978 31987 0) 0 nil])
([nil nil ((#("bind_" 0 5 (fontified t)) . -5212) (undo-tree-id33309 . -5) (undo-tree-id33310 . -5) (undo-tree-id33312 . -5) (undo-tree-id33314 . -5) (undo-tree-id33316 . -5) (undo-tree-id33318 . -5) (undo-tree-id33320 . -5) (undo-tree-id33322 . -5) (undo-tree-id33324 . -5) (undo-tree-id33326 . -5) (undo-tree-id33328 . -5) (undo-tree-id33330 . -5) (undo-tree-id33332 . -5) (undo-tree-id33334 . -5) (undo-tree-id33336 . -5) (undo-tree-id33337 . -5) (undo-tree-id33339 . -5) (undo-tree-id33341 . -5) (undo-tree-id33343 . -5) (undo-tree-id33345 . -5) (undo-tree-id33347 . -5) (undo-tree-id33349 . -5) (undo-tree-id33351 . -5) (undo-tree-id33353 . -5) (undo-tree-id33355 . -5) (undo-tree-id33357 . -5) (undo-tree-id33359 . -5) (undo-tree-id33361 . -5) (undo-tree-id33363 . -5) (undo-tree-id33365 . -5) (undo-tree-id33367 . -5) (undo-tree-id33369 . -5) (undo-tree-id33371 . -5) (undo-tree-id33373 . -5) (undo-tree-id33375 . -5) (undo-tree-id33377 . -5) (undo-tree-id33379 . -5) (undo-tree-id33381 . -5) (undo-tree-id33383 . -5) (undo-tree-id33385 . -5) (undo-tree-id33387 . -5) (undo-tree-id33389 . -5) (undo-tree-id33391 . -5) (undo-tree-id33393 . -5) (undo-tree-id33395 . -5) (undo-tree-id33397 . -5) (undo-tree-id33399 . -5) (undo-tree-id33401 . -5) (undo-tree-id33403 . -5) (undo-tree-id33405 . -5) 5217) ((5212 . 5217)) (25944 57791 112382 0) 0 nil])
([nil nil ((5212 . 5213)) nil (25944 57978 31965 0) 0 nil])
([nil nil ((5212 . 5217)) ((#("index" 0 5 (fontified t)) . 5212) (undo-tree-id33680 . -5) (undo-tree-id33681 . -5) (undo-tree-id33682 . -5)) (25944 57790 957642 0) 0 nil])
([nil nil ((5212 . 5220) (#("b" 0 1 (fontified nil)) . 5212) (5212 . 5213) (#("bind_key" 0 8 (fontified nil)) . -5212) (5212 . 5220) (#("b" 0 1 (fontified t)) . -5212) (undo-tree-id33683 . -1) (undo-tree-id33684 . -1) (undo-tree-id33685 . -1) (undo-tree-id33686 . -1) 5213) nil (25944 57978 31961 0) 0 nil])
([nil nil ((5212 . 5217) (#("index" 0 5 (fontified nil)) . 5212) (5212 . 5217) (#("index" 0 5 (fontified t)) . -5212) (undo-tree-id33285 . -5) (undo-tree-id33286 . -5) (undo-tree-id33288 . -2) (undo-tree-id33290 . -2) (undo-tree-id33292 . -2) (undo-tree-id33294 . -3) (undo-tree-id33296 . -4) (undo-tree-id33298 . -4) (undo-tree-id33300 . -4) (undo-tree-id33302 . -5) (undo-tree-id33304 . -5) (undo-tree-id33306 . -5) (undo-tree-id33308 . -5) 5217) ((5212 . 5217) (#("index" 0 5 (fontified nil)) . 5212) (5212 . 5217) (#("index" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 5212) (undo-tree-id33644 . -5) (undo-tree-id33645 . -5) (undo-tree-id33646 . -5) (undo-tree-id33647 . -5) (undo-tree-id33648 . -5) (undo-tree-id33649 . -5) (undo-tree-id33650 . -5) (undo-tree-id33651 . -5) (undo-tree-id33652 . -5) (undo-tree-id33653 . -5) (undo-tree-id33654 . -5) (undo-tree-id33655 . -5) (undo-tree-id33656 . -5) (undo-tree-id33657 . -5) (undo-tree-id33658 . -5) (undo-tree-id33659 . -5) (undo-tree-id33660 . -5) (undo-tree-id33661 . -5) (undo-tree-id33662 . -5) (undo-tree-id33663 . -5) (undo-tree-id33664 . -5) (undo-tree-id33665 . -5) (undo-tree-id33666 . -5) (undo-tree-id33667 . -5) (undo-tree-id33668 . -5) (undo-tree-id33669 . -5) (undo-tree-id33670 . -5) (undo-tree-id33671 . -5) (undo-tree-id33672 . -4) (undo-tree-id33673 . -3) (undo-tree-id33674 . -2) (undo-tree-id33675 . -1) (undo-tree-id33676 . -5) (undo-tree-id33677 . -5) (undo-tree-id33678 . -5) (undo-tree-id33679 . -5) (t 25944 57781 375536 184000)) (25944 57790 333978 0) 0 nil])
([nil nil ((10049 . 10053) (#("    " 0 4 (fontified nil)) . 10048) (undo-tree-id33792 . -4) (10047 . 10053) (t 25944 57978 103044 783000)) nil (25945 38280 566355 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -5212) (undo-tree-id33487 . -1) (undo-tree-id33488 . -1) (undo-tree-id33489 . -1) (undo-tree-id33490 . -1) (undo-tree-id33491 . -1) (undo-tree-id33492 . -1) (undo-tree-id33493 . -1) (undo-tree-id33494 . -1) (undo-tree-id33495 . -1) (undo-tree-id33496 . -1) (undo-tree-id33497 . -1) (undo-tree-id33498 . -1) (undo-tree-id33499 . -1) (undo-tree-id33500 . -1) (undo-tree-id33501 . -1) (undo-tree-id33502 . -1) (undo-tree-id33503 . -1) (undo-tree-id33504 . -1) (undo-tree-id33505 . -1) (undo-tree-id33506 . -1) (undo-tree-id33507 . -1) (undo-tree-id33508 . -1) (undo-tree-id33509 . -1) (undo-tree-id33510 . -1) (undo-tree-id33511 . -1) (undo-tree-id33512 . -1) (undo-tree-id33513 . -1) (undo-tree-id33514 . -1) (undo-tree-id33515 . -1) (undo-tree-id33516 . -1) (undo-tree-id33517 . -1) (undo-tree-id33518 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -5213) (undo-tree-id33519 . -1) (undo-tree-id33520 . -1) (undo-tree-id33521 . -1) (undo-tree-id33522 . -1) (undo-tree-id33523 . -1) (undo-tree-id33524 . -1) (undo-tree-id33525 . -1) (undo-tree-id33526 . -1) (undo-tree-id33527 . -1) (undo-tree-id33528 . -1) (undo-tree-id33529 . -1) (undo-tree-id33530 . -1) (undo-tree-id33531 . -1) (undo-tree-id33532 . -1) (undo-tree-id33533 . -1) (undo-tree-id33534 . -1) (undo-tree-id33535 . -1) (undo-tree-id33536 . -1) (undo-tree-id33537 . -1) (undo-tree-id33538 . -1) (undo-tree-id33539 . -1) (undo-tree-id33540 . -1) (undo-tree-id33541 . -1) (undo-tree-id33542 . -1) (undo-tree-id33543 . -1) (undo-tree-id33544 . -1) (undo-tree-id33545 . -1) (undo-tree-id33546 . -1) (undo-tree-id33547 . -1) (undo-tree-id33548 . -1) (undo-tree-id33549 . -1) (#("d" 0 1 (fontified t)) . -5214) (undo-tree-id33550 . -1) (undo-tree-id33551 . -1) (undo-tree-id33552 . -1) (undo-tree-id33553 . -1) (undo-tree-id33554 . -1) (undo-tree-id33555 . -1) (undo-tree-id33556 . -1) (undo-tree-id33557 . -1) (undo-tree-id33558 . -1) (undo-tree-id33559 . -1) (undo-tree-id33560 . -1) (undo-tree-id33561 . -1) (undo-tree-id33562 . -1) (undo-tree-id33563 . -1) (undo-tree-id33564 . -1) (undo-tree-id33565 . -1) (undo-tree-id33566 . -1) (undo-tree-id33567 . -1) (undo-tree-id33568 . -1) (undo-tree-id33569 . -1) (undo-tree-id33570 . -1) (undo-tree-id33571 . -1) (undo-tree-id33572 . -1) (undo-tree-id33573 . -1) (undo-tree-id33574 . -1) (undo-tree-id33575 . -1) (undo-tree-id33576 . -1) (undo-tree-id33577 . -1) (undo-tree-id33578 . -1) (undo-tree-id33579 . -1) (#("e" 0 1 (fontified t)) . -5215) (undo-tree-id33580 . -1) (undo-tree-id33581 . -1) (undo-tree-id33582 . -1) (undo-tree-id33583 . -1) (undo-tree-id33584 . -1) (undo-tree-id33585 . -1) (undo-tree-id33586 . -1) (undo-tree-id33587 . -1) (undo-tree-id33588 . -1) (undo-tree-id33589 . -1) (undo-tree-id33590 . -1) (undo-tree-id33591 . -1) (undo-tree-id33592 . -1) (undo-tree-id33593 . -1) (undo-tree-id33594 . -1) (undo-tree-id33595 . -1) (undo-tree-id33596 . -1) (undo-tree-id33597 . -1) (undo-tree-id33598 . -1) (undo-tree-id33599 . -1) (undo-tree-id33600 . -1) (undo-tree-id33601 . -1) (undo-tree-id33602 . -1) (undo-tree-id33603 . -1) (undo-tree-id33604 . -1) (undo-tree-id33605 . -1) (undo-tree-id33606 . -1) (undo-tree-id33607 . -1) (undo-tree-id33608 . -1) (#("x" 0 1 (fontified t)) . -5216) (undo-tree-id33609 . -1) (undo-tree-id33610 . -1) (undo-tree-id33611 . -1) (undo-tree-id33612 . -1) (undo-tree-id33613 . -1) (undo-tree-id33614 . -1) (undo-tree-id33615 . -1) (undo-tree-id33616 . -1) (undo-tree-id33617 . -1) (undo-tree-id33618 . -1) (undo-tree-id33619 . -1) (undo-tree-id33620 . -1) (undo-tree-id33621 . -1) (undo-tree-id33622 . -1) (undo-tree-id33623 . -1) (undo-tree-id33624 . -1) (undo-tree-id33625 . -1) (undo-tree-id33626 . -1) (undo-tree-id33627 . -1) (undo-tree-id33628 . -1) (undo-tree-id33629 . -1) (undo-tree-id33630 . -1) (undo-tree-id33631 . -1) (undo-tree-id33632 . -1) (undo-tree-id33633 . -1) (undo-tree-id33634 . -1) (undo-tree-id33635 . -1) (undo-tree-id33636 . -1) 5217 (t 25944 57781 375536 184000)) ((5212 . 5217)) (25944 57789 880664 0) 0 nil])
([nil nil ((10053 . 10063)) nil (25945 38280 566352 0) 0 nil])
([nil nil ((5212 . 5218)) ((#("bindke" 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 5212) (undo-tree-id33638 . -6) (undo-tree-id33639 . -5) (undo-tree-id33640 . -6) (undo-tree-id33641 . -5) (undo-tree-id33642 . -4) (undo-tree-id33643 . -6)) (25944 57789 559490 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 10067 10074 nil nil nil t #s(yas--exit 10075 nil))) #s(yas--exit 10075 nil) 186 nil #s(yas--field 1 10067 10074 nil nil nil t #s(yas--exit 10075 nil)) nil nil)) (10053 . 10069) (#("create_effect(${1:f})$0" 0 23 (fontified nil)) . 10053) (10053 . 10076) (#("create_eff" 0 10 (fontified nil)) . 10053) (10053 . 10063) (#("create_effect(…)" 0 16 (fontified nil)) . -10053) (10053 . 10069) (#("create_eff" 0 10 (fontified t)) . -10053) (undo-tree-id33791 . -10) 10063) nil (25945 38280 566350 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -5216) (undo-tree-id33481 . -1) (undo-tree-id33482 . -1) (undo-tree-id33483 . -1) (undo-tree-id33484 . -1) (#("e" 0 1 (fontified t)) . -5217) (undo-tree-id33485 . -1) (undo-tree-id33486 . -1) 5218) ((5216 . 5218)) (25944 57789 532324 0) 0 nil])
([nil nil ((10068 . 10069) (#("f" 0 1 (fontified nil)) . 10068) (10067 . 10068)) nil (25945 38280 566346 0) 0 nil])
([nil nil ((5216 . 5219)) ((#("key" 0 3 (fontified t)) . 5216) (undo-tree-id33637 . -3)) (25944 57789 531928 0) 0 nil])
([nil nil ((10067 . 10072)) nil (25945 38280 566344 0) 0 nil])
nil
([nil nil ((apply yas--snippet-revive 10053 10075 #s(yas--snippet nil (#s(yas--field 1 10067 10074 nil nil nil t #s(yas--exit 10075 nil))) #s(yas--exit 10075 nil) 186 nil #s(yas--field 1 10067 10074 nil nil nil t #s(yas--exit 10075 nil)) nil nil))) nil (25945 38280 566343 0) 0 nil])
([nil nil ((10075 . 10076)) nil (25945 38280 566343 0) 0 nil])
([nil nil ((10074 . 10077)) nil (25945 38280 566342 0) 0 nil])
([nil nil ((10078 . 10082) (#("	" 0 1 (fontified nil)) . 10077) (10077 . 10078) (#("    " 0 4 (fontified nil)) . 10077) (undo-tree-id33790 . -4) (10076 . 10082)) nil (25945 38280 566340 0) 0 nil])
([nil nil ((10077 . 10078)) nil (25945 38280 566337 0) 0 nil])
([nil nil ((10073 . 10074)) nil (25945 38280 566336 0) 0 nil])
([nil nil ((10079 . 10081)) nil (25945 38280 566335 0) 0 nil])
([nil nil ((10081 . 10084)) nil (25945 38280 566334 0) 0 nil])
([nil nil ((10082 . 10094) (#("se" 0 2 (fontified nil)) . 10082) (10082 . 10084) (#("selected_num" 0 12 (fontified nil)) . -10082) (10082 . 10094) (#("se" 0 2 (fontified t)) . -10082) (undo-tree-id33789 . -2) 10084) nil (25945 38280 566333 0) 0 nil])
([nil nil ((10094 . 10102)) nil (25945 38280 566329 0) 0 nil])
([nil nil ((10103 . 10104) (#("	    " 0 5 (fontified nil)) . 10102) (undo-tree-id33788 . -1) (10103 . 10107) (10101 . 10104)) nil (25945 38280 566328 0) 0 nil])
([nil nil ((10102 . 10107)) nil (25945 38280 566326 0) 0 nil])
([nil nil ((10107 . 10113)) nil (25945 38280 566325 0) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -10111) (undo-tree-id33786 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -10112) (undo-tree-id33787 . -1) 10113) nil (25945 38280 566323 0) 0 nil])
([nil nil ((10111 . 10119)) nil (25945 38280 566320 0) 0 nil])
([nil nil ((10119 . 10122)) nil (25945 38280 566319 0) 0 nil])
([nil nil ((10119 . 10133) (#("key" 0 3 (fontified nil)) . 10119) (10119 . 10122) (#("keyboard_state" 0 14 (fontified nil)) . -10119) (10119 . 10133) (#("key" 0 3 (fontified t)) . -10119) (undo-tree-id33785 . -3) 10122) nil (25945 38280 566317 0) 0 nil])
([nil nil ((10133 . 10137)) nil (25945 38280 566313 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10134 10139 #s(yas--snippet nil nil #s(yas--exit 10139 nil) 187 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10139 nil) 187 nil nil nil nil)) (10134 . 10139) (#("get()$0" 0 7 (fontified nil)) . 10134) (10134 . 10141) (#("get" 0 3 (fontified nil)) . 10134) (10134 . 10137) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -10134) (10134 . 10154) (#("get" 0 3 (fontified t)) . -10134) (undo-tree-id33784 . -3) 10137) nil (25945 38280 566311 0) 0 nil])
([nil nil ((10139 . 10141)) nil (25945 38280 566306 0) 0 nil])
([nil nil ((10140 . 10144) (#("k" 0 1 (fontified nil)) . 10140) (10140 . 10141) (#("keys" 0 4 (fontified nil)) . -10140) (10140 . 10144) (#("k" 0 1 (fontified t)) . -10140) (undo-tree-id33782 . -1) (undo-tree-id33783 . -1) 10141) nil (25945 38280 566305 0) 0 nil])
([nil nil ((10144 . 10146)) nil (25945 38280 566300 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -10145) (undo-tree-id33780 . -1) (undo-tree-id33781 . -1) 10146) nil (25945 38280 566299 0) 0 nil])
([nil nil ((10145 . 10146)) nil (25945 38280 566296 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -10145) (undo-tree-id33778 . -1) (undo-tree-id33779 . -1) 10146) nil (25945 38280 566294 0) 0 nil])
([nil nil ((10145 . 10149)) nil (25945 38280 566291 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10145 10151 #s(yas--snippet nil nil #s(yas--exit 10151 nil) 188 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10151 nil) 188 nil nil nil nil)) (10145 . 10151) (#("iter()$0" 0 8 (fontified nil)) . 10145) (10145 . 10153) (#("iter" 0 4 (fontified nil)) . 10145) (10145 . 10149) (#("iter()" 0 6 (fontified nil)) . -10145) (10145 . 10151) (#("iter" 0 4 (fontified t)) . -10145) (undo-tree-id33776 . -1) (undo-tree-id33777 . -4) 10149) nil (25945 38280 566289 0) 0 nil])
([nil nil ((10151 . 10153)) nil (25945 38280 566283 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -10152) (undo-tree-id33774 . -1) (undo-tree-id33775 . -1) 10153) nil (25945 38280 566282 0) 0 nil])
([nil nil ((10152 . 10153)) nil (25945 38280 566279 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 10157 10166 nil nil nil nil #s(yas--exit 10167 nil))) #s(yas--exit 10167 nil) 189 nil #s(yas--field 1 10157 10166 nil nil nil nil #s(yas--exit 10167 nil)) nil nil)) (10152 . 10167) (#("find(${1:predicate})$0" 0 22 (fontified nil)) . 10152) (10152 . 10174) (#("f" 0 1 (fontified nil)) . 10152) (10152 . 10153) (#("find(…) (as Iterator)" 0 21 (fontified nil)) . -10152) (10152 . 10173) (#("f" 0 1 (fontified t)) . -10152) (undo-tree-id33773 . -1) 10153) nil (25945 38280 566277 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10152 10167 #s(yas--snippet nil (#s(yas--field 1 10157 10166 nil nil nil nil #s(yas--exit 10167 nil))) #s(yas--exit 10167 nil) 189 nil #s(yas--field 1 10157 10166 nil nil nil nil #s(yas--exit 10167 nil)) nil nil))) nil (25945 38280 566273 0) 0 nil])
([nil nil ((#("predicate)" 0 10 (fontified t)) . -10157) (undo-tree-id33771 . -10) (undo-tree-id33772 . -10) 10167) nil (25945 38280 566271 0) 0 nil])
([nil nil ((#("find(" 0 5 (fontified t)) . -10152) (undo-tree-id33769 . -5) (undo-tree-id33770 . -5) 10157) nil (25945 38280 566268 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10151) (undo-tree-id33767 . -1) (undo-tree-id33768 . -1) 10152) nil (25945 38280 566264 0) 0 nil])
([nil nil ((10151 . 10153)) nil (25945 38280 566261 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10152 10163 #s(yas--snippet nil nil #s(yas--exit 10163 nil) 190 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10163 nil) 190 nil nil nil nil)) (10152 . 10163) (#("enumerate()$0" 0 13 (fontified nil)) . 10152) (10152 . 10165) (#("e" 0 1 (fontified nil)) . 10152) (10152 . 10153) (#("enumerate() (as Iterator)" 0 25 (fontified nil)) . -10152) (10152 . 10177) (#("e" 0 1 (fontified t)) . -10152) (undo-tree-id33765 . -1) (undo-tree-id33766 . -1) 10153) nil (25945 38280 566259 0) 0 nil])
([nil nil ((10163 . 10165)) nil (25945 38280 566254 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 10171 10200 nil nil nil t #s(yas--exit 10201 nil))) #s(yas--exit 10201 nil) 191 nil #s(yas--field 1 10171 10200 nil nil nil t #s(yas--exit 10201 nil)) nil nil)) (10164 . 10181) (#("filter(${1:predicate})$0" 0 24 (fontified nil)) . 10164) (10164 . 10188) (#("f" 0 1 (fontified nil)) . 10164) (10164 . 10165) (#("filter(…) (as Iterator)" 0 23 (fontified nil)) . -10164) (10164 . 10187) (#("f" 0 1 (fontified t)) . -10164) (undo-tree-id33763 . -1) (undo-tree-id33764 . -1) 10165) nil (25945 38280 566252 0) 0 nil])
([nil nil ((10172 . 10173) (#("predicate" 0 9 (fontified nil)) . 10172) (undo-tree-id33762 . -9) (10171 . 10172)) nil (25945 38280 566242 0) 0 nil])
([nil nil ((10172 . 10178)) nil (25945 38280 566239 0) 0 nil])
([nil nil ((10179 . 10180)) nil (25945 38280 566238 0) 0 nil])
([nil nil ((10180 . 10183)) nil (25945 38280 566237 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -10180) (undo-tree-id33753 . -1) (undo-tree-id33754 . -1) (undo-tree-id33755 . -1) (#("." 0 1 (fontified t)) . -10181) (undo-tree-id33756 . -1) (undo-tree-id33757 . -1) (undo-tree-id33758 . -1) (#("s" 0 1 (fontified t)) . -10182) (undo-tree-id33759 . -1) (undo-tree-id33760 . -1) (undo-tree-id33761 . -1) 10183) nil (25945 38280 566235 0) 0 nil])
([nil nil ((10178 . 10179)) nil (25945 38280 566225 0) 0 nil])
([nil nil ((10172 . 10173)) nil (25945 38280 566224 0) 0 nil])
([nil nil ((10182 . 10184)) nil (25945 38280 566223 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -10183) (undo-tree-id33750 . -1) (undo-tree-id33751 . -1) (undo-tree-id33752 . -1) 10184) nil (25945 38280 566222 0) 0 nil])
([nil nil ((10183 . 10185)) nil (25945 38280 566218 0) 0 nil])
([nil nil ((10184 . 10192) (#("s" 0 1 (fontified nil)) . 10184) (undo-tree-id33741 . -1) (10184 . 10185) (#("selected" 0 8 (fontified nil)) . -10184) (undo-tree-id33742 . -8) (10184 . 10192) (#("s" 0 1 (fontified t)) . -10184) (undo-tree-id33743 . -1) (undo-tree-id33744 . -1) (undo-tree-id33745 . -1) (undo-tree-id33746 . -1) (undo-tree-id33747 . -1) (undo-tree-id33748 . -1) (undo-tree-id33749 . -1) 10185) nil (25945 38280 566216 0) 0 nil])
([nil nil ((10192 . 10200)) nil (25945 38280 566203 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10196 10200 #s(yas--snippet nil nil nil 192 nil nil #s(yas--field 1 10171 10200 nil nil nil t #s(yas--exit 10201 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 192 nil nil #s(yas--field 1 10171 10200 nil nil nil t #s(yas--exit 10201 nil)) nil)) (10196 . 10200) (#("true" 0 4 (fontified nil)) . 10196) (undo-tree-id33722 . -4) (10196 . 10200) (#("true" 0 4 (fontified nil)) . 10196) (undo-tree-id33723 . -4) (10196 . 10200) (#("true" 0 4 (face font-lock-keyword-face fontified t)) . -10196) (undo-tree-id33724 . -4) (undo-tree-id33725 . -4) (undo-tree-id33726 . -1) (undo-tree-id33727 . -1) (undo-tree-id33728 . -1) (undo-tree-id33729 . -2) (undo-tree-id33730 . -2) (undo-tree-id33731 . -2) (undo-tree-id33732 . -2) (undo-tree-id33733 . -3) (undo-tree-id33734 . -3) (undo-tree-id33735 . -3) (undo-tree-id33736 . -3) (undo-tree-id33737 . -4) (undo-tree-id33738 . -4) (undo-tree-id33739 . -4) (undo-tree-id33740 . -4) 10200) nil (25945 38280 566200 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10164 10201 #s(yas--snippet nil (#s(yas--field 1 10171 10200 nil nil nil t #s(yas--exit 10201 nil))) #s(yas--exit 10201 nil) 191 nil #s(yas--field 1 10171 10200 nil nil nil t #s(yas--exit 10201 nil)) nil nil))) nil (25945 38280 566141 0) 0 nil])
([nil nil ((10201 . 10202)) nil (25945 38280 566136 0) 0 nil])
([nil nil ((10094 . 10096) (t 25945 38280 640486 554000)) nil (25945 38291 582901 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10095 10100 #s(yas--snippet nil nil #s(yas--exit 10100 nil) 193 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10100 nil) 193 nil nil nil nil)) (10095 . 10100) (#("get()$0" 0 7 (fontified nil)) . 10095) (10095 . 10102) (#("g" 0 1 (fontified nil)) . 10095) (10095 . 10096) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -10095) (10095 . 10115) (#("g" 0 1 (fontified t)) . -10095) (undo-tree-id33793 . -1) (undo-tree-id33794 . -1) (undo-tree-id33795 . -1) 10096) nil (25945 38291 582896 0) 0 nil])
([nil nil ((10208 . 10214) (t 25945 38291 655138 515000)) nil (25945 38360 412125 0) 0 nil])
([nil nil ((10214 . 10218)) nil (25945 38360 412124 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -10117) (undo-tree-id33867 . -1) (undo-tree-id33868 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -10118) (undo-tree-id33869 . -1) (undo-tree-id33870 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -10119) (undo-tree-id33871 . -1) (undo-tree-id33872 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -10120) (undo-tree-id33873 . -1) (undo-tree-id33874 . -1) (#("x" 0 1 (face font-lock-variable-name-face fontified t)) . -10121) (undo-tree-id33875 . -1) (undo-tree-id33876 . -1) 10122) nil (25945 38360 412121 0) 0 nil])
([nil nil ((10117 . 10122)) nil (25945 38360 412108 0) 0 nil])
([nil nil ((10122 . 10126)) nil (25945 38360 412107 0) 0 nil])
([nil nil ((10222 . 10233)) nil (25945 38360 412106 0) 0 nil])
([nil nil ((10230 . 10239) (#("sel" 0 3 (fontified nil)) . 10230) (10230 . 10233) (#("selecteds" 0 9 (fontified nil)) . -10230) (10230 . 10239) (#("sel" 0 3 (fontified t)) . -10230) (undo-tree-id33859 . -3) (undo-tree-id33860 . -1) (undo-tree-id33861 . -2) (undo-tree-id33862 . -2) (undo-tree-id33863 . -3) (undo-tree-id33864 . -3) (undo-tree-id33865 . -3) (undo-tree-id33866 . -3) 10233) nil (25945 38360 412104 0) 0 nil])
([nil nil ((10239 . 10241)) nil (25945 38360 412094 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -10239) (undo-tree-id33817 . -1) (undo-tree-id33818 . -1) (undo-tree-id33819 . -1) (undo-tree-id33820 . -1) (undo-tree-id33821 . -1) (undo-tree-id33822 . -1) (undo-tree-id33823 . -1) (undo-tree-id33824 . -1) (undo-tree-id33825 . -1) (undo-tree-id33826 . -1) (undo-tree-id33827 . -1) (undo-tree-id33828 . -1) (undo-tree-id33829 . -1) (undo-tree-id33830 . -1) (undo-tree-id33831 . -1) (undo-tree-id33832 . -1) (undo-tree-id33833 . -1) (undo-tree-id33834 . -1) (undo-tree-id33835 . -1) (undo-tree-id33836 . -1) (undo-tree-id33837 . -1) (undo-tree-id33838 . -1) (undo-tree-id33839 . -1) (undo-tree-id33840 . -1) (undo-tree-id33841 . -1) (undo-tree-id33842 . -1) (undo-tree-id33843 . -1) (#("[" 0 1 (fontified t)) . -10240) (undo-tree-id33844 . -1) (undo-tree-id33845 . -1) (undo-tree-id33846 . -1) (undo-tree-id33847 . -1) (undo-tree-id33848 . -1) (undo-tree-id33849 . -1) (undo-tree-id33850 . -1) (undo-tree-id33851 . -1) (undo-tree-id33852 . -1) (undo-tree-id33853 . -1) (undo-tree-id33854 . -1) (undo-tree-id33855 . -1) (undo-tree-id33856 . -1) (undo-tree-id33857 . -1) (undo-tree-id33858 . -1) 10241) nil (25945 38360 412090 0) 0 nil])
([nil nil ((10239 . 10241)) nil (25945 38360 412042 0) 0 nil])
([nil nil ((10240 . 10241)) nil (25945 38360 412041 0) 0 nil])
([nil nil ((10242 . 10244)) nil (25945 38360 412040 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10242) (undo-tree-id33796 . -1) (undo-tree-id33797 . -1) (undo-tree-id33798 . -1) (undo-tree-id33799 . -1) (undo-tree-id33800 . -1) (undo-tree-id33801 . -1) (undo-tree-id33802 . -1) (undo-tree-id33803 . -1) (undo-tree-id33804 . -1) (undo-tree-id33805 . -1) (undo-tree-id33806 . -1) (undo-tree-id33807 . -1) (undo-tree-id33808 . -1) (undo-tree-id33809 . -1) (#("u" 0 1 (fontified t)) . -10243) (undo-tree-id33810 . -1) (undo-tree-id33811 . -1) (undo-tree-id33812 . -1) (undo-tree-id33813 . -1) (undo-tree-id33814 . -1) (undo-tree-id33815 . -1) (undo-tree-id33816 . -1) 10244) nil (25945 38360 412037 0) 0 nil])
([nil nil ((10242 . 10243)) nil (25945 38360 412003 0) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -10239) (undo-tree-id33904 . -1) (undo-tree-id33905 . -1) (undo-tree-id33906 . -1) (undo-tree-id33907 . -1) (undo-tree-id33908 . -1) (undo-tree-id33909 . -1) (undo-tree-id33910 . -1) (undo-tree-id33911 . -1) (undo-tree-id33912 . -1) (undo-tree-id33913 . -1) (undo-tree-id33914 . -1) (undo-tree-id33915 . -1) (undo-tree-id33916 . -1) (undo-tree-id33917 . -1) (undo-tree-id33918 . -1) (undo-tree-id33919 . -1) (undo-tree-id33920 . -1) (undo-tree-id33921 . -1) (undo-tree-id33922 . -1) (undo-tree-id33923 . -1) (undo-tree-id33924 . -1) (undo-tree-id33925 . -1) (undo-tree-id33926 . -1) (undo-tree-id33927 . -1) (undo-tree-id33928 . -1) (undo-tree-id33929 . -1) (undo-tree-id33930 . -1) (undo-tree-id33931 . -1) (#("0" 0 1 (fontified t)) . -10240) (undo-tree-id33932 . -1) (undo-tree-id33933 . -1) (undo-tree-id33934 . -1) (undo-tree-id33935 . -1) (undo-tree-id33936 . -1) (undo-tree-id33937 . -1) (undo-tree-id33938 . -1) (undo-tree-id33939 . -1) (undo-tree-id33940 . -1) (undo-tree-id33941 . -1) (undo-tree-id33942 . -1) (undo-tree-id33943 . -1) (undo-tree-id33944 . -1) (undo-tree-id33945 . -1) (undo-tree-id33946 . -1) (undo-tree-id33947 . -1) (undo-tree-id33948 . -1) (undo-tree-id33949 . -1) (undo-tree-id33950 . -1) (undo-tree-id33951 . -1) (undo-tree-id33952 . -1) (undo-tree-id33953 . -1) (undo-tree-id33954 . -1) (undo-tree-id33955 . -1) (undo-tree-id33956 . -1) (undo-tree-id33957 . -1) (undo-tree-id33958 . -1) (#("]" 0 1 (fontified t)) . -10241) (undo-tree-id33959 . -1) (undo-tree-id33960 . -1) (undo-tree-id33961 . -1) (undo-tree-id33962 . -1) (undo-tree-id33963 . -1) (undo-tree-id33964 . -1) (undo-tree-id33965 . -1) (undo-tree-id33966 . -1) (undo-tree-id33967 . -1) (undo-tree-id33968 . -1) (undo-tree-id33969 . -1) (undo-tree-id33970 . -1) (undo-tree-id33971 . -1) (undo-tree-id33972 . -1) (undo-tree-id33973 . -1) (undo-tree-id33974 . -1) (undo-tree-id33975 . -1) (undo-tree-id33976 . -1) (undo-tree-id33977 . -1) (undo-tree-id33978 . -1) (undo-tree-id33979 . -1) (undo-tree-id33980 . -1) (undo-tree-id33981 . -1) (undo-tree-id33982 . -1) 10242 (t 25945 38360 484474 219000)) nil (25945 38383 368396 0) 0 nil])
([nil nil ((10239 . 10241)) nil (25945 38383 368312 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10239) (undo-tree-id33881 . -1) (undo-tree-id33882 . -1) (undo-tree-id33883 . -1) (undo-tree-id33884 . -1) (undo-tree-id33885 . -1) (undo-tree-id33886 . -1) (undo-tree-id33887 . -1) (undo-tree-id33888 . -1) (undo-tree-id33889 . -1) (undo-tree-id33890 . -1) (undo-tree-id33891 . -1) (undo-tree-id33892 . -1) (undo-tree-id33893 . -1) (undo-tree-id33894 . -1) (undo-tree-id33895 . -1) (undo-tree-id33896 . -1) (#("g" 0 1 (fontified t)) . -10240) (undo-tree-id33897 . -1) (undo-tree-id33898 . -1) (undo-tree-id33899 . -1) (undo-tree-id33900 . -1) (undo-tree-id33901 . -1) (undo-tree-id33902 . -1) (undo-tree-id33903 . -1) 10241) nil (25945 38383 368309 0) 0 nil])
([nil nil ((10239 . 10240)) nil (25945 38383 368282 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -10239) (undo-tree-id33877 . -1) (undo-tree-id33878 . -1) (undo-tree-id33879 . -1) (undo-tree-id33880 . -1) 10240) nil (25945 38383 368280 0) 0 nil])
([nil nil ((10239 . 10241)) nil (25945 38383 368269 0) 0 nil])
([nil nil ((10240 . 10241)) nil (25945 38383 368264 0) 0 nil])
([nil nil ((10242 . 10244) (t 25945 38383 441703 449000)) nil (25945 38423 654459 0) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -10239) (undo-tree-id34037 . -1) (undo-tree-id34038 . -1) (undo-tree-id34039 . -1) (undo-tree-id34040 . -1) (undo-tree-id34041 . -1) (undo-tree-id34042 . -1) (undo-tree-id34043 . -1) (undo-tree-id34044 . -1) (undo-tree-id34045 . -1) (undo-tree-id34046 . -1) (undo-tree-id34047 . -1) (undo-tree-id34048 . -1) (undo-tree-id34049 . -1) (undo-tree-id34050 . -1) (undo-tree-id34051 . -1) (undo-tree-id34052 . -1) (undo-tree-id34053 . -1) (undo-tree-id34054 . -1) (undo-tree-id34055 . -1) (undo-tree-id34056 . -1) (undo-tree-id34057 . -1) (undo-tree-id34058 . -1) (undo-tree-id34059 . -1) (undo-tree-id34060 . -1) (undo-tree-id34061 . -1) (undo-tree-id34062 . -1) (undo-tree-id34063 . -1) (undo-tree-id34064 . -1) (undo-tree-id34065 . -1) (undo-tree-id34066 . -1) (undo-tree-id34067 . -1) (undo-tree-id34068 . -1) (undo-tree-id34069 . -1) (undo-tree-id34070 . -1) (undo-tree-id34071 . -1) (undo-tree-id34072 . -1) (undo-tree-id34073 . -1) (undo-tree-id34074 . -1) (undo-tree-id34075 . -1) (undo-tree-id34076 . -1) (undo-tree-id34077 . -1) (undo-tree-id34078 . -1) (undo-tree-id34079 . -1) (undo-tree-id34080 . -1) (undo-tree-id34081 . -1) (undo-tree-id34082 . -1) (undo-tree-id34083 . -1) (undo-tree-id34084 . -1) (undo-tree-id34085 . -1) (undo-tree-id34086 . -1) (undo-tree-id34087 . -1) (undo-tree-id34088 . -1) (undo-tree-id34089 . -1) (undo-tree-id34090 . -1) (undo-tree-id34091 . -1) (undo-tree-id34092 . -1) (#("0" 0 1 (fontified t)) . -10240) (undo-tree-id34093 . -1) (undo-tree-id34094 . -1) (undo-tree-id34095 . -1) (undo-tree-id34096 . -1) (undo-tree-id34097 . -1) (undo-tree-id34098 . -1) (undo-tree-id34099 . -1) (undo-tree-id34100 . -1) (undo-tree-id34101 . -1) (undo-tree-id34102 . -1) (undo-tree-id34103 . -1) (undo-tree-id34104 . -1) (undo-tree-id34105 . -1) (undo-tree-id34106 . -1) (undo-tree-id34107 . -1) (undo-tree-id34108 . -1) (undo-tree-id34109 . -1) (undo-tree-id34110 . -1) (undo-tree-id34111 . -1) (undo-tree-id34112 . -1) (undo-tree-id34113 . -1) (undo-tree-id34114 . -1) (undo-tree-id34115 . -1) (undo-tree-id34116 . -1) (undo-tree-id34117 . -1) (undo-tree-id34118 . -1) (undo-tree-id34119 . -1) (undo-tree-id34120 . -1) (undo-tree-id34121 . -1) (undo-tree-id34122 . -1) (undo-tree-id34123 . -1) (undo-tree-id34124 . -1) (undo-tree-id34125 . -1) (undo-tree-id34126 . -1) (undo-tree-id34127 . -1) (undo-tree-id34128 . -1) (undo-tree-id34129 . -1) (undo-tree-id34130 . -1) (undo-tree-id34131 . -1) (undo-tree-id34132 . -1) (undo-tree-id34133 . -1) (undo-tree-id34134 . -1) (undo-tree-id34135 . -1) (undo-tree-id34136 . -1) (undo-tree-id34137 . -1) (undo-tree-id34138 . -1) (undo-tree-id34139 . -1) (undo-tree-id34140 . -1) (undo-tree-id34141 . -1) (undo-tree-id34142 . -1) (undo-tree-id34143 . -1) (undo-tree-id34144 . -1) (undo-tree-id34145 . -1) (undo-tree-id34146 . -1) (undo-tree-id34147 . -1) (#("]" 0 1 (fontified t)) . -10241) (undo-tree-id34148 . -1) (undo-tree-id34149 . -1) (undo-tree-id34150 . -1) (undo-tree-id34151 . -1) (undo-tree-id34152 . -1) (undo-tree-id34153 . -1) (undo-tree-id34154 . -1) (undo-tree-id34155 . -1) (undo-tree-id34156 . -1) (undo-tree-id34157 . -1) (undo-tree-id34158 . -1) (undo-tree-id34159 . -1) (undo-tree-id34160 . -1) (undo-tree-id34161 . -1) (undo-tree-id34162 . -1) (undo-tree-id34163 . -1) (undo-tree-id34164 . -1) (undo-tree-id34165 . -1) (undo-tree-id34166 . -1) (undo-tree-id34167 . -1) (#("." 0 1 (fontified t)) . -10242) (undo-tree-id34168 . -1) (undo-tree-id34169 . -1) (undo-tree-id34170 . -1) (undo-tree-id34171 . -1) (undo-tree-id34172 . -1) (undo-tree-id34173 . -1) (undo-tree-id34174 . -1) (undo-tree-id34175 . -1) (undo-tree-id34176 . -1) (undo-tree-id34177 . -1) (#("o" 0 1 (fontified t)) . -10243) (undo-tree-id34178 . -1) (undo-tree-id34179 . -1) (undo-tree-id34180 . -1) (undo-tree-id34181 . -1) (undo-tree-id34182 . -1) 10244) nil (25945 38423 654451 0) 0 nil])
([nil nil ((10239 . 10240)) nil (25945 38423 654290 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -10239) (undo-tree-id34028 . -1) (undo-tree-id34029 . -1) (undo-tree-id34030 . -1) (undo-tree-id34031 . -1) (undo-tree-id34032 . -1) (undo-tree-id34033 . -1) (undo-tree-id34034 . -1) (undo-tree-id34035 . -1) (undo-tree-id34036 . -1) 10240) nil (25945 38423 654288 0) 0 nil])
([nil nil ((10239 . 10240)) nil (25945 38423 654278 0) 0 nil])
([nil nil ((10240 . 10241)) nil (25945 38423 654277 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10239) (undo-tree-id33992 . -1) (undo-tree-id33993 . -1) (undo-tree-id33994 . -1) (undo-tree-id33995 . -1) (undo-tree-id33996 . -1) (undo-tree-id33997 . -1) (undo-tree-id33998 . -1) (undo-tree-id33999 . -1) (undo-tree-id34000 . -1) (undo-tree-id34001 . -1) (undo-tree-id34002 . -1) (undo-tree-id34003 . -1) (undo-tree-id34004 . -1) (undo-tree-id34005 . -1) (undo-tree-id34006 . -1) (undo-tree-id34007 . -1) (undo-tree-id34008 . -1) (undo-tree-id34009 . -1) (undo-tree-id34010 . -1) (undo-tree-id34011 . -1) (undo-tree-id34012 . -1) (undo-tree-id34013 . -1) (undo-tree-id34014 . -1) (undo-tree-id34015 . -1) (undo-tree-id34016 . -1) (#("0" 0 1 (fontified t)) . -10240) (undo-tree-id34017 . -1) (undo-tree-id34018 . -1) (undo-tree-id34019 . -1) (undo-tree-id34020 . -1) (undo-tree-id34021 . -1) (undo-tree-id34022 . -1) (undo-tree-id34023 . -1) (undo-tree-id34024 . -1) (undo-tree-id34025 . -1) (undo-tree-id34026 . -1) (undo-tree-id34027 . -1) 10241) nil (25945 38423 654274 0) 0 nil])
([nil nil ((10211 . 10214)) nil (25945 38423 654236 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10212 10221 #s(yas--snippet nil nil #s(yas--exit 10221 nil) 194 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10221 nil) 194 nil nil nil nil)) (10212 . 10221) (#("collect()$0" 0 11 (fontified nil)) . 10212) (10212 . 10223) (#("co" 0 2 (fontified nil)) . 10212) (10212 . 10214) (#("collect() (as Iterator)" 0 23 (fontified nil)) . -10212) (10212 . 10235) (#("co" 0 2 (fontified t)) . -10212) (undo-tree-id33983 . -2) (undo-tree-id33984 . -1) (undo-tree-id33985 . -1) (undo-tree-id33986 . -1) (undo-tree-id33987 . -1) (undo-tree-id33988 . -2) (undo-tree-id33989 . -2) (undo-tree-id33990 . -2) (undo-tree-id33991 . -2) 10214) nil (25945 38423 654231 0) 0 nil])
([nil nil ((10219 . 10223) (t 25945 38423 727693 334000)) nil (25945 38443 960503 0) 0 nil])
([nil nil ((10222 . 10225)) nil (25945 38443 960502 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10222 10227 #s(yas--snippet nil nil #s(yas--exit 10226 nil) 195 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10226 nil) 195 nil nil nil nil)) (10222 . 10227) (#("Vec<$0>" 0 7 (fontified nil)) . 10222) (10222 . 10229) (#("Vec" 0 3 (fontified nil)) . 10222) (10222 . 10225) (#("Vec<…>" 0 6 (fontified nil)) . -10222) (10222 . 10228) (#("Vec" 0 3 (face font-lock-type-face fontified t)) . -10222) (undo-tree-id34183 . -3) (undo-tree-id34184 . -3) (undo-tree-id34185 . -1) (undo-tree-id34186 . -1) (undo-tree-id34187 . -1) (undo-tree-id34188 . -2) (undo-tree-id34189 . -2) (undo-tree-id34190 . -3) (undo-tree-id34191 . -3) (undo-tree-id34192 . -3) (undo-tree-id34193 . -3) 10225) nil (25945 38443 960499 0) 0 nil])
([nil nil ((10226 . 10227)) nil (25945 38443 960471 0) 0 nil])
([nil nil ((#("Vec<_>>()" 0 3 (face font-lock-type-face fontified t) 3 6 (fontified t) 6 9 (fontified t)) . -10222) (undo-tree-id34718 . -9) (undo-tree-id34719 . -9) (undo-tree-id34720 . -9) (undo-tree-id34721 . -7) (undo-tree-id34722 . 4) (undo-tree-id34723 . -9) (undo-tree-id34724 . -9) (undo-tree-id34725 . -9) (undo-tree-id34726 . -9) (undo-tree-id34727 . -9) (undo-tree-id34728 . -9) (undo-tree-id34729 . -9) (undo-tree-id34730 . -9) (undo-tree-id34731 . -9) (undo-tree-id34732 . -9) (undo-tree-id34733 . -9) (undo-tree-id34734 . -9) (undo-tree-id34735 . -9) (undo-tree-id34736 . -9) 10231 (t 25945 38444 34461 149000)) nil (25945 38499 481978 0) 0 nil])
([nil nil ((#("collect::<" 0 7 (fontified t) 7 10 (fontified t)) . -10212) (undo-tree-id34690 . -10) (undo-tree-id34691 . -10) (undo-tree-id34692 . -10) (undo-tree-id34693 . -10) (undo-tree-id34694 . -10) (undo-tree-id34695 . -10) (undo-tree-id34696 . -10) (undo-tree-id34697 . -10) (undo-tree-id34698 . -10) (undo-tree-id34699 . -10) (undo-tree-id34700 . -10) (undo-tree-id34701 . -10) (undo-tree-id34702 . -10) (undo-tree-id34703 . -10) (undo-tree-id34704 . -10) (undo-tree-id34705 . -10) (undo-tree-id34706 . -10) (undo-tree-id34707 . -10) (undo-tree-id34708 . -10) (undo-tree-id34709 . -10) (undo-tree-id34710 . -10) (undo-tree-id34711 . -10) (undo-tree-id34712 . -10) (undo-tree-id34713 . -10) (undo-tree-id34714 . -10) (undo-tree-id34715 . -10) (undo-tree-id34716 . -10) (undo-tree-id34717 . -10) 10222) nil (25945 38502 543299 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10211) (undo-tree-id34777 . -1) (undo-tree-id34778 . -1) (undo-tree-id34779 . -1) (undo-tree-id34780 . -1) (undo-tree-id34781 . -1) (undo-tree-id34782 . -1) (undo-tree-id34783 . -1) (undo-tree-id34784 . -1) (undo-tree-id34785 . -1) (undo-tree-id34786 . -1) (undo-tree-id34787 . -1) (undo-tree-id34788 . -1) (undo-tree-id34789 . -1) (undo-tree-id34790 . -1) (undo-tree-id34791 . -1) (undo-tree-id34792 . -1) (undo-tree-id34793 . -1) (undo-tree-id34794 . -1) (undo-tree-id34795 . -1) (undo-tree-id34796 . -1) (undo-tree-id34797 . -1) (undo-tree-id34798 . -1) (undo-tree-id34799 . -1) (undo-tree-id34800 . -1) (undo-tree-id34801 . -1) (undo-tree-id34802 . -1) (undo-tree-id34803 . -1) (undo-tree-id34804 . -1) (undo-tree-id34805 . -1) (undo-tree-id34806 . -1) (undo-tree-id34807 . -1) (undo-tree-id34808 . -1) (undo-tree-id34809 . -1) (undo-tree-id34810 . -1) (undo-tree-id34811 . -1) (undo-tree-id34812 . -1) (undo-tree-id34813 . -1) (undo-tree-id34814 . -1) 10212) nil (25945 38505 103267 0) 0 nil] [nil nil ((#("true)." 0 4 (face font-lock-keyword-face fontified t) 4 6 (fontified t)) . -10206) (undo-tree-id34659 . -6) (undo-tree-id34660 . -6) (undo-tree-id34661 . -6) (undo-tree-id34662 . -6) (undo-tree-id34663 . -6) (undo-tree-id34664 . -6) (undo-tree-id34665 . -6) (undo-tree-id34666 . -6) (undo-tree-id34667 . -6) (undo-tree-id34668 . -6) (undo-tree-id34669 . -6) (undo-tree-id34670 . -6) (undo-tree-id34671 . -6) (undo-tree-id34672 . -6) (undo-tree-id34673 . -6) (undo-tree-id34674 . -6) (undo-tree-id34675 . -6) (undo-tree-id34676 . -6) (undo-tree-id34677 . -6) (undo-tree-id34678 . -6) (undo-tree-id34679 . -6) (undo-tree-id34680 . -6) (undo-tree-id34681 . -6) (undo-tree-id34682 . -6) (undo-tree-id34683 . -6) (undo-tree-id34684 . -6) (undo-tree-id34685 . -6) (undo-tree-id34686 . -6) (undo-tree-id34687 . -6) (undo-tree-id34688 . -6) (undo-tree-id34689 . -6) 10212) ((10206 . 10212)) (25945 38501 901145 0) 0 nil])
([nil nil ((#("true)" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . -10206) (undo-tree-id34869 . -5) (undo-tree-id34870 . -5) (undo-tree-id34871 . -5) 10211 (t 25945 38505 180942 46000)) nil (25945 38603 452739 0) 0 nil])
([nil nil ((#("selected == ;" 0 12 (fontified t) 12 13 (fontified t)) . -10194) (undo-tree-id34605 . -13) (undo-tree-id34606 . -13) (undo-tree-id34607 . -12) (undo-tree-id34608 . -12) (undo-tree-id34609 . -12) (undo-tree-id34610 . -12) (undo-tree-id34611 . -12) (undo-tree-id34612 . -12) (undo-tree-id34613 . -12) (undo-tree-id34614 . -12) (undo-tree-id34615 . -12) (undo-tree-id34616 . -12) (undo-tree-id34617 . -12) (undo-tree-id34618 . 1) (undo-tree-id34619 . -12) (undo-tree-id34620 . -12) (undo-tree-id34621 . -12) (undo-tree-id34622 . -12) (undo-tree-id34623 . -12) (undo-tree-id34624 . -12) (undo-tree-id34625 . -12) (undo-tree-id34626 . -12) (undo-tree-id34627 . -12) (undo-tree-id34628 . -12) (undo-tree-id34629 . -12) (undo-tree-id34630 . -12) (undo-tree-id34631 . -12) (undo-tree-id34632 . -12) (undo-tree-id34633 . -12) (undo-tree-id34634 . -12) (undo-tree-id34635 . -12) (undo-tree-id34636 . -12) (undo-tree-id34637 . -12) (undo-tree-id34638 . -12) (undo-tree-id34639 . -12) (undo-tree-id34640 . -12) (undo-tree-id34641 . -12) (undo-tree-id34642 . -12) (undo-tree-id34643 . -12) (undo-tree-id34644 . -12) (undo-tree-id34645 . -12) (undo-tree-id34646 . -12) (undo-tree-id34647 . -12) (undo-tree-id34648 . -12) (undo-tree-id34649 . -12) (undo-tree-id34650 . -13) (undo-tree-id34651 . -13) (undo-tree-id34652 . -13) (undo-tree-id34653 . -13) (undo-tree-id34654 . -13) (undo-tree-id34655 . -13) (undo-tree-id34656 . -13) (undo-tree-id34657 . -13) (undo-tree-id34658 . -13) 10207) ((10194 . 10207)) (25945 38501 589558 0) 0 nil])
([nil nil ((#("selected == " 0 12 (fontified t)) . -10194) (undo-tree-id34866 . -12) (undo-tree-id34867 . -12) (undo-tree-id34868 . -12) 10206) nil (25945 38603 452730 0) 0 nil])
([nil nil ((#("x." 0 2 (fontified t)) . -10192) (undo-tree-id34543 . -2) (undo-tree-id34544 . -2) (undo-tree-id34545 . -2) (undo-tree-id34546 . -2) (undo-tree-id34547 . -2) (undo-tree-id34548 . -2) (undo-tree-id34549 . -2) (undo-tree-id34550 . -2) (undo-tree-id34551 . -2) (undo-tree-id34552 . -2) (undo-tree-id34553 . -2) (undo-tree-id34554 . -2) (undo-tree-id34555 . -2) (undo-tree-id34556 . -2) (undo-tree-id34557 . -2) (undo-tree-id34558 . -2) (undo-tree-id34559 . -2) (undo-tree-id34560 . -2) (undo-tree-id34561 . -2) (undo-tree-id34562 . -2) (undo-tree-id34563 . -2) (undo-tree-id34564 . -2) (undo-tree-id34565 . -2) (undo-tree-id34566 . -2) (undo-tree-id34567 . -2) (undo-tree-id34568 . -2) (undo-tree-id34569 . -2) (undo-tree-id34570 . -2) (undo-tree-id34571 . -2) (undo-tree-id34572 . -2) (undo-tree-id34573 . -2) (undo-tree-id34574 . -2) (undo-tree-id34575 . -2) (undo-tree-id34576 . -2) (undo-tree-id34577 . -2) (undo-tree-id34578 . -2) (undo-tree-id34579 . -2) (undo-tree-id34580 . -2) (undo-tree-id34581 . -2) (undo-tree-id34582 . -2) (undo-tree-id34583 . -2) (undo-tree-id34584 . -2) (undo-tree-id34585 . -2) (undo-tree-id34586 . -2) (undo-tree-id34587 . -2) (undo-tree-id34588 . -2) (undo-tree-id34589 . -2) (undo-tree-id34590 . -2) (undo-tree-id34591 . -2) (undo-tree-id34592 . -2) (undo-tree-id34593 . -2) (undo-tree-id34594 . -2) (undo-tree-id34595 . -2) (undo-tree-id34596 . -2) (undo-tree-id34597 . -2) (undo-tree-id34598 . -2) (undo-tree-id34599 . -2) (undo-tree-id34600 . -2) (undo-tree-id34601 . -2) (undo-tree-id34602 . -2) (undo-tree-id34603 . -2) (undo-tree-id34604 . -2) 10194) ((10192 . 10194)) (25945 38501 259594 0) 0 nil])
([nil nil ((#("x." 0 2 (fontified t)) . -10192) (undo-tree-id34863 . -2) (undo-tree-id34864 . -2) (undo-tree-id34865 . -2) 10194) nil (25945 38603 452726 0) 0 nil])
([nil nil ((#("x)| " 0 4 (fontified t)) . -10188) (undo-tree-id34474 . -4) (undo-tree-id34475 . -4) (undo-tree-id34476 . -4) (undo-tree-id34477 . -4) (undo-tree-id34478 . -4) (undo-tree-id34479 . -4) (undo-tree-id34480 . -4) (undo-tree-id34481 . -4) (undo-tree-id34482 . -4) (undo-tree-id34483 . -4) (undo-tree-id34484 . -4) (undo-tree-id34485 . -4) (undo-tree-id34486 . -4) (undo-tree-id34487 . -4) (undo-tree-id34488 . -4) (undo-tree-id34489 . -4) (undo-tree-id34490 . -4) (undo-tree-id34491 . -4) (undo-tree-id34492 . -4) (undo-tree-id34493 . -4) (undo-tree-id34494 . -4) (undo-tree-id34495 . -4) (undo-tree-id34496 . -4) (undo-tree-id34497 . -4) (undo-tree-id34498 . -4) (undo-tree-id34499 . -4) (undo-tree-id34500 . -4) (undo-tree-id34501 . -4) (undo-tree-id34502 . -4) (undo-tree-id34503 . -4) (undo-tree-id34504 . -4) (undo-tree-id34505 . -4) (undo-tree-id34506 . -4) (undo-tree-id34507 . -4) (undo-tree-id34508 . -4) (undo-tree-id34509 . -4) (undo-tree-id34510 . -4) (undo-tree-id34511 . -4) (undo-tree-id34512 . -4) (undo-tree-id34513 . -4) (undo-tree-id34514 . -4) (undo-tree-id34515 . -4) (undo-tree-id34516 . -4) (undo-tree-id34517 . -4) (undo-tree-id34518 . -4) (undo-tree-id34519 . -4) (undo-tree-id34520 . -4) (undo-tree-id34521 . -4) (undo-tree-id34522 . -4) (undo-tree-id34523 . -4) (undo-tree-id34524 . -4) (undo-tree-id34525 . -4) (undo-tree-id34526 . -4) (undo-tree-id34527 . -4) (undo-tree-id34528 . -4) (undo-tree-id34529 . -4) (undo-tree-id34530 . -4) (undo-tree-id34531 . -4) (undo-tree-id34532 . -4) (undo-tree-id34533 . -4) (undo-tree-id34534 . -4) (undo-tree-id34535 . -4) (undo-tree-id34536 . -4) (undo-tree-id34537 . -4) (undo-tree-id34538 . -4) (undo-tree-id34539 . -4) (undo-tree-id34540 . -4) (undo-tree-id34541 . -4) (undo-tree-id34542 . -4) 10192) ((10188 . 10192)) (25945 38500 936343 0) 0 nil])
([nil nil ((#("x)| " 0 4 (fontified t)) . -10188) (undo-tree-id34860 . -4) (undo-tree-id34861 . -4) (undo-tree-id34862 . -4) 10192) nil (25945 38603 452721 0) 0 nil])
([nil nil ((#("idx, " 0 5 (fontified t)) . -10183) (undo-tree-id34398 . -5) (undo-tree-id34399 . -5) (undo-tree-id34400 . -5) (undo-tree-id34401 . -5) (undo-tree-id34402 . -5) (undo-tree-id34403 . -5) (undo-tree-id34404 . -5) (undo-tree-id34405 . -5) (undo-tree-id34406 . -5) (undo-tree-id34407 . -5) (undo-tree-id34408 . -5) (undo-tree-id34409 . -5) (undo-tree-id34410 . -5) (undo-tree-id34411 . -5) (undo-tree-id34412 . -5) (undo-tree-id34413 . -5) (undo-tree-id34414 . -5) (undo-tree-id34415 . -5) (undo-tree-id34416 . -5) (undo-tree-id34417 . -5) (undo-tree-id34418 . -5) (undo-tree-id34419 . -5) (undo-tree-id34420 . -5) (undo-tree-id34421 . -5) (undo-tree-id34422 . -5) (undo-tree-id34423 . -5) (undo-tree-id34424 . -5) (undo-tree-id34425 . -5) (undo-tree-id34426 . -5) (undo-tree-id34427 . -5) (undo-tree-id34428 . -5) (undo-tree-id34429 . -5) (undo-tree-id34430 . -5) (undo-tree-id34431 . -5) (undo-tree-id34432 . -5) (undo-tree-id34433 . -5) (undo-tree-id34434 . -5) (undo-tree-id34435 . -5) (undo-tree-id34436 . -5) (undo-tree-id34437 . -5) (undo-tree-id34438 . -5) (undo-tree-id34439 . -5) (undo-tree-id34440 . -5) (undo-tree-id34441 . -5) (undo-tree-id34442 . -5) (undo-tree-id34443 . -5) (undo-tree-id34444 . -5) (undo-tree-id34445 . -5) (undo-tree-id34446 . -5) (undo-tree-id34447 . -5) (undo-tree-id34448 . -5) (undo-tree-id34449 . -5) (undo-tree-id34450 . -5) (undo-tree-id34451 . -5) (undo-tree-id34452 . -5) (undo-tree-id34453 . -5) (undo-tree-id34454 . -5) (undo-tree-id34455 . -5) (undo-tree-id34456 . -5) (undo-tree-id34457 . -5) (undo-tree-id34458 . -5) (undo-tree-id34459 . -5) (undo-tree-id34460 . -5) (undo-tree-id34461 . -5) (undo-tree-id34462 . -5) (undo-tree-id34463 . -5) (undo-tree-id34464 . -5) (undo-tree-id34465 . -5) (undo-tree-id34466 . -5) (undo-tree-id34467 . -5) (undo-tree-id34468 . -5) (undo-tree-id34469 . -5) (undo-tree-id34470 . -5) (undo-tree-id34471 . -5) (undo-tree-id34472 . -5) (undo-tree-id34473 . -5) 10188) ((10183 . 10188)) (25945 38500 675541 0) 0 nil])
([nil nil ((#("idx, " 0 5 (fontified t)) . -10183) (undo-tree-id34857 . -5) (undo-tree-id34858 . -5) (undo-tree-id34859 . -5) 10188) nil (25945 38603 452714 0) 0 nil])
([nil nil ((#("filter(|(" 0 9 (fontified t)) . -10174) (undo-tree-id34311 . -4) (undo-tree-id34312 . -4) (undo-tree-id34313 . -9) (undo-tree-id34314 . -9) (undo-tree-id34315 . -9) (undo-tree-id34316 . -9) (undo-tree-id34317 . -9) (undo-tree-id34318 . -9) (undo-tree-id34319 . -9) (undo-tree-id34320 . -9) (undo-tree-id34321 . -9) (undo-tree-id34322 . -9) (undo-tree-id34323 . -9) (undo-tree-id34324 . -9) (undo-tree-id34325 . -9) (undo-tree-id34326 . -9) (undo-tree-id34327 . -9) (undo-tree-id34328 . -9) (undo-tree-id34329 . -9) (undo-tree-id34330 . -9) (undo-tree-id34331 . -9) (undo-tree-id34332 . -9) (undo-tree-id34333 . -9) (undo-tree-id34334 . -9) (undo-tree-id34335 . -9) (undo-tree-id34336 . -9) (undo-tree-id34337 . -9) (undo-tree-id34338 . -9) (undo-tree-id34339 . -9) (undo-tree-id34340 . -9) (undo-tree-id34341 . -9) (undo-tree-id34342 . -9) (undo-tree-id34343 . -9) (undo-tree-id34344 . -9) (undo-tree-id34345 . -9) (undo-tree-id34346 . -9) (undo-tree-id34347 . -9) (undo-tree-id34348 . -9) (undo-tree-id34349 . -9) (undo-tree-id34350 . -9) (undo-tree-id34351 . -9) (undo-tree-id34352 . -9) (undo-tree-id34353 . -9) (undo-tree-id34354 . -9) (undo-tree-id34355 . -9) (undo-tree-id34356 . -9) (undo-tree-id34357 . -9) (undo-tree-id34358 . -9) (undo-tree-id34359 . -9) (undo-tree-id34360 . -9) (undo-tree-id34361 . -9) (undo-tree-id34362 . -9) (undo-tree-id34363 . -9) (undo-tree-id34364 . -9) (undo-tree-id34365 . -9) (undo-tree-id34366 . -9) (undo-tree-id34367 . -9) (undo-tree-id34368 . -9) (undo-tree-id34369 . -9) (undo-tree-id34370 . -9) (undo-tree-id34371 . -9) (undo-tree-id34372 . -9) (undo-tree-id34373 . -9) (undo-tree-id34374 . -9) (undo-tree-id34375 . -9) (undo-tree-id34376 . -9) (undo-tree-id34377 . -9) (undo-tree-id34378 . -9) (undo-tree-id34379 . -9) (undo-tree-id34380 . -9) (undo-tree-id34381 . -9) (undo-tree-id34382 . -9) (undo-tree-id34383 . -9) (undo-tree-id34384 . -9) (undo-tree-id34385 . -9) (undo-tree-id34386 . -9) (undo-tree-id34387 . -9) (undo-tree-id34388 . -9) (undo-tree-id34389 . -9) (undo-tree-id34390 . -9) (undo-tree-id34391 . -9) (undo-tree-id34392 . -9) (undo-tree-id34393 . -9) (undo-tree-id34394 . -9) (undo-tree-id34395 . -9) (undo-tree-id34396 . -9) (undo-tree-id34397 . -9) 10183) ((10174 . 10183)) (25945 38500 394138 0) 0 nil])
([nil nil ((#("filter(|(" 0 9 (fontified t)) . -10174) (undo-tree-id34852 . -4) (undo-tree-id34853 . -4) (undo-tree-id34854 . -9) (undo-tree-id34855 . -9) (undo-tree-id34856 . -9) 10183) nil (25945 38603 452709 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10173) (undo-tree-id34213 . -1) (undo-tree-id34214 . -1) (undo-tree-id34215 . -1) (undo-tree-id34216 . -1) (undo-tree-id34217 . -1) (undo-tree-id34218 . -1) (undo-tree-id34219 . -1) (undo-tree-id34220 . -1) (undo-tree-id34221 . -1) (undo-tree-id34222 . -1) (undo-tree-id34223 . -1) (undo-tree-id34224 . -1) (undo-tree-id34225 . -1) (undo-tree-id34226 . -1) (undo-tree-id34227 . -1) (undo-tree-id34228 . -1) (undo-tree-id34229 . -1) (undo-tree-id34230 . -1) (undo-tree-id34231 . -1) (undo-tree-id34232 . -1) (undo-tree-id34233 . -1) (undo-tree-id34234 . -1) (undo-tree-id34235 . -1) (undo-tree-id34236 . -1) (undo-tree-id34237 . -1) (undo-tree-id34238 . -1) (undo-tree-id34239 . -1) (undo-tree-id34240 . -1) (undo-tree-id34241 . -1) (undo-tree-id34242 . -1) (undo-tree-id34243 . -1) (undo-tree-id34244 . -1) (undo-tree-id34245 . -1) (undo-tree-id34246 . -1) (undo-tree-id34247 . -1) (undo-tree-id34248 . -1) (undo-tree-id34249 . -1) (undo-tree-id34250 . -1) (undo-tree-id34251 . -1) (undo-tree-id34252 . -1) (undo-tree-id34253 . -1) (undo-tree-id34254 . -1) (undo-tree-id34255 . -1) (undo-tree-id34256 . -1) (undo-tree-id34257 . -1) (undo-tree-id34258 . -1) (undo-tree-id34259 . -1) (undo-tree-id34260 . -1) (undo-tree-id34261 . -1) (undo-tree-id34262 . -1) (undo-tree-id34263 . -1) (undo-tree-id34264 . -1) (undo-tree-id34265 . -1) (undo-tree-id34266 . -1) (undo-tree-id34267 . -1) (undo-tree-id34268 . -1) (undo-tree-id34269 . -1) (undo-tree-id34270 . -1) (undo-tree-id34271 . -1) (undo-tree-id34272 . -1) (undo-tree-id34273 . -1) (undo-tree-id34274 . -1) (undo-tree-id34275 . -1) (undo-tree-id34276 . -1) (undo-tree-id34277 . -1) (undo-tree-id34278 . -1) (undo-tree-id34279 . -1) (undo-tree-id34280 . -1) (undo-tree-id34281 . -1) (undo-tree-id34282 . -1) (undo-tree-id34283 . -1) (undo-tree-id34284 . -1) (undo-tree-id34285 . -1) (undo-tree-id34286 . -1) (undo-tree-id34287 . -1) (undo-tree-id34288 . -1) (undo-tree-id34289 . -1) (undo-tree-id34290 . -1) (undo-tree-id34291 . -1) (undo-tree-id34292 . -1) (undo-tree-id34293 . -1) (undo-tree-id34294 . -1) (undo-tree-id34295 . -1) (undo-tree-id34296 . -1) (undo-tree-id34297 . -1) (undo-tree-id34298 . -1) (undo-tree-id34299 . -1) (undo-tree-id34300 . -1) (undo-tree-id34301 . -1) (undo-tree-id34302 . -1) (undo-tree-id34303 . -1) (undo-tree-id34304 . -1) (undo-tree-id34305 . -1) (undo-tree-id34306 . -1) (undo-tree-id34307 . -1) (undo-tree-id34308 . -1) (undo-tree-id34309 . -1) (undo-tree-id34310 . -1) 10174) ((10173 . 10174)) (25945 38500 192209 0) 0 nil])
([nil nil ((#("enumerate()." 0 11 (fontified t) 11 12 (fontified t)) . -10162) (undo-tree-id34847 . -12) (undo-tree-id34848 . -12) (undo-tree-id34849 . -12) (undo-tree-id34850 . -12) (undo-tree-id34851 . -12) 10174) nil (25945 38603 452703 0) 0 nil])
([nil nil ((10173 . 10174)) ((#("." 0 1 (fontified t)) . 10173) (undo-tree-id34758 . -1) (undo-tree-id34759 . -1) (undo-tree-id34760 . -1) (undo-tree-id34761 . -1) (undo-tree-id34762 . -1) (undo-tree-id34763 . -1) (undo-tree-id34764 . -1) (undo-tree-id34765 . -1) (undo-tree-id34766 . -1) (undo-tree-id34767 . -1) (undo-tree-id34768 . -1) (undo-tree-id34769 . -1) (undo-tree-id34770 . -1) (undo-tree-id34771 . -1) (undo-tree-id34772 . -1) (undo-tree-id34773 . -1) (undo-tree-id34774 . -1) (undo-tree-id34775 . -1) (undo-tree-id34776 . -1)) (25945 38500 4852 0) 0 nil])
([nil nil ((#("iter()." 0 7 (fontified t)) . -10155) (undo-tree-id34842 . -7) (undo-tree-id34843 . -7) (undo-tree-id34844 . -7) (undo-tree-id34845 . -7) (undo-tree-id34846 . -7) 10162) nil (25945 38603 452693 0) 0 nil])
([nil nil ((10174 . 10175)) ((#("m" 0 1 (fontified t)) . 10174) (undo-tree-id34741 . -1) (undo-tree-id34742 . -1) (undo-tree-id34743 . -1) (undo-tree-id34744 . -1) (undo-tree-id34745 . -1) (undo-tree-id34746 . -1) (undo-tree-id34747 . -1) (undo-tree-id34748 . -1) (undo-tree-id34749 . -1) (undo-tree-id34750 . -1) (undo-tree-id34751 . -1) (undo-tree-id34752 . -1) (undo-tree-id34753 . -1) (undo-tree-id34754 . -1) (undo-tree-id34755 . -1) (undo-tree-id34756 . -1) (undo-tree-id34757 . -1)) (25945 38499 801505 0) 0 nil])
([nil nil ((#("keys." 0 5 (fontified t)) . -10150) (undo-tree-id34837 . -5) (undo-tree-id34838 . -5) (undo-tree-id34839 . -5) (undo-tree-id34840 . -5) (undo-tree-id34841 . -5) 10155) nil (25945 38603 452686 0) 0 nil])
([nil nil ((10175 . 10176)) ((#("f" 0 1 (fontified t)) . 10175) (undo-tree-id34737 . -1) (undo-tree-id34738 . -1) (undo-tree-id34739 . -1) (undo-tree-id34740 . -1)) (25945 38499 580195 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10149) (undo-tree-id34832 . -1) (undo-tree-id34833 . -1) (undo-tree-id34834 . -1) (undo-tree-id34835 . -1) (undo-tree-id34836 . -1) 10150) nil (25945 38603 452675 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -10174) (undo-tree-id34194 . -1) (undo-tree-id34195 . -1) (undo-tree-id34196 . -1) (undo-tree-id34197 . -1) (undo-tree-id34198 . -1) (undo-tree-id34199 . -1) (undo-tree-id34200 . -1) (undo-tree-id34201 . -1) (undo-tree-id34202 . -1) (undo-tree-id34203 . -1) (undo-tree-id34204 . -1) (undo-tree-id34205 . -1) (undo-tree-id34206 . -1) (undo-tree-id34207 . -1) (undo-tree-id34208 . -1) (undo-tree-id34209 . -1) (#("f" 0 1 (fontified t)) . -10175) (undo-tree-id34210 . -1) (undo-tree-id34211 . -1) (undo-tree-id34212 . -1) 10176) ((10174 . 10176)) (25945 38499 482220 0) 0 nil])
([nil nil ((#("selecteds" 0 9 (face font-lock-variable-name-face fontified t)) . -10117) (undo-tree-id34830 . -9) (undo-tree-id34831 . -9) 10126) nil (25945 38603 452668 0) 0 nil])
([nil nil ((10174 . 10177)) ((#("fin" 0 3 (fontified t)) . 10174)) (25945 38499 481390 0) 0 nil])
([nil nil ((10117 . 10122)) nil (25945 38603 452665 0) 0 nil])
nil
([nil nil ((#("selecteds" 0 9 (fontified t)) . -10164) (undo-tree-id34829 . -9) 10173) nil (25945 38603 452664 0) 0 nil])
([nil nil ((10164 . 10170)) nil (25945 38603 452661 0) 0 nil])
([nil nil ((10170 . 10174) (#("keys" 0 4 (fontified nil)) . -10170) (10170 . 10174)) nil (25945 38603 452660 0) 0 nil])
([nil nil ((10174 . 10176)) nil (25945 38603 452659 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -10175) (undo-tree-id34828 . -1) 10176) nil (25945 38603 452658 0) 0 nil])
([nil nil ((10175 . 10179)) nil (25945 38603 452655 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10175 10181 #s(yas--snippet nil nil #s(yas--exit 10181 nil) 196 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10181 nil) 196 nil nil nil nil)) (10175 . 10181) (#("iter()$0" 0 8 (fontified nil)) . 10175) (10175 . 10183) (#("iter" 0 4 (fontified nil)) . 10175) (10175 . 10179) (#("iter()" 0 6 (fontified nil)) . -10175) (10175 . 10181) (#("iter" 0 4 (fontified t)) . -10175) (undo-tree-id34827 . -4) 10179) nil (25945 38603 452653 0) 0 nil])
([nil nil ((10181 . 10183)) nil (25945 38603 452648 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10182 10193 #s(yas--snippet nil nil #s(yas--exit 10193 nil) 197 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10193 nil) 197 nil nil nil nil)) (10182 . 10193) (#("enumerate()$0" 0 13 (fontified nil)) . 10182) (10182 . 10195) (#("e" 0 1 (fontified nil)) . 10182) (10182 . 10183) (#("enumerate() (as Iterator)" 0 25 (fontified nil)) . -10182) (10182 . 10207) (#("e" 0 1 (fontified t)) . -10182) (undo-tree-id34826 . -1) 10183) nil (25945 38603 452646 0) 0 nil])
([nil nil ((10193 . 10196)) nil (25945 38603 452642 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 10201 10230 nil nil nil t #s(yas--exit 10231 nil))) #s(yas--exit 10231 nil) 198 nil #s(yas--field 1 10201 10230 nil nil nil t #s(yas--exit 10231 nil)) nil nil)) (10194 . 10211) (#("filter(${1:predicate})$0" 0 24 (fontified nil)) . 10194) (10194 . 10218) (#("fi" 0 2 (fontified nil)) . 10194) (10194 . 10196) (#("filter(…) (as Iterator)" 0 23 (fontified nil)) . -10194) (10194 . 10217) (#("fi" 0 2 (fontified t)) . -10194) (undo-tree-id34825 . -2) 10196) nil (25945 38603 452640 0) 0 nil])
([nil nil ((10202 . 10203) (#("predicate" 0 9 (fontified nil)) . 10202) (undo-tree-id34824 . -9) (10201 . 10202)) nil (25945 38603 452635 0) 0 nil])
([nil nil ((10202 . 10204)) nil (25945 38603 452632 0) 0 nil])
([nil nil ((10203 . 10209)) nil (25945 38603 452631 0) 0 nil])
([nil nil ((10211 . 10216)) nil (25945 38603 452630 0) 0 nil])
([nil nil ((10214 . 10222) (#("se" 0 2 (fontified nil)) . 10214) (undo-tree-id34815 . -2) (10214 . 10216) (#("selected" 0 8 (fontified nil)) . -10214) (undo-tree-id34816 . -8) (10214 . 10222) (#("se" 0 2 (fontified t)) . -10214) (undo-tree-id34817 . -2) (undo-tree-id34818 . -2) (undo-tree-id34819 . -2) (undo-tree-id34820 . -1) (undo-tree-id34821 . -1) (undo-tree-id34822 . -2) (undo-tree-id34823 . -2) 10216) nil (25945 38603 452627 0) 0 nil])
([nil nil ((10222 . 10230)) nil (25945 38603 452590 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10194 10231 #s(yas--snippet nil (#s(yas--field 1 10201 10230 nil nil nil t #s(yas--exit 10231 nil))) #s(yas--exit 10231 nil) 198 nil #s(yas--field 1 10201 10230 nil nil nil t #s(yas--exit 10231 nil)) nil nil))) nil (25945 38603 452585 0) 0 nil])
([nil nil ((10231 . 10232) (t 25945 38603 528018 827000)) nil (25945 38609 339113 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10231) (undo-tree-id34872 . -1) (undo-tree-id34873 . -1) (undo-tree-id34874 . -1) (undo-tree-id34875 . -1) (undo-tree-id34876 . -1) (undo-tree-id34877 . -1) (undo-tree-id34878 . -1) 10232) nil (25945 38609 339111 0) 0 nil])
([nil nil ((10231 . 10233)) nil (25945 38609 339093 0) 0 nil])
([nil nil ((10232 . 10233)) nil (25945 38609 339088 0) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -10233) (undo-tree-id35032 . -1) (undo-tree-id35033 . -1) (undo-tree-id35034 . 1) (undo-tree-id35035 . -1) (undo-tree-id35036 . -1) (undo-tree-id35037 . -1) (undo-tree-id35038 . -1) (undo-tree-id35039 . -1) (undo-tree-id35040 . -1) (undo-tree-id35041 . -1) (undo-tree-id35042 . -1) (undo-tree-id35043 . -1) (undo-tree-id35044 . -1) (undo-tree-id35045 . -1) (undo-tree-id35046 . -1) 10234 (t 25945 38609 412968 446000)) nil (25945 38630 412295 0) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -10231) (undo-tree-id34897 . -1) (undo-tree-id34898 . -1) (undo-tree-id34899 . -1) (undo-tree-id34900 . -1) (undo-tree-id34901 . -1) (undo-tree-id34902 . -1) (undo-tree-id34903 . -1) (undo-tree-id34904 . -1) (undo-tree-id34905 . -1) (undo-tree-id34906 . -1) (undo-tree-id34907 . -1) (undo-tree-id34908 . -1) (undo-tree-id34909 . -1) (undo-tree-id34910 . -1) (undo-tree-id34911 . -1) (undo-tree-id34912 . -1) (undo-tree-id34913 . -1) (undo-tree-id34914 . -1) (undo-tree-id34915 . -1) (undo-tree-id34916 . -1) (undo-tree-id34917 . -1) (undo-tree-id34918 . -1) (undo-tree-id34919 . -1) (undo-tree-id34920 . -1) (undo-tree-id34921 . -1) (undo-tree-id34922 . -1) (undo-tree-id34923 . -1) (undo-tree-id34924 . -1) (undo-tree-id34925 . -1) (undo-tree-id34926 . -1) (undo-tree-id34927 . -1) (undo-tree-id34928 . -1) (undo-tree-id34929 . -1) (undo-tree-id34930 . -1) (undo-tree-id34931 . -1) (undo-tree-id34932 . -1) (undo-tree-id34933 . -1) (undo-tree-id34934 . -1) (undo-tree-id34935 . -1) (undo-tree-id34936 . -1) (undo-tree-id34937 . -1) (undo-tree-id34938 . -1) (undo-tree-id34939 . -1) (undo-tree-id34940 . -1) (undo-tree-id34941 . -1) (undo-tree-id34942 . -1) (undo-tree-id34943 . -1) (undo-tree-id34944 . -1) (undo-tree-id34945 . -1) (undo-tree-id34946 . -1) (undo-tree-id34947 . -1) (undo-tree-id34948 . -1) (undo-tree-id34949 . -1) (undo-tree-id34950 . -1) (undo-tree-id34951 . -1) (undo-tree-id34952 . -1) (undo-tree-id34953 . -1) (undo-tree-id34954 . -1) (undo-tree-id34955 . -1) (undo-tree-id34956 . -1) (undo-tree-id34957 . -1) (undo-tree-id34958 . -1) (undo-tree-id34959 . -1) (undo-tree-id34960 . -1) (undo-tree-id34961 . -1) (undo-tree-id34962 . -1) (undo-tree-id34963 . -1) (undo-tree-id34964 . -1) (#("0" 0 1 (fontified t)) . -10232) (undo-tree-id34965 . -1) (undo-tree-id34966 . -1) (undo-tree-id34967 . -1) (undo-tree-id34968 . -1) (undo-tree-id34969 . -1) (undo-tree-id34970 . -1) (undo-tree-id34971 . -1) (undo-tree-id34972 . -1) (undo-tree-id34973 . -1) (undo-tree-id34974 . -1) (undo-tree-id34975 . -1) (undo-tree-id34976 . -1) (undo-tree-id34977 . -1) (undo-tree-id34978 . -1) (undo-tree-id34979 . -1) (undo-tree-id34980 . -1) (undo-tree-id34981 . -1) (undo-tree-id34982 . -1) (undo-tree-id34983 . -1) (undo-tree-id34984 . -1) (undo-tree-id34985 . -1) (undo-tree-id34986 . -1) (undo-tree-id34987 . -1) (undo-tree-id34988 . -1) (undo-tree-id34989 . -1) (undo-tree-id34990 . -1) (undo-tree-id34991 . -1) (undo-tree-id34992 . -1) (undo-tree-id34993 . -1) (undo-tree-id34994 . -1) (undo-tree-id34995 . -1) (undo-tree-id34996 . -1) (undo-tree-id34997 . -1) (undo-tree-id34998 . -1) (undo-tree-id34999 . -1) (undo-tree-id35000 . -1) (undo-tree-id35001 . -1) (undo-tree-id35002 . -1) (undo-tree-id35003 . -1) (undo-tree-id35004 . -1) (undo-tree-id35005 . -1) (undo-tree-id35006 . -1) (undo-tree-id35007 . -1) (undo-tree-id35008 . -1) (undo-tree-id35009 . -1) (undo-tree-id35010 . -1) (undo-tree-id35011 . -1) (undo-tree-id35012 . -1) (undo-tree-id35013 . -1) (undo-tree-id35014 . -1) (undo-tree-id35015 . -1) (undo-tree-id35016 . -1) (undo-tree-id35017 . -1) (undo-tree-id35018 . -1) (undo-tree-id35019 . -1) (undo-tree-id35020 . -1) (undo-tree-id35021 . -1) (undo-tree-id35022 . -1) (undo-tree-id35023 . -1) (undo-tree-id35024 . -1) (undo-tree-id35025 . -1) (undo-tree-id35026 . -1) (undo-tree-id35027 . -1) (undo-tree-id35028 . -1) (undo-tree-id35029 . -1) (undo-tree-id35030 . -1) (undo-tree-id35031 . -1) 10233) nil (25945 38630 412269 0) 0 nil])
([nil nil ((10231 . 10234)) nil (25945 38630 412132 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10232 10241 #s(yas--snippet nil nil #s(yas--exit 10241 nil) 199 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10241 nil) 199 nil nil nil nil)) (10232 . 10241) (#("collect()$0" 0 11 (fontified nil)) . 10232) (10232 . 10243) (#("co" 0 2 (fontified nil)) . 10232) (10232 . 10234) (#("collect() (as Iterator)" 0 23 (fontified nil)) . -10232) (10232 . 10255) (#("co" 0 2 (fontified t)) . -10232) (undo-tree-id34888 . -1) (undo-tree-id34889 . -2) (undo-tree-id34890 . -1) (undo-tree-id34891 . -1) (undo-tree-id34892 . -1) (undo-tree-id34893 . -2) (undo-tree-id34894 . -2) (undo-tree-id34895 . -2) (undo-tree-id34896 . -2) 10234) nil (25945 38630 412130 0) 0 nil])
([nil nil ((10239 . 10243)) nil (25945 38630 412117 0) 0 nil])
([nil nil ((10242 . 10245)) nil (25945 38630 412116 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10242 10247 #s(yas--snippet nil nil #s(yas--exit 10246 nil) 200 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10246 nil) 200 nil nil nil nil)) (10242 . 10247) (#("Vec<$0>" 0 7 (fontified nil)) . 10242) (10242 . 10249) (#("Vec" 0 3 (fontified nil)) . 10242) (10242 . 10245) (#("Vec<…>" 0 6 (fontified nil)) . -10242) (10242 . 10248) (#("Vec" 0 3 (face font-lock-type-face fontified t)) . -10242) (undo-tree-id34879 . -3) (undo-tree-id34880 . -3) (undo-tree-id34881 . -1) (undo-tree-id34882 . -1) (undo-tree-id34883 . -1) (undo-tree-id34884 . -2) (undo-tree-id34885 . -2) (undo-tree-id34886 . -3) (undo-tree-id34887 . -3) 10245) nil (25945 38630 412113 0) 0 nil])
([nil nil ((10246 . 10247)) nil (25945 38630 412094 0) 0 nil])
([nil nil ((10251 . 10253)) nil (25945 38630 412093 0) 0 nil])
([nil nil ((10252 . 10253)) nil (25945 38630 412088 0) 0 nil])
([nil nil ((10254 . 10256) (t 25945 38630 487452 390000)) nil (25945 38638 284529 0) 0 nil])
([nil nil ((10257 . 10263) (t 25945 38638 359149 5000)) nil (25945 38698 556093 0) 0 nil])
([nil nil ((10263 . 10265)) nil (25945 38698 556091 0) 0 nil])
([nil nil ((10263 . 10279) (#("ac" 0 2 (fontified nil)) . 10263) (10263 . 10265) (#("activation_value" 0 16 (fontified nil)) . -10263) (10263 . 10279) (#("ac" 0 2 (fontified t)) . -10263) (undo-tree-id35090 . -2) (undo-tree-id35091 . -1) (undo-tree-id35092 . -2) (undo-tree-id35093 . -2) (undo-tree-id35094 . -2) (undo-tree-id35095 . -2) 10265) nil (25945 38698 556090 0) 0 nil])
([nil nil ((10279 . 10280)) nil (25945 38698 556081 0) 0 nil])
([nil nil ((10280 . 10281) (#("1" 0 1 (fontified nil)) . -10280) (10280 . 10281)) nil (25945 38698 556080 0) 0 nil])
([nil nil ((10281 . 10283)) nil (25945 38698 556078 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 10286 10311 nil nil nil t #s(yas--exit 10312 nil))) #s(yas--exit 10312 nil) 201 nil #s(yas--field 1 10286 10311 nil nil nil t #s(yas--exit 10312 nil)) nil nil)) (10282 . 10296) (#("set(${1:new_value})$0" 0 21 (fontified nil)) . 10282) (10282 . 10303) (#("s" 0 1 (fontified nil)) . 10282) (10282 . 10283) (#("set(…) (as SignalSet)" 0 21 (fontified nil)) . -10282) (10282 . 10303) (#("s" 0 1 (fontified t)) . -10282) (undo-tree-id35085 . -1) (undo-tree-id35086 . -1) (undo-tree-id35087 . -1) (undo-tree-id35088 . -1) (undo-tree-id35089 . -1) 10283) nil (25945 38698 556077 0) 0 nil])
([nil nil ((10287 . 10293) (#("new_value" 0 9 (fontified nil)) . 10287) (undo-tree-id35084 . -9) (10286 . 10287)) nil (25945 38698 556068 0) 0 nil])
([nil nil ((10292 . 10296) (#("k" 0 1 (fontified nil)) . 10292) (undo-tree-id35075 . -1) (10292 . 10293) (#("keys" 0 4 (fontified nil)) . -10292) (undo-tree-id35076 . -4) (10292 . 10296) (#("k" 0 1 (fontified t)) . -10292) (undo-tree-id35077 . -1) (undo-tree-id35078 . -1) (undo-tree-id35079 . -1) (undo-tree-id35080 . -1) (undo-tree-id35081 . -1) (undo-tree-id35082 . -1) (undo-tree-id35083 . -1) 10293) nil (25945 38698 556064 0) 0 nil])
([nil nil ((10296 . 10297)) nil (25945 38698 556052 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10296) (undo-tree-id35067 . -1) (undo-tree-id35068 . -1) (undo-tree-id35069 . -1) (undo-tree-id35070 . -1) (undo-tree-id35071 . -1) (undo-tree-id35072 . -1) (undo-tree-id35073 . -1) (undo-tree-id35074 . -1) 10297) nil (25945 38698 556051 0) 0 nil])
([nil nil ((10296 . 10298)) nil (25945 38698 556041 0) 0 nil])
([nil nil ((10297 . 10298)) nil (25945 38698 556040 0) 0 nil])
([nil nil ((10298 . 10299)) nil (25945 38698 556039 0) 0 nil])
([nil nil ((10297 . 10302) (#("in" 0 2 (fontified nil)) . 10297) (10297 . 10299) (#("index" 0 5 (fontified nil)) . -10297) (10297 . 10302) (#("in" 0 2 (face font-lock-keyword-face fontified t)) . -10297) (undo-tree-id35061 . -2) (undo-tree-id35062 . -1) (undo-tree-id35063 . -1) (undo-tree-id35064 . -1) (undo-tree-id35065 . -2) (undo-tree-id35066 . -2) 10299) nil (25945 38698 556037 0) 0 nil])
([nil nil ((10303 . 10304)) nil (25945 38698 556029 0) 0 nil])
([nil nil ((10304 . 10306)) nil (25945 38698 556028 0) 0 nil])
([nil nil ((10304 . 10309) (#("va" 0 2 (fontified nil)) . 10304) (undo-tree-id35053 . -2) (10304 . 10306) (#("value" 0 5 (fontified nil)) . -10304) (undo-tree-id35054 . -5) (10304 . 10309) (#("va" 0 2 (fontified t)) . -10304) (undo-tree-id35055 . -2) (undo-tree-id35056 . -2) (undo-tree-id35057 . -1) (undo-tree-id35058 . -1) (undo-tree-id35059 . -2) (undo-tree-id35060 . -2) 10306) nil (25945 38698 556025 0) 0 nil])
([nil nil ((10309 . 10310)) nil (25945 38698 556015 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10309) (undo-tree-id35047 . -1) (undo-tree-id35048 . -1) (undo-tree-id35049 . -1) (undo-tree-id35050 . -1) (undo-tree-id35051 . -1) (undo-tree-id35052 . -1) 10310) nil (25945 38698 556012 0) 0 nil])
([nil nil ((10309 . 10311)) nil (25945 38698 555997 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10282 10312 #s(yas--snippet nil (#s(yas--field 1 10286 10311 nil nil nil t #s(yas--exit 10312 nil))) #s(yas--exit 10312 nil) 201 nil #s(yas--field 1 10286 10311 nil nil nil t #s(yas--exit 10312 nil)) nil nil))) nil (25945 38698 555996 0) 0 nil])
([nil nil ((10312 . 10313)) nil (25945 38698 555992 0) 0 nil])
([nil nil ((10311 . 10314) (t 25945 38698 631354 598000)) nil (25945 38716 26498 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10312 10323 #s(yas--snippet nil nil #s(yas--exit 10323 nil) 202 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10323 nil) 202 nil nil nil nil)) (10312 . 10323) (#("to_string()$0" 0 13 (fontified nil)) . 10312) (10312 . 10325) (#("to" 0 2 (fontified nil)) . 10312) (10312 . 10314) (#("to_string() (as ToString)" 0 25 (fontified nil)) . -10312) (10312 . 10337) (#("to" 0 2 (fontified t)) . -10312) (undo-tree-id35096 . -1) (undo-tree-id35097 . -2) (undo-tree-id35098 . -1) (undo-tree-id35099 . -1) (undo-tree-id35100 . -1) (undo-tree-id35101 . -1) (undo-tree-id35102 . -1) (undo-tree-id35103 . -2) (undo-tree-id35104 . -2) (undo-tree-id35105 . -2) (undo-tree-id35106 . -2) 10314) nil (25945 38716 26493 0) 0 nil])
([nil nil ((10203 . 10204) (t 25945 38716 102859 737000)) nil (25945 38741 98042 0) 0 nil])
([nil nil ((10326 . 10332) (t 25945 38741 174214 423000)) nil (25945 38777 440621 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10398 . 10399) (nil fontified nil 10397 . 10399) (nil fontified nil 10386 . 10397) (nil fontified nil 10378 . 10386) (nil fontified nil 10376 . 10378) (nil fontified nil 10371 . 10376) (nil fontified nil 10366 . 10371) (nil fontified nil 10356 . 10366) (nil fontified nil 10354 . 10356) (nil fontified nil 10337 . 10354) (nil fontified nil 10332 . 10337) (10332 . 10399)) nil (25945 38777 440619 0) 0 nil])
([nil nil ((10395 . 10400) (#("	    " 0 5 (fontified nil)) . -10332) (10399 . 10400)) nil (25945 38777 440615 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10466 . 10467) (nil fontified nil 10465 . 10467) (nil fontified nil 10454 . 10465) (nil fontified nil 10446 . 10454) (nil fontified nil 10444 . 10446) (nil fontified nil 10439 . 10444) (nil fontified nil 10434 . 10439) (nil fontified nil 10424 . 10434) (nil fontified nil 10422 . 10424) (nil fontified nil 10405 . 10422) (nil fontified nil 10400 . 10405) (10400 . 10467)) nil (25945 38777 440613 0) 0 nil])
([nil nil ((10463 . 10468) (#("	    " 0 5 (fontified nil)) . -10400) (10467 . 10468)) nil (25945 38777 440609 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10534 . 10535) (nil fontified nil 10533 . 10535) (nil fontified nil 10522 . 10533) (nil fontified nil 10514 . 10522) (nil fontified nil 10512 . 10514) (nil fontified nil 10507 . 10512) (nil fontified nil 10502 . 10507) (nil fontified nil 10492 . 10502) (nil fontified nil 10490 . 10492) (nil fontified nil 10473 . 10490) (nil fontified nil 10468 . 10473) (10468 . 10535)) nil (25945 38777 440607 0) 0 nil])
([nil nil ((10531 . 10536) (#("	    " 0 5 (fontified nil)) . -10468) (10535 . 10536)) nil (25945 38777 440603 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -10530) (undo-tree-id35271 . -1) (undo-tree-id35272 . 1) (undo-tree-id35273 . -1) (undo-tree-id35274 . -1) (undo-tree-id35275 . -1) (undo-tree-id35276 . -1) (undo-tree-id35277 . -1) (undo-tree-id35278 . -1) (undo-tree-id35279 . -1) (undo-tree-id35280 . -1) (#("	" 0 1 (fontified t)) . -10531) (undo-tree-id35281 . -1) (undo-tree-id35282 . -1) (undo-tree-id35283 . -1) (undo-tree-id35284 . -1) (undo-tree-id35285 . -1) (undo-tree-id35286 . -1) (undo-tree-id35287 . -1) (#(" " 0 1 (fontified t)) . -10532) (undo-tree-id35288 . -1) (undo-tree-id35289 . -1) (undo-tree-id35290 . -1) (undo-tree-id35291 . -1) (undo-tree-id35292 . -1) (undo-tree-id35293 . -1) (#(" " 0 1 (fontified t)) . -10533) (undo-tree-id35294 . -1) (undo-tree-id35295 . -1) (undo-tree-id35296 . -1) (undo-tree-id35297 . -1) (undo-tree-id35298 . -1) (#(" " 0 1 (fontified t)) . -10534) (undo-tree-id35299 . -1) (undo-tree-id35300 . -1) (undo-tree-id35301 . -1) (undo-tree-id35302 . -1) (#(" " 0 1 (fontified t)) . -10535) (undo-tree-id35303 . -1) (undo-tree-id35304 . -1) (undo-tree-id35305 . -1) 10536) nil (25945 38777 440599 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified t)) . -10343) (undo-tree-id35251 . -5) (undo-tree-id35252 . -5) (undo-tree-id35253 . -5) (undo-tree-id35254 . -5) (undo-tree-id35255 . -5) (undo-tree-id35256 . -5) (undo-tree-id35257 . -5) (undo-tree-id35258 . -5) (undo-tree-id35259 . -5) (undo-tree-id35260 . -5) (undo-tree-id35261 . -5) (undo-tree-id35262 . -5) (undo-tree-id35263 . -5) (undo-tree-id35264 . -5) (undo-tree-id35265 . -5) (undo-tree-id35266 . -5) (undo-tree-id35267 . -5) (undo-tree-id35268 . -5) (undo-tree-id35269 . -5) (undo-tree-id35270 . -5) 10348) nil (25945 38777 440562 0) 0 nil])
([nil nil ((10343 . 10344)) nil (25945 38777 440541 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -10343) (undo-tree-id35249 . -1) (undo-tree-id35250 . -1) 10344) nil (25945 38777 440540 0) 0 nil])
([nil nil ((#("activation_" 0 11 (fontified t)) . -10332) (undo-tree-id35226 . -11) (undo-tree-id35227 . -11) (undo-tree-id35228 . -11) (undo-tree-id35229 . -11) (undo-tree-id35230 . -11) (undo-tree-id35231 . -11) (undo-tree-id35232 . -11) (undo-tree-id35233 . -11) (undo-tree-id35234 . -11) (undo-tree-id35235 . -11) (undo-tree-id35236 . -11) (undo-tree-id35237 . -11) (undo-tree-id35238 . -11) (undo-tree-id35239 . -11) (undo-tree-id35240 . -11) (undo-tree-id35241 . -11) (undo-tree-id35242 . -11) (undo-tree-id35243 . -11) (undo-tree-id35244 . -11) (undo-tree-id35245 . -11) (undo-tree-id35246 . -11) (undo-tree-id35247 . -11) (undo-tree-id35248 . -11) 10343) nil (25945 38777 440535 0) 0 nil])
([nil nil ((10332 . 10333)) nil (25945 38777 440511 0) 0 nil])
([nil nil ((10332 . 10345) (#("t" 0 1 (fontified nil)) . 10332) (10332 . 10333) (#("trigger_value" 0 13 (fontified nil)) . -10332) (10332 . 10345) (#("t" 0 1 (fontified t)) . -10332) (undo-tree-id35222 . -1) (undo-tree-id35223 . -1) (undo-tree-id35224 . -1) (undo-tree-id35225 . -1) 10333) nil (25945 38777 440509 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified t)) . -10408) (undo-tree-id35202 . -5) (undo-tree-id35203 . -5) (undo-tree-id35204 . -5) (undo-tree-id35205 . -5) (undo-tree-id35206 . -5) (undo-tree-id35207 . -5) (undo-tree-id35208 . -5) (undo-tree-id35209 . -5) (undo-tree-id35210 . -5) (undo-tree-id35211 . -5) (undo-tree-id35212 . -5) (undo-tree-id35213 . -5) (undo-tree-id35214 . -5) (undo-tree-id35215 . -5) (undo-tree-id35216 . -5) (undo-tree-id35217 . -5) (undo-tree-id35218 . -5) (undo-tree-id35219 . -5) (undo-tree-id35220 . -5) (undo-tree-id35221 . -5) 10413) nil (25945 38777 440502 0) 0 nil])
([nil nil ((#("activation_" 0 11 (fontified t)) . -10397) (undo-tree-id35181 . -11) (undo-tree-id35182 . -11) (undo-tree-id35183 . -11) (undo-tree-id35184 . -11) (undo-tree-id35185 . -11) (undo-tree-id35186 . -11) (undo-tree-id35187 . -11) (undo-tree-id35188 . -11) (undo-tree-id35189 . -11) (undo-tree-id35190 . -11) (undo-tree-id35191 . -11) (undo-tree-id35192 . -11) (undo-tree-id35193 . -11) (undo-tree-id35194 . -11) (undo-tree-id35195 . -11) (undo-tree-id35196 . -11) (undo-tree-id35197 . -11) (undo-tree-id35198 . -11) (undo-tree-id35199 . -11) (undo-tree-id35200 . -11) (undo-tree-id35201 . -11) 10408) nil (25945 38777 440479 0) 0 nil])
([nil nil ((10397 . 10399)) nil (25945 38777 440457 0) 0 nil])
([nil nil ((10397 . 10408) (#("re" 0 2 (fontified nil)) . 10397) (10397 . 10399) (#("reset_value" 0 11 (fontified nil)) . -10397) (10397 . 10408) (#("re" 0 2 (fontified t)) . -10397) (undo-tree-id35176 . -2) (undo-tree-id35177 . -1) (undo-tree-id35178 . -2) (undo-tree-id35179 . -2) (undo-tree-id35180 . -2) 10399) nil (25945 38777 440455 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified t)) . -10471) (undo-tree-id35160 . -5) (undo-tree-id35161 . -5) (undo-tree-id35162 . -5) (undo-tree-id35163 . -5) (undo-tree-id35164 . -5) (undo-tree-id35165 . -5) (undo-tree-id35166 . -5) (undo-tree-id35167 . -5) (undo-tree-id35168 . -5) (undo-tree-id35169 . -5) (undo-tree-id35170 . -5) (undo-tree-id35171 . -5) (undo-tree-id35172 . -5) (undo-tree-id35173 . -5) (undo-tree-id35174 . -5) (undo-tree-id35175 . -5) 10476) nil (25945 38777 440446 0) 0 nil])
([nil nil ((#("activation_" 0 11 (fontified t)) . -10460) (undo-tree-id35143 . -11) (undo-tree-id35144 . -11) (undo-tree-id35145 . -11) (undo-tree-id35146 . -11) (undo-tree-id35147 . -11) (undo-tree-id35148 . -11) (undo-tree-id35149 . -11) (undo-tree-id35150 . -11) (undo-tree-id35151 . -11) (undo-tree-id35152 . -11) (undo-tree-id35153 . -11) (undo-tree-id35154 . -11) (undo-tree-id35155 . -11) (undo-tree-id35156 . -11) (undo-tree-id35157 . -11) (undo-tree-id35158 . -11) (undo-tree-id35159 . -11) 10471) nil (25945 38777 440427 0) 0 nil])
([nil nil ((10460 . 10462)) nil (25945 38777 440404 0) 0 nil])
([nil nil ((10460 . 10474) (#("lo" 0 2 (fontified nil)) . 10460) (10460 . 10462) (#("lower_deadzone" 0 14 (fontified nil)) . -10460) (10460 . 10474) (#("lo" 0 2 (fontified t)) . -10460) (undo-tree-id35133 . -2) (undo-tree-id35134 . -1) (undo-tree-id35135 . -1) (undo-tree-id35136 . -1) (undo-tree-id35137 . -1) (undo-tree-id35138 . -1) (undo-tree-id35139 . -1) (undo-tree-id35140 . -1) (undo-tree-id35141 . -2) (undo-tree-id35142 . -2) 10462) nil (25945 38777 440402 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -10376) (undo-tree-id35119 . -1) (undo-tree-id35120 . -1) (undo-tree-id35121 . -1) (undo-tree-id35122 . -1) (undo-tree-id35123 . -1) (undo-tree-id35124 . -1) (undo-tree-id35125 . -1) (undo-tree-id35126 . -1) (undo-tree-id35127 . -1) (undo-tree-id35128 . -1) (undo-tree-id35129 . -1) (undo-tree-id35130 . -1) (undo-tree-id35131 . -1) (undo-tree-id35132 . -1) 10377) nil (25945 38777 440388 0) 0 nil])
([nil nil ((10376 . 10377)) nil (25945 38777 440371 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -10439) (undo-tree-id35113 . -1) (undo-tree-id35114 . -1) (undo-tree-id35115 . -1) (undo-tree-id35116 . -1) (undo-tree-id35117 . -1) (undo-tree-id35118 . -1) 10440) nil (25945 38777 440370 0) 0 nil])
([nil nil ((10439 . 10440)) nil (25945 38777 440362 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -10505) (undo-tree-id35107 . -1) (undo-tree-id35108 . -1) (undo-tree-id35109 . -1) (undo-tree-id35110 . -1) (undo-tree-id35111 . -1) (undo-tree-id35112 . -1) 10506) nil (25945 38777 440360 0) 0 nil])
([nil nil ((10505 . 10506)) nil (25945 38777 440343 0) 0 nil])
([nil nil ((10258 . 10264) (t 25945 38777 516090 987000)) nil (25945 38805 800414 0) 0 nil])
([nil nil ((10264 . 10269)) nil (25945 38805 800413 0) 0 nil])
([nil nil ((10269 . 10270) (#("0" 0 1 (fontified nil)) . -10269) (10269 . 10270)) nil (25945 38805 800412 0) 0 nil])
([nil nil ((10270 . 10271)) nil (25945 38805 800410 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -10269) (undo-tree-id35374 . -1) (undo-tree-id35375 . -1) (undo-tree-id35376 . -1) (undo-tree-id35377 . -1) (undo-tree-id35378 . -1) (undo-tree-id35379 . -1) (undo-tree-id35380 . -1) (undo-tree-id35381 . -1) (undo-tree-id35382 . -1) (undo-tree-id35383 . -1) (undo-tree-id35384 . -1) (undo-tree-id35385 . -1) (undo-tree-id35386 . -1) (undo-tree-id35387 . -1) (#("." 0 1 (fontified t)) . -10270) (undo-tree-id35388 . -1) (undo-tree-id35389 . -1) (undo-tree-id35390 . -1) (undo-tree-id35391 . -1) 10271) nil (25945 38805 800408 0) 0 nil])
([nil nil ((10269 . 10273)) nil (25945 38805 800389 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 10275 10309 nil nil nil t #s(yas--exit 10310 nil))) #s(yas--exit 10310 nil) 203 nil #s(yas--field 1 10275 10309 nil nil nil t #s(yas--exit 10310 nil)) nil nil)) (10271 . 10285) (#("set(${1:new_value})$0" 0 21 (fontified nil)) . 10271) (10271 . 10292) (#("se" 0 2 (fontified nil)) . 10271) (10271 . 10273) (#("set(…) (as SignalSet)" 0 21 (fontified nil)) . -10271) (10271 . 10292) (#("se" 0 2 (fontified t)) . -10271) (undo-tree-id35369 . -2) (undo-tree-id35370 . -1) (undo-tree-id35371 . -1) (undo-tree-id35372 . -2) (undo-tree-id35373 . -2) 10273) nil (25945 38805 800386 0) 0 nil])
([nil nil ((10276 . 10280) (#("new_value" 0 9 (fontified nil)) . 10276) (undo-tree-id35368 . -9) (10275 . 10276)) nil (25945 38805 800378 0) 0 nil])
([nil nil ((10275 . 10280) (#("state" 0 5 (fontified nil)) . 10275) (undo-tree-id35344 . -5) (10275 . 10280) (#("state" 0 5 (fontified t)) . -10275) (undo-tree-id35345 . -5) (undo-tree-id35346 . -5) (undo-tree-id35347 . -5) (undo-tree-id35348 . -1) (undo-tree-id35349 . -1) (undo-tree-id35350 . -1) (undo-tree-id35351 . -1) (undo-tree-id35352 . -1) (undo-tree-id35353 . -2) (undo-tree-id35354 . -2) (undo-tree-id35355 . -3) (undo-tree-id35356 . -3) (undo-tree-id35357 . -3) (undo-tree-id35358 . -3) (undo-tree-id35359 . -4) (undo-tree-id35360 . -4) (undo-tree-id35361 . -4) (undo-tree-id35362 . -5) (undo-tree-id35363 . -5) (undo-tree-id35364 . -5) (undo-tree-id35365 . -5) (undo-tree-id35366 . -5) (undo-tree-id35367 . -5) 10280) nil (25945 38805 800374 0) 0 nil])
([nil nil ((10280 . 10282)) nil (25945 38805 800343 0) 0 nil])
([nil nil ((10281 . 10285) (#("k" 0 1 (fontified nil)) . 10281) (undo-tree-id35335 . -1) (10281 . 10282) (#("keys" 0 4 (fontified nil)) . -10281) (undo-tree-id35336 . -4) (10281 . 10285) (#("k" 0 1 (fontified t)) . -10281) (undo-tree-id35337 . -1) (undo-tree-id35338 . -1) (undo-tree-id35339 . -1) (undo-tree-id35340 . -1) (undo-tree-id35341 . -1) (undo-tree-id35342 . -1) (undo-tree-id35343 . -1) 10282) nil (25945 38805 800341 0) 0 nil])
([nil nil ((10285 . 10287)) nil (25945 38805 800329 0) 0 nil])
([nil nil ((10286 . 10291)) nil (25945 38805 800328 0) 0 nil])
([nil nil ((10292 . 10295)) nil (25945 38805 800327 0) 0 nil])
([nil nil ((10293 . 10297) (#("mo" 0 2 (fontified nil)) . 10293) (undo-tree-id35325 . -2) (10293 . 10295) (#("mode" 0 4 (fontified nil)) . -10293) (undo-tree-id35326 . -4) (10293 . 10297) (#("mo" 0 2 (fontified t)) . -10293) (undo-tree-id35327 . -2) (undo-tree-id35328 . -2) (undo-tree-id35329 . -1) (undo-tree-id35330 . -1) (undo-tree-id35331 . -2) (undo-tree-id35332 . -2) (undo-tree-id35333 . -2) (undo-tree-id35334 . -2) 10295) nil (25945 38805 800325 0) 0 nil])
([nil nil ((10297 . 10298)) nil (25945 38805 800312 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10297) (undo-tree-id35317 . -1) (undo-tree-id35318 . -1) (undo-tree-id35319 . -1) (undo-tree-id35320 . -1) (undo-tree-id35321 . -1) (undo-tree-id35322 . -1) (undo-tree-id35323 . -1) (undo-tree-id35324 . -1) 10298) nil (25945 38805 800310 0) 0 nil])
([nil nil ((10297 . 10300)) nil (25945 38805 800301 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10298 10309 #s(yas--snippet nil nil #s(yas--exit 10309 nil) 204 nil nil #s(yas--field 1 10275 10309 nil nil nil t #s(yas--exit 10310 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10309 nil) 204 nil nil #s(yas--field 1 10275 10309 nil nil nil t #s(yas--exit 10310 nil)) nil)) (10298 . 10309) (#("to_string()$0" 0 13 (fontified nil)) . 10298) (undo-tree-id35306 . -13) (10298 . 10311) (#("to" 0 2 (fontified nil)) . 10298) (undo-tree-id35307 . -2) (10298 . 10300) (#("to_string() (as ToString)" 0 25 (fontified nil)) . -10298) (undo-tree-id35308 . -25) (10298 . 10323) (#("to" 0 2 (fontified t)) . -10298) (undo-tree-id35309 . -2) (undo-tree-id35310 . -2) (undo-tree-id35311 . -1) (undo-tree-id35312 . -1) (undo-tree-id35313 . -2) (undo-tree-id35314 . -2) (undo-tree-id35315 . -2) (undo-tree-id35316 . -2) 10300) nil (25945 38805 800297 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10271 10310 #s(yas--snippet nil (#s(yas--field 1 10275 10309 nil nil nil t #s(yas--exit 10310 nil))) #s(yas--exit 10310 nil) 203 nil #s(yas--field 1 10275 10309 nil nil nil t #s(yas--exit 10310 nil)) nil nil))) nil (25945 38805 800274 0) 0 nil])
([nil nil ((10310 . 10311)) nil (25945 39080 887311 0) 0 nil])
([nil current ((apply -69 10049 10654 undo--wrap-and-run-primitive-undo 10049 10654 ((10647 . 10650) (10637 . 10640) (10637 . 10638) (#("	" 0 1 (fontified t)) . 10637) (10633 . 10637) (10564 . 10567) (10564 . 10565) (#("	" 0 1 (fontified t)) . 10564) (#<marker at 10564 in component.rs> . -1) (10560 . 10564) (10494 . 10497) (10494 . 10495) (#("	" 0 1 (fontified t)) . 10494) (10490 . 10494) (10422 . 10425) (10422 . 10423) (#("	" 0 1 (fontified t)) . 10422) (10418 . 10422) (10347 . 10350) (10347 . 10348) (#("	" 0 1 (fontified t)) . 10347) (10343 . 10347) (10287 . 10290) (10287 . 10288) (#("	" 0 1 (fontified t)) . 10287) (10283 . 10287) (10168 . 10171) (10168 . 10169) (#("	" 0 1 (fontified t)) . 10168) (10164 . 10168) (10122 . 10125) (10122 . 10123) (#("	" 0 1 (fontified t)) . 10122) (10118 . 10122) (10085 . 10088) (10085 . 10086) (#("	" 0 1 (fontified t)) . 10085) (10081 . 10085) (10053 . 10056) 10049))) nil (25945 39290 740950 0) 0 nil] [nil nil ((apply -69 10049 10654 undo--wrap-and-run-primitive-undo 10049 10654 ((10647 . 10650) (10637 . 10640) (10637 . 10638) (#("	" 0 1 (fontified t)) . 10637) (10633 . 10637) (10564 . 10567) (10564 . 10565) (#("	" 0 1 (fontified t)) . 10564) (#<marker at 10564 in component.rs> . -1) (10560 . 10564) (10494 . 10497) (10494 . 10495) (#("	" 0 1 (fontified t)) . 10494) (10490 . 10494) (10422 . 10425) (10422 . 10423) (#("	" 0 1 (fontified t)) . 10422) (10418 . 10422) (10347 . 10350) (10347 . 10348) (#("	" 0 1 (fontified t)) . 10347) (10343 . 10347) (10287 . 10290) (10287 . 10288) (#("	" 0 1 (fontified t)) . 10287) (10283 . 10287) (10168 . 10171) (10168 . 10169) (#("	" 0 1 (fontified t)) . 10168) (10164 . 10168) (10122 . 10125) (10122 . 10123) (#("	" 0 1 (fontified t)) . 10122) (10118 . 10122) (10085 . 10088) (10085 . 10086) (#("	" 0 1 (fontified t)) . 10085) (10081 . 10085) (10053 . 10056) 10049))) ((apply 69 10049 10585 undo--wrap-and-run-primitive-undo 10049 10585 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 10053) (#("    " 0 4 (fontified t)) . 10081) (10085 . 10086) (#("	" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 10085) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 10085) (#("    " 0 4 (fontified t)) . 10118) (10122 . 10123) (#("	" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 10122) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 10122) (#("    " 0 4 (fontified t)) . 10164) (10168 . 10169) (#("	" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 10168) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 10168) (#("    " 0 4 (fontified t)) . 10283) (10287 . 10288) (#("	" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 10287) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 10287) (#("    " 0 4 (fontified t)) . 10343) (10347 . 10348) (#("	" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 10347) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 10347) (#("    " 0 4 (fontified t)) . 10418) (10422 . 10423) (#("	" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 10422) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 10422) (#("    " 0 4 (fontified t)) . 10490) (10494 . 10495) (#("	" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 10494) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 10494) (#("    " 0 4 (fontified t)) . 10560) (10564 . 10565) (#("	" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 10564) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 10564) (#("    " 0 4 (fontified t)) . 10633) (10637 . 10638) (#("	" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 10637) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 10637) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 10647) 11129))) (25945 39045 146053 0) 0 nil])
nil
nil
