(undo-tree-save-format-version . 1)
"e43d858ad28ee696f3f6cfba0415f0c4eaa95c66"
[nil nil nil nil (25965 18985 226362 0) 0 nil]
([nil nil ((199 . 200) (t 25954 1383 298670 633000)) nil (25965 18985 226361 0) 0 nil])
([nil nil ((200 . 206)) nil (25965 18985 226360 0) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-constant-face fontified t)) . -204) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -205) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) 206) nil (25965 18985 226358 0) 0 nil])
([nil nil ((204 . 209)) nil (25965 18985 226341 0) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-constant-face fontified t)) . -206) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (#(":" 0 1 (fontified t)) . -207) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (#(":" 0 1 (fontified t)) . -208) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) 209) nil (25965 18985 226338 0) 0 nil])
([nil nil ((206 . 207)) nil (25965 18985 226311 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-constant-face fontified t)) . -205) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (#("b" 0 1 (face font-lock-constant-face fontified t)) . -206) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) 207) nil (25965 18985 226308 0) 0 nil])
([nil nil ((#("use w" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 5 (face font-lock-constant-face fontified t)) . 200) (undo-tree-id484 . -4) (undo-tree-id485 . -3) (undo-tree-id486 . -3) (undo-tree-id487 . -3) (undo-tree-id488 . -4) (undo-tree-id489 . -4) (undo-tree-id490 . -4) (undo-tree-id491 . -4) (undo-tree-id492 . -4) (undo-tree-id493 . -4) (undo-tree-id494 . -4) (undo-tree-id495 . -4) (undo-tree-id496 . -4) (undo-tree-id497 . -4) (undo-tree-id498 . -4) (undo-tree-id499 . -4) (undo-tree-id500 . -4) (undo-tree-id501 . -4) (undo-tree-id502 . -4) (undo-tree-id503 . -4) (undo-tree-id504 . -4) (undo-tree-id505 . -4) (undo-tree-id506 . -4) (undo-tree-id507 . -4) (undo-tree-id508 . -4) (undo-tree-id509 . -4) (undo-tree-id510 . -4) (undo-tree-id511 . -4) (undo-tree-id512 . -4) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -5) (undo-tree-id516 . -5) (undo-tree-id517 . -5) (undo-tree-id518 . -5) (undo-tree-id519 . -5) (undo-tree-id520 . -5) (undo-tree-id521 . -5) (undo-tree-id522 . -5) (undo-tree-id523 . -5) (undo-tree-id524 . -5) (undo-tree-id525 . -5) (undo-tree-id526 . -5) (undo-tree-id527 . -5) (undo-tree-id528 . -5) (undo-tree-id529 . -5) (undo-tree-id530 . -5) (undo-tree-id531 . -5) (undo-tree-id532 . -5) (undo-tree-id533 . -5) (undo-tree-id534 . -5) (undo-tree-id535 . -5) (undo-tree-id536 . -5) (undo-tree-id537 . -5) (undo-tree-id538 . -5) (undo-tree-id539 . -5) (undo-tree-id540 . -5) (undo-tree-id541 . -5) (undo-tree-id542 . -5) (undo-tree-id543 . -5) (undo-tree-id544 . -5) (undo-tree-id545 . -5) (undo-tree-id546 . -5) (undo-tree-id547 . -5) (undo-tree-id548 . -5) (undo-tree-id549 . -5) (undo-tree-id550 . -5) (undo-tree-id551 . -5) (undo-tree-id552 . -5) (undo-tree-id553 . -5) (undo-tree-id554 . -5)) nil (25965 18985 226265 0) 0 nil])
([nil nil ((200 . 203)) nil (25965 18985 226177 0) 0 nil])
([nil nil ((203 . 205)) nil (25965 18985 226176 0) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-constant-face fontified t)) . -204) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) 205) nil (25965 18985 226175 0) 0 nil])
([nil nil ((204 . 207)) nil (25965 18985 226169 0) 0 nil])
([nil nil ((204 . 211) (#("web" 0 3 (fontified nil)) . 204) (204 . 207) (#("web_sys" 0 7 (fontified nil)) . -204) (204 . 211) (#("web" 0 3 (face font-lock-constant-face fontified t)) . -204) (undo-tree-id470 . -3) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -2) (undo-tree-id474 . -2) (undo-tree-id475 . -3) (undo-tree-id476 . -3) (undo-tree-id477 . -3) (undo-tree-id478 . -3) (undo-tree-id479 . -3) 207) nil (25965 18985 226167 0) 0 nil])
([nil nil ((211 . 214)) nil (25965 18985 226155 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -211) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (#(":" 0 1 (fontified t)) . -212) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (#("H" 0 1 (face font-lock-type-face fontified t)) . -213) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) 214) nil (25965 18985 226152 0) 0 nil])
([nil nil ((211 . 215)) nil (25965 18985 226124 0) 0 nil])
([nil nil ((215 . 216)) nil (25965 18985 226123 0) 0 nil])
([nil nil ((#("H" 0 1 (face font-lock-type-face fontified t)) . -213) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -214) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (#("d" 0 1 (face font-lock-type-face fontified t)) . -215) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) 216) nil (25965 18985 226118 0) 0 nil])
([nil nil ((213 . 214)) nil (25965 18985 226051 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-constant-face fontified t)) . -210) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#(":" 0 1 (fontified t)) . -211) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (#(":" 0 1 (fontified t)) . -212) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (#("d" 0 1 (fontified t)) . -213) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) 214) nil (25965 18985 226043 0) 0 nil])
([nil nil ((#("sy" 0 2 (face font-lock-constant-face fontified t)) . -208) (undo-tree-id133 . -2) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (undo-tree-id141 . -2) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (undo-tree-id144 . -2) (undo-tree-id145 . -2) (undo-tree-id146 . -2) (undo-tree-id147 . -2) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -2) (undo-tree-id161 . -2) (undo-tree-id162 . -2) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -2) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -2) (undo-tree-id181 . -2) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (undo-tree-id185 . -2) (undo-tree-id186 . -2) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) 210) nil (25965 18985 225859 0) 0 nil])
([nil nil ((#("use web_" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 8 (face font-lock-constant-face fontified t)) . 200) (undo-tree-id18 . -2) (undo-tree-id19 . -8) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (undo-tree-id41 . -4) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (undo-tree-id46 . -4) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (undo-tree-id49 . -4) (undo-tree-id50 . -4) (undo-tree-id51 . -4) (undo-tree-id52 . -4) (undo-tree-id53 . -8) (undo-tree-id54 . -8) (undo-tree-id55 . -8) (undo-tree-id56 . -8) (undo-tree-id57 . -8) (undo-tree-id58 . -8) (undo-tree-id59 . -8) (undo-tree-id60 . -8) (undo-tree-id61 . -8) (undo-tree-id62 . -8) (undo-tree-id63 . -8) (undo-tree-id64 . -8) (undo-tree-id65 . -8) (undo-tree-id66 . -8) (undo-tree-id67 . -8) (undo-tree-id68 . -8) (undo-tree-id69 . -8) (undo-tree-id70 . -8) (undo-tree-id71 . -8) (undo-tree-id72 . -8) (undo-tree-id73 . -8) (undo-tree-id74 . -8) (undo-tree-id75 . -8) (undo-tree-id76 . -8) (undo-tree-id77 . -8) (undo-tree-id78 . -8) (undo-tree-id79 . -8) (undo-tree-id80 . -8) (undo-tree-id81 . -8) (undo-tree-id82 . -8) (undo-tree-id83 . -8) (undo-tree-id84 . -8) (undo-tree-id85 . -8) (undo-tree-id86 . -8) (undo-tree-id87 . -8) (undo-tree-id88 . -8) (undo-tree-id89 . -8) (undo-tree-id90 . -8) (undo-tree-id91 . -8) (undo-tree-id92 . -8) (undo-tree-id93 . -8) (undo-tree-id94 . -8) (undo-tree-id95 . -8) (undo-tree-id96 . -8) (undo-tree-id97 . -8) (undo-tree-id98 . -8) (undo-tree-id99 . -8) (undo-tree-id100 . -8) (undo-tree-id101 . -8) (undo-tree-id102 . -8) (undo-tree-id103 . -8) (undo-tree-id104 . -8) (undo-tree-id105 . -8) (undo-tree-id106 . -8) (undo-tree-id107 . -8) (undo-tree-id108 . -8) (undo-tree-id109 . -8) (undo-tree-id110 . -8) (undo-tree-id111 . -8) (undo-tree-id112 . -8) (undo-tree-id113 . -8) (undo-tree-id114 . -8) (undo-tree-id115 . -8) (undo-tree-id116 . -8) (undo-tree-id117 . -8) (undo-tree-id118 . -8) (undo-tree-id119 . -8) (undo-tree-id120 . -8) (undo-tree-id121 . -8) (undo-tree-id122 . -8) (undo-tree-id123 . -8) (undo-tree-id124 . -8) (undo-tree-id125 . -8) (undo-tree-id126 . -8) (undo-tree-id127 . -8) (undo-tree-id128 . -8) (undo-tree-id129 . -8) (undo-tree-id130 . -8) (undo-tree-id131 . -8) (undo-tree-id132 . -8)) nil (25965 18985 225769 0) 0 nil])
([nil nil ((200 . 203)) nil (25965 18985 225644 0) 0 nil])
([nil nil ((apply yas--snippet-revive 200 204 #s(yas--snippet nil nil #s(yas--exit 204 nil) 0 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 204 nil) 0 nil nil nil nil)) (200 . 204) (#("use $0" 0 6 (fontified nil)) . 200) (200 . 206) (#("use" 0 3 (fontified nil)) . 200) (200 . 203) (#("use" 0 3 (face font-lock-keyword-face fontified t)) . -200) (undo-tree-id7 . -3) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -3) (undo-tree-id14 . -3) (undo-tree-id15 . -3) (undo-tree-id16 . -3) (undo-tree-id17 . -3) 203) nil (25965 18985 225642 0) 0 nil])
([nil nil ((#("use " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . 200) (undo-tree-id0 . -4) (undo-tree-id1 . -4) (undo-tree-id2 . -4) (undo-tree-id3 . -4) (undo-tree-id4 . -4) (undo-tree-id5 . -4) (undo-tree-id6 . -4)) nil (25965 18985 225624 0) 0 nil])
([nil nil ((200 . 202) (t 25965 18985 231751 189000)) nil (25965 19235 640437 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -200) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (#("u" 0 1 (fontified t)) . -201) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) 202) nil (25965 19235 640434 0) 0 nil])
([nil nil ((200 . 207)) nil (25965 19235 640423 0) 0 nil])
([nil nil ((204 . 211) (#("web" 0 3 (fontified nil)) . 204) (204 . 207) (#("web_sys" 0 7 (fontified nil)) . -204) (204 . 211) (#("web" 0 3 (face font-lock-constant-face fontified t)) . -204) (undo-tree-id641 . -3) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -2) (undo-tree-id645 . -2) (undo-tree-id646 . -2) (undo-tree-id647 . -3) (undo-tree-id648 . -3) (undo-tree-id649 . -3) (undo-tree-id650 . -3) 207) nil (25965 19235 640421 0) 0 nil])
([nil nil ((211 . 214)) nil (25965 19235 640408 0) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -213) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) 214) nil (25965 19235 640406 0) 0 nil])
([nil nil ((213 . 217)) nil (25965 19235 640392 0) 0 nil])
([nil nil ((#("H" 0 1 (face font-lock-type-face fontified t)) . -213) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -214) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (#("d" 0 1 (face font-lock-type-face fontified t)) . -215) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (#(";" 0 1 (fontified t)) . -216) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) 217 (t 25965 19235 644025 278000)) nil (25965 19390 476375 0) 0 nil])
([nil nil ((213 . 214)) nil (25965 19390 476305 0) 0 nil])
([nil nil ((#("N" 0 1 (face font-lock-type-face fontified t)) . -213) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) 214) nil (25965 19390 476303 0) 0 nil])
([nil nil ((213 . 217)) nil (25965 19855 513171 0) 0 nil])
([nil nil ((#("use web_sys::Hid;" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 11 (face font-lock-constant-face fontified t) 11 13 (fontified t) 13 16 (face font-lock-type-face fontified t) 16 17 (fontified t)) . 200) (undo-tree-id751 . -13) (undo-tree-id752 . -15) (undo-tree-id753 . -17) (undo-tree-id754 . -17) (undo-tree-id755 . -17) (undo-tree-id756 . -17) (t 25965 19856 12741 92000)) nil (25965 23123 833788 0) 0 nil] [nil nil ((#("use web_sys::Hid;" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 11 (face font-lock-constant-face fontified t) 11 13 (fontified t) 13 16 (face font-lock-type-face fontified t) 16 17 (fontified t)) . 200) (undo-tree-id744 . -15) (undo-tree-id745 . -13) (undo-tree-id746 . -15) (undo-tree-id747 . -17) (undo-tree-id748 . -17)) ((200 . 217) (t 25965 19805 758289 695000)) (25965 19805 753725 0) 0 nil] [nil nil ((#("StreamExt;
" 0 9 (face font-lock-type-face fontified t) 9 11 (fontified t)) . -189) (undo-tree-id732 . -11) (undo-tree-id733 . -10) (undo-tree-id734 . -11) (undo-tree-id735 . -11) (undo-tree-id736 . -11) (undo-tree-id737 . -11) (undo-tree-id738 . -11) (undo-tree-id739 . -11) (undo-tree-id740 . -11) (undo-tree-id741 . -11) (undo-tree-id742 . -11) (undo-tree-id743 . -11) 200 (t 25965 19390 480374 394000)) ((189 . 200) (t 25965 19803 2424 872000)) (25965 19802 997026 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 200) (undo-tree-id750 . -1)) nil (25965 23123 833777 0) 0 nil])
nil
nil
([nil nil ((apply -12 10106 10379 undo--wrap-and-run-primitive-undo 10106 10379 ((10350 . 10353) (10272 . 10275) (10160 . 10163) (10111 . 10114) 10106))) nil (25966 40415 860451 0) 0 nil])
([nil nil ((10105 . 10111)) nil (25966 40415 860450 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10458 . 10459) (nil fontified nil 10449 . 10459) (nil fontified nil 10443 . 10449) (nil fontified nil 10442 . 10443) (nil fontified nil 10438 . 10442) (nil fontified nil 10436 . 10438) (nil fontified nil 10429 . 10436) (nil fontified nil 10428 . 10429) (nil fontified nil 10426 . 10428) (nil fontified nil 10421 . 10426) (nil fontified nil 10397 . 10421) (nil fontified nil 10389 . 10397) (nil fontified nil 10387 . 10389) (nil fontified nil 10367 . 10387) (nil fontified nil 10364 . 10367) (nil fontified nil 10358 . 10364) (nil fontified nil 10357 . 10358) (nil fontified nil 10354 . 10357) (nil fontified nil 10353 . 10354) (nil fontified nil 10352 . 10353) (nil fontified nil 10351 . 10352) (nil fontified nil 10350 . 10351) (nil fontified nil 10349 . 10350) (nil fontified nil 10341 . 10349) (nil fontified nil 10339 . 10341) (nil fontified nil 10337 . 10339) (nil fontified nil 10330 . 10337) (nil fontified nil 10321 . 10330) (nil fontified nil 10313 . 10321) (nil fontified nil 10305 . 10313) (nil fontified nil 10304 . 10305) (nil fontified nil 10298 . 10304) (nil fontified nil 10297 . 10298) (nil fontified nil 10293 . 10297) (nil fontified nil 10292 . 10293) (nil fontified nil 10283 . 10292) (nil fontified nil 10281 . 10283) (nil fontified nil 10263 . 10281) (nil fontified nil 10262 . 10263) (nil fontified nil 10258 . 10262) (nil fontified nil 10256 . 10258) (nil fontified nil 10233 . 10256) (nil fontified nil 10232 . 10233) (nil fontified nil 10217 . 10232) (nil fontified nil 10211 . 10217) (nil fontified nil 10204 . 10211) (nil fontified nil 10189 . 10204) (nil fontified nil 10188 . 10189) (nil fontified nil 10185 . 10188) (nil fontified nil 10184 . 10185) (nil fontified nil 10161 . 10184) (nil fontified nil 10158 . 10161) (nil fontified nil 10157 . 10158) (nil fontified nil 10154 . 10157) (nil fontified nil 10153 . 10154) (nil fontified nil 10132 . 10153) (nil fontified nil 10125 . 10132) (nil fontified nil 10122 . 10125) (nil fontified nil 10116 . 10122) (nil fontified nil 10115 . 10116) (nil fontified nil 10112 . 10115) (nil fontified nil 10111 . 10112) (10111 . 10459)) nil (25966 40415 860446 0) 0 nil])
([nil nil ((10440 . 10444) (10361 . 10365) (10188 . 10192) (10153 . 10157) (#("	" 0 1 (fontified t)) . -10111) 10108) nil (25966 40415 860425 0) 0 nil])
([nil nil ((10105 . 10111) (t 25966 40415 865920 484000)) nil (25966 40454 746997 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10200 . 10201) (nil fontified nil 10196 . 10201) (nil fontified nil 10195 . 10196) (nil fontified nil 10194 . 10195) (nil fontified nil 10191 . 10194) (nil fontified nil 10189 . 10191) (nil fontified nil 10180 . 10189) (nil fontified nil 10179 . 10180) (nil fontified nil 10177 . 10179) (nil fontified nil 10174 . 10177) (nil fontified nil 10172 . 10174) (nil fontified nil 10164 . 10172) (nil fontified nil 10163 . 10164) (nil fontified nil 10160 . 10163) (nil fontified nil 10154 . 10160) (nil fontified nil 10153 . 10154) (nil fontified nil 10147 . 10153) (nil fontified nil 10143 . 10147) (nil fontified nil 10142 . 10143) (nil fontified nil 10141 . 10142) (nil fontified nil 10140 . 10141) (nil fontified nil 10131 . 10140) (nil fontified nil 10124 . 10131) (nil fontified nil 10117 . 10124) (nil fontified nil 10115 . 10117) (nil fontified nil 10111 . 10115) (10111 . 10201)) nil (25966 40454 746995 0) 0 nil])
([nil nil ((10195 . 10200) (#("    " 0 4 (fontified t)) . 10195) (10178 . 10179) (10161 . 10162) (10139 . 10144) (#("    " 0 4 (fontified t)) . 10139) (undo-tree-id0 . -2) (#("    " 0 4 (fontified t)) . -10111) 10106) nil (25966 40454 746984 0) 0 nil])
([nil nil ((10336 . 10339) (t 25966 40454 751741 226000)) nil (25966 40467 455674 0) 0 nil])
([nil nil ((10336 . 10343) (#("webHidDeviceRequestOptions" 0 3 (fontified nil) 3 26 (face font-lock-type-face fontified nil)) . 10336) (undo-tree-id55 . 23) (10336 . 10339) (#("web_sys" 0 7 (fontified nil)) . -10336) (10336 . 10343) (#("web" 0 3 (fontified t)) . -10336) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) 10339) nil (25966 40467 455671 0) 0 nil])
([nil nil ((10343 . 10346)) nil (25966 40467 455651 0) 0 nil])
([nil nil ((10346 . 10347)) nil (25966 40467 455650 0) 0 nil])
([nil nil ((#("I" 0 1 (face font-lock-type-face fontified t)) . -10346) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 10347) nil (25966 40467 455649 0) 0 nil])
([nil nil ((10346 . 10347)) nil (25966 40467 455639 0) 0 nil])
([nil nil ((10346 . 10348)) nil (25966 40467 455638 0) 0 nil])
([nil nil ((10345 . 10368) (#("Hid" 0 3 (fontified nil)) . 10345) (10345 . 10348) (#("HidDeviceRequestOptions" 0 23 (fontified nil)) . -10345) (10345 . 10368) (#("Hid" 0 3 (face font-lock-type-face fontified t)) . -10345) (undo-tree-id9 . -3) (undo-tree-id10 . -3) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -2) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) 10348) nil (25966 40467 455635 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10368) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 10369) nil (25966 40467 455593 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -10166) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) 10167 (t 25966 40467 460021 428000)) nil (25966 40495 842627 0) 0 nil])
([nil nil ((10166 . 10167)) nil (25966 40495 842614 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -10421) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) 10422) nil (25966 40495 842612 0) 0 nil])
([nil nil ((10421 . 10422)) nil (25966 40495 842587 0) 0 nil])
([nil nil ((10577 . 10579) (t 25966 40495 847200 756000)) nil (25966 40609 902346 0) 0 nil])
([nil nil ((10578 . 10579)) nil (25966 40609 902341 0) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -10577) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#("1" 0 1 (fontified t)) . -10578) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (#("]" 0 1 (fontified t)) . -10579) (undo-tree-id216 . -1) (undo-tree-id217 . 1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (#(")" 0 1 (fontified t)) . -10580) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) 10581 (t 25966 40609 907948 630000)) nil (25966 40619 66237 0) 0 nil])
([nil nil ((10577 . 10578)) nil (25966 40619 66079 0) 0 nil])
([nil nil ((10579 . 10582) (t 25966 40619 71063 201000)) nil (25966 40689 711226 0) 0 nil])
([nil nil ((10579 . 10586) (#("web" 0 3 (fontified nil)) . 10579) (10579 . 10582) (#("web_sys" 0 7 (fontified nil)) . -10579) (10579 . 10586) (#("web" 0 3 (fontified t)) . -10579) (undo-tree-id554 . -3) (undo-tree-id555 . -1) (undo-tree-id556 . -2) (undo-tree-id557 . -2) (undo-tree-id558 . -3) (undo-tree-id559 . -3) (undo-tree-id560 . -3) (undo-tree-id561 . -3) 10582) nil (25966 40689 711223 0) 0 nil])
([nil nil ((10586 . 10591)) nil (25966 40689 711212 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -10579) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (#("e" 0 1 (fontified t)) . -10580) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (#("b" 0 1 (fontified t)) . -10581) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (#("_" 0 1 (fontified t)) . -10582) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (#("s" 0 1 (fontified t)) . -10583) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (#("y" 0 1 (fontified t)) . -10584) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (#("s" 0 1 (fontified t)) . -10585) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (#(":" 0 1 (fontified t)) . -10586) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (#(":" 0 1 (fontified t)) . -10587) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (#("h" 0 1 (fontified t)) . -10588) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (#("i" 0 1 (fontified t)) . -10589) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (#("d" 0 1 (fontified t)) . -10590) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) 10591) nil (25966 40689 711194 0) 0 nil])
([nil nil ((10543 . 10549) (t 25966 40689 718048 959000)) nil (25966 40703 940259 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -10543) (undo-tree-id562 . -1) (undo-tree-id563 . 1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (#("	" 0 1 (fontified t)) . -10544) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (#(" " 0 1 (fontified t)) . -10545) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (#(" " 0 1 (fontified t)) . -10546) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (#(" " 0 1 (fontified t)) . -10547) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (#(" " 0 1 (fontified t)) . -10548) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) 10549) nil (25966 40703 940253 0) 0 nil])
([nil nil ((10543 . 10549) (t 25966 40703 945639 104000)) nil (25966 41271 573575 0) 0 nil])
([nil nil ((10549 . 10564)) nil (25966 41271 573574 0) 0 nil])
([nil nil ((10564 . 10566)) nil (25966 41271 573573 0) 0 nil])
([nil nil ((10563 . 10581) (#("ser" 0 3 (fontified nil)) . 10563) (10563 . 10566) (#("serde_wasm_bindgen" 0 18 (fontified nil)) . -10563) (10563 . 10581) (#("ser" 0 3 (fontified t)) . -10563) (undo-tree-id637 . -3) 10566) nil (25966 41271 573571 0) 0 nil])
([nil nil ((10581 . 10585)) nil (25966 41271 573568 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 10592 10595 nil nil nil t #s(yas--exit 10596 nil))) #s(yas--exit 10596 nil) 15 nil #s(yas--field 1 10592 10595 nil nil nil t #s(yas--exit 10596 nil)) nil nil)) (10583 . 10598) (#("to_value(${1:value})$0" 0 22 (fontified nil)) . 10583) (10583 . 10605) (#("to" 0 2 (fontified nil)) . 10583) (10583 . 10585) (#("to_value(…)" 0 11 (fontified nil)) . -10583) (10583 . 10594) (#("to" 0 2 (fontified t)) . -10583) (undo-tree-id636 . -2) 10585) nil (25966 41271 573566 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -10595) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (#("e" 0 1 (fontified t)) . -10596) (undo-tree-id634 . -1) (undo-tree-id635 . -1) 10597) nil (25966 41271 573561 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10583 10596 #s(yas--snippet nil (#s(yas--field 1 10592 10595 nil nil nil t #s(yas--exit 10596 nil))) #s(yas--exit 10596 nil) 15 nil #s(yas--field 1 10592 10595 nil nil nil t #s(yas--exit 10596 nil)) nil nil))) nil (25966 41271 573556 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -10595) (undo-tree-id630 . -1) (undo-tree-id631 . -1) 10596) nil (25966 41271 573555 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -10583) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (#("o" 0 1 (fontified t)) . -10584) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (#("_" 0 1 (fontified t)) . -10585) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (#("v" 0 1 (fontified t)) . -10586) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (#("a" 0 1 (fontified t)) . -10587) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (#("l" 0 1 (fontified t)) . -10588) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (#("u" 0 1 (fontified t)) . -10589) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (#("e" 0 1 (fontified t)) . -10590) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (#("(" 0 1 (fontified t)) . -10591) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (#("v" 0 1 (fontified t)) . -10592) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (#("a" 0 1 (fontified t)) . -10593) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (#("l" 0 1 (fontified t)) . -10594) (undo-tree-id628 . -1) (undo-tree-id629 . -1) 10595) nil (25966 41271 573548 0) 0 nil])
([nil nil ((10583 . 10584)) nil (25966 41271 573522 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 10594 10600 nil nil nil t #s(yas--exit 10601 nil))) #s(yas--exit 10601 nil) 16 nil #s(yas--field 1 10594 10600 nil nil nil t #s(yas--exit 10601 nil)) nil nil)) (10583 . 10600) (#("from_value(${1:value})$0" 0 24 (fontified nil)) . 10583) (10583 . 10607) (#("f" 0 1 (fontified nil)) . 10583) (10583 . 10584) (#("from_value(…)" 0 13 (fontified nil)) . -10583) (10583 . 10596) (#("f" 0 1 (fontified t)) . -10583) (undo-tree-id605 . -1) 10584) nil (25966 41271 573520 0) 0 nil])
([nil nil ((10595 . 10596) (#("value" 0 5 (fontified nil)) . 10595) (10594 . 10595)) nil (25966 41271 573516 0) 0 nil])
([nil nil ((10594 . 10600) (#("re" 0 2 (fontified nil)) . 10594) (10594 . 10596) (#("result" 0 6 (fontified nil)) . -10594) (10594 . 10600) (#("re" 0 2 (fontified t)) . -10594) (undo-tree-id603 . -2) (undo-tree-id604 . -2) 10596) nil (25966 41271 573514 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10583 10601 #s(yas--snippet nil (#s(yas--field 1 10594 10600 nil nil nil t #s(yas--exit 10601 nil))) #s(yas--exit 10601 nil) 16 nil #s(yas--field 1 10594 10600 nil nil nil t #s(yas--exit 10601 nil)) nil nil))) nil (25966 41271 573509 0) 0 nil])
([nil nil ((10601 . 10602)) nil (25966 41271 573508 0) 0 nil])
([nil nil ((10601 . 10603)) nil (25966 41271 573507 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10602 10610 #s(yas--snippet nil nil #s(yas--exit 10610 nil) 17 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10610 nil) 17 nil nil nil nil)) (10602 . 10610) (#("unwrap()$0" 0 10 (fontified nil)) . 10602) (10602 . 10612) (#("u" 0 1 (fontified nil)) . 10602) (10602 . 10603) (#("unwrap()" 0 8 (fontified nil)) . -10602) (10602 . 10610) (#("u" 0 1 (fontified t)) . -10602) (undo-tree-id601 . -1) (undo-tree-id602 . -1) 10603) nil (25966 41271 573506 0) 0 nil])
([nil nil ((10560 . 10565)) nil (25966 41271 573500 0) 0 nil])
([nil nil ((199 . 223) (10562 . 10562) (10562 . 10571) (#("Hid" 0 3 (fontified nil)) . 10562) (10562 . 10565) (#("HidDevice (use web_sys::HidDevice)" 0 34 (fontified nil)) . -10562) (10562 . 10596) (#("Hid" 0 3 (face font-lock-type-face fontified t)) . -10562) (undo-tree-id599 . -3) (undo-tree-id600 . -3) 10565) nil (25966 41271 573498 0) 0 nil])
([nil nil ((10586 . 10587)) nil (25966 41271 573493 0) 0 nil])
([nil nil ((#("C" 0 1 (face font-lock-type-face fontified t)) . -10586) (undo-tree-id597 . -1) (undo-tree-id598 . -1) 10587) nil (25966 41271 573491 0) 0 nil])
([nil nil ((10586 . 10590)) nil (25966 41271 573478 0) 0 nil])
([nil nil ((10599 . 10600)) nil (25966 41271 573473 0) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -10599) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) 10600 (t 25966 41271 582579 756000)) nil (25966 41321 323962 0) 0 nil])
([nil nil ((#("V" 0 1 (face font-lock-type-face fontified t)) . -10586) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -10587) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (#("c" 0 1 (face font-lock-type-face fontified t)) . -10588) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (#("<" 0 1 (fontified t)) . -10589) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) 10590) nil (25966 41321 323922 0) 0 nil])
([nil nil ((#("	    let devices: HidDevice = serde_wasm_bindgen::from_value(result).unwrap();
" 0 5 (fontified t) 5 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 16 (face font-lock-variable-name-face fontified t) 16 18 (fontified t) 18 27 (face font-lock-type-face fontified t) 27 30 (fontified t) 30 48 (face font-lock-constant-face fontified t) 48 50 (fontified t) 50 61 (fontified t) 61 67 (fontified t) 67 69 (fontified t) 69 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t)) . -10568) (undo-tree-id745 . -79) (undo-tree-id746 . -79) (undo-tree-id747 . -61) (undo-tree-id748 . 61) (undo-tree-id749 . -27) (undo-tree-id750 . -27) (undo-tree-id751 . -27) (undo-tree-id752 . -27) (undo-tree-id753 . -27) (undo-tree-id754 . -27) (undo-tree-id755 . -27) (undo-tree-id756 . -27) (undo-tree-id757 . -27) (undo-tree-id758 . -18) (undo-tree-id759 . -18) (undo-tree-id760 . -27) (undo-tree-id761 . -18) (undo-tree-id762 . -27) (undo-tree-id763 . -18) (undo-tree-id764 . -18) (undo-tree-id765 . -27) (undo-tree-id766 . -27) (undo-tree-id767 . -27) (undo-tree-id768 . -27) (undo-tree-id769 . -27) (undo-tree-id770 . -27) (undo-tree-id771 . -27) (undo-tree-id772 . -27) (undo-tree-id773 . -27) (undo-tree-id774 . -27) (undo-tree-id775 . -27) (undo-tree-id776 . -27) (undo-tree-id777 . -27) (undo-tree-id778 . -27) (undo-tree-id779 . -27) (undo-tree-id780 . -18) (undo-tree-id781 . -18) (undo-tree-id782 . -18) (undo-tree-id783 . -18) (undo-tree-id784 . -18) (undo-tree-id785 . -18) (undo-tree-id786 . -18) (undo-tree-id787 . -18) (undo-tree-id788 . -18) (undo-tree-id789 . -18) (undo-tree-id790 . -18) (undo-tree-id791 . -18) (undo-tree-id792 . -18) (undo-tree-id793 . -18) (undo-tree-id794 . -18) (undo-tree-id795 . -18) (undo-tree-id796 . -18) (undo-tree-id797 . -18) (undo-tree-id798 . -18) (undo-tree-id799 . -18) (undo-tree-id800 . -18) (undo-tree-id801 . -18) (undo-tree-id802 . -18) (undo-tree-id803 . -18) (undo-tree-id804 . -18) (undo-tree-id805 . -18) (undo-tree-id806 . -18) (undo-tree-id807 . -18) (undo-tree-id808 . -18) (undo-tree-id809 . -18) (undo-tree-id810 . -18) (undo-tree-id811 . -18) (undo-tree-id812 . -18) (undo-tree-id813 . -18) (undo-tree-id814 . -18) (undo-tree-id815 . -18) (undo-tree-id816 . -18) (undo-tree-id817 . -18) (undo-tree-id818 . -18) (undo-tree-id819 . -18) (undo-tree-id820 . -18) (undo-tree-id821 . -18) (undo-tree-id822 . -18) (undo-tree-id823 . -18) (undo-tree-id824 . -18) (undo-tree-id825 . -18) (undo-tree-id826 . -18) (undo-tree-id827 . -18) (undo-tree-id828 . -36) (undo-tree-id829 . -36) (undo-tree-id830 . -36) (undo-tree-id831 . -36) (undo-tree-id832 . -36) (undo-tree-id833 . -36) (undo-tree-id834 . -40) (undo-tree-id835 . -40) (undo-tree-id836 . -36) (undo-tree-id837 . -40) (undo-tree-id838 . -40) (undo-tree-id839 . -40) (undo-tree-id840 . -40) (undo-tree-id841 . -40) (undo-tree-id842 . -40) (undo-tree-id843 . -79) (undo-tree-id844 . -79) (undo-tree-id845 . -36) (undo-tree-id846 . -79) (undo-tree-id847 . -79) (undo-tree-id848 . -79) (undo-tree-id849 . -79) (undo-tree-id850 . -79) (undo-tree-id851 . -79) (undo-tree-id852 . -79) (undo-tree-id853 . -79) (undo-tree-id854 . -79) 10647 (t 25966 41321 332667 4000)) nil (25966 41338 656946 0) 0 nil])
([nil nil ((10603 . 10609) (t 25966 41338 665121 19000)) nil (25966 42390 191427 0) 0 nil])
([nil nil ((10609 . 10611)) nil (25966 42390 191426 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -10609) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (#("m" 0 1 (fontified t)) . -10610) (undo-tree-id941 . -1) (undo-tree-id942 . -1) 10611) nil (25966 42390 191424 0) 0 nil])
([nil nil ((10609 . 10612)) nil (25966 42390 191417 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 10614 10614 nil nil nil nil #s(yas--exit 10619 nil))) #s(yas--exit 10619 nil) 18 nil #s(yas--field 1 10614 10614 nil nil nil nil #s(yas--exit 10619 nil)) nil nil)) (10609 . 10626) (#("impl $1 {
		$0
	    }" 0 21 (fontified nil)) . 10609) (10624 . 10629) (10619 . 10621) (#("    " 0 4 (fontified nil)) . 10619) (10609 . 10627) (#("imp" 0 3 (fontified nil)) . 10609) (10609 . 10612) (#("impl" 0 4 (fontified nil)) . -10609) (10609 . 10613) (#("imp" 0 3 (fontified t)) . -10609) (undo-tree-id929 . -3) (undo-tree-id930 . -1) (undo-tree-id931 . -2) (undo-tree-id932 . -2) (undo-tree-id933 . -3) (undo-tree-id934 . -3) (undo-tree-id935 . -3) (undo-tree-id936 . -3) 10612) nil (25966 42390 191414 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10609 10626 #s(yas--snippet nil (#s(yas--field 1 10614 10614 nil nil nil nil #s(yas--exit 10619 nil))) #s(yas--exit 10619 nil) 18 nil #s(yas--field 1 10614 10614 nil nil nil nil #s(yas--exit 10619 nil)) nil nil))) nil (25966 42390 191402 0) 0 nil])
([nil nil ((#("	    impl  {
		
	    }" 0 5 (fontified t) 5 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 22 (fontified t)) . 10604) (undo-tree-id885 . -22) (undo-tree-id886 . -5) (undo-tree-id887 . -5) (undo-tree-id888 . -5) (undo-tree-id889 . -5) (undo-tree-id890 . -5) (undo-tree-id891 . -5) (undo-tree-id892 . -5) (undo-tree-id893 . -5) (undo-tree-id894 . -5) (undo-tree-id895 . -5) (undo-tree-id896 . -5) (undo-tree-id897 . -5) (undo-tree-id898 . -5) (undo-tree-id899 . -5) (undo-tree-id900 . -22) (undo-tree-id901 . -22) (undo-tree-id902 . -10) (undo-tree-id903 . -10) (undo-tree-id904 . -10) (undo-tree-id905 . -10) (undo-tree-id906 . -10) (undo-tree-id907 . -10) (undo-tree-id908 . -10) (undo-tree-id909 . -10) (undo-tree-id910 . -10) (undo-tree-id911 . -10) (undo-tree-id912 . -10) (undo-tree-id913 . -10) (undo-tree-id914 . -10) (undo-tree-id915 . -10) (undo-tree-id916 . -22) (undo-tree-id917 . -22) (undo-tree-id918 . -22) (undo-tree-id919 . -22) (undo-tree-id920 . -22) (undo-tree-id921 . -22) (undo-tree-id922 . -22) (undo-tree-id923 . -20) (undo-tree-id924 . -19) (undo-tree-id925 . -17) (undo-tree-id926 . -13) (undo-tree-id927 . -22) (undo-tree-id928 . -22)) nil (25966 42390 191399 0) 0 nil])
([nil nil ((10604 . 10609)) nil (25966 42390 191354 0) 0 nil])
([nil nil ((10609 . 10610)) nil (25966 42390 191353 0) 0 nil])
([nil nil ((10610 . 10615)) nil (25966 42390 191352 0) 0 nil])
([nil nil ((#("D" 0 1 (face font-lock-type-face fontified t)) . -10614) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) 10615) nil (25966 42390 191350 0) 0 nil])
([nil nil ((10614 . 10617)) nil (25966 42390 191346 0) 0 nil])
([nil nil ((10614 . 10619) (#("ser" 0 3 (fontified nil)) . 10614) (10614 . 10617) (#("serde" 0 5 (fontified nil)) . -10614) (10614 . 10619) (#("ser" 0 3 (fontified t)) . -10614) (undo-tree-id873 . -3) (undo-tree-id874 . -1) (undo-tree-id875 . -2) (undo-tree-id876 . -2) (undo-tree-id877 . -3) (undo-tree-id878 . -3) (undo-tree-id879 . -3) (undo-tree-id880 . -3) 10617) nil (25966 42390 191344 0) 0 nil])
([nil nil ((10619 . 10622)) nil (25966 42390 191333 0) 0 nil])
([nil nil ((10621 . 10632) (#("D" 0 1 (fontified nil)) . 10621) (10621 . 10622) (#("Deserialize" 0 11 (fontified nil)) . -10621) (10621 . 10632) (#("D" 0 1 (face font-lock-type-face fontified t)) . -10621) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) 10622) nil (25966 42390 191331 0) 0 nil])
([nil nil ((10632 . 10634)) nil (25966 42390 191321 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -10633) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) 10634) nil (25966 42390 191320 0) 0 nil])
([nil nil ((10633 . 10634)) nil (25966 42390 191315 0) 0 nil])
([nil nil ((10634 . 10635)) nil (25966 42390 191314 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -10634) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) 10635) nil (25966 42390 191312 0) 0 nil])
([nil nil ((10634 . 10638)) nil (25966 42390 191306 0) 0 nil])
([nil nil ((10637 . 10646) (#("H" 0 1 (fontified nil)) . 10637) (10637 . 10638) (#("HidDevice" 0 9 (fontified nil)) . -10637) (10637 . 10646) (#("H" 0 1 (face font-lock-type-face fontified t)) . -10637) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) 10638) nil (25966 42390 191302 0) 0 nil])
([nil nil ((#("	    impl serde::Deserialize for HidDevice
" 0 5 (fontified t) 5 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 15 (face font-lock-constant-face fontified t) 15 17 (fontified t) 17 28 (face font-lock-type-face fontified t) 28 29 (fontified t) 29 32 (face font-lock-keyword-face fontified t) 32 33 (fontified t) 33 42 (face font-lock-type-face fontified t) 42 43 (fontified t)) . -10604) (undo-tree-id943 . -43) (undo-tree-id944 . -43) (undo-tree-id945 . -43) (undo-tree-id946 . -10) (undo-tree-id947 . -10) (undo-tree-id948 . -10) (undo-tree-id949 . -10) (undo-tree-id950 . -10) (undo-tree-id951 . -10) (undo-tree-id952 . -10) (undo-tree-id953 . -10) (undo-tree-id954 . -10) (undo-tree-id955 . -10) (undo-tree-id956 . -17) (undo-tree-id957 . -17) (undo-tree-id958 . -17) (undo-tree-id959 . -17) (undo-tree-id960 . -29) (undo-tree-id961 . -29) (undo-tree-id962 . -29) (undo-tree-id963 . -30) (undo-tree-id964 . -30) (undo-tree-id965 . -30) (undo-tree-id966 . -30) (undo-tree-id967 . -33) (undo-tree-id968 . -33) (undo-tree-id969 . -33) (undo-tree-id970 . -42) (undo-tree-id971 . -42) (undo-tree-id972 . -42) (undo-tree-id973 . -42) (undo-tree-id974 . -42) (undo-tree-id975 . -42) (undo-tree-id976 . -42) (undo-tree-id977 . -42) (undo-tree-id978 . -42) (undo-tree-id979 . -42) (undo-tree-id980 . -42) (undo-tree-id981 . -42) (undo-tree-id982 . -42) (undo-tree-id983 . -42) (undo-tree-id984 . -42) (undo-tree-id985 . -42) (undo-tree-id986 . -42) (undo-tree-id987 . -42) (undo-tree-id988 . -42) (undo-tree-id989 . -42) (undo-tree-id990 . -42) (undo-tree-id991 . -42) (undo-tree-id992 . -42) (undo-tree-id993 . -42) (undo-tree-id994 . -42) (undo-tree-id995 . -42) (undo-tree-id996 . -42) (undo-tree-id997 . -42) (undo-tree-id998 . -42) (undo-tree-id999 . -42) (undo-tree-id1000 . -42) (undo-tree-id1001 . -42) (undo-tree-id1002 . -42) (undo-tree-id1003 . -42) (undo-tree-id1004 . -42) (undo-tree-id1005 . -42) (undo-tree-id1006 . -42) (undo-tree-id1007 . -42) (undo-tree-id1008 . -42) (undo-tree-id1009 . -42) (undo-tree-id1010 . -42) (undo-tree-id1011 . -42) (undo-tree-id1012 . -42) (undo-tree-id1013 . -42) (undo-tree-id1014 . -42) (undo-tree-id1015 . -42) (undo-tree-id1016 . -42) (undo-tree-id1017 . -42) (undo-tree-id1018 . -42) (undo-tree-id1019 . -28) (undo-tree-id1020 . -28) (undo-tree-id1021 . -28) (undo-tree-id1022 . -28) (undo-tree-id1023 . -28) (undo-tree-id1024 . -28) (undo-tree-id1025 . -28) (undo-tree-id1026 . -28) (undo-tree-id1027 . -28) (undo-tree-id1028 . -29) (undo-tree-id1029 . -29) (undo-tree-id1030 . -29) (undo-tree-id1031 . -29) (undo-tree-id1032 . -29) (undo-tree-id1033 . -29) (undo-tree-id1034 . -28) (undo-tree-id1035 . -29) (undo-tree-id1036 . -29) (undo-tree-id1037 . -29) (undo-tree-id1038 . -29) (undo-tree-id1039 . -29) (undo-tree-id1040 . -29) (undo-tree-id1041 . -43) (undo-tree-id1042 . -43) (undo-tree-id1043 . -28) (undo-tree-id1044 . -43) (undo-tree-id1045 . -43) (undo-tree-id1046 . -43) (undo-tree-id1047 . -43) (undo-tree-id1048 . -43) (undo-tree-id1049 . -43) (undo-tree-id1050 . -43) 10647 (t 25966 42390 202096 860000)) nil (25966 42397 755155 0) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -10429) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (#("e" 0 1 (fontified t)) . -10430) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (#("c" 0 1 (fontified t)) . -10431) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (#("!" 0 1 (face font-lock-preprocessor-face fontified t)) . -10432) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) 10433 (t 25966 42397 763729 71000)) nil (25966 42799 503263 0) 0 nil])
([nil nil ((10563 . 10569) (t 25966 42799 512894 761000)) nil (25966 43092 594183 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10694 . 10695) (nil fontified nil 10569 . 10695) (10569 . 10695)) nil (25966 43092 594181 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -10569) 10636) nil (25966 43092 594180 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -10586) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (#("e" 0 1 (fontified t)) . -10587) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (#("v" 0 1 (fontified t)) . -10588) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (#("i" 0 1 (fontified t)) . -10589) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (#("c" 0 1 (fontified t)) . -10590) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (#("e" 0 1 (fontified t)) . -10591) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (#("s" 0 1 (fontified t)) . -10592) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) 10593) nil (25966 43092 594177 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -10494) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -10495) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -10496) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (#("u" 0 1 (face font-lock-variable-name-face fontified t)) . -10497) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -10498) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -10499) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) 10500) nil (25966 43092 594160 0) 0 nil])
([nil nil ((10494 . 10501)) nil (25966 43092 594147 0) 0 nil])
([nil nil ((10587 . 10590)) nil (25966 43092 594146 0) 0 nil])
([nil nil ((10587 . 10594) (#("dev" 0 3 (fontified nil)) . 10587) (10587 . 10590) (#("devices" 0 7 (fontified nil)) . -10587) (10587 . 10594) (#("dev" 0 3 (fontified t)) . -10587) (undo-tree-id1252 . -2) (undo-tree-id1253 . -3) 10590) nil (25966 43092 594144 0) 0 nil])
([nil nil ((10691 . 10697)) nil (25966 43092 594140 0) 0 nil])
([nil nil ((10697 . 10700)) nil (25966 43092 594139 0) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-keyword-face fontified t)) . -10699) (undo-tree-id1251 . -1) 10700) nil (25966 43092 594138 0) 0 nil])
([nil nil ((10699 . 10710)) nil (25966 43092 594135 0) 0 nil])
([nil nil ((#("	    let device = 
" 0 5 (fontified t) 5 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 15 (face font-lock-variable-name-face fontified t) 15 18 (fontified t) 18 19 (rear-nonsticky t fontified t)) . -10692) (undo-tree-id1209 . -19) (undo-tree-id1210 . -19) (undo-tree-id1211 . -15) (undo-tree-id1212 . 1) (undo-tree-id1213 . -16) (undo-tree-id1214 . -16) (undo-tree-id1215 . -17) (undo-tree-id1216 . -18) (undo-tree-id1217 . -18) (undo-tree-id1218 . -18) (undo-tree-id1219 . -18) (undo-tree-id1220 . -18) (undo-tree-id1221 . -18) (undo-tree-id1222 . -18) (undo-tree-id1223 . -18) (undo-tree-id1224 . -18) (undo-tree-id1225 . -18) (undo-tree-id1226 . -12) (undo-tree-id1227 . -12) (undo-tree-id1228 . -12) (undo-tree-id1229 . -12) (undo-tree-id1230 . -12) (undo-tree-id1231 . -12) (undo-tree-id1232 . -12) (undo-tree-id1233 . -9) (undo-tree-id1234 . -15) (undo-tree-id1235 . -15) (undo-tree-id1236 . -9) (undo-tree-id1237 . -15) (undo-tree-id1238 . -15) (undo-tree-id1239 . -19) (undo-tree-id1240 . -19) (undo-tree-id1241 . -9) (undo-tree-id1242 . -19) (undo-tree-id1243 . -19) (undo-tree-id1244 . -19) (undo-tree-id1245 . -19) (undo-tree-id1246 . -19) (undo-tree-id1247 . -19) (undo-tree-id1248 . -19) (undo-tree-id1249 . -19) (undo-tree-id1250 . -19) 10711) nil (25966 43092 594133 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10735 . 10736) (nil fontified nil 10692 . 10736) (10692 . 10736)) nil (25966 43092 594091 0) 0 nil])
([nil nil ((10692 . 10697) (#("    " 0 4 (fontified t)) . 10692) 10711) nil (25966 43092 594089 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -10733) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (#(")" 0 1 (fontified t)) . -10734) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) 10735) nil (25966 43092 594086 0) 0 nil])
([nil nil ((10733 . 10735)) nil (25966 43092 594064 0) 0 nil])
([nil nil ((10736 . 10750)) nil (25966 43092 594064 0) 0 nil])
([nil nil ((10750 . 10753)) nil (25966 43092 594063 0) 0 nil])
([nil nil ((#("x" 0 1 (face font-lock-comment-face fontified t)) . -10752) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) 10753) nil (25966 43092 594061 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -10750) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (#("p" 0 1 (face font-lock-comment-face fontified t)) . -10751) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) 10752) nil (25966 43092 594055 0) 0 nil])
([nil nil ((10750 . 10756)) nil (25966 43092 594035 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10877 . 10878) (nil fontified nil 10756 . 10878) (10756 . 10878)) nil (25966 43092 594033 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -10756) 10767) nil (25966 43092 594028 0) 0 nil])
([nil nil ((10563 . 10565) (t 25966 43092 605156 51000)) nil (25966 43110 735652 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -10564) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) 10565) nil (25966 43110 735650 0) 0 nil])
([nil nil ((10564 . 10565)) nil (25966 43114 663928 0) 0 nil])
([nil nil ((10565 . 10566)) nil (25966 43120 460723 0) 0 nil] [nil nil ((apply yas--snippet-revive 10564 10572 #s(yas--snippet nil nil #s(yas--exit #<marker at 10914 in component.rs> nil) 19 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 10914 in component.rs> nil) 19 nil nil nil nil)) (10564 . 10572) (#("unwrap()$0" 0 10 (fontified nil)) . 10564) (10564 . 10574) (#("u" 0 1 (fontified nil)) . 10564) (10564 . 10565) (#("unwrap()" 0 8 (fontified nil)) . -10564) (10564 . 10572) (#("u" 0 1 (fontified t)) . -10564) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) 10565) ((10564 . 10565) (#("unwrap()" 0 8 (fontified nil)) . 10564) (10564 . 10572) (#("u" 0 1 (fontified nil)) . 10564) (10564 . 10565) (#("unwrap()$0" 0 10 (fontified nil)) . 10564) (10564 . 10574) (#("unwrap()" 0 8 (fontified t)) . 10564) (undo-tree-id1288 . -8) (undo-tree-id1289 . -8) (undo-tree-id1290 . -8) (undo-tree-id1291 . -8) (undo-tree-id1292 . -8) (undo-tree-id1293 . -8) (undo-tree-id1294 . -8) (undo-tree-id1295 . -8) (undo-tree-id1296 . -8) (undo-tree-id1297 . -8) (undo-tree-id1298 . -8) (undo-tree-id1299 . -8) (undo-tree-id1300 . -8) (undo-tree-id1301 . -8) (undo-tree-id1302 . -8) (undo-tree-id1303 . -8) (undo-tree-id1304 . -8) (undo-tree-id1305 . -8) (undo-tree-id1306 . -8) (undo-tree-id1307 . -8) (undo-tree-id1308 . -8) (undo-tree-id1309 . -8) (undo-tree-id1310 . -8) (undo-tree-id1311 . -8) (undo-tree-id1312 . -8) (t 25966 43110 745169 599000)) (25966 43110 735641 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10564 10572 #s(yas--snippet nil nil #s(yas--exit 10572 nil) 20 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10572 nil) 20 nil nil nil nil)) (10564 . 10572) (#("unwrap()$0" 0 10 (fontified nil)) . 10564) (10564 . 10574) (#("un" 0 2 (fontified nil)) . 10564) (10564 . 10566) (#("unwrap()" 0 8 (fontified nil)) . -10564) (10564 . 10572) (#("un" 0 2 (fontified t)) . -10564) (undo-tree-id1313 . -2) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -2) (undo-tree-id1322 . -2) (undo-tree-id1323 . -2) 10566) nil (25966 43120 460718 0) 0 nil])
nil
([nil nil ((10885 . 10887) (t 25966 43120 470285 855000)) nil (25966 43122 126434 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10924 . 10925) (nil fontified nil 10884 . 10925) (10884 . 10925) (t 25966 43122 135861 337000)) nil (25966 43131 849825 0) 0 nil])
([nil nil ((10884 . 10889) (#("    " 0 4 (fontified t)) . 10884) 10909) nil (25966 43131 849819 0) 0 nil])
([nil nil ((10892 . 10893) (t 25966 43131 859433 460000)) nil (25966 43142 69151 0) 0 nil])
([nil nil ((10889 . 10896) (#("logg" 0 4 (fontified nil)) . 10889) (10889 . 10893) (#("logging" 0 7 (fontified nil)) . -10889) (10889 . 10896) (#("logg" 0 4 (face font-lock-constant-face fontified t)) . -10889) (undo-tree-id1333 . -3) (undo-tree-id1334 . -4) (undo-tree-id1335 . -3) (undo-tree-id1336 . -3) (undo-tree-id1337 . -3) (undo-tree-id1338 . -3) (undo-tree-id1339 . -3) (undo-tree-id1340 . -3) (undo-tree-id1341 . -3) (undo-tree-id1342 . -4) (undo-tree-id1343 . -4) (undo-tree-id1344 . -4) 10893) nil (25966 43142 69149 0) 0 nil])
([nil nil ((10896 . 10897)) nil (25966 43142 69131 0) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-constant-face fontified t)) . -10896) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) 10897) nil (25966 43142 69130 0) 0 nil])
([nil nil ((10898 . 10899)) nil (25966 43142 69124 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10898) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) 10899) nil (25966 43142 69120 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-preprocessor-face fontified t)) . -10898) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (#("e" 0 1 (face font-lock-preprocessor-face fontified t)) . -10899) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (#("b" 0 1 (face font-lock-preprocessor-face fontified t)) . -10900) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (#("u" 0 1 (face font-lock-preprocessor-face fontified t)) . -10901) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (#("g" 0 1 (face font-lock-preprocessor-face fontified t)) . -10902) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) 10903 (t 25966 43142 78964 887000)) nil (25966 43146 684267 0) 0 nil])
([nil nil ((10898 . 10899)) nil (25966 43146 684189 0) 0 nil])
([nil nil ((10898 . 10901) (#("l" 0 1 (fontified nil)) . 10898) (10898 . 10899) (#("log" 0 3 (fontified nil)) . -10898) (10898 . 10901) (#("l" 0 1 (face font-lock-preprocessor-face fontified t)) . -10898) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) 10899) nil (25966 43146 684185 0) 0 nil])
([nil nil ((10196 . 10198) (t 25966 43146 694743 369000)) nil (25967 14915 598492 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10196 10204 #s(yas--snippet nil nil #s(yas--exit 10203 nil) 21 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10203 nil) 21 nil nil nil nil)) (10196 . 10204) (#("Option<$0>" 0 10 (fontified nil)) . 10196) (10196 . 10206) (#("Opu32" 0 2 (fontified nil) 2 5 (face font-lock-type-face fontified nil)) . 10196) (undo-tree-id1440 . -3) (undo-tree-id1441 . -3) (undo-tree-id1442 . -3) (10196 . 10198) (#("Option<…>" 0 9 (fontified nil)) . -10196) (10196 . 10205) (#("Op" 0 2 (face font-lock-type-face fontified t)) . -10196) (undo-tree-id1443 . -2) 10198) nil (25967 14915 598490 0) 0 nil])
([nil nil ((10203 . 10206)) nil (25967 14915 598482 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -10222) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (#("3" 0 1 (fontified t)) . -10223) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (#("2" 0 1 (face font-lock-type-face fontified t)) . -10224) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) 10225) nil (25967 14915 598480 0) 0 nil])
([nil nil ((10222 . 10224)) nil (25967 14915 598472 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10222 10230 #s(yas--snippet nil nil #s(yas--exit 10229 nil) 22 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10229 nil) 22 nil nil nil nil)) (10222 . 10230) (#("Option<$0>" 0 10 (fontified nil)) . 10222) (10222 . 10232) (#("Op" 0 2 (fontified nil)) . 10222) (10222 . 10224) (#("Option<…>" 0 9 (fontified nil)) . -10222) (10222 . 10231) (#("Op" 0 2 (face font-lock-type-face fontified t)) . -10222) (undo-tree-id1432 . -2) (undo-tree-id1433 . -2) 10224) nil (25967 14915 598469 0) 0 nil])
([nil nil ((10229 . 10232)) nil (25967 14915 598454 0) 0 nil])
([nil nil ((10462 . 10467) (t 25967 14915 610087 912000)) nil (25967 14943 43536 0) 0 nil])
([nil nil ((10473 . 10474)) nil (25967 14943 43535 0) 0 nil])
([nil nil ((10485 . 10490)) nil (25967 14943 43533 0) 0 nil])
([nil nil ((10496 . 10497)) nil (25967 15032 748455 0) 0 nil])
([nil nil ((10359 . 10362) (t 25967 14943 53578 54000)) nil (25968 34679 404923 0) 0 nil] [nil nil ((10359 . 10362) (t 25967 14943 53578 54000)) ((#("
		" 0 1 (fontified t) 1 3 (fontified t)) . 10359) (undo-tree-id1452 . -1)) (25967 15032 346572 0) 0 nil])
([nil nil ((6120 . 6122)) nil (25968 34681 295768 0) 0 nil] [nil nil ((apply -6 6125 6158 undo--wrap-and-run-primitive-undo 6125 6158 (("   " . 6127) ("                " . 6125) (6172 . 6175) (6141 . 6144) (6125 . 6144)))) ((apply 6 6125 6152 undo--wrap-and-run-primitive-undo 6125 6152 ((#("                   " 18 19 (face font-lock-comment-delimiter-face fontified t)) . 6125) (#("// " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 6141) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 6172) (6125 . 6141) (6127 . 6130) 6164))) (25968 34679 404551 0) 0 nil] [nil nil ((10353 . 10356)) ((#("
		" 0 3 (fontified t)) . 10353) (undo-tree-id1453 . -3) (undo-tree-id1454 . -1)) (25967 15042 456046 0) 0 nil])
([nil nil ((10378 . 10385)) ((#("
		    " 0 1 (fontified t) 1 7 (fontified t)) . 10378) (undo-tree-id1451 . -1)) (25967 15031 388781 0) 0 nil])
([nil nil ((5874 . 5875) (t 25968 34681 308421 409000)) nil (25968 35167 454176 0) 0 nil])
nil
nil
([nil nil ((10424 . 10428)) ((#("
			" 0 1 (fontified t) 1 4 (fontified t)) . 10424) (undo-tree-id1450 . -1)) (25967 15031 204146 0) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -5874) (undo-tree-id1519 . -1) 5875) nil (25968 35167 454175 0) 0 nil])
([nil nil ((10458 . 10466)) ((#("
			    " 0 1 (fontified t) 1 8 (fontified t)) . 10458) (undo-tree-id1449 . -1)) (25967 15031 24565 0) 0 nil])
([nil nil ((5874 . 5879)) nil (25968 35167 454173 0) 0 nil])
([nil nil ((10475 . 10480)) ((#("
				" 0 1 (fontified t) 1 5 (fontified t)) . 10475) (undo-tree-id1448 . -1)) (25967 15030 848391 0) 0 nil])
([nil nil ((5879 . 5897)) nil (25968 35167 454172 0) 0 nil])
([nil nil ((10502 . 10507)) ((#("
				" 0 1 (fontified t) 1 5 (fontified t)) . 10502) (undo-tree-id1447 . -1)) (25967 15030 660477 0) 0 nil])
([nil nil ((apply yas--snippet-revive 5894 5907 #s(yas--snippet nil nil #s(yas--exit 5907 nil) 28 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 5907 nil) 28 nil nil nil nil)) (5894 . 5907) (#("use_context()$0" 0 15 (fontified nil)) . 5894) (5894 . 5909) (#("use" 0 3 (fontified nil)) . 5894) (5894 . 5897) (#("use_context()" 0 13 (fontified nil)) . -5894) (5894 . 5907) (#("use" 0 3 (face font-lock-keyword-face fontified t)) . -5894) (undo-tree-id1518 . -3) 5897) nil (25968 35167 454170 0) 0 nil])
([nil nil ((10530 . 10538)) ((#("
			    " 0 1 (fontified t) 1 8 (fontified t)) . 10530) (undo-tree-id1446 . -1)) (25967 15030 425428 0) 0 nil])
([nil nil ((5907 . 5909)) nil (25968 35167 454165 0) 0 nil])
([nil nil ((10549 . 10556)) ((#("
		    " 0 1 (fontified t) 1 7 (fontified t)) . 10549)) (25967 15030 186023 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -5907) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (#(":" 0 1 (fontified t)) . -5908) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) 5909) nil (25968 35167 454163 0) 0 nil])
([nil nil ((10529 . 10537)) ((#("
			    " 0 8 (fontified t)) . 10529)) (25967 15030 185783 0) 0 nil] [nil nil ((10540 . 10548)) ((#("
			    " 0 8 (fontified t)) . 10540) (undo-tree-id1444 . -8) (undo-tree-id1445 . -1)) (25967 15004 963866 0) 0 nil])
([nil nil ((5905 . 5909)) nil (25968 35167 454140 0) 0 nil])
nil
nil
([nil nil ((5908 . 5910)) nil (25968 35167 454139 0) 0 nil])
([nil nil ((apply yas--snippet-revive 5908 5918 #s(yas--snippet nil nil #s(yas--exit 5917 nil) 29 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 5917 nil) 29 nil nil nil nil)) (5908 . 5918) (#("RwSignal<$0>" 0 12 (fontified nil)) . 5908) (5908 . 5920) (#("Rw" 0 2 (fontified nil)) . 5908) (5908 . 5910) (#("RwSignal<…>" 0 11 (fontified nil)) . -5908) (5908 . 5919) (#("Rw" 0 2 (face font-lock-type-face fontified t)) . -5908) (undo-tree-id1491 . -2) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -2) (undo-tree-id1496 . -2) (undo-tree-id1497 . -2) (undo-tree-id1498 . -2) 5910) nil (25968 35167 454137 0) 0 nil])
([nil nil ((5917 . 5919)) nil (25968 35167 454125 0) 0 nil])
([nil nil ((#("Y" 0 1 (face font-lock-type-face fontified t)) . -5918) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) 5919) nil (25968 35167 454124 0) 0 nil])
([nil nil ((5918 . 5919)) nil (25968 35167 454120 0) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-type-face fontified t)) . -5918) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) 5919) nil (25968 35167 454118 0) 0 nil])
([nil nil ((5918 . 5919)) nil (25968 35167 454112 0) 0 nil])
([nil nil (("::keyboard" . -235) (undo-tree-id1460 . -10) 245 (248 . 259) (256 . 302) (258 . 265) ("KEYBOARD_CHAR" . 258) (272 . 273) (", KEYMAP, Mess" . 272) (287 . 288) ("g" . 287) ("Args, STM2RS" . 289) 302 (5917 . 5917) (5917 . 5924) (#("Ui" 0 2 (fontified nil)) . 5917) (5917 . 5919) (#("UiState (use crate::app::UiState)" 0 33 (fontified nil)) . -5917) (5917 . 5950) (#("Ui" 0 2 (face font-lock-type-face fontified t)) . -5917) (undo-tree-id1461 . -2) (undo-tree-id1462 . -2) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -2) (undo-tree-id1479 . -2) (undo-tree-id1480 . -2) (undo-tree-id1481 . -2) (undo-tree-id1482 . -2) 5919) nil (25968 35167 454108 0) 0 nil])
([nil nil ((5944 . 5946)) nil (25968 35167 454078 0) 0 nil])
([nil nil ((apply yas--snippet-revive 5945 5953 #s(yas--snippet nil nil #s(yas--exit 5953 nil) 30 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 5953 nil) 30 nil nil nil nil)) (5945 . 5953) (#("unwrap()$0" 0 10 (fontified nil)) . 5945) (5945 . 5955) (#("u" 0 1 (fontified nil)) . 5945) (5945 . 5946) (#("unwrap()" 0 8 (fontified nil)) . -5945) (5945 . 5953) (#("u" 0 1 (fontified t)) . -5945) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) 5946) nil (25968 35167 454076 0) 0 nil])
([nil nil ((5953 . 5954)) nil (25968 35167 454053 0) 0 nil])
([nil nil ((5954 . 5959) (t 25968 35167 466118 265000)) nil (25968 35365 12034 0) 0 nil])
([nil nil ((6033 . 6035)) nil (25968 35365 12033 0) 0 nil])
([nil nil ((6035 . 6037)) nil (25968 35365 12032 0) 0 nil])
([nil nil ((6035 . 6043) (#("ui" 0 2 (fontified nil)) . 6035) (6035 . 6037) (#("ui_state" 0 8 (fontified nil)) . -6035) (6035 . 6043) (#("ui" 0 2 (fontified t)) . -6035) (undo-tree-id1602 . -2) 6037) nil (25968 35365 12031 0) 0 nil])
([nil nil ((6043 . 6045)) nil (25968 35365 12027 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -6044) (undo-tree-id1601 . -1) 6045) nil (25968 35365 12026 0) 0 nil])
([nil nil ((6044 . 6045)) nil (25968 35365 12024 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 6048 6083 nil nil nil t #s(yas--exit 6084 nil))) #s(yas--exit 6084 nil) 31 nil #s(yas--field 1 6048 6083 nil nil nil t #s(yas--exit 6084 nil)) nil nil)) (6044 . 6058) (#("set(${1:new_value})$0" 0 21 (fontified nil)) . 6044) (6044 . 6065) (#("s" 0 1 (fontified nil)) . 6044) (6044 . 6045) (#("set(…) (as SignalSet)" 0 21 (fontified nil)) . -6044) (6044 . 6065) (#("s" 0 1 (fontified t)) . -6044) (undo-tree-id1600 . -1) 6045) nil (25968 35365 12022 0) 0 nil])
([nil nil ((#("new_value" 0 9 (fontified nil)) . 6049) (6048 . 6049)) nil (25968 35365 12018 0) 0 nil])
([nil nil ((6048 . 6055) (#("U" 0 1 (fontified nil)) . 6048) (6048 . 6049) (#("UiState" 0 7 (fontified nil)) . -6048) (6048 . 6055) (#("U" 0 1 (face font-lock-type-face fontified t)) . -6048) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) 6049) nil (25968 35365 12016 0) 0 nil])
([nil nil ((6055 . 6057)) nil (25968 35365 12011 0) 0 nil])
([nil nil ((6056 . 6057)) nil (25968 35365 12011 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -6056) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) 6057) nil (25968 35365 12009 0) 0 nil])
([nil nil ((6056 . 6057)) nil (25968 35365 12006 0) 0 nil])
([nil nil ((6056 . 6072) (#("a" 0 1 (fontified nil)) . 6056) (6056 . 6057) (#("activation_value" 0 16 (fontified nil)) . -6056) (6056 . 6072) (#("a" 0 1 (fontified t)) . -6056) (undo-tree-id1595 . -1) 6057) nil (25968 35365 12005 0) 0 nil])
([nil nil ((6072 . 6074)) nil (25968 35365 12001 0) 0 nil])
([nil nil ((6056 . 6062)) nil (25968 35365 12000 0) 0 nil])
([nil nil ((6080 . 6081) (#(" " 0 1 (fontified nil)) . 6079) (undo-tree-id1594 . -1) (6080 . 6081)) nil (25968 35365 11999 0) 0 nil])
([nil nil ((6079 . 6080)) nil (25968 35365 11997 0) 0 nil])
([nil nil ((apply yas--snippet-revive 6044 6084 #s(yas--snippet nil (#s(yas--field 1 6048 6083 nil nil nil t #s(yas--exit 6084 nil))) #s(yas--exit 6084 nil) 31 nil #s(yas--field 1 6048 6083 nil nil nil t #s(yas--exit 6084 nil)) nil nil))) nil (25968 35365 11996 0) 0 nil])
([nil nil ((#("	ui_state.set(UiState{
	    activation_value: 
	})" 0 1 (fontified t) 1 10 (fontified t) 10 14 (fontified t) 14 21 (face font-lock-type-face fontified t) 21 23 (fontified t) 23 28 (fontified t) 28 44 (face font-lock-variable-name-face fontified t) 44 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t)) . 6034) (undo-tree-id1592 . -50) (undo-tree-id1593 . -22)) nil (25968 35365 11995 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6033) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) 6034) nil (25968 35365 11991 0) 0 nil])
([nil nil ((6033 . 6035)) nil (25968 35365 11986 0) 0 nil])
([nil nil ((6035 . 6037)) nil (25968 35365 11985 0) 0 nil])
([nil nil ((6035 . 6043) (#("ui" 0 2 (fontified nil)) . 6035) (6035 . 6037) (#("ui_state" 0 8 (fontified nil)) . -6035) (6035 . 6043) (#("ui" 0 2 (fontified t)) . -6035) (undo-tree-id1587 . -2) 6037) nil (25968 35365 11984 0) 0 nil])
([nil nil ((6043 . 6045)) nil (25968 35365 11980 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 6048 6060 nil nil nil t #s(yas--exit 6061 nil))) #s(yas--exit 6061 nil) 32 nil #s(yas--field 1 6048 6060 nil nil nil t #s(yas--exit 6061 nil)) nil nil)) (6044 . 6058) (#("set(${1:new_value})$0" 0 21 (fontified nil)) . 6044) (6044 . 6065) (#("s" 0 1 (fontified nil)) . 6044) (6044 . 6045) (#("set(…) (as SignalSet)" 0 21 (fontified nil)) . -6044) (6044 . 6065) (#("s" 0 1 (fontified t)) . -6044) (undo-tree-id1586 . -1) 6045) nil (25968 35365 11978 0) 0 nil])
([nil nil ((#("new_value" 0 9 (fontified nil)) . 6049) (6048 . 6049)) nil (25968 35365 11974 0) 0 nil])
([nil nil ((6048 . 6055) (#("U" 0 1 (fontified nil)) . 6048) (6048 . 6049) (#("UiState" 0 7 (fontified nil)) . -6048) (6048 . 6055) (#("U" 0 1 (face font-lock-type-face fontified t)) . -6048) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) 6049) nil (25968 35365 11972 0) 0 nil])
([nil nil ((6055 . 6057)) nil (25968 35365 11967 0) 0 nil])
([nil nil ((6058 . 6059) (#("	    " 0 5 (fontified nil)) . 6057) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (6058 . 6062) (6056 . 6059)) nil (25968 35365 11966 0) 0 nil])
([nil nil ((apply yas--snippet-revive 6044 6061 #s(yas--snippet nil (#s(yas--field 1 6048 6060 nil nil nil t #s(yas--exit 6061 nil))) #s(yas--exit 6061 nil) 32 nil #s(yas--field 1 6048 6060 nil nil nil t #s(yas--exit 6061 nil)) nil nil))) nil (25968 35365 11962 0) 0 nil])
([nil nil ((6057 . 6062)) nil (25968 35365 11961 0) 0 nil])
([nil nil ((6066 . 6067)) nil (25968 35365 11960 0) 0 nil])
([nil nil ((6061 . 6062)) nil (25968 35365 11959 0) 0 nil])
([nil nil ((6061 . 6077) (#("a" 0 1 (fontified nil)) . 6061) (6061 . 6062) (#("activation_value" 0 16 (fontified nil)) . -6061) (6061 . 6077) (#("a" 0 1 (fontified t)) . -6061) (undo-tree-id1581 . -1) 6062) nil (25968 35365 11958 0) 0 nil])
([nil nil ((6077 . 6079)) nil (25968 35365 11954 0) 0 nil])
([nil nil ((6079 . 6080)) nil (25968 35365 11953 0) 0 nil])
([nil nil ((6079 . 6093) (#("k" 0 1 (fontified nil)) . 6079) (6079 . 6080) (#("keyboard_state" 0 14 (fontified nil)) . -6079) (6079 . 6093) (#("k" 0 1 (fontified t)) . -6079) (undo-tree-id1580 . -1) 6080) nil (25968 35365 11952 0) 0 nil])
([nil nil ((6093 . 6094)) nil (25968 35365 11948 0) 0 nil])
([nil nil ((apply yas--snippet-revive 6094 6099 #s(yas--snippet nil nil #s(yas--exit 6099 nil) 33 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 6099 nil) 33 nil nil nil nil)) (6094 . 6099) (#("get()$0" 0 7 (fontified nil)) . 6094) (6094 . 6101) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -6094) (6094 . 6114)) nil (25968 35365 11947 0) 0 nil])
([nil nil ((6099 . 6101)) nil (25968 35365 11944 0) 0 nil])
([nil nil ((6100 . 6104) (#("k" 0 1 (fontified nil)) . 6100) (6100 . 6101) (#("keys" 0 4 (fontified nil)) . -6100) (6100 . 6104) (#("k" 0 1 (fontified t)) . -6100) (undo-tree-id1579 . -1) 6101) nil (25968 35365 11942 0) 0 nil])
([nil nil ((6104 . 6105)) nil (25968 35365 11939 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -6104) (undo-tree-id1578 . -1) 6105) nil (25968 35365 11938 0) 0 nil])
([nil nil ((6104 . 6105)) nil (25968 35365 11936 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -6104) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) 6105) nil (25968 35365 11934 0) 0 nil])
([nil nil ((6104 . 6106)) nil (25968 35365 11930 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -6105) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) 6106) nil (25968 35365 11929 0) 0 nil])
([nil nil ((6105 . 6106)) nil (25968 35365 11923 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -6104) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (#("i" 0 1 (fontified t)) . -6105) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) 6106) nil (25968 35365 11921 0) 0 nil])
([nil nil ((6104 . 6106)) nil (25968 35365 11893 0) 0 nil])
([nil nil ((6105 . 6110)) nil (25968 35365 11892 0) 0 nil])
([nil nil ((6061 . 6062) 6034) nil (25968 35365 11891 0) 0 nil])
([nil nil ((6033 . 6035)) nil (25968 35365 11889 0) 0 nil])
([nil nil ((6115 . 6116)) nil (25968 35365 11888 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6114) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (#("." 0 1 (fontified t)) . -6115) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) 6116) nil (25968 35365 11886 0) 0 nil])
([nil nil ((6114 . 6115)) nil (25968 35365 11867 0) 0 nil])
([nil nil ((6115 . 6116)) nil (25968 35365 11866 0) 0 nil])
([nil nil ((6115 . 6120) (#("v" 0 1 (fontified nil)) . 6115) (6115 . 6116) (#("value" 0 5 (fontified nil)) . -6115) (6115 . 6120) (#("v" 0 1 (fontified t)) . -6115) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) 6116) nil (25968 35365 11864 0) 0 nil])
([nil nil ((6120 . 6123)) nil (25968 35365 11843 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -6122) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) 6123 (t 25968 35365 23888 417000)) nil (25968 35367 365699 0) 0 nil])
([nil nil ((6122 . 6123)) nil (25968 35367 365654 0) 0 nil])
([nil nil ((6123 . 6129) (t 25968 35367 376488 635000)) nil (25968 35400 707863 0) 0 nil])
([nil nil ((6129 . 6130)) nil (25968 35400 707862 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -6129) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) 6130) nil (25968 35400 707860 0) 0 nil])
([nil nil ((6129 . 6130)) nil (25968 35400 707854 0) 0 nil])
([nil nil ((6129 . 6142) (#("t" 0 1 (fontified nil)) . 6129) (6129 . 6130) (#("trigger_value" 0 13 (fontified nil)) . -6129) (6129 . 6142) (#("t" 0 1 (fontified t)) . -6129) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) 6130) nil (25968 35400 707852 0) 0 nil])
([nil nil ((6142 . 6144)) nil (25968 35400 707845 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 6184 . 6185) (nil fontified nil 6177 . 6185) (nil fontified nil 6175 . 6177) (nil fontified nil 6170 . 6175) (nil fontified nil 6165 . 6170) (nil fontified nil 6159 . 6165) (nil fontified nil 6144 . 6159) (6144 . 6185)) nil (25968 35400 707844 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -6183) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) 6184) nil (25968 35400 707841 0) 0 nil])
([nil nil ((6183 . 6184)) nil (25968 35400 707833 0) 0 nil])
([nil nil ((6185 . 6191)) nil (25968 35400 707832 0) 0 nil])
([nil nil ((6191 . 6192)) nil (25968 35400 707831 0) 0 nil])
([nil nil ((6191 . 6202) (#("r" 0 1 (fontified nil)) . 6191) (6191 . 6192) (#("reset_value" 0 11 (fontified nil)) . -6191) (6191 . 6202) (#("r" 0 1 (fontified t)) . -6191) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) 6192) nil (25968 35400 707829 0) 0 nil])
([nil nil ((6202 . 6204)) nil (25968 35400 707820 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 6244 . 6245) (nil fontified nil 6237 . 6245) (nil fontified nil 6235 . 6237) (nil fontified nil 6230 . 6235) (nil fontified nil 6225 . 6230) (nil fontified nil 6219 . 6225) (nil fontified nil 6204 . 6219) (6204 . 6245)) nil (25968 35400 707818 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -6243) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (#("," 0 1 (rear-nonsticky t fontified t)) . -6244) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) 6245) nil (25968 35400 707814 0) 0 nil])
([nil nil ((6243 . 6245)) nil (25968 35400 707794 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -6244) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) 6245) nil (25968 35400 707792 0) 0 nil])
([nil nil ((6244 . 6245)) nil (25968 35400 707784 0) 0 nil])
([nil nil ((6245 . 6251)) nil (25968 35400 707783 0) 0 nil])
([nil nil ((6251 . 6252)) nil (25968 35400 707782 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -6251) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) 6252) nil (25968 35400 707781 0) 0 nil])
([nil nil ((6251 . 6252)) nil (25968 35400 707777 0) 0 nil])
([nil nil ((6251 . 6265) (#("l" 0 1 (fontified nil)) . 6251) (6251 . 6252) (#("lower_deadzone" 0 14 (fontified nil)) . -6251) (6251 . 6265) (#("l" 0 1 (fontified t)) . -6251) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) 6252) nil (25968 35400 707775 0) 0 nil])
([nil nil ((6265 . 6266)) nil (25968 35400 707766 0) 0 nil])
([nil nil ((6266 . 6267)) nil (25968 35400 707765 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 6307 . 6308) (nil fontified nil 6300 . 6308) (nil fontified nil 6298 . 6300) (nil fontified nil 6293 . 6298) (nil fontified nil 6288 . 6293) (nil fontified nil 6282 . 6288) (nil fontified nil 6267 . 6282) (6267 . 6308)) nil (25968 35400 707764 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -6306) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (#("," 0 1 (rear-nonsticky t fontified t)) . -6307) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) 6308) nil (25968 35400 707760 0) 0 nil])
([nil nil ((6306 . 6308)) nil (25968 35400 707744 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -6307) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) 6308) nil (25968 35400 707742 0) 0 nil])
([nil nil ((6307 . 6308)) nil (25968 35400 707728 0) 0 nil])
([nil nil ((6308 . 6314)) nil (25968 35400 707727 0) 0 nil])
([nil nil ((6314 . 6316)) nil (25968 35400 707723 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -6314) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (#("." 0 1 (fontified t)) . -6315) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) 6316 (t 25968 35400 719142 935000)) nil (25968 35414 278414 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6308) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (#("	" 0 1 (fontified t)) . -6309) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (#(" " 0 1 (fontified t)) . -6310) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (#(" " 0 1 (fontified t)) . -6311) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (#(" " 0 1 (fontified t)) . -6312) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (#(" " 0 1 (fontified t)) . -6313) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) 6314) nil (25968 35414 278254 0) 0 nil])
([nil nil ((#("	    activation_value: keyboard_state.get().keys[index].value.0,
	    trigger_value: keyboard_state.get().keys[index].value.1,
	    reset_value: keyboard_state.get().keys[index].value.2,
	    lower_deadzone: keyboard_state.get().keys[index].value.3," 0 5 (fontified t) 5 21 (face font-lock-variable-name-face fontified t) 21 23 (fontified t) 23 38 (fontified t) 38 44 (fontified t) 44 49 (fontified t) 49 54 (fontified t) 54 56 (fontified t) 56 65 (fontified t) 65 70 (fontified t) 70 83 (face font-lock-variable-name-face fontified t) 83 85 (fontified t) 85 100 (fontified t) 100 106 (fontified t) 106 111 (fontified t) 111 116 (fontified t) 116 118 (fontified t) 118 125 (fontified t) 125 126 (rear-nonsticky t fontified t) 126 127 (fontified t) 127 132 (fontified t) 132 143 (face font-lock-variable-name-face fontified t) 143 145 (fontified t) 145 160 (fontified t) 160 166 (fontified t) 166 171 (fontified t) 171 176 (fontified t) 176 178 (fontified t) 178 187 (fontified t) 187 192 (fontified t) 192 206 (face font-lock-variable-name-face fontified t) 206 208 (fontified t) 208 223 (fontified t) 223 229 (fontified t) 229 234 (fontified t) 234 239 (fontified t) 239 241 (fontified t) 241 249 (fontified t)) . 6059) (undo-tree-id2425 . -249) (t 25968 35414 290520 600000)) nil (25968 35480 302695 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -6046) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (#("e" 0 1 (fontified t)) . -6047) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (#("t" 0 1 (fontified t)) . -6048) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (#("(" 0 1 (fontified t)) . -6049) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (#("U" 0 1 (face font-lock-type-face fontified t)) . -6050) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -6051) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (#("S" 0 1 (face font-lock-type-face fontified t)) . -6052) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -6053) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -6054) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -6055) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -6056) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (#("{" 0 1 (fontified t)) . -6057) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (#("
" 0 1 (fontified t)) . -6058) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) 6059) nil (25968 35480 302689 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -6045) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (#("
" 0 1 (fontified t)) . -6046) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (#("	" 0 1 (fontified t)) . -6047) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (#("}" 0 1 (fontified t)) . -6048) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) 6049) nil (25968 35480 302648 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -6045) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (#(";" 0 1 (fontified t)) . -6046) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) 6047) nil (25968 35480 302632 0) 0 nil])
([nil nil ((6045 . 6048)) nil (25968 35480 302626 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 6053 6063 nil nil nil t #s(yas--exit 6064 nil))) #s(yas--exit 6064 nil) 34 nil #s(yas--field 1 6053 6063 nil nil nil t #s(yas--exit 6064 nil)) nil nil)) (6046 . 6055) (#("update(${1:f})$0" 0 16 (fontified nil)) . 6046) (6046 . 6062) (#("up" 0 2 (fontified nil)) . 6046) (6046 . 6048) (#("update(…) (as SignalUpdate)" 0 27 (fontified nil)) . -6046) (6046 . 6073) (#("up" 0 2 (fontified t)) . -6046) (undo-tree-id2367 . -2) 6048) nil (25968 35480 302624 0) 0 nil])
([nil nil ((6054 . 6055) (#("f" 0 1 (fontified nil)) . 6054) (6053 . 6054)) nil (25968 35480 302620 0) 0 nil])
([nil nil ((6054 . 6059)) nil (25968 35480 302618 0) 0 nil])
([nil nil ((6060 . 6063)) nil (25968 35480 302617 0) 0 nil])
([nil nil ((apply yas--snippet-revive 6046 6064 #s(yas--snippet nil (#s(yas--field 1 6053 6063 nil nil nil t #s(yas--exit 6064 nil))) #s(yas--exit 6064 nil) 34 nil #s(yas--field 1 6053 6063 nil nil nil t #s(yas--exit 6064 nil)) nil nil))) nil (25968 35480 302616 0) 0 nil])
([nil nil ((6064 . 6065)) nil (25968 35480 302616 0) 0 nil])
([nil nil ((6064 . 6065) (#("	    " 0 5 (fontified nil)) . 6063) (undo-tree-id2366 . -1) (6064 . 6068) (6062 . 6065)) nil (25968 35480 302614 0) 0 nil])
([nil nil ((6063 . 6068)) nil (25968 35480 302611 0) 0 nil])
([nil nil ((6068 . 6070)) nil (25968 35480 302610 0) 0 nil])
([nil nil ((6068 . 6073) (#("st" 0 2 (fontified nil)) . 6068) (6068 . 6070) (#("state" 0 5 (fontified nil)) . -6068) (6068 . 6073) (#("st" 0 2 (fontified t)) . -6068) (undo-tree-id2365 . -2) 6070) nil (25968 35480 302609 0) 0 nil])
([nil nil ((6073 . 6074)) nil (25968 35480 302606 0) 0 nil])
([nil nil ((6074 . 6090) (#("activation_value" 0 16 (fontified nil)) . -6074) (6074 . 6090)) nil (25968 35480 302604 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -6069) (undo-tree-id2344 . -1) (#("a" 0 1 (fontified t)) . -6070) (undo-tree-id2345 . -1) (#("t" 0 1 (fontified t)) . -6071) (undo-tree-id2346 . -1) (#("e" 0 1 (fontified t)) . -6072) (undo-tree-id2347 . -1) (#("." 0 1 (fontified t)) . -6073) (undo-tree-id2348 . -1) (#("a" 0 1 (fontified t)) . -6074) (undo-tree-id2349 . -1) (#("c" 0 1 (fontified t)) . -6075) (undo-tree-id2350 . -1) (#("t" 0 1 (fontified t)) . -6076) (undo-tree-id2351 . -1) (#("i" 0 1 (fontified t)) . -6077) (undo-tree-id2352 . -1) (#("v" 0 1 (fontified t)) . -6078) (undo-tree-id2353 . -1) (#("a" 0 1 (fontified t)) . -6079) (undo-tree-id2354 . -1) (#("t" 0 1 (fontified t)) . -6080) (undo-tree-id2355 . -1) (#("i" 0 1 (fontified t)) . -6081) (undo-tree-id2356 . -1) (#("o" 0 1 (fontified t)) . -6082) (undo-tree-id2357 . -1) (#("n" 0 1 (fontified t)) . -6083) (undo-tree-id2358 . -1) (#("_" 0 1 (fontified t)) . -6084) (undo-tree-id2359 . -1) (#("v" 0 1 (fontified t)) . -6085) (undo-tree-id2360 . -1) (#("a" 0 1 (fontified t)) . -6086) (undo-tree-id2361 . -1) (#("l" 0 1 (fontified t)) . -6087) (undo-tree-id2362 . -1) (#("u" 0 1 (fontified t)) . -6088) (undo-tree-id2363 . -1) (#("e" 0 1 (fontified t)) . -6089) (undo-tree-id2364 . -1) 6090) nil (25968 35480 302599 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -6068) (undo-tree-id2343 . -1) 6069) nil (25968 35480 302573 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 6316 . 6317) (nil fontified nil 6309 . 6317) (nil fontified nil 6307 . 6309) (nil fontified nil 6302 . 6307) (nil fontified nil 6297 . 6302) (nil fontified nil 6291 . 6297) (nil fontified nil 6276 . 6291) (nil fontified nil 6274 . 6276) (nil fontified nil 6260 . 6274) (nil fontified nil 6255 . 6260) (nil fontified nil 6246 . 6255) (nil fontified nil 6244 . 6246) (nil fontified nil 6239 . 6244) (nil fontified nil 6234 . 6239) (nil fontified nil 6228 . 6234) (nil fontified nil 6213 . 6228) (nil fontified nil 6211 . 6213) (nil fontified nil 6200 . 6211) (nil fontified nil 6195 . 6200) (nil fontified nil 6194 . 6195) (nil fontified nil 6193 . 6194) (nil fontified nil 6186 . 6193) (nil fontified nil 6184 . 6186) (nil fontified nil 6179 . 6184) (nil fontified nil 6174 . 6179) (nil fontified nil 6168 . 6174) (nil fontified nil 6153 . 6168) (nil fontified nil 6151 . 6153) (nil fontified nil 6138 . 6151) (nil fontified nil 6133 . 6138) (nil fontified nil 6124 . 6133) (nil fontified nil 6122 . 6124) (nil fontified nil 6117 . 6122) (nil fontified nil 6112 . 6117) (nil fontified nil 6106 . 6112) (nil fontified nil 6091 . 6106) (nil fontified nil 6089 . 6091) (nil fontified nil 6073 . 6089) (nil fontified nil 6068 . 6073) (6068 . 6317)) nil (25968 35480 302569 0) 0 nil])
([nil nil ((#("	    " 0 5 (fontified t)) . -6068) 6074) nil (25968 35480 302558 0) 0 nil])
([nil nil ((6068 . 6069)) nil (25968 35480 302557 0) 0 nil])
([nil nil ((6069 . 6070)) nil (25968 35480 624944 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -6068) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -6069) (undo-tree-id2484 . -1) 6070) nil (25968 35504 782891 0) 0 nil] [nil nil ((apply yas--snippet-revive 6068 6075 #s(yas--snippet nil nil #s(yas--exit #<marker at 5834 in component.rs> nil) 35 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 5834 in component.rs> nil) 35 nil nil nil nil)) (6068 . 6075) (#("static $0" 0 9 (fontified nil)) . 6068) (6068 . 6077) (#("stactivation_value" 0 2 (fontified nil) 2 18 (face font-lock-variable-name-face fontified nil)) . 6068) (undo-tree-id2295 . -3) (undo-tree-id2296 . -3) (undo-tree-id2297 . -3) (undo-tree-id2298 . -3) (undo-tree-id2299 . -3) (undo-tree-id2300 . -3) (undo-tree-id2301 . -3) (undo-tree-id2302 . -3) (undo-tree-id2303 . -3) (undo-tree-id2304 . -3) (undo-tree-id2305 . -3) (undo-tree-id2306 . -3) (undo-tree-id2307 . -3) (undo-tree-id2308 . -3) (undo-tree-id2309 . -3) (undo-tree-id2310 . -3) (undo-tree-id2311 . -3) (undo-tree-id2312 . -3) (undo-tree-id2313 . -3) (undo-tree-id2314 . -3) (undo-tree-id2315 . -3) (undo-tree-id2316 . -3) (undo-tree-id2317 . -3) (undo-tree-id2318 . -3) (undo-tree-id2319 . -3) (undo-tree-id2320 . -3) (undo-tree-id2321 . -3) (undo-tree-id2322 . -3) (undo-tree-id2323 . -3) (undo-tree-id2324 . -3) (undo-tree-id2325 . -3) (undo-tree-id2326 . -3) (undo-tree-id2327 . -3) (undo-tree-id2328 . -3) (undo-tree-id2329 . -3) (undo-tree-id2330 . 16) (6068 . 6070) (#("static" 0 6 (fontified nil)) . -6068) (6068 . 6074) (#("st" 0 2 (face font-lock-variable-name-face fontified t)) . -6068) (undo-tree-id2331 . -1) (undo-tree-id2332 . -2) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -2) (undo-tree-id2341 . -2) (undo-tree-id2342 . -2) 6070) ((6068 . 6070) (#("static" 0 6 (fontified nil)) . 6068) (6068 . 6074) (#("st" 0 2 (fontified nil)) . 6068) (6068 . 6086) (#("static $0" 0 9 (fontified nil)) . 6068) (6068 . 6077) (#("static " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . 6068) (undo-tree-id2427 . -7) (undo-tree-id2428 . -7) (undo-tree-id2429 . -7) (undo-tree-id2430 . -7) (undo-tree-id2431 . -7) (undo-tree-id2432 . -7) (undo-tree-id2433 . -7)) (25968 35480 302935 0) 0 nil])
([nil nil ((6068 . 6069)) nil (25968 35504 782886 0) 0 nil])
([nil nil ((6075 . 6076)) ((#("/" 0 1 (fontified t)) . 6075) (undo-tree-id2426 . -1)) (25968 35480 302488 0) 0 nil])
([nil nil ((6068 . 6073)) nil (25968 35504 782885 0) 0 nil])
nil
([nil nil ((#("s" 0 1 (fontified t)) . -6068) (undo-tree-id2477 . -1) (#("t" 0 1 (fontified t)) . -6069) (undo-tree-id2478 . -1) (#("a" 0 1 (fontified t)) . -6070) (undo-tree-id2479 . -1) (#("t" 0 1 (fontified t)) . -6071) (undo-tree-id2480 . -1) (#("e" 0 1 (fontified t)) . -6072) (undo-tree-id2481 . -1) 6073) nil (25968 35504 782883 0) 0 nil])
([nil nil ((6068 . 6069)) nil (25968 35504 782876 0) 0 nil])
([nil nil ((6068 . 6071)) nil (25968 35504 782875 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -6070) (undo-tree-id2476 . -1) 6071) nil (25968 35504 782874 0) 0 nil])
([nil nil ((6070 . 6071)) nil (25968 35504 782872 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -6069) (undo-tree-id2474 . -1) (#("a" 0 1 (fontified t)) . -6070) (undo-tree-id2475 . -1) 6071) nil (25968 35504 782870 0) 0 nil])
([nil nil ((6054 . 6056)) nil (25968 35504 782867 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -6070) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (#(" " 0 1 (fontified t)) . -6071) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) 6072) nil (25968 35504 782864 0) 0 nil])
([nil nil ((6070 . 6079)) nil (25968 35504 782837 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6079) (undo-tree-id2439 . -1) (undo-tree-id2440 . 1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) 6080) nil (25968 35504 782833 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6070) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) 6075) nil (25968 35504 782820 0) 0 nil])
([nil nil ((6095 . 6097) (t 25968 35504 796299 82000)) nil (25968 35518 369530 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -6094) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (#("=" 0 1 (fontified t)) . -6095) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (#(" " 0 1 (fontified t)) . -6096) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) 6097) nil (25968 35518 369527 0) 0 nil])
([nil nil ((6137 . 6138) (6094 . 6094) (6094 . 6096)) nil (25968 35518 369500 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -6138) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) 6139) nil (25968 35518 369498 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t rear-nonsticky t)) . -6199) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) 6200) nil (25968 35518 369486 0) 0 nil])
([nil nil ((6199 . 6200)) nil (25968 35518 369478 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -6259) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) 6260) nil (25968 35518 369476 0) 0 nil])
([nil nil ((6259 . 6260)) nil (25968 35518 369452 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t rear-nonsticky t)) . -6322) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) 6323) nil (25968 35518 369450 0) 0 nil])
([nil nil ((6322 . 6323)) nil (25968 35518 369427 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -6054) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (#("i" 0 1 (fontified t)) . -6055) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) 6056 (t 25968 35518 382306 783000)) nil (25968 35538 345438 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -6068) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (#("i" 0 1 (fontified t)) . -6069) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) 6070) nil (25968 35538 345403 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 6145 . 6146) (nil fontified nil 6140 . 6146) (6140 . 6146)) nil (25968 35538 345380 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 6213 . 6214) (nil fontified nil 6208 . 6214) (6208 . 6214)) nil (25968 35538 345379 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 6279 . 6280) (nil fontified nil 6274 . 6280) (6274 . 6280)) nil (25968 35538 345377 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -6159) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) 6160) nil (25968 35538 345375 0) 0 nil])
([nil nil ((6159 . 6161)) nil (25968 35538 345368 0) 0 nil])
([nil nil ((6227 . 6229)) nil (25968 35538 345367 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -6226) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (#("=" 0 1 (fontified t)) . -6227) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (#(" " 0 1 (fontified t)) . -6228) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) 6229) nil (25968 35538 345364 0) 0 nil])
([nil nil ((6226 . 6228)) nil (25968 35538 345330 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -6296) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) 6297) nil (25968 35538 345329 0) 0 nil])
([nil nil ((6296 . 6299)) nil (25968 35538 345314 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6298) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) 6299) nil (25968 35538 345310 0) 0 nil])
([nil nil ((12736 . 12741) (t 25968 35538 358638 386000)) nil (25968 35597 726800 0) 0 nil])
([nil nil ((12741 . 12744)) nil (25968 35597 726799 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -12741) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (#("e" 0 1 (fontified t)) . -12742) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -12743) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) 12744) nil (25968 35597 726797 0) 0 nil])
([nil nil ((12741 . 12742)) nil (25968 35597 726789 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -12741) (undo-tree-id2699 . -1) 12742) nil (25968 35597 726788 0) 0 nil])
([nil nil ((12741 . 12744)) nil (25968 35597 726786 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -12741) (undo-tree-id2696 . -1) (#("e" 0 1 (fontified t)) . -12742) (undo-tree-id2697 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -12743) (undo-tree-id2698 . -1) 12744) nil (25968 35597 726784 0) 0 nil])
([nil nil ((12741 . 12742)) nil (25968 35597 726780 0) 0 nil])
([nil nil ((12742 . 12758)) nil (25968 35597 726779 0) 0 nil])
([nil nil ((apply yas--snippet-revive 12755 12768 #s(yas--snippet nil nil #s(yas--exit 12768 nil) 36 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 12768 nil) 36 nil nil nil nil)) (12755 . 12768) (#("use_context()$0" 0 15 (fontified nil)) . 12755) (12755 . 12770) (#("use" 0 3 (fontified nil)) . 12755) (12755 . 12758) (#("use_context()" 0 13 (fontified nil)) . -12755) (12755 . 12768) (#("use" 0 3 (face font-lock-keyword-face fontified t)) . -12755) (undo-tree-id2688 . -3) (undo-tree-id2689 . -2) (undo-tree-id2690 . -2) (undo-tree-id2691 . -3) (undo-tree-id2692 . -3) (undo-tree-id2693 . -3) (undo-tree-id2694 . -3) (undo-tree-id2695 . -3) 12758) nil (25968 35597 726776 0) 0 nil])
([nil nil ((12766 . 12770)) nil (25968 35597 726765 0) 0 nil])
([nil nil ((12769 . 12771)) nil (25968 35597 726764 0) 0 nil])
([nil nil ((apply yas--snippet-revive 12769 12779 #s(yas--snippet nil nil #s(yas--exit 12778 nil) 37 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 12778 nil) 37 nil nil nil nil)) (12769 . 12779) (#("RwSignal<$0>" 0 12 (fontified nil)) . 12769) (12769 . 12781) (#("Rw" 0 2 (fontified nil)) . 12769) (12769 . 12771) (#("RwSignal<…>" 0 11 (fontified nil)) . -12769) (12769 . 12780) (#("Rw" 0 2 (face font-lock-type-face fontified t)) . -12769) (undo-tree-id2682 . -2) (undo-tree-id2683 . -1) (undo-tree-id2684 . -2) (undo-tree-id2685 . -2) (undo-tree-id2686 . -2) (undo-tree-id2687 . -2) 12771) nil (25968 35597 726762 0) 0 nil])
([nil nil ((12778 . 12779)) nil (25968 39184 774879 0) 0 nil])
([nil nil ((12778 . 12785) (#("U" 0 1 (fontified nil)) . 12778) (12778 . 12779) (#("UiState" 0 7 (fontified nil)) . 12778) (12778 . 12785) (#("U" 0 1 (face font-lock-type-face fontified t)) . 12778) (undo-tree-id11076 . -1) (undo-tree-id11077 . -1)) ((12778 . 12779) (#("UiState" 0 7 (fontified nil)) . 12778) (12778 . 12785) (#("U" 0 1 (fontified nil)) . 12778) (12778 . 12779) (#("UiState" 0 7 (face font-lock-type-face fontified t)) . 12778)) (25968 39185 344559 0) 0 nil])
([nil nil ((12789 . 12791)) ((#(".u" 0 1 (fontified t) 1 2 (fontified t)) . 12789) (undo-tree-id11073 . -2) (undo-tree-id11074 . -2) (undo-tree-id11075 . -1)) (25968 39185 690965 0) 0 nil])
([nil nil ((12790 . 12798) (#("unwrap()$0" 0 10 (fontified nil)) . 12790) (12790 . 12800) (#("u" 0 1 (fontified nil)) . 12790) (12790 . 12791) (#("unwrap()" 0 8 (fontified nil)) . 12790) (12790 . 12798) (#("u" 0 1 (fontified t)) . 12790)) ((12790 . 12791) (#("unwrap()" 0 8 (fontified nil)) . 12790) (12790 . 12798) (#("u" 0 1 (fontified nil)) . 12790) (12790 . 12791) (#("unwrap()$0" 0 10 (fontified nil)) . 12790) (12790 . 12800) (#("unwrap()" 0 8 (fontified t)) . 12790) (undo-tree-id11070 . -8) (undo-tree-id11071 . -8) (undo-tree-id11072 . -8)) (25968 39186 25378 0) 0 nil])
([nil nil ((12798 . 12799)) ((#(";" 0 1 (fontified t)) . 12798)) (25968 39187 763170 0) 0 nil])
([nil nil ((#(" create_signal(\"0\".to_string());" 0 15 (fontified t) 15 18 (face font-lock-string-face fontified t) 18 32 (fontified t)) . 13049) (undo-tree-id11122 . -32) (undo-tree-id11123 . -32) (undo-tree-id11124 . -32) (t 25968 39192 111950 896000)) nil (25968 39438 529042 0) 0 nil] [nil nil ((#("    let activation_value = create_signal(\"50\".to_string());
    let trigger_value = create_signal(\"5\".to_string());
    let reset_value = create_signal(\"5\".to_string());
    let lower_deadzone = create_signal(\"35\".to_string());" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 24 (face font-lock-variable-name-face fontified t) 24 41 (fontified t) 41 43 (face font-lock-string-face fontified t) 43 44 (face font-lock-string-face fontified t) 44 45 (face font-lock-string-face fontified t) 45 60 (fontified t) 60 64 (fontified t) 64 67 (face font-lock-keyword-face fontified t) 67 68 (fontified t) 68 73 (face font-lock-variable-name-face fontified t) 73 79 (face font-lock-variable-name-face fontified t) 79 81 (face font-lock-variable-name-face fontified t) 81 98 (fontified t) 98 101 (face font-lock-string-face fontified t) 101 116 (fontified t) 116 120 (fontified t) 120 121 (face font-lock-keyword-face fontified t) 121 122 (face font-lock-keyword-face fontified t) 122 123 (face font-lock-keyword-face fontified t) 123 124 (fontified t) 124 135 (face font-lock-variable-name-face fontified t) 135 152 (fontified t) 152 155 (face font-lock-string-face fontified t) 155 159 (fontified t) 159 170 (fontified t) 170 174 (fontified t) 174 177 (face font-lock-keyword-face fontified t) 177 178 (fontified t) 178 192 (face font-lock-variable-name-face fontified t) 192 208 (fontified t) 208 209 (fontified t) 209 213 (face font-lock-string-face fontified t) 213 227 (fontified t)) . 12801)) ((12801 . 13028)) (25968 39186 829756 0) 0 nil])
([nil nil ((13049 . 13056)) nil (25968 39438 529038 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -12800) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2922 . -1) (undo-tree-id2924 . -1) (undo-tree-id2926 . -1) (undo-tree-id2928 . -1) (undo-tree-id2930 . -1) (undo-tree-id2932 . -1) (undo-tree-id2934 . -1) (undo-tree-id2936 . -1) (undo-tree-id2938 . -1) (undo-tree-id2940 . -1) (undo-tree-id2942 . -1) (undo-tree-id2944 . -1) (undo-tree-id2946 . -1) (undo-tree-id2948 . -1) (undo-tree-id2950 . -1) (undo-tree-id2952 . -1) (undo-tree-id2954 . -1) (undo-tree-id2956 . -1) (undo-tree-id2958 . -1) (undo-tree-id2960 . -1) (undo-tree-id2962 . -1) (undo-tree-id2964 . -1) (undo-tree-id2966 . -1) (undo-tree-id2968 . -1) (undo-tree-id2970 . -1) (undo-tree-id2972 . -1) (undo-tree-id2974 . -1) (undo-tree-id2976 . -1) (undo-tree-id2978 . -1) (undo-tree-id2980 . -1) (undo-tree-id2982 . -1) (undo-tree-id2984 . -1) (undo-tree-id2986 . -1) (undo-tree-id2988 . -1) (undo-tree-id2990 . -1) (undo-tree-id2992 . -1) (undo-tree-id2994 . -1) (undo-tree-id2996 . -1) (undo-tree-id2998 . -1) (undo-tree-id3000 . -1) (undo-tree-id3002 . -1) (undo-tree-id3004 . -1) (undo-tree-id3006 . -1) (undo-tree-id3008 . -1) (undo-tree-id3010 . -1) (undo-tree-id3012 . -1) (undo-tree-id3014 . -1) (undo-tree-id3016 . -1) (undo-tree-id3018 . -1) (undo-tree-id3020 . -1) (undo-tree-id3022 . -1) (#("
" 0 1 (fontified t)) . -12801) (undo-tree-id3024 . -1) (undo-tree-id3026 . -1) (undo-tree-id3028 . -1) 12802) ((12800 . 12802)) (25968 39184 271470 0) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -13054) (undo-tree-id11094 . -1) (undo-tree-id11095 . -1) (undo-tree-id11096 . -1) (undo-tree-id11097 . -1) (undo-tree-id11098 . -1) (undo-tree-id11099 . -1) (undo-tree-id11100 . -1) (undo-tree-id11101 . -1) (undo-tree-id11102 . -1) (undo-tree-id11103 . -1) (undo-tree-id11104 . -1) (undo-tree-id11105 . -1) (undo-tree-id11106 . -1) (undo-tree-id11107 . -1) (undo-tree-id11108 . -1) (#("|" 0 1 (fontified t)) . -13055) (undo-tree-id11109 . -1) (undo-tree-id11110 . -1) (undo-tree-id11111 . -1) (undo-tree-id11112 . -1) (undo-tree-id11113 . -1) (undo-tree-id11114 . -1) (undo-tree-id11115 . -1) (undo-tree-id11116 . -1) (undo-tree-id11117 . -1) (undo-tree-id11118 . -1) (undo-tree-id11119 . -1) (undo-tree-id11120 . -1) (undo-tree-id11121 . -1) 13056) nil (25968 39438 529035 0) 0 nil])
([nil nil ((12852 . 12857)) ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 12852) (undo-tree-id11068 . -1) (undo-tree-id11069 . -1)) (25968 39184 235284 0) 0 nil] [nil nil ((#("et uistate = use_context::<RwSignal<UiState>>().unwrap();

    
    " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 10 (face font-lock-variable-name-face fontified t) 10 13 (fontified t) 13 24 (fontified t) 24 27 (fontified t) 27 35 (face font-lock-type-face fontified t) 35 36 (fontified t) 36 43 (face font-lock-type-face fontified t) 43 44 (fontified t) 44 48 (fontified t) 48 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 68 (fontified t)) . 12742) (undo-tree-id2706 . -68) (undo-tree-id2707 . -58) (undo-tree-id2708 . -13) (undo-tree-id2709 . -13) (undo-tree-id2710 . -13) (undo-tree-id2711 . -13) (undo-tree-id2712 . -13) (undo-tree-id2713 . -13) (undo-tree-id2714 . -13) (undo-tree-id2715 . -27) (undo-tree-id2716 . -27) (undo-tree-id2717 . -27) (undo-tree-id2718 . -27) (undo-tree-id2719 . -27) (undo-tree-id2720 . -36) (undo-tree-id2721 . -36) (undo-tree-id2722 . -36) (undo-tree-id2723 . -36) (undo-tree-id2724 . -36) (undo-tree-id2725 . -36) (undo-tree-id2726 . -48) (undo-tree-id2727 . -48) (undo-tree-id2728 . -48) (undo-tree-id2729 . -57) (undo-tree-id2730 . -57) (undo-tree-id2731 . -57) (undo-tree-id2732 . -57) (undo-tree-id2733 . -57) (undo-tree-id2734 . -57) (undo-tree-id2735 . -57) (undo-tree-id2736 . -57) (undo-tree-id2737 . -57) (undo-tree-id2738 . -57) (undo-tree-id2739 . -57) (undo-tree-id2740 . -57) (undo-tree-id2741 . -57) (undo-tree-id2742 . -57) (undo-tree-id2743 . -57) (undo-tree-id2744 . -57) (undo-tree-id2745 . -57) (undo-tree-id2746 . -57) (undo-tree-id2747 . -57) (undo-tree-id2748 . -57) (undo-tree-id2749 . -57) (undo-tree-id2750 . -57) (undo-tree-id2751 . -57) (undo-tree-id2752 . -57) (undo-tree-id2753 . -57) (undo-tree-id2754 . -57) (undo-tree-id2755 . -57) (undo-tree-id2756 . -57) (undo-tree-id2757 . -57) (undo-tree-id2758 . -57) (undo-tree-id2759 . -57) (undo-tree-id2760 . -57) (undo-tree-id2761 . -57) (undo-tree-id2762 . -57) (undo-tree-id2763 . -58) (undo-tree-id2764 . -58) (undo-tree-id2765 . -58) (undo-tree-id2766 . -58) (undo-tree-id2767 . -58) (undo-tree-id2768 . -58) (undo-tree-id2769 . -58) (undo-tree-id2770 . -58) (undo-tree-id2771 . -58) (undo-tree-id2772 . -58) (undo-tree-id2773 . -58) (undo-tree-id2774 . -58) (undo-tree-id2775 . -58) (undo-tree-id2776 . -58) (undo-tree-id2777 . -58) (undo-tree-id2778 . -58) (undo-tree-id2779 . -58) (undo-tree-id2780 . -58) (undo-tree-id2781 . -58) (undo-tree-id2782 . -58) (undo-tree-id2783 . -58) (undo-tree-id2784 . -58) (undo-tree-id2785 . -58) (undo-tree-id2786 . -58) (undo-tree-id2787 . -58) (undo-tree-id2788 . -58) (undo-tree-id2789 . -58) (undo-tree-id2790 . -58) (undo-tree-id2791 . -58) (undo-tree-id2792 . -58) (undo-tree-id2793 . -58) (undo-tree-id2794 . -58) (undo-tree-id2795 . -58) (undo-tree-id2796 . -58) (undo-tree-id2797 . -58) (undo-tree-id2798 . -58) (undo-tree-id2799 . -58) (undo-tree-id2800 . -58) (undo-tree-id2801 . -58) (undo-tree-id2802 . -58) (undo-tree-id2803 . -58) (undo-tree-id2804 . -58) (undo-tree-id2805 . -58) (undo-tree-id2806 . -58) (undo-tree-id2807 . -58) (undo-tree-id2808 . -58) (undo-tree-id2809 . -58) (undo-tree-id2810 . -58) (undo-tree-id2811 . -58) (undo-tree-id2812 . -58) (undo-tree-id2813 . -58) (undo-tree-id2814 . -58) (undo-tree-id2815 . -58) (undo-tree-id2816 . -58) (undo-tree-id2817 . -58) (undo-tree-id2818 . -58) (undo-tree-id2819 . -58) (undo-tree-id2820 . -58) (undo-tree-id2821 . -58) (undo-tree-id2822 . -58) (undo-tree-id2823 . -58) (undo-tree-id2824 . -58) (undo-tree-id2825 . -58) (undo-tree-id2826 . -58) (undo-tree-id2827 . -58) (undo-tree-id2828 . -58) (undo-tree-id2829 . -58) (undo-tree-id2830 . -58) (undo-tree-id2831 . -58) (undo-tree-id2832 . -58) (undo-tree-id2833 . -58) (undo-tree-id2834 . -58) (undo-tree-id2835 . -58) (undo-tree-id2836 . -58) (undo-tree-id2837 . -58) (undo-tree-id2838 . -58) (undo-tree-id2839 . -58) (undo-tree-id2840 . -58) (undo-tree-id2841 . -58) (undo-tree-id2842 . -58) (undo-tree-id2843 . -58) (undo-tree-id2844 . -58) (undo-tree-id2845 . -58) (undo-tree-id2846 . -58) (undo-tree-id2847 . -58) (undo-tree-id2848 . -58) (undo-tree-id2849 . -58) (undo-tree-id2850 . -58) (undo-tree-id2851 . -58) (undo-tree-id2852 . -58) (undo-tree-id2853 . -58) (undo-tree-id2854 . -58) (undo-tree-id2855 . -58) (undo-tree-id2856 . -58) (undo-tree-id2857 . -58) (undo-tree-id2858 . -58) (undo-tree-id2859 . -58) (undo-tree-id2860 . -58) (undo-tree-id2861 . -58) (undo-tree-id2862 . -58) (undo-tree-id2863 . -58) (undo-tree-id2864 . -58) (undo-tree-id2865 . -58) (undo-tree-id2866 . -58) (undo-tree-id2867 . -58) (undo-tree-id2868 . -58) (undo-tree-id2869 . -58) (undo-tree-id2870 . -58) (undo-tree-id2871 . -58) (undo-tree-id2872 . -58) (undo-tree-id2873 . -58) (undo-tree-id2874 . -58) (undo-tree-id2875 . -58) (undo-tree-id2876 . -58) (undo-tree-id2877 . -58) (undo-tree-id2878 . -58) (undo-tree-id2879 . -64) (undo-tree-id2880 . -64) (undo-tree-id2881 . -67) (undo-tree-id2882 . -67) (undo-tree-id2883 . -67) (undo-tree-id2884 . -67) (undo-tree-id2885 . -67) (undo-tree-id2886 . -67) (undo-tree-id2887 . -67) (undo-tree-id2888 . -67) (undo-tree-id2889 . -67) (undo-tree-id2890 . -67) (undo-tree-id2891 . -67) (undo-tree-id2892 . -67) (undo-tree-id2893 . -67) (undo-tree-id2894 . -67) (undo-tree-id2895 . -67) (undo-tree-id2896 . -68) (undo-tree-id2897 . -68) (undo-tree-id2898 . -68) (undo-tree-id2899 . -68) (undo-tree-id2900 . -68) (undo-tree-id2901 . -68) (undo-tree-id2902 . -68) (undo-tree-id2903 . -68) (undo-tree-id2904 . -68) (undo-tree-id2905 . -63) (undo-tree-id2906 . -63) (undo-tree-id2907 . -63) (undo-tree-id2908 . -63) (undo-tree-id2909 . -63) (undo-tree-id2910 . -63) (undo-tree-id2911 . -58) (undo-tree-id2912 . -58) (undo-tree-id2913 . -58) (undo-tree-id2914 . -58) (undo-tree-id2915 . -58) (undo-tree-id2916 . -64) (undo-tree-id2917 . -68)) ((12742 . 12810)) (25968 35656 850271 0) 0 nil])
([nil nil ((13054 . 13059)) nil (25968 39438 529006 0) 0 nil])
([nil nil ((#("    let mode = create_signal(\"0\".to_string());
" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 12 (face font-lock-variable-name-face fontified t) 12 29 (fontified t) 29 32 (face font-lock-string-face fontified t) 32 47 (fontified t)) . -12806) (undo-tree-id3182 . -47) (undo-tree-id3183 . -47) (undo-tree-id3185 . -4) 12853) ((12806 . 12853)) (25968 39184 103653 0) 0 nil])
nil
([nil nil ((13058 . 13065) (#("u" 0 1 (fontified nil)) . 13058) (13058 . 13059) (#("uistate" 0 7 (fontified nil)) . -13058) (13058 . 13065) (#("u" 0 1 (fontified t)) . -13058) (undo-tree-id11086 . -1) (undo-tree-id11087 . -1) (undo-tree-id11088 . -1) (undo-tree-id11089 . -1) (undo-tree-id11090 . -1) (undo-tree-id11091 . -1) (undo-tree-id11092 . -1) (undo-tree-id11093 . -1) 13059) nil (25968 39438 529004 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -12804) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3170 . -1) (undo-tree-id3172 . -1) (#("
" 0 1 (fontified t)) . -12805) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3178 . -1) (undo-tree-id3180 . -1) 12806) ((12804 . 12806)) (25968 39184 20495 0) 0 nil])
([nil nil ((13065 . 13067)) nil (25968 39438 528993 0) 0 nil])
([nil nil ((6340 . 6346)) ((#("
	    " 0 1 (fontified t) 1 2 (fontified t) 2 6 (fontified t)) . 6340) (undo-tree-id11061 . -6) (undo-tree-id11062 . -6) (undo-tree-id11063 . -1) (undo-tree-id11064 . -6) (undo-tree-id11065 . -1) (undo-tree-id11066 . -6) (undo-tree-id11067 . -6)) (25968 39183 937186 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -13066) (undo-tree-id11081 . -1) (undo-tree-id11082 . -1) (undo-tree-id11083 . -1) (undo-tree-id11084 . -1) (undo-tree-id11085 . -1) 13067) nil (25968 39438 528991 0) 0 nil])
([nil nil ((6346 . 6351)) ((#("state" 0 5 (fontified t)) . 6346) (undo-tree-id11059 . -5) (undo-tree-id11060 . -5)) (25968 39183 854185 0) 0 nil])
([nil nil ((13066 . 13067)) nil (25968 39438 528984 0) 0 nil])
([nil nil ((6346 . 6351) (#("state" 0 5 (fontified nil)) . 6346) (6346 . 6351) (#("state" 0 5 (fontified t)) . -6346) (undo-tree-id3156 . -5) (undo-tree-id3158 . -2) (undo-tree-id3160 . -3) (undo-tree-id3162 . -4) (undo-tree-id3164 . -5) 6351) ((6346 . 6351) (#("state" 0 5 (fontified nil)) . 6346) (6346 . 6351) (#("state" 0 5 (fontified t)) . 6346) (undo-tree-id11054 . -5) (undo-tree-id11055 . -5) (undo-tree-id11056 . -5) (undo-tree-id11057 . -5) (undo-tree-id11058 . -5)) (25968 39183 770157 0) 0 nil])
([nil nil ((apply yas--snippet-revive 13066 13071 #s(yas--snippet nil nil #s(yas--exit 13071 nil) 60 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 13071 nil) 60 nil nil nil nil)) (13066 . 13071) (#("get()$0" 0 7 (fontified nil)) . 13066) (13066 . 13073) (#("g" 0 1 (fontified nil)) . 13066) (13066 . 13067) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -13066) (13066 . 13086) (#("g" 0 1 (fontified t)) . -13066) (undo-tree-id11078 . -1) (undo-tree-id11079 . -1) (undo-tree-id11080 . -1) 13067) nil (25968 39438 528982 0) 0 nil])
([nil nil ((6351 . 6352)) ((#("," 0 1 (fontified t)) . 6351) (undo-tree-id11052 . -1) (undo-tree-id11053 . -1)) (25968 39183 687166 0) 0 nil])
([nil nil ((13071 . 13072)) nil (25968 39438 528966 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -6351) (undo-tree-id3145 . -1) (undo-tree-id3147 . -1) (undo-tree-id3149 . -1) (undo-tree-id3151 . -1) (undo-tree-id3153 . -1) (undo-tree-id3155 . -1) 6352) ((6351 . 6352)) (25968 39183 603255 0) 0 nil])
([nil nil ((13072 . 13076) (#("mode" 0 4 (fontified nil)) . -13072) (13072 . 13076)) nil (25968 39438 528963 0) 0 nil])
([nil nil ((6351 . 6353)) ((#(".m" 0 1 (fontified t) 1 2 (fontified t)) . 6351) (undo-tree-id11047 . -2) (undo-tree-id11048 . -2) (undo-tree-id11049 . -1) (undo-tree-id11050 . -1) (undo-tree-id11051 . -1)) (25968 39183 521182 0) 0 nil])
([nil nil ((13076 . 13077)) nil (25968 39438 528958 0) 0 nil])
([nil nil ((6352 . 6356) (#("m" 0 1 (fontified nil)) . 6352) (6352 . 6353) (#("mode" 0 4 (fontified nil)) . -6352) (6352 . 6356) (#("m" 0 1 (fontified t)) . -6352) (undo-tree-id3142 . -1) (undo-tree-id3144 . -1) 6353) ((6352 . 6353) (#("mode" 0 4 (fontified nil)) . 6352) (6352 . 6356) (#("m" 0 1 (fontified nil)) . 6352) (6352 . 6353) (#("mode" 0 4 (fontified t)) . 6352) (undo-tree-id11042 . -4) (undo-tree-id11043 . -4) (undo-tree-id11044 . -4) (undo-tree-id11045 . -4) (undo-tree-id11046 . -4)) (25968 39183 436619 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -15418) (undo-tree-id11125 . -1) (undo-tree-id11126 . -1) (undo-tree-id11127 . -1) (undo-tree-id11128 . -1) (undo-tree-id11129 . -1) (undo-tree-id11130 . -1) (undo-tree-id11131 . -1) (undo-tree-id11132 . -1) (undo-tree-id11133 . -1) (undo-tree-id11134 . -1) (undo-tree-id11135 . -1) (undo-tree-id11136 . -1) (undo-tree-id11137 . -1) (undo-tree-id11138 . -1) (undo-tree-id11139 . -1) (undo-tree-id11140 . -1) (undo-tree-id11141 . -1) (undo-tree-id11142 . -1) (#("1" 0 1 (fontified t)) . -15419) (undo-tree-id11143 . -1) (undo-tree-id11144 . -1) (undo-tree-id11145 . -1) (undo-tree-id11146 . -1) (undo-tree-id11147 . -1) (undo-tree-id11148 . -1) 15420 (t 25968 39438 557969 324000)) nil (25968 39447 359708 0) 0 nil])
([nil nil ((6356 . 6360)) ((#(" = k" 0 3 (fontified t) 3 4 (fontified t)) . 6356) (undo-tree-id11037 . -4) (undo-tree-id11038 . -4) (undo-tree-id11039 . -3) (undo-tree-id11040 . -3) (undo-tree-id11041 . -3)) (25968 39183 353561 0) 0 nil])
([nil nil ((#("	mode.set(v.clone());
" 0 21 (fontified t) 21 22 (fontified t)) . -15413) (undo-tree-id11182 . -22) (undo-tree-id11183 . -22) 15435 (t 25968 39447 387535 607000)) nil (25968 39482 493561 0) 0 nil])
([nil nil ((6359 . 6373) (#("k" 0 1 (fontified nil)) . 6359) (6359 . 6360) (#("keyboard_state" 0 14 (fontified nil)) . -6359) (6359 . 6373) (#("k" 0 1 (fontified t)) . -6359) (undo-tree-id3138 . -1) (undo-tree-id3140 . -1) 6360) ((6359 . 6360) (#("keyboard_state" 0 14 (fontified nil)) . 6359) (6359 . 6373) (#("k" 0 1 (fontified nil)) . 6359) (6359 . 6360) (#("keyboard_state" 0 14 (fontified t)) . 6359) (undo-tree-id11032 . -14) (undo-tree-id11033 . -14) (undo-tree-id11034 . -14) (undo-tree-id11035 . -14) (undo-tree-id11036 . -14)) (25968 39183 268592 0) 0 nil])
([nil nil ((15412 . 15414)) nil (25968 39482 493558 0) 0 nil])
([nil nil ((6373 . 6377)) ((#(".get" 0 1 (fontified t) 1 4 (fontified t)) . 6373) (undo-tree-id11027 . -4) (undo-tree-id11028 . -4) (undo-tree-id11029 . -1) (undo-tree-id11030 . -1) (undo-tree-id11031 . -1)) (25968 39183 185805 0) 0 nil])
([nil nil ((15414 . 15418)) nil (25968 39482 493557 0) 0 nil])
([nil nil ((apply yas--snippet-revive 6374 6379 #s(yas--snippet nil nil #s(yas--exit #<marker at 5834 in component.rs> nil) 39 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 5834 in component.rs> nil) 39 nil nil nil nil)) (6374 . 6379) (#("get()$0" 0 7 (fontified nil)) . 6374) (6374 . 6381) (#("get" 0 3 (fontified nil)) . 6374) (6374 . 6377) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -6374) (6374 . 6394) (#("get" 0 3 (fontified t)) . -6374) (undo-tree-id3131 . -3) (undo-tree-id3133 . -1) (undo-tree-id3135 . -2) (undo-tree-id3137 . -3) 6377) ((6374 . 6377) (#("get() (as SignalGet)" 0 20 (fontified nil)) . 6374) (6374 . 6394) (#("get" 0 3 (fontified nil)) . 6374) (6374 . 6377) (#("get()$0" 0 7 (fontified nil)) . 6374) (6374 . 6381) (#("get()" 0 5 (fontified t)) . 6374) (undo-tree-id11022 . -5) (undo-tree-id11023 . -5) (undo-tree-id11024 . -5) (undo-tree-id11025 . -5) (undo-tree-id11026 . -5)) (25968 39183 132380 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -15414) (undo-tree-id11177 . -1) (undo-tree-id11178 . -1) (#("o" 0 1 (fontified t)) . -15415) (undo-tree-id11179 . -1) (#("v" 0 1 (fontified t)) . -15416) (undo-tree-id11180 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -15417) (undo-tree-id11181 . -1) 15418) nil (25968 39482 493555 0) 0 nil])
([nil nil ((6379 . 6381)) ((#(".k" 0 1 (fontified t) 1 2 (fontified t)) . 6379) (undo-tree-id11018 . -2) (undo-tree-id11019 . -2) (undo-tree-id11020 . -1) (undo-tree-id11021 . -1)) (25968 39183 52870 0) 0 nil])
([nil nil ((15414 . 15415)) nil (25968 39482 493548 0) 0 nil])
([nil nil ((6380 . 6384) (#("k" 0 1 (fontified nil)) . 6380) (6380 . 6381) (#("keys" 0 4 (fontified nil)) . -6380) (6380 . 6384) (#("k" 0 1 (fontified t)) . -6380) (undo-tree-id3126 . -1) (undo-tree-id3128 . -1) (undo-tree-id3130 . -1) 6381) ((6380 . 6381) (#("keys" 0 4 (fontified nil)) . 6380) (6380 . 6384) (#("k" 0 1 (fontified nil)) . 6380) (6380 . 6381) (#("keys" 0 4 (fontified t)) . 6380) (undo-tree-id11014 . -4) (undo-tree-id11015 . -4) (undo-tree-id11016 . -4) (undo-tree-id11017 . -4)) (25968 39182 518334 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -15414) (undo-tree-id11175 . -1) (undo-tree-id11176 . -1) 15415) nil (25968 39482 493546 0) 0 nil])
([nil nil ((6384 . 6386)) ((#("[]" 0 1 (fontified t) 1 2 (fontified t)) . 6384) (undo-tree-id11010 . -1) (undo-tree-id11011 . -1) (undo-tree-id11012 . -2) (undo-tree-id11013 . -2)) (25968 39182 300027 0) 0 nil])
([nil nil ((15414 . 15415)) nil (25968 39482 493543 0) 0 nil])
([nil nil ((6385 . 6390)) ((#("index" 0 5 (fontified t)) . 6385)) (25968 39182 55490 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -15414) (undo-tree-id11173 . -1) (undo-tree-id11174 . -1) 15415) nil (25968 39482 493542 0) 0 nil])
([nil nil ((6391 . 6393)) ((#(".m" 0 1 (fontified t) 1 2 (fontified t)) . 6391) (undo-tree-id11006 . -2) (undo-tree-id11007 . -2) (undo-tree-id11008 . -1) (undo-tree-id11009 . -1)) (25968 39181 697107 0) 0 nil])
([nil nil ((15414 . 15415)) nil (25968 39482 493538 0) 0 nil])
([nil nil ((6392 . 6396) (#("m" 0 1 (fontified nil)) . 6392) (6392 . 6393) (#("mode" 0 4 (fontified nil)) . -6392) (6392 . 6396) (#("m" 0 1 (fontified t)) . -6392) (undo-tree-id3121 . -1) (undo-tree-id3123 . -1) (undo-tree-id3125 . -1) 6393) ((6392 . 6393) (#("mode" 0 4 (fontified nil)) . 6392) (6392 . 6396) (#("m" 0 1 (fontified nil)) . 6392) (6392 . 6393) (#("mode" 0 4 (fontified t)) . 6392) (undo-tree-id11002 . -4) (undo-tree-id11003 . -4) (undo-tree-id11004 . -4) (undo-tree-id11005 . -4)) (25968 39181 611804 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -15414) (undo-tree-id11171 . -1) (undo-tree-id11172 . -1) 15415) nil (25968 39482 493537 0) 0 nil])
([nil nil ((6396 . 6397)) ((#(";" 0 1 (fontified t)) . 6396)) (25968 39181 528484 0) 0 nil])
([nil nil ((15414 . 15415)) nil (25968 39482 493534 0) 0 nil])
([nil nil (("value" . 13805)) ((13805 . 13810)) (25968 39181 445229 0) 1 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -15414) (undo-tree-id11169 . -1) (undo-tree-id11170 . -1) 15415) nil (25968 39482 493532 0) 0 nil])
([nil nil ((#("        activation_.1.set(v.clone());
" 0 8 (fontified t) 8 10 (fontified t) 10 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t)) . -13786) (undo-tree-id4274 . -38) (undo-tree-id4275 . -38) 13824) ((13786 . 13824)) (25968 39168 941564 0) 0 nil] [nil nil ((#("activation_" 0 2 (fontified t) 2 11 (fontified t)) . 13794) (undo-tree-id10995 . -11) (undo-tree-id10996 . -11) (undo-tree-id10997 . -11)) ((13794 . 13805)) (25968 39181 361838 0) 0 nil])
([nil nil ((15414 . 15416)) nil (25968 39482 493529 0) 0 nil])
([nil nil ((13785 . 13787)) ((#("
	" 0 1 (fontified t) 1 2 (fontified t)) . 13785) (undo-tree-id10989 . -2) (undo-tree-id10990 . -2) (undo-tree-id10991 . -2) (undo-tree-id10992 . -2) (undo-tree-id10993 . -2) (undo-tree-id10994 . -1)) (25968 39168 649272 0) 0 nil])
([nil nil ((13794 . 13795)) ((#("u" 0 1 (fontified t)) . 13794)) (25968 39181 279145 0) 0 nil])
([nil nil ((15414 . 15421) (#("ui" 0 2 (fontified nil)) . 15414) (15414 . 15416) (#("uistate" 0 7 (fontified nil)) . -15414) (15414 . 15421) (#("ui" 0 2 (fontified t)) . -15414) (undo-tree-id11167 . -2) (undo-tree-id11168 . -2) 15416) nil (25968 39482 493527 0) 0 nil])
([nil nil ((13787 . 13788)) ((#("g" 0 1 (fontified t)) . 13787) (undo-tree-id10987 . -1) (undo-tree-id10988 . -1)) (25968 39168 285148 0) 0 nil])
([nil nil ((13794 . 13801) (#("u" 0 1 (fontified nil)) . 13794) (13794 . 13795) (#("uistate" 0 7 (fontified nil)) . 13794) (13794 . 13801) (#("u" 0 1 (fontified t)) . 13794)) ((13794 . 13795) (#("uistate" 0 7 (fontified nil)) . 13794) (13794 . 13801) (#("u" 0 1 (fontified nil)) . 13794) (13794 . 13795) (#("uistate" 0 7 (fontified t)) . 13794) (undo-tree-id11000 . -7) (undo-tree-id11001 . -7)) (25968 39181 194663 0) 0 nil])
([nil nil ((15421 . 15423)) nil (25968 39482 493523 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -13787) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) 13788) ((13787 . 13788)) (25968 39167 999741 0) 0 nil])
([nil nil ((13801 . 13803)) ((#(".g" 0 1 (fontified t) 1 2 (fontified t)) . 13801) (undo-tree-id10998 . -1) (undo-tree-id10999 . -1)) (25968 39181 111922 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -15422) (undo-tree-id11166 . -1) 15423) nil (25968 39482 493522 0) 0 nil])
([nil nil ((13787 . 13788)) ((#("y" 0 1 (fontified t)) . 13787) (undo-tree-id10985 . -1) (undo-tree-id10986 . -1)) (25968 39167 622907 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . 13802)) ((13802 . 13803)) (25968 39181 28485 0) 0 nil])
([nil nil ((15422 . 15424)) nil (25968 39482 493519 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -13787) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) 13788) ((13787 . 13788)) (25968 39167 374092 0) 0 nil])
([nil nil ((13802 . 13803)) ((#(" " 0 1 (fontified t)) . 13802)) (25968 39180 945290 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 15429 15431 nil nil nil t #s(yas--exit 15432 nil))) #s(yas--exit 15432 nil) 61 nil #s(yas--field 1 15429 15431 nil nil nil t #s(yas--exit 15432 nil)) nil nil)) (15422 . 15431) (#("update(${1:f})$0" 0 16 (fontified nil)) . 15422) (15422 . 15438) (#("up" 0 2 (fontified nil)) . 15422) (15422 . 15424) (#("update(…) (as SignalUpdate)" 0 27 (fontified nil)) . -15422) (15422 . 15449) (#("up" 0 2 (fontified t)) . -15422) (undo-tree-id11165 . -2) 15424) nil (25968 39482 493518 0) 0 nil])
([nil nil ((13787 . 13790)) ((#("ui." 0 2 (fontified t) 2 3 (fontified t)) . 13787) (undo-tree-id10983 . -3) (undo-tree-id10984 . -3)) (25968 39167 154199 0) 0 nil])
([nil nil ((13802 . 13805)) ((#("get" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 13802)) (25968 39180 861887 0) 0 nil])
([nil nil ((15430 . 15431) (#("f" 0 1 (fontified nil)) . 15430) (15429 . 15430)) nil (25968 39482 493513 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -13789) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) 13790) ((13789 . 13790)) (25968 39166 904391 0) 0 nil])
([nil nil ((#("get" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 13802)) ((13802 . 13805)) (25968 39180 780043 0) 0 nil])
([nil nil ((apply yas--snippet-revive 15422 15432 #s(yas--snippet nil (#s(yas--field 1 15429 15431 nil nil nil t #s(yas--exit 15432 nil))) #s(yas--exit 15432 nil) 61 nil #s(yas--field 1 15429 15431 nil nil nil t #s(yas--exit 15432 nil)) nil nil))) nil (25968 39482 493512 0) 0 nil])
([nil nil ((13789 . 13790)) ((#("s" 0 1 (fontified t)) . 13789) (undo-tree-id10981 . -1) (undo-tree-id10982 . -1)) (25968 39166 645210 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 13802)) ((13802 . 13803)) (25968 39180 699131 0) 0 nil])
([nil nil ((15430 . 15431)) nil (25968 39482 493511 0) 0 nil])
([nil nil ((13787 . 13794) (#("uis" 0 3 (fontified nil)) . 13787) (13787 . 13790) (#("uistate" 0 7 (fontified nil)) . -13787) (13787 . 13794) (#("uis" 0 3 (fontified t)) . -13787) (undo-tree-id4266 . -3) (undo-tree-id4267 . -3) 13790) ((13787 . 13790) (#("uistate" 0 7 (fontified nil)) . 13787) (13787 . 13794) (#("uis" 0 3 (fontified nil)) . 13787) (13787 . 13790) (#("uistate" 0 7 (fontified t)) . 13787) (undo-tree-id10977 . -7) (undo-tree-id10978 . -7) (undo-tree-id10979 . -7) (undo-tree-id10980 . -7)) (25968 39166 456506 0) 0 nil])
([nil nil ((#(".1" 0 1 (fontified t) 1 2 (fontified t)) . 13802)) ((13802 . 13804)) (25968 39180 206997 0) 0 nil])
([nil nil ((15432 . 15436)) nil (25968 39482 493510 0) 0 nil])
([nil nil ((13794 . 13797)) ((#(".up" 0 1 (fontified t) 1 3 (fontified t)) . 13794) (undo-tree-id10973 . -3) (undo-tree-id10974 . -3) (undo-tree-id10975 . -1) (undo-tree-id10976 . -1)) (25968 39166 280610 0) 0 nil])
([nil nil ((13802 . 13803)) ((#(" " 0 1 (fontified t)) . 13802)) (25968 39179 676996 0) 0 nil])
([nil nil ((15435 . 15439) (#("m" 0 1 (fontified nil)) . 15435) (15435 . 15436) (#("mode" 0 4 (fontified nil)) . -15435) (15435 . 15439) (#("m" 0 1 (fontified t)) . -15435) (undo-tree-id11164 . -1) 15436) nil (25968 39482 493508 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 13802 13802 nil nil nil t #s(yas--exit 13804 nil))) #s(yas--exit 13804 nil) 41 nil #s(yas--field 1 13802 13802 nil nil nil t #s(yas--exit 13804 nil)) nil nil)) (13795 . 13804) (#("update(${1:f})$0" 0 16 (fontified nil)) . 13795) (13795 . 13811) (#("up" 0 2 (fontified nil)) . 13795) (13795 . 13797) (#("update(…) (as SignalUpdate)" 0 27 (fontified nil)) . -13795) (13795 . 13822) (#("up" 0 2 (fontified t)) . -13795) (undo-tree-id4265 . -2) 13797) ((13795 . 13797) (#("update(…) (as SignalUpdate)" 0 27 (fontified nil)) . 13795) (13795 . 13822) (#("up" 0 2 (fontified nil)) . 13795) (13795 . 13797) (#("update(${1:f})$0" 0 16 (fontified nil)) . 13795) (13795 . 13811) (#("update(f)" 0 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . 13795) (undo-tree-id10970 . -8) (undo-tree-id10971 . -8) (undo-tree-id10972 . -7) (apply yas--snippet-revive 13795 13804 #s(yas--snippet nil (#s(yas--field 1 13802 13802 nil nil nil t #s(yas--exit 13804 nil))) #s(yas--exit 13804 nil) 41 nil #s(yas--field 1 13802 13802 nil nil nil t #s(yas--exit 13804 nil)) nil nil))) (25968 39166 86347 0) 0 nil])
([nil nil ((13802 . 13803)) ((#("." 0 1 (fontified t)) . 13802) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1)) (25968 35791 857344 0) 0 nil])
([nil nil ((15439 . 15440)) nil (25968 39482 493504 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -13802) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) 13803) ((13802 . 13803)) (25968 39165 848837 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -13801) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3224 . -1) (undo-tree-id3226 . -1) (undo-tree-id3228 . -1) (undo-tree-id3230 . -1) (undo-tree-id3232 . -1) (undo-tree-id3234 . -1) (undo-tree-id3236 . -1) (undo-tree-id3238 . -1) (undo-tree-id3240 . -1) (undo-tree-id3242 . -1) (undo-tree-id3244 . -1) (undo-tree-id3246 . -1) (undo-tree-id3248 . -1) (undo-tree-id3250 . -1) (undo-tree-id3252 . -1) (undo-tree-id3254 . -1) (undo-tree-id3256 . -1) (undo-tree-id3258 . -1) (undo-tree-id3260 . -1) (undo-tree-id3262 . -1) (undo-tree-id3264 . -1) (undo-tree-id3266 . -1) (undo-tree-id3268 . -1) (undo-tree-id3270 . -1) (undo-tree-id3272 . -1) (undo-tree-id3274 . -1) (undo-tree-id3276 . -1) (undo-tree-id3278 . -1) (undo-tree-id3280 . -1) (undo-tree-id3282 . -1) (undo-tree-id3284 . -1) (undo-tree-id3286 . -1) (undo-tree-id3288 . -1) (undo-tree-id3290 . -1) (undo-tree-id3292 . -1) (undo-tree-id3294 . -1) (undo-tree-id3296 . -1) (undo-tree-id3298 . -1) (undo-tree-id3300 . -1) (undo-tree-id3302 . -1) (undo-tree-id3304 . -1) (undo-tree-id3306 . -1) (undo-tree-id3308 . -1) (undo-tree-id3310 . -1) (undo-tree-id3312 . -1) (undo-tree-id3314 . -1) (undo-tree-id3316 . -1) (undo-tree-id3318 . -1) (undo-tree-id3320 . -1) (undo-tree-id3322 . -1) (undo-tree-id3324 . -1) (undo-tree-id3326 . -1) (undo-tree-id3328 . -1) (undo-tree-id3330 . -1) (undo-tree-id3332 . -1) (undo-tree-id3334 . -1) (undo-tree-id3336 . -1) (undo-tree-id3338 . -1) (undo-tree-id3340 . -1) (undo-tree-id3342 . -1) (undo-tree-id3344 . -1) (undo-tree-id3346 . -1) (#("." 0 1 (fontified t)) . -13802) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3350 . -1) (undo-tree-id3352 . -1) 13803) ((13801 . 13803)) (25968 35791 507985 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 15465 . 15466) (nil fontified nil 15460 . 15466) (nil fontified nil 15453 . 15460) (nil fontified nil 15450 . 15453) (nil fontified nil 15440 . 15450) (15440 . 15466)) nil (25968 39482 493503 0) 0 nil])
([nil nil ((13802 . 13804)) ((#("||" 0 2 (fontified t)) . 13802) (undo-tree-id10966 . -1) (undo-tree-id10967 . -1) (undo-tree-id10968 . -2) (undo-tree-id10969 . -2)) (25968 39165 652922 0) 0 nil])
([nil nil ((13801 . 13802)) ((#("." 0 1 (fontified t)) . 13801) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1)) (25968 35791 78476 0) 0 nil])
([nil nil ((#(";" 0 1 (rear-nonsticky t fontified t)) . -15465) (undo-tree-id11149 . -1) (undo-tree-id11150 . -1) (undo-tree-id11151 . -1) (undo-tree-id11152 . -1) (undo-tree-id11153 . -1) (undo-tree-id11154 . -1) (undo-tree-id11155 . -1) (undo-tree-id11156 . -1) (undo-tree-id11157 . -1) (undo-tree-id11158 . -1) (undo-tree-id11159 . -1) (undo-tree-id11160 . -1) (undo-tree-id11161 . -1) (undo-tree-id11162 . -1) (undo-tree-id11163 . -1) 15466) nil (25968 39482 493500 0) 0 nil])
([nil nil ((13803 . 13804)) ((#("x" 0 1 (fontified t)) . 13803)) (25968 39165 450262 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -13801) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3216 . -1) (undo-tree-id3218 . -1) (undo-tree-id3220 . -1) 13802) ((13801 . 13802)) (25968 35790 620142 0) 0 nil])
([nil nil ((15466 . 15467)) nil (25968 39482 493472 0) 0 nil])
([nil nil ((13805 . 13808)) ((#(" x." 0 3 (fontified t)) . 13805) (undo-tree-id10962 . -3) (undo-tree-id10963 . -3) (undo-tree-id10964 . -3) (undo-tree-id10965 . -3)) (25968 39165 228800 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -13801) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3201 . -1) (undo-tree-id3203 . -1) (undo-tree-id3205 . -1) (undo-tree-id3207 . 1) (undo-tree-id3209 . -1) (undo-tree-id3211 . -1) 13802) ((13801 . 13802)) (25968 35790 224328 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -16720) (undo-tree-id11184 . -1) (undo-tree-id11185 . -1) (undo-tree-id11186 . -1) (undo-tree-id11187 . -1) (undo-tree-id11188 . -1) (undo-tree-id11189 . -1) (undo-tree-id11190 . -1) (undo-tree-id11191 . -1) (undo-tree-id11192 . -1) (undo-tree-id11193 . -1) (undo-tree-id11194 . -1) (undo-tree-id11195 . -1) (undo-tree-id11196 . -1) (undo-tree-id11197 . -1) (undo-tree-id11198 . -1) (undo-tree-id11199 . -1) (undo-tree-id11200 . -1) (undo-tree-id11201 . -1) (#("0" 0 1 (fontified t)) . -16721) (undo-tree-id11202 . -1) (undo-tree-id11203 . -1) (undo-tree-id11204 . -1) (undo-tree-id11205 . -1) (undo-tree-id11206 . -1) (undo-tree-id11207 . -1) (undo-tree-id11208 . -1) (undo-tree-id11209 . -1) (undo-tree-id11210 . -1) (undo-tree-id11211 . -1) (undo-tree-id11212 . -1) (undo-tree-id11213 . -1) (undo-tree-id11214 . -1) (undo-tree-id11215 . -1) (undo-tree-id11216 . -1) (undo-tree-id11217 . -1) (undo-tree-id11218 . -1) 16722 (t 25968 39482 521331 236000)) nil (25968 39490 676830 0) 0 nil])
([nil nil ((13808 . 13824) (#("activation_value" 0 16 (fontified nil)) . -13808) (13808 . 13824)) ((#("activation_value" 0 16 (fontified nil)) . 13808) (13808 . 13824) (#("activation_value" 0 16 (fontified t)) . 13808) (undo-tree-id10959 . -16) (undo-tree-id10960 . -16) (undo-tree-id10961 . -16)) (25968 39164 936025 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -13802) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (#("e" 0 1 (fontified t)) . -13803) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (#("t" 0 1 (fontified t)) . -13804) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (#("(" 0 1 (fontified t)) . -13805) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (#("v" 0 1 (fontified t)) . -13806) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (#("." 0 1 (fontified t)) . -13807) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (#("c" 0 1 (fontified t)) . -13808) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (#("l" 0 1 (fontified t)) . -13809) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (#("o" 0 1 (fontified t)) . -13810) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (#("n" 0 1 (fontified t)) . -13811) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (#("e" 0 1 (fontified t)) . -13812) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (#("(" 0 1 (fontified t)) . -13813) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (#(")" 0 1 (fontified t)) . -13814) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (#(")" 0 1 (fontified t)) . -13815) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (#(";" 0 1 (fontified t)) . -13816) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) 13817) ((13802 . 13817)) (25968 35789 830873 0) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . -13817) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) 13818) ((13817 . 13818)) (25968 35775 568062 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -16720) (undo-tree-id11219 . -1) (undo-tree-id11220 . -1) (undo-tree-id11221 . -1) (undo-tree-id11222 . -1) (undo-tree-id11223 . -1) (undo-tree-id11224 . -1) (undo-tree-id11225 . -1) (undo-tree-id11226 . -1) (undo-tree-id11227 . -1) (undo-tree-id11228 . -1) (undo-tree-id11229 . -1) (undo-tree-id11230 . -1) (undo-tree-id11231 . -1) (undo-tree-id11232 . -1) (undo-tree-id11233 . -1) (undo-tree-id11234 . -1) (undo-tree-id11235 . -1) (undo-tree-id11236 . -1) (undo-tree-id11237 . -1) (undo-tree-id11238 . -1) (undo-tree-id11239 . -1) (undo-tree-id11240 . -1) (undo-tree-id11241 . -1) (undo-tree-id11242 . -1) (undo-tree-id11243 . -1) (undo-tree-id11244 . -1) (undo-tree-id11245 . -1) (undo-tree-id11246 . -1) (undo-tree-id11247 . -1) (undo-tree-id11248 . -1) (undo-tree-id11249 . -1) (undo-tree-id11250 . -1) (undo-tree-id11251 . -1) (undo-tree-id11252 . -1) (undo-tree-id11253 . -1) (undo-tree-id11254 . -1) (#("g" 0 1 (fontified t)) . -16721) (undo-tree-id11255 . -1) (undo-tree-id11256 . -1) (undo-tree-id11257 . -1) (undo-tree-id11258 . -1) (undo-tree-id11259 . -1) (undo-tree-id11260 . -1) (undo-tree-id11261 . -1) (undo-tree-id11262 . -1) (undo-tree-id11263 . -1) (undo-tree-id11264 . -1) (undo-tree-id11265 . -1) (undo-tree-id11266 . -1) (undo-tree-id11267 . -1) (undo-tree-id11268 . -1) (undo-tree-id11269 . -1) (undo-tree-id11270 . -1) (undo-tree-id11271 . -1) (undo-tree-id11272 . -1) (undo-tree-id11273 . -1) (undo-tree-id11274 . -1) (undo-tree-id11275 . -1) (undo-tree-id11276 . -1) (undo-tree-id11277 . -1) (undo-tree-id11278 . -1) (undo-tree-id11279 . -1) (undo-tree-id11280 . -1) (undo-tree-id11281 . -1) (undo-tree-id11282 . -1) (#("e" 0 1 (fontified t)) . -16722) (undo-tree-id11283 . -1) (undo-tree-id11284 . -1) (undo-tree-id11285 . -1) (undo-tree-id11286 . -1) (undo-tree-id11287 . -1) (undo-tree-id11288 . -1) (undo-tree-id11289 . -1) (undo-tree-id11290 . -1) (undo-tree-id11291 . -1) (undo-tree-id11292 . -1) (undo-tree-id11293 . -1) (undo-tree-id11294 . -1) (undo-tree-id11295 . -1) (undo-tree-id11296 . -1) (undo-tree-id11297 . -1) (undo-tree-id11298 . -1) (undo-tree-id11299 . -1) (undo-tree-id11300 . -1) (undo-tree-id11301 . -1) (undo-tree-id11302 . -1) (undo-tree-id11303 . -1) (undo-tree-id11304 . -1) (undo-tree-id11305 . -1) (undo-tree-id11306 . -1) (undo-tree-id11307 . -1) (undo-tree-id11308 . -1) (#("t" 0 1 (fontified t)) . -16723) (undo-tree-id11309 . -1) (undo-tree-id11310 . -1) (undo-tree-id11311 . -1) (undo-tree-id11312 . -1) (undo-tree-id11313 . -1) (undo-tree-id11314 . -1) (undo-tree-id11315 . -1) (undo-tree-id11316 . -1) (undo-tree-id11317 . -1) (undo-tree-id11318 . -1) (undo-tree-id11319 . -1) (undo-tree-id11320 . -1) (undo-tree-id11321 . -1) (undo-tree-id11322 . -1) (undo-tree-id11323 . -1) (undo-tree-id11324 . -1) (undo-tree-id11325 . -1) (undo-tree-id11326 . -1) (undo-tree-id11327 . -1) (undo-tree-id11328 . -1) (#("(" 0 1 (fontified t)) . -16724) (undo-tree-id11329 . -1) (undo-tree-id11330 . -1) (undo-tree-id11331 . -1) (undo-tree-id11332 . -1) (undo-tree-id11333 . -1) (undo-tree-id11334 . -1) (undo-tree-id11335 . -1) (undo-tree-id11336 . -1) (undo-tree-id11337 . -1) (undo-tree-id11338 . -1) (undo-tree-id11339 . -1) (undo-tree-id11340 . -1) (undo-tree-id11341 . -1) (undo-tree-id11342 . -1) (#(")" 0 1 (fontified t)) . -16725) (undo-tree-id11343 . -1) (undo-tree-id11344 . -1) (undo-tree-id11345 . -1) (undo-tree-id11346 . -1) (undo-tree-id11347 . -1) (undo-tree-id11348 . -1) (undo-tree-id11349 . -1) (undo-tree-id11350 . -1) (undo-tree-id11351 . -1) 16726 (t 25968 39490 704568 482000)) nil (25968 39494 23337 0) 0 nil])
([nil nil ((13824 . 13825)) ((#("=" 0 1 (fontified t)) . 13824) (undo-tree-id10958 . -1)) (25968 39164 550233 0) 0 nil])
([nil nil ((13802 . 13804)) ((#("up" 0 2 (fontified t)) . 13802) (undo-tree-id4078 . -2) (undo-tree-id4079 . -2) (undo-tree-id4080 . -1) (undo-tree-id4081 . -2) (undo-tree-id4082 . -2) (undo-tree-id4083 . -2) (undo-tree-id4084 . -2) (undo-tree-id4085 . -2) (undo-tree-id4086 . -2) (undo-tree-id4087 . -2) (undo-tree-id4088 . -2) (undo-tree-id4089 . -2) (undo-tree-id4090 . -2) (undo-tree-id4091 . -2)) (25968 35789 423622 0) 0 nil])
nil
([nil nil ((16720 . 16721) (t 25968 39494 51918 78000)) nil (25968 39510 888230 0) 0 nil])
([nil nil ((apply yas--snippet-revive 13795 13826 #s(yas--snippet nil (#s(yas--field 1 13802 13802 nil nil nil t #s(yas--exit 13804 nil))) #s(yas--exit 13804 nil) 41 nil #s(yas--field 1 13802 13802 nil nil nil t #s(yas--exit 13804 nil)) nil nil))) ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 13802 13802 nil nil nil t #s(yas--exit 13804 nil))) #s(yas--exit 13804 nil) 41 nil #s(yas--field 1 13802 13802 nil nil nil t #s(yas--exit 13804 nil)) nil nil))) (25968 39164 353403 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 13809 13810 nil nil nil t #s(yas--exit 13811 nil))) #s(yas--exit 13811 nil) 40 nil #s(yas--field 1 13809 13810 nil nil nil t #s(yas--exit 13811 nil)) nil nil)) (13802 . 13811) (#("update(${1:f})$0" 0 16 (fontified nil)) . 13802) (13802 . 13818) (#("up" 0 2 (fontified nil)) . 13802) (13802 . 13804) (#("update(…) (as SignalUpdate)" 0 27 (fontified nil)) . -13802) (13802 . 13829) (#("up" 0 2 (fontified t)) . -13802) (undo-tree-id3551 . -2) (undo-tree-id3552 . -1) (undo-tree-id3553 . -2) (undo-tree-id3554 . -2) (undo-tree-id3555 . -2) (undo-tree-id3556 . -2) 13804) ((13802 . 13804) (#("update(…) (as SignalUpdate)" 0 27 (fontified nil)) . 13802) (13802 . 13829) (#("up" 0 2 (fontified nil)) . 13802) (13802 . 13804) (#("update(${1:f})$0" 0 16 (fontified nil)) . 13802) (13802 . 13818) (#("update(f)" 0 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . 13802) (undo-tree-id4055 . -7) (undo-tree-id4056 . -7) (undo-tree-id4057 . -7) (undo-tree-id4058 . -7) (undo-tree-id4059 . -7) (undo-tree-id4060 . -7) (undo-tree-id4061 . -7) (undo-tree-id4062 . -7) (undo-tree-id4063 . -7) (undo-tree-id4064 . -7) (undo-tree-id4065 . -7) (undo-tree-id4066 . -7) (undo-tree-id4067 . -7) (undo-tree-id4068 . -7) (undo-tree-id4069 . -7) (undo-tree-id4070 . -7) (undo-tree-id4071 . -7) (undo-tree-id4072 . -7) (undo-tree-id4073 . -7) (undo-tree-id4074 . -7) (undo-tree-id4075 . -7) (undo-tree-id4076 . -7) (undo-tree-id4077 . -7) (apply yas--snippet-revive 13802 13811 #s(yas--snippet nil (#s(yas--field 1 13809 13810 nil nil nil t #s(yas--exit 13811 nil))) #s(yas--exit 13811 nil) 40 nil #s(yas--field 1 13809 13810 nil nil nil t #s(yas--exit 13811 nil)) nil nil))) (25968 35789 155265 0) 0 nil])
([nil nil ((16720 . 16721)) nil (25968 39510 888228 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 13850 . 13851) (nil fontified nil 13850 . 13851) (nil fontified nil 13838 . 13850) (nil fontified nil 13835 . 13838) (nil fontified nil 13825 . 13835) (13825 . 13851)) ((#("v.parse::<u32>().unwrap();" 0 9 (fontified nil) 9 10 (fontified nil) 10 13 (face font-lock-type-face fontified nil) 13 14 (fontified nil) 14 25 (fontified nil) 25 26 (rear-nonsticky nil fontified nil)) . 13825) (undo-tree-id10956 . -26) (undo-tree-id10957 . -26) (nil rear-nonsticky t 13850 . 13851)) (25968 39164 75716 0) 0 nil])
([nil nil ((13810 . 13811) (#("f" 0 1 (fontified nil)) . 13810) (undo-tree-id3550 . -1) (13809 . 13810)) ((#("|" 0 1 (fontified nil)) . 13809) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (13810 . 13811) (#("|" 0 1 (fontified t)) . 13810) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1)) (25968 35788 852830 0) 0 nil])
([nil nil ((16721 . 16723)) nil (25968 39510 888227 0) 0 nil])
([nil nil ((#(";" 0 1 (rear-nonsticky t fontified t)) . -13850) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4253 . -1) (undo-tree-id4255 . -1) (undo-tree-id4257 . -1) (undo-tree-id4259 . -1) 13851) ((13850 . 13851)) (25968 39163 786641 0) 0 nil])
([nil nil ((13810 . 13811)) ((#("x" 0 1 (fontified t)) . 13810)) (25968 35788 524101 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -16720) (undo-tree-id11395 . -1) (undo-tree-id11396 . -1) (undo-tree-id11397 . -1) (undo-tree-id11398 . -1) (undo-tree-id11399 . -1) (undo-tree-id11400 . -1) (undo-tree-id11401 . -1) (undo-tree-id11402 . -1) (undo-tree-id11403 . -1) (undo-tree-id11404 . -1) (undo-tree-id11405 . -1) (undo-tree-id11406 . -1) (undo-tree-id11407 . -1) (undo-tree-id11408 . -1) (undo-tree-id11409 . -1) (undo-tree-id11410 . -1) (undo-tree-id11411 . -1) (undo-tree-id11412 . -1) (undo-tree-id11413 . -1) (undo-tree-id11414 . -1) (undo-tree-id11415 . -1) (#("t" 0 1 (fontified t)) . -16721) (undo-tree-id11416 . -1) (undo-tree-id11417 . -1) (undo-tree-id11418 . -1) (undo-tree-id11419 . -1) (undo-tree-id11420 . -1) (undo-tree-id11421 . -1) (undo-tree-id11422 . -1) (undo-tree-id11423 . -1) (undo-tree-id11424 . -1) (undo-tree-id11425 . -1) (undo-tree-id11426 . -1) (undo-tree-id11427 . -1) (undo-tree-id11428 . -1) (#("o" 0 1 (fontified t)) . -16722) (undo-tree-id11429 . -1) (undo-tree-id11430 . -1) (undo-tree-id11431 . -1) (undo-tree-id11432 . -1) (undo-tree-id11433 . -1) (undo-tree-id11434 . -1) (undo-tree-id11435 . -1) (undo-tree-id11436 . -1) (undo-tree-id11437 . -1) 16723) nil (25968 39510 888224 0) 0 nil])
([nil nil ((13851 . 13852)) ((#(";" 0 1 (fontified t)) . 13851)) (25968 39163 422065 0) 0 nil])
([nil nil ((13812 . 13815)) ((#(" x." 0 3 (fontified t)) . 13812) (undo-tree-id4021 . -3) (undo-tree-id4022 . -3) (undo-tree-id4023 . -3) (undo-tree-id4024 . -3) (undo-tree-id4025 . -3) (undo-tree-id4026 . -3)) (25968 35788 381538 0) 0 nil])
([nil nil ((16720 . 16721)) nil (25968 39510 888181 0) 0 nil])
([nil nil ((#("        trigger_value.1.set(v.clone());
" 0 40 (fontified t)) . -14156) (undo-tree-id4351 . -36) (undo-tree-id4352 . -40) (undo-tree-id4354 . -28) (undo-tree-id4356 . -28) (undo-tree-id4358 . -28) (undo-tree-id4360 . -29) (undo-tree-id4362 . -29) (undo-tree-id4364 . -29) (undo-tree-id4366 . -29) (undo-tree-id4368 . -28) (undo-tree-id4370 . -28) (undo-tree-id4372 . -28) (undo-tree-id4374 . -28) (undo-tree-id4376 . -28) (undo-tree-id4378 . -29) (undo-tree-id4380 . -29) (undo-tree-id4382 . -28) (undo-tree-id4384 . -29) (undo-tree-id4386 . -29) (undo-tree-id4388 . -29) (undo-tree-id4390 . -40) (undo-tree-id4392 . -28) (undo-tree-id4394 . -40) (undo-tree-id4396 . -40) (undo-tree-id4398 . -40) (undo-tree-id4400 . -40) (undo-tree-id4402 . -40) (undo-tree-id4404 . -40) (undo-tree-id4406 . -40) (undo-tree-id4408 . -40) (undo-tree-id4410 . -36) (undo-tree-id4412 . -36) (undo-tree-id4414 . -36) (undo-tree-id4416 . -36) (undo-tree-id4418 . -36) (undo-tree-id4420 . -35) (undo-tree-id4422 . -37) (undo-tree-id4424 . -37) (undo-tree-id4426 . -40) (undo-tree-id4428 . -35) (undo-tree-id4430 . -40) (undo-tree-id4432 . -40) 14196 (t 25968 35832 317250 523000)) ((14156 . 14196)) (25968 39163 221645 0) 0 nil])
([nil nil ((13815 . 13831) (#("activation_value" 0 16 (fontified nil)) . -13815) (undo-tree-id3549 . -16) (13815 . 13831)) ((#("activation_value" 0 16 (fontified nil)) . 13815) (undo-tree-id4017 . -16) (13815 . 13831) (#("activation_value" 0 16 (fontified t)) . 13815) (undo-tree-id4018 . -16) (undo-tree-id4019 . -16) (undo-tree-id4020 . -16)) (25968 35788 380520 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -16720) (undo-tree-id11390 . -1) (undo-tree-id11391 . -1) (undo-tree-id11392 . -1) (undo-tree-id11393 . -1) (undo-tree-id11394 . -1) 16721) nil (25968 39510 888180 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 14222 . 14223) (nil fontified nil 14222 . 14223) (nil fontified nil 14220 . 14222) (nil fontified nil 14208 . 14220) (nil fontified nil 14205 . 14208) (nil fontified nil 14195 . 14205) (nil fontified nil 14178 . 14195) (nil fontified nil 14165 . 14178) (nil fontified nil 14157 . 14165) (nil fontified nil 14156 . 14157) (14156 . 14223)) ((#("	uistate.update(|x| x.activation_value=v.parse::<u32>().unwrap());
" 0 1 (fontified nil) 1 9 (fontified nil) 9 22 (fontified nil) 22 33 (fontified nil) 33 38 (fontified nil) 38 39 (fontified nil) 39 48 (fontified nil) 48 49 (fontified nil) 49 52 (face font-lock-type-face fontified nil) 52 53 (fontified nil) 53 64 (fontified nil) 64 66 (fontified nil) 66 67 (fontified nil rear-nonsticky nil)) . 14156) (undo-tree-id10954 . -38) (undo-tree-id10955 . -38) (nil rear-nonsticky t 14222 . 14223)) (25968 39163 12284 0) 0 nil])
nil
([nil nil ((16720 . 16721)) nil (25968 39510 888173 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified t)) . -14189) (undo-tree-id4318 . -5) (undo-tree-id4319 . -5) (undo-tree-id4321 . -4) (undo-tree-id4323 . -4) (undo-tree-id4325 . -4) (undo-tree-id4327 . -4) (undo-tree-id4329 . -4) (undo-tree-id4331 . -4) (undo-tree-id4333 . -4) (undo-tree-id4335 . -4) (undo-tree-id4337 . -4) (undo-tree-id4339 . -4) (undo-tree-id4341 . -5) (undo-tree-id4343 . -5) (undo-tree-id4345 . -5) (undo-tree-id4347 . -5) (undo-tree-id4349 . -5) 14194) ((14189 . 14194)) (25968 39162 234928 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -16720) (undo-tree-id11388 . -1) (undo-tree-id11389 . -1) 16721) nil (25968 39510 888172 0) 0 nil])
([nil nil ((#("activation_" 0 11 (fontified t)) . -14178) (undo-tree-id4284 . -11) (undo-tree-id4285 . -11) (undo-tree-id4287 . -11) (undo-tree-id4289 . -11) (undo-tree-id4291 . -11) (undo-tree-id4293 . -11) (undo-tree-id4295 . -11) (undo-tree-id4297 . -11) (undo-tree-id4299 . -11) (undo-tree-id4301 . -11) (undo-tree-id4303 . -11) (undo-tree-id4305 . -11) (undo-tree-id4307 . -11) (undo-tree-id4309 . -11) (undo-tree-id4311 . -11) (undo-tree-id4313 . -11) (undo-tree-id4315 . -11) (undo-tree-id4317 . -11) 14189) ((14178 . 14189)) (25968 39162 39526 0) 0 nil])
([nil nil ((16720 . 16722)) nil (25968 39510 888168 0) 0 nil])
([nil nil ((14178 . 14180)) ((#("tr" 0 2 (fontified t)) . 14178) (undo-tree-id10952 . -2) (undo-tree-id10953 . -2)) (25968 39161 848853 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -16720) (undo-tree-id11378 . -1) (undo-tree-id11379 . -1) (undo-tree-id11380 . -1) (undo-tree-id11381 . -1) (undo-tree-id11382 . -1) (undo-tree-id11383 . -1) (undo-tree-id11384 . -1) (undo-tree-id11385 . -1) (#("g" 0 1 (fontified t)) . -16721) (undo-tree-id11386 . -1) (undo-tree-id11387 . -1) 16722) nil (25968 39510 888167 0) 0 nil])
([nil nil ((14178 . 14191) (#("tr" 0 2 (fontified nil)) . 14178) (14178 . 14180) (#("trigger_value" 0 13 (fontified nil)) . -14178) (14178 . 14191) (#("tr" 0 2 (fontified t)) . -14178) (undo-tree-id4276 . -2) (undo-tree-id4278 . -1) (undo-tree-id4280 . -1) (undo-tree-id4282 . -2) 14180) ((14178 . 14180) (#("trigger_value" 0 13 (fontified nil)) . 14178) (14178 . 14191) (#("tr" 0 2 (fontified nil)) . 14178) (14178 . 14180) (#("trigger_value" 0 13 (fontified t)) . 14178)) (25968 39161 625782 0) 0 nil])
([nil nil ((16720 . 16722)) nil (25968 39510 888154 0) 0 nil])
([nil nil ((#("        reset_value.1.set(v.clone());" 0 37 (fontified t)) . 14526) (undo-tree-id4766 . -37) (undo-tree-id4768 . -37) (undo-tree-id4770 . -37) (undo-tree-id4772 . -37) (undo-tree-id4774 . -37) (undo-tree-id4776 . -37) (undo-tree-id4778 . -37) (undo-tree-id4780 . -37) (undo-tree-id4782 . -37) (undo-tree-id4784 . -37) (undo-tree-id4786 . -37) (undo-tree-id4788 . -37) (undo-tree-id4790 . -37) (t 25968 35853 181522 538000)) ((14526 . 14563)) (25968 39160 142353 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -16720) (undo-tree-id11352 . -1) (undo-tree-id11353 . -1) (undo-tree-id11354 . -1) (undo-tree-id11355 . -1) (undo-tree-id11356 . -1) (undo-tree-id11357 . -1) (undo-tree-id11358 . -1) (undo-tree-id11359 . -1) (undo-tree-id11360 . -1) (undo-tree-id11361 . -1) (undo-tree-id11362 . -1) (undo-tree-id11363 . -1) (undo-tree-id11364 . -1) (undo-tree-id11365 . -1) (undo-tree-id11366 . -1) (undo-tree-id11367 . -1) (undo-tree-id11368 . -1) (#("g" 0 1 (fontified t)) . -16721) (undo-tree-id11369 . -1) (undo-tree-id11370 . -1) (undo-tree-id11371 . -1) (undo-tree-id11372 . -1) (undo-tree-id11373 . -1) (undo-tree-id11374 . -1) (undo-tree-id11375 . -1) (undo-tree-id11376 . -1) (undo-tree-id11377 . -1) 16722) nil (25968 39510 888150 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 14562 . 14563) (nil fontified nil 14526 . 14563) (14526 . 14563)) ((#("        reset_value.1.set(v.clone());" 0 36 (fontified nil) 36 37 (rear-nonsticky nil fontified nil)) . 14526) (nil rear-nonsticky t 14562 . 14563)) (25968 39159 929029 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16720) (undo-tree-id11438 . -1) (undo-tree-id11439 . 1) (undo-tree-id11440 . -1) (undo-tree-id11441 . -1) (undo-tree-id11442 . -1) (undo-tree-id11443 . -1) (undo-tree-id11444 . -1) (undo-tree-id11445 . -1) (undo-tree-id11446 . -1) 16721 (t 25968 39510 916450 161000)) nil (25968 39512 838181 0) 0 nil])
([nil nil ((#("        reset_value.1.set(v.clone());" 0 36 (fontified t) 36 37 (rear-nonsticky t fontified t)) . 14526) (undo-tree-id4756 . -37) (undo-tree-id4758 . -37) (undo-tree-id4760 . -37) (undo-tree-id4762 . -37) (undo-tree-id4764 . -37)) ((14526 . 14563)) (25968 39159 718829 0) 0 nil])
([nil nil ((#("move || " 0 4 (face font-lock-keyword-face fontified t) 4 8 (fontified t)) . -13050) (undo-tree-id11803 . -8) (undo-tree-id11804 . -8) (undo-tree-id11805 . -8) (undo-tree-id11806 . -8) (undo-tree-id11807 . -8) (undo-tree-id11808 . -8) (undo-tree-id11809 . -8) (undo-tree-id11810 . -8) (undo-tree-id11811 . -8) (undo-tree-id11812 . -8) (undo-tree-id11813 . -8) (undo-tree-id11814 . -8) (undo-tree-id11815 . -8) (undo-tree-id11816 . -8) (undo-tree-id11817 . -8) (undo-tree-id11818 . -8) 13058 (t 25968 39512 867325 206000)) nil (25968 39539 415817 0) 0 nil])
([nil nil ((nil fontified nil 14589 . 14590) (nil fontified nil 14587 . 14589) (nil fontified nil 14575 . 14587) (nil fontified nil 14572 . 14575) (nil fontified nil 14562 . 14572) (nil fontified nil 14561 . 14562) (nil fontified nil 14548 . 14561) (nil fontified nil 14535 . 14548) (nil fontified nil 14527 . 14535) (nil fontified nil 14526 . 14527) (14526 . 14590)) ((#("	uistate.update(|x| x.trigger_value=v.parse::<u32>().unwrap());
" 0 1 (fontified nil) 1 9 (fontified nil) 9 22 (fontified nil) 22 23 (fontified nil) 23 24 (fontified nil) 24 25 (fontified nil) 25 26 (fontified nil) 26 27 (fontified nil) 27 28 (fontified nil) 28 29 (fontified nil) 29 30 (fontified nil) 30 31 (fontified nil) 31 32 (fontified nil) 32 33 (fontified nil) 33 34 (fontified nil) 34 35 (fontified nil) 35 36 (fontified nil) 36 46 (fontified nil) 46 49 (face font-lock-type-face fontified nil) 49 61 (fontified nil) 61 63 (fontified nil) 63 64 (fontified nil rear-nonsticky t)) . 14526) (undo-tree-id10950 . -64) (undo-tree-id10951 . -64) (nil fontified t 14589 . 14590)) (25968 39159 302415 0) 0 nil])
([nil nil ((13050 . 13056)) nil (25968 39539 415801 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -14589) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4754 . -1) 14590) ((14589 . 14590)) (25968 39159 72811 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 13062 13064 nil nil nil t #s(yas--exit 13065 nil))) #s(yas--exit 13065 nil) 62 nil #s(yas--field 1 13062 13064 nil nil nil t #s(yas--exit 13065 nil)) nil nil)) (13050 . 13064) (#("create_memo(${1:f})$0" 0 21 (fontified nil)) . 13050) (13050 . 13071) (#("createuistate" 0 6 (fontified nil) 6 13 (fontified nil)) . 13050) (undo-tree-id11788 . 7) (13050 . 13056) (#("create_memo(…)" 0 14 (fontified nil)) . -13050) (13050 . 13064) (#("create" 0 6 (fontified t)) . -13050) (undo-tree-id11789 . -6) (undo-tree-id11790 . -1) (undo-tree-id11791 . -2) (undo-tree-id11792 . -2) (undo-tree-id11793 . -3) (undo-tree-id11794 . -3) (undo-tree-id11795 . -4) (undo-tree-id11796 . -4) (undo-tree-id11797 . -5) (undo-tree-id11798 . -5) (undo-tree-id11799 . -6) (undo-tree-id11800 . -6) (undo-tree-id11801 . -6) (undo-tree-id11802 . -6) 13056) nil (25968 39539 415798 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -14548) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4442 . -1) (undo-tree-id4444 . -1) (undo-tree-id4446 . -1) (undo-tree-id4448 . -1) (undo-tree-id4450 . -1) (undo-tree-id4452 . -1) (undo-tree-id4454 . -1) (undo-tree-id4456 . -1) (undo-tree-id4458 . -1) (undo-tree-id4460 . -1) (undo-tree-id4462 . -1) (undo-tree-id4464 . -1) (undo-tree-id4466 . -1) (undo-tree-id4468 . -1) (#("r" 0 1 (fontified t)) . -14549) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4472 . -1) (undo-tree-id4474 . -1) (undo-tree-id4476 . -1) (undo-tree-id4478 . -1) (undo-tree-id4480 . -1) (undo-tree-id4482 . -1) (undo-tree-id4484 . -1) (undo-tree-id4486 . -1) (undo-tree-id4488 . -1) (undo-tree-id4490 . -1) (undo-tree-id4492 . -1) (undo-tree-id4494 . -1) (undo-tree-id4496 . -1) (#("i" 0 1 (fontified t)) . -14550) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4501 . -1) (undo-tree-id4503 . -1) (undo-tree-id4505 . -1) (undo-tree-id4507 . -1) (undo-tree-id4509 . -1) (undo-tree-id4511 . -1) (undo-tree-id4513 . -1) (undo-tree-id4515 . -1) (undo-tree-id4517 . -1) (undo-tree-id4519 . -1) (undo-tree-id4521 . -1) (undo-tree-id4523 . -1) (undo-tree-id4525 . -1) (#("g" 0 1 (fontified t)) . -14551) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4529 . -1) (undo-tree-id4531 . -1) (undo-tree-id4533 . -1) (undo-tree-id4535 . -1) (undo-tree-id4537 . -1) (undo-tree-id4539 . -1) (undo-tree-id4541 . -1) (undo-tree-id4543 . -1) (undo-tree-id4545 . -1) (undo-tree-id4547 . -1) (undo-tree-id4549 . -1) (undo-tree-id4551 . -1) (#("g" 0 1 (fontified t)) . -14552) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4556 . -1) (undo-tree-id4558 . -1) (undo-tree-id4560 . -1) (undo-tree-id4562 . -1) (undo-tree-id4564 . -1) (undo-tree-id4566 . -1) (undo-tree-id4568 . -1) (undo-tree-id4570 . -1) (undo-tree-id4572 . -1) (undo-tree-id4574 . -1) (undo-tree-id4576 . -1) (undo-tree-id4578 . -1) (#("e" 0 1 (fontified t)) . -14553) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4582 . -1) (undo-tree-id4584 . -1) (undo-tree-id4586 . -1) (undo-tree-id4588 . -1) (undo-tree-id4590 . -1) (undo-tree-id4592 . -1) (undo-tree-id4594 . -1) (undo-tree-id4596 . -1) (undo-tree-id4598 . -1) (undo-tree-id4600 . -1) (undo-tree-id4602 . -1) (#("r" 0 1 (fontified t)) . -14554) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4607 . -1) (undo-tree-id4609 . -1) (undo-tree-id4611 . -1) (undo-tree-id4613 . -1) (undo-tree-id4615 . -1) (undo-tree-id4617 . -1) (undo-tree-id4619 . -1) (undo-tree-id4621 . -1) (undo-tree-id4623 . -1) (undo-tree-id4625 . -1) (undo-tree-id4627 . -1) (#("_" 0 1 (fontified t)) . -14555) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4631 . -1) (undo-tree-id4633 . -1) (undo-tree-id4635 . -1) (undo-tree-id4637 . -1) (undo-tree-id4639 . -1) (undo-tree-id4641 . -1) (undo-tree-id4643 . -1) (undo-tree-id4645 . -1) (undo-tree-id4647 . -1) (undo-tree-id4649 . -1) (#("v" 0 1 (fontified t)) . -14556) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4654 . -1) (undo-tree-id4656 . -1) (undo-tree-id4658 . -1) (undo-tree-id4660 . -1) (undo-tree-id4662 . -1) (undo-tree-id4664 . -1) (undo-tree-id4666 . -1) (undo-tree-id4668 . -1) (undo-tree-id4670 . -1) (undo-tree-id4672 . -1) (#("a" 0 1 (fontified t)) . -14557) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4676 . -1) (undo-tree-id4678 . -1) (undo-tree-id4680 . -1) (undo-tree-id4682 . -1) (undo-tree-id4684 . -1) (undo-tree-id4686 . -1) (undo-tree-id4688 . -1) (undo-tree-id4690 . -1) (undo-tree-id4692 . -1) (#("l" 0 1 (fontified t)) . -14558) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4697 . -1) (undo-tree-id4699 . -1) (undo-tree-id4701 . -1) (undo-tree-id4703 . -1) (undo-tree-id4705 . -1) (undo-tree-id4707 . -1) (undo-tree-id4709 . -1) (undo-tree-id4711 . -1) (undo-tree-id4713 . -1) (#("u" 0 1 (fontified t)) . -14559) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4717 . -1) (undo-tree-id4719 . -1) (undo-tree-id4721 . -1) (undo-tree-id4723 . -1) (undo-tree-id4725 . -1) (undo-tree-id4727 . -1) (undo-tree-id4729 . -1) (undo-tree-id4731 . -1) (#("e" 0 1 (fontified t)) . -14560) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4736 . -1) (undo-tree-id4738 . -1) (undo-tree-id4740 . -1) (undo-tree-id4742 . -1) (undo-tree-id4744 . -1) (undo-tree-id4746 . -1) (undo-tree-id4748 . -1) (undo-tree-id4750 . -1) 14561) ((14548 . 14561)) (25968 39158 631624 0) 0 nil])
([nil nil ((13063 . 13064) (#("f" 0 1 (fontified nil)) . 13063) (undo-tree-id11787 . -1) (13062 . 13063)) nil (25968 39539 415781 0) 0 nil])
([nil nil ((14548 . 14550)) ((#("re" 0 2 (fontified t)) . 14548) (undo-tree-id10948 . -2) (undo-tree-id10949 . -2)) (25968 39158 482425 0) 0 nil])
([nil nil ((apply yas--snippet-revive 13050 13065 #s(yas--snippet nil (#s(yas--field 1 13062 13064 nil nil nil t #s(yas--exit 13065 nil))) #s(yas--exit 13065 nil) 62 nil #s(yas--field 1 13062 13064 nil nil nil t #s(yas--exit 13065 nil)) nil nil))) nil (25968 39539 415778 0) 0 nil])
([nil nil ((14548 . 14559) (#("re" 0 2 (fontified nil)) . 14548) (14548 . 14550) (#("reset_value" 0 11 (fontified nil)) . -14548) (14548 . 14559) (#("re" 0 2 (fontified t)) . -14548) (undo-tree-id4434 . -2) (undo-tree-id4436 . -2) (undo-tree-id4438 . -2) 14550) ((14548 . 14550) (#("reset_value" 0 11 (fontified nil)) . 14548) (14548 . 14559) (#("re" 0 2 (fontified nil)) . 14548) (14548 . 14550) (#("reset_value" 0 11 (fontified t)) . 14548)) (25968 39158 270401 0) 0 nil])
([nil nil ((13062 . 13067)) nil (25968 39539 415777 0) 0 nil])
([nil nil ((#("        lower_deadzone.1.set(v.clone());" 0 40 (fontified t)) . 14891) (undo-tree-id4841 . -31) (undo-tree-id4843 . -31) (undo-tree-id4845 . -31) (undo-tree-id4847 . -31) (undo-tree-id4849 . -31) (undo-tree-id4851 . -31) (undo-tree-id4853 . -31) (undo-tree-id4855 . -31) (t 25968 35871 979906 866000)) ((14891 . 14931)) (25968 39158 51379 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -13070) (undo-tree-id11463 . -1) (undo-tree-id11464 . -1) (undo-tree-id11465 . -1) (undo-tree-id11466 . -1) (undo-tree-id11467 . -1) (undo-tree-id11468 . -1) (undo-tree-id11469 . -1) (undo-tree-id11470 . -1) (undo-tree-id11471 . -1) (undo-tree-id11472 . -1) (undo-tree-id11473 . -1) (undo-tree-id11474 . -1) (undo-tree-id11475 . -1) (undo-tree-id11476 . -1) (undo-tree-id11477 . -1) (undo-tree-id11478 . -1) (undo-tree-id11479 . -1) (undo-tree-id11480 . -1) (undo-tree-id11481 . -1) (undo-tree-id11482 . -1) (undo-tree-id11483 . -1) (undo-tree-id11484 . -1) (undo-tree-id11485 . -1) (undo-tree-id11486 . -1) (undo-tree-id11487 . -1) (undo-tree-id11488 . -1) (undo-tree-id11489 . -1) (undo-tree-id11490 . -1) (undo-tree-id11491 . -1) (undo-tree-id11492 . -1) (undo-tree-id11493 . -1) (undo-tree-id11494 . -1) (undo-tree-id11495 . -1) (undo-tree-id11496 . -1) (undo-tree-id11497 . -1) (undo-tree-id11498 . -1) (undo-tree-id11499 . -1) (undo-tree-id11500 . -1) (undo-tree-id11501 . -1) (undo-tree-id11502 . -1) (#("g" 0 1 (fontified t)) . -13071) (undo-tree-id11503 . -1) (undo-tree-id11504 . -1) (undo-tree-id11505 . -1) (undo-tree-id11506 . -1) (undo-tree-id11507 . -1) (undo-tree-id11508 . -1) (undo-tree-id11509 . -1) (undo-tree-id11510 . -1) (undo-tree-id11511 . -1) (undo-tree-id11512 . -1) (undo-tree-id11513 . -1) (undo-tree-id11514 . -1) (undo-tree-id11515 . -1) (undo-tree-id11516 . -1) (undo-tree-id11517 . -1) (undo-tree-id11518 . -1) (undo-tree-id11519 . -1) (undo-tree-id11520 . -1) (undo-tree-id11521 . -1) (undo-tree-id11522 . -1) (undo-tree-id11523 . -1) (undo-tree-id11524 . -1) (undo-tree-id11525 . -1) (undo-tree-id11526 . -1) (undo-tree-id11527 . -1) (undo-tree-id11528 . -1) (undo-tree-id11529 . -1) (undo-tree-id11530 . -1) (undo-tree-id11531 . -1) (undo-tree-id11532 . -1) (undo-tree-id11533 . -1) (undo-tree-id11534 . -1) (undo-tree-id11535 . -1) (undo-tree-id11536 . -1) (undo-tree-id11537 . -1) (undo-tree-id11538 . -1) (undo-tree-id11539 . -1) (undo-tree-id11540 . -1) (#("e" 0 1 (fontified t)) . -13072) (undo-tree-id11541 . -1) (undo-tree-id11542 . -1) (undo-tree-id11543 . -1) (undo-tree-id11544 . -1) (undo-tree-id11545 . -1) (undo-tree-id11546 . -1) (undo-tree-id11547 . -1) (undo-tree-id11548 . -1) (undo-tree-id11549 . -1) (undo-tree-id11550 . -1) (undo-tree-id11551 . -1) (undo-tree-id11552 . -1) (undo-tree-id11553 . -1) (undo-tree-id11554 . -1) (undo-tree-id11555 . -1) (undo-tree-id11556 . -1) (undo-tree-id11557 . -1) (undo-tree-id11558 . -1) (undo-tree-id11559 . -1) (undo-tree-id11560 . -1) (undo-tree-id11561 . -1) (undo-tree-id11562 . -1) (undo-tree-id11563 . -1) (undo-tree-id11564 . -1) (undo-tree-id11565 . -1) (undo-tree-id11566 . -1) (undo-tree-id11567 . -1) (undo-tree-id11568 . -1) (undo-tree-id11569 . -1) (undo-tree-id11570 . -1) (undo-tree-id11571 . -1) (undo-tree-id11572 . -1) (undo-tree-id11573 . -1) (undo-tree-id11574 . -1) (undo-tree-id11575 . -1) (undo-tree-id11576 . -1) (#("t" 0 1 (fontified t)) . -13073) (undo-tree-id11577 . -1) (undo-tree-id11578 . -1) (undo-tree-id11579 . -1) (undo-tree-id11580 . -1) (undo-tree-id11581 . -1) (undo-tree-id11582 . -1) (undo-tree-id11583 . -1) (undo-tree-id11584 . -1) (undo-tree-id11585 . -1) (undo-tree-id11586 . -1) (undo-tree-id11587 . -1) (undo-tree-id11588 . -1) (undo-tree-id11589 . -1) (undo-tree-id11590 . -1) (undo-tree-id11591 . -1) (undo-tree-id11592 . -1) (undo-tree-id11593 . -1) (undo-tree-id11594 . -1) (undo-tree-id11595 . -1) (undo-tree-id11596 . -1) (undo-tree-id11597 . -1) (undo-tree-id11598 . -1) (undo-tree-id11599 . -1) (undo-tree-id11600 . -1) (undo-tree-id11601 . -1) (undo-tree-id11602 . -1) (undo-tree-id11603 . -1) (undo-tree-id11604 . -1) (undo-tree-id11605 . -1) (undo-tree-id11606 . -1) (undo-tree-id11607 . -1) (undo-tree-id11608 . -1) (undo-tree-id11609 . -1) (undo-tree-id11610 . -1) (#("(" 0 1 (fontified t)) . -13074) (undo-tree-id11611 . -1) (undo-tree-id11612 . -1) (undo-tree-id11613 . -1) (undo-tree-id11614 . -1) (undo-tree-id11615 . -1) (undo-tree-id11616 . -1) (undo-tree-id11617 . -1) (undo-tree-id11618 . -1) (undo-tree-id11619 . -1) (undo-tree-id11620 . -1) (undo-tree-id11621 . -1) (undo-tree-id11622 . -1) (undo-tree-id11623 . -1) (undo-tree-id11624 . -1) (undo-tree-id11625 . -1) (undo-tree-id11626 . -1) (undo-tree-id11627 . -1) (undo-tree-id11628 . -1) (undo-tree-id11629 . -1) (undo-tree-id11630 . -1) (undo-tree-id11631 . -1) (undo-tree-id11632 . -1) (undo-tree-id11633 . -1) (undo-tree-id11634 . -1) (undo-tree-id11635 . -1) (undo-tree-id11636 . -1) (undo-tree-id11637 . -1) (undo-tree-id11638 . -1) (undo-tree-id11639 . -1) (undo-tree-id11640 . -1) (undo-tree-id11641 . -1) (undo-tree-id11642 . -1) (#(")" 0 1 (fontified t)) . -13075) (undo-tree-id11643 . -1) (undo-tree-id11644 . -1) (undo-tree-id11645 . -1) (undo-tree-id11646 . -1) (undo-tree-id11647 . -1) (undo-tree-id11648 . -1) (undo-tree-id11649 . -1) (undo-tree-id11650 . -1) (undo-tree-id11651 . -1) (undo-tree-id11652 . -1) (undo-tree-id11653 . -1) (undo-tree-id11654 . -1) (undo-tree-id11655 . -1) (undo-tree-id11656 . -1) (undo-tree-id11657 . -1) (undo-tree-id11658 . -1) (undo-tree-id11659 . -1) (undo-tree-id11660 . -1) (undo-tree-id11661 . -1) (undo-tree-id11662 . -1) (undo-tree-id11663 . -1) (undo-tree-id11664 . -1) (undo-tree-id11665 . -1) (undo-tree-id11666 . -1) (undo-tree-id11667 . -1) (undo-tree-id11668 . -1) (undo-tree-id11669 . -1) (undo-tree-id11670 . -1) (#("." 0 1 (fontified t)) . -13076) (undo-tree-id11671 . -1) (undo-tree-id11672 . -1) (undo-tree-id11673 . -1) (undo-tree-id11674 . -1) (undo-tree-id11675 . -1) (undo-tree-id11676 . -1) (undo-tree-id11677 . -1) (undo-tree-id11678 . -1) (undo-tree-id11679 . -1) (undo-tree-id11680 . -1) (undo-tree-id11681 . -1) (undo-tree-id11682 . -1) (undo-tree-id11683 . -1) (undo-tree-id11684 . -1) (undo-tree-id11685 . -1) (undo-tree-id11686 . -1) (undo-tree-id11687 . -1) (undo-tree-id11688 . -1) (undo-tree-id11689 . -1) (undo-tree-id11690 . -1) (undo-tree-id11691 . -1) (undo-tree-id11692 . -1) (undo-tree-id11693 . -1) (undo-tree-id11694 . -1) (undo-tree-id11695 . -1) (undo-tree-id11696 . -1) (#("m" 0 1 (fontified t)) . -13077) (undo-tree-id11697 . -1) (undo-tree-id11698 . -1) (undo-tree-id11699 . -1) (undo-tree-id11700 . -1) (undo-tree-id11701 . -1) (undo-tree-id11702 . -1) (undo-tree-id11703 . -1) (undo-tree-id11704 . -1) (undo-tree-id11705 . -1) (undo-tree-id11706 . -1) (undo-tree-id11707 . -1) (undo-tree-id11708 . -1) (undo-tree-id11709 . -1) (undo-tree-id11710 . -1) (undo-tree-id11711 . -1) (undo-tree-id11712 . -1) (undo-tree-id11713 . -1) (undo-tree-id11714 . -1) (undo-tree-id11715 . -1) (undo-tree-id11716 . -1) (undo-tree-id11717 . -1) (undo-tree-id11718 . -1) (undo-tree-id11719 . -1) (undo-tree-id11720 . -1) (#("o" 0 1 (fontified t)) . -13078) (undo-tree-id11721 . -1) (undo-tree-id11722 . -1) (undo-tree-id11723 . -1) (undo-tree-id11724 . -1) (undo-tree-id11725 . -1) (undo-tree-id11726 . -1) (undo-tree-id11727 . -1) (undo-tree-id11728 . -1) (undo-tree-id11729 . -1) (undo-tree-id11730 . -1) (undo-tree-id11731 . -1) (undo-tree-id11732 . -1) (undo-tree-id11733 . -1) (undo-tree-id11734 . -1) (undo-tree-id11735 . -1) (undo-tree-id11736 . -1) (undo-tree-id11737 . -1) (undo-tree-id11738 . -1) (undo-tree-id11739 . -1) (undo-tree-id11740 . -1) (undo-tree-id11741 . -1) (undo-tree-id11742 . -1) (#("d" 0 1 (face font-lock-keyword-face fontified t)) . -13079) (undo-tree-id11743 . -1) (undo-tree-id11744 . -1) (undo-tree-id11745 . -1) (undo-tree-id11746 . -1) (undo-tree-id11747 . -1) (undo-tree-id11748 . -1) (undo-tree-id11749 . -1) (undo-tree-id11750 . -1) (undo-tree-id11751 . -1) (undo-tree-id11752 . -1) (undo-tree-id11753 . -1) (undo-tree-id11754 . -1) (undo-tree-id11755 . -1) (undo-tree-id11756 . -1) (undo-tree-id11757 . -1) (undo-tree-id11758 . -1) (undo-tree-id11759 . -1) (undo-tree-id11760 . -1) (undo-tree-id11761 . -1) (undo-tree-id11762 . -1) (#("e" 0 1 (fontified t)) . -13080) (undo-tree-id11763 . -1) (undo-tree-id11764 . -1) (undo-tree-id11765 . -1) (undo-tree-id11766 . -1) (undo-tree-id11767 . -1) (undo-tree-id11768 . -1) (undo-tree-id11769 . -1) (undo-tree-id11770 . -1) (undo-tree-id11771 . -1) (undo-tree-id11772 . -1) (undo-tree-id11773 . -1) (undo-tree-id11774 . -1) (undo-tree-id11775 . -1) (undo-tree-id11776 . -1) (undo-tree-id11777 . -1) (undo-tree-id11778 . -1) (undo-tree-id11779 . -1) (undo-tree-id11780 . -1) (#(";" 0 1 (fontified t)) . -13081) (undo-tree-id11781 . -1) (undo-tree-id11782 . -1) (undo-tree-id11783 . -1) (undo-tree-id11784 . -1) (undo-tree-id11785 . -1) (undo-tree-id11786 . -1) 13082) nil (25968 39539 415759 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 14930 . 14931) (nil fontified nil 14891 . 14931) (14891 . 14931)) ((#("        lower_deadzone.1.set(v.clone());" 0 39 (fontified nil) 39 40 (rear-nonsticky nil fontified nil)) . 14891) (nil rear-nonsticky t 14930 . 14931)) (25968 39157 847470 0) 0 nil])
([nil nil ((13070 . 13071)) nil (25968 39539 415438 0) 0 nil])
([nil nil ((#("        lower_deadzone.1.set(v.clone());" 0 39 (fontified t) 39 40 (rear-nonsticky t fontified t)) . 14891) (undo-tree-id4835 . -40) (undo-tree-id4837 . -40) (undo-tree-id4839 . -40)) ((14891 . 14931)) (25968 39157 636396 0) 0 nil])
([nil nil ((13069 . 13072)) nil (25968 39539 415437 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 14953 . 14954) (nil fontified nil 14891 . 14954) (14891 . 14954)) ((#("	uistate.update(|x| x.trigger_value=v.parse::<u32>().unwrap());" 0 22 (fontified nil) 22 30 (fontified nil) 30 35 (fontified nil) 35 46 (fontified nil) 46 49 (face font-lock-type-face fontified nil) 49 62 (fontified nil) 62 63 (fontified nil rear-nonsticky nil)) . 14891) (undo-tree-id10946 . -35) (undo-tree-id10947 . -35) (nil rear-nonsticky t 14953 . 14954)) (25968 39157 420427 0) 0 nil])
([nil nil ((13070 . 13077) (#("ui" 0 2 (fontified nil)) . 13070) (13070 . 13072) (#("uistate" 0 7 (fontified nil)) . -13070) (13070 . 13077) (#("ui" 0 2 (fontified t)) . -13070) (undo-tree-id11457 . -2) (undo-tree-id11458 . -1) (undo-tree-id11459 . -1) (undo-tree-id11460 . -1) (undo-tree-id11461 . -2) (undo-tree-id11462 . -2) 13072) nil (25968 39539 415435 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified t)) . -14921) (undo-tree-id4817 . -5) (undo-tree-id4818 . -5) (undo-tree-id4820 . -5) (undo-tree-id4822 . -5) (undo-tree-id4824 . -5) (undo-tree-id4826 . -5) (undo-tree-id4828 . -5) (undo-tree-id4830 . -5) (undo-tree-id4832 . -5) (undo-tree-id4834 . -5) 14926) ((14921 . 14926)) (25968 39157 258091 0) 0 nil])
([nil nil ((13077 . 13081)) nil (25968 39539 415426 0) 0 nil])
([nil nil ((#("trigger_" 0 8 (fontified t)) . -14913) (undo-tree-id4796 . -8) (undo-tree-id4797 . -8) (undo-tree-id4799 . -8) (undo-tree-id4801 . -8) (undo-tree-id4803 . -8) (undo-tree-id4805 . -8) (undo-tree-id4807 . -8) (undo-tree-id4809 . -8) (undo-tree-id4811 . -8) (undo-tree-id4813 . -8) (undo-tree-id4815 . -8) 14921) ((14913 . 14921)) (25968 39156 649362 0) 0 nil])
([nil nil ((apply yas--snippet-revive 13078 13083 #s(yas--snippet nil nil #s(yas--exit 13083 nil) 63 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 13083 nil) 63 nil nil nil nil)) (13078 . 13083) (#("get()$0" 0 7 (fontified nil)) . 13078) (13078 . 13085) (#("get" 0 3 (fontified nil)) . 13078) (13078 . 13081) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -13078) (13078 . 13098) (#("get" 0 3 (fontified t)) . -13078) (undo-tree-id11450 . -3) (undo-tree-id11451 . -1) (undo-tree-id11452 . -1) (undo-tree-id11453 . -2) (undo-tree-id11454 . -2) (undo-tree-id11455 . -3) (undo-tree-id11456 . -3) 13081) nil (25968 39539 415424 0) 0 nil])
([nil nil ((14913 . 14914)) ((#("l" 0 1 (fontified t)) . 14913) (undo-tree-id10944 . -1) (undo-tree-id10945 . -1)) (25968 39156 566783 0) 0 nil])
([nil nil ((13083 . 13085)) nil (25968 39539 415412 0) 0 nil])
([nil nil ((14913 . 14927) (#("l" 0 1 (fontified nil)) . 14913) (14913 . 14914) (#("lower_deadzone" 0 14 (fontified nil)) . -14913) (14913 . 14927) (#("l" 0 1 (fontified t)) . -14913) (undo-tree-id4792 . -1) (undo-tree-id4794 . -1) 14914) ((14913 . 14914) (#("lower_deadzone" 0 14 (fontified nil)) . 14913) (14913 . 14927) (#("l" 0 1 (fontified nil)) . 14913) (14913 . 14914) (#("lower_deadzone" 0 14 (fontified t)) . 14913)) (25968 39156 482887 0) 0 nil])
([nil nil ((13084 . 13088) (#("m" 0 1 (fontified nil)) . 13084) (13084 . 13085) (#("mode" 0 4 (fontified nil)) . -13084) (13084 . 13088) (#("m" 0 1 (fontified t)) . -13084) (undo-tree-id11447 . -1) (undo-tree-id11448 . -1) (undo-tree-id11449 . -1) 13085) nil (25968 39539 415408 0) 0 nil])
([nil nil ((#("	mode.1.set(v.clone());" 0 23 (fontified t)) . 15297) (undo-tree-id4898 . -23) (undo-tree-id4900 . -23) (undo-tree-id4902 . -23) (undo-tree-id4904 . -23) (undo-tree-id4906 . -23) (undo-tree-id4908 . -23) (undo-tree-id4910 . -23) (t 25968 35887 984550 369000)) ((15297 . 15320)) (25968 39156 399426 0) 0 nil])
([nil nil ((13068 . 13069) (t 25968 39539 445020 528000)) nil (25968 39545 880817 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 15359 . 15360) (nil fontified nil 15297 . 15360) (15297 . 15360)) ((#("	uistate.update(|x| x.trigger_value=v.parse::<u32>().unwrap());" 0 22 (fontified nil) 22 30 (fontified nil) 30 35 (fontified nil) 35 46 (fontified nil) 46 49 (face font-lock-type-face fontified nil) 49 62 (fontified nil) 62 63 (fontified nil rear-nonsticky nil)) . 15297) (undo-tree-id10941 . -35) (undo-tree-id10942 . -35) (undo-tree-id10943 . -22) (nil rear-nonsticky t 15359 . 15360)) (25968 39156 316362 0) 0 nil])
([nil nil ((16734 . 16735) (t 25968 39545 909769 885000)) nil (25968 39583 621079 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified t)) . -15327) (undo-tree-id4880 . -5) (undo-tree-id4881 . -5) (undo-tree-id4883 . -5) (undo-tree-id4885 . -5) (undo-tree-id4887 . -5) (undo-tree-id4889 . -5) (undo-tree-id4891 . -5) (undo-tree-id4893 . -5) (undo-tree-id4895 . -5) (undo-tree-id4897 . -5) 15332) ((15327 . 15332)) (25968 39156 233038 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -16734) (undo-tree-id11850 . -1) (undo-tree-id11851 . -1) (undo-tree-id11852 . 1) (undo-tree-id11853 . -1) 16735) nil (25968 39583 621077 0) 0 nil])
([nil nil ((#("trigger_" 0 8 (fontified t)) . -15319) (undo-tree-id4861 . -8) (undo-tree-id4862 . -8) (undo-tree-id4864 . -8) (undo-tree-id4866 . -8) (undo-tree-id4868 . -8) (undo-tree-id4870 . -8) (undo-tree-id4872 . -8) (undo-tree-id4874 . -8) (undo-tree-id4876 . -8) (undo-tree-id4878 . -8) 15327) ((15319 . 15327)) (25968 39156 151493 0) 0 nil])
([nil nil ((16734 . 16735)) nil (25968 39583 621072 0) 0 nil])
([nil nil ((15319 . 15320)) ((#("m" 0 1 (fontified t)) . 15319) (undo-tree-id10938 . -1) (undo-tree-id10939 . -1) (undo-tree-id10940 . -1)) (25968 39156 66789 0) 0 nil])
([nil nil ((16734 . 16736)) nil (25968 39583 621071 0) 0 nil])
([nil nil ((15319 . 15323) (#("m" 0 1 (fontified nil)) . 15319) (15319 . 15320) (#("mode" 0 4 (fontified nil)) . -15319) (15319 . 15323) (#("m" 0 1 (fontified t)) . -15319) (undo-tree-id4857 . -1) (undo-tree-id4859 . -1) 15320) ((15319 . 15320) (#("mode" 0 4 (fontified nil)) . 15319) (15319 . 15323) (#("m" 0 1 (fontified nil)) . 15319) (15319 . 15320) ("mode" . 15319)) (25968 39155 984727 0) 0 nil])
([nil nil ((apply yas--snippet-revive 16735 16740 #s(yas--snippet nil nil #s(yas--exit 16740 nil) 64 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 16740 nil) 64 nil nil nil nil)) (16735 . 16740) (#("get()$0" 0 7 (fontified nil)) . 16735) (16735 . 16742) (#("g" 0 1 (fontified nil)) . 16735) (16735 . 16736) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -16735) (16735 . 16755) (#("g" 0 1 (fontified t)) . -16735) (undo-tree-id11842 . -1) (undo-tree-id11843 . -1) (undo-tree-id11844 . -1) (undo-tree-id11845 . -1) (undo-tree-id11846 . -1) (undo-tree-id11847 . -1) (undo-tree-id11848 . -1) (undo-tree-id11849 . -1) 16736) nil (25968 39583 621065 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -16869) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (#("c" 0 1 (fontified t)) . -16870) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (#("t" 0 1 (fontified t)) . -16871) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (#("i" 0 1 (fontified t)) . -16872) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (#("v" 0 1 (fontified t)) . -16873) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (#("a" 0 1 (fontified t)) . -16874) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (#("t" 0 1 (fontified t)) . -16875) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (#("i" 0 1 (fontified t)) . -16876) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (#("o" 0 1 (fontified t)) . -16877) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (#("n" 0 1 (fontified t)) . -16878) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (#("_" 0 1 (fontified t)) . -16879) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (#("v" 0 1 (fontified t)) . -16880) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (#("a" 0 1 (fontified t)) . -16881) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (#("l" 0 1 (fontified t)) . -16882) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (#("u" 0 1 (fontified t)) . -16883) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (#("e" 0 1 (fontified t)) . -16884) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (#("." 0 1 (fontified t)) . -16885) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (#("0" 0 1 (fontified t)) . -16886) (undo-tree-id5051 . -1) 16887 (t 25968 35898 620805 826000)) ((16869 . 16887)) (25968 39155 899524 0) 0 nil])
([nil nil ((16740 . 16743)) nil (25968 39583 621054 0) 0 nil])
([nil nil ((16869 . 16870)) ((#("|" 0 1 (fontified t)) . 16869) (undo-tree-id10936 . -1) (undo-tree-id10937 . -1)) (25968 39155 816359 0) 0 nil])
([nil nil ((apply yas--snippet-revive 16741 16752 #s(yas--snippet nil nil #s(yas--exit 16752 nil) 65 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 16752 nil) 65 nil nil nil nil)) (16741 . 16752) (#("to_string()$0" 0 13 (fontified nil)) . 16741) (16741 . 16754) (#("to" 0 2 (fontified nil)) . 16741) (16741 . 16743) (#("to_string() (as ToString)" 0 25 (fontified nil)) . -16741) (16741 . 16766) (#("to" 0 2 (fontified t)) . -16741) (undo-tree-id11835 . -2) (undo-tree-id11836 . -1) (undo-tree-id11837 . -1) (undo-tree-id11838 . -2) (undo-tree-id11839 . -2) (undo-tree-id11840 . -2) (undo-tree-id11841 . -2) 16743) nil (25968 39583 621048 0) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -16869) (undo-tree-id5016 . -1) 16870) ((16869 . 16870)) (25968 39155 733024 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16752) (undo-tree-id11819 . -1) (undo-tree-id11820 . -1) (undo-tree-id11821 . -1) (undo-tree-id11822 . -1) (undo-tree-id11823 . -1) (undo-tree-id11824 . -1) (undo-tree-id11825 . -1) (undo-tree-id11826 . -1) (undo-tree-id11827 . -1) (undo-tree-id11828 . -1) (undo-tree-id11829 . -1) (undo-tree-id11830 . -1) (undo-tree-id11831 . -1) (undo-tree-id11832 . -1) (undo-tree-id11833 . -1) (undo-tree-id11834 . -1) 16753) nil (25968 39583 621033 0) 0 nil])
([nil nil ((16869 . 16874)) ((#("move " 0 4 (fontified t) 4 5 (fontified t)) . 16869) (undo-tree-id10932 . -5) (undo-tree-id10933 . -5) (undo-tree-id10934 . -4) (undo-tree-id10935 . -4)) (25968 39155 649614 0) 0 nil])
([nil nil ((16169 . 16172) (t 25968 39583 651855 411000)) nil (25968 39675 793132 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16873) (undo-tree-id5015 . -1) 16874) ((16873 . 16874)) (25968 39155 566160 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -16171) (undo-tree-id11868 . -1) (undo-tree-id11869 . -1) (undo-tree-id11870 . -1) (undo-tree-id11871 . -1) 16172) nil (25968 39675 793131 0) 0 nil])
([nil nil ((16873 . 16875)) ((#("||" 0 2 (fontified t)) . 16873) (undo-tree-id10930 . -2) (undo-tree-id10931 . -2)) (25968 39155 482469 0) 0 nil])
([nil nil ((16171 . 16174)) nil (25968 39675 793125 0) 0 nil])
([nil nil ((16873 . 16874)) ((#(" " 0 1 (fontified t)) . 16873)) (25968 39155 399237 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -16173) (undo-tree-id11864 . -1) (undo-tree-id11865 . -1) (undo-tree-id11866 . -1) (undo-tree-id11867 . -1) 16174) nil (25968 39675 793124 0) 0 nil])
([nil nil ((16876 . 16877)) ((#(" " 0 1 (fontified t)) . 16876) (undo-tree-id10928 . -1) (undo-tree-id10929 . -1)) (25968 39155 315717 0) 0 nil])
([nil nil ((16173 . 16174)) nil (25968 39675 793119 0) 0 nil])
([nil nil ((16877 . 16879)) ((#("ui" 0 2 (fontified t)) . 16877) (undo-tree-id10926 . -2) (undo-tree-id10927 . -2)) (25968 39155 233693 0) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -16173) (undo-tree-id11854 . -1) (undo-tree-id11855 . -1) (undo-tree-id11856 . -1) (undo-tree-id11857 . -1) (undo-tree-id11858 . -1) (undo-tree-id11859 . -1) (undo-tree-id11860 . -1) (undo-tree-id11861 . -1) (undo-tree-id11862 . -1) (undo-tree-id11863 . -1) 16174) nil (25968 39675 793116 0) 0 nil])
([nil nil ((16877 . 16884) (#("ui" 0 2 (fontified nil)) . 16877) (16877 . 16879) (#("uistate" 0 7 (fontified nil)) . -16877) (16877 . 16884) (#("ui" 0 2 (fontified t)) . -16877) (undo-tree-id5013 . -2) (undo-tree-id5014 . -2) 16879) ((16877 . 16879) (#("uistate" 0 7 (fontified nil)) . 16877) (16877 . 16884) (#("ui" 0 2 (fontified nil)) . 16877) (16877 . 16879) (#("uistate" 0 7 (fontified t)) . 16877) (undo-tree-id10924 . -7) (undo-tree-id10925 . -7)) (25968 39155 149701 0) 0 nil])
([nil nil ((16173 . 16174)) nil (25968 39675 793094 0) 0 nil])
([nil nil ((16884 . 16885)) ((#("." 0 1 (fontified t)) . 16884) (undo-tree-id10922 . -1) (undo-tree-id10923 . -1)) (25968 39155 66272 0) 0 nil])
([nil nil ((16181 . 16182) (t 25968 39675 823270 130000)) nil (25968 39686 538127 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -16884) (undo-tree-id5012 . -1) 16885) ((16884 . 16885)) (25968 39154 982481 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -16181) (undo-tree-id11966 . -1) (undo-tree-id11967 . -1) (undo-tree-id11968 . -1) (undo-tree-id11969 . -1) 16182) nil (25968 39686 538125 0) 0 nil])
([nil nil ((16884 . 16885)) ((#("g" 0 1 (fontified t)) . 16884) (undo-tree-id10920 . -1) (undo-tree-id10921 . -1)) (25968 39154 899741 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -16169) (undo-tree-id11872 . -1) (undo-tree-id11873 . -1) (undo-tree-id11874 . -1) (undo-tree-id11875 . -1) (undo-tree-id11876 . -1) (undo-tree-id11877 . -1) (undo-tree-id11878 . -1) (undo-tree-id11879 . -1) (undo-tree-id11880 . -1) (undo-tree-id11881 . -1) (undo-tree-id11882 . -1) (undo-tree-id11883 . -1) (undo-tree-id11884 . -1) (undo-tree-id11885 . -1) (undo-tree-id11886 . -1) (undo-tree-id11887 . -1) (undo-tree-id11888 . -1) (undo-tree-id11889 . -1) (undo-tree-id11890 . -1) (undo-tree-id11891 . -1) (undo-tree-id11892 . -1) (undo-tree-id11893 . -1) (undo-tree-id11894 . -1) (undo-tree-id11895 . -1) (undo-tree-id11896 . -1) (#("r" 0 1 (fontified t)) . -16170) (undo-tree-id11897 . -1) (undo-tree-id11898 . -1) (undo-tree-id11899 . -1) (undo-tree-id11900 . -1) (undo-tree-id11901 . -1) (undo-tree-id11902 . -1) (undo-tree-id11903 . -1) (undo-tree-id11904 . -1) (undo-tree-id11905 . -1) (undo-tree-id11906 . -1) (undo-tree-id11907 . -1) (undo-tree-id11908 . -1) (undo-tree-id11909 . -1) (undo-tree-id11910 . -1) (undo-tree-id11911 . -1) (undo-tree-id11912 . -1) (undo-tree-id11913 . -1) (undo-tree-id11914 . -1) (undo-tree-id11915 . -1) (undo-tree-id11916 . -1) (undo-tree-id11917 . -1) (undo-tree-id11918 . -1) (undo-tree-id11919 . -1) (undo-tree-id11920 . -1) (#("o" 0 1 (fontified t)) . -16171) (undo-tree-id11921 . -1) (undo-tree-id11922 . -1) (undo-tree-id11923 . -1) (undo-tree-id11924 . -1) (undo-tree-id11925 . -1) (undo-tree-id11926 . -1) (undo-tree-id11927 . -1) (undo-tree-id11928 . -1) (undo-tree-id11929 . -1) (undo-tree-id11930 . -1) (undo-tree-id11931 . -1) (undo-tree-id11932 . -1) (undo-tree-id11933 . -1) (undo-tree-id11934 . -1) (undo-tree-id11935 . -1) (undo-tree-id11936 . -1) (undo-tree-id11937 . -1) (undo-tree-id11938 . -1) (undo-tree-id11939 . -1) (undo-tree-id11940 . -1) (#("p" 0 1 (fontified t)) . -16172) (undo-tree-id11941 . -1) (undo-tree-id11942 . -1) (undo-tree-id11943 . -1) (undo-tree-id11944 . -1) (undo-tree-id11945 . -1) (undo-tree-id11946 . -1) (undo-tree-id11947 . -1) (undo-tree-id11948 . -1) (undo-tree-id11949 . -1) (undo-tree-id11950 . -1) (undo-tree-id11951 . -1) (undo-tree-id11952 . -1) (undo-tree-id11953 . -1) (undo-tree-id11954 . -1) (undo-tree-id11955 . -1) (undo-tree-id11956 . -1) (undo-tree-id11957 . -1) (undo-tree-id11958 . -1) (undo-tree-id11959 . -1) (#(":" 0 1 (fontified t)) . -16173) (undo-tree-id11960 . -1) (undo-tree-id11961 . -1) (undo-tree-id11962 . -1) (undo-tree-id11963 . -1) (undo-tree-id11964 . -1) (undo-tree-id11965 . -1) 16174) nil (25968 39686 538113 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -16884) (undo-tree-id5011 . -1) 16885) ((16884 . 16885)) (25968 39154 815723 0) 0 nil])
([nil nil ((16176 . 16181) (t 25968 39686 568236 357000)) nil (25968 39716 895388 0) 0 nil])
([nil nil ((16884 . 16886)) ((#(".g" 0 1 (fontified t) 1 2 (fontified t)) . 16884) (undo-tree-id10918 . -2) (undo-tree-id10919 . -2)) (25968 39154 733969 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -16169) (undo-tree-id11986 . -1) (undo-tree-id11987 . -1) (#("h" 0 1 (fontified t)) . -16170) (undo-tree-id11988 . -1) (undo-tree-id11989 . -1) (#("e" 0 1 (fontified t)) . -16171) (undo-tree-id11990 . -1) (undo-tree-id11991 . -1) (#("c" 0 1 (fontified t)) . -16172) (undo-tree-id11992 . -1) (undo-tree-id11993 . -1) (#("k" 0 1 (fontified t)) . -16173) (undo-tree-id11994 . -1) (undo-tree-id11995 . -1) (#("e" 0 1 (fontified t)) . -16174) (undo-tree-id11996 . -1) (undo-tree-id11997 . -1) (#("d" 0 1 (fontified t)) . -16175) (undo-tree-id11998 . -1) (undo-tree-id11999 . -1) (#("=" 0 1 (fontified t)) . -16176) (undo-tree-id12000 . -1) (#("m" 0 1 (fontified t)) . -16177) (undo-tree-id12001 . -1) (#("o" 0 1 (fontified t)) . -16178) (undo-tree-id12002 . -1) (#("v" 0 1 (fontified t)) . -16179) (undo-tree-id12003 . -1) (#("e" 0 1 (fontified t)) . -16180) (undo-tree-id12004 . -1) 16181) nil (25968 39716 895385 0) 0 nil])
([nil nil ((apply yas--snippet-revive 16877 16890 #s(yas--snippet nil nil nil 42 nil nil nil nil)) (#("uistate." 0 8 (fontified nil)) . -16877) (undo-tree-id5008 . -7) (undo-tree-id5009 . -8) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 42 nil nil nil nil)) (16885 . 16898) (#("dbg!(uistate)" 0 13 (fontified nil)) . 16885) (16885 . 16898) (#("g" 0 1 (fontified nil)) . 16885) (16885 . 16886) (#("dbg" 0 3 (fontified nil)) . -16885) (16885 . 16888) (#("g" 0 1 (fontified t)) . -16885) (undo-tree-id5010 . -1) 16886) ((16885 . 16886) (#("dbg" 0 3 (fontified nil)) . 16885) (16885 . 16888) (#("g" 0 1 (fontified nil)) . 16885) (16885 . 16886) (#("dbg!(uistate)" 0 13 (fontified nil)) . 16885) (16885 . 16898) (#("dbg!(uistate)" 0 1 (face font-lock-preprocessor-face fontified nil) 1 2 (face font-lock-preprocessor-face fontified nil) 2 3 (face font-lock-preprocessor-face fontified nil) 3 4 (face font-lock-preprocessor-face fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil)) . 16885) (undo-tree-id10916 . -13) (undo-tree-id10917 . -13) (16877 . 16885)) (25968 39154 651178 0) 0 nil])
([nil nil ((16169 . 16178)) nil (25968 39716 895362 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -16877) (undo-tree-id4995 . -1) (#("b" 0 1 (fontified t)) . -16878) (undo-tree-id4996 . -1) (#("g" 0 1 (fontified t)) . -16879) (undo-tree-id4997 . -1) (#("!" 0 1 (face font-lock-preprocessor-face fontified t)) . -16880) (undo-tree-id4998 . -1) (#("(" 0 1 (fontified t)) . -16881) (undo-tree-id4999 . -1) (#("u" 0 1 (fontified t)) . -16882) (undo-tree-id5000 . -1) (#("i" 0 1 (fontified t)) . -16883) (undo-tree-id5001 . -1) (#("s" 0 1 (fontified t)) . -16884) (undo-tree-id5002 . -1) (#("t" 0 1 (fontified t)) . -16885) (undo-tree-id5003 . -1) (#("a" 0 1 (fontified t)) . -16886) (undo-tree-id5004 . -1) (#("t" 0 1 (fontified t)) . -16887) (undo-tree-id5005 . -1) (#("e" 0 1 (fontified t)) . -16888) (undo-tree-id5006 . -1) (#(")" 0 1 (fontified t)) . -16889) (undo-tree-id5007 . -1) 16890) ((16877 . 16890)) (25968 39154 566048 0) 0 nil])
([nil nil ((16178 . 16189)) nil (25968 39716 895361 0) 0 nil])
([nil nil ((16877 . 16878)) ((#(" " 0 1 (fontified t)) . 16877)) (25968 39154 483058 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -16182) (undo-tree-id11979 . -1) (#("o" 0 1 (fontified t)) . -16183) (undo-tree-id11980 . -1) (#("v" 0 1 (fontified t)) . -16184) (undo-tree-id11981 . -1) (#("e" 0 1 (fontified t)) . -16185) (undo-tree-id11982 . -1) (#(" " 0 1 (fontified t)) . -16186) (undo-tree-id11983 . -1) (#("|" 0 1 (fontified t)) . -16187) (undo-tree-id11984 . -1) (#("|" 0 1 (fontified t)) . -16188) (undo-tree-id11985 . -1) 16189) nil (25968 39716 895358 0) 0 nil])
([nil nil ((16877 . 16879)) ((#("ui" 0 2 (fontified t)) . 16877) (undo-tree-id10914 . -2) (undo-tree-id10915 . -2)) (25968 39154 400177 0) 0 nil])
([nil nil ((16182 . 16194)) nil (25968 39716 895348 0) 0 nil])
([nil nil ((16877 . 16884) (#("ui" 0 2 (fontified nil)) . 16877) (16877 . 16879) (#("uistate" 0 7 (fontified nil)) . -16877) (16877 . 16884) (#("ui" 0 2 (fontified t)) . -16877) (undo-tree-id4993 . -2) (undo-tree-id4994 . -2) 16879) ((16877 . 16879) (#("uistate" 0 7 (fontified nil)) . 16877) (16877 . 16884) (#("ui" 0 2 (fontified nil)) . 16877) (16877 . 16879) (#("uistate" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 16877) (undo-tree-id10912 . -7) (undo-tree-id10913 . -7)) (25968 39154 316305 0) 0 nil])
([nil nil ((16194 . 16198)) nil (25968 39716 895347 0) 0 nil])
([nil nil ((16884 . 16888)) ((#(".get" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 16884) (undo-tree-id10910 . -4) (undo-tree-id10911 . -4)) (25968 39154 235660 0) 0 nil])
([nil nil ((apply yas--snippet-revive 16195 16200 #s(yas--snippet nil nil #s(yas--exit 16200 nil) 66 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 16200 nil) 66 nil nil nil nil)) (16195 . 16200) (#("get()$0" 0 7 (fontified nil)) . 16195) (16195 . 16202) (#("get" 0 3 (fontified nil)) . 16195) (16195 . 16198) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -16195) (16195 . 16215) (#("get" 0 3 (fontified t)) . -16195) (undo-tree-id11970 . -3) (undo-tree-id11971 . -1) (undo-tree-id11972 . -1) (undo-tree-id11973 . -2) (undo-tree-id11974 . -2) (undo-tree-id11975 . -3) (undo-tree-id11976 . -3) (undo-tree-id11977 . -3) (undo-tree-id11978 . -3) 16198) nil (25968 39716 895344 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16876) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (#("u" 0 1 (fontified t)) . -16877) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (#("i" 0 1 (fontified t)) . -16878) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (#("s" 0 1 (fontified t)) . -16879) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (#("t" 0 1 (fontified t)) . -16880) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (#("a" 0 1 (fontified t)) . -16881) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (#("t" 0 1 (fontified t)) . -16882) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (#("e" 0 1 (fontified t)) . -16883) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (#("." 0 1 (fontified t)) . -16884) (undo-tree-id4989 . -1) (#("g" 0 1 (fontified t)) . -16885) (undo-tree-id4990 . -1) (#("e" 0 1 (fontified t)) . -16886) (undo-tree-id4991 . -1) (#("t" 0 1 (fontified t)) . -16887) (undo-tree-id4992 . -1) 16888) ((16876 . 16888)) (25968 39154 149474 0) 0 nil])
([nil nil ((16200 . 16203)) nil (25968 39716 895322 0) 0 nil])
([nil nil ((16876 . 16877)) ((#(" " 0 1 (fontified t)) . 16876) (undo-tree-id10908 . -1) (undo-tree-id10909 . -1)) (25968 39154 67048 0) 0 nil])
([nil nil ((16526 . 16527) (t 25968 39716 924926 102000)) nil (25968 39730 47611 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -16600) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4955 . -1) (#("o" 0 1 (fontified t)) . -16601) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4959 . -1) (#("d" 0 1 (face font-lock-keyword-face fontified t)) . -16602) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4963 . -1) (#("e" 0 1 (fontified t)) . -16603) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4967 . -1) (#("." 0 1 (fontified t)) . -16604) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4971 . -1) (#("0" 0 1 (fontified t)) . -16605) (undo-tree-id4972 . -1) 16606) ((16600 . 16606)) (25968 39153 983029 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 16560 . 16561) (nil fontified nil 16553 . 16561) (nil fontified nil 16548 . 16553) (nil fontified nil 16531 . 16548) (nil fontified nil 16527 . 16531) (16527 . 16561)) nil (25968 39730 47609 0) 0 nil])
([nil nil ((16600 . 16602)) ((#("ui" 0 2 (fontified t)) . 16600) (undo-tree-id10906 . -2) (undo-tree-id10907 . -2)) (25968 39153 899754 0) 0 nil])
([nil nil ((#("0" 0 1 (rear-nonsticky t fontified t)) . -16560) (undo-tree-id12005 . -1) (undo-tree-id12006 . -1) (undo-tree-id12007 . -1) (undo-tree-id12008 . -1) (undo-tree-id12009 . -1) (undo-tree-id12010 . -1) (undo-tree-id12011 . -1) (undo-tree-id12012 . -1) 16561) nil (25968 39730 47606 0) 0 nil])
([nil nil ((16600 . 16607) (#("ui" 0 2 (fontified nil)) . 16600) (16600 . 16602) (#("uistate" 0 7 (fontified nil)) . -16600) (16600 . 16607) (#("ui" 0 2 (fontified t)) . -16600) (undo-tree-id4950 . -2) (undo-tree-id4951 . -2) 16602) ((16600 . 16602) (#("uistate" 0 7 (fontified nil)) . 16600) (16600 . 16607) (#("ui" 0 2 (fontified nil)) . 16600) (16600 . 16602) (#("uistate" 0 7 (fontified t)) . 16600) (undo-tree-id10903 . -7) (undo-tree-id10904 . -7) (undo-tree-id10905 . -7)) (25968 39153 816260 0) 0 nil])
([nil nil ((16560 . 16561)) nil (25968 39810 741244 0) 0 nil])
([nil nil ((16607 . 16608)) ((#("." 0 1 (fontified t)) . 16607) (undo-tree-id10901 . -1) (undo-tree-id10902 . -1)) (25968 39153 733032 0) 0 nil])
([nil nil ((#("	    state.activation_value = keyboard_state.get().keys[index].value.0;
	    state.trigger_value = keyboard_state.get().keys[index].value.1;
	    state.reset_value = keyboard_state.get().keys[index].value.2;
	    state.lower_deadzone = keyboard_state.get().keys[index].value.3;" 0 1 (fontified t) 1 5 (fontified t) 5 11 (fontified t) 11 29 (fontified t) 29 30 (fontified t) 30 45 (fontified t) 45 51 (fontified t) 51 56 (fontified t) 56 61 (fontified t) 61 63 (fontified t) 63 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 77 (fontified t) 77 82 (fontified t) 82 83 (fontified t rear-nonsticky t) 83 98 (fontified t) 98 99 (fontified t) 99 114 (fontified t) 114 120 (fontified t) 120 125 (fontified t) 125 130 (fontified t) 130 132 (fontified t) 132 140 (fontified t) 140 141 (fontified t) 141 142 (fontified t) 142 146 (fontified t) 146 151 (fontified t) 151 152 (fontified t rear-nonsticky t) 152 165 (fontified t) 165 166 (fontified t) 166 181 (fontified t) 181 187 (fontified t) 187 192 (fontified t) 192 197 (fontified t) 197 199 (fontified t) 199 208 (fontified t) 208 209 (fontified t) 209 213 (fontified t) 213 218 (fontified t) 218 219 (fontified t rear-nonsticky t) 219 235 (fontified t) 235 236 (fontified t) 236 251 (fontified t) 251 257 (fontified t) 257 262 (fontified t) 262 267 (fontified t) 267 269 (fontified t) 269 277 (fontified t)) . 6063) (undo-tree-id13290 . -277) (undo-tree-id13291 . -5) (undo-tree-id13292 . -277) (undo-tree-id13293 . -277) (t 25968 39811 492981 407000)) nil (25968 39872 99363 0) 0 nil] [nil nil ((#("0" 0 1 (fontified t)) . -16202) (undo-tree-id13207 . -1) (undo-tree-id13208 . -1) (undo-tree-id13209 . -1) (undo-tree-id13210 . -1) (undo-tree-id13211 . -1) (undo-tree-id13212 . -1) 16203 (t 25968 39730 77099 275000)) ((16202 . 16203)) (25968 39809 944570 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -16607) (undo-tree-id4947 . -1) (undo-tree-id4949 . -1) 16608) ((16607 . 16608)) (25968 39153 649670 0) 0 nil])
([nil nil ((6063 . 6065)) nil (25968 39872 99358 0) 0 nil])
([nil nil ((#("get()==" 0 7 (fontified t)) . -16195) (undo-tree-id13200 . -7) (undo-tree-id13201 . -7) (undo-tree-id13202 . -7) (undo-tree-id13203 . -7) (undo-tree-id13204 . -7) (undo-tree-id13205 . -7) (undo-tree-id13206 . -7) 16202) ((16195 . 16202)) (25968 39809 267933 0) 0 nil])
([nil nil ((16614 . 16615)) ((#(" " 0 1 (fontified t)) . 16614)) (25968 39153 566187 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -6063) (undo-tree-id13288 . -1) (#("t" 0 1 (fontified t)) . -6064) (undo-tree-id13289 . -1) 6065) nil (25968 39872 99356 0) 0 nil])
([nil nil ((#("mode." 0 5 (fontified t)) . -16190) (undo-tree-id13192 . -5) (undo-tree-id13193 . -5) (undo-tree-id13194 . -5) (undo-tree-id13195 . -5) (undo-tree-id13196 . -5) (undo-tree-id13197 . -5) (undo-tree-id13198 . -5) (undo-tree-id13199 . -5) 16195) ((16190 . 16195)) (25968 39808 929570 0) 0 nil])
([nil nil ((16614 . 16615)) ((#("." 0 1 (fontified t)) . 16614) (undo-tree-id10899 . -1) (undo-tree-id10900 . -1)) (25968 39153 483151 0) 0 nil])
([nil nil ((6063 . 6068)) nil (25968 39872 99353 0) 0 nil])
([nil nil ((#("move || " 0 8 (fontified t)) . -16182) (undo-tree-id13183 . -8) (undo-tree-id13184 . -8) (undo-tree-id13185 . -8) (undo-tree-id13186 . -8) (undo-tree-id13187 . -8) (undo-tree-id13188 . -8) (undo-tree-id13189 . -8) (undo-tree-id13190 . -8) (undo-tree-id13191 . -8) 16190) ((16182 . 16190)) (25968 39808 656329 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -16614) (undo-tree-id4945 . -1) 16615) ((16614 . 16615)) (25968 39153 398965 0) 0 nil])
([nil nil ((6068 . 6071)) nil (25968 39872 99352 0) 0 nil])
([nil nil ((#("checked=" 0 8 (fontified t)) . -16174) (undo-tree-id13173 . -8) (undo-tree-id13174 . -8) (undo-tree-id13175 . -8) (undo-tree-id13176 . -8) (undo-tree-id13177 . -8) (undo-tree-id13178 . -8) (undo-tree-id13179 . -8) (undo-tree-id13180 . -8) (undo-tree-id13181 . -8) (undo-tree-id13182 . -8) 16182) ((16174 . 16182)) (25968 39808 344370 0) 0 nil])
([nil nil ((16614 . 16615)) ((#("." 0 1 (fontified t)) . 16614) (undo-tree-id10897 . -1) (undo-tree-id10898 . -1)) (25968 39153 316581 0) 0 nil])
([nil nil ((6068 . 6073) (#("sta" 0 3 (fontified nil)) . 6068) (6068 . 6071) (#("state" 0 5 (fontified nil)) . -6068) (6068 . 6073) (#("sta" 0 3 (fontified t)) . -6068) (undo-tree-id13287 . -3) 6071) nil (25968 39872 99351 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16168) (undo-tree-id13079 . -1) (undo-tree-id13080 . -1) (undo-tree-id13081 . -1) (undo-tree-id13082 . -1) (undo-tree-id13083 . -1) (undo-tree-id13084 . -1) (undo-tree-id13085 . -1) (undo-tree-id13086 . -1) (undo-tree-id13087 . -1) (undo-tree-id13088 . -1) (undo-tree-id13089 . -1) (undo-tree-id13090 . -1) (undo-tree-id13091 . -1) (undo-tree-id13092 . -1) (undo-tree-id13093 . -1) (undo-tree-id13094 . -1) (undo-tree-id13095 . -1) (undo-tree-id13096 . -1) (undo-tree-id13097 . -1) (#("p" 0 1 (fontified t)) . -16169) (undo-tree-id13098 . -1) (undo-tree-id13099 . -1) (undo-tree-id13100 . -1) (undo-tree-id13101 . -1) (undo-tree-id13102 . -1) (undo-tree-id13103 . -1) (undo-tree-id13104 . -1) (undo-tree-id13105 . -1) (undo-tree-id13106 . -1) (undo-tree-id13107 . -1) (undo-tree-id13108 . -1) (undo-tree-id13109 . -1) (undo-tree-id13110 . -1) (undo-tree-id13111 . -1) (undo-tree-id13112 . -1) (undo-tree-id13113 . -1) (undo-tree-id13114 . -1) (#("r" 0 1 (fontified t)) . -16170) (undo-tree-id13115 . -1) (undo-tree-id13116 . -1) (undo-tree-id13117 . -1) (undo-tree-id13118 . -1) (undo-tree-id13119 . -1) (undo-tree-id13120 . -1) (undo-tree-id13121 . -1) (undo-tree-id13122 . -1) (undo-tree-id13123 . -1) (undo-tree-id13124 . -1) (undo-tree-id13125 . -1) (undo-tree-id13126 . -1) (undo-tree-id13127 . -1) (undo-tree-id13128 . -1) (undo-tree-id13129 . -1) (undo-tree-id13130 . -1) (#("o" 0 1 (fontified t)) . -16171) (undo-tree-id13131 . -1) (undo-tree-id13132 . -1) (undo-tree-id13133 . -1) (undo-tree-id13134 . -1) (undo-tree-id13135 . -1) (undo-tree-id13136 . -1) (undo-tree-id13137 . -1) (undo-tree-id13138 . -1) (undo-tree-id13139 . -1) (undo-tree-id13140 . -1) (undo-tree-id13141 . -1) (undo-tree-id13142 . -1) (undo-tree-id13143 . -1) (undo-tree-id13144 . -1) (undo-tree-id13145 . -1) (#("p" 0 1 (fontified t)) . -16172) (undo-tree-id13146 . -1) (undo-tree-id13147 . -1) (undo-tree-id13148 . -1) (undo-tree-id13149 . -1) (undo-tree-id13150 . -1) (undo-tree-id13151 . -1) (undo-tree-id13152 . -1) (undo-tree-id13153 . -1) (undo-tree-id13154 . -1) (undo-tree-id13155 . -1) (undo-tree-id13156 . -1) (undo-tree-id13157 . -1) (undo-tree-id13158 . -1) (undo-tree-id13159 . -1) (#(":" 0 1 (fontified t)) . -16173) (undo-tree-id13160 . -1) (undo-tree-id13161 . -1) (undo-tree-id13162 . -1) (undo-tree-id13163 . -1) (undo-tree-id13164 . -1) (undo-tree-id13165 . -1) (undo-tree-id13166 . -1) (undo-tree-id13167 . -1) (undo-tree-id13168 . -1) (undo-tree-id13169 . -1) (undo-tree-id13170 . -1) (undo-tree-id13171 . -1) (undo-tree-id13172 . -1) 16174) ((16168 . 16174)) (25968 39808 2326 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -16613) (undo-tree-id4920 . -1) (undo-tree-id4922 . -1) (undo-tree-id4924 . -1) (undo-tree-id4926 . -1) (undo-tree-id4928 . -1) (undo-tree-id4930 . -1) (undo-tree-id4932 . -1) (undo-tree-id4934 . -1) (undo-tree-id4936 . -1) (undo-tree-id4938 . -1) (undo-tree-id4940 . -1) (#("." 0 1 (fontified t)) . -16614) (undo-tree-id4941 . -1) (undo-tree-id4943 . -1) 16615) ((16613 . 16615)) (25968 39153 233024 0) 0 nil])
([nil nil ((6073 . 6075)) nil (25968 39872 99347 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -16525) (undo-tree-id12936 . -1) (undo-tree-id12937 . -1) (undo-tree-id12938 . -1) (undo-tree-id12939 . -1) (undo-tree-id12940 . -1) (undo-tree-id12941 . -1) (undo-tree-id12942 . -1) (undo-tree-id12943 . -1) (undo-tree-id12944 . -1) (undo-tree-id12945 . -1) (undo-tree-id12946 . -1) (undo-tree-id12947 . -1) (undo-tree-id12948 . -1) (undo-tree-id12949 . -1) (undo-tree-id12950 . -1) (undo-tree-id12951 . -1) (undo-tree-id12952 . -1) (undo-tree-id12953 . -1) (undo-tree-id12954 . -1) (undo-tree-id12955 . -1) (undo-tree-id12956 . -1) (undo-tree-id12957 . -1) (undo-tree-id12958 . -1) (undo-tree-id12959 . -1) (undo-tree-id12960 . -1) (undo-tree-id12961 . -1) (undo-tree-id12962 . -1) (undo-tree-id12963 . -1) (undo-tree-id12964 . -1) (undo-tree-id12965 . -1) (undo-tree-id12966 . -1) (undo-tree-id12967 . -1) (undo-tree-id12968 . -1) (undo-tree-id12969 . -1) (undo-tree-id12970 . -1) (undo-tree-id12971 . -1) (undo-tree-id12972 . -1) (undo-tree-id12973 . -1) (undo-tree-id12974 . -1) (undo-tree-id12975 . -1) (undo-tree-id12976 . -1) (undo-tree-id12977 . -1) (undo-tree-id12978 . -1) (undo-tree-id12979 . -1) (undo-tree-id12980 . -1) (undo-tree-id12981 . -1) (undo-tree-id12982 . -1) (undo-tree-id12983 . -1) (undo-tree-id12984 . -1) (undo-tree-id12985 . -1) (undo-tree-id12986 . -1) (undo-tree-id12987 . -1) (undo-tree-id12988 . -1) (undo-tree-id12989 . -1) (undo-tree-id12990 . -1) (undo-tree-id12991 . -1) (undo-tree-id12992 . -1) (undo-tree-id12993 . -1) (undo-tree-id12994 . -1) (undo-tree-id12995 . -1) (undo-tree-id12996 . -1) (undo-tree-id12997 . -1) (undo-tree-id12998 . -1) (undo-tree-id12999 . -1) (undo-tree-id13000 . -1) (undo-tree-id13001 . -1) (undo-tree-id13002 . -1) (undo-tree-id13003 . -1) (undo-tree-id13004 . -1) (undo-tree-id13005 . -1) (undo-tree-id13006 . -1) (undo-tree-id13007 . -1) (undo-tree-id13008 . -1) (undo-tree-id13009 . -1) (undo-tree-id13010 . -1) (undo-tree-id13011 . -1) (undo-tree-id13012 . -1) (undo-tree-id13013 . -1) (undo-tree-id13014 . -1) (undo-tree-id13015 . -1) (undo-tree-id13016 . -1) (undo-tree-id13017 . -1) (undo-tree-id13018 . -1) (undo-tree-id13019 . -1) (undo-tree-id13020 . -1) (undo-tree-id13021 . -1) (undo-tree-id13022 . -1) (undo-tree-id13023 . -1) (undo-tree-id13024 . -1) (undo-tree-id13025 . -1) (undo-tree-id13026 . -1) (undo-tree-id13027 . -1) (undo-tree-id13028 . -1) (undo-tree-id13029 . -1) (undo-tree-id13030 . -1) (undo-tree-id13031 . -1) (undo-tree-id13032 . -1) (undo-tree-id13033 . -1) (undo-tree-id13034 . -1) (undo-tree-id13035 . -1) (undo-tree-id13036 . -1) (undo-tree-id13037 . -1) (undo-tree-id13038 . -1) (undo-tree-id13039 . -1) (undo-tree-id13040 . -1) (undo-tree-id13041 . -1) (undo-tree-id13042 . -1) (undo-tree-id13043 . -1) (undo-tree-id13044 . -1) (undo-tree-id13045 . -1) (undo-tree-id13046 . -1) (undo-tree-id13047 . -1) (undo-tree-id13048 . -1) (undo-tree-id13049 . -1) (undo-tree-id13050 . -1) (undo-tree-id13051 . -1) (undo-tree-id13052 . -1) (undo-tree-id13053 . -1) (undo-tree-id13054 . -1) (undo-tree-id13055 . -1) (undo-tree-id13056 . -1) (undo-tree-id13057 . -1) (undo-tree-id13058 . -1) (undo-tree-id13059 . -1) (undo-tree-id13060 . -1) (undo-tree-id13061 . -1) (undo-tree-id13062 . -1) (undo-tree-id13063 . -1) (undo-tree-id13064 . -1) (undo-tree-id13065 . -1) (undo-tree-id13066 . -1) (undo-tree-id13067 . -1) (undo-tree-id13068 . -1) (undo-tree-id13069 . -1) (undo-tree-id13070 . -1) (undo-tree-id13071 . -1) (undo-tree-id13072 . -1) (undo-tree-id13073 . -1) (undo-tree-id13074 . -1) (undo-tree-id13075 . -1) (undo-tree-id13076 . -1) (undo-tree-id13077 . -1) (undo-tree-id13078 . -1) 16526) ((16525 . 16526)) (25968 39807 696587 0) 0 nil])
([nil nil ((16613 . 16616)) ((#(".mo" 0 1 (fontified t) 1 3 (fontified t)) . 16613) (undo-tree-id10892 . -3) (undo-tree-id10893 . -3) (undo-tree-id10894 . -3) (undo-tree-id10895 . -3) (undo-tree-id10896 . -3)) (25968 39153 149554 0) 0 nil])
([nil nil ((6074 . 6078) (#("m" 0 1 (fontified nil)) . 6074) (6074 . 6075) (#("mode" 0 4 (fontified nil)) . -6074) (6074 . 6078) (#("m" 0 1 (fontified t)) . -6074) (undo-tree-id13286 . -1) 6075) nil (25968 39872 99345 0) 0 nil])
([nil nil ((#("get()==" 0 7 (fontified t)) . -16518) (undo-tree-id12785 . -7) (undo-tree-id12786 . -7) (undo-tree-id12787 . -7) (undo-tree-id12788 . -7) (undo-tree-id12789 . -7) (undo-tree-id12790 . -7) (undo-tree-id12791 . -7) (undo-tree-id12792 . -7) (undo-tree-id12793 . -7) (undo-tree-id12794 . -7) (undo-tree-id12795 . -7) (undo-tree-id12796 . -7) (undo-tree-id12797 . -7) (undo-tree-id12798 . -7) (undo-tree-id12799 . -7) (undo-tree-id12800 . -7) (undo-tree-id12801 . -7) (undo-tree-id12802 . -7) (undo-tree-id12803 . -7) (undo-tree-id12804 . -7) (undo-tree-id12805 . -7) (undo-tree-id12806 . -7) (undo-tree-id12807 . -7) (undo-tree-id12808 . -7) (undo-tree-id12809 . -7) (undo-tree-id12810 . -7) (undo-tree-id12811 . -7) (undo-tree-id12812 . -7) (undo-tree-id12813 . -7) (undo-tree-id12814 . -7) (undo-tree-id12815 . -7) (undo-tree-id12816 . -7) (undo-tree-id12817 . -7) (undo-tree-id12818 . -7) (undo-tree-id12819 . -7) (undo-tree-id12820 . -7) (undo-tree-id12821 . -7) (undo-tree-id12822 . -7) (undo-tree-id12823 . -7) (undo-tree-id12824 . -7) (undo-tree-id12825 . -7) (undo-tree-id12826 . -7) (undo-tree-id12827 . -7) (undo-tree-id12828 . -7) (undo-tree-id12829 . -7) (undo-tree-id12830 . -7) (undo-tree-id12831 . -7) (undo-tree-id12832 . -7) (undo-tree-id12833 . -7) (undo-tree-id12834 . -7) (undo-tree-id12835 . -7) (undo-tree-id12836 . -7) (undo-tree-id12837 . -7) (undo-tree-id12838 . -7) (undo-tree-id12839 . -7) (undo-tree-id12840 . -7) (undo-tree-id12841 . -7) (undo-tree-id12842 . -7) (undo-tree-id12843 . -7) (undo-tree-id12844 . -7) (undo-tree-id12845 . -7) (undo-tree-id12846 . -7) (undo-tree-id12847 . -7) (undo-tree-id12848 . -7) (undo-tree-id12849 . -7) (undo-tree-id12850 . -7) (undo-tree-id12851 . -7) (undo-tree-id12852 . -7) (undo-tree-id12853 . -7) (undo-tree-id12854 . -7) (undo-tree-id12855 . -7) (undo-tree-id12856 . -7) (undo-tree-id12857 . -7) (undo-tree-id12858 . -7) (undo-tree-id12859 . -7) (undo-tree-id12860 . -7) (undo-tree-id12861 . -7) (undo-tree-id12862 . -7) (undo-tree-id12863 . -7) (undo-tree-id12864 . -7) (undo-tree-id12865 . -7) (undo-tree-id12866 . -7) (undo-tree-id12867 . -7) (undo-tree-id12868 . -7) (undo-tree-id12869 . -7) (undo-tree-id12870 . -7) (undo-tree-id12871 . -7) (undo-tree-id12872 . -7) (undo-tree-id12873 . -7) (undo-tree-id12874 . -7) (undo-tree-id12875 . -7) (undo-tree-id12876 . -7) (undo-tree-id12877 . -7) (undo-tree-id12878 . -7) (undo-tree-id12879 . -7) (undo-tree-id12880 . -7) (undo-tree-id12881 . -7) (undo-tree-id12882 . -7) (undo-tree-id12883 . -7) (undo-tree-id12884 . -7) (undo-tree-id12885 . -7) (undo-tree-id12886 . -7) (undo-tree-id12887 . -7) (undo-tree-id12888 . -7) (undo-tree-id12889 . -7) (undo-tree-id12890 . -7) (undo-tree-id12891 . -7) (undo-tree-id12892 . -7) (undo-tree-id12893 . -7) (undo-tree-id12894 . -7) (undo-tree-id12895 . -7) (undo-tree-id12896 . -7) (undo-tree-id12897 . -7) (undo-tree-id12898 . -7) (undo-tree-id12899 . -7) (undo-tree-id12900 . -7) (undo-tree-id12901 . -7) (undo-tree-id12902 . -7) (undo-tree-id12903 . -7) (undo-tree-id12904 . -7) (undo-tree-id12905 . -7) (undo-tree-id12906 . -7) (undo-tree-id12907 . -7) (undo-tree-id12908 . -7) (undo-tree-id12909 . -7) (undo-tree-id12910 . -7) (undo-tree-id12911 . -7) (undo-tree-id12912 . -7) (undo-tree-id12913 . -7) (undo-tree-id12914 . -7) (undo-tree-id12915 . -7) (undo-tree-id12916 . -7) (undo-tree-id12917 . -7) (undo-tree-id12918 . -7) (undo-tree-id12919 . -7) (undo-tree-id12920 . -7) (undo-tree-id12921 . -7) (undo-tree-id12922 . -7) (undo-tree-id12923 . -7) (undo-tree-id12924 . -7) (undo-tree-id12925 . -7) (undo-tree-id12926 . -7) (undo-tree-id12927 . -7) (undo-tree-id12928 . -7) (undo-tree-id12929 . -7) (undo-tree-id12930 . -7) (undo-tree-id12931 . -7) (undo-tree-id12932 . -7) (undo-tree-id12933 . -7) (undo-tree-id12934 . -7) (undo-tree-id12935 . -7) 16525) ((16518 . 16525)) (25968 39807 399113 0) 0 nil])
([nil nil ((16616 . 16618)) ((#("de" 0 2 (fontified t)) . 16616) (undo-tree-id10889 . -2) (undo-tree-id10890 . -2) (undo-tree-id10891 . -2)) (25968 39153 66096 0) 0 nil])
([nil nil ((6078 . 6079)) nil (25968 39872 99342 0) 0 nil])
([nil nil ((#("mode." 0 5 (fontified t)) . -16513) (undo-tree-id12633 . -5) (undo-tree-id12634 . -5) (undo-tree-id12635 . -5) (undo-tree-id12636 . -5) (undo-tree-id12637 . -5) (undo-tree-id12638 . -5) (undo-tree-id12639 . -5) (undo-tree-id12640 . -5) (undo-tree-id12641 . -5) (undo-tree-id12642 . -5) (undo-tree-id12643 . -5) (undo-tree-id12644 . -5) (undo-tree-id12645 . -5) (undo-tree-id12646 . -5) (undo-tree-id12647 . -5) (undo-tree-id12648 . -5) (undo-tree-id12649 . -5) (undo-tree-id12650 . -5) (undo-tree-id12651 . -5) (undo-tree-id12652 . -5) (undo-tree-id12653 . -5) (undo-tree-id12654 . -5) (undo-tree-id12655 . -5) (undo-tree-id12656 . -5) (undo-tree-id12657 . -5) (undo-tree-id12658 . -5) (undo-tree-id12659 . -5) (undo-tree-id12660 . -5) (undo-tree-id12661 . -5) (undo-tree-id12662 . -5) (undo-tree-id12663 . -5) (undo-tree-id12664 . -5) (undo-tree-id12665 . -5) (undo-tree-id12666 . -5) (undo-tree-id12667 . -5) (undo-tree-id12668 . -5) (undo-tree-id12669 . -5) (undo-tree-id12670 . -5) (undo-tree-id12671 . -5) (undo-tree-id12672 . -5) (undo-tree-id12673 . -5) (undo-tree-id12674 . -5) (undo-tree-id12675 . -5) (undo-tree-id12676 . -5) (undo-tree-id12677 . -5) (undo-tree-id12678 . -5) (undo-tree-id12679 . -5) (undo-tree-id12680 . -5) (undo-tree-id12681 . -5) (undo-tree-id12682 . -5) (undo-tree-id12683 . -5) (undo-tree-id12684 . -5) (undo-tree-id12685 . -5) (undo-tree-id12686 . -5) (undo-tree-id12687 . -5) (undo-tree-id12688 . -5) (undo-tree-id12689 . -5) (undo-tree-id12690 . -5) (undo-tree-id12691 . -5) (undo-tree-id12692 . -5) (undo-tree-id12693 . -5) (undo-tree-id12694 . -5) (undo-tree-id12695 . -5) (undo-tree-id12696 . -5) (undo-tree-id12697 . -5) (undo-tree-id12698 . -5) (undo-tree-id12699 . -5) (undo-tree-id12700 . -5) (undo-tree-id12701 . -5) (undo-tree-id12702 . -5) (undo-tree-id12703 . -5) (undo-tree-id12704 . -5) (undo-tree-id12705 . -5) (undo-tree-id12706 . -5) (undo-tree-id12707 . -5) (undo-tree-id12708 . -5) (undo-tree-id12709 . -5) (undo-tree-id12710 . -5) (undo-tree-id12711 . -5) (undo-tree-id12712 . -5) (undo-tree-id12713 . -5) (undo-tree-id12714 . -5) (undo-tree-id12715 . -5) (undo-tree-id12716 . -5) (undo-tree-id12717 . -5) (undo-tree-id12718 . -5) (undo-tree-id12719 . -5) (undo-tree-id12720 . -5) (undo-tree-id12721 . -5) (undo-tree-id12722 . -5) (undo-tree-id12723 . -5) (undo-tree-id12724 . -5) (undo-tree-id12725 . -5) (undo-tree-id12726 . -5) (undo-tree-id12727 . -5) (undo-tree-id12728 . -5) (undo-tree-id12729 . -5) (undo-tree-id12730 . -5) (undo-tree-id12731 . -5) (undo-tree-id12732 . -5) (undo-tree-id12733 . -5) (undo-tree-id12734 . -5) (undo-tree-id12735 . -5) (undo-tree-id12736 . -5) (undo-tree-id12737 . -5) (undo-tree-id12738 . -5) (undo-tree-id12739 . -5) (undo-tree-id12740 . -5) (undo-tree-id12741 . -5) (undo-tree-id12742 . -5) (undo-tree-id12743 . -5) (undo-tree-id12744 . -5) (undo-tree-id12745 . -5) (undo-tree-id12746 . -5) (undo-tree-id12747 . -5) (undo-tree-id12748 . -5) (undo-tree-id12749 . -5) (undo-tree-id12750 . -5) (undo-tree-id12751 . -5) (undo-tree-id12752 . -5) (undo-tree-id12753 . -5) (undo-tree-id12754 . -5) (undo-tree-id12755 . -5) (undo-tree-id12756 . -5) (undo-tree-id12757 . -5) (undo-tree-id12758 . -5) (undo-tree-id12759 . -5) (undo-tree-id12760 . -5) (undo-tree-id12761 . -5) (undo-tree-id12762 . -5) (undo-tree-id12763 . -5) (undo-tree-id12764 . -5) (undo-tree-id12765 . -5) (undo-tree-id12766 . -5) (undo-tree-id12767 . -5) (undo-tree-id12768 . -5) (undo-tree-id12769 . -5) (undo-tree-id12770 . -5) (undo-tree-id12771 . -5) (undo-tree-id12772 . -5) (undo-tree-id12773 . -5) (undo-tree-id12774 . -5) (undo-tree-id12775 . -5) (undo-tree-id12776 . -5) (undo-tree-id12777 . -5) (undo-tree-id12778 . -5) (undo-tree-id12779 . -5) (undo-tree-id12780 . -5) (undo-tree-id12781 . -5) (undo-tree-id12782 . -5) (undo-tree-id12783 . -5) (undo-tree-id12784 . -5) 16518) ((16513 . 16518)) (25968 39807 53056 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16618) (undo-tree-id4912 . -1) (undo-tree-id4914 . 1) (undo-tree-id4916 . -1) (undo-tree-id4918 . -1) 16619) ((16618 . 16619)) (25968 39152 982680 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -6078) (undo-tree-id13285 . -1) 6079) nil (25968 39872 99341 0) 0 nil])
([nil nil ((#("move || " 0 8 (fontified t)) . -16505) (undo-tree-id12480 . -8) (undo-tree-id12481 . -8) (undo-tree-id12482 . -8) (undo-tree-id12483 . -8) (undo-tree-id12484 . -8) (undo-tree-id12485 . -8) (undo-tree-id12486 . -8) (undo-tree-id12487 . -8) (undo-tree-id12488 . -8) (undo-tree-id12489 . -8) (undo-tree-id12490 . -8) (undo-tree-id12491 . -8) (undo-tree-id12492 . -8) (undo-tree-id12493 . -8) (undo-tree-id12494 . -8) (undo-tree-id12495 . -8) (undo-tree-id12496 . -8) (undo-tree-id12497 . -8) (undo-tree-id12498 . -8) (undo-tree-id12499 . -8) (undo-tree-id12500 . -8) (undo-tree-id12501 . -8) (undo-tree-id12502 . -8) (undo-tree-id12503 . -8) (undo-tree-id12504 . -8) (undo-tree-id12505 . -8) (undo-tree-id12506 . -8) (undo-tree-id12507 . -8) (undo-tree-id12508 . -8) (undo-tree-id12509 . -8) (undo-tree-id12510 . -8) (undo-tree-id12511 . -8) (undo-tree-id12512 . -8) (undo-tree-id12513 . -8) (undo-tree-id12514 . -8) (undo-tree-id12515 . -8) (undo-tree-id12516 . -8) (undo-tree-id12517 . -8) (undo-tree-id12518 . -8) (undo-tree-id12519 . -8) (undo-tree-id12520 . -8) (undo-tree-id12521 . -8) (undo-tree-id12522 . -8) (undo-tree-id12523 . -8) (undo-tree-id12524 . -8) (undo-tree-id12525 . -8) (undo-tree-id12526 . -8) (undo-tree-id12527 . -8) (undo-tree-id12528 . -8) (undo-tree-id12529 . -8) (undo-tree-id12530 . -8) (undo-tree-id12531 . -8) (undo-tree-id12532 . -8) (undo-tree-id12533 . -8) (undo-tree-id12534 . -8) (undo-tree-id12535 . -8) (undo-tree-id12536 . -8) (undo-tree-id12537 . -8) (undo-tree-id12538 . -8) (undo-tree-id12539 . -8) (undo-tree-id12540 . -8) (undo-tree-id12541 . -8) (undo-tree-id12542 . -8) (undo-tree-id12543 . -8) (undo-tree-id12544 . -8) (undo-tree-id12545 . -8) (undo-tree-id12546 . -8) (undo-tree-id12547 . -8) (undo-tree-id12548 . -8) (undo-tree-id12549 . -8) (undo-tree-id12550 . -8) (undo-tree-id12551 . -8) (undo-tree-id12552 . -8) (undo-tree-id12553 . -8) (undo-tree-id12554 . -8) (undo-tree-id12555 . -8) (undo-tree-id12556 . -8) (undo-tree-id12557 . -8) (undo-tree-id12558 . -8) (undo-tree-id12559 . -8) (undo-tree-id12560 . -8) (undo-tree-id12561 . -8) (undo-tree-id12562 . -8) (undo-tree-id12563 . -8) (undo-tree-id12564 . -8) (undo-tree-id12565 . -8) (undo-tree-id12566 . -8) (undo-tree-id12567 . -8) (undo-tree-id12568 . -8) (undo-tree-id12569 . -8) (undo-tree-id12570 . -8) (undo-tree-id12571 . -8) (undo-tree-id12572 . -8) (undo-tree-id12573 . -8) (undo-tree-id12574 . -8) (undo-tree-id12575 . -8) (undo-tree-id12576 . -8) (undo-tree-id12577 . -8) (undo-tree-id12578 . -8) (undo-tree-id12579 . -8) (undo-tree-id12580 . -8) (undo-tree-id12581 . -8) (undo-tree-id12582 . -8) (undo-tree-id12583 . -8) (undo-tree-id12584 . -8) (undo-tree-id12585 . -8) (undo-tree-id12586 . -8) (undo-tree-id12587 . -8) (undo-tree-id12588 . -8) (undo-tree-id12589 . -8) (undo-tree-id12590 . -8) (undo-tree-id12591 . -8) (undo-tree-id12592 . -8) (undo-tree-id12593 . -8) (undo-tree-id12594 . -8) (undo-tree-id12595 . -8) (undo-tree-id12596 . -8) (undo-tree-id12597 . -8) (undo-tree-id12598 . -8) (undo-tree-id12599 . -8) (undo-tree-id12600 . -8) (undo-tree-id12601 . -8) (undo-tree-id12602 . -8) (undo-tree-id12603 . -8) (undo-tree-id12604 . -8) (undo-tree-id12605 . -8) (undo-tree-id12606 . -8) (undo-tree-id12607 . -8) (undo-tree-id12608 . -8) (undo-tree-id12609 . -8) (undo-tree-id12610 . -8) (undo-tree-id12611 . -8) (undo-tree-id12612 . -8) (undo-tree-id12613 . -8) (undo-tree-id12614 . -8) (undo-tree-id12615 . -8) (undo-tree-id12616 . -8) (undo-tree-id12617 . -8) (undo-tree-id12618 . -8) (undo-tree-id12619 . -8) (undo-tree-id12620 . -8) (undo-tree-id12621 . -8) (undo-tree-id12622 . -8) (undo-tree-id12623 . -8) (undo-tree-id12624 . -8) (undo-tree-id12625 . -8) (undo-tree-id12626 . -8) (undo-tree-id12627 . -8) (undo-tree-id12628 . -8) (undo-tree-id12629 . -8) (undo-tree-id12630 . -8) (undo-tree-id12631 . -8) (undo-tree-id12632 . -8) 16513) ((16505 . 16513)) (25968 39806 768248 0) 0 nil])
([nil nil ((16618 . 16619)) ((#("." 0 1 (fontified t)) . 16618)) (25968 39152 922901 0) 0 nil])
([nil nil ((6078 . 6079)) nil (25968 39872 99339 0) 0 nil])
([nil nil ((#("checked=" 0 8 (fontified t)) . -16497) (undo-tree-id12326 . -8) (undo-tree-id12327 . -8) (undo-tree-id12328 . -8) (undo-tree-id12329 . -8) (undo-tree-id12330 . -8) (undo-tree-id12331 . -8) (undo-tree-id12332 . -8) (undo-tree-id12333 . -8) (undo-tree-id12334 . -8) (undo-tree-id12335 . -8) (undo-tree-id12336 . -8) (undo-tree-id12337 . -8) (undo-tree-id12338 . -8) (undo-tree-id12339 . -8) (undo-tree-id12340 . -8) (undo-tree-id12341 . -8) (undo-tree-id12342 . -8) (undo-tree-id12343 . -8) (undo-tree-id12344 . -8) (undo-tree-id12345 . -8) (undo-tree-id12346 . -8) (undo-tree-id12347 . -8) (undo-tree-id12348 . -8) (undo-tree-id12349 . -8) (undo-tree-id12350 . -8) (undo-tree-id12351 . -8) (undo-tree-id12352 . -8) (undo-tree-id12353 . -8) (undo-tree-id12354 . -8) (undo-tree-id12355 . -8) (undo-tree-id12356 . -8) (undo-tree-id12357 . -8) (undo-tree-id12358 . -8) (undo-tree-id12359 . -8) (undo-tree-id12360 . -8) (undo-tree-id12361 . -8) (undo-tree-id12362 . -8) (undo-tree-id12363 . -8) (undo-tree-id12364 . -8) (undo-tree-id12365 . -8) (undo-tree-id12366 . -8) (undo-tree-id12367 . -8) (undo-tree-id12368 . -8) (undo-tree-id12369 . -8) (undo-tree-id12370 . -8) (undo-tree-id12371 . -8) (undo-tree-id12372 . -8) (undo-tree-id12373 . -8) (undo-tree-id12374 . -8) (undo-tree-id12375 . -8) (undo-tree-id12376 . -8) (undo-tree-id12377 . -8) (undo-tree-id12378 . -8) (undo-tree-id12379 . -8) (undo-tree-id12380 . -8) (undo-tree-id12381 . -8) (undo-tree-id12382 . -8) (undo-tree-id12383 . -8) (undo-tree-id12384 . -8) (undo-tree-id12385 . -8) (undo-tree-id12386 . -8) (undo-tree-id12387 . -8) (undo-tree-id12388 . -8) (undo-tree-id12389 . -8) (undo-tree-id12390 . -8) (undo-tree-id12391 . -8) (undo-tree-id12392 . -8) (undo-tree-id12393 . -8) (undo-tree-id12394 . -8) (undo-tree-id12395 . -8) (undo-tree-id12396 . -8) (undo-tree-id12397 . -8) (undo-tree-id12398 . -8) (undo-tree-id12399 . -8) (undo-tree-id12400 . -8) (undo-tree-id12401 . -8) (undo-tree-id12402 . -8) (undo-tree-id12403 . -8) (undo-tree-id12404 . -8) (undo-tree-id12405 . -8) (undo-tree-id12406 . -8) (undo-tree-id12407 . -8) (undo-tree-id12408 . -8) (undo-tree-id12409 . -8) (undo-tree-id12410 . -8) (undo-tree-id12411 . -8) (undo-tree-id12412 . -8) (undo-tree-id12413 . -8) (undo-tree-id12414 . -8) (undo-tree-id12415 . -8) (undo-tree-id12416 . -8) (undo-tree-id12417 . -8) (undo-tree-id12418 . -8) (undo-tree-id12419 . -8) (undo-tree-id12420 . -8) (undo-tree-id12421 . -8) (undo-tree-id12422 . -8) (undo-tree-id12423 . -8) (undo-tree-id12424 . -8) (undo-tree-id12425 . -8) (undo-tree-id12426 . -8) (undo-tree-id12427 . -8) (undo-tree-id12428 . -8) (undo-tree-id12429 . -8) (undo-tree-id12430 . -8) (undo-tree-id12431 . -8) (undo-tree-id12432 . -8) (undo-tree-id12433 . -8) (undo-tree-id12434 . -8) (undo-tree-id12435 . -8) (undo-tree-id12436 . -8) (undo-tree-id12437 . -8) (undo-tree-id12438 . -8) (undo-tree-id12439 . -8) (undo-tree-id12440 . -8) (undo-tree-id12441 . -8) (undo-tree-id12442 . -8) (undo-tree-id12443 . -8) (undo-tree-id12444 . -8) (undo-tree-id12445 . -8) (undo-tree-id12446 . -8) (undo-tree-id12447 . -8) (undo-tree-id12448 . -8) (undo-tree-id12449 . -8) (undo-tree-id12450 . -8) (undo-tree-id12451 . -8) (undo-tree-id12452 . -8) (undo-tree-id12453 . -8) (undo-tree-id12454 . -8) (undo-tree-id12455 . -8) (undo-tree-id12456 . -8) (undo-tree-id12457 . -8) (undo-tree-id12458 . -8) (undo-tree-id12459 . -8) (undo-tree-id12460 . -8) (undo-tree-id12461 . -8) (undo-tree-id12462 . -8) (undo-tree-id12463 . -8) (undo-tree-id12464 . -8) (undo-tree-id12465 . -8) (undo-tree-id12466 . -8) (undo-tree-id12467 . -8) (undo-tree-id12468 . -8) (undo-tree-id12469 . -8) (undo-tree-id12470 . -8) (undo-tree-id12471 . -8) (undo-tree-id12472 . -8) (undo-tree-id12473 . -8) (undo-tree-id12474 . -8) (undo-tree-id12475 . -8) (undo-tree-id12476 . -8) (undo-tree-id12477 . -8) (undo-tree-id12478 . -8) (undo-tree-id12479 . -8) 16505) ((16497 . 16505)) (25968 39806 484412 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -16607) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5081 . -1) (undo-tree-id5083 . -1) (undo-tree-id5085 . -1) (undo-tree-id5087 . -1) (undo-tree-id5089 . -1) (undo-tree-id5091 . -1) (undo-tree-id5093 . -1) (undo-tree-id5095 . -1) (undo-tree-id5097 . -1) (undo-tree-id5099 . -1) (undo-tree-id5101 . -1) (undo-tree-id5103 . -1) (undo-tree-id5105 . -1) (undo-tree-id5107 . -1) (undo-tree-id5109 . -1) (undo-tree-id5111 . -1) (undo-tree-id5113 . -1) (undo-tree-id5115 . -1) (undo-tree-id5117 . -1) (undo-tree-id5119 . -1) (undo-tree-id5121 . -1) (undo-tree-id5123 . -1) (undo-tree-id5125 . -1) (undo-tree-id5127 . -1) (undo-tree-id5129 . -1) (undo-tree-id5131 . -1) (undo-tree-id5133 . -1) (undo-tree-id5135 . -1) (undo-tree-id5137 . -1) (undo-tree-id5139 . -1) (undo-tree-id5141 . -1) (undo-tree-id5143 . -1) (undo-tree-id5145 . -1) (undo-tree-id5147 . -1) (#("g" 0 1 (fontified t)) . -16608) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5151 . -1) (undo-tree-id5153 . -1) (undo-tree-id5155 . -1) (undo-tree-id5157 . -1) (undo-tree-id5159 . -1) (undo-tree-id5161 . -1) (undo-tree-id5163 . -1) (undo-tree-id5165 . -1) (undo-tree-id5167 . -1) (undo-tree-id5169 . -1) (undo-tree-id5171 . -1) (undo-tree-id5173 . -1) (#("e" 0 1 (fontified t)) . -16609) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5177 . -1) (undo-tree-id5179 . -1) (undo-tree-id5181 . -1) (undo-tree-id5183 . -1) (undo-tree-id5185 . -1) (undo-tree-id5187 . -1) (undo-tree-id5189 . -1) (undo-tree-id5191 . -1) (undo-tree-id5193 . -1) (undo-tree-id5195 . -1) (undo-tree-id5197 . -1) (#("t" 0 1 (fontified t)) . -16610) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5202 . -1) (undo-tree-id5204 . -1) (undo-tree-id5206 . -1) (undo-tree-id5208 . -1) (undo-tree-id5210 . -1) (undo-tree-id5212 . -1) (undo-tree-id5214 . -1) (undo-tree-id5216 . -1) (undo-tree-id5218 . -1) (undo-tree-id5220 . -1) (#("(" 0 1 (fontified t)) . -16611) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5224 . -1) (undo-tree-id5226 . -1) (undo-tree-id5228 . -1) (undo-tree-id5230 . -1) (undo-tree-id5232 . -1) (undo-tree-id5234 . -1) (undo-tree-id5236 . -1) (undo-tree-id5238 . -1) (#(")" 0 1 (fontified t)) . -16612) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5243 . -1) (undo-tree-id5245 . -1) (undo-tree-id5247 . -1) (undo-tree-id5249 . -1) (undo-tree-id5251 . -1) 16613 (t 25968 35976 668204 880000)) ((16607 . 16613)) (25968 39152 852851 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -6078) (undo-tree-id13284 . -1) 6079) nil (25968 39872 99337 0) 0 nil])
([nil nil ((#("prop:" 0 4 (face font-lock-variable-name-face fontified t) 4 5 (fontified t)) . -16492) (undo-tree-id12171 . -5) (undo-tree-id12172 . -5) (undo-tree-id12173 . -5) (undo-tree-id12174 . -5) (undo-tree-id12175 . -5) (undo-tree-id12176 . -5) (undo-tree-id12177 . -5) (undo-tree-id12178 . -5) (undo-tree-id12179 . -5) (undo-tree-id12180 . -5) (undo-tree-id12181 . -5) (undo-tree-id12182 . -5) (undo-tree-id12183 . -5) (undo-tree-id12184 . -5) (undo-tree-id12185 . -5) (undo-tree-id12186 . -5) (undo-tree-id12187 . -5) (undo-tree-id12188 . -5) (undo-tree-id12189 . -5) (undo-tree-id12190 . -5) (undo-tree-id12191 . -5) (undo-tree-id12192 . -5) (undo-tree-id12193 . -5) (undo-tree-id12194 . -5) (undo-tree-id12195 . -5) (undo-tree-id12196 . -5) (undo-tree-id12197 . -5) (undo-tree-id12198 . -5) (undo-tree-id12199 . -5) (undo-tree-id12200 . -5) (undo-tree-id12201 . -5) (undo-tree-id12202 . -5) (undo-tree-id12203 . -5) (undo-tree-id12204 . -5) (undo-tree-id12205 . -5) (undo-tree-id12206 . -5) (undo-tree-id12207 . -5) (undo-tree-id12208 . -5) (undo-tree-id12209 . -5) (undo-tree-id12210 . -5) (undo-tree-id12211 . -5) (undo-tree-id12212 . -5) (undo-tree-id12213 . -5) (undo-tree-id12214 . -5) (undo-tree-id12215 . -5) (undo-tree-id12216 . -5) (undo-tree-id12217 . -5) (undo-tree-id12218 . -5) (undo-tree-id12219 . -5) (undo-tree-id12220 . -5) (undo-tree-id12221 . -5) (undo-tree-id12222 . -5) (undo-tree-id12223 . -5) (undo-tree-id12224 . -5) (undo-tree-id12225 . -5) (undo-tree-id12226 . -5) (undo-tree-id12227 . -5) (undo-tree-id12228 . -5) (undo-tree-id12229 . -5) (undo-tree-id12230 . -5) (undo-tree-id12231 . -5) (undo-tree-id12232 . -5) (undo-tree-id12233 . -5) (undo-tree-id12234 . -5) (undo-tree-id12235 . -5) (undo-tree-id12236 . -5) (undo-tree-id12237 . -5) (undo-tree-id12238 . -5) (undo-tree-id12239 . -5) (undo-tree-id12240 . -5) (undo-tree-id12241 . -5) (undo-tree-id12242 . -5) (undo-tree-id12243 . -5) (undo-tree-id12244 . -5) (undo-tree-id12245 . -5) (undo-tree-id12246 . -5) (undo-tree-id12247 . -5) (undo-tree-id12248 . -5) (undo-tree-id12249 . -5) (undo-tree-id12250 . -5) (undo-tree-id12251 . -5) (undo-tree-id12252 . -5) (undo-tree-id12253 . -5) (undo-tree-id12254 . -5) (undo-tree-id12255 . -5) (undo-tree-id12256 . -5) (undo-tree-id12257 . -5) (undo-tree-id12258 . -5) (undo-tree-id12259 . -5) (undo-tree-id12260 . -5) (undo-tree-id12261 . -5) (undo-tree-id12262 . -5) (undo-tree-id12263 . -5) (undo-tree-id12264 . -5) (undo-tree-id12265 . -5) (undo-tree-id12266 . -5) (undo-tree-id12267 . -5) (undo-tree-id12268 . -5) (undo-tree-id12269 . -5) (undo-tree-id12270 . -5) (undo-tree-id12271 . -5) (undo-tree-id12272 . -5) (undo-tree-id12273 . -5) (undo-tree-id12274 . -5) (undo-tree-id12275 . -5) (undo-tree-id12276 . -5) (undo-tree-id12277 . -5) (undo-tree-id12278 . -5) (undo-tree-id12279 . -5) (undo-tree-id12280 . -5) (undo-tree-id12281 . -5) (undo-tree-id12282 . -5) (undo-tree-id12283 . -5) (undo-tree-id12284 . -5) (undo-tree-id12285 . -5) (undo-tree-id12286 . -5) (undo-tree-id12287 . -5) (undo-tree-id12288 . -5) (undo-tree-id12289 . -5) (undo-tree-id12290 . -5) (undo-tree-id12291 . -5) (undo-tree-id12292 . -5) (undo-tree-id12293 . -5) (undo-tree-id12294 . -5) (undo-tree-id12295 . -5) (undo-tree-id12296 . -5) (undo-tree-id12297 . -5) (undo-tree-id12298 . -5) (undo-tree-id12299 . -5) (undo-tree-id12300 . -5) (undo-tree-id12301 . -5) (undo-tree-id12302 . -5) (undo-tree-id12303 . -5) (undo-tree-id12304 . -5) (undo-tree-id12305 . -5) (undo-tree-id12306 . -5) (undo-tree-id12307 . -5) (undo-tree-id12308 . -5) (undo-tree-id12309 . -5) (undo-tree-id12310 . -5) (undo-tree-id12311 . -5) (undo-tree-id12312 . -5) (undo-tree-id12313 . -5) (undo-tree-id12314 . -5) (undo-tree-id12315 . -5) (undo-tree-id12316 . -5) (undo-tree-id12317 . -5) (undo-tree-id12318 . -5) (undo-tree-id12319 . -5) (undo-tree-id12320 . -5) (undo-tree-id12321 . -5) (undo-tree-id12322 . -5) (undo-tree-id12323 . -5) (undo-tree-id12324 . -5) (undo-tree-id12325 . -5) 16497) ((16492 . 16497)) (25968 39806 209715 0) 0 nil])
([nil nil ((16607 . 16608)) ((#(" " 0 1 (fontified t)) . 16607)) (25968 39152 315884 0) 0 nil])
([nil nil ((6078 . 6080)) nil (25968 39872 99335 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16491) (undo-tree-id12013 . -1) (undo-tree-id12014 . -1) (undo-tree-id12015 . -1) (undo-tree-id12016 . -1) (undo-tree-id12017 . -1) (undo-tree-id12018 . -1) (undo-tree-id12019 . -1) (undo-tree-id12020 . -1) (undo-tree-id12021 . -1) (undo-tree-id12022 . -1) (undo-tree-id12023 . -1) (undo-tree-id12024 . -1) (undo-tree-id12025 . -1) (undo-tree-id12026 . -1) (undo-tree-id12027 . -1) (undo-tree-id12028 . -1) (undo-tree-id12029 . -1) (undo-tree-id12030 . -1) (undo-tree-id12031 . -1) (undo-tree-id12032 . -1) (undo-tree-id12033 . -1) (undo-tree-id12034 . -1) (undo-tree-id12035 . -1) (undo-tree-id12036 . -1) (undo-tree-id12037 . -1) (undo-tree-id12038 . -1) (undo-tree-id12039 . -1) (undo-tree-id12040 . -1) (undo-tree-id12041 . -1) (undo-tree-id12042 . -1) (undo-tree-id12043 . -1) (undo-tree-id12044 . -1) (undo-tree-id12045 . -1) (undo-tree-id12046 . -1) (undo-tree-id12047 . -1) (undo-tree-id12048 . -1) (undo-tree-id12049 . -1) (undo-tree-id12050 . -1) (undo-tree-id12051 . -1) (undo-tree-id12052 . -1) (undo-tree-id12053 . -1) (undo-tree-id12054 . -1) (undo-tree-id12055 . -1) (undo-tree-id12056 . -1) (undo-tree-id12057 . -1) (undo-tree-id12058 . -1) (undo-tree-id12059 . -1) (undo-tree-id12060 . -1) (undo-tree-id12061 . -1) (undo-tree-id12062 . -1) (undo-tree-id12063 . -1) (undo-tree-id12064 . -1) (undo-tree-id12065 . -1) (undo-tree-id12066 . -1) (undo-tree-id12067 . -1) (undo-tree-id12068 . -1) (undo-tree-id12069 . -1) (undo-tree-id12070 . -1) (undo-tree-id12071 . -1) (undo-tree-id12072 . -1) (undo-tree-id12073 . -1) (undo-tree-id12074 . -1) (undo-tree-id12075 . -1) (undo-tree-id12076 . -1) (undo-tree-id12077 . -1) (undo-tree-id12078 . -1) (undo-tree-id12079 . -1) (undo-tree-id12080 . -1) (undo-tree-id12081 . -1) (undo-tree-id12082 . -1) (undo-tree-id12083 . -1) (undo-tree-id12084 . -1) (undo-tree-id12085 . -1) (undo-tree-id12086 . -1) (undo-tree-id12087 . -1) (undo-tree-id12088 . -1) (undo-tree-id12089 . -1) (undo-tree-id12090 . -1) (undo-tree-id12091 . -1) (undo-tree-id12092 . -1) (undo-tree-id12093 . -1) (undo-tree-id12094 . -1) (undo-tree-id12095 . -1) (undo-tree-id12096 . -1) (undo-tree-id12097 . -1) (undo-tree-id12098 . -1) (undo-tree-id12099 . -1) (undo-tree-id12100 . -1) (undo-tree-id12101 . -1) (undo-tree-id12102 . -1) (undo-tree-id12103 . -1) (undo-tree-id12104 . -1) (undo-tree-id12105 . -1) (undo-tree-id12106 . -1) (undo-tree-id12107 . -1) (undo-tree-id12108 . -1) (undo-tree-id12109 . -1) (undo-tree-id12110 . -1) (undo-tree-id12111 . -1) (undo-tree-id12112 . -1) (undo-tree-id12113 . -1) (undo-tree-id12114 . -1) (undo-tree-id12115 . -1) (undo-tree-id12116 . -1) (undo-tree-id12117 . -1) (undo-tree-id12118 . -1) (undo-tree-id12119 . -1) (undo-tree-id12120 . -1) (undo-tree-id12121 . -1) (undo-tree-id12122 . -1) (undo-tree-id12123 . -1) (undo-tree-id12124 . -1) (undo-tree-id12125 . -1) (undo-tree-id12126 . -1) (undo-tree-id12127 . -1) (undo-tree-id12128 . -1) (undo-tree-id12129 . -1) (undo-tree-id12130 . -1) (undo-tree-id12131 . -1) (undo-tree-id12132 . -1) (undo-tree-id12133 . -1) (undo-tree-id12134 . -1) (undo-tree-id12135 . -1) (undo-tree-id12136 . -1) (undo-tree-id12137 . -1) (undo-tree-id12138 . -1) (undo-tree-id12139 . -1) (undo-tree-id12140 . -1) (undo-tree-id12141 . -1) (undo-tree-id12142 . -1) (undo-tree-id12143 . -1) (undo-tree-id12144 . -1) (undo-tree-id12145 . -1) (undo-tree-id12146 . -1) (undo-tree-id12147 . -1) (undo-tree-id12148 . -1) (undo-tree-id12149 . -1) (undo-tree-id12150 . -1) (undo-tree-id12151 . -1) (undo-tree-id12152 . -1) (undo-tree-id12153 . -1) (undo-tree-id12154 . -1) (undo-tree-id12155 . -1) (undo-tree-id12156 . -1) (undo-tree-id12157 . -1) (undo-tree-id12158 . -1) (undo-tree-id12159 . -1) (undo-tree-id12160 . -1) (undo-tree-id12161 . -1) (undo-tree-id12162 . -1) (undo-tree-id12163 . -1) (undo-tree-id12164 . -1) (undo-tree-id12165 . -1) (undo-tree-id12166 . -1) (undo-tree-id12167 . -1) (undo-tree-id12168 . -1) (undo-tree-id12169 . -1) (undo-tree-id12170 . -1) 16492) ((16491 . 16492) (t 25968 39797 92110 923000)) (25968 39797 58613 0) 0 nil])
([nil nil ((16607 . 16609)) ((#(".g" 0 1 (fontified t) 1 2 (fontified t)) . 16607) (undo-tree-id10886 . -2) (undo-tree-id10887 . -2) (undo-tree-id10888 . -1)) (25968 39152 128647 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6079) (undo-tree-id13283 . -1) 6080) nil (25968 39872 99334 0) 0 nil])
nil
([nil nil ((#("g" 0 1 (fontified t)) . -16608) (undo-tree-id5075 . -1) (undo-tree-id5077 . -1) 16609) ((16608 . 16609)) (25968 39152 45347 0) 0 nil])
([nil nil ((6079 . 6080)) nil (25968 39872 99331 0) 0 nil])
([nil nil ((16608 . 16609)) ((#("c" 0 1 (fontified t)) . 16608) (undo-tree-id10884 . -1) (undo-tree-id10885 . -1)) (25968 39151 987199 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -6079) (undo-tree-id13282 . -1) 6080) nil (25968 39872 99330 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -16608) (undo-tree-id5068 . -1) (undo-tree-id5070 . -1) (undo-tree-id5072 . -1) (undo-tree-id5074 . -1) 16609) ((16608 . 16609)) (25968 39151 917618 0) 0 nil])
([nil nil ((6079 . 6080)) nil (25968 39872 99328 0) 0 nil])
([nil nil ((16608 . 16609)) ((#("g" 0 1 (fontified t)) . 16608) (undo-tree-id10882 . -1) (undo-tree-id10883 . -1)) (25968 39151 378568 0) 0 nil])
([nil nil ((6079 . 6093) (#("k" 0 1 (fontified nil)) . 6079) (6074 . 6080) (#("keyboard_state" 0 14 (fontified nil)) . -6074) (6074 . 6088) (#("mode=k" 0 6 (fontified t)) . -6074) (undo-tree-id13281 . -6) 6080) nil (25968 39872 99327 0) 0 nil])
([nil nil ((apply yas--snippet-revive 16608 16613 #s(yas--snippet nil nil #s(yas--exit #<marker at 19212 in component.rs> nil) 43 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 19212 in component.rs> nil) 43 nil nil nil nil)) (16608 . 16613) (#("get()$0" 0 7 (fontified nil)) . 16608) (16608 . 16615) (#("g" 0 1 (fontified nil)) . 16608) (16608 . 16609) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -16608) (16608 . 16628) (#("g" 0 1 (fontified t)) . -16608) (undo-tree-id5061 . -1) (undo-tree-id5063 . -1) (undo-tree-id5065 . -1) (undo-tree-id5067 . -1) 16609) ((16608 . 16609) (#("get() (as SignalGet)" 0 20 (fontified nil)) . 16608) (16608 . 16628) (#("g" 0 1 (fontified nil)) . 16608) (16608 . 16609) (#("get()$0" 0 7 (fontified nil)) . 16608) (16608 . 16615) (#("get()" 0 5 (fontified t)) . 16608) (undo-tree-id10881 . -5)) (25968 39151 267288 0) 0 nil])
([nil nil ((6093 . 6095)) nil (25968 39872 99323 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16613) (undo-tree-id5052 . -1) (undo-tree-id5054 . -1) (undo-tree-id5056 . -1) (undo-tree-id5058 . -1) (undo-tree-id5060 . -1) 16614) ((16613 . 16614)) (25968 39151 184290 0) 0 nil])
([nil nil ((apply yas--snippet-revive 6094 6099 #s(yas--snippet nil nil #s(yas--exit 6099 nil) 67 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 6099 nil) 67 nil nil nil nil)) (6094 . 6099) (#("get()$0" 0 7 (fontified nil)) . 6094) (6094 . 6101) (#("g" 0 1 (fontified nil)) . 6094) (6094 . 6095) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -6094) (6094 . 6114) (#("g" 0 1 (fontified t)) . -6094) (undo-tree-id13278 . -1) (undo-tree-id13279 . -1) (undo-tree-id13280 . -1) 6095) nil (25968 39872 99321 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -16618) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5274 . -1) (undo-tree-id5276 . -1) (undo-tree-id5278 . -1) (undo-tree-id5280 . -1) (undo-tree-id5282 . -1) (undo-tree-id5284 . -1) (undo-tree-id5286 . -1) (undo-tree-id5288 . -1) (undo-tree-id5290 . -1) (undo-tree-id5292 . -1) (undo-tree-id5294 . -1) (undo-tree-id5296 . -1) (undo-tree-id5298 . -1) (undo-tree-id5300 . -1) (undo-tree-id5302 . -1) (undo-tree-id5304 . -1) (undo-tree-id5306 . -1) (undo-tree-id5308 . -1) (undo-tree-id5310 . -1) (#("a" 0 1 (fontified t)) . -16619) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5314 . -1) (undo-tree-id5316 . -1) (undo-tree-id5318 . -1) (undo-tree-id5320 . -1) (undo-tree-id5322 . -1) (undo-tree-id5324 . -1) (undo-tree-id5326 . -1) (undo-tree-id5328 . -1) (undo-tree-id5330 . -1) (undo-tree-id5332 . -1) (undo-tree-id5334 . -1) (undo-tree-id5336 . -1) (undo-tree-id5338 . -1) (undo-tree-id5340 . -1) (undo-tree-id5342 . -1) (undo-tree-id5344 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -16620) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5349 . -1) (undo-tree-id5351 . -1) (undo-tree-id5353 . -1) (undo-tree-id5355 . -1) (undo-tree-id5357 . -1) (undo-tree-id5359 . -1) (undo-tree-id5361 . -1) (undo-tree-id5363 . -1) (undo-tree-id5365 . -1) (undo-tree-id5367 . -1) (undo-tree-id5369 . -1) (undo-tree-id5371 . -1) (undo-tree-id5373 . -1) (undo-tree-id5375 . -1) (undo-tree-id5377 . -1) (undo-tree-id5379 . -1) (#("_" 0 1 (fontified t)) . -16621) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5383 . -1) (undo-tree-id5385 . -1) (undo-tree-id5387 . -1) (undo-tree-id5389 . -1) (undo-tree-id5391 . -1) (undo-tree-id5393 . -1) (undo-tree-id5395 . -1) (undo-tree-id5397 . -1) (undo-tree-id5399 . -1) (undo-tree-id5401 . -1) (undo-tree-id5403 . -1) (undo-tree-id5405 . -1) (undo-tree-id5407 . -1) (undo-tree-id5409 . -1) (undo-tree-id5411 . -1) (#("s" 0 1 (fontified t)) . -16622) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5416 . -1) (undo-tree-id5418 . -1) (undo-tree-id5420 . -1) (undo-tree-id5422 . -1) (undo-tree-id5424 . -1) (undo-tree-id5426 . -1) (undo-tree-id5428 . -1) (undo-tree-id5430 . -1) (undo-tree-id5432 . -1) (undo-tree-id5434 . -1) (undo-tree-id5436 . -1) (undo-tree-id5438 . -1) (undo-tree-id5440 . -1) (undo-tree-id5442 . -1) (undo-tree-id5444 . -1) (#("t" 0 1 (fontified t)) . -16623) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5448 . -1) (undo-tree-id5450 . -1) (undo-tree-id5452 . -1) (undo-tree-id5454 . -1) (undo-tree-id5456 . -1) (undo-tree-id5458 . -1) (undo-tree-id5460 . -1) (undo-tree-id5462 . -1) (undo-tree-id5464 . -1) (undo-tree-id5466 . -1) (undo-tree-id5468 . -1) (undo-tree-id5470 . -1) (undo-tree-id5472 . -1) (undo-tree-id5474 . -1) (#("r" 0 1 (fontified t)) . -16624) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5479 . -1) (undo-tree-id5481 . -1) (undo-tree-id5483 . -1) (undo-tree-id5485 . -1) (undo-tree-id5487 . -1) (undo-tree-id5489 . -1) (undo-tree-id5491 . -1) (undo-tree-id5493 . -1) (undo-tree-id5495 . -1) (undo-tree-id5497 . -1) (undo-tree-id5499 . -1) (undo-tree-id5501 . -1) (#("(" 0 1 (fontified t)) . -16625) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5505 . -1) (undo-tree-id5507 . -1) (undo-tree-id5509 . -1) (undo-tree-id5511 . -1) (undo-tree-id5513 . -1) (undo-tree-id5515 . -1) (undo-tree-id5517 . -1) (undo-tree-id5519 . -1) (undo-tree-id5521 . -1) (undo-tree-id5523 . -1) (undo-tree-id5525 . -1) (#(")" 0 1 (fontified t)) . -16626) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5530 . -1) (undo-tree-id5532 . -1) (undo-tree-id5534 . -1) (undo-tree-id5536 . -1) (undo-tree-id5538 . -1) (undo-tree-id5540 . -1) (undo-tree-id5542 . -1) 16627 (t 25968 36096 464535 905000)) ((16618 . 16627)) (25968 39151 99642 0) 0 nil])
([nil nil ((6099 . 6102)) nil (25968 39872 99314 0) 0 nil])
([nil nil ((16618 . 16622)) ((#(".str" 0 1 (fontified t) 1 4 (face font-lock-type-face fontified t)) . 16618) (undo-tree-id10876 . -4) (undo-tree-id10877 . -4) (undo-tree-id10878 . -1) (undo-tree-id10879 . -1) (undo-tree-id10880 . -1)) (25968 39151 17143 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -6100) (undo-tree-id13251 . -1) (undo-tree-id13252 . -1) (undo-tree-id13253 . -1) (undo-tree-id13254 . -1) (undo-tree-id13255 . -1) (undo-tree-id13256 . -1) (undo-tree-id13257 . -1) (undo-tree-id13258 . -1) (undo-tree-id13259 . -1) (undo-tree-id13260 . -1) (undo-tree-id13261 . -1) (undo-tree-id13262 . -1) (undo-tree-id13263 . -1) (undo-tree-id13264 . -1) (undo-tree-id13265 . -1) (#("k" 0 1 (fontified t)) . -6101) (undo-tree-id13266 . -1) (undo-tree-id13267 . -1) (undo-tree-id13268 . -1) (undo-tree-id13269 . -1) (undo-tree-id13270 . -1) (undo-tree-id13271 . -1) (undo-tree-id13272 . -1) (undo-tree-id13273 . -1) (undo-tree-id13274 . -1) (undo-tree-id13275 . -1) (undo-tree-id13276 . -1) (undo-tree-id13277 . -1) 6102) nil (25968 39872 99311 0) 0 nil])
([nil nil ((apply yas--snippet-revive 16619 16630 #s(yas--snippet nil nil #s(yas--exit #<marker at 19216 in component.rs> nil) 44 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 19216 in component.rs> nil) 44 nil nil nil nil)) (16619 . 16630) (#("to_string()$0" 0 13 (fontified nil)) . 16619) (16619 . 16632) (#("str" 0 3 (fontified nil)) . 16619) (16619 . 16622) (#("to_string() (as ToString)" 0 25 (fontified nil)) . -16619) (16619 . 16644) (#("str" 0 3 (face font-lock-type-face fontified t)) . -16619) (undo-tree-id5257 . -3) (undo-tree-id5258 . -3) (undo-tree-id5260 . -1) (undo-tree-id5262 . -2) (undo-tree-id5264 . -3) (undo-tree-id5266 . -3) (undo-tree-id5268 . -3) (undo-tree-id5270 . -3) 16622) ((16619 . 16622) (#("to_string() (as ToString)" 0 25 (fontified nil)) . 16619) (16619 . 16644) (#("str" 0 3 (fontified nil)) . 16619) (16619 . 16622) (#("to_string()$0" 0 13 (fontified nil)) . 16619) (16619 . 16632) (#("to_string()" 0 7 (fontified t) 7 11 (fontified t)) . 16619) (undo-tree-id10871 . -11) (undo-tree-id10872 . -11) (undo-tree-id10873 . -11) (undo-tree-id10874 . -11) (undo-tree-id10875 . -11)) (25968 39150 932632 0) 0 nil])
([nil nil ((6100 . 6101)) nil (25968 39872 99282 0) 0 nil])
([nil nil ((16630 . 16632)) ((#(".a" 0 1 (fontified t) 1 2 (fontified t)) . 16630) (undo-tree-id10868 . -2) (undo-tree-id10869 . -2) (undo-tree-id10870 . -1)) (25968 39150 849918 0) 0 nil])
([nil nil ((6100 . 6104) (#("k" 0 1 (fontified nil)) . 6100) (6100 . 6101) (#("keys" 0 4 (fontified nil)) . -6100) (6100 . 6104) (#("k" 0 1 (fontified t)) . -6100) (undo-tree-id13249 . -1) (undo-tree-id13250 . -1) 6101) nil (25968 39872 99280 0) 0 nil])
([nil nil ((apply yas--snippet-revive 16631 16639 #s(yas--snippet nil nil #s(yas--exit #<marker at 19216 in component.rs> nil) 45 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 19216 in component.rs> nil) 45 nil nil nil nil)) (16631 . 16639) (#("as_str()$0" 0 10 (fontified nil)) . 16631) (16631 . 16641) (#("a" 0 1 (fontified nil)) . 16631) (16631 . 16632) (#("as_str()" 0 8 (fontified nil)) . -16631) (16631 . 16639) (#("a" 0 1 (fontified t)) . -16631) (undo-tree-id5252 . -1) (undo-tree-id5254 . -1) (undo-tree-id5256 . -1) 16632) ((16631 . 16632) (#("as_str()" 0 8 (fontified nil)) . 16631) (16631 . 16639) (#("a" 0 1 (fontified nil)) . 16631) (16631 . 16632) (#("as_str()$0" 0 10 (fontified nil)) . 16631) (16631 . 16641) (#("as_str()" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 16631) (undo-tree-id10865 . -8) (undo-tree-id10866 . -8) (undo-tree-id10867 . -8)) (25968 39150 767691 0) 0 nil])
([nil nil ((6104 . 6106)) nil (25968 39872 99276 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -16630) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5546 . -1) (undo-tree-id5548 . -1) (undo-tree-id5550 . -1) (undo-tree-id5552 . -1) (undo-tree-id5554 . -1) (undo-tree-id5556 . -1) (undo-tree-id5558 . -1) (undo-tree-id5560 . -1) (undo-tree-id5562 . -1) (undo-tree-id5564 . -1) (undo-tree-id5566 . -1) (undo-tree-id5568 . -1) (undo-tree-id5570 . -1) (undo-tree-id5572 . -1) (undo-tree-id5574 . -1) (undo-tree-id5576 . -1) (undo-tree-id5578 . -1) (undo-tree-id5580 . -1) (undo-tree-id5582 . -1) (undo-tree-id5584 . -1) (undo-tree-id5586 . -1) (undo-tree-id5588 . -1) (undo-tree-id5590 . -1) (undo-tree-id5592 . -1) (undo-tree-id5594 . -1) (undo-tree-id5596 . -1) (undo-tree-id5598 . -1) (undo-tree-id5600 . -1) (undo-tree-id5602 . -1) (undo-tree-id5604 . -1) (undo-tree-id5606 . -1) (#("a" 0 1 (fontified t)) . -16631) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5610 . -1) (undo-tree-id5612 . -1) (undo-tree-id5614 . -1) (undo-tree-id5616 . -1) (undo-tree-id5618 . -1) (undo-tree-id5620 . -1) (undo-tree-id5622 . -1) (undo-tree-id5624 . -1) (undo-tree-id5626 . -1) (undo-tree-id5628 . -1) (undo-tree-id5630 . -1) (undo-tree-id5632 . -1) (undo-tree-id5634 . -1) (undo-tree-id5636 . -1) (undo-tree-id5638 . -1) (undo-tree-id5640 . -1) (undo-tree-id5642 . -1) (undo-tree-id5644 . -1) (undo-tree-id5646 . -1) (undo-tree-id5648 . -1) (undo-tree-id5650 . -1) (undo-tree-id5652 . -1) (undo-tree-id5654 . -1) (undo-tree-id5656 . -1) (undo-tree-id5658 . -1) (undo-tree-id5660 . -1) (undo-tree-id5662 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -16632) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5667 . -1) (undo-tree-id5669 . -1) (undo-tree-id5671 . -1) (undo-tree-id5673 . -1) (undo-tree-id5675 . -1) (undo-tree-id5677 . -1) (undo-tree-id5679 . -1) (undo-tree-id5681 . -1) (undo-tree-id5683 . -1) (undo-tree-id5685 . -1) (undo-tree-id5687 . -1) (undo-tree-id5689 . -1) (undo-tree-id5691 . -1) (undo-tree-id5693 . -1) (undo-tree-id5695 . -1) (undo-tree-id5697 . -1) (undo-tree-id5699 . -1) (undo-tree-id5701 . -1) (undo-tree-id5703 . -1) (undo-tree-id5705 . -1) (undo-tree-id5707 . -1) (undo-tree-id5709 . -1) (undo-tree-id5711 . -1) (undo-tree-id5713 . -1) (undo-tree-id5715 . -1) (undo-tree-id5717 . -1) (undo-tree-id5719 . -1) (#("_" 0 1 (fontified t)) . -16633) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5723 . -1) (undo-tree-id5725 . -1) (undo-tree-id5727 . -1) (undo-tree-id5729 . -1) (undo-tree-id5731 . -1) (undo-tree-id5733 . -1) (undo-tree-id5735 . -1) (undo-tree-id5737 . -1) (undo-tree-id5739 . -1) (undo-tree-id5741 . -1) (undo-tree-id5743 . -1) (undo-tree-id5745 . -1) (undo-tree-id5747 . -1) (undo-tree-id5749 . -1) (undo-tree-id5751 . -1) (undo-tree-id5753 . -1) (undo-tree-id5755 . -1) (undo-tree-id5757 . -1) (undo-tree-id5759 . -1) (undo-tree-id5761 . -1) (undo-tree-id5763 . -1) (undo-tree-id5765 . -1) (undo-tree-id5767 . -1) (undo-tree-id5769 . -1) (undo-tree-id5771 . -1) (undo-tree-id5773 . -1) (#("s" 0 1 (fontified t)) . -16634) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5778 . -1) (undo-tree-id5780 . -1) (undo-tree-id5782 . -1) (undo-tree-id5784 . -1) (undo-tree-id5786 . -1) (undo-tree-id5788 . -1) (undo-tree-id5790 . -1) (undo-tree-id5792 . -1) (undo-tree-id5794 . -1) (undo-tree-id5796 . -1) (undo-tree-id5798 . -1) (undo-tree-id5800 . -1) (undo-tree-id5802 . -1) (undo-tree-id5804 . -1) (undo-tree-id5806 . -1) (undo-tree-id5808 . -1) (undo-tree-id5810 . -1) (undo-tree-id5812 . -1) (undo-tree-id5814 . -1) (undo-tree-id5816 . -1) (undo-tree-id5818 . -1) (undo-tree-id5820 . -1) (undo-tree-id5822 . -1) (undo-tree-id5824 . -1) (undo-tree-id5826 . -1) (undo-tree-id5828 . -1) (#("t" 0 1 (fontified t)) . -16635) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5832 . -1) (undo-tree-id5834 . -1) (undo-tree-id5836 . -1) (undo-tree-id5838 . -1) (undo-tree-id5840 . -1) (undo-tree-id5842 . -1) (undo-tree-id5844 . -1) (undo-tree-id5846 . -1) (undo-tree-id5848 . -1) (undo-tree-id5850 . -1) (undo-tree-id5852 . -1) (undo-tree-id5854 . -1) (undo-tree-id5856 . -1) (undo-tree-id5858 . -1) (undo-tree-id5860 . -1) (undo-tree-id5862 . -1) (undo-tree-id5864 . -1) (undo-tree-id5866 . -1) (undo-tree-id5868 . -1) (undo-tree-id5870 . -1) (undo-tree-id5872 . -1) (undo-tree-id5874 . -1) (undo-tree-id5876 . -1) (undo-tree-id5878 . -1) (undo-tree-id5880 . -1) (#("r" 0 1 (fontified t)) . -16636) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5885 . -1) (undo-tree-id5887 . -1) (undo-tree-id5889 . -1) (undo-tree-id5891 . -1) (undo-tree-id5893 . -1) (undo-tree-id5895 . -1) (undo-tree-id5897 . -1) (undo-tree-id5899 . -1) (undo-tree-id5901 . -1) (undo-tree-id5903 . -1) (undo-tree-id5905 . -1) (undo-tree-id5907 . -1) (undo-tree-id5909 . -1) (undo-tree-id5911 . -1) (undo-tree-id5913 . -1) (undo-tree-id5915 . -1) (undo-tree-id5917 . -1) (undo-tree-id5919 . -1) (undo-tree-id5921 . -1) (undo-tree-id5923 . -1) (undo-tree-id5925 . -1) (undo-tree-id5927 . -1) (undo-tree-id5929 . -1) (undo-tree-id5931 . -1) (undo-tree-id5933 . -1) (#("(" 0 1 (fontified t)) . -16637) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5937 . -1) (undo-tree-id5939 . -1) (undo-tree-id5941 . -1) (undo-tree-id5943 . -1) (undo-tree-id5945 . -1) (undo-tree-id5947 . -1) (undo-tree-id5949 . -1) (undo-tree-id5951 . -1) (undo-tree-id5953 . -1) (undo-tree-id5955 . -1) (undo-tree-id5957 . -1) (undo-tree-id5959 . -1) (undo-tree-id5961 . -1) (undo-tree-id5963 . -1) (undo-tree-id5965 . -1) (undo-tree-id5967 . -1) (undo-tree-id5969 . -1) (undo-tree-id5971 . -1) (undo-tree-id5973 . -1) (undo-tree-id5975 . -1) (undo-tree-id5977 . -1) (undo-tree-id5979 . -1) (undo-tree-id5981 . -1) (undo-tree-id5983 . -1) (#(")" 0 1 (fontified t)) . -16638) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5988 . -1) (undo-tree-id5990 . -1) (undo-tree-id5992 . -1) (undo-tree-id5994 . -1) (undo-tree-id5996 . -1) (undo-tree-id5998 . -1) (undo-tree-id6000 . -1) (undo-tree-id6002 . -1) (undo-tree-id6004 . -1) (undo-tree-id6006 . -1) (undo-tree-id6008 . -1) (undo-tree-id6010 . -1) (undo-tree-id6012 . -1) (undo-tree-id6014 . -1) (undo-tree-id6016 . -1) (undo-tree-id6018 . -1) (undo-tree-id6020 . -1) (undo-tree-id6022 . -1) (undo-tree-id6024 . -1) 16639 (t 25968 36116 294858 751000)) ((16630 . 16639)) (25968 39150 683102 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -6104) (undo-tree-id13218 . -1) (undo-tree-id13219 . -1) (undo-tree-id13220 . -1) (undo-tree-id13221 . -1) (undo-tree-id13222 . -1) (undo-tree-id13223 . -1) (undo-tree-id13224 . -1) (undo-tree-id13225 . -1) (undo-tree-id13226 . -1) (undo-tree-id13227 . -1) (undo-tree-id13228 . -1) (undo-tree-id13229 . -1) (undo-tree-id13230 . -1) (undo-tree-id13231 . -1) (undo-tree-id13232 . -1) (undo-tree-id13233 . -1) (undo-tree-id13234 . -1) (undo-tree-id13235 . -1) (undo-tree-id13236 . -1) (undo-tree-id13237 . -1) (undo-tree-id13238 . -1) (undo-tree-id13239 . -1) (#("[" 0 1 (fontified t)) . -6105) (undo-tree-id13240 . -1) (undo-tree-id13241 . -1) (undo-tree-id13242 . -1) (undo-tree-id13243 . -1) (undo-tree-id13244 . -1) (undo-tree-id13245 . -1) (undo-tree-id13246 . -1) (undo-tree-id13247 . -1) (undo-tree-id13248 . -1) 6106) nil (25968 39872 99273 0) 0 nil])
([nil nil ((16630 . 16632) (t 25968 36125 665032 95000)) ((#("/a" 0 1 (fontified t) 1 2 (fontified t)) . 16630) (undo-tree-id10863 . -2) (undo-tree-id10864 . -2)) (25968 39150 599696 0) 0 nil])
([nil nil ((6104 . 6106)) nil (25968 39872 99235 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -16630) (undo-tree-id6056 . -1) (undo-tree-id6058 . -1) (undo-tree-id6060 . -1) (#("a" 0 1 (fontified t)) . -16631) (undo-tree-id6061 . -1) 16632) ((16630 . 16632)) (25968 39150 516270 0) 0 nil])
([nil nil ((6105 . 6110)) nil (25968 39872 99234 0) 0 nil])
([nil nil ((16630 . 16633)) ((#(".as" 0 1 (fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t)) . 16630) (undo-tree-id10860 . -3) (undo-tree-id10861 . -3) (undo-tree-id10862 . -1)) (25968 39150 433569 0) 0 nil])
([nil nil ((6111 . 6113)) nil (25968 39872 99233 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -16631) (undo-tree-id6040 . -1) (undo-tree-id6042 . -1) (undo-tree-id6044 . -1) (undo-tree-id6046 . -1) (undo-tree-id6048 . -1) (undo-tree-id6050 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -16632) (undo-tree-id6051 . -1) (undo-tree-id6053 . -1) (undo-tree-id6055 . -1) 16633) ((16631 . 16633)) (25968 39150 349076 0) 0 nil])
([nil nil ((6112 . 6116) (#("m" 0 1 (fontified nil)) . 6112) (6112 . 6113) (#("mode" 0 4 (fontified nil)) . -6112) (6112 . 6116) (#("m" 0 1 (fontified t)) . -6112) (undo-tree-id13213 . -1) (undo-tree-id13214 . -1) (undo-tree-id13215 . -1) (undo-tree-id13216 . -1) (undo-tree-id13217 . -1) 6113) nil (25968 39872 99230 0) 0 nil])
([nil nil ((16631 . 16632)) ((#("a" 0 1 (fontified t)) . 16631) (undo-tree-id10858 . -1) (undo-tree-id10859 . -1)) (25968 39150 266487 0) 0 nil])
([nil nil ((6116 . 6117)) nil (25968 39872 99211 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -16631) (undo-tree-id6038 . -1) 16632) ((16631 . 16632)) (25968 39150 182981 0) 0 nil])
([nil nil ((11136 . 11141) (#("	    " 0 5 (fontified nil)) . 11135) (undo-tree-id13443 . -5) (11134 . 11141) (t 25968 39872 133470 708000)) nil (25968 40033 321076 0) 0 nil])
([nil nil ((16631 . 16632)) ((#("s" 0 1 (fontified t)) . 16631) (undo-tree-id10856 . -1) (undo-tree-id10857 . -1)) (25968 39150 99604 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11812 . 11813) (nil fontified nil 11791 . 11813) (nil fontified nil 11786 . 11791) (nil fontified nil 11777 . 11786) (nil fontified nil 11773 . 11777) (nil fontified nil 11747 . 11773) (nil fontified nil 11743 . 11747) (nil fontified nil 11720 . 11743) (nil fontified nil 11719 . 11720) (nil fontified nil 11702 . 11719) (nil fontified nil 11700 . 11702) (nil fontified nil 11696 . 11700) (nil fontified nil 11686 . 11696) (nil fontified nil 11684 . 11686) (nil fontified nil 11677 . 11684) (nil fontified nil 11675 . 11677) (nil fontified nil 11661 . 11675) (nil fontified nil 11660 . 11661) (nil fontified nil 11652 . 11660) (nil fontified nil 11626 . 11652) (nil fontified nil 11618 . 11626) (nil fontified nil 11586 . 11618) (nil fontified nil 11585 . 11586) (nil fontified nil 11539 . 11585) (nil fontified nil 11537 . 11539) (nil fontified nil 11536 . 11537) (nil fontified nil 11533 . 11536) (nil fontified nil 11532 . 11533) (nil fontified nil 11530 . 11532) (nil fontified nil 11520 . 11530) (nil fontified nil 11518 . 11520) (nil fontified nil 11517 . 11518) (nil fontified nil 11515 . 11517) (nil fontified nil 11468 . 11515) (nil fontified nil 11466 . 11468) (nil fontified nil 11465 . 11466) (nil fontified nil 11463 . 11465) (nil fontified nil 11416 . 11463) (nil fontified nil 11414 . 11416) (nil fontified nil 11413 . 11414) (nil fontified nil 11411 . 11413) (nil fontified nil 11363 . 11411) (nil fontified nil 11361 . 11363) (nil fontified nil 11360 . 11361) (nil fontified nil 11358 . 11360) (nil fontified nil 11354 . 11358) (nil fontified nil 11353 . 11354) (nil fontified nil 11352 . 11353) (nil fontified nil 11334 . 11352) (nil fontified nil 11332 . 11334) (nil fontified nil 11331 . 11332) (nil fontified nil 11329 . 11331) (nil fontified nil 11275 . 11329) (nil fontified nil 11273 . 11275) (nil fontified nil 11272 . 11273) (nil fontified nil 11271 . 11272) (nil fontified nil 11270 . 11271) (nil fontified nil 11267 . 11270) (nil fontified nil 11262 . 11267) (nil fontified nil 11260 . 11262) (nil fontified nil 11259 . 11260) (nil fontified nil 11257 . 11259) (nil fontified nil 11170 . 11257) (nil fontified nil 11168 . 11170) (nil fontified nil 11150 . 11168) (nil fontified nil 11147 . 11150) (nil fontified nil 11141 . 11147) (11141 . 11813)) nil (25968 40033 321070 0) 0 nil])
([nil nil ((16632 . 16634)) ((#("tr" 0 2 (face font-lock-type-face fontified t)) . 16632) (undo-tree-id10854 . -2) (undo-tree-id10855 . -2)) (25968 39150 17190 0) 0 nil])
([nil nil ((#("	    " 0 5 (fontified nil)) . -11788) (11788 . 11789) (#("	" 0 1 (fontified nil)) . 11788) (11784 . 11788) (#("	" 0 1 (fontified t)) . -11782) (#("	" 0 1 (fontified t)) . -11779) (#("	" 0 1 (fontified t)) . -11775) (#("	    " 0 5 (fontified nil)) . -11766) (11766 . 11767) (#("	" 0 1 (fontified nil)) . 11766) (11762 . 11766) (#("	    " 0 5 (fontified nil)) . -11738) (11738 . 11739) (#("	" 0 1 (fontified nil)) . 11738) (11734 . 11738) (#("	" 0 1 (fontified t)) . -11723) (#("	    " 0 5 (fontified nil)) . -11635) (11635 . 11636) (#("	" 0 1 (fontified nil)) . 11635) (11631 . 11635) (#("	    " 0 5 (fontified nil)) . -11596) (11596 . 11597) (#("	" 0 1 (fontified nil)) . 11596) (11592 . 11596) (#("	" 0 1 (fontified t)) . -11515) (#("	" 0 1 (fontified t)) . -11511) (#("	    " 0 5 (fontified nil)) . -11464) (11464 . 11465) (#("	" 0 1 (fontified nil)) . 11464) (11460 . 11464) (#("	    " 0 5 (fontified nil)) . -11413) (11413 . 11414) (#("	" 0 1 (fontified nil)) . 11413) (11409 . 11413) (#("	    " 0 5 (fontified nil)) . -11362) (11362 . 11363) (#("	" 0 1 (fontified nil)) . 11362) (11358 . 11362) (#("	    " 0 5 (fontified nil)) . -11281) (11281 . 11282) (#("	" 0 1 (fontified nil)) . 11281) (11277 . 11281) (#("	" 0 1 (fontified t)) . -11258) (#("	" 0 1 (fontified t)) . -11226) (#("	" 0 1 (fontified t)) . -11207) (#("		    " 0 6 (fontified t)) . -11141) 11136) nil (25968 40033 321046 0) 0 nil])
([nil nil ((apply yas--snippet-revive 16631 16639 #s(yas--snippet nil nil #s(yas--exit #<marker at 19216 in component.rs> nil) 46 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 19216 in component.rs> nil) 46 nil nil nil nil)) (16631 . 16639) (#("as_str()$0" 0 10 (fontified nil)) . 16631) (16631 . 16641) (#("str" 0 3 (fontified nil)) . 16631) (16631 . 16634) (#("as_str()" 0 8 (fontified nil)) . -16631) (16631 . 16639) (#("str" 0 3 (face font-lock-type-face fontified t)) . -16631) (undo-tree-id6025 . -3) (undo-tree-id6027 . -1) (undo-tree-id6029 . -1) (undo-tree-id6031 . -2) (undo-tree-id6033 . -2) (undo-tree-id6035 . -3) (undo-tree-id6037 . -3) 16634) ((16631 . 16634) (#("as_str()" 0 8 (fontified nil)) . 16631) (16631 . 16639) (#("str" 0 3 (fontified nil)) . 16631) (16631 . 16634) (#("as_str()$0" 0 10 (fontified nil)) . 16631) (16631 . 16641) (#("as_str()" 0 8 (fontified t)) . 16631) (undo-tree-id10853 . -8)) (25968 39149 933030 0) 0 nil])
([nil nil ((#("lock" 0 4 (fontified t)) . -11171) (undo-tree-id13427 . -4) (undo-tree-id13428 . -4) (undo-tree-id13429 . -4) (undo-tree-id13430 . -4) (undo-tree-id13431 . -4) (undo-tree-id13432 . -4) (undo-tree-id13433 . -4) (undo-tree-id13434 . -4) (undo-tree-id13435 . -4) (undo-tree-id13436 . -4) (undo-tree-id13437 . -4) (undo-tree-id13438 . -4) (undo-tree-id13439 . -4) (undo-tree-id13440 . -4) (undo-tree-id13441 . -4) (undo-tree-id13442 . -4) 11175) nil (25968 40033 321033 0) 0 nil])
([nil nil ((16895 . 16896) (t 25968 36137 947643 358000)) ((#("s" 0 1 (fontified t)) . 16895) (undo-tree-id10851 . -1) (undo-tree-id10852 . -1)) (25968 39149 849099 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -11165) (undo-tree-id13298 . -1) (undo-tree-id13299 . -1) (undo-tree-id13300 . -1) (undo-tree-id13301 . -1) (undo-tree-id13302 . -1) (undo-tree-id13303 . -1) (undo-tree-id13304 . -1) (undo-tree-id13305 . -1) (undo-tree-id13306 . -1) (undo-tree-id13307 . -1) (undo-tree-id13308 . -1) (undo-tree-id13309 . -1) (undo-tree-id13310 . -1) (undo-tree-id13311 . -1) (undo-tree-id13312 . -1) (undo-tree-id13313 . -1) (undo-tree-id13314 . -1) (undo-tree-id13315 . -1) (undo-tree-id13316 . -1) (undo-tree-id13317 . -1) (undo-tree-id13318 . -1) (undo-tree-id13319 . -1) (undo-tree-id13320 . -1) (undo-tree-id13321 . -1) (#("t" 0 1 (fontified t)) . -11166) (undo-tree-id13322 . -1) (undo-tree-id13323 . -1) (undo-tree-id13324 . -1) (undo-tree-id13325 . -1) (undo-tree-id13326 . -1) (undo-tree-id13327 . -1) (undo-tree-id13328 . -1) (undo-tree-id13329 . -1) (undo-tree-id13330 . -1) (undo-tree-id13331 . -1) (undo-tree-id13332 . -1) (undo-tree-id13333 . -1) (undo-tree-id13334 . -1) (undo-tree-id13335 . -1) (undo-tree-id13336 . -1) (undo-tree-id13337 . -1) (undo-tree-id13338 . -1) (undo-tree-id13339 . -1) (undo-tree-id13340 . -1) (undo-tree-id13341 . -1) (undo-tree-id13342 . -1) (undo-tree-id13343 . -1) (undo-tree-id13344 . -1) (#("a" 0 1 (fontified t)) . -11167) (undo-tree-id13345 . -1) (undo-tree-id13346 . -1) (undo-tree-id13347 . -1) (undo-tree-id13348 . -1) (undo-tree-id13349 . -1) (undo-tree-id13350 . -1) (undo-tree-id13351 . -1) (undo-tree-id13352 . -1) (undo-tree-id13353 . -1) (undo-tree-id13354 . -1) (undo-tree-id13355 . -1) (undo-tree-id13356 . -1) (undo-tree-id13357 . -1) (undo-tree-id13358 . -1) (undo-tree-id13359 . -1) (undo-tree-id13360 . -1) (undo-tree-id13361 . -1) (undo-tree-id13362 . -1) (undo-tree-id13363 . -1) (undo-tree-id13364 . -1) (undo-tree-id13365 . -1) (undo-tree-id13366 . -1) (#("t" 0 1 (fontified t)) . -11168) (undo-tree-id13367 . -1) (undo-tree-id13368 . -1) (undo-tree-id13369 . -1) (undo-tree-id13370 . -1) (undo-tree-id13371 . -1) (undo-tree-id13372 . -1) (undo-tree-id13373 . -1) (undo-tree-id13374 . -1) (undo-tree-id13375 . -1) (undo-tree-id13376 . -1) (undo-tree-id13377 . -1) (undo-tree-id13378 . -1) (undo-tree-id13379 . -1) (undo-tree-id13380 . -1) (undo-tree-id13381 . -1) (undo-tree-id13382 . -1) (undo-tree-id13383 . -1) (undo-tree-id13384 . -1) (undo-tree-id13385 . -1) (undo-tree-id13386 . -1) (undo-tree-id13387 . -1) (#("e" 0 1 (fontified t)) . -11169) (undo-tree-id13388 . -1) (undo-tree-id13389 . -1) (undo-tree-id13390 . -1) (undo-tree-id13391 . -1) (undo-tree-id13392 . -1) (undo-tree-id13393 . -1) (undo-tree-id13394 . -1) (undo-tree-id13395 . -1) (undo-tree-id13396 . -1) (undo-tree-id13397 . -1) (undo-tree-id13398 . -1) (undo-tree-id13399 . -1) (undo-tree-id13400 . -1) (undo-tree-id13401 . -1) (undo-tree-id13402 . -1) (undo-tree-id13403 . -1) (undo-tree-id13404 . -1) (undo-tree-id13405 . -1) (undo-tree-id13406 . -1) (undo-tree-id13407 . -1) (#("_" 0 1 (fontified t)) . -11170) (undo-tree-id13408 . -1) (undo-tree-id13409 . -1) (undo-tree-id13410 . -1) (undo-tree-id13411 . -1) (undo-tree-id13412 . -1) (undo-tree-id13413 . -1) (undo-tree-id13414 . -1) (undo-tree-id13415 . -1) (undo-tree-id13416 . -1) (undo-tree-id13417 . -1) (undo-tree-id13418 . -1) (undo-tree-id13419 . -1) (undo-tree-id13420 . -1) (undo-tree-id13421 . -1) (undo-tree-id13422 . -1) (undo-tree-id13423 . -1) (undo-tree-id13424 . -1) (undo-tree-id13425 . -1) (undo-tree-id13426 . -1) 11171) nil (25968 40033 321010 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -16895) (undo-tree-id6141 . -1) (undo-tree-id6143 . -1) 16896) ((16895 . 16896)) (25968 39149 764926 0) 0 nil])
([nil nil ((11165 . 11166)) nil (25968 40033 320881 0) 0 nil])
([nil nil ((16895 . 16897)) ((#("ui" 0 2 (fontified t)) . 16895) (undo-tree-id10849 . -2) (undo-tree-id10850 . -2)) (25968 39149 686502 0) 0 nil])
([nil nil ((11165 . 11179) (#("k" 0 1 (fontified nil)) . 11165) (11165 . 11166) (#("keyboard_state" 0 14 (fontified nil)) . -11165) (11165 . 11179) (#("k" 0 1 (fontified t)) . -11165) (undo-tree-id13294 . -1) (undo-tree-id13295 . -1) (undo-tree-id13296 . -1) (undo-tree-id13297 . -1) 11166) nil (25968 40033 320877 0) 0 nil])
([nil nil ((16895 . 16902) (#("ui" 0 2 (fontified nil)) . 16895) (16895 . 16897) (#("uistate" 0 7 (fontified nil)) . -16895) (16895 . 16902) (#("ui" 0 2 (fontified t)) . -16895) (undo-tree-id6132 . -2) (undo-tree-id6133 . -2) (undo-tree-id6135 . -2) (undo-tree-id6137 . -2) (undo-tree-id6139 . -2) 16897) ((16895 . 16897) (#("uistate" 0 7 (fontified nil)) . 16895) (16895 . 16902) (#("ui" 0 2 (fontified nil)) . 16895) (16895 . 16897) (#("uistate" 0 7 (fontified t)) . 16895) (undo-tree-id10845 . -7) (undo-tree-id10846 . -7) (undo-tree-id10847 . -7) (undo-tree-id10848 . -7)) (25968 39149 634624 0) 0 nil])
([nil nil ((11179 . 11180) (t 25968 40033 353255 589000)) nil (25968 40039 50308 0) 0 nil])
([nil nil ((16902 . 16904)) ((#(".g" 0 1 (fontified t) 1 2 (fontified t)) . 16902) (undo-tree-id10841 . -2) (undo-tree-id10842 . -2) (undo-tree-id10843 . -1) (undo-tree-id10844 . -1)) (25968 39149 100642 0) 0 nil])
([nil nil ((11179 . 11181)) nil (25968 40039 50307 0) 0 nil])
([nil nil ((apply yas--snippet-revive 16903 16908 #s(yas--snippet nil nil #s(yas--exit #<marker at 19491 in component.rs> nil) 47 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 19491 in component.rs> nil) 47 nil nil nil nil)) (16903 . 16908) (#("get()$0" 0 7 (fontified nil)) . 16903) (16903 . 16910) (#("g" 0 1 (fontified nil)) . 16903) (16903 . 16904) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -16903) (16903 . 16923) (#("g" 0 1 (fontified t)) . -16903) (undo-tree-id6127 . -1) (undo-tree-id6129 . -1) (undo-tree-id6131 . -1) 16904) ((16903 . 16904) (#("get() (as SignalGet)" 0 20 (fontified nil)) . 16903) (16903 . 16923) (#("g" 0 1 (fontified nil)) . 16903) (16903 . 16904) (#("get()$0" 0 7 (fontified nil)) . 16903) (16903 . 16910) (#("get()" 0 5 (fontified t)) . 16903) (undo-tree-id10837 . -5) (undo-tree-id10838 . -5) (undo-tree-id10839 . -5) (undo-tree-id10840 . -5)) (25968 39148 888544 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11180 11185 #s(yas--snippet nil nil #s(yas--exit 11185 nil) 68 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11185 nil) 68 nil nil nil nil)) (11180 . 11185) (#("get()$0" 0 7 (fontified nil)) . 11180) (11180 . 11187) (#("g" 0 1 (fontified nil)) . 11180) (11180 . 11181) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -11180) (11180 . 11200) (#("g" 0 1 (fontified t)) . -11180) (undo-tree-id13457 . -1) (undo-tree-id13458 . -1) (undo-tree-id13459 . -1) (undo-tree-id13460 . -1) (undo-tree-id13461 . -1) (undo-tree-id13462 . -1) (undo-tree-id13463 . -1) (undo-tree-id13464 . -1) 11181) nil (25968 40039 50305 0) 0 nil])
([nil nil ((16908 . 16909)) ((#("." 0 1 (fontified t)) . 16908) (undo-tree-id10834 . -1) (undo-tree-id10835 . -1) (undo-tree-id10836 . -1)) (25968 39148 551293 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11185) (undo-tree-id13444 . -1) (undo-tree-id13445 . -1) (undo-tree-id13446 . -1) (undo-tree-id13447 . -1) (undo-tree-id13448 . -1) (undo-tree-id13449 . -1) (undo-tree-id13450 . -1) (undo-tree-id13451 . -1) (undo-tree-id13452 . -1) (undo-tree-id13453 . -1) (undo-tree-id13454 . -1) (undo-tree-id13455 . -1) (undo-tree-id13456 . -1) 11186) nil (25968 40039 50290 0) 0 nil])
([nil nil ((16909 . 16925) (#("activation_value" 0 16 (fontified nil)) . -16909) (16909 . 16925)) ((#("activation_value" 0 16 (fontified nil)) . 16909) (16909 . 16925) (#("activation_value" 0 11 (fontified t) 11 16 (fontified t)) . 16909) (undo-tree-id10833 . -16)) (25968 39148 467853 0) 0 nil])
([nil nil ((11135 . 11140) (t 25968 40039 82262 936000)) nil (25968 40073 63799 0) 0 nil])
([nil nil ((#("move ||" 0 7 (fontified t)) . -16887) (undo-tree-id6106 . -7) (undo-tree-id6107 . -7) (undo-tree-id6109 . -2) (undo-tree-id6111 . -4) (undo-tree-id6113 . -6) (undo-tree-id6115 . -2) (undo-tree-id6117 . -4) (undo-tree-id6119 . -6) (undo-tree-id6121 . -7) (undo-tree-id6123 . -7) (undo-tree-id6125 . -7) 16894) ((16887 . 16894)) (25968 39148 383710 0) 0 nil])
([nil nil ((11136 . 11141) (#("	    " 0 5 (fontified nil)) . 11135) (undo-tree-id13484 . -5) (undo-tree-id13485 . -5) (undo-tree-id13486 . -5) (undo-tree-id13487 . -5) (11140 . 11141)) nil (25968 40073 63798 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16887) (undo-tree-id6063 . -1) (undo-tree-id6065 . -1) (undo-tree-id6067 . -1) (undo-tree-id6069 . -1) (undo-tree-id6071 . -1) (undo-tree-id6073 . -1) (undo-tree-id6075 . -1) (undo-tree-id6077 . -1) (undo-tree-id6079 . -1) (undo-tree-id6081 . -1) (undo-tree-id6083 . -1) (undo-tree-id6085 . -1) (undo-tree-id6087 . -1) (undo-tree-id6089 . -1) (undo-tree-id6091 . -1) (undo-tree-id6093 . -1) (undo-tree-id6095 . -1) (undo-tree-id6097 . -1) (undo-tree-id6099 . -1) (undo-tree-id6101 . -1) (undo-tree-id6103 . -1) (undo-tree-id6105 . -1) 16888) ((16887 . 16888)) (25968 39148 321251 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11174 . 11175) (nil fontified nil 11168 . 11175) (nil fontified nil 11166 . 11168) (nil fontified nil 11161 . 11166) (nil fontified nil 11153 . 11161) (nil fontified nil 11152 . 11153) (nil fontified nil 11149 . 11152) (nil fontified nil 11148 . 11149) (nil fontified nil 11145 . 11148) (nil fontified nil 11141 . 11145) (11141 . 11175)) nil (25968 40073 63791 0) 0 nil])
([nil nil ((#("activation_value.0" 0 18 (fontified t)) . -17038) (undo-tree-id6145 . -18) (undo-tree-id6146 . -18) (undo-tree-id6148 . -2) (undo-tree-id6150 . -4) (undo-tree-id6152 . -7) (undo-tree-id6154 . -9) (undo-tree-id6156 . -11) (undo-tree-id6158 . -13) (undo-tree-id6160 . -15) (undo-tree-id6162 . -17) (undo-tree-id6164 . -18) (undo-tree-id6166 . -18) (undo-tree-id6168 . -18) 17056 (t 25968 36192 696516 618000)) ((17038 . 17056)) (25968 39148 290835 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11141) 11159) nil (25968 40073 63787 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17067 . 17068) (nil fontified nil 17052 . 17068) (nil fontified nil 17046 . 17052) (nil fontified nil 17038 . 17046) (17038 . 17068)) ((#("uistate.get().activation_value" 0 8 (fontified nil) 8 14 (fontified nil) 14 25 (fontified nil) 25 29 (fontified nil) 29 30 (fontified nil rear-nonsticky nil)) . 17038) (nil rear-nonsticky t 17067 . 17068)) (25968 39148 133116 0) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -11170) (undo-tree-id13465 . -1) (undo-tree-id13466 . -1) (undo-tree-id13467 . -1) (undo-tree-id13468 . -1) (undo-tree-id13469 . -1) (undo-tree-id13470 . -1) (undo-tree-id13471 . -1) (undo-tree-id13472 . -1) (undo-tree-id13473 . -1) (undo-tree-id13474 . -1) (undo-tree-id13475 . -1) (undo-tree-id13476 . -1) (undo-tree-id13477 . -1) (undo-tree-id13478 . -1) (undo-tree-id13479 . -1) (undo-tree-id13480 . -1) (undo-tree-id13481 . -1) (undo-tree-id13482 . -1) (undo-tree-id13483 . -1) 11171) nil (25968 40073 63780 0) 0 nil])
([nil nil ((#("trigger_value.0" 0 15 (fontified t)) . -17388) (undo-tree-id6218 . -15) (undo-tree-id6219 . -15) (undo-tree-id6221 . -1) (undo-tree-id6223 . -2) (undo-tree-id6225 . -4) (undo-tree-id6227 . -6) (undo-tree-id6229 . -8) (undo-tree-id6231 . -10) (undo-tree-id6233 . -12) (undo-tree-id6235 . -12) (undo-tree-id6237 . -13) (undo-tree-id6239 . -14) (undo-tree-id6241 . -14) (undo-tree-id6243 . -14) (undo-tree-id6245 . -15) (undo-tree-id6247 . -15) (undo-tree-id6249 . -15) (undo-tree-id6251 . -15) (undo-tree-id6253 . -15) 17403 (t 25968 36202 341941 18000)) ((17388 . 17403)) (25968 39148 49784 0) 0 nil])
([nil nil ((#("		    println!(\"test: [send: {} page: {} payload: {:?}]\", res, page_num, &send_buf[0..18]);" 0 6 (fontified t) 6 14 (face rust-builtin-formatting-macro fontified t) 14 15 (fontified t) 15 29 (face font-lock-string-face fontified t) 29 31 (face rust-string-interpolation fontified t) 31 38 (face font-lock-string-face fontified t) 38 40 (face rust-string-interpolation fontified t) 40 50 (face font-lock-string-face fontified t) 50 54 (face rust-string-interpolation fontified t) 54 56 (face font-lock-string-face fontified t) 56 73 (fontified t) 73 74 (face rust-ampersand-face fontified t) 74 91 (fontified t)) . 11674) (t 25968 40073 96036 431000)) nil (25968 40117 16108 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17401 . 17402) (nil fontified nil 17396 . 17402) (nil fontified nil 17388 . 17396) (17388 . 17402)) ((#("uistate.get()." 0 8 (fontified nil) 8 13 (fontified nil) 13 14 (fontified nil rear-nonsticky nil)) . 17388) (undo-tree-id10831 . -14) (undo-tree-id10832 . -14) (nil rear-nonsticky t 17401 . 17402)) (25968 39147 966313 0) 0 nil])
([nil nil ((11557 . 11560)) nil (25968 40117 16106 0) 0 nil])
([nil nil ((17402 . 17403)) ((#("t" 0 1 (fontified t)) . 17402) (undo-tree-id10829 . -1) (undo-tree-id10830 . -1)) (25968 39147 883891 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11650 . 11651) (nil fontified nil 11634 . 11651) (nil fontified nil 11633 . 11634) (nil fontified nil 11616 . 11633) (nil fontified nil 11614 . 11616) (nil fontified nil 11610 . 11614) (nil fontified nil 11600 . 11610) (nil fontified nil 11598 . 11600) (nil fontified nil 11591 . 11598) (nil fontified nil 11589 . 11591) (nil fontified nil 11575 . 11589) (nil fontified nil 11574 . 11575) (nil fontified nil 11566 . 11574) (nil fontified nil 11560 . 11566) (11560 . 11651)) nil (25968 40117 16105 0) 0 nil])
([nil nil ((17402 . 17415) (#("t" 0 1 (fontified nil)) . 17402) (17402 . 17403) (#("trigger_value" 0 13 (fontified nil)) . -17402) (17402 . 17415) (#("t" 0 1 (fontified t)) . -17402) (undo-tree-id6214 . -1) (undo-tree-id6216 . -1) 17403) ((17402 . 17403) (#("trigger_value" 0 13 (fontified nil)) . 17402) (17402 . 17415) (#("t" 0 1 (fontified nil)) . 17402) (17402 . 17403) (#("trigger_value" 0 13 (fontified t)) . 17402)) (25968 39147 799235 0) 0 nil])
([nil nil ((#("		    " 0 6 (fontified t)) . -11560) (undo-tree-id13500 . -6) 11566) nil (25968 40117 16100 0) 0 nil])
([nil nil ((#("trigger_value.0" 0 15 (fontified t)) . 17532) (undo-tree-id6192 . -15) (undo-tree-id6194 . -15) (undo-tree-id6196 . -15) (undo-tree-id6198 . -15) (undo-tree-id6200 . -13) (undo-tree-id6202 . -10) (undo-tree-id6204 . -8) (undo-tree-id6206 . -6) (undo-tree-id6208 . -4) (undo-tree-id6210 . -2) (undo-tree-id6212 . -2)) ((17532 . 17547)) (25968 39147 718416 0) 0 nil])
([nil nil ((#("println" 0 7 (face rust-builtin-formatting-macro fontified t)) . -11560) (undo-tree-id13496 . -7) (undo-tree-id13497 . -7) (undo-tree-id13498 . -7) (undo-tree-id13499 . -7) 11567) nil (25968 40117 16098 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17545 . 17546) (nil fontified nil 17540 . 17546) (nil fontified nil 17532 . 17540) (17532 . 17546)) ((#("uistate.get()." 0 8 (fontified nil) 8 13 (fontified nil) 13 14 (fontified nil rear-nonsticky nil)) . 17532) (undo-tree-id10827 . -14) (undo-tree-id10828 . -14) (nil rear-nonsticky t 17545 . 17546)) (25968 39147 665360 0) 0 nil])
([nil nil ((11560 . 11564)) nil (25968 40117 16092 0) 0 nil])
([nil nil ((17546 . 17548)) ((#(".t" 0 1 (fontified t) 1 2 (fontified t)) . 17546) (undo-tree-id10825 . -2) (undo-tree-id10826 . -2)) (25968 39147 131558 0) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-preprocessor-face fontified t)) . -11562) (undo-tree-id13494 . -1) (#("g" 0 1 (face font-lock-preprocessor-face fontified t)) . -11563) (undo-tree-id13495 . -1) 11564) nil (25968 40117 16091 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -17546) (undo-tree-id6183 . -1) (undo-tree-id6185 . -1) (undo-tree-id6187 . -1) (#("t" 0 1 (fontified t)) . -17547) (undo-tree-id6189 . -1) (undo-tree-id6191 . -1) 17548) ((17546 . 17548)) (25968 39146 968340 0) 0 nil])
([nil nil ((11562 . 11567)) nil (25968 40117 16087 0) 0 nil])
([nil nil ((17546 . 17547)) ((#("r" 0 1 (fontified t)) . 17546) (undo-tree-id10823 . -1) (undo-tree-id10824 . -1)) (25968 39146 767398 0) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-preprocessor-face fontified t)) . -11564) (undo-tree-id13491 . -1) (#("n" 0 1 (face font-lock-preprocessor-face fontified t)) . -11565) (undo-tree-id13492 . -1) (#("g" 0 1 (face font-lock-preprocessor-face fontified t)) . -11566) (undo-tree-id13493 . -1) 11567) nil (25968 40117 16085 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -17546) (undo-tree-id6179 . -1) (undo-tree-id6181 . -1) 17547) ((17546 . 17547)) (25968 39146 511203 0) 0 nil])
([nil nil ((11564 . 11569)) nil (25968 40117 16080 0) 0 nil])
([nil nil ((17546 . 17548)) ((#("tr" 0 2 (fontified t)) . 17546) (undo-tree-id10821 . -2) (undo-tree-id10822 . -2)) (25968 39146 231019 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -11568) (undo-tree-id13488 . -1) (undo-tree-id13489 . -1) (undo-tree-id13490 . -1) 11569) nil (25968 40117 16078 0) 0 nil])
([nil nil ((17546 . 17559) (#("tr" 0 2 (fontified nil)) . 17546) (17546 . 17548) (#("trigger_value" 0 13 (fontified nil)) . -17546) (17546 . 17559) (#("tr" 0 2 (fontified t)) . -17546) (undo-tree-id6170 . -2) (undo-tree-id6172 . -1) (undo-tree-id6174 . -1) (undo-tree-id6176 . -2) (undo-tree-id6178 . -2) 17548) ((17546 . 17548) (#("trigger_value" 0 13 (fontified nil)) . 17546) (17546 . 17559) (#("tr" 0 2 (fontified nil)) . 17546) (17546 . 17548) (#("trigger_value" 0 13 (fontified t)) . 17546)) (25968 39145 733109 0) 0 nil])
([nil nil ((11568 . 11572)) nil (25968 40117 16065 0) 0 nil])
([nil nil ((#("reset_value.0 " 0 14 (fontified t)) . -17845) (undo-tree-id6282 . -14) (undo-tree-id6283 . -14) (undo-tree-id6285 . -2) (undo-tree-id6287 . -5) (undo-tree-id6289 . -7) (undo-tree-id6291 . -8) (undo-tree-id6293 . -10) (undo-tree-id6295 . -12) (undo-tree-id6297 . -14) (undo-tree-id6299 . -14) (undo-tree-id6301 . -14) (undo-tree-id6303 . -14) (undo-tree-id6305 . -14) 17859 (t 25968 36252 750266 581000)) ((17845 . 17859)) (25968 39145 649850 0) 0 nil])
([nil nil ((#("		logging::log!(\"test: [send: {} page: {} payload: {:?}]\", res, page_num, &send_buf[0..18]);" 0 2 (fontified t) 2 9 (face font-lock-constant-face fontified t) 9 11 (fontified t) 11 14 (face font-lock-preprocessor-face fontified t) 14 15 (face font-lock-preprocessor-face fontified t) 15 16 (fontified t) 16 30 (face font-lock-string-face fontified t) 30 32 (face font-lock-string-face fontified t) 32 39 (face font-lock-string-face fontified t) 39 41 (face font-lock-string-face fontified t) 41 51 (face font-lock-string-face fontified t) 51 55 (face font-lock-string-face fontified t) 55 57 (face font-lock-string-face fontified t) 57 74 (fontified t) 74 75 (face rust-ampersand-face fontified t) 75 91 (fontified t) 91 92 (rear-nonsticky t fontified t)) . 11558) (undo-tree-id13501 . -2) (undo-tree-id13502 . -2) (undo-tree-id13503 . -2) (undo-tree-id13504 . -10) (undo-tree-id13505 . -10) (undo-tree-id13506 . 78) (undo-tree-id13507 . -27) (undo-tree-id13508 . -27) (undo-tree-id13509 . -27) (undo-tree-id13510 . -27) (undo-tree-id13511 . -27) (undo-tree-id13512 . -27) (undo-tree-id13513 . -27) (undo-tree-id13514 . -27) (undo-tree-id13515 . -27) (undo-tree-id13516 . -27) (undo-tree-id13517 . -27) (undo-tree-id13518 . -27) (undo-tree-id13519 . -27) (undo-tree-id13520 . -27) (undo-tree-id13521 . -27) (undo-tree-id13522 . -27) (undo-tree-id13523 . -27) (undo-tree-id13524 . -27) (undo-tree-id13525 . -27) (undo-tree-id13526 . -27) (undo-tree-id13527 . -27) (undo-tree-id13528 . -27) (undo-tree-id13529 . -27) (undo-tree-id13530 . -27) (undo-tree-id13531 . -27) (undo-tree-id13532 . -27) (undo-tree-id13533 . -27) (undo-tree-id13534 . -27) (undo-tree-id13535 . -27) (undo-tree-id13536 . -27) (undo-tree-id13537 . -27) (undo-tree-id13538 . -27) (undo-tree-id13539 . -27) (undo-tree-id13540 . -27) (undo-tree-id13541 . -27) (undo-tree-id13542 . -27) (undo-tree-id13543 . -27) (undo-tree-id13544 . -27) (undo-tree-id13545 . -27) (undo-tree-id13546 . -27) (undo-tree-id13547 . -27) (undo-tree-id13548 . -27) (undo-tree-id13549 . -27) (undo-tree-id13550 . -27) (undo-tree-id13551 . -27) (undo-tree-id13552 . -27) (undo-tree-id13553 . -27) (undo-tree-id13554 . -42) (undo-tree-id13555 . -42) (undo-tree-id13556 . -42) (undo-tree-id13557 . -42) (undo-tree-id13558 . -42) (undo-tree-id13559 . -42) (undo-tree-id13560 . -42) (undo-tree-id13561 . -42) (undo-tree-id13562 . -92) (t 25968 40117 48103 737000)) nil (25968 40129 12454 0) 0 nil])
([nil nil ((nil fontified nil 17858 . 17859) (nil fontified nil 17853 . 17858) (nil fontified nil 17845 . 17853) (17845 . 17859)) ((#("uistate.get()." 0 8 (fontified nil) 8 13 (fontified nil) 13 14 (fontified nil rear-nonsticky t)) . 17845) (undo-tree-id10819 . -14) (undo-tree-id10820 . -14) (nil fontified t 17858 . 17859)) (25968 39145 565833 0) 0 nil])
([nil nil ((nil fontified nil 11766 . 11767) (nil fontified nil 11750 . 11766) (nil fontified nil 11749 . 11750) (nil fontified nil 11732 . 11749) (nil fontified nil 11730 . 11732) (nil fontified nil 11726 . 11730) (nil fontified nil 11716 . 11726) (nil fontified nil 11714 . 11716) (nil fontified nil 11707 . 11714) (nil fontified nil 11705 . 11707) (nil fontified nil 11691 . 11705) (nil fontified nil 11690 . 11691) (nil fontified nil 11689 . 11690) (nil fontified nil 11686 . 11689) (nil fontified nil 11684 . 11686) (nil fontified nil 11677 . 11684) (nil fontified nil 11675 . 11677) (11675 . 11767)) nil (25968 40129 12377 0) 0 nil])
([nil nil ((17859 . 17860)) ((#(" " 0 1 (fontified t)) . 17859)) (25968 39145 483076 0) 0 nil])
([nil nil ((11677 . 11681) 11767) nil (25968 40129 12368 0) 0 nil])
([nil nil ((17859 . 17860)) ((#("e" 0 1 (fontified t)) . 17859) (undo-tree-id10817 . -1) (undo-tree-id10818 . -1)) (25968 39145 399870 0) 0 nil])
([nil nil ((11642 . 11645) (t 25968 40129 45615 89000)) nil (25968 40173 977280 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -17859) (undo-tree-id6280 . -1) 17860) ((17859 . 17860)) (25968 39145 315938 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -11642) (undo-tree-id13597 . -1) (undo-tree-id13598 . -1) (undo-tree-id13599 . -1) (undo-tree-id13600 . -1) (undo-tree-id13601 . -1) (undo-tree-id13602 . -1) (undo-tree-id13603 . -1) (undo-tree-id13604 . -1) (undo-tree-id13605 . -1) (undo-tree-id13606 . -1) (undo-tree-id13607 . -1) (undo-tree-id13608 . -1) (undo-tree-id13609 . -1) (undo-tree-id13610 . -1) (undo-tree-id13611 . -1) (undo-tree-id13612 . -1) (undo-tree-id13613 . -1) (undo-tree-id13614 . -1) (undo-tree-id13615 . -1) (undo-tree-id13616 . -1) (undo-tree-id13617 . -1) (undo-tree-id13618 . -1) (undo-tree-id13619 . -1) (undo-tree-id13620 . -1) (undo-tree-id13621 . -1) (undo-tree-id13622 . -1) (#("t" 0 1 (fontified t)) . -11643) (undo-tree-id13623 . -1) (undo-tree-id13624 . -1) (undo-tree-id13625 . -1) (undo-tree-id13626 . -1) (undo-tree-id13627 . -1) (undo-tree-id13628 . -1) (undo-tree-id13629 . -1) (undo-tree-id13630 . -1) (undo-tree-id13631 . -1) (undo-tree-id13632 . -1) (undo-tree-id13633 . -1) (undo-tree-id13634 . -1) (undo-tree-id13635 . -1) (undo-tree-id13636 . -1) (undo-tree-id13637 . -1) (undo-tree-id13638 . -1) (undo-tree-id13639 . -1) (undo-tree-id13640 . -1) (undo-tree-id13641 . -1) (#("d" 0 1 (fontified t)) . -11644) (undo-tree-id13642 . -1) (undo-tree-id13643 . -1) (undo-tree-id13644 . -1) (undo-tree-id13645 . -1) (undo-tree-id13646 . -1) (undo-tree-id13647 . -1) (undo-tree-id13648 . -1) (undo-tree-id13649 . -1) (undo-tree-id13650 . -1) 11645) nil (25968 40173 977276 0) 0 nil])
([nil nil ((17859 . 17861)) ((#("re" 0 2 (fontified t)) . 17859) (undo-tree-id10815 . -2) (undo-tree-id10816 . -2)) (25968 39145 233435 0) 0 nil])
([nil nil ((11642 . 11651)) nil (25968 40173 977216 0) 0 nil])
([nil nil ((17859 . 17870) (#("re" 0 2 (fontified nil)) . 17859) (17859 . 17861) (#("reset_value" 0 11 (fontified nil)) . -17859) (17859 . 17870) (#("re" 0 2 (fontified t)) . -17859) (undo-tree-id6273 . -2) (undo-tree-id6275 . -1) (undo-tree-id6277 . -2) (undo-tree-id6279 . -2) 17861) ((17859 . 17861) (#("reset_value" 0 11 (fontified nil)) . 17859) (17859 . 17870) (#("re" 0 2 (fontified nil)) . 17859) (17859 . 17861) (#("reset_value" 0 11 (fontified t)) . 17859)) (25968 39145 149751 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -11648) (undo-tree-id13563 . -1) (undo-tree-id13564 . -1) (undo-tree-id13565 . -1) (undo-tree-id13566 . -1) (undo-tree-id13567 . -1) (undo-tree-id13568 . -1) (undo-tree-id13569 . -1) (undo-tree-id13570 . -1) (undo-tree-id13571 . -1) (undo-tree-id13572 . -1) (undo-tree-id13573 . -1) (undo-tree-id13574 . -1) (undo-tree-id13575 . -1) (undo-tree-id13576 . -1) (undo-tree-id13577 . -1) (undo-tree-id13578 . -1) (undo-tree-id13579 . -1) (undo-tree-id13580 . -1) (undo-tree-id13581 . -1) (#("h" 0 1 (fontified t)) . -11649) (undo-tree-id13582 . -1) (undo-tree-id13583 . -1) (undo-tree-id13584 . -1) (undo-tree-id13585 . -1) (undo-tree-id13586 . -1) (undo-tree-id13587 . -1) (undo-tree-id13588 . -1) (undo-tree-id13589 . -1) (undo-tree-id13590 . -1) (undo-tree-id13591 . -1) (undo-tree-id13592 . -1) (undo-tree-id13593 . -1) (#("r" 0 1 (fontified t)) . -11650) (undo-tree-id13594 . -1) (undo-tree-id13595 . -1) (undo-tree-id13596 . -1) 11651) nil (25968 40173 977212 0) 0 nil])
([nil nil ((#("reset_value.0" 0 13 (fontified t)) . -17985) (undo-tree-id6260 . -13) (undo-tree-id6261 . -13) (undo-tree-id6263 . -2) (undo-tree-id6265 . -10) (undo-tree-id6267 . -13) (undo-tree-id6269 . -13) (undo-tree-id6271 . -13) 17999) ((17985 . 17998)) (25968 39145 66311 0) 0 nil])
([nil nil ((11648 . 11655)) nil (25968 40173 977162 0) 0 nil])
([nil nil ((nil fontified nil 17998 . 17999) (nil fontified nil 17993 . 17998) (nil fontified nil 17985 . 17993) (17985 . 17999)) ((#("uistate.get()." 0 8 (fontified nil) 8 13 (fontified nil) 13 14 (fontified nil rear-nonsticky t)) . 17985) (undo-tree-id10813 . -14) (undo-tree-id10814 . -14) (nil fontified t 17998 . 17999)) (25968 39144 981655 0) 0 nil])
([nil nil ((11661 . 11666) (t 25968 40174 10644 859000)) nil (25968 40183 354201 0) 0 nil])
([nil nil ((17999 . 18001)) ((#("re" 0 2 (fontified t)) . 17999) (undo-tree-id10811 . -2) (undo-tree-id10812 . -2)) (25968 39144 898810 0) 0 nil])
([nil nil ((11666 . 11670)) nil (25968 40183 354200 0) 0 nil])
([nil nil ((17999 . 18010) (#("re" 0 2 (fontified nil)) . 17999) (17999 . 18001) (#("reset_value" 0 11 (fontified nil)) . -17999) (17999 . 18010) (#("re" 0 2 (fontified t)) . -17999) (undo-tree-id6255 . -2) (undo-tree-id6257 . -2) (undo-tree-id6259 . -2) 18001) ((17999 . 18001) (#("reset_value" 0 11 (fontified nil)) . 17999) (17999 . 18010) (#("re" 0 2 (fontified nil)) . 17999) (17999 . 18001) (#("reset_value" 0 11 (fontified t)) . 17999)) (25968 39144 814398 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -11666) (undo-tree-id13667 . -1) (undo-tree-id13668 . -1) (undo-tree-id13669 . -1) (undo-tree-id13670 . -1) (undo-tree-id13671 . -1) (undo-tree-id13672 . -1) (undo-tree-id13673 . -1) (undo-tree-id13674 . -1) (undo-tree-id13675 . -1) (undo-tree-id13676 . -1) (undo-tree-id13677 . -1) (undo-tree-id13678 . -1) (undo-tree-id13679 . -1) (undo-tree-id13680 . -1) (undo-tree-id13681 . -1) (undo-tree-id13682 . -1) (undo-tree-id13683 . -1) (undo-tree-id13684 . -1) (undo-tree-id13685 . -1) (undo-tree-id13686 . -1) (undo-tree-id13687 . -1) (undo-tree-id13688 . -1) (undo-tree-id13689 . -1) (#("o" 0 1 (fontified t)) . -11667) (undo-tree-id13690 . -1) (undo-tree-id13691 . -1) (undo-tree-id13692 . -1) (undo-tree-id13693 . -1) (undo-tree-id13694 . -1) (undo-tree-id13695 . -1) (undo-tree-id13696 . -1) (undo-tree-id13697 . -1) (undo-tree-id13698 . -1) (undo-tree-id13699 . -1) (undo-tree-id13700 . -1) (undo-tree-id13701 . -1) (undo-tree-id13702 . -1) (undo-tree-id13703 . -1) (undo-tree-id13704 . -1) (undo-tree-id13705 . -1) (undo-tree-id13706 . -1) (undo-tree-id13707 . -1) (undo-tree-id13708 . -1) (undo-tree-id13709 . -1) (#("m" 0 1 (fontified t)) . -11668) (undo-tree-id13710 . -1) (undo-tree-id13711 . -1) (undo-tree-id13712 . -1) (undo-tree-id13713 . -1) (undo-tree-id13714 . -1) (undo-tree-id13715 . -1) (undo-tree-id13716 . -1) (undo-tree-id13717 . -1) (undo-tree-id13718 . -1) (undo-tree-id13719 . -1) (undo-tree-id13720 . -1) (undo-tree-id13721 . -1) (undo-tree-id13722 . -1) (undo-tree-id13723 . -1) (undo-tree-id13724 . -1) (undo-tree-id13725 . -1) (undo-tree-id13726 . -1) (#("e" 0 1 (fontified t)) . -11669) (undo-tree-id13727 . -1) (undo-tree-id13728 . -1) (undo-tree-id13729 . -1) (undo-tree-id13730 . -1) (undo-tree-id13731 . -1) (undo-tree-id13732 . -1) (undo-tree-id13733 . -1) (undo-tree-id13734 . -1) (undo-tree-id13735 . -1) (undo-tree-id13736 . -1) (undo-tree-id13737 . -1) (undo-tree-id13738 . -1) (undo-tree-id13739 . -1) (undo-tree-id13740 . -1) 11670) nil (25968 40183 354195 0) 0 nil])
([nil nil ((#("lower_deadzone.0" 0 16 (fontified t)) . -18281) (undo-tree-id6347 . -16) (undo-tree-id6348 . -16) (undo-tree-id6350 . -7) (undo-tree-id6352 . -15) (undo-tree-id6354 . -16) (undo-tree-id6356 . -1) (undo-tree-id6358 . -4) (undo-tree-id6360 . -8) (undo-tree-id6362 . -10) (undo-tree-id6364 . -13) (undo-tree-id6366 . -16) (undo-tree-id6368 . -16) (undo-tree-id6370 . -16) 18298 (t 25968 36265 615285 421000)) ((18281 . 18297)) (25968 39144 763353 0) 0 nil])
([nil nil ((11666 . 11667)) nil (25968 40183 354085 0) 0 nil])
([nil nil ((nil fontified nil 18294 . 18295) (nil fontified nil 18289 . 18294) (nil fontified nil 18281 . 18289) (18281 . 18295)) ((#("uistate.get()." 0 8 (fontified nil) 8 13 (fontified nil) 13 14 (fontified nil rear-nonsticky t)) . 18281) (undo-tree-id10809 . -14) (undo-tree-id10810 . -14) (nil fontified t 18294 . 18295)) (25968 39144 232837 0) 0 nil])
([nil nil ((11666 . 11668)) nil (25968 40183 354084 0) 0 nil])
([nil nil ((18295 . 18296)) ((#("/" 0 1 (fontified t)) . 18295) (undo-tree-id10807 . -1) (undo-tree-id10808 . -1)) (25968 39143 998078 0) 0 nil])
([nil nil ((11666 . 11670) (#("ti" 0 2 (fontified nil)) . 11666) (11666 . 11668) (#("time" 0 4 (fontified nil)) . -11666) (11666 . 11670) (#("ti" 0 2 (fontified t)) . -11666) (undo-tree-id13658 . -2) (undo-tree-id13659 . -2) (undo-tree-id13660 . -1) (undo-tree-id13661 . -2) (undo-tree-id13662 . -2) (undo-tree-id13663 . -2) (undo-tree-id13664 . -2) (undo-tree-id13665 . -2) (undo-tree-id13666 . -2) 11668) nil (25968 40954 269086 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -18295) (undo-tree-id6345 . -1) 18296) ((18295 . 18296)) (25968 39143 736775 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11670) (undo-tree-id14623 . -1) (undo-tree-id14624 . -1)) ((11670 . 11671)) (25968 40954 869247 0) 0 nil])
([nil nil ((18295 . 18296)) ((#(" " 0 1 (fontified t)) . 18295)) (25968 39143 448883 0) 0 nil])
([nil nil ((11670 . 11672)) ((#("::" 0 2 (fontified t)) . 11670)) (25968 40955 312992 0) 0 nil])
([nil nil ((18295 . 18296)) ((#("l" 0 1 (fontified t)) . 18295) (undo-tree-id10805 . -1) (undo-tree-id10806 . -1)) (25968 39142 911329 0) 0 nil])
([nil nil ((11134 . 11140)) ((#("
	    " 0 1 (fontified t) 1 6 (fontified t)) . 11134) (undo-tree-id14619 . -6) (undo-tree-id14620 . -6) (undo-tree-id14621 . -6) (undo-tree-id14622 . -6)) (25968 40955 391881 0) 0 nil])
([nil nil ((18295 . 18309) (#("l" 0 1 (fontified nil)) . 18295) (18295 . 18296) (#("lower_deadzone" 0 14 (fontified nil)) . -18295) (18295 . 18309) (#("l" 0 1 (fontified t)) . -18295) (undo-tree-id6341 . -1) (undo-tree-id6343 . -1) 18296) ((18295 . 18296) (#("lower_deadzone" 0 14 (fontified nil)) . 18295) (18295 . 18309) (#("l" 0 1 (fontified nil)) . 18295) (18295 . 18296) (#("lower_deadzone" 0 14 (fontified t)) . 18295)) (25968 39142 45720 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11269 . 11270) (nil fontified nil 11140 . 11144) (nil fontified nil 11144 . 11147) (nil fontified nil 11147 . 11148) (nil fontified nil 11148 . 11155) (nil fontified nil 11155 . 11173) (nil fontified nil 11173 . 11177) (nil fontified nil 11177 . 11197) (nil fontified nil 11197 . 11199) (nil fontified nil 11199 . 11207) (nil fontified nil 11207 . 11223) (nil fontified nil 11223 . 11228) (nil fontified nil 11228 . 11230) (11140 . 11270)) ((#("    let promise = device.open();
    wasm_bindgen_futures::JsFuture::from(promise).await;
    log::debug!(\"device:{:?}\", &device);" 0 4 (fontified nil) 4 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil) 8 15 (face font-lock-variable-name-face fontified nil) 15 33 (fontified nil) 33 37 (fontified nil) 37 57 (face font-lock-constant-face fontified nil) 57 59 (fontified nil) 59 67 (face font-lock-type-face fontified nil) 67 83 (fontified nil) 83 88 (face font-lock-keyword-face fontified nil) 88 90 (fontified nil) 90 94 (fontified nil) 94 97 (face font-lock-constant-face fontified nil) 97 99 (fontified nil) 99 105 (face font-lock-preprocessor-face fontified nil) 105 106 (fontified nil) 106 119 (face font-lock-string-face fontified nil) 119 121 (fontified nil) 121 122 (face rust-ampersand-face fontified nil) 122 129 (fontified nil) 129 130 (rear-nonsticky nil fontified nil)) . 11140) (undo-tree-id14616 . -12) (undo-tree-id14617 . -12) (undo-tree-id14618 . -130) (nil fontified t 11228 . 11230) (nil fontified t 11223 . 11228) (nil fontified t 11207 . 11223) (nil fontified t 11199 . 11207) (nil fontified t 11197 . 11199) (nil fontified t 11177 . 11197) (nil fontified t 11173 . 11177) (nil fontified t 11155 . 11173) (nil fontified t 11148 . 11155) (nil fontified t 11147 . 11148) (nil fontified t 11144 . 11147) (nil fontified t 11140 . 11144) (nil rear-nonsticky t 11269 . 11270)) (25968 40955 474782 0) 0 nil])
([nil nil ((#("lower_deadzone.0" 0 16 (fontified t)) . -18428) (undo-tree-id6310 . -16) (undo-tree-id6311 . -16) (undo-tree-id6313 . -2) (undo-tree-id6315 . -4) (undo-tree-id6317 . -6) (undo-tree-id6319 . -9) (undo-tree-id6321 . -11) (undo-tree-id6323 . -13) (undo-tree-id6325 . -15) (undo-tree-id6327 . -15) (undo-tree-id6329 . -15) (undo-tree-id6331 . -16) (undo-tree-id6333 . -16) (undo-tree-id6335 . -16) (undo-tree-id6337 . -16) (undo-tree-id6339 . -16) 18444) ((18428 . 18444)) (25968 39141 962309 0) 0 nil])
([nil nil ((11227 . 11232) (#("    " 0 4 (fontified t)) . 11227) (11169 . 11174) (#("    " 0 4 (fontified t)) . 11169) (#("    " 0 4 (fontified t)) . 11140)) ((11140 . 11144) (11169 . 11173) (#("	    " 0 5 (fontified t)) . 11169) (11227 . 11231) (#("	    " 0 5 (fontified t)) . 11227)) (25968 40955 557176 0) 0 nil])
([nil nil ((nil fontified nil 18441 . 18442) (nil fontified nil 18436 . 18441) (nil fontified nil 18428 . 18436) (18428 . 18442)) ((#("uistate.get()." 0 8 (fontified nil) 8 13 (fontified nil) 13 14 (fontified nil rear-nonsticky t)) . 18428) (undo-tree-id10802 . -14) (undo-tree-id10803 . -14) (undo-tree-id10804 . -14) (nil fontified t 18441 . 18442)) (25968 39141 911024 0) 0 nil])
([nil nil ((#("debug!" 0 6 (face font-lock-preprocessor-face fontified t)) . 11237)) ((11237 . 11243)) (25968 40955 639312 0) 0 nil])
([nil nil ((18442 . 18443)) ((#("l" 0 1 (fontified t)) . 18442) (undo-tree-id10799 . -1) (undo-tree-id10800 . -1) (undo-tree-id10801 . -1)) (25968 39141 712982 0) 0 nil])
([nil nil ((#("log::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . 11232) (undo-tree-id14625 . -5) (undo-tree-id14626 . -5)) ((11232 . 11237)) (25968 40955 723503 0) 0 nil])
([nil nil ((18442 . 18456) (#("l" 0 1 (fontified nil)) . 18442) (18442 . 18443) (#("lower_deadzone" 0 14 (fontified nil)) . -18442) (18442 . 18456) (#("l" 0 1 (fontified t)) . -18442) (undo-tree-id6306 . -1) (undo-tree-id6308 . -1) 18443) ((18442 . 18443) (#("lower_deadzone" 0 14 (fontified nil)) . 18442) (18442 . 18456) (#("l" 0 1 (fontified nil)) . 18442) (18442 . 18443) ("lower_deadzone" . 18442)) (25968 39141 628929 0) 0 nil])
([nil nil ((11232 . 11233)) ((#("," 0 1 (fontified t)) . 11232) (undo-tree-id14614 . -1) (undo-tree-id14615 . -1)) (25968 40955 806523 0) 0 nil])
([nil nil ((6035 . 6039) (t 25968 36283 398885 658000)) ((#("if k" 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 6035) (undo-tree-id10796 . -4) (undo-tree-id10797 . -4) (undo-tree-id10798 . -3)) (25968 39141 545954 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 11232)) ((11232 . 11233)) (25968 40955 889304 0) 0 nil])
([nil nil ((6038 . 6052) (#("k" 0 1 (fontified nil)) . 6038) (6038 . 6039) (#("keyboard_state" 0 14 (fontified nil)) . -6038) (6038 . 6052) (#("k" 0 1 (fontified t)) . -6038) (undo-tree-id6379 . -1) 6039) ((6038 . 6039) (#("keyboard_state" 0 14 (fontified nil)) . 6038) (6038 . 6052) (#("k" 0 1 (fontified nil)) . 6038) (6038 . 6039) (#("keyboard_state" 0 14 (fontified t)) . 6038) (undo-tree-id10793 . -14) (undo-tree-id10794 . -14) (undo-tree-id10795 . -14)) (25968 39141 462388 0) 0 nil])
([nil nil ((11232 . 11234)) ((#("li" 0 1 (fontified t) 1 2 (fontified t)) . 11232) (undo-tree-id14612 . -2) (undo-tree-id14613 . -2)) (25968 40955 973264 0) 0 nil])
([nil nil ((6052 . 6054)) ((#(".g" 0 1 (fontified t) 1 2 (fontified t)) . 6052) (undo-tree-id10790 . -2) (undo-tree-id10791 . -2) (undo-tree-id10792 . -1)) (25968 39141 379675 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 11233)) ((11233 . 11234)) (25968 40956 56519 0) 0 nil])
([nil nil ((apply yas--snippet-revive 6053 6058 #s(yas--snippet nil nil #s(yas--exit #<marker at 5806 in component.rs> nil) 48 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 5806 in component.rs> nil) 48 nil nil nil nil)) (6053 . 6058) (#("get()$0" 0 7 (fontified nil)) . 6053) (6053 . 6060) (#("g" 0 1 (fontified nil)) . 6053) (6053 . 6054) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -6053) (6053 . 6073) (#("g" 0 1 (fontified t)) . -6053) (undo-tree-id6378 . -1) 6054) ((6053 . 6054) (#("get() (as SignalGet)" 0 20 (fontified nil)) . 6053) (6053 . 6073) (#("g" 0 1 (fontified nil)) . 6053) (6053 . 6054) (#("get()$0" 0 7 (fontified nil)) . 6053) (6053 . 6060) (#("get()" 0 5 (fontified t)) . 6053) (undo-tree-id10787 . -5) (undo-tree-id10788 . -5) (undo-tree-id10789 . -5)) (25968 39141 295593 0) 0 nil])
([nil nil ((11233 . 11234)) ((#("o" 0 1 (fontified t)) . 11233) (undo-tree-id14610 . -1) (undo-tree-id14611 . -1)) (25968 40956 140048 0) 0 nil])
([nil nil ((6058 . 6060)) ((#(".k" 0 1 (fontified t) 1 2 (fontified t)) . 6058) (undo-tree-id10785 . -2) (undo-tree-id10786 . -2)) (25968 39141 212730 0) 0 nil])
([nil nil ((11234 . 11235)) ((#("g" 0 1 (fontified t)) . 11234) (undo-tree-id14608 . -1) (undo-tree-id14609 . -1)) (25968 40956 223223 0) 0 nil])
([nil nil ((6059 . 6063) (#("k" 0 1 (fontified nil)) . 6059) (6059 . 6060) (#("keys" 0 4 (fontified nil)) . -6059) (6059 . 6063) (#("k" 0 1 (fontified t)) . -6059) (undo-tree-id6377 . -1) 6060) ((6059 . 6060) (#("keys" 0 4 (fontified nil)) . 6059) (6059 . 6063) (#("k" 0 1 (fontified nil)) . 6059) (6059 . 6060) (#("keys" 0 4 (fontified t)) . 6059) (undo-tree-id10783 . -4) (undo-tree-id10784 . -4)) (25968 39141 128924 0) 0 nil])
([nil nil ((11232 . 11239) (#("log" 0 3 (fontified nil)) . 11232) (11232 . 11235) (#("logging" 0 7 (fontified nil)) . 11232) (11232 . 11239) (#("log" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 11232) (undo-tree-id14627 . -2) (undo-tree-id14628 . -2)) ((11232 . 11235) (#("logging" 0 7 (fontified nil)) . 11232) (11232 . 11239) (#("log" 0 3 (fontified nil)) . 11232) (11232 . 11235) (#("logging" 0 7 (fontified t)) . 11232) (undo-tree-id14606 . -7) (undo-tree-id14607 . -7)) (25968 40956 307176 0) 0 nil])
([nil nil ((6063 . 6064)) ((#("." 0 1 (fontified t)) . 6063) (undo-tree-id10781 . -1) (undo-tree-id10782 . -1)) (25968 39141 45121 0) 0 nil])
([nil nil ((11239 . 11244)) ((#("::log" 0 2 (fontified t) 2 5 (fontified t)) . 11239) (undo-tree-id14604 . -5) (undo-tree-id14605 . -5)) (25968 40956 389837 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -6063) (undo-tree-id6376 . -1) 6064) ((6063 . 6064)) (25968 39140 962259 0) 0 nil])
([nil nil ((11244 . 11245)) ((#("!" 0 1 (face font-lock-preprocessor-face fontified t)) . 11244)) (25968 40956 473288 0) 0 nil])
([nil nil ((6063 . 6065)) ((#("[]" 0 1 (fontified t) 1 2 (fontified t)) . 6063) (undo-tree-id10779 . -1) (undo-tree-id10780 . -1)) (25968 39140 878935 0) 0 nil])
([nil nil ((#("handle." 0 7 (fontified t)) . 11714)) ((11714 . 11721)) (25968 40956 556563 0) 0 nil])
([nil nil ((6064 . 6069)) ((#("index" 0 5 (fontified t)) . 6064)) (25968 39140 795927 0) 0 nil])
([nil nil ((11720 . 11723)) ((#("   " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 11720) (undo-tree-id14603 . 3)) (25968 40956 640081 0) 0 nil])
([nil nil ((6070 . 6071)) ((#("." 0 1 (fontified t)) . 6070) (undo-tree-id10777 . -1) (undo-tree-id10778 . -1)) (25968 39140 713080 0) 0 nil])
([nil nil ((11720 . 11722)) ((#(".s" 0 1 (fontified t) 1 2 (fontified t)) . 11720) (undo-tree-id14540 . -2) (undo-tree-id14541 . -2) (undo-tree-id14542 . -1) (undo-tree-id14543 . -1) (undo-tree-id14544 . -1) (undo-tree-id14545 . -1) (undo-tree-id14546 . -1) (undo-tree-id14547 . -1) (undo-tree-id14548 . -1) (undo-tree-id14549 . -1) (undo-tree-id14550 . -1) (undo-tree-id14551 . -1) (undo-tree-id14552 . -1) (undo-tree-id14553 . -1) (undo-tree-id14554 . -1) (undo-tree-id14555 . -1) (undo-tree-id14556 . -1) (undo-tree-id14557 . -1) (undo-tree-id14558 . -1) (undo-tree-id14559 . -1) (undo-tree-id14560 . -1) (undo-tree-id14561 . -1) (undo-tree-id14562 . -1) (undo-tree-id14563 . -1) (undo-tree-id14564 . -1) (undo-tree-id14565 . -1) (undo-tree-id14566 . -1) (undo-tree-id14567 . -1) (undo-tree-id14568 . -1) (undo-tree-id14569 . -1) (undo-tree-id14570 . -1) (undo-tree-id14571 . -1) (undo-tree-id14572 . -1) (undo-tree-id14573 . -1) (undo-tree-id14574 . -1) (undo-tree-id14575 . -1) (undo-tree-id14576 . -1) (undo-tree-id14577 . -1) (undo-tree-id14578 . -1) (undo-tree-id14579 . -1) (undo-tree-id14580 . -1) (undo-tree-id14581 . -1) (undo-tree-id14582 . -1) (undo-tree-id14583 . -1) (undo-tree-id14584 . -1) (undo-tree-id14585 . -1) (undo-tree-id14586 . -1) (undo-tree-id14587 . -1) (undo-tree-id14588 . -1) (undo-tree-id14589 . -1) (undo-tree-id14590 . -1) (undo-tree-id14591 . -1) (undo-tree-id14592 . -1) (undo-tree-id14593 . -1) (undo-tree-id14594 . -1) (undo-tree-id14595 . -1) (undo-tree-id14596 . -1) (undo-tree-id14597 . -1) (undo-tree-id14598 . -1) (undo-tree-id14599 . -1) (undo-tree-id14600 . -1) (undo-tree-id14601 . -1) (undo-tree-id14602 . -1)) (25968 40956 723471 0) 0 nil])
([nil nil ((6071 . 6079) (#("selected" 0 8 (fontified nil)) . -6071) (6071 . 6079)) ((#("selected" 0 8 (fontified nil)) . 6071) (6071 . 6079) (#("selected" 0 8 (fontified t)) . 6071) (undo-tree-id10775 . -8) (undo-tree-id10776 . -8)) (25968 39140 218864 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 11747 11747 nil nil nil t #s(yas--field 2 11750 11754 nil nil nil nil #s(yas--exit 11755 nil))) #s(yas--field 2 11750 11754 nil nil nil nil #s(yas--exit 11755 nil))) #s(yas--exit 11755 nil) 69 nil #s(yas--field 1 11747 11747 nil nil nil t #s(yas--field 2 11750 11754 nil nil nil nil #s(yas--exit 11755 nil))) nil nil)) (11721 . 11763) (#("send_report_with_u8_array(${1:report_id}, ${2:data})$0" 0 54 (fontified nil)) . 11721) (11721 . 11775) (#("s" 0 1 (fontified nil)) . 11721) (11721 . 11722) (#("send_report_with_u8_array(…)" 0 28 (fontified nil)) . 11721) (11721 . 11749) (#("s" 0 1 (fontified t)) . 11721)) ((11721 . 11722) (#("send_report_with_u8_array(…)" 0 28 (fontified nil)) . 11721) (11721 . 11749) (#("s" 0 1 (fontified nil)) . 11721) (11721 . 11722) (#("send_report_with_u8_array(${1:report_id}, ${2:data})$0" 0 54 (fontified nil)) . 11721) (11721 . 11775) (#("send_report_with_u8_array(report_id, data)" 0 26 (fontified t) 26 35 (fontified t) 35 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t)) . 11721) (undo-tree-id14476 . -26) (undo-tree-id14477 . -26) (undo-tree-id14478 . -26) (undo-tree-id14479 . -42) (undo-tree-id14480 . -42) (undo-tree-id14481 . -37) (undo-tree-id14482 . 1) (undo-tree-id14483 . -37) (undo-tree-id14484 . -37) (undo-tree-id14485 . -37) (undo-tree-id14486 . -37) (undo-tree-id14487 . -37) (undo-tree-id14488 . -37) (undo-tree-id14489 . -37) (undo-tree-id14490 . -37) (undo-tree-id14491 . -37) (undo-tree-id14492 . -37) (undo-tree-id14493 . -37) (undo-tree-id14494 . -37) (undo-tree-id14495 . -37) (undo-tree-id14496 . -37) (undo-tree-id14497 . -37) (undo-tree-id14498 . -37) (undo-tree-id14499 . -37) (undo-tree-id14500 . -37) (undo-tree-id14501 . -37) (undo-tree-id14502 . -37) (undo-tree-id14503 . -37) (undo-tree-id14504 . -37) (undo-tree-id14505 . -37) (undo-tree-id14506 . -37) (undo-tree-id14507 . -37) (undo-tree-id14508 . -37) (undo-tree-id14509 . -37) (undo-tree-id14510 . -37) (undo-tree-id14511 . -37) (undo-tree-id14512 . -37) (undo-tree-id14513 . -37) (undo-tree-id14514 . -37) (undo-tree-id14515 . -37) (undo-tree-id14516 . -37) (undo-tree-id14517 . -37) (undo-tree-id14518 . -37) (undo-tree-id14519 . -37) (undo-tree-id14520 . -37) (undo-tree-id14521 . -37) (undo-tree-id14522 . -37) (undo-tree-id14523 . -37) (undo-tree-id14524 . -37) (undo-tree-id14525 . -37) (undo-tree-id14526 . -37) (undo-tree-id14527 . -37) (undo-tree-id14528 . -37) (undo-tree-id14529 . -37) (undo-tree-id14530 . -37) (undo-tree-id14531 . -37) (undo-tree-id14532 . -37) (undo-tree-id14533 . -37) (undo-tree-id14534 . -37) (undo-tree-id14535 . -37) (undo-tree-id14536 . -37) (undo-tree-id14537 . -37) (undo-tree-id14538 . -37) (undo-tree-id14539 . -37) (apply yas--snippet-revive 11721 11763 #s(yas--snippet nil (#s(yas--field 1 11747 11747 nil nil nil t #s(yas--field 2 11750 11754 nil nil nil nil #s(yas--exit 11755 nil))) #s(yas--field 2 11750 11754 nil nil nil nil #s(yas--exit 11755 nil))) #s(yas--exit 11755 nil) 69 nil #s(yas--field 1 11747 11747 nil nil nil t #s(yas--field 2 11750 11754 nil nil nil nil #s(yas--exit 11755 nil))) nil nil))) (25968 40956 807527 0) 0 nil])
([nil nil ((6079 . 6082)) ((#(" ==" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 6079) (undo-tree-id10773 . -3) (undo-tree-id10774 . -3)) (25968 39138 448577 0) 0 nil])
([nil nil ((#("report_id" 0 9 (fontified nil)) . 11748) (11747 . 11748)) ((#("2" 0 1 (fontified nil)) . 11747) (undo-tree-id14475 . -1) (11748 . 11757)) (25968 40956 889503 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -6080) (undo-tree-id6374 . -1) (#("=" 0 1 (fontified t)) . -6081) (undo-tree-id6375 . -1) 6082) ((6080 . 6082)) (25968 39137 849899 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11721 11755 #s(yas--snippet nil (#s(yas--field 1 11747 11747 nil nil nil t #s(yas--field 2 11750 11754 nil nil nil nil #s(yas--exit 11755 nil))) #s(yas--field 2 11750 11754 nil nil nil nil #s(yas--exit 11755 nil))) #s(yas--exit 11755 nil) 69 nil #s(yas--field 1 11747 11747 nil nil nil t #s(yas--field 2 11750 11754 nil nil nil nil #s(yas--exit 11755 nil))) nil nil))) ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 11747 11747 nil nil nil t #s(yas--field 2 11750 11754 nil nil nil nil #s(yas--exit 11755 nil))) #s(yas--field 2 11750 11754 nil nil nil nil #s(yas--exit 11755 nil))) #s(yas--exit 11755 nil) 69 nil #s(yas--field 1 11747 11747 nil nil nil t #s(yas--field 2 11750 11754 nil nil nil nil #s(yas--exit 11755 nil))) nil nil))) (25968 40956 973313 0) 0 nil])
([nil nil ((6080 . 6081)) ((#("{" 0 1 (fontified t)) . 6080)) (25968 39137 766865 0) 0 nil])
([nil nil ((#("data" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 11750)) ((11750 . 11754)) (25968 40957 56863 0) 0 nil])
([nil nil ((6448 . 6449)) ((#("}" 0 1 (fontified t)) . 6448) (undo-tree-id10772 . -1)) (25968 39137 683209 0) 0 nil])
([nil nil ((11750 . 11752)) ((#("se" 0 2 (fontified t)) . 11750) (undo-tree-id14473 . -2) (undo-tree-id14474 . -2)) (25968 40957 139975 0) 0 nil])
([nil nil ((6448 . 6450)) ((#("
	" 0 1 (fontified t) 1 2 (fontified t)) . 6448) (undo-tree-id10771 . -1)) (25968 39137 601058 0) 0 nil])
([nil nil ((11750 . 11758) (#("se" 0 2 (fontified nil)) . 11750) (11750 . 11752) (#("send_buf" 0 8 (fontified nil)) . 11750) (11750 . 11758) (#("se" 0 2 (fontified t)) . 11750)) ((11750 . 11752) (#("send_buf" 0 8 (fontified nil)) . 11750) (11750 . 11758) (#("se" 0 2 (fontified nil)) . 11750) (11750 . 11752) (#("send_buf" 0 8 (fontified t)) . 11750) (undo-tree-id14470 . -8) (undo-tree-id14471 . -8) (undo-tree-id14472 . 8)) (25968 40957 223313 0) 0 nil])
([nil nil ((6434 . 6438) (6380 . 6381) (#("    " 0 4 (fontified t)) . 6380) (6313 . 6314) (#("    " 0 4 (fontified t)) . 6313) (6249 . 6250) (#("    " 0 4 (fontified t)) . 6249) (6183 . 6184) (#("    " 0 4 (fontified t)) . 6183) (6114 . 6115) (#("    " 0 4 (fontified t)) . 6114) (undo-tree-id6373 . -4) (6083 . 6087) 6082) ((#("    " 0 4 (fontified t)) . 6083) (6114 . 6118) (#("	" 0 1 (fontified t)) . 6114) (6183 . 6187) (#("	" 0 1 (fontified t)) . 6183) (6249 . 6253) (#("	" 0 1 (fontified t)) . 6249) (6313 . 6317) (#("	" 0 1 (fontified t)) . 6313) (6380 . 6384) (#("	" 0 1 (fontified t)) . 6380) (#("    " 0 4 (fontified t)) . 6434)) (25968 39137 516175 0) 0 nil])
([nil nil ((11758 . 11760)) ((#("[]" 0 1 (fontified t) 1 2 (fontified t)) . 11758) (undo-tree-id14468 . -1) (undo-tree-id14469 . -1)) (25968 40957 306484 0) 0 nil])
([nil nil ((16929 . 16935) (t 25968 36511 242103 465000)) ((#("move||" 0 6 (fontified t)) . 16929)) (25968 39137 433576 0) 0 nil])
([nil nil ((11759 . 11764)) ((#("1..18" 0 5 (fontified t)) . 11759)) (25968 40957 390157 0) 0 nil])
([nil nil ((17086 . 17092) (t 25968 36591 247009 851000)) ((#("move||" 0 6 (fontified t)) . 17086)) (25968 39137 349256 0) 0 nil])
([nil nil ((#(" .as_ref().unwrap().write(&send_buf[0..18]" 0 1 (fontified t) 1 26 (fontified t) 26 27 (face rust-ampersand-face fontified t) 27 42 (fontified t)) . 11768)) ((11768 . 11810)) (25968 40957 472823 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17447 . 17448) (nil fontified nil 17442 . 17448) (17442 . 17448) (t 25968 36596 285163 585000)) ((#("move||" 0 5 (fontified nil) 5 6 (fontified nil rear-nonsticky nil)) . 17442) (nil rear-nonsticky t 17447 . 17448)) (25968 39137 265223 0) 0 nil])
([nil nil ((#("  )" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 11766) (undo-tree-id14629 . -2) (undo-tree-id14630 . -2)) ((11766 . 11769)) (25968 40957 556605 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17597 . 17598) (nil fontified nil 17592 . 17598) (17592 . 17598)) ((#("move||" 0 5 (fontified nil) 5 6 (fontified nil rear-nonsticky nil)) . 17592) (nil rear-nonsticky t 17597 . 17598)) (25968 39137 181671 0) 0 nil])
([nil nil ((#("res) = " 0 7 (fontified t)) . 11707) (undo-tree-id14631 . -7)) ((11707 . 11714)) (25968 40957 639978 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17916 . 17917) (nil fontified nil 17911 . 17917) (17911 . 17917)) ((#("move||" 0 5 (fontified nil) 5 6 (fontified nil rear-nonsticky nil)) . 17911) (nil rear-nonsticky t 17916 . 17917)) (25968 39137 97453 0) 0 nil])
([nil nil ((#("Ok(" 0 2 (face font-lock-type-face fontified t) 2 3 (fontified t)) . 11704) (undo-tree-id14632 . -3) (undo-tree-id14633 . -3) (undo-tree-id14634 . -3)) ((11704 . 11707)) (25968 40957 722963 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 18062 . 18063) (nil fontified nil 18057 . 18063) (18057 . 18063)) ((#("move||" 0 5 (fontified nil) 5 6 (fontified nil rear-nonsticky nil)) . 18057) (nil rear-nonsticky t 18062 . 18063)) (25968 39137 44685 0) 0 nil])
([nil nil ((#("let " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . 11700) (undo-tree-id14635 . -4) (undo-tree-id14636 . -4) (undo-tree-id14637 . -4)) ((11700 . 11704)) (25968 40957 806546 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 18364 . 18365) (nil fontified nil 18359 . 18365) (18359 . 18365)) ((#("move||" 0 5 (fontified nil) 5 6 (fontified nil rear-nonsticky nil)) . 18359) (nil rear-nonsticky t 18364 . 18365)) (25968 39136 513635 0) 0 nil])
([nil nil ((#("if " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . 11697) (undo-tree-id14638 . -3) (undo-tree-id14639 . -3) (undo-tree-id14640 . -3)) ((11697 . 11700)) (25968 40957 890350 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 18517 . 18518) (nil fontified nil 18512 . 18518) (18512 . 18518)) ((#("move||" 0 5 (fontified nil) 5 6 (fontified nil rear-nonsticky nil)) . 18512) (undo-tree-id10770 . -6) (nil rear-nonsticky t 18517 . 18518)) (25968 39136 203166 0) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 11750)) ((11750 . 11751)) (25968 40957 973316 0) 0 nil])
([nil nil ((#("	if keyboard_state.get().keys[index].selected {" 0 1 (fontified t) 1 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 19 (fontified t) 19 25 (fontified t) 25 30 (fontified t) 30 35 (fontified t) 35 37 (fontified t) 37 47 (fontified t)) . 6034) (undo-tree-id6389 . -47) (undo-tree-id6391 . -47) (undo-tree-id6393 . -47) (undo-tree-id6395 . -47) (undo-tree-id6397 . -47) (undo-tree-id6399 . -46) (undo-tree-id6401 . -43) (undo-tree-id6403 . -39) (undo-tree-id6405 . -32) (undo-tree-id6407 . -26) (undo-tree-id6409 . -22) (undo-tree-id6411 . -18) (undo-tree-id6413 . -15) (undo-tree-id6415 . -11) (undo-tree-id6417 . -8) (undo-tree-id6419 . -6) (undo-tree-id6421 . -3) (undo-tree-id6423 . -1) (t 25968 36614 561105 921000)) ((6034 . 6081)) (25968 39135 667630 0) 0 nil])
([nil nil ((#("	    handle.device = None;
		    break;
		}" 0 21 (fontified t) 21 25 (face font-lock-type-face fontified t) 25 27 (fontified t) 27 33 (fontified t) 33 38 (face font-lock-keyword-face fontified t) 38 40 (fontified t) 40 43 (fontified t)) . 11923)) ((11923 . 11966)) (25968 40958 56793 0) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -6396) (undo-tree-id6380 . -1) (undo-tree-id6382 . -1) (undo-tree-id6384 . -1) (undo-tree-id6386 . -1) (undo-tree-id6388 . -1) 6397) ((6396 . 6397)) (25968 39135 574791 0) 0 nil])
([nil nil ((#("		} else {" 0 4 (fontified t) 4 8 (face font-lock-keyword-face fontified t) 8 10 (fontified t)) . 11911)) ((11911 . 11921)) (25968 40958 141691 0) 0 nil])
([nil nil ((16917 . 16920) (t 25968 37004 206288 323000)) ((#(".st" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 16917) (undo-tree-id10768 . -3) (undo-tree-id10769 . -3)) (25968 39135 491920 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11911)) ((11911 . 11912)) (25968 40958 223259 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -16917) (undo-tree-id6432 . -1) (undo-tree-id6434 . -1) (undo-tree-id6436 . -1) (undo-tree-id6438 . -1) (undo-tree-id6440 . -1) (undo-tree-id6442 . -1) (undo-tree-id6444 . -1) (undo-tree-id6446 . -1) (#("s" 0 1 (fontified t)) . -16918) (undo-tree-id6448 . -1) (undo-tree-id6450 . -1) (undo-tree-id6452 . -1) (undo-tree-id6454 . -1) (undo-tree-id6456 . -1) (undo-tree-id6458 . -1) (#("t" 0 1 (fontified t)) . -16919) (undo-tree-id6459 . -1) (undo-tree-id6461 . -1) (undo-tree-id6463 . -1) 16920) ((16917 . 16920)) (25968 39135 407731 0) 0 nil])
([nil nil ((#(" res," 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 11876)) ((11876 . 11881)) (25968 40958 306170 0) 0 nil])
([nil nil ((16917 . 16920)) ((#(".to" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 16917) (undo-tree-id10765 . -3) (undo-tree-id10766 . -3) (undo-tree-id10767 . -1)) (25968 39135 325208 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 11875) (undo-tree-id14641 . -1) (undo-tree-id14642 . -1)) ((11875 . 11876)) (25968 40958 389967 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -16917) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6500 . -1) (undo-tree-id6502 . -1) (#("t" 0 1 (fontified t)) . -16918) (undo-tree-id6504 . -1) (undo-tree-id6506 . -1) (undo-tree-id6508 . -1) (#("o" 0 1 (fontified t)) . -16919) (undo-tree-id6509 . -1) (undo-tree-id6511 . -1) 16920) ((16917 . 16920)) (25968 39135 241649 0) 0 nil] [nil nil ((apply yas--snippet-revive 16918 16929 #s(yas--snippet nil nil #s(yas--exit #<marker at 19491 in component.rs> nil) 49 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 19491 in component.rs> nil) 49 nil nil nil nil)) (16918 . 16929) (#("to_string()$0" 0 13 (fontified nil)) . 16918) (16918 . 16931) (#("to" 0 2 (fontified nil)) . 16918) (16918 . 16920) (#("to_string() (as ToString)" 0 25 (fontified nil)) . -16918) (16918 . 16943) (#("to" 0 2 (fontified t)) . -16918) (undo-tree-id6425 . -2) (undo-tree-id6427 . -1) (undo-tree-id6429 . -2) (undo-tree-id6431 . -2) 16920) ((16918 . 16920) (#("to_string() (as ToString)" 0 25 (fontified nil)) . 16918) (16918 . 16943) (#("to" 0 2 (fontified nil)) . 16918) (16918 . 16920) (#("to_string()$0" 0 13 (fontified nil)) . 16918) (16918 . 16931) (#("to_string()" 0 11 (fontified t)) . 16918) (undo-tree-id6496 . -11)) (25968 37132 227125 0) 0 nil])
([nil nil ((#("send: {}" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t) 4 5 (face font-lock-string-face fontified t) 5 6 (face font-lock-string-face fontified t) 6 7 (face font-lock-string-face fontified t) 7 8 (face font-lock-string-face fontified t)) . 11842)) ((11842 . 11850)) (25968 40958 472801 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -17078) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6516 . -1) (undo-tree-id6518 . -1) (undo-tree-id6520 . -1) (undo-tree-id6522 . -1) (undo-tree-id6524 . -1) (undo-tree-id6526 . -1) (undo-tree-id6528 . -1) (undo-tree-id6530 . -1) (#("n" 0 1 (fontified t)) . -17079) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6534 . -1) (undo-tree-id6536 . -1) (undo-tree-id6538 . -1) (undo-tree-id6540 . -1) (undo-tree-id6542 . -1) (undo-tree-id6544 . -1) (#("p" 0 1 (fontified t)) . -17080) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6549 . -1) (undo-tree-id6551 . -1) (undo-tree-id6553 . -1) (undo-tree-id6555 . -1) (undo-tree-id6557 . -1) (undo-tree-id6559 . -1) (#("u" 0 1 (fontified t)) . -17081) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6563 . -1) (undo-tree-id6565 . -1) (undo-tree-id6567 . -1) (undo-tree-id6569 . -1) (undo-tree-id6571 . -1) (#("t" 0 1 (fontified t)) . -17082) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (undo-tree-id6576 . -1) (undo-tree-id6578 . -1) (undo-tree-id6580 . -1) (undo-tree-id6582 . -1) (undo-tree-id6584 . -1) 17083 (t 25968 37135 281041 758000)) ((17078 . 17083)) (25968 39135 158976 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17097 . 17098) (nil fontified nil 17087 . 17098) (nil fontified nil 17086 . 17087) (17086 . 17098) (t 25968 37090 205948 476000)) ((#(".to_string()" 0 1 (fontified nil) 1 11 (fontified nil) 11 12 (rear-nonsticky nil fontified nil)) . 17086) (nil rear-nonsticky t 17097 . 17098)) (25968 37131 334765 0) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-string-face fontified t)) . 11841) (undo-tree-id14643 . -1) (undo-tree-id14644 . -1)) ((11841 . 11842)) (25968 40958 556134 0) 0 nil])
([nil nil ((17078 . 17084)) ((#("change" 0 6 (fontified t)) . 17078)) (25968 39135 74924 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17462 . 17463) (nil fontified nil 17452 . 17463) (nil fontified nil 17451 . 17452) (17451 . 17463) (t 25968 37098 539064 388000)) ((#(".to_string()" 0 1 (fontified nil) 1 11 (fontified nil) 11 12 (rear-nonsticky nil fontified nil)) . 17451) (nil rear-nonsticky t 17462 . 17463)) (25968 37130 989929 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 11841)) ((11841 . 11842)) (25968 40958 639942 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17025 . 17026) (nil fontified nil 17021 . 17026) (nil fontified nil 17016 . 17021) (nil fontified nil 17013 . 17016) (nil fontified nil 17009 . 17013) (17009 . 17026) (t 25968 37470 370716 363000)) ((#("min=\"1\" max=\"100\"" 0 4 (fontified nil) 4 7 (face font-lock-string-face fontified nil) 7 12 (fontified nil) 12 16 (face font-lock-string-face fontified nil) 16 17 (face font-lock-string-face fontified nil rear-nonsticky nil)) . 17009) (undo-tree-id10762 . -17) (undo-tree-id10763 . -17) (undo-tree-id10764 . -17) (nil rear-nonsticky t 17025 . 17026)) (25968 39134 991606 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17624 . 17625) (nil fontified nil 17614 . 17625) (nil fontified nil 17613 . 17614) (17613 . 17625)) ((#(".to_string()" 0 1 (fontified nil) 1 11 (fontified nil) 11 12 (rear-nonsticky nil fontified nil)) . 17613) (nil rear-nonsticky t 17624 . 17625)) (25968 37130 319863 0) 0 nil])
([nil nil ((11841 . 11842)) ((#("[" 0 1 (face font-lock-string-face fontified t)) . 11841)) (25968 40958 723442 0) 0 nil])
([nil nil ((17026 . 17027)) ((#(" " 0 1 (fontified t)) . 17026)) (25968 39134 908323 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17953 . 17954) (nil fontified nil 17943 . 17954) (nil fontified nil 17942 . 17943) (17942 . 17954)) ((#(".to_string()" 0 1 (fontified nil) 1 11 (fontified nil) 11 12 (rear-nonsticky nil fontified nil)) . 17942) (nil rear-nonsticky t 17953 . 17954)) (25968 37130 10979 0) 0 nil])
([nil nil ((11866 . 11867)) (("," . 11866)) (25968 40958 806686 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -17600) (undo-tree-id6808 . -1) (undo-tree-id6809 . -1) (undo-tree-id6811 . -1) (undo-tree-id6813 . -1) (undo-tree-id6815 . -1) (undo-tree-id6817 . -1) (undo-tree-id6819 . -1) (undo-tree-id6821 . -1) (undo-tree-id6823 . -1) (undo-tree-id6825 . -1) (undo-tree-id6827 . -1) (undo-tree-id6829 . -1) (undo-tree-id6831 . -1) (#("n" 0 1 (fontified t)) . -17601) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6835 . -1) (undo-tree-id6837 . -1) (undo-tree-id6839 . -1) (undo-tree-id6841 . -1) (undo-tree-id6843 . -1) (undo-tree-id6845 . -1) (undo-tree-id6847 . -1) (undo-tree-id6849 . -1) (undo-tree-id6851 . -1) (undo-tree-id6853 . -1) (#("p" 0 1 (fontified t)) . -17602) (undo-tree-id6855 . -1) (undo-tree-id6856 . -1) (undo-tree-id6858 . -1) (undo-tree-id6860 . -1) (undo-tree-id6862 . -1) (undo-tree-id6864 . -1) (undo-tree-id6866 . -1) (undo-tree-id6868 . -1) (undo-tree-id6870 . -1) (undo-tree-id6872 . -1) (undo-tree-id6874 . -1) (undo-tree-id6876 . -1) (#("u" 0 1 (fontified t)) . -17603) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6880 . -1) (undo-tree-id6882 . -1) (undo-tree-id6884 . -1) (undo-tree-id6886 . -1) (undo-tree-id6888 . -1) (undo-tree-id6890 . -1) (undo-tree-id6892 . -1) (undo-tree-id6894 . -1) (undo-tree-id6896 . -1) (#("t" 0 1 (fontified t)) . -17604) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6901 . -1) (undo-tree-id6903 . -1) (undo-tree-id6905 . -1) (undo-tree-id6907 . -1) (undo-tree-id6909 . -1) (undo-tree-id6911 . -1) (undo-tree-id6913 . -1) (undo-tree-id6915 . -1) (undo-tree-id6917 . -1) 17605 (t 25968 37534 999705 577000)) ((17600 . 17605)) (25968 39134 824561 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 18111 . 18112) (nil fontified nil 18101 . 18112) (nil fontified nil 18100 . 18101) (18100 . 18112)) ((#(".to_string()" 0 1 (fontified nil) 1 11 (fontified nil) 11 12 (rear-nonsticky nil fontified nil)) . 18100) (nil rear-nonsticky t 18111 . 18112)) (25968 37129 604075 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11749)) ((11749 . 11750)) (25968 40958 889909 0) 0 nil])
([nil nil ((17600 . 17603)) ((#("cha" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 17600) (undo-tree-id10760 . -3) (undo-tree-id10761 . -3)) (25968 39134 740906 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 18428 . 18429) (nil fontified nil 18418 . 18429) (nil fontified nil 18417 . 18418) (18417 . 18429)) ((#(".to_string()" 0 1 (fontified nil) 1 11 (fontified nil) 11 12 (rear-nonsticky nil fontified nil)) . 18417) (nil rear-nonsticky t 18428 . 18429)) (25968 37129 24664 0) 0 nil])
([nil nil ((11697 . 11698)) ((#("l" 0 1 (fontified t)) . 11697) (undo-tree-id14466 . -1) (undo-tree-id14467 . -1)) (25968 40958 973397 0) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -17601) (undo-tree-id6796 . -1) (undo-tree-id6798 . -1) (undo-tree-id6800 . -1) (undo-tree-id6802 . -1) (#("a" 0 1 (fontified t)) . -17602) (undo-tree-id6804 . -1) (undo-tree-id6806 . -1) 17603) ((17601 . 17603)) (25968 39134 656872 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 18593 . 18594) (nil fontified nil 18583 . 18594) (nil fontified nil 18582 . 18583) (18582 . 18594)) ((#(".to_string()" 0 1 (fontified nil) 1 11 (fontified nil) 11 12 (rear-nonsticky nil fontified nil)) . 18582) (undo-tree-id6464 . -12) (undo-tree-id6465 . -12) (undo-tree-id6466 . -12) (undo-tree-id6467 . -12) (undo-tree-id6468 . -12) (undo-tree-id6469 . -12) (undo-tree-id6470 . -12) (undo-tree-id6471 . -12) (undo-tree-id6472 . -12) (undo-tree-id6473 . -12) (undo-tree-id6474 . -12) (undo-tree-id6475 . -12) (undo-tree-id6476 . -12) (undo-tree-id6477 . -12) (undo-tree-id6478 . -12) (undo-tree-id6479 . -12) (undo-tree-id6480 . -12) (undo-tree-id6481 . -12) (undo-tree-id6482 . -12) (undo-tree-id6483 . -12) (undo-tree-id6484 . -12) (undo-tree-id6485 . -12) (undo-tree-id6486 . -12) (undo-tree-id6487 . -12) (undo-tree-id6488 . -12) (undo-tree-id6489 . -12) (undo-tree-id6490 . -12) (undo-tree-id6491 . -12) (undo-tree-id6492 . -12) (undo-tree-id6493 . -12) (undo-tree-id6494 . -12) (undo-tree-id6495 . -12) (nil rear-nonsticky t 18593 . 18594) (t 25968 37118 925467 424000)) (25968 37118 904553 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 11697)) ((11697 . 11698)) (25968 40959 56539 0) 0 nil])
([nil nil ((17601 . 17606)) ((#("hange" 0 5 (fontified t)) . 17601)) (25968 39134 574412 0) 0 nil])
nil
([nil nil ((11697 . 11700)) ((#("log" 0 3 (fontified t)) . 11697) (undo-tree-id14464 . -3) (undo-tree-id14465 . -3)) (25968 40959 139896 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -18064) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6725 . -1) (undo-tree-id6727 . -1) (undo-tree-id6729 . -1) (undo-tree-id6731 . -1) (undo-tree-id6733 . -1) (undo-tree-id6735 . -1) (undo-tree-id6737 . -1) (#("n" 0 1 (fontified t)) . -18065) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6742 . -1) (undo-tree-id6744 . -1) (undo-tree-id6746 . -1) (undo-tree-id6748 . -1) (undo-tree-id6750 . -1) (undo-tree-id6752 . -1) (undo-tree-id6754 . -1) (#("p" 0 1 (fontified t)) . -18066) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6758 . -1) (undo-tree-id6760 . -1) (undo-tree-id6762 . -1) (undo-tree-id6764 . -1) (undo-tree-id6766 . -1) (undo-tree-id6768 . -1) (#("u" 0 1 (fontified t)) . -18067) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6773 . -1) (undo-tree-id6775 . -1) (undo-tree-id6777 . -1) (undo-tree-id6779 . -1) (undo-tree-id6781 . -1) (undo-tree-id6783 . -1) (#("t" 0 1 (fontified t)) . -18068) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (undo-tree-id6787 . -1) (undo-tree-id6789 . -1) (undo-tree-id6791 . -1) (undo-tree-id6793 . -1) (undo-tree-id6795 . -1) 18069) ((18064 . 18069)) (25968 39134 490425 0) 0 nil])
([nil nil ((11700 . 11701)) ((#(" " 0 1 (fontified t)) . 11700)) (25968 40959 223182 0) 0 nil])
([nil nil ((18064 . 18070)) ((#("change" 0 6 (fontified t)) . 18064)) (25968 39134 407182 0) 0 nil])
([nil nil ((11700 . 11701)) ((#("g" 0 1 (fontified t)) . 11700) (undo-tree-id14462 . -1) (undo-tree-id14463 . -1)) (25968 40959 306566 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -18523) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6592 . -1) (undo-tree-id6594 . -1) (undo-tree-id6596 . -1) (undo-tree-id6598 . -1) (undo-tree-id6600 . -1) (undo-tree-id6602 . -1) (undo-tree-id6604 . -1) (undo-tree-id6606 . -1) (undo-tree-id6608 . -1) (undo-tree-id6610 . -1) (undo-tree-id6612 . -1) (undo-tree-id6614 . -1) (undo-tree-id6616 . -1) (undo-tree-id6618 . -1) (undo-tree-id6620 . -1) (#("n" 0 1 (fontified t)) . -18524) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6625 . -1) (undo-tree-id6627 . -1) (undo-tree-id6629 . -1) (undo-tree-id6631 . -1) (undo-tree-id6633 . -1) (undo-tree-id6635 . -1) (undo-tree-id6637 . -1) (undo-tree-id6639 . -1) (undo-tree-id6641 . -1) (undo-tree-id6643 . -1) (undo-tree-id6645 . -1) (undo-tree-id6647 . -1) (undo-tree-id6649 . -1) (undo-tree-id6651 . -1) (undo-tree-id6653 . -1) (#("p" 0 1 (fontified t)) . -18525) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6657 . -1) (undo-tree-id6659 . -1) (undo-tree-id6661 . -1) (undo-tree-id6663 . -1) (undo-tree-id6665 . -1) (undo-tree-id6667 . -1) (undo-tree-id6669 . -1) (undo-tree-id6671 . -1) (undo-tree-id6673 . -1) (undo-tree-id6675 . -1) (undo-tree-id6677 . -1) (undo-tree-id6679 . -1) (undo-tree-id6681 . -1) (undo-tree-id6683 . -1) (#("u" 0 1 (fontified t)) . -18526) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6688 . -1) (undo-tree-id6690 . -1) (undo-tree-id6692 . -1) (undo-tree-id6694 . -1) (undo-tree-id6696 . -1) (undo-tree-id6698 . -1) (undo-tree-id6700 . -1) (undo-tree-id6702 . -1) (undo-tree-id6704 . -1) (undo-tree-id6706 . -1) (undo-tree-id6708 . -1) (undo-tree-id6710 . -1) (undo-tree-id6712 . -1) (undo-tree-id6714 . -1) (#("t" 0 1 (fontified t)) . -18527) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6718 . -1) (undo-tree-id6720 . -1) 18528) ((18523 . 18528)) (25968 39134 323615 0) 0 nil])
([nil nil ((11697 . 11704) (#("logg" 0 4 (fontified nil)) . 11697) (11697 . 11701) (#("logging" 0 7 (fontified nil)) . 11697) (11697 . 11704) (#("logg" 0 3 (fontified t) 3 4 (fontified t)) . 11697) (undo-tree-id14645 . -3) (undo-tree-id14646 . -3)) ((11697 . 11701) (#("logging" 0 7 (fontified nil)) . 11697) (11697 . 11704) (#("logg" 0 4 (fontified nil)) . 11697) (11697 . 11701) (#("logging" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 11697) (undo-tree-id14460 . -7) (undo-tree-id14461 . -7)) (25968 40959 390502 0) 0 nil])
([nil nil ((18523 . 18527)) ((#("chan" 0 4 (fontified t)) . 18523) (undo-tree-id10757 . -4) (undo-tree-id10758 . -4) (undo-tree-id10759 . -4)) (25968 39134 238407 0) 0 nil])
([nil nil ((#("ogging" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 11698)) ((11698 . 11704)) (25968 40959 472725 0) 0 nil])
([nil nil ((18527 . 18529)) ((#("gw" 0 1 (fontified t) 1 2 (fontified t)) . 18527) (undo-tree-id10754 . -2) (undo-tree-id10755 . -2) (undo-tree-id10756 . -1)) (25968 39134 165307 0) 0 nil])
([nil nil ((#("l " 0 1 (fontified t) 1 2 (fontified t)) . 11697) (undo-tree-id14647 . -1) (undo-tree-id14648 . -1)) ((11697 . 11699)) (25968 40959 556283 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -18528) (undo-tree-id6585 . -1) (undo-tree-id6587 . -1) 18529) ((18528 . 18529)) (25968 39134 70822 0) 0 nil])
([nil nil ((11697 . 11698)) ((#("w" 0 1 (fontified t)) . 11697) (undo-tree-id14458 . -1) (undo-tree-id14459 . -1)) (25968 40959 640036 0) 0 nil])
([nil nil ((18528 . 18529)) (("e" . 18528)) (25968 39133 987424 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . 11697)) ((11697 . 11698)) (25968 40959 723302 0) 0 nil])
([nil nil ((13704 . 13705) (t 25968 37607 507849 937000)) ((#("\\" 0 1 (fontified t)) . 13704) (undo-tree-id10751 . -1) (undo-tree-id10752 . -1) (undo-tree-id10753 . -1)) (25968 39133 903465 0) 0 nil])
([nil nil ((11697 . 11699)) ((#("  " 0 2 (fontified t)) . 11697) (undo-tree-id14457 . -2)) (25968 40959 806571 0) 0 nil])
([nil nil ((13705 . 13717)) ((#("
					      " 0 1 (fontified t) 1 2 (fontified t) 2 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t)) . 13705) (undo-tree-id10748 . -12) (undo-tree-id10749 . -12) (undo-tree-id10750 . -2)) (25968 39133 820805 0) 0 nil])
([nil nil ((11697 . 11700)) ((#("win" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 11697) (undo-tree-id14455 . -3) (undo-tree-id14456 . -3)) (25968 40959 889743 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -13715) (undo-tree-id7006 . -1) (#(" " 0 1 (fontified t)) . -13716) (undo-tree-id7007 . -1) 13717) ((13715 . 13717)) (25968 39133 737441 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 11699)) ((11699 . 11700)) (25968 40959 973242 0) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -13704) (undo-tree-id7005 . -1) 13705) ((13704 . 13705)) (25968 39133 653501 0) 0 nil])
([nil nil ((11699 . 11700)) ((#("b" 0 1 (fontified t)) . 11699) (undo-tree-id14453 . -1) (undo-tree-id14454 . -1)) (25968 40960 56501 0) 0 nil])
([nil nil ((#("				    " 0 8 (fontified t)) . -13706) (undo-tree-id7004 . -8) 13714) ((13706 . 13714)) (25968 39133 570722 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 11699)) ((11699 . 11700)) (25968 40960 139963 0) 0 nil])
([nil nil ((13706 . 13710)) ((#("logg" 0 4 (fontified t)) . 13706) (undo-tree-id10746 . -4) (undo-tree-id10747 . -4)) (25968 39133 488005 0) 0 nil])
([nil nil ((#("wi" 0 1 (fontified t) 1 2 (fontified t)) . 11697) (undo-tree-id14649 . -2) (undo-tree-id14650 . -2)) ((11697 . 11699)) (25968 40960 223153 0) 0 nil])
([nil nil ((13706 . 13713) (#("logg" 0 4 (fontified nil)) . 13706) (13706 . 13710) (#("logging" 0 7 (fontified nil)) . -13706) (13706 . 13713) (#("logg" 0 4 (fontified t)) . -13706) (undo-tree-id7003 . -4) 13710) ((13706 . 13710) (#("logging" 0 7 (fontified nil)) . 13706) (13706 . 13713) (#("logg" 0 4 (fontified nil)) . 13706) (13706 . 13710) (#("logging" 0 7 (fontified t)) . 13706) (undo-tree-id10743 . -7) (undo-tree-id10744 . -7) (undo-tree-id10745 . -7)) (25968 39133 404042 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11734 . 11735) (11699 . 11735)) ((#("wasm_bindgen_futures::JsFuture::from" 0 20 (face font-lock-constant-face fontified nil) 20 22 (fontified nil) 22 30 (face font-lock-type-face fontified nil) 30 35 (fontified nil) 35 36 (rear-nonsticky nil fontified nil)) . 11699) (undo-tree-id14451 . -36) (undo-tree-id14452 . -36) (nil rear-nonsticky t 11734 . 11735)) (25968 40960 306664 0) 0 nil])
([nil nil ((13713 . 13718)) ((#("::log" 0 2 (fontified t) 2 5 (fontified t)) . 13713) (undo-tree-id10740 . -5) (undo-tree-id10741 . -5) (undo-tree-id10742 . -2)) (25968 39133 321007 0) 0 nil])
([nil nil ((11735 . 11736)) ((#("(" 0 1 (fontified t)) . 11735)) (25968 40960 389847 0) 0 nil])
([nil nil ((apply yas--snippet-revive 13715 13721 #s(yas--snippet nil nil #s(yas--exit #<marker at 16356 in component.rs> nil) 50 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 16356 in component.rs> nil) 50 nil nil nil nil)) (13715 . 13721) (#("log!($0)" 0 8 (fontified nil)) . 13715) (13715 . 13723) (#("log" 0 3 (fontified nil)) . 13715) (13715 . 13718) (#("log!(…)" 0 7 (fontified nil)) . -13715) (13715 . 13722) (#("log" 0 3 (fontified t)) . -13715) (undo-tree-id7002 . -3) 13718) ((13715 . 13718) (#("log!(…)" 0 7 (fontified nil)) . 13715) (13715 . 13722) (#("log" 0 3 (fontified nil)) . 13715) (13715 . 13718) (#("log!($0)" 0 8 (fontified nil)) . 13715) (13715 . 13723) (#("log!()" 0 4 (face font-lock-preprocessor-face fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 13715) (undo-tree-id10737 . -5) (undo-tree-id10738 . -5) (undo-tree-id10739 . -5)) (25968 39133 237381 0) 0 nil])
([nil nil ((11788 . 11791)) ((#(").a" 0 2 (fontified t) 2 3 (fontified t)) . 11788) (undo-tree-id14449 . -3) (undo-tree-id14450 . -3)) (25968 40960 472782 0) 0 nil])
([nil nil ((13720 . 13722)) ((#("\"\"" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t)) . 13720) (undo-tree-id10735 . -1) (undo-tree-id10736 . -1)) (25968 39133 153938 0) 0 nil])
([nil nil ((11790 . 11795) (#("a" 0 1 (fontified nil)) . 11790) (11790 . 11791) (#("await" 0 5 (fontified nil)) . 11790) (11790 . 11795) (#("a" 0 1 (fontified t)) . 11790)) ((11790 . 11791) (#("await" 0 5 (fontified nil)) . 11790) (11790 . 11795) (#("a" 0 1 (fontified nil)) . 11790) (11790 . 11791) (#("await" 0 5 (face font-lock-keyword-face fontified t)) . 11790) (undo-tree-id14447 . -5) (undo-tree-id14448 . -5)) (25968 40960 557517 0) 0 nil])
([nil nil ((13721 . 13723)) ((#("ev" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t)) . 13721) (undo-tree-id10733 . -2) (undo-tree-id10734 . -2)) (25968 39133 70900 0) 0 nil])
([nil nil ((11795 . 11796)) ((#(";" 0 1 (fontified t)) . 11795) (undo-tree-id14445 . -1) (undo-tree-id14446 . -1)) (25968 40960 639892 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . -13721) (undo-tree-id7000 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -13722) (undo-tree-id7001 . -1) 13723) ((13721 . 13723)) (25968 39132 987444 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 11697) (undo-tree-id14651 . -2)) ((11697 . 11699)) (25968 40960 723237 0) 0 nil])
([nil nil ((13721 . 13723)) ((#("{}" 0 2 (face font-lock-string-face fontified t)) . 13721) (undo-tree-id10731 . -1) (undo-tree-id10732 . -1)) (25968 39132 904397 0) 0 nil])
([nil nil ((11770 . 11771)) ((#("&" 0 1 (face rust-ampersand-face fontified t)) . 11770) (undo-tree-id14386 . -1) (undo-tree-id14387 . -1) (undo-tree-id14388 . -1) (undo-tree-id14389 . -1) (undo-tree-id14390 . -1) (undo-tree-id14391 . -1) (undo-tree-id14392 . -1) (undo-tree-id14393 . -1) (undo-tree-id14394 . -1) (undo-tree-id14395 . -1) (undo-tree-id14396 . -1) (undo-tree-id14397 . -1) (undo-tree-id14398 . -1) (undo-tree-id14399 . -1) (undo-tree-id14400 . -1) (undo-tree-id14401 . -1) (undo-tree-id14402 . -1) (undo-tree-id14403 . -1) (undo-tree-id14404 . -1) (undo-tree-id14405 . -1) (undo-tree-id14406 . -1) (undo-tree-id14407 . -1) (undo-tree-id14408 . -1) (undo-tree-id14409 . -1) (undo-tree-id14410 . -1) (undo-tree-id14411 . -1) (undo-tree-id14412 . -1) (undo-tree-id14413 . -1) (undo-tree-id14414 . -1) (undo-tree-id14415 . -1) (undo-tree-id14416 . -1) (undo-tree-id14417 . -1) (undo-tree-id14418 . -1) (undo-tree-id14419 . -1) (undo-tree-id14420 . -1) (undo-tree-id14421 . -1) (undo-tree-id14422 . -1) (undo-tree-id14423 . -1) (undo-tree-id14424 . -1) (undo-tree-id14425 . -1) (undo-tree-id14426 . -1) (undo-tree-id14427 . -1) (undo-tree-id14428 . -1) (undo-tree-id14429 . -1) (undo-tree-id14430 . -1) (undo-tree-id14431 . -1) (undo-tree-id14432 . -1) (undo-tree-id14433 . -1) (undo-tree-id14434 . -1) (undo-tree-id14435 . -1) (undo-tree-id14436 . -1) (undo-tree-id14437 . -1) (undo-tree-id14438 . -1) (undo-tree-id14439 . -1) (undo-tree-id14440 . -1) (undo-tree-id14441 . -1) (undo-tree-id14442 . -1) (undo-tree-id14443 . -1) (undo-tree-id14444 . -1)) (25968 40960 806646 0) 0 nil])
([nil nil ((13722 . 13724)) ((#(":?" 0 2 (face font-lock-string-face fontified t)) . 13722)) (25968 39132 820704 0) 0 nil])
([nil nil ((11771 . 11775)) ((#("mut " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . 11771) (undo-tree-id14336 . -4) (undo-tree-id14337 . -4) (undo-tree-id14338 . -4) (undo-tree-id14339 . -4) (undo-tree-id14340 . -4) (undo-tree-id14341 . -4) (undo-tree-id14342 . -4) (undo-tree-id14343 . -4) (undo-tree-id14344 . -4) (undo-tree-id14345 . -4) (undo-tree-id14346 . -4) (undo-tree-id14347 . -4) (undo-tree-id14348 . -4) (undo-tree-id14349 . -4) (undo-tree-id14350 . -4) (undo-tree-id14351 . -4) (undo-tree-id14352 . -4) (undo-tree-id14353 . -4) (undo-tree-id14354 . -4) (undo-tree-id14355 . -4) (undo-tree-id14356 . -4) (undo-tree-id14357 . -4) (undo-tree-id14358 . -4) (undo-tree-id14359 . -4) (undo-tree-id14360 . -4) (undo-tree-id14361 . -4) (undo-tree-id14362 . -4) (undo-tree-id14363 . -4) (undo-tree-id14364 . -4) (undo-tree-id14365 . -4) (undo-tree-id14366 . -4) (undo-tree-id14367 . -4) (undo-tree-id14368 . -4) (undo-tree-id14369 . -4) (undo-tree-id14370 . -4) (undo-tree-id14371 . -4) (undo-tree-id14372 . -4) (undo-tree-id14373 . -4) (undo-tree-id14374 . -4) (undo-tree-id14375 . -4) (undo-tree-id14376 . -4) (undo-tree-id14377 . -4) (undo-tree-id14378 . -4) (undo-tree-id14379 . -4) (undo-tree-id14380 . -4) (undo-tree-id14381 . -4) (undo-tree-id14382 . -4) (undo-tree-id14383 . -4) (undo-tree-id14384 . -4) (undo-tree-id14385 . -4) (t 25968 40922 153079 949000)) (25968 40960 889678 0) 0 nil])
([nil nil ((13726 . 13730)) ((#(", ev" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 13726) (undo-tree-id10729 . -4) (undo-tree-id10730 . -4)) (25968 39132 737435 0) 0 nil])
([nil nil ((11225 . 11227) (t 25968 40922 153079 949000)) nil (25968 40971 939594 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -13728) (undo-tree-id6998 . -1) (#("v" 0 1 (fontified t)) . -13729) (undo-tree-id6999 . -1) 13730) ((13728 . 13730)) (25968 39132 654131 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11226 11234 #s(yas--snippet nil nil #s(yas--exit 11234 nil) 70 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11234 nil) 70 nil nil nil nil)) (11226 . 11234) (#("unwrap()$0" 0 10 (fontified nil)) . 11226) (11226 . 11236) (#("u" 0 1 (fontified nil)) . 11226) (11226 . 11227) (#("unwrap()" 0 8 (fontified nil)) . -11226) (11226 . 11234) (#("u" 0 1 (fontified t)) . -11226) (undo-tree-id14652 . -1) (undo-tree-id14653 . -1) (undo-tree-id14654 . -1) (undo-tree-id14655 . -1) (undo-tree-id14656 . -1) 11227) nil (25968 40971 939586 0) 0 nil])
([nil nil ((#("	logging::log!(\"{:?}\", )" 0 1 (fontified t) 1 8 (face font-lock-constant-face fontified t) 8 10 (fontified t) 10 14 (face font-lock-preprocessor-face fontified t) 14 15 (fontified t) 15 21 (face font-lock-string-face fontified t) 21 23 (fontified t) 23 24 (fontified t)) . 13705) (undo-tree-id6996 . -21)) ((13705 . 13729)) (25968 39132 570847 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -11226) (undo-tree-id14717 . -1) (undo-tree-id14718 . -1) (undo-tree-id14719 . -1) (undo-tree-id14720 . -1) (undo-tree-id14721 . -1) (undo-tree-id14722 . -1) (undo-tree-id14723 . -1) (undo-tree-id14724 . -1) (undo-tree-id14725 . -1) (undo-tree-id14726 . -1) (undo-tree-id14727 . -1) (undo-tree-id14728 . -1) (undo-tree-id14729 . -1) (undo-tree-id14730 . -1) (undo-tree-id14731 . -1) (undo-tree-id14732 . -1) (undo-tree-id14733 . -1) (undo-tree-id14734 . -1) (undo-tree-id14735 . -1) (undo-tree-id14736 . -1) (undo-tree-id14737 . -1) (undo-tree-id14738 . -1) (undo-tree-id14739 . -1) (undo-tree-id14740 . -1) (undo-tree-id14741 . -1) (undo-tree-id14742 . -1) (undo-tree-id14743 . -1) (undo-tree-id14744 . -1) (undo-tree-id14745 . -1) (undo-tree-id14746 . -1) (undo-tree-id14747 . -1) (undo-tree-id14748 . -1) (undo-tree-id14749 . -1) (undo-tree-id14750 . -1) (undo-tree-id14751 . -1) (undo-tree-id14752 . -1) (undo-tree-id14753 . -1) (undo-tree-id14754 . -1) (undo-tree-id14755 . -1) (undo-tree-id14756 . -1) (undo-tree-id14757 . -1) (undo-tree-id14758 . -1) (undo-tree-id14759 . -1) (#("n" 0 1 (fontified t)) . -11227) (undo-tree-id14760 . -1) (undo-tree-id14761 . -1) (undo-tree-id14762 . -1) (undo-tree-id14763 . -1) (undo-tree-id14764 . -1) (undo-tree-id14765 . -1) (undo-tree-id14766 . -1) (undo-tree-id14767 . -1) (undo-tree-id14768 . -1) (undo-tree-id14769 . -1) (undo-tree-id14770 . -1) (undo-tree-id14771 . -1) (undo-tree-id14772 . -1) (undo-tree-id14773 . -1) (undo-tree-id14774 . -1) (undo-tree-id14775 . -1) (undo-tree-id14776 . -1) (undo-tree-id14777 . -1) (undo-tree-id14778 . -1) (undo-tree-id14779 . -1) (undo-tree-id14780 . -1) (undo-tree-id14781 . -1) (undo-tree-id14782 . -1) (undo-tree-id14783 . -1) (undo-tree-id14784 . -1) (undo-tree-id14785 . -1) (undo-tree-id14786 . -1) (undo-tree-id14787 . -1) (undo-tree-id14788 . -1) (undo-tree-id14789 . -1) (undo-tree-id14790 . -1) (undo-tree-id14791 . -1) (undo-tree-id14792 . -1) (undo-tree-id14793 . -1) (undo-tree-id14794 . -1) (undo-tree-id14795 . -1) (undo-tree-id14796 . -1) (undo-tree-id14797 . -1) (undo-tree-id14798 . -1) (undo-tree-id14799 . -1) (undo-tree-id14800 . -1) (undo-tree-id14801 . -1) (#("w" 0 1 (fontified t)) . -11228) (undo-tree-id14802 . -1) (undo-tree-id14803 . -1) (undo-tree-id14804 . -1) (undo-tree-id14805 . -1) (undo-tree-id14806 . -1) (undo-tree-id14807 . -1) (undo-tree-id14808 . -1) (undo-tree-id14809 . -1) (undo-tree-id14810 . -1) (undo-tree-id14811 . -1) (undo-tree-id14812 . -1) (undo-tree-id14813 . -1) (undo-tree-id14814 . -1) (undo-tree-id14815 . -1) (undo-tree-id14816 . -1) (undo-tree-id14817 . -1) (undo-tree-id14818 . -1) (undo-tree-id14819 . -1) (undo-tree-id14820 . -1) (undo-tree-id14821 . -1) (undo-tree-id14822 . -1) (undo-tree-id14823 . -1) (undo-tree-id14824 . -1) (undo-tree-id14825 . -1) (undo-tree-id14826 . -1) (undo-tree-id14827 . -1) (undo-tree-id14828 . -1) (undo-tree-id14829 . -1) (undo-tree-id14830 . -1) (undo-tree-id14831 . -1) (undo-tree-id14832 . -1) (undo-tree-id14833 . -1) (undo-tree-id14834 . -1) (undo-tree-id14835 . -1) (undo-tree-id14836 . -1) (undo-tree-id14837 . -1) (undo-tree-id14838 . -1) (undo-tree-id14839 . -1) (undo-tree-id14840 . -1) (undo-tree-id14841 . -1) (undo-tree-id14842 . -1) (#("r" 0 1 (fontified t)) . -11229) (undo-tree-id14843 . -1) (undo-tree-id14844 . -1) (undo-tree-id14845 . -1) (undo-tree-id14846 . -1) (undo-tree-id14847 . -1) (undo-tree-id14848 . -1) (undo-tree-id14849 . -1) (undo-tree-id14850 . -1) (undo-tree-id14851 . -1) (undo-tree-id14852 . -1) (undo-tree-id14853 . -1) (undo-tree-id14854 . -1) (undo-tree-id14855 . -1) (undo-tree-id14856 . -1) (undo-tree-id14857 . -1) (undo-tree-id14858 . -1) (undo-tree-id14859 . -1) (undo-tree-id14860 . -1) (undo-tree-id14861 . -1) (undo-tree-id14862 . -1) (undo-tree-id14863 . -1) (undo-tree-id14864 . -1) (undo-tree-id14865 . -1) (undo-tree-id14866 . -1) (undo-tree-id14867 . -1) (undo-tree-id14868 . -1) (undo-tree-id14869 . -1) (undo-tree-id14870 . -1) (undo-tree-id14871 . -1) (undo-tree-id14872 . -1) (undo-tree-id14873 . -1) (undo-tree-id14874 . -1) (undo-tree-id14875 . -1) (undo-tree-id14876 . -1) (undo-tree-id14877 . -1) (undo-tree-id14878 . -1) (undo-tree-id14879 . -1) (undo-tree-id14880 . -1) (undo-tree-id14881 . -1) (undo-tree-id14882 . -1) (#("a" 0 1 (fontified t)) . -11230) (undo-tree-id14883 . -1) (undo-tree-id14884 . -1) (undo-tree-id14885 . -1) (undo-tree-id14886 . -1) (undo-tree-id14887 . -1) (undo-tree-id14888 . -1) (undo-tree-id14889 . -1) (undo-tree-id14890 . -1) (undo-tree-id14891 . -1) (undo-tree-id14892 . -1) (undo-tree-id14893 . -1) (undo-tree-id14894 . -1) (undo-tree-id14895 . -1) (undo-tree-id14896 . -1) (undo-tree-id14897 . -1) (undo-tree-id14898 . -1) (undo-tree-id14899 . -1) (undo-tree-id14900 . -1) (undo-tree-id14901 . -1) (undo-tree-id14902 . -1) (undo-tree-id14903 . -1) (undo-tree-id14904 . -1) (undo-tree-id14905 . -1) (undo-tree-id14906 . -1) (undo-tree-id14907 . -1) (undo-tree-id14908 . -1) (undo-tree-id14909 . -1) (undo-tree-id14910 . -1) (undo-tree-id14911 . -1) (undo-tree-id14912 . -1) (undo-tree-id14913 . -1) (undo-tree-id14914 . -1) (undo-tree-id14915 . -1) (undo-tree-id14916 . -1) (undo-tree-id14917 . -1) (undo-tree-id14918 . -1) (undo-tree-id14919 . -1) (undo-tree-id14920 . -1) (undo-tree-id14921 . -1) (#("p" 0 1 (fontified t)) . -11231) (undo-tree-id14922 . -1) (undo-tree-id14923 . -1) (undo-tree-id14924 . -1) (undo-tree-id14925 . -1) (undo-tree-id14926 . -1) (undo-tree-id14927 . -1) (undo-tree-id14928 . -1) (undo-tree-id14929 . -1) (undo-tree-id14930 . -1) (undo-tree-id14931 . -1) (undo-tree-id14932 . -1) (undo-tree-id14933 . -1) (undo-tree-id14934 . -1) (undo-tree-id14935 . -1) (undo-tree-id14936 . -1) (undo-tree-id14937 . -1) (undo-tree-id14938 . -1) (undo-tree-id14939 . -1) (undo-tree-id14940 . -1) (undo-tree-id14941 . -1) (undo-tree-id14942 . -1) (undo-tree-id14943 . -1) (undo-tree-id14944 . -1) (undo-tree-id14945 . -1) (undo-tree-id14946 . -1) (undo-tree-id14947 . -1) (undo-tree-id14948 . -1) (undo-tree-id14949 . -1) (undo-tree-id14950 . -1) (undo-tree-id14951 . -1) (undo-tree-id14952 . -1) (undo-tree-id14953 . -1) (undo-tree-id14954 . -1) (undo-tree-id14955 . -1) (undo-tree-id14956 . -1) (undo-tree-id14957 . -1) (undo-tree-id14958 . -1) (undo-tree-id14959 . -1) (#("(" 0 1 (fontified t)) . -11232) (undo-tree-id14960 . -1) (undo-tree-id14961 . -1) (undo-tree-id14962 . -1) (undo-tree-id14963 . -1) (undo-tree-id14964 . -1) (undo-tree-id14965 . -1) (undo-tree-id14966 . -1) (undo-tree-id14967 . -1) (undo-tree-id14968 . -1) (undo-tree-id14969 . -1) (undo-tree-id14970 . -1) (undo-tree-id14971 . -1) (undo-tree-id14972 . -1) (undo-tree-id14973 . -1) (undo-tree-id14974 . -1) (undo-tree-id14975 . -1) (undo-tree-id14976 . -1) (undo-tree-id14977 . -1) (undo-tree-id14978 . -1) (undo-tree-id14979 . -1) (undo-tree-id14980 . -1) (undo-tree-id14981 . -1) (undo-tree-id14982 . -1) (undo-tree-id14983 . -1) (undo-tree-id14984 . -1) (undo-tree-id14985 . -1) (undo-tree-id14986 . -1) (undo-tree-id14987 . -1) (undo-tree-id14988 . -1) (undo-tree-id14989 . -1) (undo-tree-id14990 . -1) (undo-tree-id14991 . -1) (undo-tree-id14992 . -1) (undo-tree-id14993 . -1) (undo-tree-id14994 . -1) (#(")" 0 1 (fontified t)) . -11233) (undo-tree-id14995 . -1) (undo-tree-id14996 . -1) (undo-tree-id14997 . -1) (undo-tree-id14998 . -1) (undo-tree-id14999 . -1) (undo-tree-id15000 . -1) (undo-tree-id15001 . -1) (undo-tree-id15002 . -1) (undo-tree-id15003 . -1) (undo-tree-id15004 . -1) (undo-tree-id15005 . -1) (undo-tree-id15006 . -1) (undo-tree-id15007 . -1) (undo-tree-id15008 . -1) (undo-tree-id15009 . -1) (undo-tree-id15010 . -1) (undo-tree-id15011 . -1) (undo-tree-id15012 . -1) (undo-tree-id15013 . -1) (undo-tree-id15014 . -1) (undo-tree-id15015 . -1) (undo-tree-id15016 . -1) (undo-tree-id15017 . -1) (undo-tree-id15018 . -1) (undo-tree-id15019 . -1) (undo-tree-id15020 . -1) (undo-tree-id15021 . -1) (undo-tree-id15022 . -1) (undo-tree-id15023 . -1) (undo-tree-id15024 . -1) (undo-tree-id15025 . -1) (undo-tree-id15026 . -1) 11234 (t 25968 40971 974358 758000)) nil (25968 40987 723868 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13705)) ((13705 . 13706)) (25968 39132 487401 0) 0 nil])
([nil nil ((11226 . 11228)) nil (25968 40987 723569 0) 0 nil])
([nil nil ((13745 . 13747)) ((#("
	" 0 1 (fontified t) 1 2 (fontified t)) . 13745) (undo-tree-id10725 . -2) (undo-tree-id10726 . -2) (undo-tree-id10727 . -2) (undo-tree-id10728 . -2)) (25968 39132 403444 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 11233 11253 nil nil nil t #s(yas--exit 11254 nil))) #s(yas--exit 11254 nil) 71 nil #s(yas--field 1 11233 11253 nil nil nil t #s(yas--exit 11254 nil)) nil nil)) (11226 . 11237) (#("expect(${1:msg})$0" 0 18 (fontified nil)) . 11226) (11226 . 11244) (#("ex" 0 2 (fontified nil)) . 11226) (11226 . 11228) (#("expect(…)" 0 9 (fontified nil)) . -11226) (11226 . 11235) (#("ex" 0 2 (fontified t)) . -11226) (undo-tree-id14710 . -2) (undo-tree-id14711 . -2) (undo-tree-id14712 . -1) (undo-tree-id14713 . -2) (undo-tree-id14714 . -2) (undo-tree-id14715 . -2) (undo-tree-id14716 . -2) 11228) nil (25968 40987 723567 0) 0 nil])
([nil nil ((13747 . 13750)) ((#("lio" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 13747) (undo-tree-id10723 . -3) (undo-tree-id10724 . -3)) (25968 39132 320505 0) 0 nil])
([nil nil ((11234 . 11235) (#("msg" 0 3 (fontified nil)) . 11234) (undo-tree-id14709 . -3) (11233 . 11234)) nil (25968 40987 723556 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -13748) (undo-tree-id6987 . -1) (undo-tree-id6989 . -1) (undo-tree-id6991 . -1) (#("o" 0 1 (fontified t)) . -13749) (undo-tree-id6992 . -1) (undo-tree-id6994 . -1) 13750) ((13748 . 13750)) (25968 39132 237033 0) 0 nil])
([nil nil ((11234 . 11237)) nil (25968 40987 723554 0) 0 nil])
([nil nil ((13748 . 13751)) ((#("oig" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 13748) (undo-tree-id10721 . -3) (undo-tree-id10722 . -3)) (25968 39132 154271 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-string-face fontified t)) . -11234) (undo-tree-id14691 . -1) (undo-tree-id14692 . -1) (undo-tree-id14693 . -1) (undo-tree-id14694 . -1) (undo-tree-id14695 . -1) (undo-tree-id14696 . -1) (undo-tree-id14697 . -1) (undo-tree-id14698 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -11235) (undo-tree-id14699 . -1) (undo-tree-id14700 . -1) (undo-tree-id14701 . -1) (undo-tree-id14702 . -1) (undo-tree-id14703 . -1) (undo-tree-id14704 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -11236) (undo-tree-id14705 . -1) (undo-tree-id14706 . -1) (undo-tree-id14707 . -1) (undo-tree-id14708 . -1) 11237) nil (25968 40987 723551 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -13749) (undo-tree-id6977 . -1) (undo-tree-id6979 . -1) (undo-tree-id6981 . -1) (undo-tree-id6983 . -1) (#("g" 0 1 (fontified t)) . -13750) (undo-tree-id6984 . -1) (undo-tree-id6986 . -1) 13751) ((13749 . 13751)) (25968 39132 70783 0) 0 nil])
([nil nil ((11234 . 11240)) nil (25968 40987 723532 0) 0 nil])
([nil nil ((13749 . 13751)) ((#("gg" 0 2 (fontified t)) . 13749) (undo-tree-id10719 . -2) (undo-tree-id10720 . -2)) (25968 39131 987388 0) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-string-face fontified t)) . -11236) (undo-tree-id14663 . -1) (undo-tree-id14664 . -1) (undo-tree-id14665 . -1) (undo-tree-id14666 . -1) (undo-tree-id14667 . -1) (undo-tree-id14668 . -1) (undo-tree-id14669 . -1) (undo-tree-id14670 . -1) (undo-tree-id14671 . -1) (undo-tree-id14672 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -11237) (undo-tree-id14673 . -1) (undo-tree-id14674 . -1) (undo-tree-id14675 . -1) (undo-tree-id14676 . -1) (undo-tree-id14677 . -1) (undo-tree-id14678 . -1) (undo-tree-id14679 . -1) (undo-tree-id14680 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -11238) (undo-tree-id14681 . -1) (undo-tree-id14682 . -1) (undo-tree-id14683 . -1) (undo-tree-id14684 . -1) (undo-tree-id14685 . -1) (undo-tree-id14686 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -11239) (undo-tree-id14687 . -1) (undo-tree-id14688 . -1) (undo-tree-id14689 . -1) (undo-tree-id14690 . -1) 11240) nil (25968 40987 723530 0) 0 nil])
([nil nil ((13747 . 13754) (#("logg" 0 4 (fontified nil)) . 13747) (13747 . 13751) (#("logging" 0 7 (fontified nil)) . -13747) (13747 . 13754) (#("logg" 0 4 (fontified t)) . -13747) (undo-tree-id6948 . -4) (undo-tree-id6950 . -1) (undo-tree-id6952 . -1) (undo-tree-id6954 . -1) (undo-tree-id6956 . -1) (undo-tree-id6958 . -1) (undo-tree-id6960 . -1) (undo-tree-id6962 . -2) (undo-tree-id6964 . -2) (undo-tree-id6966 . -2) (undo-tree-id6968 . -2) (undo-tree-id6970 . -2) (undo-tree-id6972 . -3) (undo-tree-id6974 . -4) (undo-tree-id6976 . -4) 13751) ((13747 . 13751) (#("logging" 0 7 (fontified nil)) . 13747) (13747 . 13754) (#("logg" 0 4 (fontified nil)) . 13747) (13747 . 13751) (#("logging" 0 7 (fontified t)) . 13747) (undo-tree-id10715 . -7) (undo-tree-id10716 . -7) (undo-tree-id10717 . -7) (undo-tree-id10718 . -7)) (25968 39131 903499 0) 0 nil])
([nil nil ((11236 . 11243)) nil (25968 40987 723500 0) 0 nil])
([nil nil ((13754 . 13759)) ((#("::log" 0 2 (fontified t) 2 5 (fontified t)) . 13754) (undo-tree-id10711 . -5) (undo-tree-id10712 . -5) (undo-tree-id10713 . -2) (undo-tree-id10714 . -2)) (25968 39131 821519 0) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . -11241) (undo-tree-id14657 . -1) (undo-tree-id14658 . -1) (undo-tree-id14659 . -1) (undo-tree-id14660 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -11242) (undo-tree-id14661 . -1) (undo-tree-id14662 . -1) 11243) nil (25968 40987 723498 0) 0 nil])
([nil nil ((apply yas--snippet-revive 13756 13762 #s(yas--snippet nil nil #s(yas--exit #<marker at 16397 in component.rs> nil) 51 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 16397 in component.rs> nil) 51 nil nil nil nil)) (13756 . 13762) (#("log!($0)" 0 8 (fontified nil)) . 13756) (13756 . 13764) (#("log" 0 3 (fontified nil)) . 13756) (13756 . 13759) (#("log!(…)" 0 7 (fontified nil)) . -13756) (13756 . 13763) (#("log" 0 3 (fontified t)) . -13756) (undo-tree-id6941 . -3) (undo-tree-id6943 . -1) (undo-tree-id6945 . -2) (undo-tree-id6947 . -3) 13759) ((13756 . 13759) (#("log!(…)" 0 7 (fontified nil)) . 13756) (13756 . 13763) (#("log" 0 3 (fontified nil)) . 13756) (13756 . 13759) (#("log!($0)" 0 8 (fontified nil)) . 13756) (13756 . 13764) (#("log!()" 0 4 (face font-lock-preprocessor-face fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 13756) (undo-tree-id10707 . -5) (undo-tree-id10708 . -5) (undo-tree-id10709 . -5) (undo-tree-id10710 . -5)) (25968 39131 737248 0) 0 nil])
([nil nil ((11241 . 11252)) nil (25968 40987 723478 0) 0 nil])
([nil nil ((13761 . 13763)) ((#("\"\"" 0 2 (face font-lock-string-face fontified t)) . 13761) (undo-tree-id10704 . -1) (undo-tree-id10705 . -1) (undo-tree-id10706 . -2)) (25968 39131 654201 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11226 11254 #s(yas--snippet nil (#s(yas--field 1 11233 11253 nil nil nil t #s(yas--exit 11254 nil))) #s(yas--exit 11254 nil) 71 nil #s(yas--field 1 11233 11253 nil nil nil t #s(yas--exit 11254 nil)) nil nil))) nil (25968 41079 690703 0) 0 nil])
([nil nil ((13762 . 13764)) ((#("{}" 0 2 (face font-lock-string-face fontified t)) . 13762) (undo-tree-id10702 . -1) (undo-tree-id10703 . -1)) (25968 39131 570611 0) 0 nil])
([nil nil ((11827 . 11830) (t 25968 40987 758993 863000)) nil (25968 41079 690702 0) 0 nil])
([nil nil ((13763 . 13765)) ((#(":?" 0 2 (face font-lock-string-face fontified t)) . 13763)) (25968 39131 487294 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 11835 11837 nil nil nil t #s(yas--exit 11838 nil))) #s(yas--exit 11838 nil) 72 nil #s(yas--field 1 11835 11837 nil nil nil t #s(yas--exit 11838 nil)) nil nil)) (11828 . 11839) (#("expect(${1:msg})$0" 0 18 (fontified nil)) . 11828) (11828 . 11846) (#("ex" 0 2 (fontified nil)) . 11828) (11828 . 11830) (#("expect(…)" 0 9 (fontified nil)) . -11828) (11828 . 11837) (#("ex" 0 2 (fontified t)) . -11828) (undo-tree-id15078 . -2) 11830) nil (25968 41079 690700 0) 0 nil])
([nil nil ((13767 . 13771)) ((#(", cv" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 13767) (undo-tree-id10699 . -4) (undo-tree-id10700 . -4) (undo-tree-id10701 . -2)) (25968 39131 404423 0) 0 nil])
([nil nil ((11836 . 11837) (#("msg" 0 3 (fontified nil)) . 11836) (11835 . 11836)) nil (25968 41079 690696 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -13769) (undo-tree-id6934 . -1) (undo-tree-id6936 . -1) (undo-tree-id6938 . -1) (#("v" 0 1 (fontified t)) . -13770) (undo-tree-id6939 . -1) 13771) ((13769 . 13771)) (25968 39131 320887 0) 0 nil])
([nil nil ((11836 . 11837)) nil (25968 41079 690695 0) 0 nil])
([nil nil ((13769 . 13772)) ((#("v.l" 0 2 (fontified t) 2 3 (fontified t)) . 13769) (undo-tree-id10696 . -3) (undo-tree-id10697 . -3) (undo-tree-id10698 . -2)) (25968 39131 237053 0) 0 nil])
([nil nil ((#("C" 0 1 (face font-lock-string-face fontified t)) . -11836) (undo-tree-id15077 . -1) 11837) nil (25968 41079 690693 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -13771) (undo-tree-id6931 . -1) (undo-tree-id6933 . -1) 13772) ((13771 . 13772)) (25968 39131 154154 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11828 11838 #s(yas--snippet nil (#s(yas--field 1 11835 11837 nil nil nil t #s(yas--exit 11838 nil))) #s(yas--exit 11838 nil) 72 nil #s(yas--field 1 11835 11837 nil nil nil t #s(yas--exit 11838 nil)) nil nil))) nil (25968 41079 690691 0) 0 nil])
([nil nil ((13771 . 13776)) ((#("clone" 0 5 (fontified t)) . 13771) (undo-tree-id10694 . -5) (undo-tree-id10695 . -5)) (25968 39131 72813 0) 0 nil])
([nil nil ((#("Device\");" 0 7 (face font-lock-string-face fontified t) 7 8 (fontified t) 8 9 (fontified t)) . -11246) (undo-tree-id15073 . -9) (undo-tree-id15074 . -9) (undo-tree-id15075 . -9) (undo-tree-id15076 . -9) 11255) nil (25968 41079 690690 0) 0 nil])
([nil nil ((apply yas--snippet-revive 13771 13778 #s(yas--snippet nil nil #s(yas--exit #<marker at 16397 in component.rs> nil) 52 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 16397 in component.rs> nil) 52 nil nil nil nil)) (13771 . 13778) (#("clone()$0" 0 9 (fontified nil)) . 13771) (13771 . 13780) (#("clone" 0 5 (fontified nil)) . 13771) (13771 . 13776) (#("clone() (as Clone)" 0 18 (fontified nil)) . -13771) (13771 . 13789) (#("clone" 0 5 (fontified t)) . -13771) (undo-tree-id6918 . -5) (undo-tree-id6920 . -1) (undo-tree-id6922 . -2) (undo-tree-id6924 . -2) (undo-tree-id6926 . -3) (undo-tree-id6928 . -4) (undo-tree-id6930 . -5) 13776) ((13771 . 13776) (#("clone() (as Clone)" 0 18 (fontified nil)) . 13771) (13771 . 13789) (#("clone" 0 5 (fontified nil)) . 13771) (13771 . 13776) (#("clone()$0" 0 9 (fontified nil)) . 13771) (13771 . 13780) (#("clone()" 0 7 (fontified t)) . 13771) (undo-tree-id10693 . -7)) (25968 39130 987363 0) 0 nil])
([nil nil ((#("Open " 0 5 (face font-lock-string-face fontified t)) . -11241) (undo-tree-id15069 . -5) (undo-tree-id15070 . -5) (undo-tree-id15071 . -5) (undo-tree-id15072 . -5) 11246) nil (25968 41079 690685 0) 0 nil])
([nil nil ((13779 . 13780)) ((#(";" 0 1 (fontified t)) . 13779)) (25968 39130 904205 0) 0 nil])
([nil nil ((#("Cannot " 0 7 (face font-lock-string-face fontified t)) . -11234) (undo-tree-id15065 . -7) (undo-tree-id15066 . -7) (undo-tree-id15067 . -7) (undo-tree-id15068 . -7) 11241) nil (25968 41079 690679 0) 0 nil])
([nil nil ((13650 . 13655) (t 25968 38212 204584 207000)) ((#("
    " 0 1 (face font-lock-comment-face fontified t) 1 5 (fontified t)) . 13650) (undo-tree-id10681 . -5) (undo-tree-id10682 . -5) (undo-tree-id10683 . -5) (undo-tree-id10684 . -5) (undo-tree-id10685 . -5) (undo-tree-id10686 . -5) (undo-tree-id10687 . -5) (undo-tree-id10688 . -5) (undo-tree-id10689 . -5) (undo-tree-id10690 . -5) (undo-tree-id10691 . -5) (undo-tree-id10692 . -5)) (25968 39130 820640 0) 0 nil] [nil nil ((17002 . 17004) (t 25968 38129 583979 724000)) ((#("//" 0 2 (face font-lock-comment-delimiter-face fontified t)) . 17002)) (25968 38210 134522 0) 0 nil])
([nil nil ((#("expect(\"" 0 7 (fontified t) 7 8 (face font-lock-string-face fontified t)) . -11226) (undo-tree-id15061 . -8) (undo-tree-id15062 . -8) (undo-tree-id15063 . -8) (undo-tree-id15064 . -8) 11234) nil (25968 41079 690674 0) 0 nil])
([nil nil ((13655 . 13661)) ((#("let ar" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (face font-lock-variable-name-face fontified t)) . 13655) (undo-tree-id10669 . -6) (undo-tree-id10670 . -6) (undo-tree-id10671 . -4) (undo-tree-id10672 . -4) (undo-tree-id10673 . -4) (undo-tree-id10674 . -4) (undo-tree-id10675 . -4) (undo-tree-id10676 . -4) (undo-tree-id10677 . -4) (undo-tree-id10678 . -4) (undo-tree-id10679 . -4) (undo-tree-id10680 . -4)) (25968 39130 737651 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -16905) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) (undo-tree-id7020 . -1) (undo-tree-id7021 . -1) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (#("r" 0 1 (fontified t)) . -16906) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (#("o" 0 1 (fontified t)) . -16907) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (#("p" 0 1 (fontified t)) . -16908) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (#(":" 0 1 (fontified t)) . -16909) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . -1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) 16910 (t 25968 38154 923994 357000)) ((16905 . 16910) (t 25968 38202 243250 696000)) (25968 38202 220342 0) 0 nil])
([nil nil ((11226 . 11228)) nil (25968 41079 690668 0) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -13659) (undo-tree-id8124 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -13660) (undo-tree-id8125 . -1) 13661) ((13659 . 13661)) (25968 39130 654174 0) 0 nil])
nil
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 11241 11272 nil nil nil t #s(yas--exit 11273 nil))) #s(yas--exit 11273 nil) 73 nil #s(yas--field 1 11241 11272 nil nil nil t #s(yas--exit 11273 nil)) nil nil)) (11226 . 11244) (#("unwrap_or_else(${1:op})$0" 0 25 (fontified nil)) . 11226) (11226 . 11251) (#("un" 0 2 (fontified nil)) . 11226) (11226 . 11228) (#("unwrap_or_else(…)" 0 17 (fontified nil)) . -11226) (11226 . 11243) (#("un" 0 2 (fontified t)) . -11226) (undo-tree-id15060 . -2) 11228) nil (25968 41079 690667 0) 0 nil])
([nil nil ((13659 . 13674)) ((#("activation_valu" 0 11 (face font-lock-variable-name-face fontified t) 11 12 (face font-lock-variable-name-face fontified t) 12 13 (face font-lock-variable-name-face fontified t) 13 14 (face font-lock-variable-name-face fontified t) 14 15 (face font-lock-variable-name-face fontified t)) . 13659) (undo-tree-id10657 . -15) (undo-tree-id10658 . -15) (undo-tree-id10659 . -11) (undo-tree-id10660 . -11) (undo-tree-id10661 . -11) (undo-tree-id10662 . -11) (undo-tree-id10663 . -11) (undo-tree-id10664 . -11) (undo-tree-id10665 . -11) (undo-tree-id10666 . -11) (undo-tree-id10667 . -11) (undo-tree-id10668 . -11)) (25968 39130 570856 0) 0 nil])
([nil nil ((11242 . 11243) (#("op" 0 2 (fontified nil)) . 11242) (undo-tree-id15059 . -2) (11241 . 11242)) nil (25968 41079 690662 0) 0 nil])
([nil nil ((13674 . 13675)) ((#("e" 0 1 (face font-lock-variable-name-face fontified t)) . 13674) (undo-tree-id10655 . -1) (undo-tree-id10656 . -1)) (25968 39130 487990 0) 0 nil])
([nil nil ((11242 . 11245)) nil (25968 41079 690659 0) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-variable-name-face fontified t)) . -13670) (undo-tree-id8119 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -13671) (undo-tree-id8120 . -1) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -13672) (undo-tree-id8121 . -1) (#("u" 0 1 (face font-lock-variable-name-face fontified t)) . -13673) (undo-tree-id8122 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -13674) (undo-tree-id8123 . -1) 13675) ((13670 . 13675)) (25968 39130 404167 0) 0 nil])
([nil nil ((11246 . 11251)) nil (25968 41079 690658 0) 0 nil])
([nil nil ((13670 . 13684)) ((#("value = create" 0 5 (face font-lock-variable-name-face fontified t) 5 8 (fontified t) 8 14 (fontified t)) . 13670) (undo-tree-id10643 . -14) (undo-tree-id10644 . -14) (undo-tree-id10645 . -8) (undo-tree-id10646 . -8) (undo-tree-id10647 . -8) (undo-tree-id10648 . -8) (undo-tree-id10649 . -8) (undo-tree-id10650 . -8) (undo-tree-id10651 . -8) (undo-tree-id10652 . -8) (undo-tree-id10653 . -8) (undo-tree-id10654 . -8)) (25968 39130 321610 0) 0 nil])
([nil nil ((11247 . 11254) (#("logg" 0 4 (fontified nil)) . 11247) (undo-tree-id15044 . -4) (11247 . 11251) (#("logging" 0 7 (fontified nil)) . -11247) (undo-tree-id15045 . -7) (11247 . 11254) (#("logg" 0 4 (fontified t)) . -11247) (undo-tree-id15046 . -4) (undo-tree-id15047 . -4) (undo-tree-id15048 . -4) (undo-tree-id15049 . -2) (undo-tree-id15050 . -2) (undo-tree-id15051 . -2) (undo-tree-id15052 . -2) (undo-tree-id15053 . -3) (undo-tree-id15054 . -3) (undo-tree-id15055 . -4) (undo-tree-id15056 . -4) (undo-tree-id15057 . -4) (undo-tree-id15058 . -4) 11251) nil (25968 41079 690656 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 13690 13690 nil nil nil t #s(yas--exit 13692 nil))) #s(yas--exit 13692 nil) 53 nil #s(yas--field 1 13690 13690 nil nil nil t #s(yas--exit 13692 nil)) nil nil)) (13678 . 13692) (#("create_memo(${1:f})$0" 0 21 (fontified nil)) . 13678) (13678 . 13699) (#("create" 0 6 (fontified nil)) . 13678) (13678 . 13684) (#("create_memo(…)" 0 14 (fontified nil)) . -13678) (13678 . 13692) (#("create" 0 6 (fontified t)) . -13678) (undo-tree-id8118 . -6) 13684) ((13678 . 13684) (#("create_memo(…)" 0 14 (fontified nil)) . 13678) (13678 . 13692) (#("create" 0 6 (fontified nil)) . 13678) (13678 . 13684) (#("create_memo(${1:f})$0" 0 21 (fontified nil)) . 13678) (13678 . 13699) (#("create_memo(f)" 0 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t)) . 13678) (undo-tree-id10632 . -13) (undo-tree-id10633 . -13) (undo-tree-id10634 . -12) (undo-tree-id10635 . -14) (undo-tree-id10636 . -14) (undo-tree-id10637 . -14) (undo-tree-id10638 . -14) (undo-tree-id10639 . -14) (undo-tree-id10640 . -14) (undo-tree-id10641 . -12) (undo-tree-id10642 . -12) (apply yas--snippet-revive 13678 13692 #s(yas--snippet nil (#s(yas--field 1 13690 13690 nil nil nil t #s(yas--exit 13692 nil))) #s(yas--exit 13692 nil) 53 nil #s(yas--field 1 13690 13690 nil nil nil t #s(yas--exit 13692 nil)) nil nil))) (25968 39130 237471 0) 0 nil])
([nil nil ((11254 . 11255)) nil (25968 41079 690639 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -13690) (undo-tree-id8115 . -1) (undo-tree-id8116 . -1) 13691) ((13690 . 13691)) (25968 39130 153792 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -11254) (undo-tree-id15040 . -1) (undo-tree-id15041 . -1) (undo-tree-id15042 . -1) (undo-tree-id15043 . -1) 11255) nil (25968 41079 690638 0) 0 nil])
([nil nil ((13690 . 13697)) ((#("move ||" 0 4 (face font-lock-keyword-face fontified t) 4 7 (fontified t)) . 13690) (undo-tree-id10627 . -6) (undo-tree-id10628 . -6) (undo-tree-id10629 . -7) (undo-tree-id10630 . -7) (undo-tree-id10631 . -7)) (25968 39130 70721 0) 0 nil])
([nil nil ((11254 . 11258)) nil (25968 41079 690632 0) 0 nil])
([nil nil ((13696 . 13697)) ((#("_" 0 1 (fontified t)) . 13696)) (25968 39129 987430 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11256 11262 #s(yas--snippet nil nil #s(yas--exit 11261 nil) 74 nil nil #s(yas--field 1 11241 11272 nil nil nil t #s(yas--exit 11273 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11261 nil) 74 nil nil #s(yas--field 1 11241 11272 nil nil nil t #s(yas--exit 11273 nil)) nil)) (11256 . 11262) (#("log!($0)" 0 8 (fontified nil)) . 11256) (undo-tree-id15029 . -8) (11256 . 11264) (#("lo" 0 2 (fontified nil)) . 11256) (undo-tree-id15030 . -2) (11256 . 11258) (#("log!(…)" 0 7 (fontified nil)) . -11256) (undo-tree-id15031 . -7) (11256 . 11263) (#("lo" 0 2 (fontified t)) . -11256) (undo-tree-id15032 . -2) (undo-tree-id15033 . -2) (undo-tree-id15034 . -1) (undo-tree-id15035 . -1) (undo-tree-id15036 . -2) (undo-tree-id15037 . -2) (undo-tree-id15038 . -2) (undo-tree-id15039 . -2) 11258) nil (25968 41079 690629 0) 0 nil])
([nil nil ((13698 . 13699)) ((#(" " 0 1 (fontified t)) . 13698) (undo-tree-id10622 . -1) (undo-tree-id10623 . -1) (undo-tree-id10624 . -1) (undo-tree-id10625 . -1) (undo-tree-id10626 . -1)) (25968 39129 904021 0) 0 nil])
([nil nil ((11261 . 11263)) nil (25968 41079 690614 0) 0 nil])
([nil nil ((13699 . 13700)) ((#("j" 0 1 (fontified t)) . 13699) (undo-tree-id10620 . -1) (undo-tree-id10621 . -1)) (25968 39129 820802 0) 0 nil])
([nil nil ((11262 . 11264)) nil (25968 41079 690613 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -13699) (undo-tree-id8109 . -1) (undo-tree-id8110 . -1) (undo-tree-id8112 . -1) (undo-tree-id8114 . -1) 13700) ((13699 . 13700)) (25968 39129 737308 0) 0 nil])
([nil nil ((11263 . 11265)) nil (25968 41079 690612 0) 0 nil])
([nil nil ((13699 . 13700)) ((#("k" 0 1 (fontified t)) . 13699) (undo-tree-id10618 . -1) (undo-tree-id10619 . -1)) (25968 39129 654859 0) 0 nil])
([nil nil ((11267 . 11269)) nil (25968 41079 690611 0) 0 nil])
([nil nil ((13699 . 13713) (#("k" 0 1 (fontified nil)) . 13699) (13699 . 13700) (#("keyboard_state" 0 14 (fontified nil)) . -13699) (13699 . 13713) (#("k" 0 1 (fontified t)) . -13699) (undo-tree-id8101 . -1) (undo-tree-id8102 . -1) (undo-tree-id8104 . -1) (undo-tree-id8106 . -1) (undo-tree-id8108 . -1) 13700) ((13699 . 13700) (#("keyboard_state" 0 14 (fontified nil)) . 13699) (13699 . 13713) (#("k" 0 1 (fontified nil)) . 13699) (13699 . 13700) (#("keyboard_state" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t)) . 13699) (undo-tree-id10615 . -14) (undo-tree-id10616 . -14) (undo-tree-id10617 . -14)) (25968 39129 570137 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -11268) (undo-tree-id15027 . -1) (undo-tree-id15028 . -1) 11269) nil (25968 41079 690609 0) 0 nil])
([nil nil ((13713 . 13715)) ((#(".g" 0 1 (fontified t) 1 2 (fontified t)) . 13713) (undo-tree-id10612 . -2) (undo-tree-id10613 . -2) (undo-tree-id10614 . -1)) (25968 39129 488342 0) 0 nil])
([nil nil ((11268 . 11271)) nil (25968 41079 690599 0) 0 nil])
([nil nil ((apply yas--snippet-revive 13714 13719 #s(yas--snippet nil nil #s(yas--exit #<marker at 16302 in component.rs> nil) 54 nil nil #s(yas--field 1 13690 13690 nil nil nil t #s(yas--exit 13692 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 16302 in component.rs> nil) 54 nil nil #s(yas--field 1 13690 13690 nil nil nil t #s(yas--exit 13692 nil)) nil)) (13714 . 13719) (#("get()$0" 0 7 (fontified nil)) . 13714) (13714 . 13721) (#("g" 0 1 (fontified nil)) . 13714) (13714 . 13715) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -13714) (13714 . 13734) (#("g" 0 1 (fontified t)) . -13714) (undo-tree-id8092 . -1) (undo-tree-id8093 . -1) (undo-tree-id8095 . -1) (undo-tree-id8097 . -1) 13715) ((13714 . 13715) (#("get() (as SignalGet)" 0 20 (fontified nil)) . 13714) (13714 . 13734) (#("g" 0 1 (fontified nil)) . 13714) (13714 . 13715) (#("get()$0" 0 7 (fontified nil)) . 13714) (13714 . 13721) (#("get()" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 13714) (undo-tree-id10609 . -5) (undo-tree-id10610 . -5) (undo-tree-id10611 . -5)) (25968 39129 403994 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11226 11273 #s(yas--snippet nil (#s(yas--field 1 11241 11272 nil nil nil t #s(yas--exit 11273 nil))) #s(yas--exit 11273 nil) 73 nil #s(yas--field 1 11241 11272 nil nil nil t #s(yas--exit 11273 nil)) nil nil))) nil (25968 41079 690597 0) 0 nil])
([nil nil ((13719 . 13720)) ((#("." 0 1 (fontified t)) . 13719) (undo-tree-id10607 . -1) (undo-tree-id10608 . -1)) (25968 39129 323760 0) 0 nil])
([nil nil ((11273 . 11274)) nil (25968 41079 690593 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -13699) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7127 . -1) (undo-tree-id7129 . -1) (undo-tree-id7131 . -1) (undo-tree-id7133 . -1) (undo-tree-id7135 . -1) (undo-tree-id7137 . -1) (undo-tree-id7139 . -1) (undo-tree-id7141 . -1) (undo-tree-id7143 . -1) (undo-tree-id7145 . -1) (undo-tree-id7147 . -1) (undo-tree-id7149 . -1) (undo-tree-id7151 . -1) (undo-tree-id7153 . -1) (undo-tree-id7155 . -1) (undo-tree-id7157 . -1) (undo-tree-id7159 . -1) (undo-tree-id7161 . -1) (undo-tree-id7163 . -1) (undo-tree-id7165 . -1) (undo-tree-id7167 . -1) (undo-tree-id7169 . -1) (undo-tree-id7171 . -1) (undo-tree-id7173 . -1) (undo-tree-id7175 . -1) (undo-tree-id7177 . -1) (undo-tree-id7179 . -1) (undo-tree-id7181 . -1) (undo-tree-id7183 . -1) (undo-tree-id7185 . -1) (undo-tree-id7187 . -1) (undo-tree-id7189 . -1) (undo-tree-id7191 . -1) (undo-tree-id7193 . -1) (#("e" 0 1 (fontified t)) . -13700) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7197 . -1) (undo-tree-id7199 . -1) (undo-tree-id7201 . -1) (undo-tree-id7203 . -1) (undo-tree-id7205 . -1) (undo-tree-id7207 . -1) (undo-tree-id7209 . -1) (undo-tree-id7211 . -1) (undo-tree-id7213 . -1) (undo-tree-id7215 . -1) (undo-tree-id7217 . -1) (undo-tree-id7219 . -1) (undo-tree-id7221 . -1) (undo-tree-id7223 . -1) (undo-tree-id7225 . -1) (undo-tree-id7227 . -1) (undo-tree-id7229 . -1) (undo-tree-id7231 . -1) (undo-tree-id7233 . -1) (undo-tree-id7235 . -1) (undo-tree-id7237 . -1) (undo-tree-id7239 . -1) (undo-tree-id7241 . -1) (undo-tree-id7243 . -1) (undo-tree-id7245 . -1) (undo-tree-id7247 . -1) (undo-tree-id7249 . -1) (undo-tree-id7251 . -1) (undo-tree-id7253 . -1) (undo-tree-id7255 . -1) (undo-tree-id7257 . -1) (undo-tree-id7259 . -1) (#("y" 0 1 (fontified t)) . -13701) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7264 . -1) (undo-tree-id7266 . -1) (undo-tree-id7268 . -1) (undo-tree-id7270 . -1) (undo-tree-id7272 . -1) (undo-tree-id7274 . -1) (undo-tree-id7276 . -1) (undo-tree-id7278 . -1) (undo-tree-id7280 . -1) (undo-tree-id7282 . -1) (undo-tree-id7284 . -1) (undo-tree-id7286 . -1) (undo-tree-id7288 . -1) (undo-tree-id7290 . -1) (undo-tree-id7292 . -1) (undo-tree-id7294 . -1) (undo-tree-id7296 . -1) (undo-tree-id7298 . -1) (undo-tree-id7300 . -1) (undo-tree-id7302 . -1) (undo-tree-id7304 . -1) (undo-tree-id7306 . -1) (undo-tree-id7308 . -1) (undo-tree-id7310 . -1) (undo-tree-id7312 . -1) (undo-tree-id7314 . -1) (undo-tree-id7316 . -1) (undo-tree-id7318 . -1) (undo-tree-id7320 . -1) (undo-tree-id7322 . -1) (#("b" 0 1 (fontified t)) . -13702) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7326 . -1) (undo-tree-id7328 . -1) (undo-tree-id7330 . -1) (undo-tree-id7332 . -1) (undo-tree-id7334 . -1) (undo-tree-id7336 . -1) (undo-tree-id7338 . -1) (undo-tree-id7340 . -1) (undo-tree-id7342 . -1) (undo-tree-id7344 . -1) (undo-tree-id7346 . -1) (undo-tree-id7348 . -1) (undo-tree-id7350 . -1) (undo-tree-id7352 . -1) (undo-tree-id7354 . -1) (undo-tree-id7356 . -1) (undo-tree-id7358 . -1) (undo-tree-id7360 . -1) (undo-tree-id7362 . -1) (undo-tree-id7364 . -1) (undo-tree-id7366 . -1) (undo-tree-id7368 . -1) (undo-tree-id7370 . -1) (undo-tree-id7372 . -1) (undo-tree-id7374 . -1) (undo-tree-id7376 . -1) (undo-tree-id7378 . -1) (undo-tree-id7380 . -1) (#("o" 0 1 (fontified t)) . -13703) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) (undo-tree-id7385 . -1) (undo-tree-id7387 . -1) (undo-tree-id7389 . -1) (undo-tree-id7391 . -1) (undo-tree-id7393 . -1) (undo-tree-id7395 . -1) (undo-tree-id7397 . -1) (undo-tree-id7399 . -1) (undo-tree-id7401 . -1) (undo-tree-id7403 . -1) (undo-tree-id7405 . -1) (undo-tree-id7407 . -1) (undo-tree-id7409 . -1) (undo-tree-id7411 . -1) (undo-tree-id7413 . -1) (undo-tree-id7415 . -1) (undo-tree-id7417 . -1) (undo-tree-id7419 . -1) (undo-tree-id7421 . -1) (undo-tree-id7423 . -1) (undo-tree-id7425 . -1) (undo-tree-id7427 . -1) (undo-tree-id7429 . -1) (undo-tree-id7431 . -1) (undo-tree-id7433 . -1) (undo-tree-id7435 . -1) (undo-tree-id7437 . -1) (undo-tree-id7439 . -1) (#("a" 0 1 (fontified t)) . -13704) (undo-tree-id7440 . -1) (undo-tree-id7441 . -1) (undo-tree-id7443 . -1) (undo-tree-id7445 . -1) (undo-tree-id7447 . -1) (undo-tree-id7449 . -1) (undo-tree-id7451 . -1) (undo-tree-id7453 . -1) (undo-tree-id7455 . -1) (undo-tree-id7457 . -1) (undo-tree-id7459 . -1) (undo-tree-id7461 . -1) (undo-tree-id7463 . -1) (undo-tree-id7465 . -1) (undo-tree-id7467 . -1) (undo-tree-id7469 . -1) (undo-tree-id7471 . -1) (undo-tree-id7473 . -1) (undo-tree-id7475 . -1) (undo-tree-id7477 . -1) (undo-tree-id7479 . -1) (undo-tree-id7481 . -1) (undo-tree-id7483 . -1) (undo-tree-id7485 . -1) (undo-tree-id7487 . -1) (undo-tree-id7489 . -1) (undo-tree-id7491 . -1) (undo-tree-id7493 . -1) (undo-tree-id7495 . -1) (#("r" 0 1 (fontified t)) . -13705) (undo-tree-id7497 . -1) (undo-tree-id7498 . -1) (undo-tree-id7500 . -1) (undo-tree-id7502 . -1) (undo-tree-id7504 . -1) (undo-tree-id7506 . -1) (undo-tree-id7508 . -1) (undo-tree-id7510 . -1) (undo-tree-id7512 . -1) (undo-tree-id7514 . -1) (undo-tree-id7516 . -1) (undo-tree-id7518 . -1) (undo-tree-id7520 . -1) (undo-tree-id7522 . -1) (undo-tree-id7524 . -1) (undo-tree-id7526 . -1) (undo-tree-id7528 . -1) (undo-tree-id7530 . -1) (undo-tree-id7532 . -1) (undo-tree-id7534 . -1) (undo-tree-id7536 . -1) (undo-tree-id7538 . -1) (undo-tree-id7540 . -1) (undo-tree-id7542 . -1) (undo-tree-id7544 . -1) (undo-tree-id7546 . -1) (undo-tree-id7548 . -1) (undo-tree-id7550 . -1) (undo-tree-id7552 . -1) (#("d" 0 1 (fontified t)) . -13706) (undo-tree-id7553 . -1) (undo-tree-id7554 . -1) (undo-tree-id7556 . -1) (undo-tree-id7558 . -1) (undo-tree-id7560 . -1) (undo-tree-id7562 . -1) (undo-tree-id7564 . -1) (undo-tree-id7566 . -1) (undo-tree-id7568 . -1) (undo-tree-id7570 . -1) (undo-tree-id7572 . -1) (undo-tree-id7574 . -1) (undo-tree-id7576 . -1) (undo-tree-id7578 . -1) (undo-tree-id7580 . -1) (undo-tree-id7582 . -1) (undo-tree-id7584 . -1) (undo-tree-id7586 . -1) (undo-tree-id7588 . -1) (undo-tree-id7590 . -1) (undo-tree-id7592 . -1) (undo-tree-id7594 . -1) (undo-tree-id7596 . -1) (undo-tree-id7598 . -1) (undo-tree-id7600 . -1) (undo-tree-id7602 . -1) (undo-tree-id7604 . -1) (undo-tree-id7606 . -1) (#("_" 0 1 (fontified t)) . -13707) (undo-tree-id7608 . -1) (undo-tree-id7609 . -1) (undo-tree-id7611 . -1) (undo-tree-id7613 . -1) (undo-tree-id7615 . -1) (undo-tree-id7617 . -1) (undo-tree-id7619 . -1) (undo-tree-id7621 . -1) (undo-tree-id7623 . -1) (undo-tree-id7625 . -1) (undo-tree-id7627 . -1) (undo-tree-id7629 . -1) (undo-tree-id7631 . -1) (undo-tree-id7633 . -1) (undo-tree-id7635 . -1) (undo-tree-id7637 . -1) (undo-tree-id7639 . -1) (undo-tree-id7641 . -1) (undo-tree-id7643 . -1) (undo-tree-id7645 . -1) (undo-tree-id7647 . -1) (undo-tree-id7649 . -1) (undo-tree-id7651 . -1) (undo-tree-id7653 . -1) (undo-tree-id7655 . -1) (undo-tree-id7657 . -1) (undo-tree-id7659 . -1) (undo-tree-id7661 . -1) (#("s" 0 1 (fontified t)) . -13708) (undo-tree-id7662 . -1) (undo-tree-id7663 . -1) (undo-tree-id7665 . -1) (undo-tree-id7667 . -1) (undo-tree-id7669 . -1) (undo-tree-id7671 . -1) (undo-tree-id7673 . -1) (undo-tree-id7675 . -1) (undo-tree-id7677 . -1) (undo-tree-id7679 . -1) (undo-tree-id7681 . -1) (undo-tree-id7683 . -1) (undo-tree-id7685 . -1) (undo-tree-id7687 . -1) (undo-tree-id7689 . -1) (undo-tree-id7691 . -1) (undo-tree-id7693 . -1) (undo-tree-id7695 . -1) (undo-tree-id7697 . -1) (undo-tree-id7699 . -1) (undo-tree-id7701 . -1) (undo-tree-id7703 . -1) (undo-tree-id7705 . -1) (undo-tree-id7707 . -1) (undo-tree-id7709 . -1) (undo-tree-id7711 . -1) (undo-tree-id7713 . -1) (#("t" 0 1 (fontified t)) . -13709) (undo-tree-id7715 . -1) (undo-tree-id7716 . -1) (undo-tree-id7718 . -1) (undo-tree-id7720 . -1) (undo-tree-id7722 . -1) (undo-tree-id7724 . -1) (undo-tree-id7726 . -1) (undo-tree-id7728 . -1) (undo-tree-id7730 . -1) (undo-tree-id7732 . -1) (undo-tree-id7734 . -1) (undo-tree-id7736 . -1) (undo-tree-id7738 . -1) (undo-tree-id7740 . -1) (undo-tree-id7742 . -1) (undo-tree-id7744 . -1) (undo-tree-id7746 . -1) (undo-tree-id7748 . -1) (undo-tree-id7750 . -1) (undo-tree-id7752 . -1) (undo-tree-id7754 . -1) (undo-tree-id7756 . -1) (undo-tree-id7758 . -1) (undo-tree-id7760 . -1) (undo-tree-id7762 . -1) (undo-tree-id7764 . -1) (undo-tree-id7766 . -1) (#("a" 0 1 (fontified t)) . -13710) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (undo-tree-id7770 . -1) (undo-tree-id7772 . -1) (undo-tree-id7774 . -1) (undo-tree-id7776 . -1) (undo-tree-id7778 . -1) (undo-tree-id7780 . -1) (undo-tree-id7782 . -1) (undo-tree-id7784 . -1) (undo-tree-id7786 . -1) (undo-tree-id7788 . -1) (undo-tree-id7790 . -1) (undo-tree-id7792 . -1) (undo-tree-id7794 . -1) (undo-tree-id7796 . -1) (undo-tree-id7798 . -1) (undo-tree-id7800 . -1) (undo-tree-id7802 . -1) (undo-tree-id7804 . -1) (undo-tree-id7806 . -1) (undo-tree-id7808 . -1) (undo-tree-id7810 . -1) (undo-tree-id7812 . -1) (undo-tree-id7814 . -1) (undo-tree-id7816 . -1) (#("t" 0 1 (fontified t)) . -13711) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) (undo-tree-id7821 . -1) (undo-tree-id7823 . -1) (undo-tree-id7825 . -1) (undo-tree-id7827 . -1) (undo-tree-id7829 . -1) (undo-tree-id7831 . -1) (undo-tree-id7833 . -1) (undo-tree-id7835 . -1) (undo-tree-id7837 . -1) (undo-tree-id7839 . -1) (undo-tree-id7841 . -1) (undo-tree-id7843 . -1) (undo-tree-id7845 . -1) (undo-tree-id7847 . -1) (undo-tree-id7849 . -1) (undo-tree-id7851 . -1) (undo-tree-id7853 . -1) (undo-tree-id7855 . -1) (undo-tree-id7857 . -1) (undo-tree-id7859 . -1) (undo-tree-id7861 . -1) (undo-tree-id7863 . -1) (undo-tree-id7865 . -1) (undo-tree-id7867 . -1) (#("e" 0 1 (fontified t)) . -13712) (undo-tree-id7868 . -1) (undo-tree-id7869 . -1) (undo-tree-id7871 . -1) (undo-tree-id7873 . -1) (undo-tree-id7875 . -1) (undo-tree-id7877 . -1) (undo-tree-id7879 . -1) (undo-tree-id7881 . -1) (undo-tree-id7883 . -1) (undo-tree-id7885 . -1) (undo-tree-id7887 . -1) (undo-tree-id7889 . -1) (undo-tree-id7891 . -1) (undo-tree-id7893 . -1) (undo-tree-id7895 . -1) (undo-tree-id7897 . -1) (undo-tree-id7899 . -1) (undo-tree-id7901 . -1) (undo-tree-id7903 . -1) (undo-tree-id7905 . -1) (undo-tree-id7907 . -1) (undo-tree-id7909 . -1) (undo-tree-id7911 . -1) (undo-tree-id7913 . -1) (undo-tree-id7915 . -1) (#("." 0 1 (fontified t)) . -13713) (undo-tree-id7917 . -1) (undo-tree-id7918 . -1) (undo-tree-id7920 . -1) (undo-tree-id7922 . -1) (undo-tree-id7924 . -1) (undo-tree-id7926 . -1) (undo-tree-id7928 . -1) (undo-tree-id7930 . -1) (undo-tree-id7932 . -1) (undo-tree-id7934 . -1) (undo-tree-id7936 . -1) (undo-tree-id7938 . -1) (undo-tree-id7940 . -1) (undo-tree-id7942 . -1) (undo-tree-id7944 . -1) (undo-tree-id7946 . -1) (undo-tree-id7948 . -1) (undo-tree-id7950 . -1) (undo-tree-id7952 . -1) (undo-tree-id7954 . -1) (#("g" 0 1 (fontified t)) . -13714) (undo-tree-id7955 . -1) (undo-tree-id7956 . -1) (undo-tree-id7958 . -1) (undo-tree-id7960 . -1) (undo-tree-id7962 . -1) (undo-tree-id7964 . -1) (undo-tree-id7966 . -1) (undo-tree-id7968 . -1) (undo-tree-id7970 . -1) (undo-tree-id7972 . -1) (undo-tree-id7974 . -1) (undo-tree-id7976 . -1) (undo-tree-id7978 . -1) (undo-tree-id7980 . -1) (undo-tree-id7982 . -1) (#("e" 0 1 (fontified t)) . -13715) (undo-tree-id7983 . -1) (undo-tree-id7984 . -1) (undo-tree-id7986 . -1) (undo-tree-id7988 . -1) (undo-tree-id7990 . -1) (undo-tree-id7992 . -1) (undo-tree-id7994 . -1) (undo-tree-id7996 . -1) (undo-tree-id7998 . -1) (undo-tree-id8000 . -1) (undo-tree-id8002 . -1) (undo-tree-id8004 . -1) (undo-tree-id8006 . -1) (undo-tree-id8008 . -1) (#("t" 0 1 (fontified t)) . -13716) (undo-tree-id8010 . -1) (undo-tree-id8011 . -1) (undo-tree-id8013 . -1) (undo-tree-id8015 . -1) (undo-tree-id8017 . -1) (undo-tree-id8019 . -1) (undo-tree-id8021 . -1) (undo-tree-id8023 . -1) (undo-tree-id8025 . -1) (undo-tree-id8027 . -1) (undo-tree-id8029 . -1) (undo-tree-id8031 . -1) (undo-tree-id8033 . -1) (undo-tree-id8035 . -1) (#("(" 0 1 (fontified t)) . -13717) (undo-tree-id8036 . -1) (undo-tree-id8037 . -1) (undo-tree-id8039 . -1) (undo-tree-id8041 . -1) (undo-tree-id8043 . -1) (undo-tree-id8045 . -1) (undo-tree-id8047 . -1) (undo-tree-id8049 . -1) (undo-tree-id8051 . -1) (undo-tree-id8053 . -1) (undo-tree-id8055 . -1) (undo-tree-id8057 . -1) (undo-tree-id8059 . -1) (#(")" 0 1 (fontified t)) . -13718) (undo-tree-id8061 . -1) (undo-tree-id8062 . -1) (undo-tree-id8064 . -1) (undo-tree-id8066 . -1) (undo-tree-id8068 . -1) (undo-tree-id8070 . -1) (undo-tree-id8072 . -1) (undo-tree-id8074 . -1) (undo-tree-id8076 . -1) (undo-tree-id8078 . -1) (undo-tree-id8080 . -1) (#("." 0 1 (fontified t)) . -13719) (undo-tree-id8081 . -1) (undo-tree-id8082 . -1) (undo-tree-id8084 . -1) (undo-tree-id8086 . -1) (undo-tree-id8088 . -1) 13720) ((13699 . 13720)) (25968 39129 238024 0) 0 nil])
([nil nil ((#(".unwrap_or_else(|err| logging::log!(\"{:?}\",err));" 0 1 (fontified t) 1 22 (fontified t) 22 29 (face font-lock-constant-face fontified t) 29 31 (fontified t) 31 35 (face font-lock-preprocessor-face fontified t) 35 36 (fontified t) 36 42 (face font-lock-string-face fontified t) 42 46 (fontified t) 46 47 (fontified t) 47 49 (fontified t)) . -11225) (undo-tree-id15101 . -49) (undo-tree-id15102 . -49) (undo-tree-id15103 . -1) (undo-tree-id15104 . -22) (undo-tree-id15105 . -22) (undo-tree-id15106 . -22) (undo-tree-id15107 . -22) (undo-tree-id15108 . -22) (undo-tree-id15109 . -22) (undo-tree-id15110 . -22) (undo-tree-id15111 . -22) (undo-tree-id15112 . -22) (undo-tree-id15113 . -22) (undo-tree-id15114 . -29) (undo-tree-id15115 . -31) (undo-tree-id15116 . -31) (undo-tree-id15117 . -31) (undo-tree-id15118 . -31) (undo-tree-id15119 . -31) (undo-tree-id15120 . -31) (undo-tree-id15121 . -36) (undo-tree-id15122 . -43) (undo-tree-id15123 . 3) (undo-tree-id15124 . -49) (undo-tree-id15125 . -49) (undo-tree-id15126 . -49) (undo-tree-id15127 . -49) (undo-tree-id15128 . -49) (undo-tree-id15129 . -49) (undo-tree-id15130 . -49) (undo-tree-id15131 . -49) (undo-tree-id15132 . -49) (undo-tree-id15133 . -49) (undo-tree-id15134 . -49) (undo-tree-id15135 . -49) (undo-tree-id15136 . -49) (undo-tree-id15137 . -49) (undo-tree-id15138 . -49) (undo-tree-id15139 . -49) (undo-tree-id15140 . -49) (undo-tree-id15141 . -49) (undo-tree-id15142 . -49) (undo-tree-id15143 . -49) (undo-tree-id15144 . -49) (undo-tree-id15145 . -49) (undo-tree-id15146 . -49) (undo-tree-id15147 . -49) (undo-tree-id15148 . -49) (undo-tree-id15149 . -49) (undo-tree-id15150 . -49) (undo-tree-id15151 . -49) (undo-tree-id15152 . -49) (undo-tree-id15153 . -49) (undo-tree-id15154 . -49) (undo-tree-id15155 . -49) (undo-tree-id15156 . -49) (undo-tree-id15157 . -49) (undo-tree-id15158 . -49) (undo-tree-id15159 . -49) (undo-tree-id15160 . -49) (undo-tree-id15161 . -49) (undo-tree-id15162 . -49) (undo-tree-id15163 . -49) (undo-tree-id15164 . -49) (undo-tree-id15165 . -49) (undo-tree-id15166 . -49) (undo-tree-id15167 . -49) (undo-tree-id15168 . -49) (undo-tree-id15169 . -49) (undo-tree-id15170 . -49) (undo-tree-id15171 . -49) (undo-tree-id15172 . -49) (undo-tree-id15173 . -49) (undo-tree-id15174 . -49) (undo-tree-id15175 . -49) (undo-tree-id15176 . -49) (undo-tree-id15177 . -49) (undo-tree-id15178 . -49) (undo-tree-id15179 . -49) (undo-tree-id15180 . -49) (undo-tree-id15181 . -49) (undo-tree-id15182 . -49) (undo-tree-id15183 . -49) (undo-tree-id15184 . -49) (undo-tree-id15185 . -49) (undo-tree-id15186 . -49) (undo-tree-id15187 . -49) (undo-tree-id15188 . -49) (undo-tree-id15189 . -49) (undo-tree-id15190 . -49) (undo-tree-id15191 . -49) (undo-tree-id15192 . -49) (undo-tree-id15193 . -49) (undo-tree-id15194 . -49) (undo-tree-id15195 . -49) (undo-tree-id15196 . -49) (undo-tree-id15197 . -49) (undo-tree-id15198 . -49) (undo-tree-id15199 . -49) (undo-tree-id15200 . -1) (undo-tree-id15201 . -3) (undo-tree-id15202 . -6) (undo-tree-id15203 . -16) (undo-tree-id15204 . -16) (undo-tree-id15205 . -16) (undo-tree-id15206 . -16) (undo-tree-id15207 . -16) (undo-tree-id15208 . -17) (undo-tree-id15209 . -18) (undo-tree-id15210 . -21) (undo-tree-id15211 . -23) (undo-tree-id15212 . -26) (undo-tree-id15213 . -28) (undo-tree-id15214 . -30) (undo-tree-id15215 . -32) (undo-tree-id15216 . -33) (undo-tree-id15217 . -34) (undo-tree-id15218 . -35) (undo-tree-id15219 . -37) (undo-tree-id15220 . -38) (undo-tree-id15221 . -40) (undo-tree-id15222 . -41) (undo-tree-id15223 . -43) (undo-tree-id15224 . -44) (undo-tree-id15225 . -45) (undo-tree-id15226 . -46) (undo-tree-id15227 . -46) (undo-tree-id15228 . -46) (undo-tree-id15229 . -47) (undo-tree-id15230 . -47) (undo-tree-id15231 . -47) (undo-tree-id15232 . -48) (undo-tree-id15233 . -49) (undo-tree-id15234 . -49) (undo-tree-id15235 . -49) (undo-tree-id15236 . -49) (undo-tree-id15237 . -49) (undo-tree-id15238 . -49) (undo-tree-id15239 . -49) (undo-tree-id15240 . -49) (undo-tree-id15241 . -49) (undo-tree-id15242 . -49) (undo-tree-id15243 . -49) (undo-tree-id15244 . -49) (undo-tree-id15245 . -49) 11274 (t 25968 41079 727692 473000)) nil (25968 41150 467484 0) 0 nil])
([nil nil ((13699 . 13702)) ((#("ui." 0 2 (fontified t) 2 3 (fontified t)) . 13699) (undo-tree-id10605 . -3) (undo-tree-id10606 . -3)) (25968 39129 154242 0) 0 nil])
([nil nil ((11225 . 11228)) nil (25968 41150 467338 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -13701) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7120 . -1) (undo-tree-id7122 . -1) 13702) ((13701 . 13702)) (25968 39129 70697 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 11233 11253 nil nil nil t #s(yas--exit 11254 nil))) #s(yas--exit 11254 nil) 75 nil #s(yas--field 1 11233 11253 nil nil nil t #s(yas--exit 11254 nil)) nil nil)) (11226 . 11237) (#("expect(${1:msg})$0" 0 18 (fontified nil)) . 11226) (11226 . 11244) (#("ex" 0 2 (fontified nil)) . 11226) (11226 . 11228) (#("expect(…)" 0 9 (fontified nil)) . -11226) (11226 . 11235) (#("ex" 0 2 (fontified t)) . -11226) (undo-tree-id15086 . -2) (undo-tree-id15087 . -2) (undo-tree-id15088 . -1) (undo-tree-id15089 . -1) (undo-tree-id15090 . -1) (undo-tree-id15091 . -1) (undo-tree-id15092 . -1) (undo-tree-id15093 . -1) (undo-tree-id15094 . -2) (undo-tree-id15095 . -2) (undo-tree-id15096 . -2) (undo-tree-id15097 . -2) (undo-tree-id15098 . -2) (undo-tree-id15099 . -2) (undo-tree-id15100 . -2) 11228) nil (25968 41150 467335 0) 0 nil])
([nil nil ((13701 . 13702)) ((#("s" 0 1 (fontified t)) . 13701) (undo-tree-id10603 . -1) (undo-tree-id10604 . -1)) (25968 39128 988199 0) 0 nil])
([nil nil ((11234 . 11235) (#("msg" 0 3 (fontified nil)) . 11234) (undo-tree-id15085 . -3) (11233 . 11234)) nil (25968 41150 467316 0) 0 nil])
([nil nil ((13699 . 13706) (#("uis" 0 3 (fontified nil)) . 13699) (13699 . 13702) (#("uistate" 0 7 (fontified nil)) . -13699) (13699 . 13706) (#("uis" 0 3 (fontified t)) . -13699) (undo-tree-id7092 . -2) (undo-tree-id7093 . -3) (undo-tree-id7095 . -1) (undo-tree-id7097 . -2) (undo-tree-id7099 . -2) (undo-tree-id7101 . -2) (undo-tree-id7103 . -2) (undo-tree-id7105 . -2) (undo-tree-id7107 . -2) (undo-tree-id7109 . -2) (undo-tree-id7111 . -3) (undo-tree-id7113 . -3) (undo-tree-id7115 . -3) 13702) ((13699 . 13702) (#("uistate" 0 7 (fontified nil)) . 13699) (13699 . 13706) (#("uis" 0 3 (fontified nil)) . 13699) (13699 . 13702) (#("uistate" 0 7 (fontified t)) . 13699) (undo-tree-id10599 . -7) (undo-tree-id10600 . -7) (undo-tree-id10601 . -7) (undo-tree-id10602 . -7)) (25968 39128 904267 0) 0 nil])
([nil nil ((11234 . 11243)) nil (25968 41150 467313 0) 0 nil])
([nil nil ((13706 . 13708)) ((#(".g" 0 1 (fontified t) 1 2 (fontified t)) . 13706) (undo-tree-id10595 . -2) (undo-tree-id10596 . -2) (undo-tree-id10597 . -1) (undo-tree-id10598 . -1)) (25968 39128 821629 0) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-string-face fontified t)) . -11242) (undo-tree-id15079 . -1) (undo-tree-id15080 . -1) (undo-tree-id15081 . -1) (undo-tree-id15082 . -1) (undo-tree-id15083 . -1) (undo-tree-id15084 . -1) 11243) nil (25968 41150 467312 0) 0 nil])
([nil nil ((apply yas--snippet-revive 13707 13712 #s(yas--snippet nil nil #s(yas--exit #<marker at 16302 in component.rs> nil) 55 nil nil #s(yas--field 1 13690 13690 nil nil nil t #s(yas--exit 13692 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 16302 in component.rs> nil) 55 nil nil #s(yas--field 1 13690 13690 nil nil nil t #s(yas--exit 13692 nil)) nil)) (13707 . 13712) (#("get()$0" 0 7 (fontified nil)) . 13707) (13707 . 13714) (#("g" 0 1 (fontified nil)) . 13707) (13707 . 13708) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -13707) (13707 . 13727) (#("g" 0 1 (fontified t)) . -13707) (undo-tree-id7086 . -1) (undo-tree-id7088 . -1) 13708) ((13707 . 13708) (#("get() (as SignalGet)" 0 20 (fontified nil)) . 13707) (13707 . 13727) (#("g" 0 1 (fontified nil)) . 13707) (13707 . 13708) (#("get()$0" 0 7 (fontified nil)) . 13707) (13707 . 13714) (#("get()" 0 5 (fontified t)) . 13707) (undo-tree-id10591 . -5) (undo-tree-id10592 . -5) (undo-tree-id10593 . -5) (undo-tree-id10594 . -5)) (25968 39128 737593 0) 0 nil])
([nil nil ((11242 . 11252)) nil (25968 41150 467299 0) 0 nil])
([nil nil ((13712 . 13714)) ((#(".a" 0 1 (fontified t) 1 2 (fontified t)) . 13712) (undo-tree-id10588 . -2) (undo-tree-id10589 . -2) (undo-tree-id10590 . -1)) (25968 39128 654515 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11226 11254 #s(yas--snippet nil (#s(yas--field 1 11233 11253 nil nil nil t #s(yas--exit 11254 nil))) #s(yas--exit 11254 nil) 75 nil #s(yas--field 1 11233 11253 nil nil nil t #s(yas--exit 11254 nil)) nil nil))) nil (25968 41150 467298 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -13713) (undo-tree-id7079 . -1) (undo-tree-id7081 . -1) 13714) ((13713 . 13714)) (25968 39128 571189 0) 0 nil])
([nil nil ((11254 . 11255)) nil (25968 41150 467293 0) 0 nil])
([nil nil ((13713 . 13729) (#("activation_value" 0 16 (fontified nil)) . -13713) (13713 . 13729)) ((#("activation_value" 0 16 (fontified nil)) . 13713) (13713 . 13729) (#("activation_value" 0 16 (fontified t)) . 13713) (undo-tree-id10587 . -16)) (25968 39128 487237 0) 0 nil])
([nil nil ((11836 . 11846) (t 25968 41150 502941 562000)) nil (25968 41230 43075 0) 0 nil])
([nil nil ((apply yas--snippet-revive 13678 13730 #s(yas--snippet nil (#s(yas--field 1 13690 13690 nil nil nil t #s(yas--exit 13692 nil))) #s(yas--exit 13692 nil) 53 nil #s(yas--field 1 13690 13690 nil nil nil t #s(yas--exit 13692 nil)) nil nil))) ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 13690 13690 nil nil nil t #s(yas--exit 13692 nil))) #s(yas--exit 13692 nil) 53 nil #s(yas--field 1 13690 13690 nil nil nil t #s(yas--exit 13692 nil)) nil nil))) (25968 39128 404078 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11852) 11909 (t 25968 41230 78318 409000)) nil (25968 41234 53337 0) 0 nil])
([nil nil ((13730 . 13731)) ((#(";" 0 1 (fontified t)) . 13730) (undo-tree-id10579 . -1) (undo-tree-id10580 . -1) (undo-tree-id10581 . -1) (undo-tree-id10582 . -1) (undo-tree-id10583 . -1) (undo-tree-id10584 . -1) (undo-tree-id10585 . -1) (undo-tree-id10586 . -1)) (25968 39128 320386 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11911) 11968) nil (25968 41234 53332 0) 0 nil])
([nil nil ((13731 . 13736) (t 25968 38368 885702 590000)) ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 13731) (undo-tree-id10571 . -5) (undo-tree-id10572 . -5) (undo-tree-id10573 . -5) (undo-tree-id10574 . -5) (undo-tree-id10575 . -5) (undo-tree-id10576 . -5) (undo-tree-id10577 . -5) (undo-tree-id10578 . -5)) (25968 39128 237712 0) 0 nil])
([nil nil ((11850 . 11852) (t 25968 41234 89203 869000)) nil (25968 41342 527765 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 13816 . 13817) (nil fontified nil 13816 . 13817) (nil fontified nil 13814 . 13816) (nil fontified nil 13798 . 13814) (nil fontified nil 13792 . 13798) (nil fontified nil 13784 . 13792) (nil fontified nil 13779 . 13784) (nil fontified nil 13775 . 13779) (nil fontified nil 13763 . 13775) (nil fontified nil 13760 . 13763) (nil fontified nil 13744 . 13760) (nil fontified nil 13743 . 13744) (nil fontified nil 13740 . 13743) (nil fontified nil 13736 . 13740) (13736 . 13817)) ((#("    let activation_value = create_memo(move |_| uistate.get().activation_value);
" 0 4 (fontified nil) 4 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil) 8 19 (face font-lock-variable-name-face fontified nil) 19 24 (face font-lock-variable-name-face fontified nil) 24 27 (fontified nil) 27 39 (fontified nil) 39 43 (face font-lock-keyword-face fontified nil) 43 48 (fontified nil) 48 56 (fontified nil) 56 62 (fontified nil) 62 73 (fontified nil) 73 78 (fontified nil) 78 80 (fontified nil) 80 81 (rear-nonsticky nil fontified nil)) . 13736) (undo-tree-id10564 . -81) (undo-tree-id10565 . -81) (undo-tree-id10566 . -81) (undo-tree-id10567 . -81) (undo-tree-id10568 . -81) (undo-tree-id10569 . -81) (undo-tree-id10570 . -81) (nil rear-nonsticky t 13816 . 13817)) (25968 39128 154652 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -10949) (undo-tree-id15246 . -1) (undo-tree-id15247 . -1) (undo-tree-id15248 . -1) (undo-tree-id15249 . -1) (undo-tree-id15250 . -1) (undo-tree-id15251 . -1) (undo-tree-id15252 . -1) (undo-tree-id15253 . -1) (undo-tree-id15254 . -1) (undo-tree-id15255 . -1) (undo-tree-id15256 . -1) (undo-tree-id15257 . -1) (undo-tree-id15258 . -1) (undo-tree-id15259 . -1) 10950 (t 25968 41342 564050 775000)) nil (25968 41371 286178 0) 0 nil])
([nil nil ((13818 . 13822) (#("    " 0 4 (fontified nil)) . 13817) (13817 . 13821) (13817 . 13818)) ((#("
" 0 1 (fontified nil)) . 13817) (undo-tree-id10550 . -1) (undo-tree-id10551 . -1) (undo-tree-id10552 . -1) (undo-tree-id10553 . -1) (undo-tree-id10554 . -1) (undo-tree-id10555 . -1) (undo-tree-id10556 . -1) (#("    " 0 4 (fontified nil)) . 13817) (13817 . 13821) (#("    " 0 4 (fontified t)) . 13818) (undo-tree-id10557 . -4) (undo-tree-id10558 . -4) (undo-tree-id10559 . -4) (undo-tree-id10560 . -4) (undo-tree-id10561 . -4) (undo-tree-id10562 . -4) (undo-tree-id10563 . -4)) (25968 39128 71185 0) 0 nil])
([nil nil ((10949 . 10950)) nil (25968 41371 286151 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 13902 . 13903) (nil fontified nil 13902 . 13903) (nil fontified nil 13900 . 13902) (nil fontified nil 13884 . 13900) (nil fontified nil 13878 . 13884) (nil fontified nil 13870 . 13878) (nil fontified nil 13865 . 13870) (nil fontified nil 13861 . 13865) (nil fontified nil 13849 . 13861) (nil fontified nil 13846 . 13849) (nil fontified nil 13830 . 13846) (nil fontified nil 13829 . 13830) (nil fontified nil 13826 . 13829) (nil fontified nil 13822 . 13826) (13822 . 13903)) ((#("    let activation_value = create_memo(move |_| uistate.get().activation_value);
" 0 4 (fontified nil) 4 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil) 8 19 (face font-lock-variable-name-face fontified nil) 19 24 (face font-lock-variable-name-face fontified nil) 24 27 (fontified nil) 27 39 (fontified nil) 39 43 (face font-lock-keyword-face fontified nil) 43 48 (fontified nil) 48 56 (fontified nil) 56 62 (fontified nil) 62 73 (fontified nil) 73 78 (fontified nil) 78 80 (fontified nil) 80 81 (rear-nonsticky nil fontified nil)) . 13822) (undo-tree-id10544 . -81) (undo-tree-id10545 . -81) (undo-tree-id10546 . -81) (undo-tree-id10547 . -81) (undo-tree-id10548 . -81) (undo-tree-id10549 . -81) (nil rear-nonsticky t 13902 . 13903)) (25968 39127 987682 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11989) (undo-tree-id15409 . -1) (undo-tree-id15410 . -1) (undo-tree-id15411 . -1) (undo-tree-id15412 . -1) (undo-tree-id15413 . -1) (undo-tree-id15414 . -1) (undo-tree-id15415 . -1) (undo-tree-id15416 . -1) (undo-tree-id15417 . -1) (undo-tree-id15418 . -1) (undo-tree-id15419 . -1) (undo-tree-id15420 . -1) (undo-tree-id15421 . -1) (undo-tree-id15422 . -1) (undo-tree-id15423 . -1) (undo-tree-id15424 . -1) (undo-tree-id15425 . -1) (undo-tree-id15426 . -1) (undo-tree-id15427 . -1) (undo-tree-id15428 . -1) (undo-tree-id15429 . -1) (undo-tree-id15430 . -1) (undo-tree-id15431 . -1) (undo-tree-id15432 . -1) (undo-tree-id15433 . -1) (undo-tree-id15434 . -1) (undo-tree-id15435 . -1) (undo-tree-id15436 . -1) (undo-tree-id15437 . -1) (#("	" 0 1 (fontified t)) . -11990) (undo-tree-id15438 . -1) (undo-tree-id15439 . -1) (undo-tree-id15440 . -1) (undo-tree-id15441 . -1) (undo-tree-id15442 . -1) (undo-tree-id15443 . -1) (undo-tree-id15444 . -1) (undo-tree-id15445 . -1) (undo-tree-id15446 . -1) (undo-tree-id15447 . -1) (undo-tree-id15448 . -1) (undo-tree-id15449 . -1) (undo-tree-id15450 . -1) (undo-tree-id15451 . -1) (undo-tree-id15452 . -1) (undo-tree-id15453 . -1) (undo-tree-id15454 . -1) (undo-tree-id15455 . -1) (undo-tree-id15456 . -1) (undo-tree-id15457 . -1) (undo-tree-id15458 . -1) (undo-tree-id15459 . -1) (undo-tree-id15460 . -1) (undo-tree-id15461 . -1) (undo-tree-id15462 . -1) (undo-tree-id15463 . -1) (undo-tree-id15464 . -1) (#("
" 0 1 (fontified t)) . -11991) (undo-tree-id15465 . -1) (undo-tree-id15466 . -1) (undo-tree-id15467 . -1) (undo-tree-id15468 . -1) (undo-tree-id15469 . -1) (undo-tree-id15470 . -1) (undo-tree-id15471 . -1) (undo-tree-id15472 . -1) (undo-tree-id15473 . -1) (undo-tree-id15474 . -1) (undo-tree-id15475 . -1) (undo-tree-id15476 . -1) (undo-tree-id15477 . -1) (undo-tree-id15478 . -1) (undo-tree-id15479 . -1) (undo-tree-id15480 . -1) (undo-tree-id15481 . -1) (undo-tree-id15482 . -1) (undo-tree-id15483 . -1) (undo-tree-id15484 . -1) (undo-tree-id15485 . -1) (undo-tree-id15486 . -1) (undo-tree-id15487 . -1) (undo-tree-id15488 . -1) (#("	" 0 1 (fontified t)) . -11992) (undo-tree-id15489 . -1) (undo-tree-id15490 . -1) (undo-tree-id15491 . -1) (undo-tree-id15492 . -1) (undo-tree-id15493 . -1) (undo-tree-id15494 . -1) (undo-tree-id15495 . -1) (undo-tree-id15496 . -1) (undo-tree-id15497 . -1) (undo-tree-id15498 . -1) (undo-tree-id15499 . -1) (undo-tree-id15500 . -1) (undo-tree-id15501 . -1) (undo-tree-id15502 . -1) (undo-tree-id15503 . -1) (undo-tree-id15504 . -1) (undo-tree-id15505 . -1) (undo-tree-id15506 . -1) (undo-tree-id15507 . -1) (undo-tree-id15508 . -1) (undo-tree-id15509 . -1) (undo-tree-id15510 . -1) (#("	" 0 1 (fontified t)) . -11993) (undo-tree-id15511 . -1) (undo-tree-id15512 . -1) (undo-tree-id15513 . -1) (undo-tree-id15514 . -1) (undo-tree-id15515 . -1) (undo-tree-id15516 . -1) (undo-tree-id15517 . -1) (undo-tree-id15518 . -1) (undo-tree-id15519 . -1) (undo-tree-id15520 . -1) (undo-tree-id15521 . -1) (undo-tree-id15522 . -1) (undo-tree-id15523 . -1) (undo-tree-id15524 . -1) (undo-tree-id15525 . -1) (undo-tree-id15526 . -1) (undo-tree-id15527 . -1) (undo-tree-id15528 . -1) (undo-tree-id15529 . -1) (undo-tree-id15530 . -1) (undo-tree-id15531 . -1) (#("
" 0 1 (fontified t)) . -11994) (undo-tree-id15532 . -1) (undo-tree-id15533 . -1) (undo-tree-id15534 . -1) (undo-tree-id15535 . -1) (undo-tree-id15536 . -1) (undo-tree-id15537 . -1) (undo-tree-id15538 . -1) (undo-tree-id15539 . -1) (#("	" 0 1 (fontified t)) . -11995) (undo-tree-id15540 . -1) (undo-tree-id15541 . -1) (undo-tree-id15542 . -1) (undo-tree-id15543 . -1) (undo-tree-id15544 . -1) (undo-tree-id15545 . -1) (#("	" 0 1 (fontified t)) . -11996) (undo-tree-id15546 . -1) (undo-tree-id15547 . -1) (undo-tree-id15548 . -1) (undo-tree-id15549 . -1) (undo-tree-id15550 . -1) 11997 (t 25968 41371 321605 178000)) nil (25968 41519 921 0) 0 nil])
([nil nil ((13904 . 13908) (#("    " 0 4 (fontified nil)) . 13903) (13903 . 13907) (13903 . 13904)) ((#("
" 0 1 (fontified nil)) . 13903) (undo-tree-id10533 . -1) (undo-tree-id10534 . -1) (undo-tree-id10535 . -1) (undo-tree-id10536 . -1) (undo-tree-id10537 . -1) (undo-tree-id10538 . -1) (#("    " 0 4 (fontified nil)) . 13903) (13903 . 13907) (#("    " 0 4 (fontified t)) . 13904) (undo-tree-id10539 . -4) (undo-tree-id10540 . -4) (undo-tree-id10541 . -4) (undo-tree-id10542 . -4) (undo-tree-id10543 . -4)) (25968 39127 904217 0) 0 nil])
([nil nil ((11997 . 12002)) nil (25968 41519 783 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 13988 . 13989) (nil fontified nil 13988 . 13989) (nil fontified nil 13986 . 13988) (nil fontified nil 13970 . 13986) (nil fontified nil 13964 . 13970) (nil fontified nil 13956 . 13964) (nil fontified nil 13951 . 13956) (nil fontified nil 13947 . 13951) (nil fontified nil 13935 . 13947) (nil fontified nil 13932 . 13935) (nil fontified nil 13916 . 13932) (nil fontified nil 13915 . 13916) (nil fontified nil 13912 . 13915) (nil fontified nil 13908 . 13912) (13908 . 13989)) ((#("    let activation_value = create_memo(move |_| uistate.get().activation_value);
" 0 4 (fontified nil) 4 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil) 8 19 (face font-lock-variable-name-face fontified nil) 19 24 (face font-lock-variable-name-face fontified nil) 24 27 (fontified nil) 27 39 (fontified nil) 39 43 (face font-lock-keyword-face fontified nil) 43 48 (fontified nil) 48 56 (fontified nil) 56 62 (fontified nil) 62 73 (fontified nil) 73 78 (fontified nil) 78 80 (fontified nil) 80 81 (fontified nil rear-nonsticky nil)) . 13908) (undo-tree-id10531 . -80) (undo-tree-id10532 . -62) (nil rear-nonsticky t 13988 . 13989)) (25968 39127 820997 0) 0 nil])
([nil nil ((12002 . 12004)) nil (25968 41519 782 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -13900) (#("    " 0 4 (fontified t)) . -13818) (#("    " 0 4 (fontified t)) . -13736) 13675) ((13736 . 13740) (13818 . 13822) (13900 . 13904)) (25968 39127 737642 0) 0 nil])
([nil nil ((12002 . 12008) (#("de" 0 2 (fontified nil)) . 12002) (12002 . 12004) (#("device" 0 6 (fontified nil)) . -12002) (12002 . 12008) (#("de" 0 2 (fontified t)) . -12002) (undo-tree-id15402 . -2) (undo-tree-id15403 . -1) (undo-tree-id15404 . -2) (undo-tree-id15405 . -2) (undo-tree-id15406 . -2) (undo-tree-id15407 . -2) (undo-tree-id15408 . -2) 12004) nil (25968 41519 780 0) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -13812) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) 13813) ((13812 . 13813)) (25968 39127 654159 0) 0 nil])
([nil nil ((12008 . 12011)) nil (25968 41519 771 0) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -13893) (undo-tree-id8283 . -1) 13894) ((13893 . 13894)) (25968 39127 570764 0) 0 nil])
([nil nil ((12011 . 12012)) nil (25968 41519 770 0) 0 nil])
([nil nil ((#("value" 0 5 (face font-lock-variable-name-face fontified t)) . -13751) (undo-tree-id8281 . -4) (undo-tree-id8282 . -5) 13756) ((13751 . 13756)) (25968 39127 487503 0) 0 nil])
([nil nil ((apply yas--snippet-revive 12009 12016 #s(yas--snippet nil nil #s(yas--exit 12016 nil) 76 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 12016 nil) 76 nil nil nil nil)) (12009 . 12016) (#("close()$0" 0 9 (fontified nil)) . 12009) (12009 . 12018) (#("clo" 0 3 (fontified nil)) . 12009) (12009 . 12012) (#("close()" 0 7 (fontified nil)) . -12009) (12009 . 12016) (#("clo" 0 3 (fontified t)) . -12009) (undo-tree-id15391 . -3) (undo-tree-id15392 . -1) (undo-tree-id15393 . -1) (undo-tree-id15394 . -2) (undo-tree-id15395 . -2) (undo-tree-id15396 . -2) (undo-tree-id15397 . -2) (undo-tree-id15398 . -3) (undo-tree-id15399 . -3) (undo-tree-id15400 . -3) (undo-tree-id15401 . -3) 12012) nil (25968 41519 768 0) 0 nil])
([nil nil ((#("activation_" 0 11 (face font-lock-variable-name-face fontified t)) . -13740) (undo-tree-id8279 . -11) (undo-tree-id8280 . -11) 13751) ((13740 . 13751)) (25968 39127 404303 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12038 . 12039) (nil fontified nil 12038 . 12039) (nil fontified nil 12037 . 12038) (nil fontified nil 12032 . 12037) (nil fontified nil 12024 . 12032) (nil fontified nil 12022 . 12024) (nil fontified nil 12002 . 12022) (12002 . 12039)) nil (25968 41519 753 0) 0 nil])
([nil nil ((13740 . 13743)) ((#("tra" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t)) . 13740) (undo-tree-id10529 . -3) (undo-tree-id10530 . -3)) (25968 39127 320904 0) 0 nil])
([nil nil ((12053 . 12056)) nil (25968 41519 750 0) 0 nil])
([nil nil ((13743 . 13747)) ((#("vel_" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t)) . 13743) (undo-tree-id10527 . -4) (undo-tree-id10528 . -4)) (25968 39127 237794 0) 0 nil])
([nil nil ((12055 . 12060) (#("a" 0 1 (fontified nil)) . 12055) (12055 . 12056) (#("await" 0 5 (fontified nil)) . -12055) (12055 . 12060) (#("a" 0 1 (fontified t)) . -12055) (undo-tree-id15388 . -1) (undo-tree-id15389 . -1) (undo-tree-id15390 . -1) 12056) nil (25968 41519 749 0) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -13740) (undo-tree-id8272 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -13741) (undo-tree-id8273 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -13742) (undo-tree-id8274 . -1) (#("v" 0 1 (face font-lock-variable-name-face fontified t)) . -13743) (undo-tree-id8275 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -13744) (undo-tree-id8276 . -1) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -13745) (undo-tree-id8277 . -1) (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -13746) (undo-tree-id8278 . -1) 13747) ((13740 . 13747)) (25968 39127 154024 0) 0 nil])
([nil nil ((12060 . 12062)) nil (25968 41519 743 0) 0 nil])
([nil nil ((13740 . 13753)) ((#("trigger_value" 0 13 (face font-lock-variable-name-face fontified t)) . 13740)) (25968 39127 70806 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 12068 12096 nil nil nil t #s(yas--exit 12097 nil))) #s(yas--exit 12097 nil) 77 nil #s(yas--field 1 12068 12096 nil nil nil t #s(yas--exit 12097 nil)) nil nil)) (12061 . 12072) (#("expect(${1:msg})$0" 0 18 (fontified nil)) . 12061) (12061 . 12079) (#("e" 0 1 (fontified nil)) . 12061) (12061 . 12062) (#("expect(…)" 0 9 (fontified nil)) . -12061) (12061 . 12070) (#("e" 0 1 (fontified t)) . -12061) (undo-tree-id15383 . -1) (undo-tree-id15384 . -1) (undo-tree-id15385 . -1) (undo-tree-id15386 . -1) (undo-tree-id15387 . -1) 12062) nil (25968 41519 741 0) 0 nil])
([nil nil ((#("value" 0 5 (face font-lock-variable-name-face fontified t)) . -13829) (undo-tree-id8270 . -5) (undo-tree-id8271 . -5) 13834) ((13829 . 13834)) (25968 39126 988036 0) 0 nil])
([nil nil ((12069 . 12070) (#("msg" 0 3 (fontified nil)) . 12069) (undo-tree-id15382 . -3) (12068 . 12069)) nil (25968 41519 733 0) 0 nil])
([nil nil ((#("activation_" 0 11 (face font-lock-variable-name-face fontified t)) . -13818) (undo-tree-id8268 . -11) (undo-tree-id8269 . -11) 13829) ((13818 . 13829)) (25968 39126 904137 0) 0 nil])
([nil nil ((12069 . 12080)) nil (25968 41519 731 0) 0 nil])
([nil nil ((13818 . 13829)) ((#("reset_value" 0 11 (face font-lock-variable-name-face fontified t)) . 13818)) (25968 39126 820919 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . -12073) (undo-tree-id15375 . -1) (undo-tree-id15376 . -1) (undo-tree-id15377 . -1) (undo-tree-id15378 . -1) (undo-tree-id15379 . -1) (undo-tree-id15380 . -1) (undo-tree-id15381 . -1) 12074) nil (25968 41519 729 0) 0 nil])
([nil nil ((#("value" 0 5 (face font-lock-variable-name-face fontified t)) . -13905) (undo-tree-id8264 . -5) (undo-tree-id8265 . -5) (undo-tree-id8267 . -5) 13910) ((13905 . 13910)) (25968 39126 737561 0) 0 nil])
([nil nil ((#("C" 0 1 (face font-lock-string-face fontified t)) . -12069) (undo-tree-id15267 . -1) (undo-tree-id15268 . -1) (undo-tree-id15269 . -1) (undo-tree-id15270 . -1) (undo-tree-id15271 . -1) (undo-tree-id15272 . -1) (undo-tree-id15273 . -1) (undo-tree-id15274 . -1) (undo-tree-id15275 . -1) (undo-tree-id15276 . -1) (undo-tree-id15277 . -1) (undo-tree-id15278 . -1) (undo-tree-id15279 . -1) (undo-tree-id15280 . -1) (undo-tree-id15281 . -1) (undo-tree-id15282 . -1) (undo-tree-id15283 . -1) (undo-tree-id15284 . -1) (undo-tree-id15285 . -1) (undo-tree-id15286 . -1) (undo-tree-id15287 . -1) (undo-tree-id15288 . -1) (undo-tree-id15289 . -1) (undo-tree-id15290 . -1) (undo-tree-id15291 . -1) (undo-tree-id15292 . -1) (undo-tree-id15293 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -12070) (undo-tree-id15294 . -1) (undo-tree-id15295 . -1) (undo-tree-id15296 . -1) (undo-tree-id15297 . -1) (undo-tree-id15298 . -1) (undo-tree-id15299 . -1) (undo-tree-id15300 . -1) (undo-tree-id15301 . -1) (undo-tree-id15302 . -1) (undo-tree-id15303 . -1) (undo-tree-id15304 . -1) (undo-tree-id15305 . -1) (undo-tree-id15306 . -1) (undo-tree-id15307 . -1) (undo-tree-id15308 . -1) (undo-tree-id15309 . -1) (undo-tree-id15310 . -1) (undo-tree-id15311 . -1) (undo-tree-id15312 . -1) (undo-tree-id15313 . -1) (undo-tree-id15314 . -1) (undo-tree-id15315 . -1) (undo-tree-id15316 . -1) (undo-tree-id15317 . -1) (undo-tree-id15318 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -12071) (undo-tree-id15319 . -1) (undo-tree-id15320 . -1) (undo-tree-id15321 . -1) (undo-tree-id15322 . -1) (undo-tree-id15323 . -1) (undo-tree-id15324 . -1) (undo-tree-id15325 . -1) (undo-tree-id15326 . -1) (undo-tree-id15327 . -1) (undo-tree-id15328 . -1) (undo-tree-id15329 . -1) (undo-tree-id15330 . -1) (undo-tree-id15331 . -1) (undo-tree-id15332 . -1) (undo-tree-id15333 . -1) (undo-tree-id15334 . -1) (undo-tree-id15335 . -1) (undo-tree-id15336 . -1) (undo-tree-id15337 . -1) (undo-tree-id15338 . -1) (undo-tree-id15339 . -1) (undo-tree-id15340 . -1) (undo-tree-id15341 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -12072) (undo-tree-id15342 . -1) (undo-tree-id15343 . -1) (undo-tree-id15344 . -1) (undo-tree-id15345 . -1) (undo-tree-id15346 . -1) (undo-tree-id15347 . -1) (undo-tree-id15348 . -1) (undo-tree-id15349 . -1) (undo-tree-id15350 . -1) (undo-tree-id15351 . -1) (undo-tree-id15352 . -1) (undo-tree-id15353 . -1) (undo-tree-id15354 . -1) (undo-tree-id15355 . -1) (undo-tree-id15356 . -1) (undo-tree-id15357 . -1) (undo-tree-id15358 . -1) (undo-tree-id15359 . -1) (undo-tree-id15360 . -1) (undo-tree-id15361 . -1) (undo-tree-id15362 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -12073) (undo-tree-id15363 . -1) (undo-tree-id15364 . -1) (undo-tree-id15365 . -1) (undo-tree-id15366 . -1) (undo-tree-id15367 . -1) (undo-tree-id15368 . -1) (undo-tree-id15369 . -1) (undo-tree-id15370 . -1) (undo-tree-id15371 . -1) (undo-tree-id15372 . -1) (undo-tree-id15373 . -1) (undo-tree-id15374 . -1) 12074) nil (25968 41519 716 0) 0 nil])
([nil nil ((#("activation_" 0 11 (face font-lock-variable-name-face fontified t)) . -13894) (undo-tree-id8260 . -11) (undo-tree-id8261 . -11) (undo-tree-id8263 . -11) 13905) ((13894 . 13905)) (25968 39126 654262 0) 0 nil])
([nil nil ((12074 . 12080)) nil (25968 41519 606 0) 0 nil])
([nil nil ((13894 . 13908)) ((#("lower_deadzone" 0 14 (face font-lock-variable-name-face fontified t)) . 13894)) (25968 39126 570237 0) 0 nil])
([nil nil ((12080 . 12095)) nil (25968 41519 605 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified t)) . -13802) (undo-tree-id8246 . -5) (undo-tree-id8247 . -5) (undo-tree-id8249 . -5) (undo-tree-id8251 . -5) (undo-tree-id8253 . -5) (undo-tree-id8255 . -5) (undo-tree-id8257 . -5) (undo-tree-id8259 . -5) 13807) ((13802 . 13807)) (25968 39126 487011 0) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-string-face fontified t)) . -12075) (undo-tree-id15260 . -1) (undo-tree-id15261 . -1) (undo-tree-id15262 . -1) (undo-tree-id15263 . -1) (undo-tree-id15264 . -1) (undo-tree-id15265 . -1) (undo-tree-id15266 . -1) 12076) nil (25968 41519 602 0) 0 nil])
([nil nil ((#("activation_" 0 11 (fontified t)) . -13791) (undo-tree-id8231 . -11) (undo-tree-id8232 . -11) (undo-tree-id8234 . -11) (undo-tree-id8236 . -11) (undo-tree-id8238 . -11) (undo-tree-id8240 . -11) (undo-tree-id8242 . -11) (undo-tree-id8244 . -11) 13802) ((13791 . 13802)) (25968 39126 403736 0) 0 nil])
([nil nil ((12075 . 12076)) nil (25968 41519 588 0) 0 nil])
([nil nil ((13791 . 13793)) ((#("tr" 0 2 (fontified t)) . 13791) (undo-tree-id10525 . -2) (undo-tree-id10526 . -2)) (25968 39126 320928 0) 0 nil])
([nil nil ((apply yas--snippet-revive 12061 12097 #s(yas--snippet nil (#s(yas--field 1 12068 12096 nil nil nil t #s(yas--exit 12097 nil))) #s(yas--exit 12097 nil) 77 nil #s(yas--field 1 12068 12096 nil nil nil t #s(yas--exit 12097 nil)) nil nil))) nil (25968 41519 586 0) 0 nil])
([nil nil ((13791 . 13804) (#("tr" 0 2 (fontified nil)) . 13791) (13791 . 13793) (#("trigger_value" 0 13 (fontified nil)) . -13791) (13791 . 13804) (#("tr" 0 2 (fontified t)) . -13791) (undo-tree-id8223 . -2) (undo-tree-id8225 . -1) (undo-tree-id8227 . -2) (undo-tree-id8229 . -2) 13793) ((13791 . 13793) (#("trigger_value" 0 13 (fontified nil)) . 13791) (13791 . 13804) (#("tr" 0 2 (fontified nil)) . 13791) (13791 . 13793) (#("trigger_value" 0 13 (fontified t)) . 13791)) (25968 39126 237018 0) 0 nil])
([nil nil ((12097 . 12098)) nil (25968 41519 582 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified t)) . -13875) (undo-tree-id8211 . -5) (undo-tree-id8212 . -5) (undo-tree-id8214 . -5) (undo-tree-id8216 . -5) (undo-tree-id8218 . -5) (undo-tree-id8220 . -5) (undo-tree-id8222 . -5) 13880) ((13875 . 13880)) (25968 39126 153753 0) 0 nil])
([nil nil ((12089 . 12093) (t 25968 41519 37211 437000)) nil (25968 41525 943334 0) 0 nil])
([nil nil ((#("activation_" 0 11 (fontified t)) . -13864) (undo-tree-id8198 . -11) (undo-tree-id8199 . -11) (undo-tree-id8201 . -11) (undo-tree-id8203 . -11) (undo-tree-id8205 . -11) (undo-tree-id8207 . -11) (undo-tree-id8209 . -11) 13875) ((13864 . 13875)) (25968 39126 70217 0) 0 nil])
([nil nil ((#("W" 0 1 (face font-lock-string-face fontified t)) . -12075) (undo-tree-id15574 . -1) (undo-tree-id15575 . -1) (undo-tree-id15576 . -1) (undo-tree-id15577 . -1) (undo-tree-id15578 . -1) (undo-tree-id15579 . -1) (undo-tree-id15580 . -1) (undo-tree-id15581 . -1) (undo-tree-id15582 . -1) (undo-tree-id15583 . -1) (undo-tree-id15584 . -1) (undo-tree-id15585 . -1) 12076) nil (25968 41525 943332 0) 0 nil])
([nil nil ((13864 . 13866)) ((#("re" 0 2 (fontified t)) . 13864) (undo-tree-id10523 . -2) (undo-tree-id10524 . -2)) (25968 39125 987024 0) 0 nil])
([nil nil ((12075 . 12076)) nil (25968 41525 943319 0) 0 nil])
([nil nil ((13864 . 13875) (#("re" 0 2 (fontified nil)) . 13864) (13864 . 13866) (#("reset_value" 0 11 (fontified nil)) . -13864) (13864 . 13875) (#("re" 0 2 (fontified t)) . -13864) (undo-tree-id8193 . -2) (undo-tree-id8195 . -2) (undo-tree-id8197 . -2) 13866) ((13864 . 13866) (#("reset_value" 0 11 (fontified nil)) . 13864) (13864 . 13875) (#("re" 0 2 (fontified nil)) . 13864) (13864 . 13866) (#("reset_value" 0 11 (fontified t)) . 13864)) (25968 39125 902228 0) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-string-face fontified t)) . -12075) (undo-tree-id15551 . -1) (undo-tree-id15552 . -1) (undo-tree-id15553 . -1) (undo-tree-id15554 . -1) (undo-tree-id15555 . -1) (undo-tree-id15556 . -1) (undo-tree-id15557 . -1) (undo-tree-id15558 . -1) (undo-tree-id15559 . -1) (undo-tree-id15560 . -1) (undo-tree-id15561 . -1) (undo-tree-id15562 . -1) (undo-tree-id15563 . -1) (undo-tree-id15564 . -1) (undo-tree-id15565 . -1) (undo-tree-id15566 . -1) (undo-tree-id15567 . -1) (undo-tree-id15568 . -1) (undo-tree-id15569 . -1) (undo-tree-id15570 . -1) (undo-tree-id15571 . -1) (undo-tree-id15572 . -1) (undo-tree-id15573 . -1) 12076) nil (25968 41525 943316 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified t)) . -13949) (undo-tree-id8162 . -5) (undo-tree-id8163 . -5) (undo-tree-id8165 . -2) (undo-tree-id8167 . -2) (undo-tree-id8169 . -2) (undo-tree-id8171 . -2) (undo-tree-id8173 . -2) (undo-tree-id8175 . -2) (undo-tree-id8177 . -2) (undo-tree-id8179 . -2) (undo-tree-id8181 . -5) (undo-tree-id8183 . -5) (undo-tree-id8185 . -5) (undo-tree-id8187 . -5) (undo-tree-id8189 . -5) (undo-tree-id8191 . -5) 13954) ((13949 . 13954)) (25968 39125 818186 0) 0 nil])
([nil nil ((12075 . 12076)) nil (25968 41525 943282 0) 0 nil])
([nil nil ((#("activation_" 0 11 (fontified t)) . -13938) (undo-tree-id8130 . -11) (undo-tree-id8131 . -11) (undo-tree-id8133 . -11) (undo-tree-id8135 . -11) (undo-tree-id8137 . -11) (undo-tree-id8139 . -11) (undo-tree-id8141 . -11) (undo-tree-id8143 . -11) (undo-tree-id8145 . -11) (undo-tree-id8147 . -11) (undo-tree-id8149 . -11) (undo-tree-id8151 . -11) (undo-tree-id8153 . -11) (undo-tree-id8155 . -11) (undo-tree-id8157 . -11) (undo-tree-id8159 . -11) (undo-tree-id8161 . -11) 13949) ((13938 . 13949)) (25968 39125 756623 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -10949) (undo-tree-id15586 . -1) (undo-tree-id15587 . -1) (undo-tree-id15588 . -1) (undo-tree-id15589 . -1) (undo-tree-id15590 . -1) (undo-tree-id15591 . -1) (undo-tree-id15592 . -1) (undo-tree-id15593 . -1) (undo-tree-id15594 . -1) (undo-tree-id15595 . -1) (undo-tree-id15596 . -1) (undo-tree-id15597 . -1) (undo-tree-id15598 . -1) (undo-tree-id15599 . -1) 10950 (t 25968 41525 981063 181000)) nil (25968 46528 495609 0) 0 nil])
([nil nil ((13938 . 13939)) ((#("l" 0 1 (fontified t)) . 13938) (undo-tree-id10520 . -1) (undo-tree-id10521 . -1) (undo-tree-id10522 . -1)) (25968 39125 690662 0) 0 nil])
([nil nil ((10949 . 10950)) nil (25968 46528 495583 0) 0 nil])
([nil nil ((13938 . 13952) (#("l" 0 1 (fontified nil)) . 13938) (13938 . 13939) (#("lower_deadzone" 0 14 (fontified nil)) . -13938) (13938 . 13952) (#("l" 0 1 (fontified t)) . -13938) (undo-tree-id8126 . -1) (undo-tree-id8128 . -1) 13939) ((13938 . 13939) (#("lower_deadzone" 0 14 (fontified nil)) . 13938) (13938 . 13952) (#("l" 0 1 (fontified nil)) . 13938) (13938 . 13939) (#("lower_deadzone" 0 14 (fontified t)) . 13938)) (25968 39125 151880 0) 0 nil])
([nil nil ((10410 . 10413) (t 25968 46528 534610 236000)) nil (25968 46686 85022 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified t)) . -17252) (undo-tree-id8409 . -5) (undo-tree-id8410 . -5) (undo-tree-id8411 . -5) (undo-tree-id8413 . -5) (undo-tree-id8415 . -5) (undo-tree-id8417 . -5) (undo-tree-id8419 . -5) (undo-tree-id8421 . -5) 17257 (t 25968 38425 386593 613000)) ((17252 . 17257)) (25968 39124 952233 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10507 . 10508) (nil fontified nil 10413 . 10508) (10413 . 10508)) nil (25968 46686 85021 0) 0 nil])
([nil nil ((#("activation_" 0 11 (fontified t)) . -17241) (undo-tree-id8395 . -11) (undo-tree-id8396 . -11) (undo-tree-id8397 . -11) (undo-tree-id8399 . -11) (undo-tree-id8401 . -11) (undo-tree-id8403 . -11) (undo-tree-id8405 . -11) (undo-tree-id8407 . -11) 17252) ((17241 . 17252)) (25968 39124 413049 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -10413) 10429) nil (25968 46686 85019 0) 0 nil])
([nil nil ((#("get()." 0 6 (fontified t)) . -17235) (undo-tree-id8380 . -6) (undo-tree-id8381 . -6) (undo-tree-id8382 . -6) (undo-tree-id8384 . -6) (undo-tree-id8386 . -6) (undo-tree-id8388 . -6) (undo-tree-id8390 . -6) (undo-tree-id8392 . -6) (undo-tree-id8394 . -6) 17241) ((17235 . 17241)) (25968 39124 287087 0) 0 nil])
([nil nil ((10444 . 10446) (#("    " 0 4 (fontified t)) . 10444) 10471) nil (25968 46686 85017 0) 0 nil])
([nil nil ((#("uistate." 0 8 (fontified t)) . -17227) (undo-tree-id8364 . -8) (undo-tree-id8365 . -8) (undo-tree-id8366 . -8) (undo-tree-id8368 . -8) (undo-tree-id8370 . -8) (undo-tree-id8372 . -8) (undo-tree-id8374 . -8) (undo-tree-id8376 . -8) (undo-tree-id8378 . -8) 17235) ((17227 . 17235)) (25968 39124 203801 0) 0 nil])
([nil nil ((10475 . 10477) (#("    " 0 4 (fontified t)) . 10475) 10501) nil (25968 46686 85012 0) 0 nil])
([nil nil ((#("move||" 0 6 (fontified t)) . -17221) (undo-tree-id8345 . -6) (undo-tree-id8346 . -6) (undo-tree-id8347 . -6) (undo-tree-id8349 . -6) (undo-tree-id8351 . -6) (undo-tree-id8353 . -6) (undo-tree-id8355 . -6) (undo-tree-id8357 . -6) (undo-tree-id8359 . -6) (undo-tree-id8361 . -6) (undo-tree-id8363 . -6) 17227) ((17221 . 17227)) (25968 39124 120410 0) 0 nil])
([nil nil ((10766 . 10768) (t 25968 46686 121579 923000)) nil (25968 46807 294094 0) 0 nil])
([nil nil ((17221 . 17223)) ((#("ac" 0 2 (fontified t)) . 17221) (undo-tree-id10518 . -2) (undo-tree-id10519 . -2)) (25968 39124 37782 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -10767) (undo-tree-id15678 . -1) (undo-tree-id15679 . -1) (undo-tree-id15680 . -1) 10768) nil (25968 46807 294092 0) 0 nil])
([nil nil ((17221 . 17237) (#("ac" 0 2 (fontified nil)) . 17221) (17215 . 17223) (#("activation_value" 0 16 (fontified nil)) . -17215) (17215 . 17231) (#("value=ac" 0 8 (fontified t)) . -17215) (undo-tree-id8318 . -6) (undo-tree-id8319 . -8) (undo-tree-id8320 . -6) (undo-tree-id8322 . -6) (undo-tree-id8324 . -6) (undo-tree-id8326 . -6) (undo-tree-id8328 . -6) (undo-tree-id8330 . -6) (undo-tree-id8332 . -6) (undo-tree-id8334 . -6) (undo-tree-id8336 . -6) (undo-tree-id8338 . -6) (undo-tree-id8340 . -7) (undo-tree-id8342 . -8) (undo-tree-id8344 . -8) 17223) ((17215 . 17223) (#("activation_value" 0 16 (fontified nil)) . 17215) (17215 . 17231) (#("value=ac" 0 6 (fontified nil) 6 8 (fontified nil)) . 17215) (undo-tree-id10491 . -6) (undo-tree-id10492 . -6) (undo-tree-id10493 . -6) (undo-tree-id10494 . -6) (undo-tree-id10495 . -6) (undo-tree-id10496 . -6) (undo-tree-id10497 . -6) (undo-tree-id10498 . -6) (undo-tree-id10499 . -6) (undo-tree-id10500 . -6) (undo-tree-id10501 . -6) (undo-tree-id10502 . -6) (undo-tree-id10503 . -6) (undo-tree-id10504 . -6) (undo-tree-id10505 . -6) (17221 . 17223) (#("activation_value" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t)) . 17221) (undo-tree-id10506 . -16) (undo-tree-id10507 . -16) (undo-tree-id10508 . -16) (undo-tree-id10509 . -16) (undo-tree-id10510 . -16) (undo-tree-id10511 . -16) (undo-tree-id10512 . -16) (undo-tree-id10513 . -16) (undo-tree-id10514 . -16) (undo-tree-id10515 . -16) (undo-tree-id10516 . -16) (undo-tree-id10517 . -16)) (25968 39123 953489 0) 0 nil])
([nil nil ((10767 . 10768)) nil (25968 46807 294088 0) 0 nil])
([nil nil ((17237 . 17239)) ((#(")_" 0 1 (fontified t) 1 2 (fontified t)) . 17237) (undo-tree-id10489 . -2) (undo-tree-id10490 . -2)) (25968 39123 870328 0) 0 nil])
([nil nil ((10767 . 10777) (#("u" 0 1 (fontified nil)) . 10767) (10767 . 10768) (#("usage_page" 0 10 (fontified nil)) . -10767) (10767 . 10777) (#("u" 0 1 (fontified t)) . -10767) (undo-tree-id15671 . -1) (undo-tree-id15672 . -1) (undo-tree-id15673 . -1) (undo-tree-id15674 . -1) (undo-tree-id15675 . -1) (undo-tree-id15676 . -1) (undo-tree-id15677 . -1) 10768) nil (25968 46807 294086 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -17237) (undo-tree-id8286 . -1) (undo-tree-id8288 . -1) (undo-tree-id8290 . -1) (undo-tree-id8292 . -1) (undo-tree-id8294 . -1) (undo-tree-id8296 . -1) (undo-tree-id8298 . -1) (undo-tree-id8300 . -1) (undo-tree-id8302 . -1) (#("_" 0 1 (fontified t)) . -17238) (undo-tree-id8304 . -1) (undo-tree-id8306 . -1) (undo-tree-id8308 . -1) (undo-tree-id8310 . -1) (undo-tree-id8312 . -1) (undo-tree-id8314 . -1) (undo-tree-id8316 . -1) 17239) ((17237 . 17239)) (25968 39123 786903 0) 0 nil])
([nil nil ((10777 . 10784)) nil (25968 46807 294076 0) 0 nil])
([nil nil ((17237 . 17239)) ((#("()" 0 1 (fontified t) 1 2 (fontified t)) . 17237) (undo-tree-id10487 . -2) (undo-tree-id10488 . -2)) (25968 39123 703859 0) 0 nil])
([nil nil ((10778 . 10783)) nil (25968 46807 294075 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -17237) (undo-tree-id8422 . -1) (undo-tree-id8423 . -1) (undo-tree-id8425 . -1) (undo-tree-id8427 . -1) (undo-tree-id8429 . -1) (undo-tree-id8431 . -1) (undo-tree-id8433 . -1) (undo-tree-id8435 . -1) (undo-tree-id8437 . -1) (undo-tree-id8439 . -1) (undo-tree-id8441 . -1) (undo-tree-id8443 . -1) (undo-tree-id8445 . -1) (undo-tree-id8447 . -1) (undo-tree-id8449 . -1) (undo-tree-id8451 . -1) (undo-tree-id8453 . -1) (undo-tree-id8455 . -1) (undo-tree-id8457 . -1) (undo-tree-id8459 . -1) (undo-tree-id8461 . -1) (undo-tree-id8463 . -1) (#(")" 0 1 (fontified t)) . -17238) (undo-tree-id8464 . -1) (undo-tree-id8465 . -1) (undo-tree-id8467 . -1) (undo-tree-id8469 . -1) (undo-tree-id8471 . -1) (undo-tree-id8473 . -1) (undo-tree-id8475 . -1) (undo-tree-id8477 . -1) (undo-tree-id8479 . -1) (undo-tree-id8481 . -1) (undo-tree-id8483 . -1) (undo-tree-id8485 . -1) (undo-tree-id8487 . -1) (undo-tree-id8489 . -1) (undo-tree-id8491 . -1) (undo-tree-id8493 . -1) (undo-tree-id8495 . -1) (undo-tree-id8497 . -1) (undo-tree-id8499 . -1) 17239 (t 25968 38440 556839 366000)) ((17237 . 17239)) (25968 39123 620298 0) 0 nil])
([nil nil ((10789 . 10790)) nil (25968 46807 294074 0) 0 nil])
([nil nil ((#("value" 0 4 (fontified t) 4 5 (fontified t rear-nonsticky t)) . -17407) (undo-tree-id8606 . -5) (undo-tree-id8607 . -5) (undo-tree-id8609 . -5) (undo-tree-id8611 . -5) (undo-tree-id8613 . -5) (undo-tree-id8615 . -5) (undo-tree-id8617 . -5) (undo-tree-id8619 . -5) (undo-tree-id8621 . -5) 17412 (t 25968 38452 102438 771000)) ((17407 . 17412)) (25968 39123 536740 0) 0 nil])
([nil nil ((10790 . 10794)) nil (25968 46807 294073 0) 0 nil])
([nil nil ((#("activation_" 0 11 (fontified t)) . -17396) (undo-tree-id8588 . -11) (undo-tree-id8589 . -11) (undo-tree-id8591 . -11) (undo-tree-id8593 . -11) (undo-tree-id8595 . -11) (undo-tree-id8597 . -11) (undo-tree-id8599 . -11) (undo-tree-id8601 . -11) (undo-tree-id8603 . -11) (undo-tree-id8605 . -11) 17407) ((17396 . 17407)) (25968 39123 453575 0) 0 nil])
([nil nil ((10792 . 10797) (#("ua" 0 2 (fontified nil)) . 10792) (10792 . 10794) (#("usage" 0 5 (fontified nil)) . -10792) (10792 . 10797) (#("ua" 0 2 (fontified t)) . -10792) (undo-tree-id15662 . -2) (undo-tree-id15663 . -2) (undo-tree-id15664 . -1) (undo-tree-id15665 . -1) (undo-tree-id15666 . -1) (undo-tree-id15667 . -2) (undo-tree-id15668 . -2) (undo-tree-id15669 . -2) (undo-tree-id15670 . -2) 10794) nil (25968 46807 294071 0) 0 nil])
([nil nil ((#("get()." 0 6 (fontified t)) . -17390) (undo-tree-id8569 . -6) (undo-tree-id8570 . -6) (undo-tree-id8572 . -6) (undo-tree-id8574 . -6) (undo-tree-id8576 . -6) (undo-tree-id8578 . -6) (undo-tree-id8580 . -6) (undo-tree-id8582 . -6) (undo-tree-id8584 . -6) (undo-tree-id8586 . -6) 17396) ((17390 . 17396)) (25968 39123 369484 0) 0 nil])
([nil nil ((10797 . 10802)) nil (25968 46807 294060 0) 0 nil])
([nil nil ((#("uistate." 0 8 (fontified t)) . -17382) (undo-tree-id8549 . -8) (undo-tree-id8550 . -8) (undo-tree-id8552 . -8) (undo-tree-id8554 . -8) (undo-tree-id8556 . -8) (undo-tree-id8558 . -8) (undo-tree-id8560 . -8) (undo-tree-id8562 . -8) (undo-tree-id8564 . -8) (undo-tree-id8566 . -8) (undo-tree-id8568 . -8) 17390) ((17382 . 17390)) (25968 39123 285747 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -10798) (undo-tree-id15600 . -1) (undo-tree-id15601 . -1) (undo-tree-id15602 . -1) (undo-tree-id15603 . -1) (undo-tree-id15604 . -1) (undo-tree-id15605 . -1) (undo-tree-id15606 . -1) (undo-tree-id15607 . -1) (undo-tree-id15608 . -1) (undo-tree-id15609 . -1) (undo-tree-id15610 . -1) (undo-tree-id15611 . -1) (undo-tree-id15612 . -1) (undo-tree-id15613 . -1) (undo-tree-id15614 . -1) (undo-tree-id15615 . -1) (undo-tree-id15616 . -1) (undo-tree-id15617 . -1) (undo-tree-id15618 . -1) (undo-tree-id15619 . -1) (undo-tree-id15620 . -1) (undo-tree-id15621 . -1) (undo-tree-id15622 . -1) (#("x" 0 1 (fontified t)) . -10799) (undo-tree-id15623 . -1) (undo-tree-id15624 . -1) (undo-tree-id15625 . -1) (undo-tree-id15626 . -1) (undo-tree-id15627 . -1) (undo-tree-id15628 . -1) (undo-tree-id15629 . -1) (undo-tree-id15630 . -1) (undo-tree-id15631 . -1) (undo-tree-id15632 . -1) (undo-tree-id15633 . -1) (undo-tree-id15634 . -1) (undo-tree-id15635 . -1) (undo-tree-id15636 . -1) (undo-tree-id15637 . -1) (undo-tree-id15638 . -1) (undo-tree-id15639 . -1) (undo-tree-id15640 . -1) (undo-tree-id15641 . -1) (undo-tree-id15642 . -1) (undo-tree-id15643 . -1) (#("0" 0 1 (fontified t)) . -10800) (undo-tree-id15644 . -1) (undo-tree-id15645 . -1) (undo-tree-id15646 . -1) (undo-tree-id15647 . -1) (undo-tree-id15648 . -1) (undo-tree-id15649 . -1) (undo-tree-id15650 . -1) (undo-tree-id15651 . -1) (undo-tree-id15652 . -1) (undo-tree-id15653 . -1) (undo-tree-id15654 . -1) (undo-tree-id15655 . -1) (undo-tree-id15656 . -1) (#("1" 0 1 (fontified t)) . -10801) (undo-tree-id15657 . -1) (undo-tree-id15658 . -1) (undo-tree-id15659 . -1) (undo-tree-id15660 . -1) (undo-tree-id15661 . -1) 10802) nil (25968 46807 294055 0) 0 nil])
([nil nil ((#("move||" 0 6 (fontified t)) . -17376) (undo-tree-id8528 . -6) (undo-tree-id8529 . -6) (undo-tree-id8531 . -6) (undo-tree-id8533 . -6) (undo-tree-id8535 . -6) (undo-tree-id8537 . -6) (undo-tree-id8539 . -6) (undo-tree-id8541 . -6) (undo-tree-id8543 . -6) (undo-tree-id8545 . -6) (undo-tree-id8547 . -6) 17382) ((17376 . 17382)) (25968 39123 201488 0) 0 nil])
([nil nil ((10798 . 10804)) nil (25968 46807 293975 0) 0 nil])
([nil nil ((17376 . 17377)) ((#("a" 0 1 (fontified t)) . 17376) (undo-tree-id10484 . -1) (undo-tree-id10485 . -1) (undo-tree-id10486 . -1)) (25968 39123 118259 0) 0 nil])
([nil nil ((10803 . 10804)) nil (25968 46807 293969 0) 0 nil])
([nil nil ((17376 . 17392) (#("a" 0 1 (fontified nil)) . 17376) (17370 . 17377) (#("activation_value" 0 16 (fontified nil)) . -17370) (17370 . 17386) (#("value=a" 0 7 (fontified t)) . -17370) (undo-tree-id8501 . -6) (undo-tree-id8502 . -7) (undo-tree-id8504 . -6) (undo-tree-id8506 . -6) (undo-tree-id8508 . -6) (undo-tree-id8510 . -6) (undo-tree-id8512 . -6) (undo-tree-id8514 . -6) (undo-tree-id8516 . -6) (undo-tree-id8518 . -6) (undo-tree-id8520 . -6) (undo-tree-id8522 . -6) (undo-tree-id8524 . -6) (undo-tree-id8526 . -7) 17377) ((17370 . 17377) (#("activation_value" 0 16 (fontified nil)) . 17370) (17370 . 17386) (#("value=a" 0 6 (fontified nil) 6 7 (fontified nil)) . 17370) (undo-tree-id10402 . -6) (undo-tree-id10403 . -6) (undo-tree-id10404 . -6) (undo-tree-id10405 . -6) (undo-tree-id10406 . -6) (undo-tree-id10407 . -6) (undo-tree-id10408 . -6) (undo-tree-id10409 . -6) (undo-tree-id10410 . -6) (undo-tree-id10411 . -6) (undo-tree-id10412 . -6) (undo-tree-id10413 . -6) (undo-tree-id10414 . -6) (undo-tree-id10415 . -6) (undo-tree-id10416 . -6) (undo-tree-id10417 . -6) (undo-tree-id10418 . -6) (undo-tree-id10419 . -6) (undo-tree-id10420 . -6) (undo-tree-id10421 . -6) (undo-tree-id10422 . -6) (undo-tree-id10423 . -6) (undo-tree-id10424 . -6) (undo-tree-id10425 . -6) (undo-tree-id10426 . -6) (undo-tree-id10427 . -6) (undo-tree-id10428 . -6) (undo-tree-id10429 . -6) (undo-tree-id10430 . -6) (undo-tree-id10431 . -6) (undo-tree-id10432 . -6) (undo-tree-id10433 . -6) (undo-tree-id10434 . -6) (undo-tree-id10435 . -6) (undo-tree-id10436 . -6) (undo-tree-id10437 . -6) (undo-tree-id10438 . -6) (undo-tree-id10439 . -6) (undo-tree-id10440 . -6) (undo-tree-id10441 . -6) (undo-tree-id10442 . -6) (17376 . 17377) (#("activation_value" 0 16 (fontified t)) . 17376) (undo-tree-id10443 . -16) (undo-tree-id10444 . -16) (undo-tree-id10445 . -16) (undo-tree-id10446 . -16) (undo-tree-id10447 . -16) (undo-tree-id10448 . -16) (undo-tree-id10449 . -16) (undo-tree-id10450 . -16) (undo-tree-id10451 . -16) (undo-tree-id10452 . -16) (undo-tree-id10453 . -16) (undo-tree-id10454 . -16) (undo-tree-id10455 . -16) (undo-tree-id10456 . -16) (undo-tree-id10457 . -16) (undo-tree-id10458 . -16) (undo-tree-id10459 . -16) (undo-tree-id10460 . -16) (undo-tree-id10461 . -16) (undo-tree-id10462 . -16) (undo-tree-id10463 . -16) (undo-tree-id10464 . -16) (undo-tree-id10465 . -16) (undo-tree-id10466 . -16) (undo-tree-id10467 . -16) (undo-tree-id10468 . -16) (undo-tree-id10469 . -16) (undo-tree-id10470 . -16) (undo-tree-id10471 . -16) (undo-tree-id10472 . -16) (undo-tree-id10473 . -16) (undo-tree-id10474 . -16) (undo-tree-id10475 . -16) (undo-tree-id10476 . -16) (undo-tree-id10477 . -16) (undo-tree-id10478 . -16) (undo-tree-id10479 . -16) (undo-tree-id10480 . -16) (undo-tree-id10481 . -16) (undo-tree-id10482 . -16) (undo-tree-id10483 . -16)) (25968 39123 33897 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -11078) (undo-tree-id15681 . -1) (undo-tree-id15682 . -1) (undo-tree-id15683 . -1) (undo-tree-id15684 . -1) (undo-tree-id15685 . -1) (undo-tree-id15686 . -1) (undo-tree-id15687 . -1) (undo-tree-id15688 . -1) (undo-tree-id15689 . -1) (undo-tree-id15690 . -1) (undo-tree-id15691 . -1) (undo-tree-id15692 . -1) 11079 (t 25968 46807 331932 428000)) nil (25968 46971 876889 0) 0 nil])
([nil nil ((#("get()." 0 5 (fontified t) 5 6 (fontified t rear-nonsticky t)) . -17727) (undo-tree-id8693 . -6) (undo-tree-id8694 . -6) (undo-tree-id8696 . -6) (undo-tree-id8698 . -6) (undo-tree-id8700 . -6) (undo-tree-id8702 . -6) (undo-tree-id8704 . -6) (undo-tree-id8706 . -6) 17733 (t 25968 38465 60843 543000)) ((17727 . 17733)) (25968 39122 950492 0) 0 nil])
([nil nil ((11078 . 11079)) nil (25968 46971 876865 0) 0 nil])
([nil nil ((#("uistate." 0 8 (fontified t)) . -17719) (undo-tree-id8678 . -8) (undo-tree-id8679 . -8) (undo-tree-id8681 . -8) (undo-tree-id8683 . -8) (undo-tree-id8685 . -8) (undo-tree-id8687 . -8) (undo-tree-id8689 . -8) (undo-tree-id8691 . -8) 17727) ((17719 . 17727)) (25968 39122 866822 0) 0 nil])
([nil nil ((11852 . 11854) (t 25968 46971 915265 761000)) nil (25968 47112 266144 0) 0 nil])
([nil nil ((#("move||" 0 5 (fontified t) 5 6 (fontified t rear-nonsticky t)) . -17713) (undo-tree-id8662 . -6) (undo-tree-id8663 . -6) (undo-tree-id8665 . -6) (undo-tree-id8667 . -6) (undo-tree-id8669 . -6) (undo-tree-id8671 . -6) (undo-tree-id8673 . -6) (undo-tree-id8675 . -6) (undo-tree-id8677 . -6) 17719) ((17713 . 17719)) (25968 39122 783910 0) 0 nil])
([nil nil ((11854 . 11858)) nil (25968 47112 266143 0) 0 nil])
([nil nil ((#("get()." 0 5 (fontified t) 5 6 (fontified t rear-nonsticky t)) . -17857) (undo-tree-id8650 . -6) (undo-tree-id8651 . -6) (undo-tree-id8653 . -6) (undo-tree-id8655 . -6) (undo-tree-id8657 . -6) (undo-tree-id8659 . -6) (undo-tree-id8661 . -6) 17863) ((17857 . 17863)) (25968 39122 699695 0) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -11852) (undo-tree-id15718 . -1) (undo-tree-id15719 . -1) (undo-tree-id15720 . -1) (undo-tree-id15721 . -1) (undo-tree-id15722 . -1) (undo-tree-id15723 . -1) (undo-tree-id15724 . -1) (undo-tree-id15725 . -1) (undo-tree-id15726 . -1) (undo-tree-id15727 . -1) (undo-tree-id15728 . -1) (undo-tree-id15729 . -1) (undo-tree-id15730 . -1) (undo-tree-id15731 . -1) (undo-tree-id15732 . -1) (undo-tree-id15733 . -1) (undo-tree-id15734 . -1) (undo-tree-id15735 . -1) (undo-tree-id15736 . -1) (undo-tree-id15737 . -1) (undo-tree-id15738 . -1) (undo-tree-id15739 . -1) (undo-tree-id15740 . -1) (undo-tree-id15741 . -1) (undo-tree-id15742 . -1) (undo-tree-id15743 . -1) (undo-tree-id15744 . -1) (undo-tree-id15745 . -1) (#("	" 0 1 (fontified t)) . -11853) (undo-tree-id15746 . -1) (undo-tree-id15747 . -1) (undo-tree-id15748 . -1) (undo-tree-id15749 . -1) (undo-tree-id15750 . -1) (undo-tree-id15751 . -1) (undo-tree-id15752 . -1) (undo-tree-id15753 . -1) (undo-tree-id15754 . -1) (undo-tree-id15755 . -1) (undo-tree-id15756 . -1) (undo-tree-id15757 . -1) (undo-tree-id15758 . -1) (undo-tree-id15759 . -1) (undo-tree-id15760 . -1) (undo-tree-id15761 . -1) (undo-tree-id15762 . -1) (undo-tree-id15763 . -1) (undo-tree-id15764 . -1) (undo-tree-id15765 . -1) (undo-tree-id15766 . -1) (undo-tree-id15767 . -1) (undo-tree-id15768 . -1) (undo-tree-id15769 . -1) (undo-tree-id15770 . -1) (undo-tree-id15771 . -1) (undo-tree-id15772 . -1) (#("l" 0 1 (fontified t)) . -11854) (undo-tree-id15773 . -1) (undo-tree-id15774 . -1) (undo-tree-id15775 . -1) (undo-tree-id15776 . -1) (undo-tree-id15777 . -1) (undo-tree-id15778 . -1) (undo-tree-id15779 . -1) (undo-tree-id15780 . -1) (undo-tree-id15781 . -1) (undo-tree-id15782 . -1) (undo-tree-id15783 . -1) (undo-tree-id15784 . -1) (undo-tree-id15785 . -1) (undo-tree-id15786 . -1) (undo-tree-id15787 . -1) (undo-tree-id15788 . -1) (undo-tree-id15789 . -1) (undo-tree-id15790 . -1) (undo-tree-id15791 . -1) (undo-tree-id15792 . -1) (undo-tree-id15793 . -1) (undo-tree-id15794 . -1) (#("o" 0 1 (fontified t)) . -11855) (undo-tree-id15795 . -1) (undo-tree-id15796 . -1) (undo-tree-id15797 . -1) (undo-tree-id15798 . -1) (undo-tree-id15799 . -1) (undo-tree-id15800 . -1) (undo-tree-id15801 . -1) (undo-tree-id15802 . -1) (undo-tree-id15803 . -1) (undo-tree-id15804 . -1) (undo-tree-id15805 . -1) (undo-tree-id15806 . -1) (undo-tree-id15807 . -1) (undo-tree-id15808 . -1) (undo-tree-id15809 . -1) (#("g" 0 1 (fontified t)) . -11856) (undo-tree-id15810 . -1) (undo-tree-id15811 . -1) (undo-tree-id15812 . -1) (undo-tree-id15813 . -1) (undo-tree-id15814 . -1) (undo-tree-id15815 . -1) (undo-tree-id15816 . -1) (undo-tree-id15817 . -1) (undo-tree-id15818 . -1) (undo-tree-id15819 . -1) (undo-tree-id15820 . -1) (#("g" 0 1 (fontified t)) . -11857) (undo-tree-id15821 . -1) (undo-tree-id15822 . -1) (undo-tree-id15823 . -1) (undo-tree-id15824 . -1) (undo-tree-id15825 . -1) (undo-tree-id15826 . -1) (undo-tree-id15827 . -1) 11858) nil (25968 47112 266136 0) 0 nil])
([nil nil ((#("uistate." 0 8 (fontified t)) . -17849) (undo-tree-id8637 . -8) (undo-tree-id8638 . -8) (undo-tree-id8640 . -8) (undo-tree-id8642 . -8) (undo-tree-id8644 . -8) (undo-tree-id8646 . -8) (undo-tree-id8648 . -8) 17857) ((17849 . 17857)) (25968 39122 617258 0) 0 nil])
([nil nil ((#("		logging::log!(\"test: [page: {} payload: {:?}]\", page_num, &send_buf[0..18]);" 0 2 (fontified t) 2 9 (face font-lock-constant-face fontified t) 9 11 (fontified t) 11 14 (face font-lock-preprocessor-face fontified t) 14 15 (face font-lock-preprocessor-face fontified t) 15 16 (fontified t) 16 23 (face font-lock-string-face fontified t) 23 24 (face font-lock-string-face fontified t) 24 30 (face font-lock-string-face fontified t) 30 32 (face font-lock-string-face fontified t) 32 42 (face font-lock-string-face fontified t) 42 46 (face font-lock-string-face fontified t) 46 48 (face font-lock-string-face fontified t) 48 49 (fontified t) 49 60 (fontified t) 60 61 (face rust-ampersand-face fontified t) 61 77 (fontified t) 77 78 (fontified t rear-nonsticky t)) . 12040) (undo-tree-id15693 . -78) (undo-tree-id15694 . -78) (undo-tree-id15695 . -45) (undo-tree-id15696 . -45) (undo-tree-id15697 . -45) (undo-tree-id15698 . -45) (undo-tree-id15699 . -45) (undo-tree-id15700 . -42) (undo-tree-id15701 . -46) (undo-tree-id15702 . -46) (undo-tree-id15703 . -42) (undo-tree-id15704 . -46) (undo-tree-id15705 . -46) (undo-tree-id15706 . -42) (undo-tree-id15707 . -78) (undo-tree-id15708 . -78) (undo-tree-id15709 . -78) (undo-tree-id15710 . -78) (undo-tree-id15711 . -78) (undo-tree-id15712 . -78) (undo-tree-id15713 . -78) (undo-tree-id15714 . -78) (undo-tree-id15715 . -78) (undo-tree-id15716 . -78) (undo-tree-id15717 . -78)) nil (25968 47202 646054 0) 0 nil])
([nil nil ((#("move||" 0 5 (fontified t) 5 6 (fontified t rear-nonsticky t)) . -17843) (undo-tree-id8623 . -6) (undo-tree-id8624 . -6) (undo-tree-id8626 . -6) (undo-tree-id8628 . -6) (undo-tree-id8630 . -6) (undo-tree-id8632 . -6) (undo-tree-id8634 . -6) (undo-tree-id8636 . -6) 17849) ((17843 . 17849)) (25968 39122 533082 0) 0 nil])
([nil nil ((nil fontified nil 11929 . 11930) (nil fontified nil 11913 . 11929) (nil fontified nil 11912 . 11913) (nil fontified nil 11901 . 11912) (nil fontified nil 11900 . 11901) (nil fontified nil 11898 . 11900) (nil fontified nil 11894 . 11898) (nil fontified nil 11884 . 11894) (nil fontified nil 11882 . 11884) (nil fontified nil 11876 . 11882) (nil fontified nil 11875 . 11876) (nil fontified nil 11868 . 11875) (nil fontified nil 11867 . 11868) (nil fontified nil 11866 . 11867) (nil fontified nil 11863 . 11866) (nil fontified nil 11861 . 11863) (nil fontified nil 11854 . 11861) (nil fontified nil 11852 . 11854) (11852 . 11930)) nil (25968 47209 460205 0) 0 nil] [nil nil ((nil fontified nil 11929 . 11930) (nil fontified nil 11913 . 11929) (nil fontified nil 11912 . 11913) (nil fontified nil 11901 . 11912) (nil fontified nil 11900 . 11901) (nil fontified nil 11898 . 11900) (nil fontified nil 11894 . 11898) (nil fontified nil 11884 . 11894) (nil fontified nil 11882 . 11884) (nil fontified nil 11876 . 11882) (nil fontified nil 11875 . 11876) (nil fontified nil 11868 . 11875) (nil fontified nil 11867 . 11868) (nil fontified nil 11866 . 11867) (nil fontified nil 11863 . 11866) (nil fontified nil 11861 . 11863) (nil fontified nil 11854 . 11861) (nil fontified nil 11852 . 11854) (11852 . 11930)) ((#("		logging::log!(\"test: [page: {} payload: {:?}]\", page_num, &send_buf[0..18]);" 0 2 (fontified nil) 2 9 (face font-lock-constant-face fontified nil) 9 11 (fontified nil) 11 14 (face font-lock-preprocessor-face fontified nil) 14 15 (face font-lock-preprocessor-face fontified nil) 15 16 (fontified nil) 16 23 (face font-lock-string-face fontified nil) 23 24 (face font-lock-string-face fontified nil) 24 30 (face font-lock-string-face fontified nil) 30 32 (face font-lock-string-face fontified nil) 32 42 (face font-lock-string-face fontified nil) 42 46 (face font-lock-string-face fontified nil) 46 48 (face font-lock-string-face fontified nil) 48 49 (fontified nil) 49 60 (fontified nil) 60 61 (face rust-ampersand-face fontified nil) 61 77 (fontified nil) 77 78 (fontified nil rear-nonsticky t)) . 11852) (undo-tree-id15828 . -78) (undo-tree-id15829 . -78) (undo-tree-id15830 . -78) (undo-tree-id15831 . -78) (undo-tree-id15832 . -78) (undo-tree-id15833 . -78) (undo-tree-id15834 . -78) (undo-tree-id15835 . -78) (undo-tree-id15836 . -78) (undo-tree-id15837 . -78) (undo-tree-id15838 . -78) (undo-tree-id15839 . -78) (undo-tree-id15840 . -78) (undo-tree-id15841 . -78) (undo-tree-id15842 . -78) (undo-tree-id15843 . -78) (undo-tree-id15844 . -78) (undo-tree-id15845 . -78) (undo-tree-id15846 . -78) (undo-tree-id15847 . -78) (undo-tree-id15848 . -78) (undo-tree-id15849 . -78) (undo-tree-id15850 . -78) (undo-tree-id15851 . -78) (undo-tree-id15852 . -78) (undo-tree-id15853 . -78) (undo-tree-id15854 . -78) (undo-tree-id15855 . -78) (undo-tree-id15856 . -78) (undo-tree-id15857 . -78) (undo-tree-id15858 . -78) (undo-tree-id15859 . -78) (undo-tree-id15860 . -78) (undo-tree-id15861 . -78) (undo-tree-id15862 . -78) (undo-tree-id15863 . -78) (undo-tree-id15864 . -78) (undo-tree-id15865 . -78) (undo-tree-id15866 . -78) (undo-tree-id15867 . -78) (undo-tree-id15868 . -78) (undo-tree-id15869 . -78) (undo-tree-id15870 . -78) (undo-tree-id15871 . -78) (undo-tree-id15872 . -78) (undo-tree-id15873 . -78) (undo-tree-id15874 . -78) (undo-tree-id15875 . -78) (undo-tree-id15876 . -78) (undo-tree-id15877 . -78) (undo-tree-id15878 . -78) (undo-tree-id15879 . -78) (undo-tree-id15880 . -78) (undo-tree-id15881 . -78) (undo-tree-id15882 . -78) (undo-tree-id15883 . -78) (undo-tree-id15884 . -78) (undo-tree-id15885 . -78) (nil fontified t 11929 . 11930) (t 25968 47112 303219 888000)) (25968 47112 265974 0) 0 nil])
([nil nil ((#("get()." 0 5 (fontified t) 5 6 (fontified t rear-nonsticky t)) . -18157) (undo-tree-id8756 . -6) (undo-tree-id8758 . -6) (undo-tree-id8760 . -6) 18163 (t 25968 38472 539206 299000)) ((18157 . 18163)) (25968 39122 449618 0) 0 nil])
([nil nil ((apply 2 12057 12115 undo--wrap-and-run-primitive-undo 12057 12115 ((#("//" 0 2 (face font-lock-comment-delimiter-face fontified t)) . -12057) 12117))) nil (25968 47209 460196 0) 0 nil])
nil
([nil nil ((#("uistate." 0 8 (fontified t)) . -18149) (undo-tree-id8749 . -8) (undo-tree-id8751 . -8) (undo-tree-id8753 . -8) (undo-tree-id8755 . -8) 18157) ((18149 . 18157)) (25968 39122 366625 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -12034) (undo-tree-id15907 . -1) (undo-tree-id15908 . -1) (undo-tree-id15909 . -1) (undo-tree-id15910 . -1) (undo-tree-id15911 . -1) (undo-tree-id15912 . -1) (undo-tree-id15913 . -1) (undo-tree-id15914 . -1) (undo-tree-id15915 . -1) (undo-tree-id15916 . -1) (undo-tree-id15917 . -1) (undo-tree-id15918 . -1) (undo-tree-id15919 . -1) (undo-tree-id15920 . -1) (undo-tree-id15921 . -1) (undo-tree-id15922 . -1) (undo-tree-id15923 . -1) (undo-tree-id15924 . -1) (undo-tree-id15925 . -1) (undo-tree-id15926 . -1) (undo-tree-id15927 . -1) (undo-tree-id15928 . -1) (undo-tree-id15929 . -1) (undo-tree-id15930 . -1) (undo-tree-id15931 . -1) (undo-tree-id15932 . -1) (undo-tree-id15933 . -1) (undo-tree-id15934 . -1) (undo-tree-id15935 . -1) (undo-tree-id15936 . -1) (undo-tree-id15937 . -1) (undo-tree-id15938 . -1) (undo-tree-id15939 . -1) (undo-tree-id15940 . -1) (undo-tree-id15941 . -1) (undo-tree-id15942 . -1) (undo-tree-id15943 . -1) (undo-tree-id15944 . -1) (undo-tree-id15945 . -1) (undo-tree-id15946 . -1) (undo-tree-id15947 . -1) (undo-tree-id15948 . -1) (undo-tree-id15949 . -1) (undo-tree-id15950 . -1) (undo-tree-id15951 . -1) (undo-tree-id15952 . -1) (undo-tree-id15953 . -1) (undo-tree-id15954 . -1) (undo-tree-id15955 . -1) (undo-tree-id15956 . -1) (undo-tree-id15957 . -1) (undo-tree-id15958 . -1) (undo-tree-id15959 . -1) (undo-tree-id15960 . -1) (undo-tree-id15961 . -1) (undo-tree-id15962 . -1) (undo-tree-id15963 . -1) (#("e" 0 1 (fontified t)) . -12035) (undo-tree-id15964 . -1) (undo-tree-id15965 . -1) (undo-tree-id15966 . -1) (undo-tree-id15967 . -1) (undo-tree-id15968 . -1) (undo-tree-id15969 . -1) (undo-tree-id15970 . -1) (undo-tree-id15971 . -1) (undo-tree-id15972 . -1) (undo-tree-id15973 . -1) (undo-tree-id15974 . -1) (undo-tree-id15975 . -1) (undo-tree-id15976 . -1) (undo-tree-id15977 . -1) (undo-tree-id15978 . -1) (undo-tree-id15979 . -1) (undo-tree-id15980 . -1) (undo-tree-id15981 . -1) (undo-tree-id15982 . -1) (undo-tree-id15983 . -1) (undo-tree-id15984 . -1) (undo-tree-id15985 . -1) (undo-tree-id15986 . -1) (undo-tree-id15987 . -1) (undo-tree-id15988 . -1) (undo-tree-id15989 . -1) (undo-tree-id15990 . -1) (undo-tree-id15991 . -1) (undo-tree-id15992 . -1) (undo-tree-id15993 . -1) (undo-tree-id15994 . -1) (undo-tree-id15995 . -1) (undo-tree-id15996 . -1) (undo-tree-id15997 . -1) (undo-tree-id15998 . -1) (undo-tree-id15999 . -1) (undo-tree-id16000 . -1) (undo-tree-id16001 . -1) (undo-tree-id16002 . -1) (undo-tree-id16003 . -1) (undo-tree-id16004 . -1) (undo-tree-id16005 . -1) (undo-tree-id16006 . -1) (undo-tree-id16007 . -1) (undo-tree-id16008 . -1) (undo-tree-id16009 . -1) (undo-tree-id16010 . -1) (undo-tree-id16011 . -1) (undo-tree-id16012 . -1) (undo-tree-id16013 . -1) (undo-tree-id16014 . -1) (undo-tree-id16015 . -1) (undo-tree-id16016 . -1) (undo-tree-id16017 . -1) (undo-tree-id16018 . -1) (undo-tree-id16019 . -1) (#("x" 0 1 (fontified t)) . -12036) (undo-tree-id16020 . -1) (undo-tree-id16021 . -1) (undo-tree-id16022 . -1) (undo-tree-id16023 . -1) (undo-tree-id16024 . -1) (undo-tree-id16025 . -1) (undo-tree-id16026 . -1) (undo-tree-id16027 . -1) (undo-tree-id16028 . -1) (undo-tree-id16029 . -1) (undo-tree-id16030 . -1) (undo-tree-id16031 . -1) (undo-tree-id16032 . -1) (undo-tree-id16033 . -1) (undo-tree-id16034 . -1) (undo-tree-id16035 . -1) (undo-tree-id16036 . -1) (undo-tree-id16037 . -1) (undo-tree-id16038 . -1) (undo-tree-id16039 . -1) (undo-tree-id16040 . -1) (undo-tree-id16041 . -1) (undo-tree-id16042 . -1) (undo-tree-id16043 . -1) (undo-tree-id16044 . -1) (undo-tree-id16045 . -1) (undo-tree-id16046 . -1) (undo-tree-id16047 . -1) (undo-tree-id16048 . -1) (undo-tree-id16049 . -1) (undo-tree-id16050 . -1) (undo-tree-id16051 . -1) (undo-tree-id16052 . -1) (undo-tree-id16053 . -1) (undo-tree-id16054 . -1) (undo-tree-id16055 . -1) (undo-tree-id16056 . -1) (undo-tree-id16057 . -1) (undo-tree-id16058 . -1) (undo-tree-id16059 . -1) (undo-tree-id16060 . -1) (undo-tree-id16061 . -1) (undo-tree-id16062 . -1) (undo-tree-id16063 . -1) (undo-tree-id16064 . -1) (undo-tree-id16065 . -1) (undo-tree-id16066 . -1) (undo-tree-id16067 . -1) (undo-tree-id16068 . -1) (undo-tree-id16069 . -1) (undo-tree-id16070 . -1) (undo-tree-id16071 . -1) (undo-tree-id16072 . -1) (undo-tree-id16073 . -1) (undo-tree-id16074 . -1) (#("p" 0 1 (fontified t)) . -12037) (undo-tree-id16075 . -1) (undo-tree-id16076 . -1) (undo-tree-id16077 . -1) (undo-tree-id16078 . -1) (undo-tree-id16079 . -1) (undo-tree-id16080 . -1) (undo-tree-id16081 . -1) (undo-tree-id16082 . -1) (undo-tree-id16083 . -1) (undo-tree-id16084 . -1) (undo-tree-id16085 . -1) (undo-tree-id16086 . -1) (undo-tree-id16087 . -1) (undo-tree-id16088 . -1) (undo-tree-id16089 . -1) (undo-tree-id16090 . -1) (undo-tree-id16091 . -1) (undo-tree-id16092 . -1) (undo-tree-id16093 . -1) (undo-tree-id16094 . -1) (undo-tree-id16095 . -1) (undo-tree-id16096 . -1) (undo-tree-id16097 . -1) (undo-tree-id16098 . -1) (undo-tree-id16099 . -1) (undo-tree-id16100 . -1) (undo-tree-id16101 . -1) (undo-tree-id16102 . -1) (undo-tree-id16103 . -1) (undo-tree-id16104 . -1) (undo-tree-id16105 . -1) (undo-tree-id16106 . -1) (undo-tree-id16107 . -1) (undo-tree-id16108 . -1) (undo-tree-id16109 . -1) (undo-tree-id16110 . -1) (undo-tree-id16111 . -1) (undo-tree-id16112 . -1) (undo-tree-id16113 . -1) (undo-tree-id16114 . -1) (undo-tree-id16115 . -1) (undo-tree-id16116 . -1) (undo-tree-id16117 . -1) (undo-tree-id16118 . -1) (undo-tree-id16119 . -1) (undo-tree-id16120 . -1) (undo-tree-id16121 . -1) (undo-tree-id16122 . -1) (undo-tree-id16123 . -1) (undo-tree-id16124 . -1) (undo-tree-id16125 . -1) (undo-tree-id16126 . -1) (undo-tree-id16127 . -1) (undo-tree-id16128 . -1) (#("e" 0 1 (fontified t)) . -12038) (undo-tree-id16129 . -1) (undo-tree-id16130 . -1) (undo-tree-id16131 . -1) (undo-tree-id16132 . -1) (undo-tree-id16133 . -1) (undo-tree-id16134 . -1) (undo-tree-id16135 . -1) (undo-tree-id16136 . -1) (undo-tree-id16137 . -1) (undo-tree-id16138 . -1) (undo-tree-id16139 . -1) (undo-tree-id16140 . -1) (undo-tree-id16141 . -1) (undo-tree-id16142 . -1) (undo-tree-id16143 . -1) (undo-tree-id16144 . -1) (undo-tree-id16145 . -1) (undo-tree-id16146 . -1) (undo-tree-id16147 . -1) (undo-tree-id16148 . -1) (undo-tree-id16149 . -1) (undo-tree-id16150 . -1) (undo-tree-id16151 . -1) (undo-tree-id16152 . -1) (undo-tree-id16153 . -1) (undo-tree-id16154 . -1) (undo-tree-id16155 . -1) (undo-tree-id16156 . -1) (undo-tree-id16157 . -1) (undo-tree-id16158 . -1) (undo-tree-id16159 . -1) (undo-tree-id16160 . -1) (undo-tree-id16161 . -1) (undo-tree-id16162 . -1) (undo-tree-id16163 . -1) (undo-tree-id16164 . -1) (undo-tree-id16165 . -1) (undo-tree-id16166 . -1) (undo-tree-id16167 . -1) (undo-tree-id16168 . -1) (undo-tree-id16169 . -1) (undo-tree-id16170 . -1) (undo-tree-id16171 . -1) (undo-tree-id16172 . -1) (undo-tree-id16173 . -1) (undo-tree-id16174 . -1) (undo-tree-id16175 . -1) (undo-tree-id16176 . -1) (undo-tree-id16177 . -1) (undo-tree-id16178 . -1) (undo-tree-id16179 . -1) (undo-tree-id16180 . -1) (undo-tree-id16181 . -1) (#("c" 0 1 (fontified t)) . -12039) (undo-tree-id16182 . -1) (undo-tree-id16183 . -1) (undo-tree-id16184 . -1) (undo-tree-id16185 . -1) (undo-tree-id16186 . -1) (undo-tree-id16187 . -1) (undo-tree-id16188 . -1) (undo-tree-id16189 . -1) (undo-tree-id16190 . -1) (undo-tree-id16191 . -1) (undo-tree-id16192 . -1) (undo-tree-id16193 . -1) (undo-tree-id16194 . -1) (undo-tree-id16195 . -1) (undo-tree-id16196 . -1) (undo-tree-id16197 . -1) (undo-tree-id16198 . -1) (undo-tree-id16199 . -1) (undo-tree-id16200 . -1) (undo-tree-id16201 . -1) (undo-tree-id16202 . -1) (undo-tree-id16203 . -1) (undo-tree-id16204 . -1) (undo-tree-id16205 . -1) (undo-tree-id16206 . -1) (undo-tree-id16207 . -1) (undo-tree-id16208 . -1) (undo-tree-id16209 . -1) (undo-tree-id16210 . -1) (undo-tree-id16211 . -1) (undo-tree-id16212 . -1) (undo-tree-id16213 . -1) (undo-tree-id16214 . -1) (undo-tree-id16215 . -1) (undo-tree-id16216 . -1) (undo-tree-id16217 . -1) (undo-tree-id16218 . -1) (undo-tree-id16219 . -1) (undo-tree-id16220 . -1) (undo-tree-id16221 . -1) (undo-tree-id16222 . -1) (undo-tree-id16223 . -1) (undo-tree-id16224 . -1) (undo-tree-id16225 . -1) (undo-tree-id16226 . -1) (undo-tree-id16227 . -1) (undo-tree-id16228 . -1) (undo-tree-id16229 . -1) (undo-tree-id16230 . -1) (undo-tree-id16231 . -1) (undo-tree-id16232 . -1) (undo-tree-id16233 . -1) (#("t" 0 1 (fontified t)) . -12040) (undo-tree-id16234 . -1) (undo-tree-id16235 . -1) (undo-tree-id16236 . -1) (undo-tree-id16237 . -1) (undo-tree-id16238 . -1) (undo-tree-id16239 . -1) (undo-tree-id16240 . -1) (undo-tree-id16241 . -1) (undo-tree-id16242 . -1) (undo-tree-id16243 . -1) (undo-tree-id16244 . -1) (undo-tree-id16245 . -1) (undo-tree-id16246 . -1) (undo-tree-id16247 . -1) (undo-tree-id16248 . -1) (undo-tree-id16249 . -1) (undo-tree-id16250 . -1) (undo-tree-id16251 . -1) (undo-tree-id16252 . -1) (undo-tree-id16253 . -1) (undo-tree-id16254 . -1) (undo-tree-id16255 . -1) (undo-tree-id16256 . -1) (undo-tree-id16257 . -1) (undo-tree-id16258 . -1) (undo-tree-id16259 . -1) (undo-tree-id16260 . -1) (undo-tree-id16261 . -1) (undo-tree-id16262 . -1) (undo-tree-id16263 . -1) (undo-tree-id16264 . -1) (undo-tree-id16265 . -1) (undo-tree-id16266 . -1) (undo-tree-id16267 . -1) (undo-tree-id16268 . -1) (undo-tree-id16269 . -1) (undo-tree-id16270 . -1) (undo-tree-id16271 . -1) (undo-tree-id16272 . -1) (undo-tree-id16273 . -1) (undo-tree-id16274 . -1) (undo-tree-id16275 . -1) (undo-tree-id16276 . -1) (undo-tree-id16277 . -1) (undo-tree-id16278 . -1) (undo-tree-id16279 . -1) (undo-tree-id16280 . -1) (undo-tree-id16281 . -1) (undo-tree-id16282 . -1) (undo-tree-id16283 . -1) (undo-tree-id16284 . -1) (#("(" 0 1 (fontified t)) . -12041) (undo-tree-id16285 . -1) (undo-tree-id16286 . -1) (undo-tree-id16287 . -1) (undo-tree-id16288 . -1) (undo-tree-id16289 . -1) (undo-tree-id16290 . -1) (undo-tree-id16291 . -1) (undo-tree-id16292 . -1) (undo-tree-id16293 . -1) (undo-tree-id16294 . -1) (undo-tree-id16295 . -1) (undo-tree-id16296 . -1) (undo-tree-id16297 . -1) (undo-tree-id16298 . -1) (undo-tree-id16299 . -1) (undo-tree-id16300 . -1) (undo-tree-id16301 . -1) (undo-tree-id16302 . -1) (undo-tree-id16303 . -1) (undo-tree-id16304 . -1) (undo-tree-id16305 . -1) (undo-tree-id16306 . -1) (undo-tree-id16307 . -1) (undo-tree-id16308 . -1) (undo-tree-id16309 . -1) (undo-tree-id16310 . -1) (undo-tree-id16311 . -1) (undo-tree-id16312 . -1) (undo-tree-id16313 . -1) (undo-tree-id16314 . -1) (undo-tree-id16315 . -1) (undo-tree-id16316 . -1) (undo-tree-id16317 . -1) (undo-tree-id16318 . -1) (undo-tree-id16319 . -1) (undo-tree-id16320 . -1) (undo-tree-id16321 . -1) (undo-tree-id16322 . -1) (undo-tree-id16323 . -1) (undo-tree-id16324 . -1) (undo-tree-id16325 . -1) (undo-tree-id16326 . -1) (undo-tree-id16327 . -1) (undo-tree-id16328 . -1) (undo-tree-id16329 . -1) (undo-tree-id16330 . -1) (undo-tree-id16331 . -1) (undo-tree-id16332 . -1) (undo-tree-id16333 . -1) (undo-tree-id16334 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -12042) (undo-tree-id16335 . -1) (undo-tree-id16336 . -1) (undo-tree-id16337 . -1) (undo-tree-id16338 . -1) (undo-tree-id16339 . -1) (undo-tree-id16340 . -1) (undo-tree-id16341 . -1) (undo-tree-id16342 . -1) (undo-tree-id16343 . -1) (undo-tree-id16344 . -1) (undo-tree-id16345 . -1) (undo-tree-id16346 . -1) (undo-tree-id16347 . -1) (undo-tree-id16348 . -1) (undo-tree-id16349 . -1) (undo-tree-id16350 . -1) (undo-tree-id16351 . -1) (undo-tree-id16352 . -1) (undo-tree-id16353 . -1) (undo-tree-id16354 . -1) (undo-tree-id16355 . -1) (undo-tree-id16356 . -1) (undo-tree-id16357 . -1) (undo-tree-id16358 . -1) (undo-tree-id16359 . -1) (undo-tree-id16360 . -1) (undo-tree-id16361 . -1) (undo-tree-id16362 . -1) (undo-tree-id16363 . -1) (undo-tree-id16364 . -1) (undo-tree-id16365 . -1) (undo-tree-id16366 . -1) (undo-tree-id16367 . -1) (undo-tree-id16368 . -1) (undo-tree-id16369 . -1) (undo-tree-id16370 . -1) (undo-tree-id16371 . -1) (undo-tree-id16372 . -1) (undo-tree-id16373 . -1) (undo-tree-id16374 . -1) (undo-tree-id16375 . -1) (undo-tree-id16376 . -1) (undo-tree-id16377 . -1) (undo-tree-id16378 . -1) (undo-tree-id16379 . -1) (undo-tree-id16380 . -1) (undo-tree-id16381 . -1) (undo-tree-id16382 . -1) (undo-tree-id16383 . -1) (#("S" 0 1 (face font-lock-string-face fontified t)) . -12043) (undo-tree-id16384 . -1) (undo-tree-id16385 . -1) (undo-tree-id16386 . -1) (undo-tree-id16387 . -1) (undo-tree-id16388 . -1) (undo-tree-id16389 . -1) (undo-tree-id16390 . -1) (undo-tree-id16391 . -1) (undo-tree-id16392 . -1) (undo-tree-id16393 . -1) (undo-tree-id16394 . -1) (undo-tree-id16395 . -1) (undo-tree-id16396 . -1) (undo-tree-id16397 . -1) (undo-tree-id16398 . -1) (undo-tree-id16399 . -1) (undo-tree-id16400 . -1) (undo-tree-id16401 . -1) (undo-tree-id16402 . -1) (undo-tree-id16403 . -1) (undo-tree-id16404 . -1) (undo-tree-id16405 . -1) (undo-tree-id16406 . -1) (undo-tree-id16407 . -1) (undo-tree-id16408 . -1) (undo-tree-id16409 . -1) (undo-tree-id16410 . -1) (undo-tree-id16411 . -1) (undo-tree-id16412 . -1) (undo-tree-id16413 . -1) (undo-tree-id16414 . -1) (undo-tree-id16415 . -1) (undo-tree-id16416 . -1) (undo-tree-id16417 . -1) (undo-tree-id16418 . -1) (undo-tree-id16419 . -1) (undo-tree-id16420 . -1) (undo-tree-id16421 . -1) (undo-tree-id16422 . -1) (undo-tree-id16423 . -1) (undo-tree-id16424 . -1) (undo-tree-id16425 . -1) (undo-tree-id16426 . -1) (undo-tree-id16427 . -1) (undo-tree-id16428 . -1) (undo-tree-id16429 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -12044) (undo-tree-id16430 . -1) (undo-tree-id16431 . -1) (undo-tree-id16432 . -1) (undo-tree-id16433 . -1) (undo-tree-id16434 . -1) (undo-tree-id16435 . -1) (undo-tree-id16436 . -1) (undo-tree-id16437 . -1) (undo-tree-id16438 . -1) (undo-tree-id16439 . -1) (undo-tree-id16440 . -1) (undo-tree-id16441 . -1) (undo-tree-id16442 . -1) (undo-tree-id16443 . -1) (undo-tree-id16444 . -1) (undo-tree-id16445 . -1) (undo-tree-id16446 . -1) (undo-tree-id16447 . -1) (undo-tree-id16448 . -1) (undo-tree-id16449 . -1) (undo-tree-id16450 . -1) (undo-tree-id16451 . -1) (undo-tree-id16452 . -1) (undo-tree-id16453 . -1) (undo-tree-id16454 . -1) (undo-tree-id16455 . -1) (undo-tree-id16456 . -1) (undo-tree-id16457 . -1) (undo-tree-id16458 . -1) (undo-tree-id16459 . -1) (undo-tree-id16460 . -1) (undo-tree-id16461 . -1) (undo-tree-id16462 . -1) (undo-tree-id16463 . -1) (undo-tree-id16464 . -1) (undo-tree-id16465 . -1) (undo-tree-id16466 . -1) (undo-tree-id16467 . -1) (undo-tree-id16468 . -1) (undo-tree-id16469 . -1) (undo-tree-id16470 . -1) (undo-tree-id16471 . -1) (undo-tree-id16472 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -12045) (undo-tree-id16473 . -1) (undo-tree-id16474 . -1) (undo-tree-id16475 . -1) (undo-tree-id16476 . -1) (undo-tree-id16477 . -1) (undo-tree-id16478 . -1) (undo-tree-id16479 . -1) (undo-tree-id16480 . -1) (undo-tree-id16481 . -1) (undo-tree-id16482 . -1) (undo-tree-id16483 . -1) (undo-tree-id16484 . -1) (undo-tree-id16485 . -1) (undo-tree-id16486 . -1) (undo-tree-id16487 . -1) (undo-tree-id16488 . -1) (undo-tree-id16489 . -1) (undo-tree-id16490 . -1) (undo-tree-id16491 . -1) (undo-tree-id16492 . -1) (undo-tree-id16493 . -1) (undo-tree-id16494 . -1) (undo-tree-id16495 . -1) (undo-tree-id16496 . -1) (undo-tree-id16497 . -1) (undo-tree-id16498 . -1) (undo-tree-id16499 . -1) (undo-tree-id16500 . -1) (undo-tree-id16501 . -1) (undo-tree-id16502 . -1) (undo-tree-id16503 . -1) (undo-tree-id16504 . -1) (undo-tree-id16505 . -1) (undo-tree-id16506 . -1) (undo-tree-id16507 . -1) (undo-tree-id16508 . -1) (undo-tree-id16509 . -1) (undo-tree-id16510 . -1) (undo-tree-id16511 . -1) (undo-tree-id16512 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -12046) (undo-tree-id16513 . -1) (undo-tree-id16514 . -1) (undo-tree-id16515 . -1) (undo-tree-id16516 . -1) (undo-tree-id16517 . -1) (undo-tree-id16518 . -1) (undo-tree-id16519 . -1) (undo-tree-id16520 . -1) (undo-tree-id16521 . -1) (undo-tree-id16522 . -1) (undo-tree-id16523 . -1) (undo-tree-id16524 . -1) (undo-tree-id16525 . -1) (undo-tree-id16526 . -1) (undo-tree-id16527 . -1) (undo-tree-id16528 . -1) (undo-tree-id16529 . -1) (undo-tree-id16530 . -1) (undo-tree-id16531 . -1) (undo-tree-id16532 . -1) (undo-tree-id16533 . -1) (undo-tree-id16534 . -1) (undo-tree-id16535 . -1) (undo-tree-id16536 . -1) (undo-tree-id16537 . -1) (undo-tree-id16538 . -1) (undo-tree-id16539 . -1) (undo-tree-id16540 . -1) (undo-tree-id16541 . -1) (undo-tree-id16542 . -1) (undo-tree-id16543 . -1) (undo-tree-id16544 . -1) (undo-tree-id16545 . -1) (undo-tree-id16546 . -1) (undo-tree-id16547 . -1) (undo-tree-id16548 . -1) (undo-tree-id16549 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -12047) (undo-tree-id16550 . -1) (undo-tree-id16551 . -1) (undo-tree-id16552 . -1) (undo-tree-id16553 . -1) (undo-tree-id16554 . -1) (undo-tree-id16555 . -1) (undo-tree-id16556 . -1) (undo-tree-id16557 . -1) (undo-tree-id16558 . -1) (undo-tree-id16559 . -1) (undo-tree-id16560 . -1) (undo-tree-id16561 . -1) (undo-tree-id16562 . -1) (undo-tree-id16563 . -1) (undo-tree-id16564 . -1) (undo-tree-id16565 . -1) (undo-tree-id16566 . -1) (undo-tree-id16567 . -1) (undo-tree-id16568 . -1) (undo-tree-id16569 . -1) (undo-tree-id16570 . -1) (undo-tree-id16571 . -1) (undo-tree-id16572 . -1) (undo-tree-id16573 . -1) (undo-tree-id16574 . -1) (undo-tree-id16575 . -1) (undo-tree-id16576 . -1) (undo-tree-id16577 . -1) (undo-tree-id16578 . -1) (undo-tree-id16579 . -1) (undo-tree-id16580 . -1) (undo-tree-id16581 . -1) (undo-tree-id16582 . -1) (undo-tree-id16583 . -1) (#("E" 0 1 (face font-lock-string-face fontified t)) . -12048) (undo-tree-id16584 . -1) (undo-tree-id16585 . -1) (undo-tree-id16586 . -1) (undo-tree-id16587 . -1) (undo-tree-id16588 . -1) (undo-tree-id16589 . -1) (undo-tree-id16590 . -1) (undo-tree-id16591 . -1) (undo-tree-id16592 . -1) (undo-tree-id16593 . -1) (undo-tree-id16594 . -1) (undo-tree-id16595 . -1) (undo-tree-id16596 . -1) (undo-tree-id16597 . -1) (undo-tree-id16598 . -1) (undo-tree-id16599 . -1) (undo-tree-id16600 . -1) (undo-tree-id16601 . -1) (undo-tree-id16602 . -1) (undo-tree-id16603 . -1) (undo-tree-id16604 . -1) (undo-tree-id16605 . -1) (undo-tree-id16606 . -1) (undo-tree-id16607 . -1) (undo-tree-id16608 . -1) (undo-tree-id16609 . -1) (undo-tree-id16610 . -1) (undo-tree-id16611 . -1) (undo-tree-id16612 . -1) (undo-tree-id16613 . -1) (undo-tree-id16614 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -12049) (undo-tree-id16615 . -1) (undo-tree-id16616 . -1) (undo-tree-id16617 . -1) (undo-tree-id16618 . -1) (undo-tree-id16619 . -1) (undo-tree-id16620 . -1) (undo-tree-id16621 . -1) (undo-tree-id16622 . -1) (undo-tree-id16623 . -1) (undo-tree-id16624 . -1) (undo-tree-id16625 . -1) (undo-tree-id16626 . -1) (undo-tree-id16627 . -1) (undo-tree-id16628 . -1) (undo-tree-id16629 . -1) (undo-tree-id16630 . -1) (undo-tree-id16631 . -1) (undo-tree-id16632 . -1) (undo-tree-id16633 . -1) (undo-tree-id16634 . -1) (undo-tree-id16635 . -1) (undo-tree-id16636 . -1) (undo-tree-id16637 . -1) (undo-tree-id16638 . -1) (undo-tree-id16639 . -1) (undo-tree-id16640 . -1) (undo-tree-id16641 . -1) (undo-tree-id16642 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -12050) (undo-tree-id16643 . -1) (undo-tree-id16644 . -1) (undo-tree-id16645 . -1) (undo-tree-id16646 . -1) (undo-tree-id16647 . -1) (undo-tree-id16648 . -1) (undo-tree-id16649 . -1) (undo-tree-id16650 . -1) (undo-tree-id16651 . -1) (undo-tree-id16652 . -1) (undo-tree-id16653 . -1) (undo-tree-id16654 . -1) (undo-tree-id16655 . -1) (undo-tree-id16656 . -1) (undo-tree-id16657 . -1) (undo-tree-id16658 . -1) (undo-tree-id16659 . -1) (undo-tree-id16660 . -1) (undo-tree-id16661 . -1) (undo-tree-id16662 . -1) (undo-tree-id16663 . -1) (undo-tree-id16664 . -1) (undo-tree-id16665 . -1) (undo-tree-id16666 . -1) (undo-tree-id16667 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -12051) (undo-tree-id16668 . -1) (undo-tree-id16669 . -1) (undo-tree-id16670 . -1) (undo-tree-id16671 . -1) (undo-tree-id16672 . -1) (undo-tree-id16673 . -1) (undo-tree-id16674 . -1) (undo-tree-id16675 . -1) (undo-tree-id16676 . -1) (undo-tree-id16677 . -1) (undo-tree-id16678 . -1) (undo-tree-id16679 . -1) (undo-tree-id16680 . -1) (undo-tree-id16681 . -1) (undo-tree-id16682 . -1) (undo-tree-id16683 . -1) (undo-tree-id16684 . -1) (undo-tree-id16685 . -1) (undo-tree-id16686 . -1) (undo-tree-id16687 . -1) (undo-tree-id16688 . -1) (undo-tree-id16689 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -12052) (undo-tree-id16690 . -1) (undo-tree-id16691 . -1) (undo-tree-id16692 . -1) (undo-tree-id16693 . -1) (undo-tree-id16694 . -1) (undo-tree-id16695 . -1) (undo-tree-id16696 . -1) (undo-tree-id16697 . -1) (undo-tree-id16698 . -1) (undo-tree-id16699 . -1) (undo-tree-id16700 . -1) (undo-tree-id16701 . -1) (undo-tree-id16702 . -1) (undo-tree-id16703 . -1) (undo-tree-id16704 . -1) (undo-tree-id16705 . -1) (undo-tree-id16706 . -1) (undo-tree-id16707 . -1) (undo-tree-id16708 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -12053) (undo-tree-id16709 . -1) (undo-tree-id16710 . -1) (undo-tree-id16711 . -1) (undo-tree-id16712 . -1) (undo-tree-id16713 . -1) (undo-tree-id16714 . -1) (undo-tree-id16715 . -1) (undo-tree-id16716 . -1) (undo-tree-id16717 . -1) (undo-tree-id16718 . -1) (undo-tree-id16719 . -1) (undo-tree-id16720 . -1) (undo-tree-id16721 . -1) (undo-tree-id16722 . -1) (undo-tree-id16723 . -1) (undo-tree-id16724 . -1) (#(")" 0 1 (fontified t)) . -12054) (undo-tree-id16725 . -1) (undo-tree-id16726 . -1) (undo-tree-id16727 . -1) (undo-tree-id16728 . -1) (undo-tree-id16729 . -1) (undo-tree-id16730 . -1) 12055 (t 25968 47209 497762 951000)) nil (25968 47289 977824 0) 0 nil])
([nil nil ((#("move||" 0 5 (fontified t) 5 6 (fontified t rear-nonsticky t)) . -18143) (undo-tree-id8741 . -6) (undo-tree-id8743 . -6) (undo-tree-id8745 . -6) (undo-tree-id8747 . -6) 18149) ((18143 . 18149)) (25968 39122 283263 0) 0 nil])
([nil nil ((11933 . 11936)) nil (25968 47289 977026 0) 0 nil])
([nil nil ((#("get()." 0 5 (fontified t) 5 6 (fontified t rear-nonsticky t)) . -18283) (undo-tree-id8732 . -6) (undo-tree-id8734 . -6) (undo-tree-id8736 . -6) (undo-tree-id8738 . -6) (undo-tree-id8740 . -6) 18289) ((18283 . 18289)) (25968 39122 199789 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -11933) (undo-tree-id15886 . -1) (undo-tree-id15887 . -1) (undo-tree-id15888 . -1) (undo-tree-id15889 . -1) (undo-tree-id15890 . -1) (undo-tree-id15891 . -1) (undo-tree-id15892 . -1) (undo-tree-id15893 . -1) (undo-tree-id15894 . -1) (undo-tree-id15895 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -11934) (undo-tree-id15896 . -1) (undo-tree-id15897 . -1) (undo-tree-id15898 . -1) (undo-tree-id15899 . -1) (undo-tree-id15900 . -1) (undo-tree-id15901 . -1) (undo-tree-id15902 . -1) (undo-tree-id15903 . -1) (#("t" 0 1 (face font-lock-constant-face fontified t)) . -11935) (undo-tree-id15904 . -1) (undo-tree-id15905 . -1) (undo-tree-id15906 . -1) 11936) nil (25968 47289 977022 0) 0 nil])
([nil nil ((#("uistate." 0 8 (fontified t)) . -18275) (undo-tree-id8721 . -8) (undo-tree-id8722 . -8) (undo-tree-id8724 . -8) (undo-tree-id8726 . -8) (undo-tree-id8728 . -8) (undo-tree-id8730 . -8) 18283) ((18275 . 18283)) (25968 39122 116231 0) 0 nil])
([nil nil ((11933 . 11943)) nil (25968 47289 976991 0) 0 nil])
([nil nil ((#("move||" 0 5 (fontified t) 5 6 (fontified t rear-nonsticky t)) . -18269) (undo-tree-id8707 . -6) (undo-tree-id8708 . -6) (undo-tree-id8710 . -6) (undo-tree-id8712 . -6) (undo-tree-id8714 . -6) (undo-tree-id8716 . -6) (undo-tree-id8718 . -6) (undo-tree-id8720 . -6) 18275) ((18269 . 18275)) (25968 39122 31618 0) 0 nil])
([nil nil ((12045 . 12048) (t 25968 47290 15786 118000)) nil (25968 47358 757143 0) 0 nil])
([nil nil ((#("get()." 0 5 (fontified t) 5 6 (fontified t rear-nonsticky t)) . -18566) (undo-tree-id8834 . -6) (undo-tree-id8835 . -6) (undo-tree-id8837 . -6) (undo-tree-id8839 . -6) (undo-tree-id8841 . -6) (undo-tree-id8843 . -6) (undo-tree-id8845 . -6) 18572 (t 25968 38480 193571 251000)) ((18566 . 18572)) (25968 39121 947324 0) 0 nil])
([nil nil ((12048 . 12057)) nil (25968 47358 757142 0) 0 nil])
([nil nil ((#("uistate." 0 8 (fontified t)) . -18558) (undo-tree-id8821 . -8) (undo-tree-id8822 . -8) (undo-tree-id8824 . -8) (undo-tree-id8826 . -8) (undo-tree-id8828 . -8) (undo-tree-id8830 . -8) (undo-tree-id8832 . -8) 18566) ((18558 . 18566)) (25968 39121 864005 0) 0 nil])
([nil nil ((12054 . 12057) (#("res" 0 3 (fontified nil)) . 12054) (12054 . 12057) (#("res" 0 3 (fontified t)) . -12054) (undo-tree-id16840 . -3) 12057) nil (25968 47358 757141 0) 0 nil])
([nil nil ((#("move||" 0 5 (fontified t) 5 6 (fontified t rear-nonsticky t)) . -18552) (undo-tree-id8807 . -6) (undo-tree-id8808 . -6) (undo-tree-id8810 . -6) (undo-tree-id8812 . -6) (undo-tree-id8814 . -6) (undo-tree-id8816 . -6) (undo-tree-id8818 . -6) (undo-tree-id8820 . -6) 18558) ((18552 . 18558)) (25968 39121 780510 0) 0 nil])
([nil nil ((12057 . 12060)) nil (25968 47358 757138 0) 0 nil])
([nil nil ((#("get()." 0 5 (fontified t) 5 6 (fontified t rear-nonsticky t)) . -18699) (undo-tree-id8793 . -6) (undo-tree-id8794 . -6) (undo-tree-id8796 . -6) (undo-tree-id8798 . -6) (undo-tree-id8800 . -6) (undo-tree-id8802 . -6) (undo-tree-id8804 . -6) (undo-tree-id8806 . -6) 18705) ((18699 . 18705)) (25968 39121 703593 0) 0 nil])
([nil nil ((12061 . 12063) (#("		    " 0 6 (fontified nil)) . 12060) (undo-tree-id16839 . -2) (12062 . 12066) (12059 . 12063)) nil (25968 47358 757137 0) 0 nil])
([nil nil ((#("uistate." 0 8 (fontified t)) . -18691) (undo-tree-id8778 . -8) (undo-tree-id8779 . -8) (undo-tree-id8781 . -8) (undo-tree-id8783 . -8) (undo-tree-id8785 . -8) (undo-tree-id8787 . -8) (undo-tree-id8789 . -8) (undo-tree-id8791 . -8) 18699) ((18691 . 18699)) (25968 39121 612587 0) 0 nil])
([nil nil ((12060 . 12066)) nil (25968 47358 757134 0) 0 nil])
([nil nil ((#("move||" 0 5 (fontified t) 5 6 (fontified t rear-nonsticky t)) . -18685) (undo-tree-id8762 . -6) (undo-tree-id8763 . -6) (undo-tree-id8765 . -6) (undo-tree-id8767 . -6) (undo-tree-id8769 . -6) (undo-tree-id8771 . -6) (undo-tree-id8773 . -6) (undo-tree-id8775 . -6) (undo-tree-id8777 . -6) 18691) ((18685 . 18691)) (25968 39121 528947 0) 0 nil])
([nil nil ((12066 . 12070)) nil (25968 47358 757133 0) 0 nil])
([nil nil ((14121 . 14123) (t 25968 38487 317468 552000)) ((#("//" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 2 (face font-lock-comment-delimiter-face fontified t)) . 14121) (undo-tree-id10400 . -2) (undo-tree-id10401 . -2)) (25968 39121 445776 0) 0 nil])
([nil nil ((12069 . 12070)) nil (25968 47358 757132 0) 0 nil])
([nil nil ((14052 . 14054) (t 25968 38624 652334 868000)) ((#("//" 0 2 (face font-lock-comment-delimiter-face fontified t)) . 14052)) (25968 39121 362791 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -12069) (undo-tree-id16837 . -1) (undo-tree-id16838 . -1) 12070) nil (25968 47358 757131 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -14123) (undo-tree-id8846 . -1) (undo-tree-id8847 . -1) (undo-tree-id8848 . -1) (undo-tree-id8850 . -1) (undo-tree-id8852 . -1) (undo-tree-id8854 . -1) (undo-tree-id8856 . -1) (undo-tree-id8858 . -1) (undo-tree-id8860 . -1) (undo-tree-id8862 . -1) (undo-tree-id8864 . -1) (undo-tree-id8866 . -1) (undo-tree-id8868 . -1) (undo-tree-id8870 . -1) (undo-tree-id8872 . -1) (undo-tree-id8874 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -14124) (undo-tree-id8876 . -1) (undo-tree-id8877 . -1) (undo-tree-id8878 . -1) (undo-tree-id8880 . -1) (undo-tree-id8882 . -1) (undo-tree-id8884 . -1) (undo-tree-id8886 . -1) (undo-tree-id8888 . -1) (undo-tree-id8890 . -1) (undo-tree-id8892 . -1) (undo-tree-id8894 . -1) (undo-tree-id8896 . -1) (undo-tree-id8898 . -1) (undo-tree-id8900 . -1) (undo-tree-id8902 . -1) 14125 (t 25968 38651 590506 189000)) ((14123 . 14125)) (25968 39121 279226 0) 0 nil])
([nil nil ((12069 . 12070)) nil (25968 47358 757127 0) 0 nil])
([nil nil ((17239 . 17241) (t 25968 38882 949110 859000)) ((#(".g" 0 1 (fontified t) 1 2 (fontified t)) . 17239) (undo-tree-id10397 . -2) (undo-tree-id10398 . -2) (undo-tree-id10399 . -1)) (25968 39121 196380 0) 0 nil])
([nil nil ((#("O" 0 1 (face font-lock-type-face fontified t)) . -12066) (undo-tree-id16827 . -1) (undo-tree-id16828 . -1) (#("k" 0 1 (face font-lock-type-face fontified t)) . -12067) (undo-tree-id16829 . -1) (undo-tree-id16830 . -1) (#("(" 0 1 (fontified t)) . -12068) (undo-tree-id16831 . -1) (undo-tree-id16832 . -1) (#("_" 0 1 (fontified t)) . -12069) (undo-tree-id16833 . -1) (undo-tree-id16834 . -1) (#(")" 0 1 (fontified t)) . -12070) (undo-tree-id16835 . -1) (undo-tree-id16836 . -1) 12071) nil (25968 47358 757125 0) 0 nil])
([nil nil ((apply yas--snippet-revive 17240 17245 #s(yas--snippet nil nil #s(yas--exit #<marker at 19485 in component.rs> nil) 56 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 19485 in component.rs> nil) 56 nil nil nil nil)) (17240 . 17245) (#("get()$0" 0 7 (fontified nil)) . 17240) (17240 . 17247) (#("g" 0 1 (fontified nil)) . 17240) (17240 . 17241) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -17240) (17240 . 17260) (#("g" 0 1 (fontified t)) . -17240) (undo-tree-id8908 . -1) (undo-tree-id8910 . -1) (undo-tree-id8912 . -1) 17241) ((17240 . 17241) (#("get() (as SignalGet)" 0 20 (fontified nil)) . 17240) (17240 . 17260) (#("g" 0 1 (fontified nil)) . 17240) (17240 . 17241) (#("get()$0" 0 7 (fontified nil)) . 17240) (17240 . 17247) (#("get()" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 17240) (undo-tree-id10396 . -5)) (25968 39121 112231 0) 0 nil])
([nil nil ((12066 . 12067)) nil (25968 47358 757113 0) 0 nil])
([nil nil ((17400 . 17402)) ((#(".g" 0 1 (fontified t) 1 2 (fontified t)) . 17400) (undo-tree-id10393 . -2) (undo-tree-id10394 . -2) (undo-tree-id10395 . -1)) (25968 39121 30043 0) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-type-face fontified t)) . -12066) (undo-tree-id16826 . -1) 12067) nil (25968 47358 757112 0) 0 nil])
([nil nil ((apply yas--snippet-revive 17401 17406 #s(yas--snippet nil nil #s(yas--exit #<marker at 19635 in component.rs> nil) 57 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 19635 in component.rs> nil) 57 nil nil nil nil)) (17401 . 17406) (#("get()$0" 0 7 (fontified nil)) . 17401) (17401 . 17408) (#("g" 0 1 (fontified nil)) . 17401) (17401 . 17402) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -17401) (17401 . 17421) (#("g" 0 1 (fontified t)) . -17401) (undo-tree-id8903 . -1) (undo-tree-id8905 . -1) (undo-tree-id8907 . -1) 17402) ((17401 . 17402) (#("get() (as SignalGet)" 0 20 (fontified nil)) . 17401) (17401 . 17421) (#("g" 0 1 (fontified nil)) . 17401) (17401 . 17402) (#("get()$0" 0 7 (fontified nil)) . 17401) (17401 . 17408) (#("get()" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 17401) (undo-tree-id10392 . -5)) (25968 39120 946799 0) 0 nil])
([nil nil ((12066 . 12067)) nil (25968 47358 757110 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -17239) (undo-tree-id10018 . -1) (undo-tree-id10019 . -1) (undo-tree-id10021 . -1) (undo-tree-id10023 . -1) (undo-tree-id10025 . -1) (undo-tree-id10027 . -1) (undo-tree-id10029 . -1) (undo-tree-id10031 . -1) (undo-tree-id10033 . -1) (undo-tree-id10035 . -1) (undo-tree-id10037 . -1) (undo-tree-id10039 . -1) (undo-tree-id10041 . -1) (undo-tree-id10043 . -1) (undo-tree-id10045 . -1) (undo-tree-id10047 . -1) (undo-tree-id10049 . -1) (undo-tree-id10051 . -1) (undo-tree-id10053 . -1) (undo-tree-id10055 . -1) (undo-tree-id10057 . -1) (undo-tree-id10059 . -1) (undo-tree-id10061 . -1) (undo-tree-id10063 . -1) (undo-tree-id10065 . -1) (undo-tree-id10067 . -1) (undo-tree-id10069 . -1) (undo-tree-id10071 . -1) (undo-tree-id10073 . -1) (undo-tree-id10075 . -1) (#("g" 0 1 (fontified t)) . -17240) (undo-tree-id10077 . -1) (undo-tree-id10078 . -1) (undo-tree-id10080 . -1) (undo-tree-id10082 . -1) (undo-tree-id10084 . -1) (undo-tree-id10086 . -1) (undo-tree-id10088 . -1) (undo-tree-id10090 . -1) (undo-tree-id10092 . -1) (undo-tree-id10094 . -1) (undo-tree-id10096 . -1) (undo-tree-id10098 . -1) (undo-tree-id10100 . -1) (undo-tree-id10102 . -1) (undo-tree-id10104 . -1) (undo-tree-id10106 . -1) (undo-tree-id10108 . -1) (undo-tree-id10110 . -1) (undo-tree-id10112 . -1) (undo-tree-id10114 . -1) (undo-tree-id10116 . -1) (undo-tree-id10118 . -1) (undo-tree-id10120 . -1) (undo-tree-id10122 . -1) (undo-tree-id10124 . -1) (undo-tree-id10126 . -1) (undo-tree-id10128 . -1) (#("e" 0 1 (fontified t)) . -17241) (undo-tree-id10130 . -1) (undo-tree-id10131 . -1) (undo-tree-id10133 . -1) (undo-tree-id10135 . -1) (undo-tree-id10137 . -1) (undo-tree-id10139 . -1) (undo-tree-id10141 . -1) (undo-tree-id10143 . -1) (undo-tree-id10145 . -1) (undo-tree-id10147 . -1) (undo-tree-id10149 . -1) (undo-tree-id10151 . -1) (undo-tree-id10153 . -1) (undo-tree-id10155 . -1) (undo-tree-id10157 . -1) (undo-tree-id10159 . -1) (undo-tree-id10161 . -1) (undo-tree-id10163 . -1) (undo-tree-id10165 . -1) (undo-tree-id10167 . -1) (undo-tree-id10169 . -1) (undo-tree-id10171 . -1) (undo-tree-id10173 . -1) (undo-tree-id10175 . -1) (undo-tree-id10177 . -1) (undo-tree-id10179 . -1) (#("t" 0 1 (fontified t)) . -17242) (undo-tree-id10181 . -1) (undo-tree-id10182 . -1) (undo-tree-id10184 . -1) (undo-tree-id10186 . -1) (undo-tree-id10188 . -1) (undo-tree-id10190 . -1) (undo-tree-id10192 . -1) (undo-tree-id10194 . -1) (undo-tree-id10196 . -1) (undo-tree-id10198 . -1) (undo-tree-id10200 . -1) (undo-tree-id10202 . -1) (undo-tree-id10204 . -1) (undo-tree-id10206 . -1) (undo-tree-id10208 . -1) (undo-tree-id10210 . -1) (undo-tree-id10212 . -1) (undo-tree-id10214 . -1) (undo-tree-id10216 . -1) (undo-tree-id10218 . -1) (undo-tree-id10220 . -1) (undo-tree-id10222 . -1) (undo-tree-id10224 . -1) (undo-tree-id10226 . -1) (#("(" 0 1 (fontified t)) . -17243) (undo-tree-id10228 . -1) (undo-tree-id10229 . -1) (undo-tree-id10231 . -1) (undo-tree-id10233 . -1) (undo-tree-id10235 . -1) (undo-tree-id10237 . -1) (undo-tree-id10239 . -1) (undo-tree-id10241 . -1) (undo-tree-id10243 . -1) (undo-tree-id10245 . -1) (undo-tree-id10247 . -1) (undo-tree-id10249 . -1) (undo-tree-id10251 . -1) (undo-tree-id10253 . -1) (undo-tree-id10255 . -1) (undo-tree-id10257 . -1) (undo-tree-id10259 . -1) (undo-tree-id10261 . -1) (undo-tree-id10263 . -1) (undo-tree-id10265 . -1) (undo-tree-id10267 . -1) (#(")" 0 1 (fontified t)) . -17244) (undo-tree-id10269 . -1) (undo-tree-id10271 . -1) (undo-tree-id10273 . -1) (undo-tree-id10275 . -1) (undo-tree-id10277 . -1) 17245 (t 25968 38953 463283 10000)) ((17239 . 17245)) (25968 39120 862771 0) 0 nil] [nil nil ((#("c" 0 1 (fontified t)) . -17224) (undo-tree-id8975 . -1) (undo-tree-id8976 . -1) (undo-tree-id8977 . -1) (undo-tree-id8978 . -1) (undo-tree-id8979 . -1) (undo-tree-id8980 . -1) (undo-tree-id8981 . -1) (undo-tree-id8982 . -1) (undo-tree-id8983 . -1) (undo-tree-id8984 . -1) (undo-tree-id8985 . -1) (undo-tree-id8986 . -1) (undo-tree-id8987 . -1) (undo-tree-id8988 . -1) (undo-tree-id8989 . -1) (undo-tree-id8990 . -1) (undo-tree-id8991 . -1) (undo-tree-id8992 . -1) (undo-tree-id8993 . -1) (undo-tree-id8994 . -1) (undo-tree-id8995 . -1) (undo-tree-id8996 . -1) (undo-tree-id8997 . -1) (undo-tree-id8998 . -1) (undo-tree-id8999 . -1) (undo-tree-id9000 . -1) (undo-tree-id9001 . -1) (undo-tree-id9002 . -1) (undo-tree-id9003 . -1) (undo-tree-id9004 . -1) (undo-tree-id9005 . -1) (undo-tree-id9006 . -1) (undo-tree-id9007 . -1) (undo-tree-id9008 . -1) (undo-tree-id9009 . -1) (undo-tree-id9010 . -1) (undo-tree-id9011 . -1) (undo-tree-id9012 . -1) (undo-tree-id9013 . -1) (undo-tree-id9014 . -1) (undo-tree-id9015 . -1) (undo-tree-id9016 . -1) (undo-tree-id9017 . -1) (undo-tree-id9018 . -1) (undo-tree-id9019 . -1) (undo-tree-id9020 . -1) (undo-tree-id9021 . -1) (undo-tree-id9022 . -1) (undo-tree-id9023 . -1) (undo-tree-id9024 . -1) (undo-tree-id9025 . -1) (undo-tree-id9026 . -1) (undo-tree-id9027 . -1) (undo-tree-id9028 . -1) (undo-tree-id9029 . -1) (undo-tree-id9030 . -1) (undo-tree-id9031 . -1) (undo-tree-id9032 . -1) (undo-tree-id9033 . -1) (#("t" 0 1 (fontified t)) . -17225) (undo-tree-id9034 . -1) (undo-tree-id9035 . -1) (undo-tree-id9036 . -1) (undo-tree-id9037 . -1) (undo-tree-id9038 . -1) (undo-tree-id9039 . -1) (undo-tree-id9040 . -1) (undo-tree-id9041 . -1) (undo-tree-id9042 . -1) (undo-tree-id9043 . -1) (undo-tree-id9044 . -1) (undo-tree-id9045 . -1) (undo-tree-id9046 . -1) (undo-tree-id9047 . -1) (undo-tree-id9048 . -1) (undo-tree-id9049 . -1) (undo-tree-id9050 . -1) (undo-tree-id9051 . -1) (undo-tree-id9052 . -1) (undo-tree-id9053 . -1) (undo-tree-id9054 . -1) (undo-tree-id9055 . -1) (undo-tree-id9056 . -1) (undo-tree-id9057 . -1) (undo-tree-id9058 . -1) (undo-tree-id9059 . -1) (undo-tree-id9060 . -1) (undo-tree-id9061 . -1) (undo-tree-id9062 . -1) (undo-tree-id9063 . -1) (undo-tree-id9064 . -1) (undo-tree-id9065 . -1) (undo-tree-id9066 . -1) (undo-tree-id9067 . -1) (undo-tree-id9068 . -1) (undo-tree-id9069 . -1) (undo-tree-id9070 . -1) (undo-tree-id9071 . -1) (undo-tree-id9072 . -1) (undo-tree-id9073 . -1) (undo-tree-id9074 . -1) (undo-tree-id9075 . -1) (undo-tree-id9076 . -1) (undo-tree-id9077 . -1) (undo-tree-id9078 . -1) (undo-tree-id9079 . -1) (undo-tree-id9080 . -1) (undo-tree-id9081 . -1) (undo-tree-id9082 . -1) (undo-tree-id9083 . -1) (undo-tree-id9084 . -1) (undo-tree-id9085 . -1) (undo-tree-id9086 . -1) (undo-tree-id9087 . -1) (undo-tree-id9088 . -1) (undo-tree-id9089 . -1) (undo-tree-id9090 . -1) (undo-tree-id9091 . -1) (#("i" 0 1 (fontified t)) . -17226) (undo-tree-id9092 . -1) (undo-tree-id9093 . -1) (undo-tree-id9094 . -1) (undo-tree-id9095 . -1) (undo-tree-id9096 . -1) (undo-tree-id9097 . -1) (undo-tree-id9098 . -1) (undo-tree-id9099 . -1) (undo-tree-id9100 . -1) (undo-tree-id9101 . -1) (undo-tree-id9102 . -1) (undo-tree-id9103 . -1) (undo-tree-id9104 . -1) (undo-tree-id9105 . -1) (undo-tree-id9106 . -1) (undo-tree-id9107 . -1) (undo-tree-id9108 . -1) (undo-tree-id9109 . -1) (undo-tree-id9110 . -1) (undo-tree-id9111 . -1) (undo-tree-id9112 . -1) (undo-tree-id9113 . -1) (undo-tree-id9114 . -1) (undo-tree-id9115 . -1) (undo-tree-id9116 . -1) (undo-tree-id9117 . -1) (undo-tree-id9118 . -1) (undo-tree-id9119 . -1) (undo-tree-id9120 . -1) (undo-tree-id9121 . -1) (undo-tree-id9122 . -1) (undo-tree-id9123 . -1) (undo-tree-id9124 . -1) (undo-tree-id9125 . -1) (undo-tree-id9126 . -1) (undo-tree-id9127 . -1) (undo-tree-id9128 . -1) (undo-tree-id9129 . -1) (undo-tree-id9130 . -1) (undo-tree-id9131 . -1) (undo-tree-id9132 . -1) (undo-tree-id9133 . -1) (undo-tree-id9134 . -1) (undo-tree-id9135 . -1) (undo-tree-id9136 . -1) (undo-tree-id9137 . -1) (undo-tree-id9138 . -1) (undo-tree-id9139 . -1) (undo-tree-id9140 . -1) (undo-tree-id9141 . -1) (undo-tree-id9142 . -1) (undo-tree-id9143 . -1) (undo-tree-id9144 . -1) (undo-tree-id9145 . -1) (undo-tree-id9146 . -1) (undo-tree-id9147 . -1) (undo-tree-id9148 . -1) (#("v" 0 1 (fontified t)) . -17227) (undo-tree-id9149 . -1) (undo-tree-id9150 . -1) (undo-tree-id9151 . -1) (undo-tree-id9152 . -1) (undo-tree-id9153 . -1) (undo-tree-id9154 . -1) (undo-tree-id9155 . -1) (undo-tree-id9156 . -1) (undo-tree-id9157 . -1) (undo-tree-id9158 . -1) (undo-tree-id9159 . -1) (undo-tree-id9160 . -1) (undo-tree-id9161 . -1) (undo-tree-id9162 . -1) (undo-tree-id9163 . -1) (undo-tree-id9164 . -1) (undo-tree-id9165 . -1) (undo-tree-id9166 . -1) (undo-tree-id9167 . -1) (undo-tree-id9168 . -1) (undo-tree-id9169 . -1) (undo-tree-id9170 . -1) (undo-tree-id9171 . -1) (undo-tree-id9172 . -1) (undo-tree-id9173 . -1) (undo-tree-id9174 . -1) (undo-tree-id9175 . -1) (undo-tree-id9176 . -1) (undo-tree-id9177 . -1) (undo-tree-id9178 . -1) (undo-tree-id9179 . -1) (undo-tree-id9180 . -1) (undo-tree-id9181 . -1) (undo-tree-id9182 . -1) (undo-tree-id9183 . -1) (undo-tree-id9184 . -1) (undo-tree-id9185 . -1) (undo-tree-id9186 . -1) (undo-tree-id9187 . -1) (undo-tree-id9188 . -1) (undo-tree-id9189 . -1) (undo-tree-id9190 . -1) (undo-tree-id9191 . -1) (undo-tree-id9192 . -1) (undo-tree-id9193 . -1) (undo-tree-id9194 . -1) (undo-tree-id9195 . -1) (undo-tree-id9196 . -1) (undo-tree-id9197 . -1) (undo-tree-id9198 . -1) (undo-tree-id9199 . -1) (undo-tree-id9200 . -1) (undo-tree-id9201 . -1) (undo-tree-id9202 . -1) (undo-tree-id9203 . -1) (undo-tree-id9204 . -1) (#("a" 0 1 (fontified t)) . -17228) (undo-tree-id9205 . -1) (undo-tree-id9206 . -1) (undo-tree-id9207 . -1) (undo-tree-id9208 . -1) (undo-tree-id9209 . -1) (undo-tree-id9210 . -1) (undo-tree-id9211 . -1) (undo-tree-id9212 . -1) (undo-tree-id9213 . -1) (undo-tree-id9214 . -1) (undo-tree-id9215 . -1) (undo-tree-id9216 . -1) (undo-tree-id9217 . -1) (undo-tree-id9218 . -1) (undo-tree-id9219 . -1) (undo-tree-id9220 . -1) (undo-tree-id9221 . -1) (undo-tree-id9222 . -1) (undo-tree-id9223 . -1) (undo-tree-id9224 . -1) (undo-tree-id9225 . -1) (undo-tree-id9226 . -1) (undo-tree-id9227 . -1) (undo-tree-id9228 . -1) (undo-tree-id9229 . -1) (undo-tree-id9230 . -1) (undo-tree-id9231 . -1) (undo-tree-id9232 . -1) (undo-tree-id9233 . -1) (undo-tree-id9234 . -1) (undo-tree-id9235 . -1) (undo-tree-id9236 . -1) (undo-tree-id9237 . -1) (undo-tree-id9238 . -1) (undo-tree-id9239 . -1) (undo-tree-id9240 . -1) (undo-tree-id9241 . -1) (undo-tree-id9242 . -1) (undo-tree-id9243 . -1) (undo-tree-id9244 . -1) (undo-tree-id9245 . -1) (undo-tree-id9246 . -1) (undo-tree-id9247 . -1) (undo-tree-id9248 . -1) (undo-tree-id9249 . -1) (undo-tree-id9250 . -1) (undo-tree-id9251 . -1) (undo-tree-id9252 . -1) (undo-tree-id9253 . -1) (undo-tree-id9254 . -1) (undo-tree-id9255 . -1) (#("t" 0 1 (fontified t)) . -17229) (undo-tree-id9256 . -1) (undo-tree-id9257 . -1) (undo-tree-id9258 . -1) (undo-tree-id9259 . -1) (undo-tree-id9260 . -1) (undo-tree-id9261 . -1) (undo-tree-id9262 . -1) (undo-tree-id9263 . -1) (undo-tree-id9264 . -1) (undo-tree-id9265 . -1) (undo-tree-id9266 . -1) (undo-tree-id9267 . -1) (undo-tree-id9268 . -1) (undo-tree-id9269 . -1) (undo-tree-id9270 . -1) (undo-tree-id9271 . -1) (undo-tree-id9272 . -1) (undo-tree-id9273 . -1) (undo-tree-id9274 . -1) (undo-tree-id9275 . -1) (undo-tree-id9276 . -1) (undo-tree-id9277 . -1) (undo-tree-id9278 . -1) (undo-tree-id9279 . -1) (undo-tree-id9280 . -1) (undo-tree-id9281 . -1) (undo-tree-id9282 . -1) (undo-tree-id9283 . -1) (undo-tree-id9284 . -1) (undo-tree-id9285 . -1) (undo-tree-id9286 . -1) (undo-tree-id9287 . -1) (undo-tree-id9288 . -1) (undo-tree-id9289 . -1) (undo-tree-id9290 . -1) (undo-tree-id9291 . -1) (undo-tree-id9292 . -1) (undo-tree-id9293 . -1) (undo-tree-id9294 . -1) (undo-tree-id9295 . -1) (undo-tree-id9296 . -1) (undo-tree-id9297 . -1) (undo-tree-id9298 . -1) (undo-tree-id9299 . -1) (undo-tree-id9300 . -1) (undo-tree-id9301 . -1) (undo-tree-id9302 . -1) (undo-tree-id9303 . -1) (undo-tree-id9304 . -1) (undo-tree-id9305 . -1) (#("i" 0 1 (fontified t)) . -17230) (undo-tree-id9306 . -1) (undo-tree-id9307 . -1) (undo-tree-id9308 . -1) (undo-tree-id9309 . -1) (undo-tree-id9310 . -1) (undo-tree-id9311 . -1) (undo-tree-id9312 . -1) (undo-tree-id9313 . -1) (undo-tree-id9314 . -1) (undo-tree-id9315 . -1) (undo-tree-id9316 . -1) (undo-tree-id9317 . -1) (undo-tree-id9318 . -1) (undo-tree-id9319 . -1) (undo-tree-id9320 . -1) (undo-tree-id9321 . -1) (undo-tree-id9322 . -1) (undo-tree-id9323 . -1) (undo-tree-id9324 . -1) (undo-tree-id9325 . -1) (undo-tree-id9326 . -1) (undo-tree-id9327 . -1) (undo-tree-id9328 . -1) (undo-tree-id9329 . -1) (undo-tree-id9330 . -1) (undo-tree-id9331 . -1) (undo-tree-id9332 . -1) (undo-tree-id9333 . -1) (undo-tree-id9334 . -1) (undo-tree-id9335 . -1) (undo-tree-id9336 . -1) (undo-tree-id9337 . -1) (undo-tree-id9338 . -1) (undo-tree-id9339 . -1) (undo-tree-id9340 . -1) (undo-tree-id9341 . -1) (undo-tree-id9342 . -1) (undo-tree-id9343 . -1) (undo-tree-id9344 . -1) (undo-tree-id9345 . -1) (undo-tree-id9346 . -1) (undo-tree-id9347 . -1) (undo-tree-id9348 . -1) (undo-tree-id9349 . -1) (undo-tree-id9350 . -1) (undo-tree-id9351 . -1) (undo-tree-id9352 . -1) (undo-tree-id9353 . -1) (undo-tree-id9354 . -1) (#("o" 0 1 (fontified t)) . -17231) (undo-tree-id9355 . -1) (undo-tree-id9356 . -1) (undo-tree-id9357 . -1) (undo-tree-id9358 . -1) (undo-tree-id9359 . -1) (undo-tree-id9360 . -1) (undo-tree-id9361 . -1) (undo-tree-id9362 . -1) (undo-tree-id9363 . -1) (undo-tree-id9364 . -1) (undo-tree-id9365 . -1) (undo-tree-id9366 . -1) (undo-tree-id9367 . -1) (undo-tree-id9368 . -1) (undo-tree-id9369 . -1) (undo-tree-id9370 . -1) (undo-tree-id9371 . -1) (undo-tree-id9372 . -1) (undo-tree-id9373 . -1) (undo-tree-id9374 . -1) (undo-tree-id9375 . -1) (undo-tree-id9376 . -1) (undo-tree-id9377 . -1) (undo-tree-id9378 . -1) (undo-tree-id9379 . -1) (undo-tree-id9380 . -1) (undo-tree-id9381 . -1) (undo-tree-id9382 . -1) (undo-tree-id9383 . -1) (undo-tree-id9384 . -1) (undo-tree-id9385 . -1) (undo-tree-id9386 . -1) (undo-tree-id9387 . -1) (undo-tree-id9388 . -1) (undo-tree-id9389 . -1) (undo-tree-id9390 . -1) (undo-tree-id9391 . -1) (undo-tree-id9392 . -1) (undo-tree-id9393 . -1) (undo-tree-id9394 . -1) (undo-tree-id9395 . -1) (undo-tree-id9396 . -1) (undo-tree-id9397 . -1) (undo-tree-id9398 . -1) (undo-tree-id9399 . -1) (undo-tree-id9400 . -1) (undo-tree-id9401 . -1) (undo-tree-id9402 . -1) (#("n" 0 1 (fontified t)) . -17232) (undo-tree-id9403 . -1) (undo-tree-id9404 . -1) (undo-tree-id9405 . -1) (undo-tree-id9406 . -1) (undo-tree-id9407 . -1) (undo-tree-id9408 . -1) (undo-tree-id9409 . -1) (undo-tree-id9410 . -1) (undo-tree-id9411 . -1) (undo-tree-id9412 . -1) (undo-tree-id9413 . -1) (undo-tree-id9414 . -1) (undo-tree-id9415 . -1) (undo-tree-id9416 . -1) (undo-tree-id9417 . -1) (undo-tree-id9418 . -1) (undo-tree-id9419 . -1) (undo-tree-id9420 . -1) (undo-tree-id9421 . -1) (undo-tree-id9422 . -1) (undo-tree-id9423 . -1) (undo-tree-id9424 . -1) (undo-tree-id9425 . -1) (undo-tree-id9426 . -1) (undo-tree-id9427 . -1) (undo-tree-id9428 . -1) (undo-tree-id9429 . -1) (undo-tree-id9430 . -1) (undo-tree-id9431 . -1) (undo-tree-id9432 . -1) (undo-tree-id9433 . -1) (undo-tree-id9434 . -1) (undo-tree-id9435 . -1) (undo-tree-id9436 . -1) (undo-tree-id9437 . -1) (undo-tree-id9438 . -1) (undo-tree-id9439 . -1) (undo-tree-id9440 . -1) (undo-tree-id9441 . -1) (undo-tree-id9442 . -1) (undo-tree-id9443 . -1) (undo-tree-id9444 . -1) (undo-tree-id9445 . -1) (undo-tree-id9446 . -1) (undo-tree-id9447 . -1) (undo-tree-id9448 . -1) (undo-tree-id9449 . -1) (#("_" 0 1 (fontified t)) . -17233) (undo-tree-id9450 . -1) (undo-tree-id9451 . -1) (undo-tree-id9452 . -1) (undo-tree-id9453 . -1) (undo-tree-id9454 . -1) (undo-tree-id9455 . -1) (undo-tree-id9456 . -1) (undo-tree-id9457 . -1) (undo-tree-id9458 . -1) (undo-tree-id9459 . -1) (undo-tree-id9460 . -1) (undo-tree-id9461 . -1) (undo-tree-id9462 . -1) (undo-tree-id9463 . -1) (undo-tree-id9464 . -1) (undo-tree-id9465 . -1) (undo-tree-id9466 . -1) (undo-tree-id9467 . -1) (undo-tree-id9468 . -1) (undo-tree-id9469 . -1) (undo-tree-id9470 . -1) (undo-tree-id9471 . -1) (undo-tree-id9472 . -1) (undo-tree-id9473 . -1) (undo-tree-id9474 . -1) (undo-tree-id9475 . -1) (undo-tree-id9476 . -1) (undo-tree-id9477 . -1) (undo-tree-id9478 . -1) (undo-tree-id9479 . -1) (undo-tree-id9480 . -1) (undo-tree-id9481 . -1) (undo-tree-id9482 . -1) (undo-tree-id9483 . -1) (undo-tree-id9484 . -1) (undo-tree-id9485 . -1) (undo-tree-id9486 . -1) (undo-tree-id9487 . -1) (undo-tree-id9488 . -1) (undo-tree-id9489 . -1) (undo-tree-id9490 . -1) (undo-tree-id9491 . -1) (undo-tree-id9492 . -1) (undo-tree-id9493 . -1) (undo-tree-id9494 . -1) (undo-tree-id9495 . -1) (#("v" 0 1 (fontified t)) . -17234) (undo-tree-id9496 . -1) (undo-tree-id9497 . -1) (undo-tree-id9498 . -1) (undo-tree-id9499 . -1) (undo-tree-id9500 . -1) (undo-tree-id9501 . -1) (undo-tree-id9502 . -1) (undo-tree-id9503 . -1) (undo-tree-id9504 . -1) (undo-tree-id9505 . -1) (undo-tree-id9506 . -1) (undo-tree-id9507 . -1) (undo-tree-id9508 . -1) (undo-tree-id9509 . -1) (undo-tree-id9510 . -1) (undo-tree-id9511 . -1) (undo-tree-id9512 . -1) (undo-tree-id9513 . -1) (undo-tree-id9514 . -1) (undo-tree-id9515 . -1) (undo-tree-id9516 . -1) (undo-tree-id9517 . -1) (undo-tree-id9518 . -1) (undo-tree-id9519 . -1) (undo-tree-id9520 . -1) (undo-tree-id9521 . -1) (undo-tree-id9522 . -1) (undo-tree-id9523 . -1) (undo-tree-id9524 . -1) (undo-tree-id9525 . -1) (undo-tree-id9526 . -1) (undo-tree-id9527 . -1) (undo-tree-id9528 . -1) (undo-tree-id9529 . -1) (undo-tree-id9530 . -1) (undo-tree-id9531 . -1) (undo-tree-id9532 . -1) (undo-tree-id9533 . -1) (undo-tree-id9534 . -1) (undo-tree-id9535 . -1) (undo-tree-id9536 . -1) (undo-tree-id9537 . -1) (undo-tree-id9538 . -1) (undo-tree-id9539 . -1) (undo-tree-id9540 . -1) (#("a" 0 1 (fontified t)) . -17235) (undo-tree-id9541 . -1) (undo-tree-id9542 . -1) (undo-tree-id9543 . -1) (undo-tree-id9544 . -1) (undo-tree-id9545 . -1) (undo-tree-id9546 . -1) (undo-tree-id9547 . -1) (undo-tree-id9548 . -1) (undo-tree-id9549 . -1) (undo-tree-id9550 . -1) (undo-tree-id9551 . -1) (undo-tree-id9552 . -1) (undo-tree-id9553 . -1) (undo-tree-id9554 . -1) (undo-tree-id9555 . -1) (undo-tree-id9556 . -1) (undo-tree-id9557 . -1) (undo-tree-id9558 . -1) (undo-tree-id9559 . -1) (undo-tree-id9560 . -1) (undo-tree-id9561 . -1) (undo-tree-id9562 . -1) (undo-tree-id9563 . -1) (undo-tree-id9564 . -1) (undo-tree-id9565 . -1) (undo-tree-id9566 . -1) (undo-tree-id9567 . -1) (undo-tree-id9568 . -1) (undo-tree-id9569 . -1) (undo-tree-id9570 . -1) (undo-tree-id9571 . -1) (undo-tree-id9572 . -1) (undo-tree-id9573 . -1) (undo-tree-id9574 . -1) (undo-tree-id9575 . -1) (undo-tree-id9576 . -1) (undo-tree-id9577 . -1) (undo-tree-id9578 . -1) (undo-tree-id9579 . -1) (undo-tree-id9580 . -1) (undo-tree-id9581 . -1) (undo-tree-id9582 . -1) (undo-tree-id9583 . -1) (undo-tree-id9584 . -1) (#("l" 0 1 (fontified t)) . -17236) (undo-tree-id9585 . -1) (undo-tree-id9586 . -1) (undo-tree-id9587 . -1) (undo-tree-id9588 . -1) (undo-tree-id9589 . -1) (undo-tree-id9590 . -1) (undo-tree-id9591 . -1) (undo-tree-id9592 . -1) (undo-tree-id9593 . -1) (undo-tree-id9594 . -1) (undo-tree-id9595 . -1) (undo-tree-id9596 . -1) (undo-tree-id9597 . -1) (undo-tree-id9598 . -1) (undo-tree-id9599 . -1) (undo-tree-id9600 . -1) (undo-tree-id9601 . -1) (undo-tree-id9602 . -1) (undo-tree-id9603 . -1) (undo-tree-id9604 . -1) (undo-tree-id9605 . -1) (undo-tree-id9606 . -1) (undo-tree-id9607 . -1) (undo-tree-id9608 . -1) (undo-tree-id9609 . -1) (undo-tree-id9610 . -1) (undo-tree-id9611 . -1) (undo-tree-id9612 . -1) (undo-tree-id9613 . -1) (undo-tree-id9614 . -1) (undo-tree-id9615 . -1) (undo-tree-id9616 . -1) (undo-tree-id9617 . -1) (undo-tree-id9618 . -1) (undo-tree-id9619 . -1) (undo-tree-id9620 . -1) (undo-tree-id9621 . -1) (undo-tree-id9622 . -1) (undo-tree-id9623 . -1) (undo-tree-id9624 . -1) (undo-tree-id9625 . -1) (undo-tree-id9626 . -1) (undo-tree-id9627 . -1) (#("u" 0 1 (fontified t)) . -17237) (undo-tree-id9628 . -1) (undo-tree-id9629 . -1) (undo-tree-id9630 . -1) (undo-tree-id9631 . -1) (undo-tree-id9632 . -1) (undo-tree-id9633 . -1) (undo-tree-id9634 . -1) (undo-tree-id9635 . -1) (undo-tree-id9636 . -1) (undo-tree-id9637 . -1) (undo-tree-id9638 . -1) (undo-tree-id9639 . -1) (undo-tree-id9640 . -1) (undo-tree-id9641 . -1) (undo-tree-id9642 . -1) (undo-tree-id9643 . -1) (undo-tree-id9644 . -1) (undo-tree-id9645 . -1) (undo-tree-id9646 . -1) (undo-tree-id9647 . -1) (undo-tree-id9648 . -1) (undo-tree-id9649 . -1) (undo-tree-id9650 . -1) (undo-tree-id9651 . -1) (undo-tree-id9652 . -1) (undo-tree-id9653 . -1) (undo-tree-id9654 . -1) (undo-tree-id9655 . -1) (undo-tree-id9656 . -1) (undo-tree-id9657 . -1) (undo-tree-id9658 . -1) (undo-tree-id9659 . -1) (undo-tree-id9660 . -1) (undo-tree-id9661 . -1) (undo-tree-id9662 . -1) (undo-tree-id9663 . -1) (undo-tree-id9664 . -1) (undo-tree-id9665 . -1) (undo-tree-id9666 . -1) (undo-tree-id9667 . -1) (undo-tree-id9668 . -1) (undo-tree-id9669 . -1) (#("e" 0 1 (fontified t)) . -17238) (undo-tree-id9670 . -1) (undo-tree-id9671 . -1) (undo-tree-id9672 . -1) (undo-tree-id9673 . -1) (undo-tree-id9674 . -1) (undo-tree-id9675 . -1) (undo-tree-id9676 . -1) (undo-tree-id9677 . -1) (undo-tree-id9678 . -1) (undo-tree-id9679 . -1) (undo-tree-id9680 . -1) (undo-tree-id9681 . -1) (undo-tree-id9682 . -1) (undo-tree-id9683 . -1) (undo-tree-id9684 . -1) (undo-tree-id9685 . -1) (undo-tree-id9686 . -1) (undo-tree-id9687 . -1) (undo-tree-id9688 . -1) (undo-tree-id9689 . -1) (undo-tree-id9690 . -1) (undo-tree-id9691 . -1) (undo-tree-id9692 . -1) (undo-tree-id9693 . -1) (undo-tree-id9694 . -1) (undo-tree-id9695 . -1) (undo-tree-id9696 . -1) (undo-tree-id9697 . -1) (undo-tree-id9698 . -1) (undo-tree-id9699 . -1) (undo-tree-id9700 . -1) (undo-tree-id9701 . -1) (undo-tree-id9702 . -1) (undo-tree-id9703 . -1) (undo-tree-id9704 . -1) (undo-tree-id9705 . -1) (undo-tree-id9706 . -1) (undo-tree-id9707 . -1) (undo-tree-id9708 . -1) (undo-tree-id9709 . -1) (undo-tree-id9710 . -1) (#("." 0 1 (fontified t)) . -17239) (undo-tree-id9711 . -1) (undo-tree-id9712 . -1) (undo-tree-id9713 . -1) (undo-tree-id9714 . -1) (undo-tree-id9715 . -1) (undo-tree-id9716 . -1) (undo-tree-id9717 . -1) (undo-tree-id9718 . -1) (undo-tree-id9719 . -1) (undo-tree-id9720 . -1) (undo-tree-id9721 . -1) (undo-tree-id9722 . -1) (undo-tree-id9723 . -1) (undo-tree-id9724 . -1) (undo-tree-id9725 . -1) (undo-tree-id9726 . -1) (undo-tree-id9727 . -1) (undo-tree-id9728 . -1) (undo-tree-id9729 . -1) (undo-tree-id9730 . -1) (undo-tree-id9731 . -1) (undo-tree-id9732 . -1) (undo-tree-id9733 . -1) (undo-tree-id9734 . -1) (undo-tree-id9735 . -1) (undo-tree-id9736 . -1) (undo-tree-id9737 . -1) (undo-tree-id9738 . -1) (undo-tree-id9739 . -1) (undo-tree-id9740 . -1) (undo-tree-id9741 . -1) (undo-tree-id9742 . -1) (undo-tree-id9743 . -1) (undo-tree-id9744 . -1) (undo-tree-id9745 . -1) (undo-tree-id9746 . -1) (undo-tree-id9747 . -1) (undo-tree-id9748 . -1) (undo-tree-id9749 . -1) (undo-tree-id9750 . -1) (#("g" 0 1 (fontified t)) . -17240) (undo-tree-id9751 . -1) (undo-tree-id9752 . -1) (undo-tree-id9753 . -1) (undo-tree-id9754 . -1) (undo-tree-id9755 . -1) (undo-tree-id9756 . -1) (undo-tree-id9757 . -1) (undo-tree-id9758 . -1) (undo-tree-id9759 . -1) (undo-tree-id9760 . -1) (undo-tree-id9761 . -1) (undo-tree-id9762 . -1) (undo-tree-id9763 . -1) (undo-tree-id9764 . -1) (undo-tree-id9765 . -1) (undo-tree-id9766 . -1) (undo-tree-id9767 . -1) (undo-tree-id9768 . -1) (undo-tree-id9769 . -1) (undo-tree-id9770 . -1) (undo-tree-id9771 . -1) (undo-tree-id9772 . -1) (undo-tree-id9773 . -1) (undo-tree-id9774 . -1) (undo-tree-id9775 . -1) (undo-tree-id9776 . -1) (undo-tree-id9777 . -1) (undo-tree-id9778 . -1) (undo-tree-id9779 . -1) (undo-tree-id9780 . -1) (undo-tree-id9781 . -1) (undo-tree-id9782 . -1) (undo-tree-id9783 . -1) (undo-tree-id9784 . -1) (undo-tree-id9785 . -1) (#("e" 0 1 (fontified t)) . -17241) (undo-tree-id9786 . -1) (undo-tree-id9787 . -1) (undo-tree-id9788 . -1) (undo-tree-id9789 . -1) (undo-tree-id9790 . -1) (undo-tree-id9791 . -1) (undo-tree-id9792 . -1) (undo-tree-id9793 . -1) (undo-tree-id9794 . -1) (undo-tree-id9795 . -1) (undo-tree-id9796 . -1) (undo-tree-id9797 . -1) (undo-tree-id9798 . -1) (undo-tree-id9799 . -1) (undo-tree-id9800 . -1) (undo-tree-id9801 . -1) (undo-tree-id9802 . -1) (undo-tree-id9803 . -1) (undo-tree-id9804 . -1) (undo-tree-id9805 . -1) (undo-tree-id9806 . -1) (undo-tree-id9807 . -1) (undo-tree-id9808 . -1) (undo-tree-id9809 . -1) (undo-tree-id9810 . -1) (undo-tree-id9811 . -1) (undo-tree-id9812 . -1) (undo-tree-id9813 . -1) (undo-tree-id9814 . -1) (undo-tree-id9815 . -1) (undo-tree-id9816 . -1) (undo-tree-id9817 . -1) (undo-tree-id9818 . -1) (undo-tree-id9819 . -1) (#("t" 0 1 (fontified t)) . -17242) (undo-tree-id9820 . -1) (undo-tree-id9821 . -1) (undo-tree-id9822 . -1) (undo-tree-id9823 . -1) (undo-tree-id9824 . -1) (undo-tree-id9825 . -1) (undo-tree-id9826 . -1) (undo-tree-id9827 . -1) (undo-tree-id9828 . -1) (undo-tree-id9829 . -1) (undo-tree-id9830 . -1) (undo-tree-id9831 . -1) (undo-tree-id9832 . -1) (undo-tree-id9833 . -1) (undo-tree-id9834 . -1) (undo-tree-id9835 . -1) (undo-tree-id9836 . -1) (undo-tree-id9837 . -1) (undo-tree-id9838 . -1) (undo-tree-id9839 . -1) (undo-tree-id9840 . -1) (undo-tree-id9841 . -1) (undo-tree-id9842 . -1) (undo-tree-id9843 . -1) (undo-tree-id9844 . -1) (undo-tree-id9845 . -1) (undo-tree-id9846 . -1) (undo-tree-id9847 . -1) (undo-tree-id9848 . -1) (undo-tree-id9849 . -1) (undo-tree-id9850 . -1) (undo-tree-id9851 . -1) (undo-tree-id9852 . -1) (#("(" 0 1 (fontified t)) . -17243) (undo-tree-id9853 . -1) (undo-tree-id9854 . -1) (undo-tree-id9855 . -1) (undo-tree-id9856 . -1) (undo-tree-id9857 . -1) (undo-tree-id9858 . -1) (undo-tree-id9859 . -1) (undo-tree-id9860 . -1) (undo-tree-id9861 . -1) (undo-tree-id9862 . -1) (undo-tree-id9863 . -1) (undo-tree-id9864 . -1) (undo-tree-id9865 . -1) (undo-tree-id9866 . -1) (undo-tree-id9867 . -1) (undo-tree-id9868 . -1) (undo-tree-id9869 . -1) (undo-tree-id9870 . -1) (undo-tree-id9871 . -1) (undo-tree-id9872 . -1) (undo-tree-id9873 . -1) (undo-tree-id9874 . -1) (undo-tree-id9875 . -1) (undo-tree-id9876 . -1) (undo-tree-id9877 . -1) (undo-tree-id9878 . -1) (undo-tree-id9879 . -1) (undo-tree-id9880 . -1) (undo-tree-id9881 . -1) (undo-tree-id9882 . -1) (undo-tree-id9883 . -1) (undo-tree-id9884 . -1) (#(")" 0 1 (fontified t)) . -17244) (undo-tree-id9885 . -1) (undo-tree-id9886 . -1) (undo-tree-id9887 . -1) (undo-tree-id9888 . -1) (undo-tree-id9889 . -1) (undo-tree-id9890 . -1) 17245 (t 25968 38953 463283 10000)) ((17224 . 17245)) (25968 38981 754926 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 12070 12073 nil nil nil t #s(yas--exit 12074 nil))) #s(yas--exit 12074 nil) 78 nil #s(yas--field 1 12070 12073 nil nil nil t #s(yas--exit 12074 nil)) nil nil)) (12066 . 12071) (#("Err($1)$0" 0 9 (fontified nil)) . 12066) (12066 . 12075) (#("E" 0 1 (fontified nil)) . 12066) (12066 . 12067) (#("Err(…)" 0 6 (fontified nil)) . -12066) (12066 . 12072) (#("E" 0 1 (face font-lock-type-face fontified t)) . -12066) (undo-tree-id16825 . -1) 12067) nil (25968 47358 757107 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -17394) (undo-tree-id9891 . -1) (undo-tree-id9893 . -1) (undo-tree-id9895 . -1) (undo-tree-id9897 . -1) (undo-tree-id9899 . -1) (undo-tree-id9901 . -1) (undo-tree-id9903 . -1) (undo-tree-id9905 . -1) (undo-tree-id9907 . -1) (undo-tree-id9909 . -1) (undo-tree-id9911 . -1) (undo-tree-id9913 . -1) (undo-tree-id9915 . -1) (#("g" 0 1 (fontified t)) . -17395) (undo-tree-id9917 . -1) (undo-tree-id9919 . -1) (undo-tree-id9921 . -1) (undo-tree-id9923 . -1) (undo-tree-id9925 . -1) (undo-tree-id9927 . -1) (undo-tree-id9929 . -1) (undo-tree-id9931 . -1) (undo-tree-id9933 . -1) (undo-tree-id9935 . -1) (undo-tree-id9937 . -1) (undo-tree-id9939 . -1) (undo-tree-id9941 . -1) (#("e" 0 1 (fontified t)) . -17396) (undo-tree-id9942 . -1) (undo-tree-id9944 . -1) (undo-tree-id9946 . -1) (undo-tree-id9948 . -1) (undo-tree-id9950 . -1) (undo-tree-id9952 . -1) (undo-tree-id9954 . -1) (undo-tree-id9956 . -1) (undo-tree-id9958 . -1) (undo-tree-id9960 . -1) (undo-tree-id9962 . -1) (undo-tree-id9964 . -1) (#("t" 0 1 (fontified t)) . -17397) (undo-tree-id9966 . -1) (undo-tree-id9968 . -1) (undo-tree-id9970 . -1) (undo-tree-id9972 . -1) (undo-tree-id9974 . -1) (undo-tree-id9976 . -1) (undo-tree-id9978 . -1) (undo-tree-id9980 . -1) (undo-tree-id9982 . -1) (undo-tree-id9984 . -1) (undo-tree-id9986 . -1) (#("(" 0 1 (fontified t)) . -17398) (undo-tree-id9987 . -1) (undo-tree-id9989 . -1) (undo-tree-id9991 . -1) (undo-tree-id9993 . -1) (undo-tree-id9995 . -1) (undo-tree-id9997 . -1) (undo-tree-id9999 . -1) (undo-tree-id10001 . -1) (undo-tree-id10003 . -1) (undo-tree-id10005 . -1) (#(")" 0 1 (fontified t)) . -17399) (undo-tree-id10007 . -1) (undo-tree-id10009 . -1) (undo-tree-id10011 . -1) (undo-tree-id10013 . -1) (undo-tree-id10015 . -1) (undo-tree-id10017 . -1) 17400) ((17394 . 17400)) (25968 39120 779232 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -17223) (undo-tree-id8913 . -1) (undo-tree-id8914 . -1) (undo-tree-id8915 . -1) (undo-tree-id8916 . -1) (undo-tree-id8917 . -1) (undo-tree-id8918 . -1) (undo-tree-id8919 . -1) (undo-tree-id8920 . -1) (undo-tree-id8921 . -1) (undo-tree-id8922 . -1) (undo-tree-id8923 . -1) (undo-tree-id8924 . -1) (undo-tree-id8925 . -1) (undo-tree-id8926 . -1) (undo-tree-id8927 . -1) (undo-tree-id8928 . -1) (undo-tree-id8929 . -1) (undo-tree-id8930 . -1) (undo-tree-id8931 . -1) (undo-tree-id8932 . -1) (undo-tree-id8933 . -1) (undo-tree-id8934 . -1) (undo-tree-id8935 . -1) (undo-tree-id8936 . -1) (undo-tree-id8937 . -1) (undo-tree-id8938 . -1) (undo-tree-id8939 . -1) (undo-tree-id8940 . -1) (undo-tree-id8941 . -1) (undo-tree-id8942 . -1) (undo-tree-id8943 . -1) (undo-tree-id8944 . -1) (undo-tree-id8945 . -1) (undo-tree-id8946 . -1) (undo-tree-id8947 . -1) (undo-tree-id8948 . -1) (undo-tree-id8949 . -1) (undo-tree-id8950 . -1) (undo-tree-id8951 . -1) (undo-tree-id8952 . -1) (undo-tree-id8953 . -1) (undo-tree-id8954 . -1) (undo-tree-id8955 . -1) (undo-tree-id8956 . -1) (undo-tree-id8957 . -1) (undo-tree-id8958 . -1) (undo-tree-id8959 . -1) (undo-tree-id8960 . -1) (undo-tree-id8961 . -1) (undo-tree-id8962 . -1) (undo-tree-id8963 . -1) (undo-tree-id8964 . -1) (undo-tree-id8965 . -1) (undo-tree-id8966 . -1) (undo-tree-id8967 . -1) (undo-tree-id8968 . -1) (undo-tree-id8969 . -1) (undo-tree-id8970 . -1) (undo-tree-id8971 . -1) (undo-tree-id8972 . -1) (undo-tree-id8973 . -1) (undo-tree-id8974 . -1) 17224) ((17223 . 17224)) (25968 38981 753652 0) 0 nil])
([nil nil ((12070 . 12073)) nil (25968 47358 757103 0) 0 nil])
([nil nil ((17223 . 17228) (t 25968 38986 826651 90000)) ((#("move " 0 4 (fontified t) 4 5 (fontified t)) . 17223) (undo-tree-id10387 . -5) (undo-tree-id10388 . -5) (undo-tree-id10389 . -5) (undo-tree-id10390 . -5) (undo-tree-id10391 . -5)) (25968 39120 695265 0) 0 nil])
nil
([nil nil ((apply yas--snippet-revive 12066 12074 #s(yas--snippet nil (#s(yas--field 1 12070 12073 nil nil nil t #s(yas--exit 12074 nil))) #s(yas--exit 12074 nil) 78 nil #s(yas--field 1 12070 12073 nil nil nil t #s(yas--exit 12074 nil)) nil nil))) nil (25968 47358 757102 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -17227) (undo-tree-id10292 . -1) (undo-tree-id10293 . -1) (undo-tree-id10294 . -1) (undo-tree-id10295 . -1) 17228) ((17227 . 17228)) (25968 39120 612348 0) 0 nil])
([nil nil ((12074 . 12081)) nil (25968 47358 757101 0) 0 nil])
([nil nil ((17227 . 17229)) ((#("||" 0 2 (fontified t)) . 17227)) (25968 39120 528287 0) 0 nil])
([nil nil ((12078 . 12085) (#("log" 0 3 (fontified nil)) . 12078) (12078 . 12081) (#("logging" 0 7 (fontified nil)) . -12078) (12078 . 12085) (#("log" 0 3 (fontified t)) . -12078) (undo-tree-id16824 . -3) 12081) nil (25968 47358 757100 0) 0 nil])
([nil nil ((17245 . 17246)) ((#("," 0 1 (fontified t)) . 17245) (undo-tree-id10381 . -1) (undo-tree-id10382 . -1) (undo-tree-id10383 . -1) (undo-tree-id10384 . -1) (undo-tree-id10385 . -1) (undo-tree-id10386 . -1)) (25968 39120 444808 0) 0 nil])
([nil nil ((12085 . 12087)) nil (25968 47358 757096 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -17245) (undo-tree-id10287 . -1) (undo-tree-id10288 . -1) (undo-tree-id10289 . -1) (undo-tree-id10290 . -1) (undo-tree-id10291 . -1) 17246) ((17245 . 17246)) (25968 39120 360671 0) 0 nil])
([nil nil ((apply yas--snippet-revive 12087 12093 #s(yas--snippet nil nil #s(yas--exit 12092 nil) 79 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 12092 nil) 79 nil nil nil nil)) (12087 . 12093) (#("log!($0)" 0 8 (fontified nil)) . 12087) (12087 . 12095) (#("log!(…)" 0 7 (fontified nil)) . -12087) (12087 . 12094)) nil (25968 47358 757095 0) 0 nil])
([nil nil ((17245 . 17247)) ((#(".g" 0 1 (fontified t) 1 2 (fontified t)) . 17245) (undo-tree-id10374 . -2) (undo-tree-id10375 . -2) (undo-tree-id10376 . -2) (undo-tree-id10377 . -2) (undo-tree-id10378 . -2) (undo-tree-id10379 . -2) (undo-tree-id10380 . -1)) (25968 39120 278584 0) 0 nil])
([nil nil ((12092 . 12094)) nil (25968 47358 757092 0) 0 nil])
([nil nil ((apply yas--snippet-revive 17246 17251 #s(yas--snippet nil nil #s(yas--exit #<marker at 19485 in component.rs> nil) 58 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 19485 in component.rs> nil) 58 nil nil nil nil)) (17246 . 17251) (#("get()$0" 0 7 (fontified nil)) . 17246) (17246 . 17253) (#("g" 0 1 (fontified nil)) . 17246) (17246 . 17247) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -17246) (17246 . 17266) (#("g" 0 1 (fontified t)) . -17246) (undo-tree-id10282 . -1) (undo-tree-id10283 . -1) (undo-tree-id10284 . -1) (undo-tree-id10285 . -1) (undo-tree-id10286 . -1) 17247) ((17246 . 17247) (#("get() (as SignalGet)" 0 20 (fontified nil)) . 17246) (17246 . 17266) (#("g" 0 1 (fontified nil)) . 17246) (17246 . 17247) (#("get()$0" 0 7 (fontified nil)) . 17246) (17246 . 17253) (#("get()" 0 5 (fontified t)) . 17246) (undo-tree-id10373 . -5)) (25968 39120 195001 0) 0 nil])
([nil nil ((12093 . 12095)) nil (25968 47358 757091 0) 0 nil])
([nil nil ((17390 . 17396)) ((#("move||" 0 6 (fontified t)) . 17390)) (25968 39120 116738 0) 0 nil])
([nil nil ((12094 . 12096)) nil (25968 47358 757090 0) 0 nil])
([nil nil ((17412 . 17414)) ((#(".g" 0 1 (fontified t) 1 2 (fontified t)) . 17412) (undo-tree-id10332 . -2) (undo-tree-id10333 . -2) (undo-tree-id10334 . -2) (undo-tree-id10335 . -2) (undo-tree-id10336 . -1) (undo-tree-id10337 . -1) (undo-tree-id10338 . -1) (undo-tree-id10339 . -1) (undo-tree-id10340 . -1) (undo-tree-id10341 . -1) (undo-tree-id10342 . -1) (undo-tree-id10343 . -1) (undo-tree-id10344 . -1) (undo-tree-id10345 . -1) (undo-tree-id10346 . -1) (undo-tree-id10347 . -1) (undo-tree-id10348 . -1) (undo-tree-id10349 . -1) (undo-tree-id10350 . -1) (undo-tree-id10351 . -1) (undo-tree-id10352 . -1) (undo-tree-id10353 . -1) (undo-tree-id10354 . -1) (undo-tree-id10355 . -1) (undo-tree-id10356 . -1) (undo-tree-id10357 . -1) (undo-tree-id10358 . -1) (undo-tree-id10359 . -1) (undo-tree-id10360 . -1) (undo-tree-id10361 . -1) (undo-tree-id10362 . -1) (undo-tree-id10363 . -1) (undo-tree-id10364 . -1) (undo-tree-id10365 . -1) (undo-tree-id10366 . -1) (undo-tree-id10367 . -1) (undo-tree-id10368 . -1) (undo-tree-id10369 . -1) (undo-tree-id10370 . -1) (undo-tree-id10371 . -1) (undo-tree-id10372 . -2)) (25968 39119 619764 0) 0 nil])
([nil nil ((12098 . 12099)) nil (25968 47358 757089 0) 0 nil])
([nil nil ((apply yas--snippet-revive 17413 17418 #s(yas--snippet nil nil #s(yas--exit #<marker at 19635 in component.rs> nil) 59 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 19635 in component.rs> nil) 59 nil nil nil nil)) (17413 . 17418) (#("get()$0" 0 7 (fontified nil)) . 17413) (17413 . 17420) (#("g" 0 1 (fontified nil)) . 17413) (17413 . 17414) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -17413) (17413 . 17433) (#("g" 0 1 (fontified t)) . -17413) (undo-tree-id10279 . -1) (undo-tree-id10280 . -1) (undo-tree-id10281 . -1) 17414) ((17413 . 17414) (#("get() (as SignalGet)" 0 20 (fontified nil)) . 17413) (17413 . 17433) (#("g" 0 1 (fontified nil)) . 17413) (17413 . 17414) (#("get()$0" 0 7 (fontified nil)) . 17413) (17413 . 17420) (#("get()" 0 5 (fontified t)) . 17413) (undo-tree-id10296 . -5) (undo-tree-id10297 . -5) (undo-tree-id10298 . -5) (undo-tree-id10299 . -5) (undo-tree-id10300 . -5) (undo-tree-id10301 . -5) (undo-tree-id10302 . -5) (undo-tree-id10303 . -5) (undo-tree-id10304 . -5) (undo-tree-id10305 . -5) (undo-tree-id10306 . -5) (undo-tree-id10307 . -5) (undo-tree-id10308 . -5) (undo-tree-id10309 . -5) (undo-tree-id10310 . -5) (undo-tree-id10311 . -5) (undo-tree-id10312 . -5) (undo-tree-id10313 . -5) (undo-tree-id10314 . -5) (undo-tree-id10315 . -5) (undo-tree-id10316 . -5) (undo-tree-id10317 . -5) (undo-tree-id10318 . -5) (undo-tree-id10319 . -5) (undo-tree-id10320 . -5) (undo-tree-id10321 . -5) (undo-tree-id10322 . -5) (undo-tree-id10323 . -5) (undo-tree-id10324 . -5) (undo-tree-id10325 . -5) (undo-tree-id10326 . -5) (undo-tree-id10327 . -5) (undo-tree-id10328 . -5) (undo-tree-id10329 . -5) (undo-tree-id10330 . -5) (undo-tree-id10331 . -5) (t 25968 39003 57141 10000)) (25968 39003 29429 0) 0 nil])
([nil nil ((12099 . 12100)) nil (25968 47358 757088 0) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . -12099) (undo-tree-id16822 . -1) (undo-tree-id16823 . -1) 12100) nil (25968 47358 757087 0) 0 nil])
([nil nil ((12099 . 12103)) nil (25968 47358 757083 0) 0 nil])
([nil nil ((12104 . 12105)) nil (25968 47358 757082 0) 0 nil])
([nil nil ((12105 . 12112)) nil (25968 47358 757081 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -12104) (undo-tree-id16749 . -1) (undo-tree-id16750 . -1) (undo-tree-id16751 . -1) (undo-tree-id16752 . -1) (undo-tree-id16753 . -1) (undo-tree-id16754 . -1) (undo-tree-id16755 . -1) (undo-tree-id16756 . -1) (undo-tree-id16757 . -1) (undo-tree-id16758 . -1) (undo-tree-id16759 . -1) (undo-tree-id16760 . -1) (undo-tree-id16761 . -1) (undo-tree-id16762 . -1) (undo-tree-id16763 . -1) (undo-tree-id16764 . -1) (undo-tree-id16765 . -1) (undo-tree-id16766 . -1) (undo-tree-id16767 . -1) (undo-tree-id16768 . -1) (undo-tree-id16769 . -1) (undo-tree-id16770 . -1) (#("
" 0 1 (fontified t)) . -12105) (undo-tree-id16771 . -1) (undo-tree-id16772 . -1) (undo-tree-id16773 . 1) (undo-tree-id16774 . -1) (undo-tree-id16775 . -1) (undo-tree-id16776 . -1) (undo-tree-id16777 . -1) (undo-tree-id16778 . -1) (undo-tree-id16779 . -1) (undo-tree-id16780 . -1) (undo-tree-id16781 . -1) (undo-tree-id16782 . -1) (#("	" 0 1 (fontified t)) . -12106) (undo-tree-id16783 . -1) (undo-tree-id16784 . -1) (undo-tree-id16785 . -1) (undo-tree-id16786 . -1) (undo-tree-id16787 . -1) (undo-tree-id16788 . -1) (undo-tree-id16789 . -1) (undo-tree-id16790 . -1) (undo-tree-id16791 . -1) (#("	" 0 1 (fontified t)) . -12107) (undo-tree-id16792 . -1) (undo-tree-id16793 . -1) (undo-tree-id16794 . -1) (undo-tree-id16795 . -1) (undo-tree-id16796 . -1) (undo-tree-id16797 . -1) (undo-tree-id16798 . -1) (undo-tree-id16799 . -1) (#(" " 0 1 (fontified t)) . -12108) (undo-tree-id16800 . -1) (undo-tree-id16801 . -1) (undo-tree-id16802 . -1) (undo-tree-id16803 . -1) (undo-tree-id16804 . -1) (undo-tree-id16805 . -1) (undo-tree-id16806 . -1) (#(" " 0 1 (fontified t)) . -12109) (undo-tree-id16807 . -1) (undo-tree-id16808 . -1) (undo-tree-id16809 . -1) (undo-tree-id16810 . -1) (undo-tree-id16811 . -1) (undo-tree-id16812 . -1) (#(" " 0 1 (fontified t)) . -12110) (undo-tree-id16813 . -1) (undo-tree-id16814 . -1) (undo-tree-id16815 . -1) (undo-tree-id16816 . -1) (undo-tree-id16817 . -1) (#(" " 0 1 (fontified t)) . -12111) (undo-tree-id16818 . -1) (undo-tree-id16819 . -1) (undo-tree-id16820 . -1) (undo-tree-id16821 . -1) 12112) nil (25968 47358 757076 0) 0 nil])
([nil nil ((12104 . 12105)) nil (25968 47358 757000 0) 0 nil])
([nil nil ((12105 . 12112)) nil (25968 47358 756999 0) 0 nil])
([nil nil ((12112 . 12115)) nil (25968 47358 756998 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -12114) (undo-tree-id16740 . -1) (undo-tree-id16741 . -1) (undo-tree-id16742 . -1) (undo-tree-id16743 . -1) (undo-tree-id16744 . -1) (undo-tree-id16745 . -1) (undo-tree-id16746 . -1) (undo-tree-id16747 . -1) (undo-tree-id16748 . -1) 12115) nil (25968 47358 756997 0) 0 nil])
([nil nil ((12114 . 12115)) nil (25968 47358 756985 0) 0 nil])
([nil nil ((12115 . 12119)) nil (25968 47358 756984 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -12114) (undo-tree-id16731 . -1) (undo-tree-id16732 . -1) (undo-tree-id16733 . -1) (undo-tree-id16734 . -1) (undo-tree-id16735 . -1) (undo-tree-id16736 . -1) (undo-tree-id16737 . -1) (undo-tree-id16738 . -1) (undo-tree-id16739 . -1) 12115) nil (25968 47358 756982 0) 0 nil])
([nil nil ((12114 . 12115)) nil (25968 47358 756965 0) 0 nil])
([nil nil ((12119 . 12120)) nil (25968 47358 756961 0) 0 nil])
([nil nil ((11930 . 11933) (t 25968 47358 795786 779000)) nil (25968 47500 695901 0) 0 nil])
([nil nil ((11933 . 11937)) nil (25968 47500 695900 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -11936) (undo-tree-id16958 . -1) (undo-tree-id16959 . -1) 11937) nil (25968 47500 695899 0) 0 nil])
([nil nil ((11936 . 11938)) nil (25968 47500 695895 0) 0 nil])
([nil nil ((11936 . 11942) (#("de" 0 2 (fontified nil)) . 11936) (11936 . 11938) (#("device" 0 6 (fontified nil)) . -11936) (11936 . 11942) (#("de" 0 2 (fontified t)) . -11936) (undo-tree-id16956 . -2) (undo-tree-id16957 . -2) 11938) nil (25968 47500 695894 0) 0 nil])
([nil nil ((11942 . 11945)) nil (25968 47500 695889 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -11943) (undo-tree-id16953 . -1) (undo-tree-id16954 . -1) (#("s" 0 1 (fontified t)) . -11944) (undo-tree-id16955 . -1) 11945) nil (25968 47500 695888 0) 0 nil])
([nil nil ((11943 . 11945)) nil (25968 47500 695883 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -11943) (undo-tree-id16951 . -1) (#("[" 0 1 (fontified t)) . -11944) (undo-tree-id16952 . -1) 11945) nil (25968 47500 695882 0) 0 nil])
([nil nil ((11943 . 11947)) nil (25968 47500 695878 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11943 11951 #s(yas--snippet nil nil #s(yas--exit 11951 nil) 80 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11951 nil) 80 nil nil nil nil)) (11943 . 11951) (#("opened()$0" 0 10 (fontified nil)) . 11943) (11943 . 11953) (#("open" 0 4 (fontified nil)) . 11943) (11943 . 11947) (#("opened()" 0 8 (fontified nil)) . -11943) (11943 . 11951) (#("open" 0 4 (fontified t)) . -11943) (undo-tree-id16940 . -4) (undo-tree-id16941 . -2) (undo-tree-id16942 . -2) (undo-tree-id16943 . -2) (undo-tree-id16944 . -2) (undo-tree-id16945 . -3) (undo-tree-id16946 . -3) (undo-tree-id16947 . -4) (undo-tree-id16948 . -4) (undo-tree-id16949 . -4) (undo-tree-id16950 . -4) 11947) nil (25968 47500 695876 0) 0 nil])
([nil nil ((11951 . 11953)) nil (25968 47500 695861 0) 0 nil])
([nil nil ((12211 . 12217) (12150 . 12154) (12206 . 12207)) nil (25968 47500 695860 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -12213) (undo-tree-id16930 . -4) (undo-tree-id16931 . -4) (undo-tree-id16932 . -4) (undo-tree-id16933 . -4) (undo-tree-id16934 . -4) (undo-tree-id16935 . -4) (undo-tree-id16936 . -4) (undo-tree-id16937 . -4) (undo-tree-id16938 . -4) (undo-tree-id16939 . -4) (12217 . 12218)) nil (25968 47500 695858 0) 0 nil])
([nil nil ((12148 . 12152) (12136 . 12137) (#("    " 0 4 (fontified t)) . 12136) (12093 . 12094) (#("    " 0 4 (fontified t)) . 12093) (12075 . 12079) (11956 . 11960) 11953) nil (25968 47500 695846 0) 0 nil])
([nil nil ((12220 . 12228)) nil (25968 47500 695843 0) 0 nil])
([nil nil ((12228 . 12231)) nil (25968 47500 695842 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -12228) (undo-tree-id16904 . -1) (undo-tree-id16905 . 1) (undo-tree-id16906 . -1) (undo-tree-id16907 . -1) (undo-tree-id16908 . -1) (undo-tree-id16909 . -1) (undo-tree-id16910 . -1) (undo-tree-id16911 . -1) (undo-tree-id16912 . -1) (undo-tree-id16913 . -1) (undo-tree-id16914 . -1) (#("	" 0 1 (fontified t)) . -12229) (undo-tree-id16915 . -1) (undo-tree-id16916 . -1) (undo-tree-id16917 . -1) (undo-tree-id16918 . -1) (undo-tree-id16919 . -1) (undo-tree-id16920 . -1) (undo-tree-id16921 . -1) (undo-tree-id16922 . -1) (#("	" 0 1 (fontified t)) . -12230) (undo-tree-id16923 . -1) (undo-tree-id16924 . -1) (undo-tree-id16925 . -1) (undo-tree-id16926 . -1) (undo-tree-id16927 . -1) (undo-tree-id16928 . -1) (undo-tree-id16929 . -1) 12231) nil (25968 47500 695839 0) 0 nil])
([nil nil ((12229 . 12231) (#("		    " 0 6 (fontified nil)) . 12228) (undo-tree-id16901 . -2) (undo-tree-id16902 . -2) (undo-tree-id16903 . -2) (12230 . 12234) (12227 . 12231)) nil (25968 47500 695812 0) 0 nil])
([nil nil ((12228 . 12234)) nil (25968 47500 695807 0) 0 nil])
([nil nil ((12234 . 12238)) nil (25968 47500 695806 0) 0 nil])
([nil nil ((12234 . 12241) (#("logg" 0 4 (fontified nil)) . 12234) (12234 . 12238) (#("logging" 0 7 (fontified nil)) . -12234) (12234 . 12241) (#("logg" 0 4 (fontified t)) . -12234) (undo-tree-id16889 . -4) (undo-tree-id16890 . -1) (undo-tree-id16891 . -2) (undo-tree-id16892 . -2) (undo-tree-id16893 . -3) (undo-tree-id16894 . -3) (undo-tree-id16895 . -3) (undo-tree-id16896 . -3) (undo-tree-id16897 . -4) (undo-tree-id16898 . -4) (undo-tree-id16899 . -4) (undo-tree-id16900 . -4) 12238) nil (25968 47500 695804 0) 0 nil])
([nil nil ((12241 . 12244)) nil (25968 47500 695786 0) 0 nil])
([nil nil ((apply yas--snippet-revive 12243 12249 #s(yas--snippet nil nil #s(yas--exit 12248 nil) 81 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 12248 nil) 81 nil nil nil nil)) (12243 . 12249) (#("log!($0)" 0 8 (fontified nil)) . 12243) (12243 . 12251) (#("l" 0 1 (fontified nil)) . 12243) (12243 . 12244) (#("log!(…)" 0 7 (fontified nil)) . -12243) (12243 . 12250) (#("l" 0 1 (fontified t)) . -12243) (undo-tree-id16884 . -1) (undo-tree-id16885 . -1) (undo-tree-id16886 . -1) (undo-tree-id16887 . -1) (undo-tree-id16888 . -1) 12244) nil (25968 47500 695784 0) 0 nil])
([nil nil ((12248 . 12249)) nil (25968 47500 695775 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -12248) (undo-tree-id16879 . -1) (undo-tree-id16880 . -1) (undo-tree-id16881 . -1) (undo-tree-id16882 . -1) (undo-tree-id16883 . -1) 12249) nil (25968 47500 695774 0) 0 nil])
([nil nil ((12248 . 12250)) nil (25968 47500 695768 0) 0 nil])
([nil nil ((12249 . 12252)) nil (25968 47500 695767 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-string-face fontified t)) . -12249) (undo-tree-id16857 . -1) (undo-tree-id16858 . -1) (undo-tree-id16859 . -1) (undo-tree-id16860 . -1) (undo-tree-id16861 . -1) (undo-tree-id16862 . -1) (undo-tree-id16863 . -1) (undo-tree-id16864 . -1) (undo-tree-id16865 . -1) (undo-tree-id16866 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -12250) (undo-tree-id16867 . -1) (undo-tree-id16868 . -1) (undo-tree-id16869 . -1) (undo-tree-id16870 . -1) (undo-tree-id16871 . -1) (undo-tree-id16872 . -1) (undo-tree-id16873 . -1) (undo-tree-id16874 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -12251) (undo-tree-id16875 . -1) (undo-tree-id16876 . -1) (undo-tree-id16877 . -1) (undo-tree-id16878 . -1) 12252) nil (25968 47500 695764 0) 0 nil])
([nil nil ((12249 . 12251)) nil (25968 47500 695740 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-string-face fontified t)) . -12249) (undo-tree-id16851 . -1) (undo-tree-id16852 . -1) (undo-tree-id16853 . -1) (undo-tree-id16854 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -12250) (undo-tree-id16855 . -1) (undo-tree-id16856 . -1) 12251) nil (25968 47500 695739 0) 0 nil])
([nil nil ((12249 . 12251)) nil (25968 47500 695731 0) 0 nil])
([nil nil ((12251 . 12267)) nil (25968 47500 695730 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . -12265) (undo-tree-id16841 . -1) (undo-tree-id16842 . -1) (undo-tree-id16843 . -1) (undo-tree-id16844 . -1) (undo-tree-id16845 . -1) (undo-tree-id16846 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -12266) (undo-tree-id16847 . -1) (undo-tree-id16848 . -1) (undo-tree-id16849 . -1) (undo-tree-id16850 . -1) 12267) nil (25968 47500 695728 0) 0 nil])
([nil nil ((12265 . 12268)) nil (25968 47500 695709 0) 0 nil])
([nil nil ((12270 . 12271)) nil (25968 47500 695704 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -10788) (undo-tree-id16960 . -1) (undo-tree-id16961 . -1) (undo-tree-id16962 . -1) (undo-tree-id16963 . -1) (undo-tree-id16964 . -1) (undo-tree-id16965 . -1) (undo-tree-id16966 . -1) (undo-tree-id16967 . -1) (undo-tree-id16968 . -1) (undo-tree-id16969 . -1) (undo-tree-id16970 . -1) (undo-tree-id16971 . -1) (undo-tree-id16972 . -1) (undo-tree-id16973 . -1) (undo-tree-id16974 . -1) (undo-tree-id16975 . -1) (undo-tree-id16976 . -1) (undo-tree-id16977 . -1) (undo-tree-id16978 . -1) (undo-tree-id16979 . -1) (undo-tree-id16980 . -1) 10789 (t 25968 47500 735024 994000)) nil (25968 47557 254669 0) 0 nil])
([nil nil ((10788 . 10789)) nil (25968 47557 254636 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -10788) (undo-tree-id16981 . -1) (undo-tree-id16982 . -1) (undo-tree-id16983 . -1) (undo-tree-id16984 . -1) (undo-tree-id16985 . -1) (undo-tree-id16986 . -1) (undo-tree-id16987 . -1) (undo-tree-id16988 . -1) (undo-tree-id16989 . -1) (undo-tree-id16990 . -1) (undo-tree-id16991 . -1) (undo-tree-id16992 . -1) (undo-tree-id16993 . -1) (undo-tree-id16994 . -1) (undo-tree-id16995 . -1) (undo-tree-id16996 . -1) (undo-tree-id16997 . -1) (undo-tree-id16998 . -1) (undo-tree-id16999 . -1) (undo-tree-id17000 . -1) (undo-tree-id17001 . -1) (undo-tree-id17002 . -1) (undo-tree-id17003 . -1) (undo-tree-id17004 . -1) (undo-tree-id17005 . -1) (undo-tree-id17006 . -1) (undo-tree-id17007 . -1) (undo-tree-id17008 . -1) (undo-tree-id17009 . -1) (undo-tree-id17010 . -1) 10789 (t 25968 47557 294048 311000)) nil (25968 47564 94378 0) 0 nil])
([nil nil ((10788 . 10789)) nil (25968 47564 94336 0) 0 nil])
([nil nil ((10722 . 10729) (t 25968 47564 134428 28000)) nil (25968 47916 76727 0) 0 nil])
([nil nil ((10751 . 10758)) nil (25968 47916 76726 0) 0 nil])
([nil nil ((10781 . 10788)) nil (25968 47916 76725 0) 0 nil])
([nil nil ((10813 . 10819) (#(" " 0 1 (fontified nil)) . 10812) (undo-tree-id17011 . -1) (undo-tree-id17012 . -1) (undo-tree-id17013 . -1) (undo-tree-id17014 . -1) (undo-tree-id17015 . -1) (undo-tree-id17016 . -1) (undo-tree-id17017 . -1) (undo-tree-id17018 . -1) (undo-tree-id17019 . -1) (10813 . 10814)) nil (25968 47916 76977 0) 0 nil])
([nil nil ((10832 . 10835)) nil (25968 47931 531891 0) 0 nil] [nil nil ((10832 . 10835)) ((#("
		" 0 3 (fontified t)) . 10832)) (25968 47916 76701 0) 0 nil])
([nil nil ((apply -6 10782 10839 undo--wrap-and-run-primitive-undo 10782 10839 ((10822 . 10825) (10788 . 10791) 10782))) nil (25968 47931 531890 0) 0 nil])
nil
([nil nil ((10838 . 10845)) nil (25968 47931 531889 0) 0 nil])
([nil nil ((10845 . 10846)) nil (25968 47931 531888 0) 0 nil])
([nil nil ((10845 . 10855) (#("u" 0 1 (fontified nil)) . 10845) (10845 . 10846) (#("usage_page" 0 10 (fontified nil)) . -10845) (10845 . 10855) (#("u" 0 1 (fontified t)) . -10845) (undo-tree-id17040 . -1) (undo-tree-id17041 . -1) (undo-tree-id17042 . -1) (undo-tree-id17043 . -1) 10846) nil (25968 47931 531886 0) 0 nil])
([nil nil ((10855 . 10858)) nil (25968 47931 531880 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10857 10861 #s(yas--snippet nil nil #s(yas--exit 10861 nil) 82 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10861 nil) 82 nil nil nil nil)) (10857 . 10861) (#("None$0" 0 6 (fontified nil)) . 10857) (10857 . 10863) (#("N" 0 1 (fontified nil)) . 10857) (10857 . 10858) (#("None" 0 4 (fontified nil)) . -10857) (10857 . 10861) (#("N" 0 1 (face font-lock-type-face fontified t)) . -10857) (undo-tree-id17036 . -1) (undo-tree-id17037 . -1) (undo-tree-id17038 . -1) (undo-tree-id17039 . -1) 10858) nil (25968 47931 531878 0) 0 nil])
([nil nil ((10861 . 10862)) nil (25968 47931 531870 0) 0 nil])
([nil nil ((10862 . 10869)) nil (25968 47931 531869 0) 0 nil])
([nil nil ((10869 . 10871)) nil (25968 47931 531868 0) 0 nil])
([nil nil ((10869 . 10874) (#("us" 0 2 (fontified nil)) . 10869) (10869 . 10871) (#("usage" 0 5 (fontified nil)) . -10869) (10869 . 10874) (#("us" 0 2 (fontified t)) . -10869) (undo-tree-id17027 . -2) (undo-tree-id17028 . -2) (undo-tree-id17029 . -1) (undo-tree-id17030 . -1) (undo-tree-id17031 . -1) (undo-tree-id17032 . -2) (undo-tree-id17033 . -2) (undo-tree-id17034 . -2) (undo-tree-id17035 . -2) 10871) nil (25968 47931 531866 0) 0 nil])
([nil nil ((10874 . 10877)) nil (25968 47931 531854 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10876 10880 #s(yas--snippet nil nil #s(yas--exit 10880 nil) 83 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10880 nil) 83 nil nil nil nil)) (10876 . 10880) (#("None$0" 0 6 (fontified nil)) . 10876) (10876 . 10882) (#("N" 0 1 (fontified nil)) . 10876) (10876 . 10877) (#("None" 0 4 (fontified nil)) . -10876) (10876 . 10880) (#("N" 0 1 (face font-lock-type-face fontified t)) . -10876) (undo-tree-id17020 . -1) (undo-tree-id17021 . -1) (undo-tree-id17022 . -1) (undo-tree-id17023 . -1) (undo-tree-id17024 . -1) (undo-tree-id17025 . -1) (undo-tree-id17026 . -1) 10877) nil (25968 47931 531849 0) 0 nil])
([nil nil ((10880 . 10881) (t 25968 47931 571448 207000)) nil (25968 47932 791405 0) 0 nil])
([nil nil ((12233 . 12235) (t 25968 47932 832527 590000)) nil (25968 47962 597186 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -11157) (undo-tree-id17044 . -1) (undo-tree-id17045 . -1) (undo-tree-id17046 . -1) (undo-tree-id17047 . -1) 11158 (t 25968 47962 636987 361000)) nil (25968 48037 382427 0) 0 nil])
([nil nil ((11157 . 11158)) nil (25968 48037 382410 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -11157) (undo-tree-id17048 . -1) (undo-tree-id17049 . -1) (undo-tree-id17050 . -1) (undo-tree-id17051 . -1) (undo-tree-id17052 . -1) (undo-tree-id17053 . -1) (undo-tree-id17054 . -1) (undo-tree-id17055 . -1) (undo-tree-id17056 . -1) (undo-tree-id17057 . -1) (undo-tree-id17058 . -1) (undo-tree-id17059 . -1) (undo-tree-id17060 . -1) (undo-tree-id17061 . -1) (undo-tree-id17062 . -1) (undo-tree-id17063 . -1) (undo-tree-id17064 . -1) (undo-tree-id17065 . -1) (undo-tree-id17066 . -1) (undo-tree-id17067 . -1) (undo-tree-id17068 . -1) (undo-tree-id17069 . -1) (undo-tree-id17070 . -1) (undo-tree-id17071 . -1) (undo-tree-id17072 . -1) (undo-tree-id17073 . -1) (undo-tree-id17074 . -1) (undo-tree-id17075 . -1) (undo-tree-id17076 . -1) (undo-tree-id17077 . -1) (undo-tree-id17078 . -1) (undo-tree-id17079 . -1) (undo-tree-id17080 . -1) (undo-tree-id17081 . -1) (undo-tree-id17082 . -1) (undo-tree-id17083 . -1) (undo-tree-id17084 . -1) (undo-tree-id17085 . -1) (undo-tree-id17086 . -1) (undo-tree-id17087 . -1) 11158 (t 25968 48037 422101 395000)) nil (25968 48065 729078 0) 0 nil])
([nil nil ((11157 . 11158)) nil (25968 48065 729026 0) 0 nil])
([nil nil ((apply -6 10839 10888 undo--wrap-and-run-primitive-undo 10839 10888 ((10872 . 10875) (10845 . 10848) 10839))) nil (25968 48075 83561 0) 0 nil])
([nil nil ((apply 6 10782 10832 undo--wrap-and-run-primitive-undo 10782 10832 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -10819) (#<marker at 10757 in component.rs> . -2) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -10788) 10782))) nil (25968 48079 329609 0) 0 nil] [nil nil ((apply -6 10782 10845 undo--wrap-and-run-primitive-undo 10782 10845 ((10825 . 10828) (10788 . 10791) 10782))) ((apply 6 10782 10839 undo--wrap-and-run-primitive-undo 10782 10839 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 10788) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 10825) 10782))) (25968 48075 83231 0) 0 nil])
([nil nil ((10832 . 10833)) nil (25968 48079 329604 0) 0 nil])
nil
([nil nil ((11934 . 11936) (t 25968 48079 370578 945000)) nil (25968 48391 258204 0) 0 nil])
([nil nil ((9973 . 9978) (t 25968 50361 259118 543000)) nil (25968 50958 136039 0) 0 nil])
([nil nil ((9978 . 9985)) nil (25968 50958 136038 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -9983) (undo-tree-id17098 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -9984) (undo-tree-id17099 . -1) 9985) nil (25968 50958 136037 0) 0 nil])
([nil nil ((9983 . 9995)) nil (25968 50958 136033 0) 0 nil])
([nil nil ((apply yas--snippet-revive 9992 10005 #s(yas--snippet nil nil #s(yas--exit 10005 nil) 84 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10005 nil) 84 nil nil nil nil)) (9992 . 10005) (#("use_context()$0" 0 15 (fontified nil)) . 9992) (9992 . 10007) (#("use" 0 3 (fontified nil)) . 9992) (9992 . 9995) (#("use_context()" 0 13 (fontified nil)) . -9992) (9992 . 10005) (#("use" 0 3 (face font-lock-keyword-face fontified t)) . -9992) (undo-tree-id17097 . -3) 9995) nil (25968 50958 136031 0) 0 nil])
([nil nil ((10005 . 10007)) nil (25968 50958 136027 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -10005) (undo-tree-id17095 . -1) (#(":" 0 1 (fontified t)) . -10006) (undo-tree-id17096 . -1) 10007) nil (25968 50958 136025 0) 0 nil])
([nil nil ((10003 . 10005)) nil (25968 50958 136022 0) 0 nil])
([nil nil ((10005 . 10007)) nil (25968 50958 136021 0) 0 nil])
([nil nil ((10006 . 10008)) nil (25968 50958 136020 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10006 10016 #s(yas--snippet nil nil #s(yas--exit 10015 nil) 85 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10015 nil) 85 nil nil nil nil)) (10006 . 10016) (#("RwSignal<$0>" 0 12 (fontified nil)) . 10006) (10006 . 10018) (#("Rw" 0 2 (fontified nil)) . 10006) (10006 . 10008) (#("RwSignal<…>" 0 11 (fontified nil)) . -10006) (10006 . 10017) (#("Rw" 0 2 (face font-lock-type-face fontified t)) . -10006) (undo-tree-id17094 . -2) 10008) nil (25968 50958 136018 0) 0 nil])
([nil nil ((10015 . 10016)) nil (25968 50958 136013 0) 0 nil])
([nil nil ((10015 . 10022) (#("U" 0 1 (fontified nil)) . 10015) (10015 . 10016) (#("UiState" 0 7 (fontified nil)) . -10015) (10015 . 10022) (#("U" 0 1 (face font-lock-type-face fontified t)) . -10015) (undo-tree-id17092 . -1) (undo-tree-id17093 . -1) 10016) nil (25968 50958 136012 0) 0 nil])
([nil nil ((10026 . 10028)) nil (25968 50958 136007 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -10026) (undo-tree-id17090 . -1) (#("u" 0 1 (fontified t)) . -10027) (undo-tree-id17091 . -1) 10028) nil (25968 50958 136005 0) 0 nil])
([nil nil ((10026 . 10027)) nil (25968 50958 135994 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -10026) (undo-tree-id17089 . -1) 10027) nil (25968 50958 135993 0) 0 nil])
([nil nil ((10026 . 10028)) nil (25968 50958 135990 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10027 10035 #s(yas--snippet nil nil #s(yas--exit 10035 nil) 86 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10035 nil) 86 nil nil nil nil)) (10027 . 10035) (#("unwrap()$0" 0 10 (fontified nil)) . 10027) (10027 . 10037) (#("u" 0 1 (fontified nil)) . 10027) (10027 . 10028) (#("unwrap()" 0 8 (fontified nil)) . -10027) (10027 . 10035) (#("u" 0 1 (fontified t)) . -10027) (undo-tree-id17088 . -1) 10028) nil (25968 50958 135988 0) 0 nil])
([nil nil ((10035 . 10036)) nil (25968 50958 135958 0) 0 nil])
([nil nil ((10570 . 10576) (t 25968 50958 177100 595000)) nil (25968 51094 189413 0) 0 nil])
([nil nil ((10576 . 10581)) nil (25968 51094 189411 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -10580) (undo-tree-id17145 . -1) (undo-tree-id17146 . -1) (undo-tree-id17147 . -1) (undo-tree-id17148 . -1) (undo-tree-id17149 . -1) 10581) nil (25968 51094 189410 0) 0 nil])
([nil nil ((10579 . 10586) (#("u" 0 1 (fontified nil)) . 10579) (10579 . 10580) (#("uistate" 0 7 (fontified nil)) . -10579) (10579 . 10586) (#("u" 0 1 (fontified t)) . -10579) (undo-tree-id17131 . -1) (undo-tree-id17132 . -1) (undo-tree-id17133 . -1) (undo-tree-id17134 . -1) (undo-tree-id17135 . -1) (undo-tree-id17136 . -1) (undo-tree-id17137 . -1) (undo-tree-id17138 . -1) (undo-tree-id17139 . -1) (undo-tree-id17140 . -1) (undo-tree-id17141 . -1) (undo-tree-id17142 . -1) (undo-tree-id17143 . -1) (undo-tree-id17144 . -1) 10580) nil (25968 51094 189403 0) 0 nil])
([nil nil ((10586 . 10589)) nil (25968 51094 189386 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10587 10592 #s(yas--snippet nil nil #s(yas--exit 10592 nil) 89 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10592 nil) 89 nil nil nil nil)) (10587 . 10592) (#("get()$0" 0 7 (fontified nil)) . 10587) (10587 . 10594) (#("ge" 0 2 (fontified nil)) . 10587) (10587 . 10589) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -10587) (10587 . 10607) (#("ge" 0 2 (fontified t)) . -10587) (undo-tree-id17126 . -2) (undo-tree-id17127 . -1) (undo-tree-id17128 . -1) (undo-tree-id17129 . -2) (undo-tree-id17130 . -2) 10589) nil (25968 51094 189384 0) 0 nil])
([nil nil ((10592 . 10594)) nil (25968 51094 189376 0) 0 nil])
([nil nil ((10593 . 10603) (#("h" 0 1 (fontified nil)) . 10593) (10593 . 10594) (#("hid_device" 0 10 (fontified nil)) . -10593) (10593 . 10603) (#("h" 0 1 (fontified t)) . -10593) (undo-tree-id17121 . -1) (undo-tree-id17122 . -1) (undo-tree-id17123 . -1) (undo-tree-id17124 . -1) (undo-tree-id17125 . -1) 10594) nil (25968 51094 189374 0) 0 nil])
([nil nil ((10603 . 10606)) nil (25968 51094 189366 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10604 10613 #s(yas--snippet nil nil #s(yas--exit 10613 nil) 90 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10613 nil) 90 nil nil nil nil)) (10604 . 10613) (#("is_none()$0" 0 11 (fontified nil)) . 10604) (10604 . 10615) (#("is" 0 2 (fontified nil)) . 10604) (10604 . 10606) (#("is_none()" 0 9 (fontified nil)) . -10604) (10604 . 10613) (#("is" 0 2 (fontified t)) . -10604) (undo-tree-id17114 . -2) (undo-tree-id17115 . -1) (undo-tree-id17116 . -1) (undo-tree-id17117 . -2) (undo-tree-id17118 . -2) (undo-tree-id17119 . -2) (undo-tree-id17120 . -2) 10606) nil (25968 51094 189364 0) 0 nil])
([nil nil ((10613 . 10614)) nil (25968 51094 189353 0) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -10613) (undo-tree-id17101 . -1) (undo-tree-id17102 . -1) (undo-tree-id17103 . -1) (undo-tree-id17104 . -1) (undo-tree-id17105 . -1) (undo-tree-id17106 . -1) (undo-tree-id17107 . -1) (undo-tree-id17108 . -1) (undo-tree-id17109 . -1) (undo-tree-id17110 . -1) (undo-tree-id17111 . -1) (undo-tree-id17112 . -1) (undo-tree-id17113 . -1) 10614) nil (25968 51094 189351 0) 0 nil])
([nil nil ((10613 . 10615)) nil (25968 51094 189328 0) 0 nil])
([nil nil ((11407 . 11412) (11407 . 11408)) nil (25968 51094 189327 0) 0 nil])
([nil nil ((11257 . 11258) (#("    " 0 4 (fontified t)) . 11257) (11201 . 11202) (#("    " 0 4 (fontified t)) . 11201) (11077 . 11078) (#("    " 0 4 (fontified t)) . 11077) (10991 . 10992) (#("    " 0 4 (fontified t)) . 10991) (10970 . 10974) (10951 . 10952) (#("    " 0 4 (fontified t)) . 10951) (10927 . 10928) (#("    " 0 4 (fontified t)) . 10927) (10909 . 10910) (#("    " 0 4 (fontified t)) . 10909) (undo-tree-id17100 . -4) (10881 . 10882) (#("    " 0 4 (fontified t)) . 10881) (10854 . 10855) (#("    " 0 4 (fontified t)) . 10854) (10828 . 10829) (#("    " 0 4 (fontified t)) . 10828) (10727 . 10731) (10692 . 10693) (#("    " 0 4 (fontified t)) . 10692) (10660 . 10661) (#("    " 0 4 (fontified t)) . 10660) (10617 . 10618) (#("    " 0 4 (fontified t)) . 10617) 10584) nil (25968 51094 189320 0) 0 nil])
([nil nil ((11289 . 11290) (t 25968 51094 231987 955000)) nil (25968 51213 602245 0) 0 nil])
([nil nil ((11289 . 11291)) nil (25968 51213 602243 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -11289) (undo-tree-id17187 . -1) (#("." 0 1 (fontified t)) . -11290) (undo-tree-id17188 . -1) 11291) nil (25968 51213 602242 0) 0 nil])
([nil nil ((11289 . 11290)) nil (25968 51213 602239 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -11289) (undo-tree-id17186 . -1) 11290) nil (25968 51213 602237 0) 0 nil])
([nil nil ((11289 . 11293)) nil (25968 51213 602235 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -11290) (undo-tree-id17183 . -1) (#("a" 0 1 (fontified t)) . -11291) (undo-tree-id17184 . -1) (#("s" 0 1 (fontified t)) . -11292) (undo-tree-id17185 . -1) 11293) nil (25968 51213 602234 0) 0 nil])
([nil nil ((11290 . 11292)) nil (25968 51213 602229 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11289) (undo-tree-id17180 . -1) (#("d" 0 1 (fontified t)) . -11290) (undo-tree-id17181 . -1) (#("y" 0 1 (fontified t)) . -11291) (undo-tree-id17182 . -1) 11292) nil (25968 51213 602227 0) 0 nil])
([nil nil ((11255 . 11258)) nil (25968 51213 602223 0) 0 nil])
([nil nil ((11258 . 11260)) nil (25968 51213 602222 0) 0 nil])
([nil nil ((11258 . 11265) (#("ui" 0 2 (fontified nil)) . 11258) (11258 . 11260) (#("uistate" 0 7 (fontified nil)) . -11258) (11258 . 11265) (#("ui" 0 2 (fontified t)) . -11258) (undo-tree-id17179 . -2) 11260) nil (25968 51213 602220 0) 0 nil])
([nil nil ((11265 . 11268)) nil (25968 51213 602216 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 11273 11304 nil nil nil t #s(yas--exit 11305 nil))) #s(yas--exit 11305 nil) 91 nil #s(yas--field 1 11273 11304 nil nil nil t #s(yas--exit 11305 nil)) nil nil)) (11266 . 11275) (#("update(${1:f})$0" 0 16 (fontified nil)) . 11266) (11266 . 11282) (#("up" 0 2 (fontified nil)) . 11266) (11266 . 11268) (#("update(…) (as SignalUpdate)" 0 27 (fontified nil)) . -11266) (11266 . 11293) (#("up" 0 2 (fontified t)) . -11266) (undo-tree-id17177 . -1) (undo-tree-id17178 . -2) 11268) nil (25968 51213 602215 0) 0 nil])
([nil nil ((11274 . 11275) (#("f" 0 1 (fontified nil)) . 11274) (11273 . 11274)) nil (25968 51213 602209 0) 0 nil])
([nil nil ((11274 . 11279)) nil (25968 51213 602208 0) 0 nil])
([nil nil ((11280 . 11281)) nil (25968 51213 602207 0) 0 nil])
([nil nil ((11281 . 11284)) nil (25968 51213 602206 0) 0 nil])
([nil nil ((11281 . 11286) (#("sta" 0 3 (fontified nil)) . 11281) (11281 . 11284) (#("state" 0 5 (fontified nil)) . -11281) (11281 . 11286) (#("sta" 0 3 (fontified t)) . -11281) (undo-tree-id17175 . -3) (undo-tree-id17176 . -3) 11284) nil (25968 51213 602204 0) 0 nil])
([nil nil ((11286 . 11289)) nil (25968 51213 602200 0) 0 nil])
([nil nil ((11287 . 11297) (#("hi" 0 2 (fontified nil)) . 11287) (11287 . 11289) (#("hid_device" 0 10 (fontified nil)) . -11287) (11287 . 11297) (#("hi" 0 2 (fontified t)) . -11287) (undo-tree-id17173 . -2) (undo-tree-id17174 . -2) 11289) nil (25968 51213 602198 0) 0 nil])
([nil nil ((11297 . 11299)) nil (25968 51213 602193 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11297) (undo-tree-id17169 . -1) (undo-tree-id17170 . -1) (#("=" 0 1 (fontified t)) . -11298) (undo-tree-id17171 . -1) (undo-tree-id17172 . -1) 11299) nil (25968 51213 602191 0) 0 nil])
([nil nil ((11297 . 11304)) nil (25968 51213 602186 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11266 11305 #s(yas--snippet nil (#s(yas--field 1 11273 11304 nil nil nil t #s(yas--exit 11305 nil))) #s(yas--exit 11305 nil) 91 nil #s(yas--field 1 11273 11304 nil nil nil t #s(yas--exit 11305 nil)) nil nil))) nil (25968 51213 602185 0) 0 nil])
([nil nil ((11305 . 11306)) nil (25968 51213 602184 0) 0 nil])
([nil nil ((11303 . 11305)) nil (25968 51213 602183 0) 0 nil])
([nil nil ((11303 . 11309) (#("de" 0 2 (fontified nil)) . 11303) (11303 . 11305) (#("device" 0 6 (fontified nil)) . -11303) (11303 . 11309) (#("de" 0 2 (fontified t)) . -11303) (undo-tree-id17167 . -2) (undo-tree-id17168 . -2) 11305) nil (25968 51213 602181 0) 0 nil])
([nil nil ((11309 . 11311)) nil (25968 51213 602177 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11310 11320 #s(yas--snippet nil nil #s(yas--exit 11320 nil) 92 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11320 nil) 92 nil nil nil nil)) (11310 . 11320) (#("dyn_into()$0" 0 12 (fontified nil)) . 11310) (11310 . 11322) (#("d" 0 1 (fontified nil)) . 11310) (11310 . 11311) (#("dyn_into() (as JsCast)" 0 22 (fontified nil)) . -11310) (11310 . 11332) (#("d" 0 1 (fontified t)) . -11310) (undo-tree-id17165 . -1) (undo-tree-id17166 . -1) 11311) nil (25968 51213 602175 0) 0 nil])
([nil nil ((11318 . 11320)) nil (25968 51213 602169 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -11318) (undo-tree-id17155 . -1) (undo-tree-id17156 . -1) (undo-tree-id17157 . -1) (undo-tree-id17158 . -1) (undo-tree-id17159 . -1) (undo-tree-id17160 . -1) (#(":" 0 1 (fontified t)) . -11319) (undo-tree-id17161 . -1) (undo-tree-id17162 . -1) (undo-tree-id17163 . -1) (undo-tree-id17164 . -1) 11320) nil (25968 51213 602168 0) 0 nil])
([nil nil ((11320 . 11322)) nil (25968 51213 602144 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11321 11329 #s(yas--snippet nil nil #s(yas--exit 11329 nil) 93 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11329 nil) 93 nil nil nil nil)) (11321 . 11329) (#("unwrap()$0" 0 10 (fontified nil)) . 11321) (11321 . 11331) (#("u" 0 1 (fontified nil)) . 11321) (11321 . 11322) (#("unwrap()" 0 8 (fontified nil)) . -11321) (11321 . 11329) (#("u" 0 1 (fontified t)) . -11321) (undo-tree-id17150 . -1) (undo-tree-id17151 . -1) (undo-tree-id17152 . -1) (undo-tree-id17153 . -1) (undo-tree-id17154 . -1) 11322) nil (25968 51213 602140 0) 0 nil])
([nil nil ((11333 . 11335) (t 25968 51213 644786 408000)) nil (25968 51220 823930 0) 0 nil])
([nil nil ((11462 . 11468) (t 25968 51220 864945 266000)) nil (25968 51336 453388 0) 0 nil])
([nil nil ((11468 . 11482)) nil (25968 51336 453387 0) 0 nil])
([nil nil ((11481 . 11488) (#("u" 0 1 (fontified nil)) . 11481) (11481 . 11482) (#("uistate" 0 7 (fontified nil)) . -11481) (11481 . 11488) (#("u" 0 1 (fontified t)) . -11481) (undo-tree-id17405 . -1) 11482) nil (25968 51336 453385 0) 0 nil])
([nil nil ((11488 . 11490)) nil (25968 51336 453381 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11489 11494 #s(yas--snippet nil nil #s(yas--exit 11494 nil) 94 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11494 nil) 94 nil nil nil nil)) (11489 . 11494) (#("get()$0" 0 7 (fontified nil)) . 11489) (11489 . 11496) (#("g" 0 1 (fontified nil)) . 11489) (11489 . 11490) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -11489) (11489 . 11509) (#("g" 0 1 (fontified t)) . -11489) (undo-tree-id17404 . -1) 11490) nil (25968 51336 453379 0) 0 nil])
([nil nil ((11494 . 11495)) nil (25968 51336 453375 0) 0 nil])
([nil nil ((11495 . 11505) (#("hid_device" 0 10 (fontified nil)) . -11495) (11495 . 11505)) nil (25968 51336 453374 0) 0 nil])
([nil nil ((11505 . 11507)) nil (25968 51336 453372 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -11497) (undo-tree-id17394 . -1) (#("_" 0 1 (fontified t)) . -11498) (undo-tree-id17395 . -1) (#("d" 0 1 (fontified t)) . -11499) (undo-tree-id17396 . -1) (#("e" 0 1 (fontified t)) . -11500) (undo-tree-id17397 . -1) (#("v" 0 1 (fontified t)) . -11501) (undo-tree-id17398 . -1) (#("i" 0 1 (fontified t)) . -11502) (undo-tree-id17399 . -1) (#("c" 0 1 (fontified t)) . -11503) (undo-tree-id17400 . -1) (#("e" 0 1 (fontified t)) . -11504) (undo-tree-id17401 . -1) (#("." 0 1 (fontified t)) . -11505) (undo-tree-id17402 . -1) (#("s" 0 1 (fontified t)) . -11506) (undo-tree-id17403 . -1) 11507) nil (25968 51336 453369 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-variable-name-face fontified t)) . -11476) (undo-tree-id17373 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -11477) (undo-tree-id17374 . -1) (#(" " 0 1 (fontified t)) . -11478) (undo-tree-id17375 . -1) (#("=" 0 1 (fontified t)) . -11479) (undo-tree-id17376 . -1) (#(" " 0 1 (fontified t)) . -11480) (undo-tree-id17377 . -1) (#("u" 0 1 (fontified t)) . -11481) (undo-tree-id17378 . -1) (#("i" 0 1 (fontified t)) . -11482) (undo-tree-id17379 . -1) (#("s" 0 1 (fontified t)) . -11483) (undo-tree-id17380 . -1) (#("t" 0 1 (fontified t)) . -11484) (undo-tree-id17381 . -1) (#("a" 0 1 (fontified t)) . -11485) (undo-tree-id17382 . -1) (#("t" 0 1 (fontified t)) . -11486) (undo-tree-id17383 . -1) (#("e" 0 1 (fontified t)) . -11487) (undo-tree-id17384 . -1) (#("." 0 1 (fontified t)) . -11488) (undo-tree-id17385 . -1) (#("g" 0 1 (fontified t)) . -11489) (undo-tree-id17386 . -1) (#("e" 0 1 (fontified t)) . -11490) (undo-tree-id17387 . -1) (#("t" 0 1 (fontified t)) . -11491) (undo-tree-id17388 . -1) (#("(" 0 1 (fontified t)) . -11492) (undo-tree-id17389 . -1) (#(")" 0 1 (fontified t)) . -11493) (undo-tree-id17390 . -1) (#("." 0 1 (fontified t)) . -11494) (undo-tree-id17391 . -1) (#("h" 0 1 (fontified t)) . -11495) (undo-tree-id17392 . -1) (#("i" 0 1 (fontified t)) . -11496) (undo-tree-id17393 . -1) 11497) nil (25968 51336 453350 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -11468) (undo-tree-id17363 . -1) (undo-tree-id17364 . -1) (#("e" 0 1 (fontified t)) . -11469) (undo-tree-id17365 . -1) (undo-tree-id17366 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -11470) (undo-tree-id17367 . -1) (#(" " 0 1 (fontified t)) . -11471) (undo-tree-id17368 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -11472) (undo-tree-id17369 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -11473) (undo-tree-id17370 . -1) (#("v" 0 1 (face font-lock-variable-name-face fontified t)) . -11474) (undo-tree-id17371 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -11475) (undo-tree-id17372 . -1) 11476) nil (25968 51336 453322 0) 0 nil])
([nil nil ((11468 . 11475)) nil (25968 51336 453310 0) 0 nil])
([nil nil ((11474 . 11481) (#("u" 0 1 (fontified nil)) . 11474) (11474 . 11475) (#("uistate" 0 7 (fontified nil)) . -11474) (11474 . 11481) (#("u" 0 1 (fontified t)) . -11474) (undo-tree-id17361 . -1) (undo-tree-id17362 . -1) 11475) nil (25968 51336 453308 0) 0 nil])
([nil nil ((11481 . 11483)) nil (25968 51336 453303 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11482 11487 #s(yas--snippet nil nil #s(yas--exit 11487 nil) 95 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11487 nil) 95 nil nil nil nil)) (11482 . 11487) (#("get()$0" 0 7 (fontified nil)) . 11482) (11482 . 11489) (#("g" 0 1 (fontified nil)) . 11482) (11482 . 11483) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -11482) (11482 . 11502) (#("g" 0 1 (fontified t)) . -11482) (undo-tree-id17360 . -1) 11483) nil (25968 51336 453301 0) 0 nil])
([nil nil ((11487 . 11489)) nil (25968 51336 453296 0) 0 nil])
([nil nil ((11488 . 11498) (#("h" 0 1 (fontified nil)) . 11488) (11488 . 11489) (#("hid_device" 0 10 (fontified nil)) . -11488) (11488 . 11498) (#("h" 0 1 (fontified t)) . -11488) (undo-tree-id17358 . -1) (undo-tree-id17359 . -1) 11489) nil (25968 51336 453294 0) 0 nil])
([nil nil ((11498 . 11501)) nil (25968 51336 453290 0) 0 nil])
([nil nil ((11503 . 11508) (#("		" 0 2 (fontified nil)) . 11502) (undo-tree-id17354 . -1) (11503 . 11504) (#("    " 0 4 (fontified nil)) . 11503) (undo-tree-id17355 . -4) (11502 . 11508) (#("		" 0 2 (fontified nil)) . 11501) (undo-tree-id17356 . -1) (11502 . 11503) (#("    " 0 4 (fontified nil)) . 11502) (undo-tree-id17357 . -4) (11500 . 11507)) nil (25968 51336 453288 0) 0 nil])
([nil nil ((11502 . 11504)) nil (25968 51336 453281 0) 0 nil])
([nil nil ((11501 . 11503)) nil (25968 51336 453280 0) 0 nil])
([nil nil ((11503 . 11505)) nil (25968 51336 453279 0) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-type-face fontified t)) . -11504) (undo-tree-id17352 . -1) (undo-tree-id17353 . -1) 11505) nil (25968 51336 453278 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 11508 11514 nil nil nil t #s(yas--exit 11515 nil))) #s(yas--exit 11515 nil) 96 nil #s(yas--field 1 11508 11514 nil nil nil t #s(yas--exit 11515 nil)) nil nil)) (11503 . 11509) (#("Some($1)$0" 0 10 (fontified nil)) . 11503) (11503 . 11513) (#("S" 0 1 (fontified nil)) . 11503) (11503 . 11504) (#("Some(…)" 0 7 (fontified nil)) . -11503) (11503 . 11510) (#("S" 0 1 (face font-lock-type-face fontified t)) . -11503) (undo-tree-id17350 . -1) (undo-tree-id17351 . -1) 11504) nil (25968 51336 453274 0) 0 nil])
([nil nil ((11508 . 11514)) nil (25968 51336 453268 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11503 11515 #s(yas--snippet nil (#s(yas--field 1 11508 11514 nil nil nil t #s(yas--exit 11515 nil))) #s(yas--exit 11515 nil) 96 nil #s(yas--field 1 11508 11514 nil nil nil t #s(yas--exit 11515 nil)) nil nil))) nil (25968 51336 453267 0) 0 nil])
([nil nil ((11515 . 11521)) nil (25968 51336 453266 0) 0 nil])
([nil nil ((11521 . 11522)) nil (25968 51336 453266 0) 0 nil])
([nil nil ((11522 . 11524) (#("		    " 0 6 (fontified nil)) . 11521) (undo-tree-id17348 . -2) (undo-tree-id17349 . -2) (11523 . 11527) (11520 . 11524)) nil (25968 51336 453264 0) 0 nil])
([nil nil ((11529 . 11533)) nil (25968 51336 453260 0) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-type-face fontified t)) . -11531) (undo-tree-id17344 . -1) (undo-tree-id17345 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -11532) (undo-tree-id17346 . -1) (undo-tree-id17347 . -1) 11533) nil (25968 51336 453259 0) 0 nil])
([nil nil ((11531 . 11532)) nil (25968 51336 453254 0) 0 nil])
([nil nil ((57 . 109) (11529 . 11529) (11529 . 11548) (#("Nom" 0 3 (fontified nil)) . 11529) (11529 . 11532) (#("NoDefaultFormatting (use plotters::coord::ranged1d::NoDefaultFormatting)" 0 72 (fontified nil)) . -11529) (11529 . 11601) (#("Nom" 0 3 (face font-lock-type-face fontified t)) . -11529) (undo-tree-id17342 . -3) (undo-tree-id17343 . -3) 11532) nil (25968 51336 453251 0) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-type-face fontified t)) . -11598) (undo-tree-id17338 . -1) (undo-tree-id17339 . -1) (#("g" 0 1 (face font-lock-type-face fontified t)) . -11599) (undo-tree-id17340 . -1) (undo-tree-id17341 . -1) 11600) nil (25968 51336 453246 0) 0 nil])
([nil nil ((#("		NoDefaultFormatti" 0 2 (fontified t) 2 19 (face font-lock-type-face fontified t)) . 11579)) nil (25968 51336 453240 0) 0 nil])
([nil nil ((11579 . 11581)) nil (25968 51336 453239 0) 0 nil])
([nil nil ((11581 . 11582)) nil (25968 51336 453238 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11581 11585 #s(yas--snippet nil nil #s(yas--exit 11585 nil) 97 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11585 nil) 97 nil nil nil nil)) (11581 . 11585) (#("None$0" 0 6 (fontified nil)) . 11581) (11581 . 11587) (#("N" 0 1 (fontified nil)) . 11581) (11581 . 11582) (#("None" 0 4 (fontified nil)) . -11581) (11581 . 11585) (#("N" 0 1 (face font-lock-type-face fontified t)) . -11581) (undo-tree-id17336 . -1) (undo-tree-id17337 . -1) 11582) nil (25968 51336 453236 0) 0 nil])
([nil nil ((11585 . 11591)) nil (25968 51336 453230 0) 0 nil])
([nil nil ((11591 . 11592)) nil (25968 51336 453229 0) 0 nil])
([nil nil ((11590 . 11593)) nil (25968 51336 453229 0) 0 nil])
([nil nil ((#("	    match uistate.get().hid_device {
		Some(device) => {

		},
		None => {
		},
	    }" 0 5 (fontified t) 5 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 19 (fontified t) 19 25 (fontified t) 25 38 (fontified t) 38 40 (fontified t) 40 44 (face font-lock-type-face fontified t) 44 51 (fontified t) 51 54 (fontified t) 54 55 (fontified t syntax-table (1)) 55 58 (fontified t) 58 64 (fontified t) 64 66 (fontified t) 66 70 (face font-lock-type-face fontified t) 70 72 (fontified t) 72 73 (syntax-table (1) fontified t) 73 81 (fontified t) 81 87 (fontified t)) . 11515) (undo-tree-id17333 . -87) (undo-tree-id17334 . -80) (undo-tree-id17335 . -87)) nil (25968 51336 453227 0) 0 nil])
([nil nil ((11515 . 11517)) nil (25968 51336 453224 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -11515) (undo-tree-id17329 . -1) (undo-tree-id17330 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -11516) (undo-tree-id17331 . -1) (undo-tree-id17332 . -1) 11517) nil (25968 51336 453222 0) 0 nil])
([nil nil ((11515 . 11520)) nil (25968 51336 453217 0) 0 nil])
([nil nil ((11520 . 11533)) nil (25968 51336 453216 0) 0 nil])
([nil nil ((11532 . 11535)) nil (25968 51336 453215 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -11534) (undo-tree-id17325 . -1) (undo-tree-id17326 . -1) (undo-tree-id17327 . -1) (undo-tree-id17328 . -1) 11535) nil (25968 51336 453214 0) 0 nil])
([nil nil ((11534 . 11538)) nil (25968 51336 453209 0) 0 nil])
([nil nil ((11539 . 11544)) nil (25968 51336 453208 0) 0 nil])
([nil nil ((11542 . 11549) (#("ui" 0 2 (fontified nil)) . 11542) (11542 . 11544) (#("uistate" 0 7 (fontified nil)) . -11542) (11542 . 11549) (#("ui" 0 2 (fontified t)) . -11542) (undo-tree-id17316 . -2) (undo-tree-id17317 . -2) (undo-tree-id17318 . -1) (undo-tree-id17319 . -1) (undo-tree-id17320 . -1) (undo-tree-id17321 . -2) (undo-tree-id17322 . -2) (undo-tree-id17323 . -2) (undo-tree-id17324 . -2) 11544) nil (25968 51336 453206 0) 0 nil])
([nil nil ((11549 . 11552)) nil (25968 51336 453194 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11550 11555 #s(yas--snippet nil nil #s(yas--exit 11555 nil) 98 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11555 nil) 98 nil nil nil nil)) (11550 . 11555) (#("get()$0" 0 7 (fontified nil)) . 11550) (11550 . 11557) (#("ge" 0 2 (fontified nil)) . 11550) (11550 . 11552) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -11550) (11550 . 11570) (#("ge" 0 2 (fontified t)) . -11550) (undo-tree-id17308 . -2) (undo-tree-id17309 . -2) (undo-tree-id17310 . -1) (undo-tree-id17311 . -1) (undo-tree-id17312 . -2) (undo-tree-id17313 . -2) (undo-tree-id17314 . -2) (undo-tree-id17315 . -2) 11552) nil (25968 51336 453191 0) 0 nil])
([nil nil ((11555 . 11557)) nil (25968 51336 453180 0) 0 nil])
([nil nil ((11556 . 11566) (#("h" 0 1 (fontified nil)) . 11556) (11556 . 11557) (#("hid_device" 0 10 (fontified nil)) . -11556) (11556 . 11566) (#("h" 0 1 (fontified t)) . -11556) (undo-tree-id17304 . -1) (undo-tree-id17305 . -1) (undo-tree-id17306 . -1) (undo-tree-id17307 . -1) 11557) nil (25968 51336 453178 0) 0 nil])
([nil nil ((11566 . 11569)) nil (25968 51336 453171 0) 0 nil])
([nil nil ((11570 . 11575) (#("		" 0 2 (fontified nil)) . 11569) (undo-tree-id17298 . -1) (undo-tree-id17299 . -1) (undo-tree-id17300 . -1) (11570 . 11571) (#("    " 0 4 (fontified nil)) . 11570) (undo-tree-id17301 . -4) (undo-tree-id17302 . -4) (undo-tree-id17303 . -4) (11568 . 11575)) nil (25968 51336 453170 0) 0 nil])
([nil nil ((11569 . 11571)) nil (25968 51336 453162 0) 0 nil])
([nil nil ((#("	    logging::log!(\"device:{:?}\", &device);
	    let promise = device.open();
	    wasm_bindgen_futures::JsFuture::from(promise).await.expect(\"Cannot Open Device\");
	    logging::log!(\"device:{:?}\", &device);

	    let mut send_buf = [0u8; 64];
	    for (page_num, keys) in keyboard_state.get().keys.chunks(4).enumerate() {
		send_buf[0] = 2;
		send_buf[1] = page_num as u8;
		for i in 0..4 {
 		    send_buf[2 + i*4+0] = keys[i].value.0 as u8 | ((keys[i].mode << 7) as u8);
		    send_buf[2 + i*4+1] = keys[i].value.1 as u8;
		    send_buf[2 + i*4+2] = keys[i].value.2 as u8;
		    send_buf[2 + i*4+3] = keys[i].value.3 as u8;
		}
		//logging::log!(\"test: [page: {} payload: {:?}]\", page_num, &send_buf[0..18]);
		if device.opened() {
		    let res = wasm_bindgen_futures::JsFuture::from(device.send_report_with_u8_array(2, &mut send_buf[1..18])).await;
		    match res {
			Err(err) => logging::log!(\"{:?}\", err),
			_ => {},
		    }
//		    std::thread::sleep(std::time::Duration::from_millis(1));
		} else {
		    logging::log!(\"Device is not opend\");
		}

	    }
	    wasm_bindgen_futures::JsFuture::from(device.close()).await.expect(\"Error While Closing the Device\");" 0 5 (fontified t) 5 12 (face font-lock-constant-face fontified t) 12 14 (fontified t) 14 17 (face font-lock-preprocessor-face fontified t) 17 18 (face font-lock-preprocessor-face fontified t) 18 19 (fontified t) 19 32 (face font-lock-string-face fontified t) 32 34 (fontified t) 34 35 (face rust-ampersand-face fontified t) 35 43 (fontified t) 43 44 (fontified t) 44 49 (fontified t) 49 52 (face font-lock-keyword-face fontified t) 52 53 (fontified t) 53 60 (face font-lock-variable-name-face fontified t) 60 78 (fontified t) 78 83 (fontified t) 83 103 (face font-lock-constant-face fontified t) 103 105 (fontified t) 105 113 (face font-lock-type-face fontified t) 113 129 (fontified t) 129 134 (face font-lock-keyword-face fontified t) 134 135 (fontified t) 135 142 (fontified t) 142 162 (face font-lock-string-face fontified t) 162 164 (fontified t) 164 165 (fontified t) 165 170 (fontified t) 170 174 (face font-lock-constant-face fontified t) 174 177 (face font-lock-constant-face fontified t) 177 179 (fontified t) 179 182 (face font-lock-preprocessor-face fontified t) 182 183 (face font-lock-preprocessor-face fontified t) 183 184 (fontified t) 184 197 (face font-lock-string-face fontified t) 197 199 (fontified t) 199 200 (face rust-ampersand-face fontified t) 200 207 (fontified t) 207 208 (fontified t rear-nonsticky t) 208 209 (fontified t) 209 210 (fontified t) 210 215 (fontified t) 215 218 (face font-lock-keyword-face fontified t) 218 219 (fontified t) 219 222 (face font-lock-keyword-face fontified t) 222 223 (fontified t) 223 231 (face font-lock-variable-name-face fontified t) 231 236 (fontified t) 236 238 (face font-lock-type-face fontified t) 238 244 (fontified t) 244 245 (fontified t) 245 250 (fontified t) 250 253 (face font-lock-keyword-face fontified t) 253 271 (fontified t) 271 273 (face font-lock-keyword-face fontified t) 273 274 (fontified t) 274 289 (fontified t) 289 294 (fontified t) 294 324 (fontified t) 324 343 (fontified t) 343 368 (fontified t) 368 370 (face font-lock-keyword-face fontified t) 370 371 (fontified t) 371 373 (face font-lock-type-face fontified t) 373 375 (fontified t) 375 377 (fontified t) 377 380 (face font-lock-keyword-face fontified t) 380 381 (fontified t) 381 382 (face font-lock-variable-name-face fontified t) 382 383 (fontified t) 383 385 (face font-lock-keyword-face fontified t) 385 393 (fontified t) 393 438 (fontified t) 438 440 (face font-lock-keyword-face fontified t) 440 441 (fontified t) 441 443 (face font-lock-type-face fontified t) 443 461 (fontified t) 461 462 (fontified t syntax-table (1)) 462 463 (fontified t syntax-table (1)) 463 467 (fontified t) 467 469 (face font-lock-keyword-face fontified t) 469 470 (fontified t) 470 472 (face font-lock-type-face fontified t) 472 475 (fontified t) 475 519 (fontified t) 519 521 (face font-lock-keyword-face fontified t) 521 522 (fontified t) 522 524 (face font-lock-type-face fontified t) 524 526 (fontified t) 526 570 (fontified t) 570 572 (face font-lock-keyword-face fontified t) 572 573 (fontified t) 573 575 (face font-lock-type-face fontified t) 575 577 (fontified t) 577 621 (fontified t) 621 623 (face font-lock-keyword-face fontified t) 623 624 (fontified t) 624 626 (face font-lock-type-face fontified t) 626 628 (fontified t) 628 632 (fontified t) 632 634 (fontified t) 634 636 (face font-lock-comment-delimiter-face fontified t) 636 643 (face font-lock-comment-face fontified t) 643 645 (face font-lock-comment-face fontified t) 645 648 (face font-lock-comment-face fontified t) 648 649 (face font-lock-comment-face fontified t) 649 650 (face font-lock-comment-face fontified t) 650 657 (face font-lock-comment-face fontified t) 657 658 (face font-lock-comment-face fontified t) 658 664 (face font-lock-comment-face fontified t) 664 666 (face font-lock-comment-face fontified t) 666 676 (face font-lock-comment-face fontified t) 676 680 (face font-lock-comment-face fontified t) 680 682 (face font-lock-comment-face fontified t) 682 683 (face font-lock-comment-face fontified t) 683 694 (face font-lock-comment-face fontified t) 694 695 (face font-lock-comment-face fontified t) 695 708 (face font-lock-comment-face fontified t) 708 711 (face font-lock-comment-face fontified t) 711 712 (face font-lock-comment-face fontified t rear-nonsticky t) 712 713 (face font-lock-comment-face fontified t) 713 715 (fontified t) 715 717 (face font-lock-keyword-face fontified t) 717 718 (fontified t) 718 725 (fontified t) 725 735 (fontified t) 735 736 (fontified t) 736 742 (fontified t) 742 745 (face font-lock-keyword-face fontified t) 745 746 (fontified t) 746 749 (face font-lock-variable-name-face fontified t) 749 752 (fontified t) 752 772 (face font-lock-constant-face fontified t) 772 774 (fontified t) 774 782 (face font-lock-type-face fontified t) 782 787 (fontified t) 787 788 (fontified t rear-nonsticky t) 788 789 (fontified t) 789 795 (fontified t) 795 796 (fontified t) 796 822 (fontified t) 822 823 (fontified t) 823 825 (fontified t) 825 826 (face rust-ampersand-face fontified t) 826 829 (face font-lock-keyword-face fontified t) 829 830 (fontified t) 830 838 (fontified t) 838 839 (fontified t) 839 844 (fontified t) 844 845 (fontified t) 845 846 (fontified t) 846 848 (fontified t) 848 853 (face font-lock-keyword-face fontified t) 853 855 (fontified t) 855 861 (fontified t) 861 866 (face font-lock-keyword-face fontified t) 866 867 (fontified t) 867 873 (fontified t) 873 876 (fontified t) 876 879 (face font-lock-type-face fontified t) 879 883 (fontified t) 883 886 (fontified t) 886 887 (syntax-table (1) fontified t) 887 888 (fontified t) 888 895 (face font-lock-constant-face fontified t) 895 897 (fontified t) 897 901 (face font-lock-preprocessor-face fontified t) 901 902 (fontified t) 902 908 (face font-lock-string-face fontified t) 908 911 (fontified t) 911 913 (fontified t) 913 916 (fontified t) 916 922 (fontified t) 922 923 (syntax-table (1) fontified t) 923 928 (fontified t) 928 935 (fontified t) 935 936 (fontified t) 936 938 (face font-lock-comment-delimiter-face fontified t) 938 944 (face font-lock-comment-delimiter-face fontified t) 944 947 (face font-lock-comment-face fontified t) 947 949 (face font-lock-comment-face fontified t) 949 955 (face font-lock-comment-face fontified t) 955 957 (face font-lock-comment-face fontified t) 957 963 (face font-lock-comment-face fontified t) 963 966 (face font-lock-comment-face fontified t) 966 968 (face font-lock-comment-face fontified t) 968 972 (face font-lock-comment-face fontified t) 972 974 (face font-lock-comment-face fontified t) 974 982 (face font-lock-comment-face fontified t) 982 1001 (face font-lock-comment-face fontified t) 1001 1005 (fontified t) 1005 1009 (face font-lock-keyword-face fontified t) 1009 1012 (fontified t) 1012 1018 (fontified t) 1018 1025 (face font-lock-constant-face fontified t) 1025 1027 (fontified t) 1027 1031 (face font-lock-preprocessor-face fontified t) 1031 1032 (fontified t) 1032 1036 (face font-lock-string-face fontified t) 1036 1053 (face font-lock-string-face fontified t) 1053 1055 (fontified t) 1055 1056 (fontified t) 1056 1059 (fontified t) 1059 1060 (fontified t) 1060 1061 (fontified t) 1061 1063 (fontified t) 1063 1066 (fontified t) 1066 1067 (fontified t rear-nonsticky t) 1067 1068 (fontified t rear-nonsticky t) 1068 1073 (fontified t) 1073 1087 (face font-lock-constant-face fontified t) 1087 1093 (face font-lock-constant-face fontified t) 1093 1095 (fontified t) 1095 1103 (face font-lock-type-face fontified t) 1103 1105 (fontified t) 1105 1108 (fontified t) 1108 1109 (fontified t rear-nonsticky t) 1109 1110 (fontified t rear-nonsticky t) 1110 1117 (fontified t) 1117 1126 (fontified t) 1126 1131 (face font-lock-keyword-face fontified t) 1131 1132 (fontified t) 1132 1139 (fontified t) 1139 1171 (face font-lock-string-face fontified t) 1171 1173 (fontified t)) . 11579) (undo-tree-id17189 . -1173) (undo-tree-id17190 . -1060) (undo-tree-id17191 . -632) (undo-tree-id17192 . -936) (undo-tree-id17193 . -1004) (undo-tree-id17194 . -1173) (undo-tree-id17195 . -1173) (undo-tree-id17196 . -1173) (undo-tree-id17197 . -1173) (undo-tree-id17198 . -1173) (undo-tree-id17199 . -1172) (undo-tree-id17200 . -1169) (undo-tree-id17201 . -1166) (undo-tree-id17202 . -1067) (undo-tree-id17203 . -1067) (undo-tree-id17204 . -1067) (undo-tree-id17205 . -1059) (undo-tree-id17206 . -1055) (undo-tree-id17207 . -1011) (undo-tree-id17208 . -984) (undo-tree-id17209 . -935) (undo-tree-id17210 . -927) (undo-tree-id17211 . -895) (undo-tree-id17212 . -872) (undo-tree-id17213 . -757) (undo-tree-id17214 . -755) (undo-tree-id17215 . -730) (undo-tree-id17216 . -647) (undo-tree-id17217 . -631) (undo-tree-id17218 . -588) (undo-tree-id17219 . -536) (undo-tree-id17220 . -535) (undo-tree-id17221 . -483) (undo-tree-id17222 . -482) (undo-tree-id17223 . -400) (undo-tree-id17224 . -380) (undo-tree-id17225 . -379) (undo-tree-id17226 . -346) (undo-tree-id17227 . -345) (undo-tree-id17228 . -325) (undo-tree-id17229 . -252) (undo-tree-id17230 . -251) (undo-tree-id17231 . -250) (undo-tree-id17232 . -209) (undo-tree-id17233 . -168) (undo-tree-id17234 . -167) (undo-tree-id17235 . -167) (undo-tree-id17236 . -167) (undo-tree-id17237 . -167) (undo-tree-id17238 . -167) (undo-tree-id17239 . -167) (undo-tree-id17240 . -167) (undo-tree-id17241 . -167) (undo-tree-id17242 . -167) (undo-tree-id17243 . -167) (undo-tree-id17244 . -167) (undo-tree-id17245 . -167) (undo-tree-id17246 . -167) (undo-tree-id17247 . -167) (undo-tree-id17248 . -167) (undo-tree-id17249 . -209) (undo-tree-id17250 . -213) (undo-tree-id17251 . -213) (undo-tree-id17252 . -213) (undo-tree-id17253 . -213) (undo-tree-id17254 . -213) (undo-tree-id17255 . -248) (undo-tree-id17256 . -248) (undo-tree-id17257 . -248) (undo-tree-id17258 . -248) (undo-tree-id17259 . -246) (undo-tree-id17260 . -210) (undo-tree-id17261 . -78) (undo-tree-id17262 . -78) (undo-tree-id17263 . -78) (undo-tree-id17264 . -78) (undo-tree-id17265 . -79) (undo-tree-id17266 . -79) (undo-tree-id17267 . -79) (undo-tree-id17268 . -79) (undo-tree-id17269 . -79) (undo-tree-id17270 . -44) (undo-tree-id17271 . -1173) (undo-tree-id17272 . -1173) (undo-tree-id17273 . -1173) (undo-tree-id17274 . -1173) (undo-tree-id17275 . -1173) (undo-tree-id17276 . -1173) (undo-tree-id17277 . -1171) (undo-tree-id17278 . -1067) (undo-tree-id17279 . -1060) (undo-tree-id17280 . -1059) (undo-tree-id17281 . -1055) (undo-tree-id17282 . -1000) (undo-tree-id17283 . -915) (undo-tree-id17284 . -782) (undo-tree-id17285 . -631) (undo-tree-id17286 . -608) (undo-tree-id17287 . -417) (undo-tree-id17288 . -359) (undo-tree-id17289 . -334) (undo-tree-id17290 . -257) (undo-tree-id17291 . -217) (undo-tree-id17292 . -209) (undo-tree-id17293 . -165) (undo-tree-id17294 . -165) (undo-tree-id17295 . -1173) (undo-tree-id17296 . -1173) (undo-tree-id17297 . -1173)) nil (25968 51336 453155 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12743 . 12744) (nil fontified nil 12742 . 12744) (nil fontified nil 12710 . 12742) (nil fontified nil 12703 . 12710) (nil fontified nil 12702 . 12703) (nil fontified nil 12697 . 12702) (nil fontified nil 12688 . 12697) (nil fontified nil 12681 . 12688) (nil fontified nil 12680 . 12681) (nil fontified nil 12679 . 12680) (nil fontified nil 12676 . 12679) (nil fontified nil 12674 . 12676) (nil fontified nil 12666 . 12674) (nil fontified nil 12664 . 12666) (nil fontified nil 12658 . 12664) (nil fontified nil 12644 . 12658) (nil fontified nil 12639 . 12644) (nil fontified nil 12638 . 12639) (nil fontified nil 12637 . 12638) (nil fontified nil 12634 . 12637) (nil fontified nil 12632 . 12634) (nil fontified nil 12631 . 12632) (nil fontified nil 12630 . 12631) (nil fontified nil 12627 . 12630) (nil fontified nil 12626 . 12627) (nil fontified nil 12624 . 12626) (nil fontified nil 12607 . 12624) (nil fontified nil 12603 . 12607) (nil fontified nil 12602 . 12603) (nil fontified nil 12598 . 12602) (nil fontified nil 12596 . 12598) (nil fontified nil 12589 . 12596) (nil fontified nil 12583 . 12589) (nil fontified nil 12580 . 12583) (nil fontified nil 12576 . 12580) (nil fontified nil 12572 . 12576) (nil fontified nil 12553 . 12572) (nil fontified nil 12545 . 12553) (nil fontified nil 12543 . 12545) (nil fontified nil 12539 . 12543) (nil fontified nil 12537 . 12539) (nil fontified nil 12534 . 12537) (nil fontified nil 12528 . 12534) (nil fontified nil 12526 . 12528) (nil fontified nil 12520 . 12526) (nil fontified nil 12518 . 12520) (nil fontified nil 12515 . 12518) (nil fontified nil 12509 . 12515) (nil fontified nil 12507 . 12509) (nil fontified nil 12506 . 12507) (nil fontified nil 12499 . 12506) (nil fontified nil 12494 . 12499) (nil fontified nil 12493 . 12494) (nil fontified nil 12487 . 12493) (nil fontified nil 12484 . 12487) (nil fontified nil 12482 . 12484) (nil fontified nil 12479 . 12482) (nil fontified nil 12473 . 12479) (nil fontified nil 12472 . 12473) (nil fontified nil 12468 . 12472) (nil fontified nil 12466 . 12468) (nil fontified nil 12459 . 12466) (nil fontified nil 12458 . 12459) (nil fontified nil 12457 . 12458) (nil fontified nil 12454 . 12457) (nil fontified nil 12450 . 12454) (nil fontified nil 12447 . 12450) (nil fontified nil 12444 . 12447) (nil fontified nil 12438 . 12444) (nil fontified nil 12437 . 12438) (nil fontified nil 12432 . 12437) (nil fontified nil 12426 . 12432) (nil fontified nil 12424 . 12426) (nil fontified nil 12419 . 12424) (nil fontified nil 12417 . 12419) (nil fontified nil 12416 . 12417) (nil fontified nil 12415 . 12416) (nil fontified nil 12410 . 12415) (nil fontified nil 12409 . 12410) (nil fontified nil 12401 . 12409) (nil fontified nil 12400 . 12401) (nil fontified nil 12397 . 12400) (nil fontified nil 12396 . 12397) (nil fontified nil 12394 . 12396) (nil fontified nil 12393 . 12394) (nil fontified nil 12367 . 12393) (nil fontified nil 12366 . 12367) (nil fontified nil 12360 . 12366) (nil fontified nil 12359 . 12360) (nil fontified nil 12358 . 12359) (nil fontified nil 12353 . 12358) (nil fontified nil 12345 . 12353) (nil fontified nil 12343 . 12345) (nil fontified nil 12323 . 12343) (nil fontified nil 12320 . 12323) (nil fontified nil 12317 . 12320) (nil fontified nil 12316 . 12317) (nil fontified nil 12313 . 12316) (nil fontified nil 12307 . 12313) (nil fontified nil 12306 . 12307) (nil fontified nil 12296 . 12306) (nil fontified nil 12289 . 12296) (nil fontified nil 12288 . 12289) (nil fontified nil 12286 . 12288) (nil fontified nil 12284 . 12286) (nil fontified nil 12283 . 12284) (nil fontified nil 12282 . 12283) (nil fontified nil 12279 . 12282) (nil fontified nil 12266 . 12279) (nil fontified nil 12265 . 12266) (nil fontified nil 12254 . 12265) (nil fontified nil 12253 . 12254) (nil fontified nil 12251 . 12253) (nil fontified nil 12247 . 12251) (nil fontified nil 12237 . 12247) (nil fontified nil 12235 . 12237) (nil fontified nil 12229 . 12235) (nil fontified nil 12228 . 12229) (nil fontified nil 12221 . 12228) (nil fontified nil 12220 . 12221) (nil fontified nil 12219 . 12220) (nil fontified nil 12216 . 12219) (nil fontified nil 12214 . 12216) (nil fontified nil 12207 . 12214) (nil fontified nil 12205 . 12207) (nil fontified nil 12203 . 12205) (nil fontified nil 12199 . 12203) (nil fontified nil 12197 . 12199) (nil fontified nil 12195 . 12197) (nil fontified nil 12194 . 12195) (nil fontified nil 12192 . 12194) (nil fontified nil 12148 . 12192) (nil fontified nil 12146 . 12148) (nil fontified nil 12144 . 12146) (nil fontified nil 12143 . 12144) (nil fontified nil 12141 . 12143) (nil fontified nil 12097 . 12141) (nil fontified nil 12095 . 12097) (nil fontified nil 12093 . 12095) (nil fontified nil 12092 . 12093) (nil fontified nil 12090 . 12092) (nil fontified nil 12046 . 12090) (nil fontified nil 12043 . 12046) (nil fontified nil 12041 . 12043) (nil fontified nil 12040 . 12041) (nil fontified nil 12038 . 12040) (nil fontified nil 12034 . 12038) (nil fontified nil 12033 . 12034) (nil fontified nil 12032 . 12033) (nil fontified nil 12014 . 12032) (nil fontified nil 12012 . 12014) (nil fontified nil 12011 . 12012) (nil fontified nil 12009 . 12011) (nil fontified nil 11964 . 12009) (nil fontified nil 11956 . 11964) (nil fontified nil 11954 . 11956) (nil fontified nil 11953 . 11954) (nil fontified nil 11952 . 11953) (nil fontified nil 11951 . 11952) (nil fontified nil 11948 . 11951) (nil fontified nil 11946 . 11948) (nil fontified nil 11944 . 11946) (nil fontified nil 11942 . 11944) (nil fontified nil 11941 . 11942) (nil fontified nil 11939 . 11941) (nil fontified nil 11914 . 11939) (nil fontified nil 11895 . 11914) (nil fontified nil 11865 . 11895) (nil fontified nil 11860 . 11865) (nil fontified nil 11845 . 11860) (nil fontified nil 11844 . 11845) (nil fontified nil 11842 . 11844) (nil fontified nil 11824 . 11842) (nil fontified nil 11821 . 11824) (nil fontified nil 11816 . 11821) (nil fontified nil 11815 . 11816) (nil fontified nil 11809 . 11815) (nil fontified nil 11807 . 11809) (nil fontified nil 11802 . 11807) (nil fontified nil 11794 . 11802) (nil fontified nil 11793 . 11794) (nil fontified nil 11790 . 11793) (nil fontified nil 11789 . 11790) (nil fontified nil 11786 . 11789) (nil fontified nil 11781 . 11786) (nil fontified nil 11780 . 11781) (nil fontified nil 11779 . 11780) (nil fontified nil 11778 . 11779) (nil fontified nil 11771 . 11778) (nil fontified nil 11770 . 11771) (nil fontified nil 11768 . 11770) (nil fontified nil 11755 . 11768) (nil fontified nil 11754 . 11755) (nil fontified nil 11753 . 11754) (nil fontified nil 11750 . 11753) (nil fontified nil 11748 . 11750) (nil fontified nil 11745 . 11748) (nil fontified nil 11741 . 11745) (nil fontified nil 11736 . 11741) (nil fontified nil 11735 . 11736) (nil fontified nil 11733 . 11735) (nil fontified nil 11713 . 11733) (nil fontified nil 11706 . 11713) (nil fontified nil 11705 . 11706) (nil fontified nil 11700 . 11705) (nil fontified nil 11684 . 11700) (nil fontified nil 11676 . 11684) (nil fontified nil 11674 . 11676) (nil fontified nil 11654 . 11674) (nil fontified nil 11649 . 11654) (nil fontified nil 11631 . 11649) (nil fontified nil 11624 . 11631) (nil fontified nil 11623 . 11624) (nil fontified nil 11620 . 11623) (nil fontified nil 11615 . 11620) (nil fontified nil 11614 . 11615) (nil fontified nil 11606 . 11614) (nil fontified nil 11605 . 11606) (nil fontified nil 11603 . 11605) (nil fontified nil 11590 . 11603) (nil fontified nil 11589 . 11590) (nil fontified nil 11588 . 11589) (nil fontified nil 11585 . 11588) (nil fontified nil 11583 . 11585) (nil fontified nil 11576 . 11583) (nil fontified nil 11571 . 11576) (11571 . 12744)) nil (25968 51336 453009 0) 0 nil])
([nil nil ((12638 . 12639) (#("    " 0 4 (fontified t)) . 12638) (12634 . 12635) (#("    " 0 1 (fontified t) 1 4 (fontified t)) . 12634) (12626 . 12630) (12585 . 12586) (#("    " 0 4 (fontified t)) . 12585) (12570 . 12574) (12500 . 12503) (12497 . 12498) (#("    " 0 4 (fontified t)) . 12497) (12482 . 12486) (12435 . 12439) (12419 . 12420) (#("    " 0 4 (fontified t)) . 12419) (12303 . 12304) (#("    " 0 4 (fontified t)) . 12303) (12276 . 12280) (12191 . 12195) (12183 . 12187) (12135 . 12136) (#("    " 0 4 (fontified t)) . 12135) (12087 . 12088) (#("    " 0 4 (fontified t)) . 12087) (12039 . 12040) (#("    " 0 4 (fontified t)) . 12039) (11961 . 11962) (#("    " 0 4 (fontified t)) . 11961) (11938 . 11942) (11902 . 11906) (11879 . 11883) (11802 . 11803) (#("    " 0 4 (fontified t)) . 11802) (11770 . 11771) (#("    " 0 4 (fontified t)) . 11770) (11728 . 11729) (#("    " 0 4 (fontified t)) . 11728) (11644 . 11645) (#("    " 0 4 (fontified t)) . 11644) (undo-tree-id17406 . -1) (11613 . 11614) (#("    " 0 4 (fontified t)) . 11613) (#("	    " 0 5 (fontified t)) . -11573) (11385 . 11387) 9797 (t 25968 51336 496313 787000)) nil (25968 51343 332968 0) 0 nil])
([nil nil ((#("		logging::log!(\"device:{:?}\", &device);" 0 2 (fontified t) 2 9 (face font-lock-constant-face fontified t) 9 11 (fontified t) 11 14 (face font-lock-preprocessor-face fontified t) 14 15 (face font-lock-preprocessor-face fontified t) 15 16 (fontified t) 16 29 (face font-lock-string-face fontified t) 29 31 (fontified t) 31 32 (face rust-ampersand-face fontified t) 32 40 (fontified t)) . 11571) (undo-tree-id17416 . -2) (undo-tree-id17417 . -40) (undo-tree-id17418 . -40) (undo-tree-id17419 . -40) (undo-tree-id17420 . -40) (undo-tree-id17421 . -40) (undo-tree-id17422 . -40) (undo-tree-id17423 . -40) (undo-tree-id17424 . -40) (undo-tree-id17425 . -40) (t 25968 51343 375787 859000)) nil (25968 51437 17528 0) 0 nil])
([nil nil ((#("		logging::log!(\"device:{:?}\", &device);" 0 2 (fontified t) 2 6 (face font-lock-constant-face fontified t) 6 9 (face font-lock-constant-face fontified t) 9 11 (fontified t) 11 14 (face font-lock-preprocessor-face fontified t) 14 15 (face font-lock-preprocessor-face fontified t) 15 16 (fontified t) 16 29 (face font-lock-string-face fontified t) 29 31 (fontified t) 31 32 (face rust-ampersand-face fontified t) 32 39 (fontified t) 39 40 (fontified t rear-nonsticky t)) . 11687) (undo-tree-id17407 . -40) (undo-tree-id17408 . -40) (undo-tree-id17409 . -40) (undo-tree-id17410 . -40) (undo-tree-id17411 . -40) (undo-tree-id17412 . -40) (undo-tree-id17413 . -40) (undo-tree-id17414 . -40) (undo-tree-id17415 . -40)) nil (25968 51437 17513 0) 0 nil])
([nil nil ((apply -66 11689 12623 undo--wrap-and-run-primitive-undo 11689 12623 ((12618 . 12621) (12606 . 12609) (12562 . 12565) (12544 . 12547) (12473 . 12476) (12465 . 12468) (12446 . 12449) (12396 . 12399) (12378 . 12381) (12259 . 12262) (12229 . 12232) (12141 . 12144) (12130 . 12133) (12079 . 12082) (12028 . 12031) (11977 . 11980) (11896 . 11899) (11870 . 11873) (11831 . 11834) (11805 . 11808) (11726 . 11729) (11691 . 11694) 11689))) nil (25968 51492 436234 0) 0 nil])
([nil nil ((12624 . 12626) (#("		" 0 2 (fontified nil)) . 12623) (undo-tree-id17426 . -2) (undo-tree-id17427 . -2) (undo-tree-id17428 . -2) (12622 . 12626)) nil (25968 51492 436230 0) 0 nil])
([nil nil ((18450 . 18456) (t 25968 51492 479449 406000)) nil (25968 51582 949463 0) 0 nil])
([nil nil ((18474 . 18476) (t 25968 51582 992299 726000)) nil (25968 51598 390781 0) 0 nil])
([nil nil ((apply yas--snippet-revive 18475 18480 #s(yas--snippet nil nil #s(yas--exit 18480 nil) 99 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 18480 nil) 99 nil nil nil nil)) (18475 . 18480) (#("get()$0" 0 7 (fontified nil)) . 18475) (18475 . 18482) (#("g" 0 1 (fontified nil)) . 18475) (18475 . 18476) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -18475) (18475 . 18495) (#("g" 0 1 (fontified t)) . -18475) (undo-tree-id17429 . -1) (undo-tree-id17430 . -1) (undo-tree-id17431 . -1) (undo-tree-id17432 . -1) (undo-tree-id17433 . -1) (undo-tree-id17434 . -1) (undo-tree-id17435 . -1) (undo-tree-id17436 . -1) 18476) nil (25968 51598 390776 0) 0 nil])
([nil nil ((18600 . 18606) (t 25968 51598 434029 834000)) nil (25968 51608 976076 0) 0 nil])
([nil nil ((18624 . 18626)) nil (25968 51608 976075 0) 0 nil])
([nil nil ((apply yas--snippet-revive 18625 18630 #s(yas--snippet nil nil #s(yas--exit 18630 nil) 100 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 18630 nil) 100 nil nil nil nil)) (18625 . 18630) (#("get()$0" 0 7 (fontified nil)) . 18625) (18625 . 18632) (#("g" 0 1 (fontified nil)) . 18625) (18625 . 18626) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -18625) (18625 . 18645) (#("g" 0 1 (fontified t)) . -18625) (undo-tree-id17437 . -1) (undo-tree-id17438 . -1) (undo-tree-id17439 . -1) (undo-tree-id17440 . -1) (undo-tree-id17441 . -1) 18626) nil (25968 51608 976070 0) 0 nil])
([nil nil ((18950 . 18956) (t 25968 51609 19081 992000)) nil (25968 51623 184738 0) 0 nil])
([nil nil ((18971 . 18975)) nil (25968 51623 184737 0) 0 nil])
([nil nil ((apply yas--snippet-revive 18972 18977 #s(yas--snippet nil nil #s(yas--exit 18977 nil) 101 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 18977 nil) 101 nil nil nil nil)) (18972 . 18977) (#("get()$0" 0 7 (fontified nil)) . 18972) (18972 . 18979) (#("get" 0 3 (fontified nil)) . 18972) (18972 . 18975) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -18972) (18972 . 18992) (#("get" 0 3 (fontified t)) . -18972) (undo-tree-id17447 . -3) (undo-tree-id17448 . -1) (undo-tree-id17449 . -1) (undo-tree-id17450 . -2) (undo-tree-id17451 . -2) (undo-tree-id17452 . -3) (undo-tree-id17453 . -3) 18975) nil (25968 51623 184735 0) 0 nil])
([nil nil ((19094 . 19098)) nil (25968 51623 184724 0) 0 nil])
([nil nil ((19098 . 19100)) nil (25968 51623 184723 0) 0 nil])
([nil nil ((19115 . 19117)) nil (25968 51623 184722 0) 0 nil])
([nil nil ((apply yas--snippet-revive 19116 19121 #s(yas--snippet nil nil #s(yas--exit 19121 nil) 102 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 19121 nil) 102 nil nil nil nil)) (19116 . 19121) (#("get()$0" 0 7 (fontified nil)) . 19116) (19116 . 19123) (#("g" 0 1 (fontified nil)) . 19116) (19116 . 19117) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -19116) (19116 . 19136) (#("g" 0 1 (fontified t)) . -19116) (undo-tree-id17442 . -1) (undo-tree-id17443 . -1) (undo-tree-id17444 . -1) (undo-tree-id17445 . -1) (undo-tree-id17446 . -1) 19117) nil (25968 51623 184716 0) 0 nil])
([nil nil ((19407 . 19408) (t 25968 51623 228046 894000)) nil (25968 51647 342251 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -19407) (undo-tree-id17475 . -1) 19408) nil (25968 51647 342249 0) 0 nil])
([nil nil ((19407 . 19413)) nil (25968 51647 342247 0) 0 nil])
([nil nil ((19426 . 19428)) nil (25968 51647 342246 0) 0 nil])
([nil nil ((apply yas--snippet-revive 19427 19432 #s(yas--snippet nil nil #s(yas--exit 19432 nil) 103 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 19432 nil) 103 nil nil nil nil)) (19427 . 19432) (#("get()$0" 0 7 (fontified nil)) . 19427) (19427 . 19434) (#("g" 0 1 (fontified nil)) . 19427) (19427 . 19428) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -19427) (19427 . 19447) (#("g" 0 1 (fontified t)) . -19427) (undo-tree-id17474 . -1) 19428) nil (25968 51647 342244 0) 0 nil])
([nil nil ((19547 . 19553)) nil (25968 51647 342239 0) 0 nil])
([nil nil ((19566 . 19568)) nil (25968 51647 342238 0) 0 nil])
([nil nil ((apply yas--snippet-revive 19567 19572 #s(yas--snippet nil nil #s(yas--exit 19572 nil) 104 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 19572 nil) 104 nil nil nil nil)) (19567 . 19572) (#("get()$0" 0 7 (fontified nil)) . 19567) (19567 . 19574) (#("g" 0 1 (fontified nil)) . 19567) (19567 . 19568) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -19567) (19567 . 19587) (#("g" 0 1 (fontified t)) . -19567) (undo-tree-id17472 . -1) (undo-tree-id17473 . -1) 19568) nil (25968 51647 342237 0) 0 nil])
([nil nil ((19843 . 19849)) nil (25968 51647 342231 0) 0 nil])
([nil nil ((19865 . 19867)) nil (25968 51647 342230 0) 0 nil])
([nil nil ((apply yas--snippet-revive 19866 19871 #s(yas--snippet nil nil #s(yas--exit 19871 nil) 105 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 19871 nil) 105 nil nil nil nil)) (19866 . 19871) (#("get()$0" 0 7 (fontified nil)) . 19866) (19866 . 19873) (#("g" 0 1 (fontified nil)) . 19866) (19866 . 19867) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -19866) (19866 . 19886) (#("g" 0 1 (fontified t)) . -19866) (undo-tree-id17471 . -1) 19867) nil (25968 51647 342228 0) 0 nil])
([nil nil ((19989 . 19993)) nil (25968 51647 342223 0) 0 nil])
([nil nil ((#("M" 0 1 (fontified t)) . -19989) (undo-tree-id17456 . -1) (undo-tree-id17457 . -1) (undo-tree-id17458 . -1) (undo-tree-id17459 . -1) (undo-tree-id17460 . -1) (undo-tree-id17461 . -1) (undo-tree-id17462 . -1) (#("o" 0 1 (fontified t)) . -19990) (undo-tree-id17463 . -1) (undo-tree-id17464 . -1) (undo-tree-id17465 . -1) (undo-tree-id17466 . -1) (#("v" 0 1 (fontified t)) . -19991) (undo-tree-id17467 . -1) (undo-tree-id17468 . -1) (undo-tree-id17469 . -1) (#("e" 0 1 (fontified t)) . -19992) (undo-tree-id17470 . -1) 19993) nil (25968 51647 342221 0) 0 nil])
([nil nil ((19989 . 19995)) nil (25968 51647 342203 0) 0 nil])
([nil nil ((20011 . 20013)) nil (25968 51647 342201 0) 0 nil])
([nil nil ((apply yas--snippet-revive 20012 20017 #s(yas--snippet nil nil #s(yas--exit 20017 nil) 106 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 20017 nil) 106 nil nil nil nil)) (20012 . 20017) (#("get()$0" 0 7 (fontified nil)) . 20012) (20012 . 20019) (#("g" 0 1 (fontified nil)) . 20012) (20012 . 20013) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -20012) (20012 . 20032) (#("g" 0 1 (fontified t)) . -20012) (undo-tree-id17454 . -1) (undo-tree-id17455 . -1) 20013) nil (25968 51647 342197 0) 0 nil])
([nil nil ((11307 . 11310) (t 25968 51647 385798 286000)) nil (25968 51781 573876 0) 0 nil])
([nil nil ((11310 . 11318)) nil (25968 51781 573875 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -11315) (undo-tree-id17730 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -11316) (undo-tree-id17731 . -1) (#("v" 0 1 (face font-lock-variable-name-face fontified t)) . -11317) (undo-tree-id17732 . -1) 11318) nil (25968 51781 573874 0) 0 nil])
([nil nil ((11315 . 11325)) nil (25968 51781 573869 0) 0 nil])
([nil nil ((11322 . 11331) (#("Hid" 0 3 (fontified nil)) . 11322) (11322 . 11325) (#("HidDevice" 0 9 (fontified nil)) . -11322) (11322 . 11331) (#("Hid" 0 3 (face font-lock-type-face fontified t)) . -11322) (undo-tree-id17724 . -3) (undo-tree-id17725 . -1) (undo-tree-id17726 . -2) (undo-tree-id17727 . -2) (undo-tree-id17728 . -3) (undo-tree-id17729 . -3) 11325) nil (25968 51781 573867 0) 0 nil])
([nil nil ((11331 . 11332)) nil (25968 51781 573859 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -11331) (undo-tree-id17722 . -1) (undo-tree-id17723 . -1) 11332) nil (25968 51781 573857 0) 0 nil])
([nil nil ((11331 . 11334)) nil (25968 51781 573854 0) 0 nil])
([nil nil ((11334 . 11336)) nil (25968 51781 573853 0) 0 nil])
([nil nil ((11335 . 11341) (#("d" 0 1 (fontified nil)) . 11335) (11335 . 11336) (#("device" 0 6 (fontified nil)) . -11335) (11335 . 11341) (#("d" 0 1 (fontified t)) . -11335) (undo-tree-id17714 . -1) (undo-tree-id17715 . -1) (undo-tree-id17716 . -1) (undo-tree-id17717 . -1) (undo-tree-id17718 . -1) (undo-tree-id17719 . -1) (undo-tree-id17720 . -1) (undo-tree-id17721 . -1) 11336) nil (25968 51781 573851 0) 0 nil])
([nil nil ((11341 . 11344)) nil (25968 51781 573841 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11342 11352 #s(yas--snippet nil nil #s(yas--exit 11352 nil) 107 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11352 nil) 107 nil nil nil nil)) (11342 . 11352) (#("dyn_into()$0" 0 12 (fontified nil)) . 11342) (11342 . 11354) (#("dy" 0 2 (fontified nil)) . 11342) (11342 . 11344) (#("dyn_into() (as JsCast)" 0 22 (fontified nil)) . -11342) (11342 . 11364) (#("dy" 0 2 (fontified t)) . -11342) (undo-tree-id17707 . -2) (undo-tree-id17708 . -1) (undo-tree-id17709 . -1) (undo-tree-id17710 . -2) (undo-tree-id17711 . -2) (undo-tree-id17712 . -2) (undo-tree-id17713 . -2) 11344) nil (25968 51781 573838 0) 0 nil])
([nil nil ((11352 . 11355)) nil (25968 51781 573828 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 11360 11362 nil nil nil t #s(yas--exit 11363 nil))) #s(yas--exit 11363 nil) 108 nil #s(yas--field 1 11360 11362 nil nil nil t #s(yas--exit 11363 nil)) nil nil)) (11353 . 11364) (#("expect(${1:msg})$0" 0 18 (fontified nil)) . 11353) (11353 . 11371) (#("ex" 0 2 (fontified nil)) . 11353) (11353 . 11355) (#("expect(…)" 0 9 (fontified nil)) . -11353) (11353 . 11362) (#("ex" 0 2 (fontified t)) . -11353) (undo-tree-id17700 . -2) (undo-tree-id17701 . -1) (undo-tree-id17702 . -1) (undo-tree-id17703 . -2) (undo-tree-id17704 . -2) (undo-tree-id17705 . -2) (undo-tree-id17706 . -2) 11355) nil (25968 51781 573826 0) 0 nil])
([nil nil ((11361 . 11362) (#("msg" 0 3 (fontified nil)) . 11361) (undo-tree-id17699 . -3) (11360 . 11361)) nil (25968 51781 573815 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -11360) (undo-tree-id17682 . -1) (undo-tree-id17683 . -1) (undo-tree-id17684 . -1) (undo-tree-id17685 . -1) (undo-tree-id17686 . -1) (undo-tree-id17687 . -1) (undo-tree-id17688 . -1) (undo-tree-id17689 . -1) (undo-tree-id17690 . -1) (undo-tree-id17691 . -1) (undo-tree-id17692 . -1) (undo-tree-id17693 . -1) (undo-tree-id17694 . -1) (#(":" 0 1 (fontified t)) . -11361) (undo-tree-id17695 . -1) (undo-tree-id17696 . -1) (undo-tree-id17697 . -1) (undo-tree-id17698 . -1) 11362) nil (25968 51781 573811 0) 0 nil])
([nil nil ((11360 . 11362)) nil (25968 51781 573793 0) 0 nil])
([nil nil ((11361 . 11368)) nil (25968 51781 573792 0) 0 nil])
([nil nil ((#("C" 0 1 (face font-lock-string-face fontified t)) . -11361) (undo-tree-id17476 . -1) (undo-tree-id17477 . -1) (undo-tree-id17478 . -1) (undo-tree-id17479 . -1) (undo-tree-id17480 . -1) (undo-tree-id17481 . -1) (undo-tree-id17482 . -1) (undo-tree-id17483 . -1) (undo-tree-id17484 . -1) (undo-tree-id17485 . -1) (undo-tree-id17486 . -1) (undo-tree-id17487 . -1) (undo-tree-id17488 . -1) (undo-tree-id17489 . -1) (undo-tree-id17490 . -1) (undo-tree-id17491 . -1) (undo-tree-id17492 . -1) (undo-tree-id17493 . -1) (undo-tree-id17494 . -1) (undo-tree-id17495 . -1) (undo-tree-id17496 . -1) (undo-tree-id17497 . -1) (undo-tree-id17498 . -1) (undo-tree-id17499 . -1) (undo-tree-id17500 . -1) (undo-tree-id17501 . -1) (undo-tree-id17502 . -1) (undo-tree-id17503 . -1) (undo-tree-id17504 . -1) (undo-tree-id17505 . -1) (undo-tree-id17506 . -1) (undo-tree-id17507 . -1) (undo-tree-id17508 . -1) (undo-tree-id17509 . -1) (undo-tree-id17510 . -1) (undo-tree-id17511 . -1) (undo-tree-id17512 . -1) (undo-tree-id17513 . -1) (undo-tree-id17514 . -1) (undo-tree-id17515 . -1) (undo-tree-id17516 . -1) (undo-tree-id17517 . -1) (undo-tree-id17518 . -1) (undo-tree-id17519 . -1) (undo-tree-id17520 . -1) (undo-tree-id17521 . -1) (undo-tree-id17522 . -1) (undo-tree-id17523 . -1) (undo-tree-id17524 . -1) (undo-tree-id17525 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -11362) (undo-tree-id17526 . -1) (undo-tree-id17527 . -1) (undo-tree-id17528 . -1) (undo-tree-id17529 . -1) (undo-tree-id17530 . -1) (undo-tree-id17531 . -1) (undo-tree-id17532 . -1) (undo-tree-id17533 . -1) (undo-tree-id17534 . -1) (undo-tree-id17535 . -1) (undo-tree-id17536 . -1) (undo-tree-id17537 . -1) (undo-tree-id17538 . -1) (undo-tree-id17539 . -1) (undo-tree-id17540 . -1) (undo-tree-id17541 . -1) (undo-tree-id17542 . -1) (undo-tree-id17543 . -1) (undo-tree-id17544 . -1) (undo-tree-id17545 . -1) (undo-tree-id17546 . -1) (undo-tree-id17547 . -1) (undo-tree-id17548 . -1) (undo-tree-id17549 . -1) (undo-tree-id17550 . -1) (undo-tree-id17551 . -1) (undo-tree-id17552 . -1) (undo-tree-id17553 . -1) (undo-tree-id17554 . -1) (undo-tree-id17555 . -1) (undo-tree-id17556 . -1) (undo-tree-id17557 . -1) (undo-tree-id17558 . -1) (undo-tree-id17559 . -1) (undo-tree-id17560 . -1) (undo-tree-id17561 . -1) (undo-tree-id17562 . -1) (undo-tree-id17563 . -1) (undo-tree-id17564 . -1) (undo-tree-id17565 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -11363) (undo-tree-id17566 . -1) (undo-tree-id17567 . -1) (undo-tree-id17568 . -1) (undo-tree-id17569 . -1) (undo-tree-id17570 . -1) (undo-tree-id17571 . -1) (undo-tree-id17572 . -1) (undo-tree-id17573 . -1) (undo-tree-id17574 . -1) (undo-tree-id17575 . -1) (undo-tree-id17576 . -1) (undo-tree-id17577 . -1) (undo-tree-id17578 . -1) (undo-tree-id17579 . -1) (undo-tree-id17580 . -1) (undo-tree-id17581 . -1) (undo-tree-id17582 . -1) (undo-tree-id17583 . -1) (undo-tree-id17584 . -1) (undo-tree-id17585 . -1) (undo-tree-id17586 . -1) (undo-tree-id17587 . -1) (undo-tree-id17588 . -1) (undo-tree-id17589 . -1) (undo-tree-id17590 . -1) (undo-tree-id17591 . -1) (undo-tree-id17592 . -1) (undo-tree-id17593 . -1) (undo-tree-id17594 . -1) (undo-tree-id17595 . -1) (undo-tree-id17596 . -1) (undo-tree-id17597 . -1) (undo-tree-id17598 . -1) (undo-tree-id17599 . -1) (undo-tree-id17600 . -1) (undo-tree-id17601 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -11364) (undo-tree-id17602 . -1) (undo-tree-id17603 . -1) (undo-tree-id17604 . -1) (undo-tree-id17605 . -1) (undo-tree-id17606 . -1) (undo-tree-id17607 . -1) (undo-tree-id17608 . -1) (undo-tree-id17609 . -1) (undo-tree-id17610 . -1) (undo-tree-id17611 . -1) (undo-tree-id17612 . -1) (undo-tree-id17613 . -1) (undo-tree-id17614 . -1) (undo-tree-id17615 . -1) (undo-tree-id17616 . -1) (undo-tree-id17617 . -1) (undo-tree-id17618 . -1) (undo-tree-id17619 . -1) (undo-tree-id17620 . -1) (undo-tree-id17621 . -1) (undo-tree-id17622 . -1) (undo-tree-id17623 . -1) (undo-tree-id17624 . -1) (undo-tree-id17625 . -1) (undo-tree-id17626 . -1) (undo-tree-id17627 . -1) (undo-tree-id17628 . -1) (undo-tree-id17629 . -1) (undo-tree-id17630 . -1) (undo-tree-id17631 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -11365) (undo-tree-id17632 . -1) (undo-tree-id17633 . -1) (undo-tree-id17634 . -1) (undo-tree-id17635 . -1) (undo-tree-id17636 . -1) (undo-tree-id17637 . -1) (undo-tree-id17638 . -1) (undo-tree-id17639 . -1) (undo-tree-id17640 . -1) (undo-tree-id17641 . -1) (undo-tree-id17642 . -1) (undo-tree-id17643 . -1) (undo-tree-id17644 . -1) (undo-tree-id17645 . -1) (undo-tree-id17646 . -1) (undo-tree-id17647 . -1) (undo-tree-id17648 . -1) (undo-tree-id17649 . -1) (undo-tree-id17650 . -1) (undo-tree-id17651 . -1) (undo-tree-id17652 . -1) (undo-tree-id17653 . -1) (undo-tree-id17654 . -1) (undo-tree-id17655 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -11366) (undo-tree-id17656 . -1) (undo-tree-id17657 . -1) (undo-tree-id17658 . -1) (undo-tree-id17659 . -1) (undo-tree-id17660 . -1) (undo-tree-id17661 . -1) (undo-tree-id17662 . -1) (undo-tree-id17663 . -1) (undo-tree-id17664 . -1) (undo-tree-id17665 . -1) (undo-tree-id17666 . -1) (undo-tree-id17667 . -1) (undo-tree-id17668 . -1) (undo-tree-id17669 . -1) (undo-tree-id17670 . -1) (undo-tree-id17671 . -1) (undo-tree-id17672 . -1) (undo-tree-id17673 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -11367) (undo-tree-id17674 . -1) (undo-tree-id17675 . -1) (undo-tree-id17676 . -1) (undo-tree-id17677 . -1) (undo-tree-id17678 . -1) (undo-tree-id17679 . -1) (undo-tree-id17680 . -1) (undo-tree-id17681 . -1) 11368) nil (25968 51781 573777 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11353 11363 #s(yas--snippet nil (#s(yas--field 1 11360 11362 nil nil nil t #s(yas--exit 11363 nil))) #s(yas--exit 11363 nil) 108 nil #s(yas--field 1 11360 11362 nil nil nil t #s(yas--exit 11363 nil)) nil nil))) nil (25968 51781 573558 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11410 . 11411) (nil fontified nil 11361 . 11411) (11361 . 11411)) nil (25968 51781 573556 0) 0 nil])
([nil nil ((11411 . 11412)) nil (25968 51781 573554 0) 0 nil])
([nil nil ((11414 . 11415)) nil (25968 51781 573548 0) 0 nil])
([nil nil ((#("unwrap()" 0 8 (fontified t)) . -11481) (undo-tree-id17810 . -8) (undo-tree-id17811 . -8) (undo-tree-id17812 . -8) (undo-tree-id17813 . -8) (undo-tree-id17814 . -8) (undo-tree-id17815 . -8) (undo-tree-id17816 . -8) (undo-tree-id17817 . -8) (undo-tree-id17818 . -8) (undo-tree-id17819 . -8) (undo-tree-id17820 . -8) (undo-tree-id17821 . -8) (undo-tree-id17822 . -8) (undo-tree-id17823 . -8) 11489 (t 25968 51781 618697 858000)) nil (25968 51787 786285 0) 0 nil])
([nil nil ((#("into()." 0 4 (fontified t) 4 7 (fontified t)) . -11474) (undo-tree-id17791 . -7) (undo-tree-id17792 . -7) (undo-tree-id17793 . -7) (undo-tree-id17794 . -7) (undo-tree-id17795 . -7) (undo-tree-id17796 . -7) (undo-tree-id17797 . -7) (undo-tree-id17798 . -7) (undo-tree-id17799 . -7) (undo-tree-id17800 . -7) (undo-tree-id17801 . -7) (undo-tree-id17802 . -7) (undo-tree-id17803 . -7) (undo-tree-id17804 . -7) (undo-tree-id17805 . -7) (undo-tree-id17806 . -7) (undo-tree-id17807 . -7) (undo-tree-id17808 . -7) (undo-tree-id17809 . -7) 11481) nil (25968 51787 786269 0) 0 nil])
([nil nil ((#("dyn_" 0 4 (fontified t)) . -11470) (undo-tree-id17767 . -4) (undo-tree-id17768 . -4) (undo-tree-id17769 . -4) (undo-tree-id17770 . -4) (undo-tree-id17771 . -4) (undo-tree-id17772 . -4) (undo-tree-id17773 . -4) (undo-tree-id17774 . -4) (undo-tree-id17775 . -4) (undo-tree-id17776 . -4) (undo-tree-id17777 . -4) (undo-tree-id17778 . -4) (undo-tree-id17779 . -4) (undo-tree-id17780 . -4) (undo-tree-id17781 . -4) (undo-tree-id17782 . -4) (undo-tree-id17783 . -4) (undo-tree-id17784 . -4) (undo-tree-id17785 . -4) (undo-tree-id17786 . -4) (undo-tree-id17787 . -4) (undo-tree-id17788 . -4) (undo-tree-id17789 . -4) (undo-tree-id17790 . -4) 11474) nil (25968 51787 786248 0) 0 nil])
([nil nil ((#("device." 0 7 (fontified t)) . -11463) (undo-tree-id17738 . -7) (undo-tree-id17739 . -7) (undo-tree-id17740 . -7) (undo-tree-id17741 . -7) (undo-tree-id17742 . -7) (undo-tree-id17743 . -7) (undo-tree-id17744 . -7) (undo-tree-id17745 . -7) (undo-tree-id17746 . -7) (undo-tree-id17747 . -7) (undo-tree-id17748 . -7) (undo-tree-id17749 . -7) (undo-tree-id17750 . -7) (undo-tree-id17751 . -7) (undo-tree-id17752 . -7) (undo-tree-id17753 . -7) (undo-tree-id17754 . -7) (undo-tree-id17755 . -7) (undo-tree-id17756 . -7) (undo-tree-id17757 . -7) (undo-tree-id17758 . -7) (undo-tree-id17759 . -7) (undo-tree-id17760 . -7) (undo-tree-id17761 . -7) (undo-tree-id17762 . -7) (undo-tree-id17763 . -7) (undo-tree-id17764 . -7) (undo-tree-id17765 . -7) (undo-tree-id17766 . -7) 11470) nil (25968 51787 786221 0) 0 nil])
([nil nil ((11463 . 11465)) nil (25968 51787 786190 0) 0 nil])
([nil nil ((11463 . 11469) (#("de" 0 2 (fontified nil)) . 11463) (11463 . 11465) (#("device" 0 6 (fontified nil)) . -11463) (11463 . 11469) (#("de" 0 2 (fontified t)) . -11463) (undo-tree-id17733 . -2) (undo-tree-id17734 . -1) (undo-tree-id17735 . -2) (undo-tree-id17736 . -2) (undo-tree-id17737 . -2) 11465) nil (25968 51787 786185 0) 0 nil])
([nil nil ((apply 66 11776 12644 undo--wrap-and-run-primitive-undo 11776 12644 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12643) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12634) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12593) (#<marker at 13399 in component.rs> . -3) (#<marker at 13399 in component.rs> . -3) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12578) (#<marker at 13387 in component.rs> . -2) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12510) (#<marker at 13315 in component.rs> . -1) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12505) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12489) (#<marker at 13293 in component.rs> . -1) (#<marker at 13293 in component.rs> . -1) (#<marker at 13293 in component.rs> . -1) (#<marker at 13293 in component.rs> . -1) (#<marker at 13293 in component.rs> . -1) (#<marker at 13293 in component.rs> . -1) (#<marker at 13293 in component.rs> . -2) (#<marker at 13293 in component.rs> . -2) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12442) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12427) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12311) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12284) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12199) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12191) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12143) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12095) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12047) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -11969) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -11946) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -11910) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -11887) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -11811) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -11779) 11776))) nil (25968 51972 581334 0) 0 nil])
([nil nil ((apply -6 10931 10983 undo--wrap-and-run-primitive-undo 10931 10983 ((10965 . 10968) (10934 . 10937) 10931))) nil (25968 52158 739945 0) 0 nil] [nil nil ((apply -58 12282 12698 undo--wrap-and-run-primitive-undo 12282 12698 ((12693 . 12696) (12645 . 12648) (12645 . 12646) (#("	" 0 1 (fontified t)) . 12645) (12641 . 12645) (12627 . 12630) (12552 . 12555) (12552 . 12553) (#("	" 0 1 (fontified t)) . 12552) (12548 . 12552) (12540 . 12543) (12540 . 12541) (#("	" 0 1 (fontified t)) . 12540) (12536 . 12540) (12517 . 12520) (12517 . 12518) (#("	" 0 1 (fontified t)) . 12517) (12513 . 12517) (12463 . 12466) (12463 . 12464) (#("	" 0 1 (fontified t)) . 12463) (12459 . 12463) (12441 . 12444) (12441 . 12442) (#("	" 0 1 (fontified t)) . 12441) (12437 . 12441) (12318 . 12321) (12318 . 12319) (#("	" 0 1 (fontified t)) . 12318) (12314 . 12318) (12288 . 12291) 12282))) ((apply 58 12282 12640 undo--wrap-and-run-primitive-undo 12282 12640 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 12288) (#("    " 0 4 (fontified t)) . 12314) (12318 . 12319) (#("	" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 12318) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 12318) (#("    " 0 4 (fontified t)) . 12437) (12441 . 12442) (#("	" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 12441) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 12441) (#("    " 0 4 (fontified t)) . 12459) (12463 . 12464) (#("	" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 12463) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 12463) (#("    " 0 4 (fontified t)) . 12513) (12517 . 12518) (#("	" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 12517) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 12517) (#("    " 0 4 (fontified t)) . 12536) (12540 . 12541) (#("	" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 12540) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 12540) (#("    " 0 4 (fontified t)) . 12548) (12552 . 12553) (#("	" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 12552) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 12552) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 12627) (#("    " 0 4 (fontified t)) . 12641) (12645 . 12646) (#("	" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 12645) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 12645) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 12693) 12196))) (25968 51972 119786 0) 0 nil])
([nil nil ((apply 6 10983 11019 undo--wrap-and-run-primitive-undo 10983 11019 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -11007) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -10986) (#<marker at 10782 in component.rs> . -1) 10983))) nil (25968 52158 739941 0) 0 nil])
([nil nil ((12196 . 12203)) ((#("
		    " 0 1 (fontified t) 1 7 (fontified t)) . 12196) (undo-tree-id18011 . -7) (undo-tree-id18012 . -7) (undo-tree-id18013 . -7) (undo-tree-id18014 . -7) (undo-tree-id18015 . -7) (undo-tree-id18016 . -7) (undo-tree-id18017 . -7) (undo-tree-id18018 . -7) (undo-tree-id18019 . -7) (undo-tree-id18020 . -7) (undo-tree-id18021 . -7) (undo-tree-id18022 . -7) (undo-tree-id18023 . -7) (undo-tree-id18024 . -7) (undo-tree-id18025 . -7) (undo-tree-id18026 . -7) (undo-tree-id18027 . -7) (undo-tree-id18028 . -7) (undo-tree-id18029 . -7) (undo-tree-id18030 . -7) (undo-tree-id18031 . -7) (undo-tree-id18032 . -7) (undo-tree-id18033 . -7) (undo-tree-id18034 . -7) (undo-tree-id18035 . -7) (undo-tree-id18036 . -7) (undo-tree-id18037 . -7) (undo-tree-id18038 . -7) (undo-tree-id18039 . -7) (undo-tree-id18040 . -7) (undo-tree-id18041 . -7) (undo-tree-id18042 . -7) (undo-tree-id18043 . -7) (undo-tree-id18044 . -7) (undo-tree-id18045 . -7) (undo-tree-id18046 . -7) (undo-tree-id18047 . -7) (undo-tree-id18048 . -7) (undo-tree-id18049 . -7) (undo-tree-id18050 . -7) (undo-tree-id18051 . -7) (undo-tree-id18052 . -7) (undo-tree-id18053 . -7) (undo-tree-id18054 . -7) (undo-tree-id18055 . -7) (undo-tree-id18056 . -7) (undo-tree-id18057 . -7) (undo-tree-id18058 . -7) (undo-tree-id18059 . -7) (undo-tree-id18060 . -7) (undo-tree-id18061 . -7) (undo-tree-id18062 . -7) (undo-tree-id18063 . -7) (undo-tree-id18064 . -7) (undo-tree-id18065 . -7) (undo-tree-id18066 . -7) (undo-tree-id18067 . -7) (undo-tree-id18068 . -7) (undo-tree-id18069 . -7) (undo-tree-id18070 . -7) (undo-tree-id18071 . -7) (undo-tree-id18072 . -7) (undo-tree-id18073 . -7) (undo-tree-id18074 . -7) (undo-tree-id18075 . -7) (undo-tree-id18076 . -1) (undo-tree-id18077 . -7)) (25968 51971 900165 0) 0 nil])
([nil nil ((apply -6 10983 11026 undo--wrap-and-run-primitive-undo 10983 11026 ((11010 . 11013) (10986 . 10989) 10983))) nil (25968 52450 942324 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12304 . 12305) (nil fontified nil 12304 . 12305) (nil fontified nil 12299 . 12304) (nil fontified nil 12297 . 12299) (nil fontified nil 12296 . 12297) (nil fontified nil 12295 . 12296) (nil fontified nil 12290 . 12295) (nil fontified nil 12289 . 12290) (nil fontified nil 12281 . 12289) (nil fontified nil 12280 . 12281) (nil fontified nil 12277 . 12280) (nil fontified nil 12276 . 12277) (nil fontified nil 12274 . 12276) (nil fontified nil 12273 . 12274) (nil fontified nil 12247 . 12273) (nil fontified nil 12246 . 12247) (nil fontified nil 12240 . 12246) (nil fontified nil 12239 . 12240) (nil fontified nil 12238 . 12239) (nil fontified nil 12233 . 12238) (nil fontified nil 12225 . 12233) (nil fontified nil 12223 . 12225) (nil fontified nil 12203 . 12223) (12203 . 12305)) ((#("wasm_bindgen_futures::JsFuture::from(device.send_report_with_u8_array(2, &mut send_buf[1..18])).await;" 0 20 (face font-lock-constant-face fontified nil) 20 22 (fontified nil) 22 30 (face font-lock-type-face fontified nil) 30 35 (fontified nil) 35 36 (fontified nil rear-nonsticky t) 36 37 (fontified nil) 37 43 (fontified nil) 43 44 (fontified nil) 44 70 (fontified nil) 70 71 (fontified nil) 71 73 (fontified nil) 73 74 (face rust-ampersand-face fontified nil) 74 77 (face font-lock-keyword-face fontified nil) 77 78 (fontified nil) 78 86 (fontified nil) 86 87 (fontified nil) 87 92 (fontified nil) 92 93 (fontified nil) 93 94 (fontified nil) 94 96 (fontified nil) 96 101 (face font-lock-keyword-face fontified nil) 101 102 (rear-nonsticky nil fontified nil)) . 12203) (undo-tree-id17948 . -101) (undo-tree-id17949 . -101) (undo-tree-id17950 . -101) (undo-tree-id17951 . -101) (undo-tree-id17952 . -101) (undo-tree-id17953 . -101) (undo-tree-id17954 . -101) (undo-tree-id17955 . -101) (undo-tree-id17956 . -101) (undo-tree-id17957 . -101) (undo-tree-id17958 . -101) (undo-tree-id17959 . -101) (undo-tree-id17960 . -101) (undo-tree-id17961 . -101) (undo-tree-id17962 . -101) (undo-tree-id17963 . -101) (undo-tree-id17964 . -101) (undo-tree-id17965 . -101) (undo-tree-id17966 . -101) (undo-tree-id17967 . -101) (undo-tree-id17968 . -101) (undo-tree-id17969 . -101) (undo-tree-id17970 . -101) (undo-tree-id17971 . -101) (undo-tree-id17972 . -101) (undo-tree-id17973 . -101) (undo-tree-id17974 . -101) (undo-tree-id17975 . -101) (undo-tree-id17976 . -101) (undo-tree-id17977 . -101) (undo-tree-id17978 . -101) (undo-tree-id17979 . -101) (undo-tree-id17980 . -101) (undo-tree-id17981 . -101) (undo-tree-id17982 . -101) (undo-tree-id17983 . -101) (undo-tree-id17984 . -101) (undo-tree-id17985 . -101) (undo-tree-id17986 . -101) (undo-tree-id17987 . -101) (undo-tree-id17988 . -101) (undo-tree-id17989 . -101) (undo-tree-id17990 . -101) (undo-tree-id17991 . -101) (undo-tree-id17992 . -101) (undo-tree-id17993 . -101) (undo-tree-id17994 . -101) (undo-tree-id17995 . -101) (undo-tree-id17996 . -101) (undo-tree-id17997 . -101) (undo-tree-id17998 . -101) (undo-tree-id17999 . -101) (undo-tree-id18000 . -101) (undo-tree-id18001 . -101) (undo-tree-id18002 . -101) (undo-tree-id18003 . -101) (undo-tree-id18004 . -101) (undo-tree-id18005 . -101) (undo-tree-id18006 . -101) (undo-tree-id18007 . -101) (undo-tree-id18008 . -101) (undo-tree-id18009 . -101) (undo-tree-id18010 . -101) (nil rear-nonsticky t 12304 . 12305)) (25968 51971 626031 0) 0 nil])
([nil nil ((apply 6 10931 10976 undo--wrap-and-run-primitive-undo 10931 10976 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -10962) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -10934) 10931))) nil (25968 52450 942320 0) 0 nil])
([nil nil ((12304 . 12306) (t 25968 51948 34621 438000)) ((#(".u" 0 1 (fontified t) 1 2 (fontified t)) . 12304) (undo-tree-id17886 . -1) (undo-tree-id17887 . -2) (undo-tree-id17888 . -2) (undo-tree-id17889 . -2) (undo-tree-id17890 . -2) (undo-tree-id17891 . -2) (undo-tree-id17892 . -1) (undo-tree-id17893 . -1) (undo-tree-id17894 . -1) (undo-tree-id17895 . -1) (undo-tree-id17896 . -1) (undo-tree-id17897 . -1) (undo-tree-id17898 . -1) (undo-tree-id17899 . -1) (undo-tree-id17900 . -1) (undo-tree-id17901 . -1) (undo-tree-id17902 . -1) (undo-tree-id17903 . -1) (undo-tree-id17904 . -1) (undo-tree-id17905 . -1) (undo-tree-id17906 . -1) (undo-tree-id17907 . -1) (undo-tree-id17908 . -1) (undo-tree-id17909 . -1) (undo-tree-id17910 . -1) (undo-tree-id17911 . -1) (undo-tree-id17912 . -1) (undo-tree-id17913 . -1) (undo-tree-id17914 . -1) (undo-tree-id17915 . -1) (undo-tree-id17916 . -1) (undo-tree-id17917 . -1) (undo-tree-id17918 . -1) (undo-tree-id17919 . -1) (undo-tree-id17920 . -1) (undo-tree-id17921 . -1) (undo-tree-id17922 . -1) (undo-tree-id17923 . -1) (undo-tree-id17924 . -1) (undo-tree-id17925 . -1) (undo-tree-id17926 . -1) (undo-tree-id17927 . -1) (undo-tree-id17928 . -1) (undo-tree-id17929 . -1) (undo-tree-id17930 . -1) (undo-tree-id17931 . -1) (undo-tree-id17932 . -1) (undo-tree-id17933 . -1) (undo-tree-id17934 . -1) (undo-tree-id17935 . -1) (undo-tree-id17936 . -1) (undo-tree-id17937 . -1) (undo-tree-id17938 . -1) (undo-tree-id17939 . -1) (undo-tree-id17940 . -1) (undo-tree-id17941 . -1) (undo-tree-id17942 . -1) (undo-tree-id17943 . -1) (undo-tree-id17944 . -1) (undo-tree-id17945 . -1) (undo-tree-id17946 . -1) (undo-tree-id17947 . -2)) (25968 51971 323928 0) 0 nil])
([nil nil ((11776 . 11779) (t 25968 52450 986402 84000)) nil (25968 52521 399396 0) 0 nil])
([nil nil ((apply yas--snippet-revive 12305 12313 #s(yas--snippet nil nil #s(yas--exit #<marker at 13001 in component.rs> nil) 109 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 13001 in component.rs> nil) 109 nil nil nil nil)) (12305 . 12313) (#("unwrap()$0" 0 10 (fontified nil)) . 12305) (12305 . 12315) (#("u" 0 1 (fontified nil)) . 12305) (12305 . 12306) (#("unwrap()" 0 8 (fontified nil)) . -12305) (12305 . 12313) (#("u" 0 1 (fontified t)) . -12305) (undo-tree-id17824 . -1) (undo-tree-id17825 . -1) (undo-tree-id17826 . -1) (undo-tree-id17827 . -1) (undo-tree-id17828 . -1) 12306) ((12305 . 12306) (#("unwrap()" 0 8 (fontified nil)) . 12305) (12305 . 12313) (#("u" 0 1 (fontified nil)) . 12305) (12305 . 12306) (#("unwrap()$0" 0 10 (fontified nil)) . 12305) (12305 . 12315) (#("unwrap()" 0 8 (fontified t)) . 12305) (undo-tree-id17829 . -8) (undo-tree-id17830 . -8) (undo-tree-id17831 . -8) (undo-tree-id17832 . -8) (undo-tree-id17833 . -8) (undo-tree-id17834 . -8) (undo-tree-id17835 . -8) (undo-tree-id17836 . -8) (undo-tree-id17837 . -8) (undo-tree-id17838 . -8) (undo-tree-id17839 . -8) (undo-tree-id17840 . -8) (undo-tree-id17841 . -8) (undo-tree-id17842 . -8) (undo-tree-id17843 . -8) (undo-tree-id17844 . -8) (undo-tree-id17845 . -8) (undo-tree-id17846 . -8) (undo-tree-id17847 . -8) (undo-tree-id17848 . -8) (undo-tree-id17849 . -8) (undo-tree-id17850 . -8) (undo-tree-id17851 . -8) (undo-tree-id17852 . -8) (undo-tree-id17853 . -8) (undo-tree-id17854 . -8) (undo-tree-id17855 . -8) (undo-tree-id17856 . -8) (undo-tree-id17857 . -8) (undo-tree-id17858 . -8) (undo-tree-id17859 . -8) (undo-tree-id17860 . -8) (undo-tree-id17861 . -8) (undo-tree-id17862 . -8) (undo-tree-id17863 . -8) (undo-tree-id17864 . -8) (undo-tree-id17865 . -8) (undo-tree-id17866 . -8) (undo-tree-id17867 . -8) (undo-tree-id17868 . -8) (undo-tree-id17869 . -8) (undo-tree-id17870 . -8) (undo-tree-id17871 . -8) (undo-tree-id17872 . -8) (undo-tree-id17873 . -8) (undo-tree-id17874 . -8) (undo-tree-id17875 . -8) (undo-tree-id17876 . -8) (undo-tree-id17877 . -8) (undo-tree-id17878 . -8) (undo-tree-id17879 . -8) (undo-tree-id17880 . -8) (undo-tree-id17881 . -8) (undo-tree-id17882 . -8) (undo-tree-id17883 . -8) (undo-tree-id17884 . -8) (undo-tree-id17885 . -8) (t 25968 51952 466755 957000)) (25968 51952 422227 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -11776) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#("e" 0 1 (fontified t)) . -11777) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("s" 0 1 (fontified t)) . -11778) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) 11779) nil (25968 52521 399392 0) 0 nil])
nil
([nil nil ((#("0" 0 1 (fontified t)) . -10954) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("0" 0 1 (fontified t)) . -10955) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) 10956 (t 25968 52450 986402 84000)) nil (25968 52521 399347 0) 0 nil])
([nil nil ((10954 . 10956)) nil (25968 52521 399309 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -10973) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 10974) nil (25968 52521 399307 0) 0 nil])
([nil nil ((10973 . 10974)) nil (25968 52521 399296 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -10973) (undo-tree-id39 . -1) (undo-tree-id40 . -1) 10974) nil (25968 52521 399295 0) 0 nil])
([nil nil ((10973 . 10979)) nil (25968 52521 399291 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -10975) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("0" 0 1 (fontified t)) . -10976) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("0" 0 1 (fontified t)) . -10977) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("c" 0 1 (fontified t)) . -10978) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) 10979) nil (25968 52521 399287 0) 0 nil])
([nil nil ((10975 . 10979)) nil (25968 52521 399217 0) 0 nil])
([nil nil ((apply -6 10931 10988 undo--wrap-and-run-primitive-undo 10931 10988 ((10965 . 10968) (10934 . 10937) 10931))) nil (25968 53015 210172 0) 0 nil])
([nil nil ((apply 6 10988 11024 undo--wrap-and-run-primitive-undo 10988 11024 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -11012) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -10991) (#<marker at 10782 in component.rs> . -3) 10988))) nil (25968 53017 977757 0) 0 nil] [nil nil ((apply -6 10988 11037 undo--wrap-and-run-primitive-undo 10988 11037 ((11018 . 11021) (10991 . 10994) 10988))) ((apply 6 10988 11031 undo--wrap-and-run-primitive-undo 10988 11031 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 10991) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 11018) 10988))) (25968 53015 209848 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -11295) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) 11296 (t 25968 53018 24813 694000)) nil (25968 53034 445494 0) 0 nil])
nil
([nil nil ((11295 . 11296)) nil (25968 53034 445469 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -11295) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) 11296 (t 25968 53034 492181 981000)) nil (25968 53052 27208 0) 0 nil])
([nil nil ((11295 . 11296)) nil (25968 53052 27148 0) 0 nil])
([nil nil ((apply -6 10988 11031 undo--wrap-and-run-primitive-undo 10988 11031 ((11015 . 11018) (10991 . 10994) 10988))) nil (25968 53060 505680 0) 0 nil])
([nil nil ((apply 12 10931 11018 undo--wrap-and-run-primitive-undo 10931 11018 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -11006) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -10985) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -10962) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -10934) (#<marker at 10727 in component.rs> . -3) 10931))) nil (25968 53060 505679 0) 0 nil])
([nil nil ((apply -6 10982 11025 undo--wrap-and-run-primitive-undo 10982 11025 ((11009 . 11012) (10985 . 10988) 10982))) nil (25968 53060 505674 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -12397) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) 12398 (t 25968 53060 550390 466000)) nil (25969 14134 440807 0) 0 nil])
([nil nil ((12397 . 12398)) nil (25969 14134 440791 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -12414) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) 12415) nil (25969 14134 440789 0) 0 nil])
([nil nil ((12414 . 12415)) nil (25969 14134 440770 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -10954) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) 10955 (t 25969 14134 487314 73000)) nil (25969 15788 450906 0) 0 nil])
([nil nil ((10954 . 10955)) nil (25969 15788 450889 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -10976) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#("0" 0 1 (fontified t)) . -10977) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (#("0" 0 1 (fontified t)) . -10978) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) 10979) nil (25969 15788 450884 0) 0 nil])
([nil nil ((10976 . 10977)) nil (25969 15788 450803 0) 0 nil])
([nil nil ((apply -6 10931 10986 undo--wrap-and-run-primitive-undo 10931 10986 ((10965 . 10968) (10934 . 10937) 10931))) nil (25969 32270 131456 0) 0 nil])
([nil nil ((apply 6 10986 11022 undo--wrap-and-run-primitive-undo 10986 11022 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -11010) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -10989) (#<marker at 10782 in component.rs> . -2) 10986))) nil (25969 32272 975792 0) 0 nil] [nil nil ((apply -6 10986 11035 undo--wrap-and-run-primitive-undo 10986 11035 ((11016 . 11019) (10989 . 10992) 10986))) ((apply 6 10986 11029 undo--wrap-and-run-primitive-undo 10986 11029 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 10989) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 11016) 10986))) (25969 32270 131126 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -12395) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) 12396 (t 25969 32273 21804 472000)) nil (25969 32364 952740 0) 0 nil])
nil
([nil nil ((12395 . 12396)) nil (25969 32364 952726 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -12412) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) 12413) nil (25969 32364 952724 0) 0 nil])
([nil nil ((12412 . 12413)) nil (25969 32364 952701 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -11309) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) 11310 (t 25969 32364 998510 828000)) nil (25969 46576 888026 0) 0 nil])
([nil nil ((11309 . 11310)) nil (25969 46576 887999 0) 0 nil])
([nil nil ((#("device.open();" 0 14 (fontified t)) . 11679) (undo-tree-id469 . -14) (undo-tree-id470 . -14) (undo-tree-id471 . -11) (undo-tree-id472 . -11) (undo-tree-id473 . -11) (undo-tree-id474 . -11) (undo-tree-id475 . -11) (undo-tree-id476 . -11) (undo-tree-id477 . -11) (undo-tree-id478 . -11) (undo-tree-id479 . -11) (undo-tree-id480 . -11) (undo-tree-id481 . -11) (undo-tree-id482 . -4) (undo-tree-id483 . -6) (undo-tree-id484 . -8) (undo-tree-id485 . -9) (undo-tree-id486 . -10) (undo-tree-id487 . -12) (undo-tree-id488 . -13) (undo-tree-id489 . -14) (undo-tree-id490 . -14) (undo-tree-id491 . -14) (undo-tree-id492 . -14) (undo-tree-id493 . -14) (undo-tree-id494 . -14) (undo-tree-id495 . -14) (undo-tree-id496 . -14) (undo-tree-id497 . -14) (undo-tree-id498 . -14) (undo-tree-id499 . -14) (undo-tree-id500 . -14) (undo-tree-id501 . -14) (undo-tree-id502 . -14) (undo-tree-id503 . -14) (undo-tree-id504 . -14) (undo-tree-id505 . -14) (undo-tree-id506 . -14) (undo-tree-id507 . -14) (undo-tree-id508 . -14) (undo-tree-id509 . -14) (undo-tree-id510 . -14) (undo-tree-id511 . -14) (undo-tree-id512 . -14) (undo-tree-id513 . -14) (undo-tree-id514 . -14) (undo-tree-id515 . -14) (undo-tree-id516 . -1) (undo-tree-id517 . -2) (undo-tree-id518 . -4) (undo-tree-id519 . -5) (undo-tree-id520 . -6) (undo-tree-id521 . -8) (undo-tree-id522 . -8) (undo-tree-id523 . -8) (undo-tree-id524 . -10) (undo-tree-id525 . -11) (undo-tree-id526 . -12) (undo-tree-id527 . -13) (undo-tree-id528 . -14) (undo-tree-id529 . -14) (undo-tree-id530 . -14) (undo-tree-id531 . -14) (undo-tree-id532 . -14) (undo-tree-id533 . -14) (undo-tree-id534 . -14) (undo-tree-id535 . -14) (undo-tree-id536 . -14) (undo-tree-id537 . -14) (undo-tree-id538 . -14) (undo-tree-id539 . -14) (undo-tree-id540 . -14) (undo-tree-id541 . -14) 11693 (t 25969 46576 934613 506000)) nil (25969 46799 628319 0) 0 nil])
([nil nil ((#("promise" 0 7 (fontified t)) . -11719) (undo-tree-id450 . -7) (undo-tree-id451 . -7) (undo-tree-id452 . -1) (undo-tree-id453 . -2) (undo-tree-id454 . -3) (undo-tree-id455 . -4) (undo-tree-id456 . -5) (undo-tree-id457 . -6) (undo-tree-id458 . -7) (undo-tree-id459 . -7) (undo-tree-id460 . -7) (undo-tree-id461 . -7) (undo-tree-id462 . -7) (undo-tree-id463 . -7) (undo-tree-id464 . -7) (undo-tree-id465 . -7) (undo-tree-id466 . -7) (undo-tree-id467 . -7) (undo-tree-id468 . -7) 11726) nil (25969 46799 628247 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11732 . 11733) (nil fontified nil 11719 . 11733) (11719 . 11733)) nil (25969 46799 628219 0) 0 nil])
([nil nil ((#(";" 0 1 (rear-nonsticky t fontified t)) . -11732) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) 11733) nil (25969 46799 628216 0) 0 nil])
([nil nil ((#("		let promise = " 0 2 (fontified t) 2 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face font-lock-variable-name-face fontified t) 13 16 (fontified t)) . 11663) (undo-tree-id305 . -16) (undo-tree-id306 . -16) (undo-tree-id307 . -16) (undo-tree-id308 . -16) (undo-tree-id309 . -16) (undo-tree-id310 . -16) (undo-tree-id311 . -16) (undo-tree-id312 . -16) (undo-tree-id313 . -16) (undo-tree-id314 . -16) (undo-tree-id315 . -16) (undo-tree-id316 . -16) (undo-tree-id317 . -16) (undo-tree-id318 . -16) (undo-tree-id319 . -16) (undo-tree-id320 . -16) (undo-tree-id321 . -16) (undo-tree-id322 . -16) (undo-tree-id323 . -16) (undo-tree-id324 . -16) (undo-tree-id325 . -16) (undo-tree-id326 . -16) (undo-tree-id327 . -16) (undo-tree-id328 . -16) (undo-tree-id329 . -16) (undo-tree-id330 . -16) (undo-tree-id331 . -16) (undo-tree-id332 . -16) (undo-tree-id333 . -16) (undo-tree-id334 . -16) (undo-tree-id335 . -16) (undo-tree-id336 . -16) (undo-tree-id337 . -16) (undo-tree-id338 . -16) (undo-tree-id339 . -16) (undo-tree-id340 . -16) (undo-tree-id341 . -16) (undo-tree-id342 . -16) (undo-tree-id343 . -16) (undo-tree-id344 . -16) (undo-tree-id345 . -16) (undo-tree-id346 . -16) (undo-tree-id347 . -16) (undo-tree-id348 . -16) (undo-tree-id349 . -16) (undo-tree-id350 . -16) (undo-tree-id351 . -16) (undo-tree-id352 . -16) (undo-tree-id353 . -16) (undo-tree-id354 . -16) (undo-tree-id355 . -16) (undo-tree-id356 . -16) (undo-tree-id357 . -16) (undo-tree-id358 . -16) (undo-tree-id359 . -16) (undo-tree-id360 . -16) (undo-tree-id361 . -16) (undo-tree-id362 . -16) (undo-tree-id363 . -16) (undo-tree-id364 . -16) (undo-tree-id365 . -16) (undo-tree-id366 . -16) (undo-tree-id367 . -16) (undo-tree-id368 . -16) (undo-tree-id369 . -16) (undo-tree-id370 . -16) (undo-tree-id371 . -16) (undo-tree-id372 . -16) (undo-tree-id373 . -16) (undo-tree-id374 . -16) (undo-tree-id375 . -16) (undo-tree-id376 . -16) (undo-tree-id377 . -16) (undo-tree-id378 . -16) (undo-tree-id379 . -16) (undo-tree-id380 . -16) (undo-tree-id381 . -16) (undo-tree-id382 . -16) (undo-tree-id383 . -16) (undo-tree-id384 . -16) (undo-tree-id385 . -16) (undo-tree-id386 . -16) (undo-tree-id387 . -16) (undo-tree-id388 . -16) (undo-tree-id389 . -16) (undo-tree-id390 . -16) (undo-tree-id391 . -16) (undo-tree-id392 . -16) (undo-tree-id393 . -16) (undo-tree-id394 . -16) (undo-tree-id395 . -16) (undo-tree-id396 . -16) (undo-tree-id397 . -16) (undo-tree-id398 . -16) (undo-tree-id399 . -16) (undo-tree-id400 . -16) (undo-tree-id401 . -16) (undo-tree-id402 . -16) (undo-tree-id403 . -16) (undo-tree-id404 . -16) (undo-tree-id405 . -16) (undo-tree-id406 . -16) (undo-tree-id407 . -16) (undo-tree-id408 . -16) (undo-tree-id409 . -16) (undo-tree-id410 . -16) (undo-tree-id411 . -16) (undo-tree-id412 . -16) (undo-tree-id413 . -16) (undo-tree-id414 . -16) (undo-tree-id415 . -16) (undo-tree-id416 . -16) (undo-tree-id417 . -16) (undo-tree-id418 . -16) (undo-tree-id419 . -16) (undo-tree-id420 . -16) (undo-tree-id421 . -16) (undo-tree-id422 . -16) (undo-tree-id423 . -16) (undo-tree-id424 . -16) (undo-tree-id425 . -16) (undo-tree-id426 . -16) (undo-tree-id427 . -16) (undo-tree-id428 . -16) (undo-tree-id429 . -16) (undo-tree-id430 . -16) (undo-tree-id431 . -16)) nil (25969 46799 628190 0) 0 nil])
([nil nil ((11663 . 11665)) nil (25969 46799 628049 0) 0 nil])
([nil nil ((11665 . 11667)) nil (25969 46799 628048 0) 0 nil])
([nil nil ((11667 . 11678)) nil (25969 46799 628043 0) 0 nil])
([nil nil ((12641 . 12642) (#("		" 0 2 (fontified t)) . -12640) (undo-tree-id609 . -2) (undo-tree-id610 . -2) (undo-tree-id611 . -2) (undo-tree-id612 . -2) (undo-tree-id613 . -2) (undo-tree-id614 . -2) (undo-tree-id615 . -2) (undo-tree-id616 . -2) (undo-tree-id617 . -2) (undo-tree-id618 . -2) (undo-tree-id619 . -2) (undo-tree-id620 . -2) (undo-tree-id621 . -2) (undo-tree-id622 . -2) (undo-tree-id623 . -2) (12642 . 12642) (12642 . 12643) (t 25969 46799 677566 617000)) nil (25969 46809 832949 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -12640) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (#("." 0 1 (fontified t)) . -12641) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) 12642) nil (25969 46809 832932 0) 0 nil])
([nil nil ((12640 . 12642)) nil (25969 46809 832916 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -12640) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -12641) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) 12642) nil (25969 46809 832913 0) 0 nil])
([nil nil ((12640 . 12642)) nil (25969 46809 832881 0) 0 nil])
([nil nil ((12640 . 12642) 12642) nil (25969 46809 832880 0) 0 nil])
([nil nil ((12644 . 12652)) nil (25969 46809 832879 0) 0 nil])
([nil nil ((12652 . 12656)) nil (25969 46809 832878 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face fontified t)) . -12652) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (#("v" 0 1 (face font-lock-comment-face fontified t)) . -12653) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (#("c" 0 1 (face font-lock-comment-face fontified t)) . -12654) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -12655) (undo-tree-id563 . -1) (undo-tree-id564 . -1) 12656) nil (25969 46809 832875 0) 0 nil])
([nil nil ((12652 . 12656)) nil (25969 46809 832840 0) 0 nil])
([nil nil ((11602 . 11604) (#("		" 0 2 (fontified nil)) . 11601) (undo-tree-id630 . -2) (11600 . 11604) (t 25969 46809 879561 117000)) nil (25969 47191 353637 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12041 . 12042) (nil fontified nil 11604 . 12042) (11604 . 12042)) nil (25969 47191 353634 0) 0 nil])
([nil nil ((12004 . 12006) (#("    " 0 4 (fontified t)) . 12004) (11969 . 11971) (#("    " 0 4 (fontified t)) . 11969) (11932 . 11934) (#("    " 0 4 (fontified t)) . 11932) (11898 . 11900) (#("    " 0 4 (fontified t)) . 11898) (11860 . 11862) (#("    " 0 4 (fontified t)) . 11860) (11828 . 11830) (#("    " 0 4 (fontified t)) . 11828) (11787 . 11789) (#("    " 0 4 (fontified t)) . 11787) (11732 . 11734) (#("    " 0 4 (fontified t)) . 11732) (11642 . 11648) (#("        " 0 8 (fontified t)) . 11642) (#(" " 0 1 (fontified t)) . -11604) 11603) nil (25969 47191 353631 0) 0 nil])
([nil nil ((#("handle_hid_input_report_event(&_evt);" 0 30 (fontified t) 30 31 (face rust-ampersand-face fontified t) 31 37 (fontified t)) . -11692) (undo-tree-id628 . -37) (undo-tree-id629 . -37) 11729) nil (25969 47191 353625 0) 0 nil])
([nil nil ((11692 . 11698) (#(" " 0 1 (fontified nil)) . 11692) (#(" " 0 1 (fontified nil)) . 11691) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (11692 . 11693)) nil (25969 47191 353621 0) 0 nil])
([nil nil ((11691 . 11695)) nil (25969 47191 353606 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -11764) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (#(":" 0 1 (fontified t)) . -11765) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (#("d" 0 1 (fontified t)) . -11766) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (#("e" 0 1 (fontified t)) . -11767) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (#("b" 0 1 (fontified t)) . -11768) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (#("u" 0 1 (fontified t)) . -11769) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (#("g" 0 1 (fontified t)) . -11770) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (#("!" 0 1 (face font-lock-preprocessor-face fontified t)) . -11771) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) 11772 (t 25969 47191 400063 365000)) nil (25969 47236 392446 0) 0 nil])
([nil nil ((#("		log(\"closure={:?}\", &closure);" 0 2 (fontified t) 2 5 (fontified t) 5 6 (fontified t) 6 20 (face font-lock-string-face fontified t) 20 22 (fontified t) 22 23 (face rust-ampersand-face fontified t) 23 32 (fontified t)) . 11759) (undo-tree-id659 . -5) (undo-tree-id660 . -5) (undo-tree-id661 . -5) (undo-tree-id662 . -5) (undo-tree-id663 . -5) (undo-tree-id664 . -5) (undo-tree-id665 . -5) (undo-tree-id666 . -5) (undo-tree-id667 . -5) (undo-tree-id668 . -5) (undo-tree-id669 . -5) (undo-tree-id670 . -5) (undo-tree-id671 . -5) (undo-tree-id672 . -5) (undo-tree-id673 . -5) (undo-tree-id674 . -5) (undo-tree-id675 . -5) (undo-tree-id676 . -5) (undo-tree-id677 . -5) (undo-tree-id678 . -5) (undo-tree-id679 . -5) (undo-tree-id680 . -5) (undo-tree-id681 . -5) (undo-tree-id682 . -32) (undo-tree-id683 . -32) (undo-tree-id684 . -32) (undo-tree-id685 . -32) (undo-tree-id686 . -32) (undo-tree-id687 . -32) (undo-tree-id688 . -32)) nil (25969 47236 392317 0) 0 nil])
([nil nil ((#("		log::debug!(\"as_ref={:?}\", &jsval);" 0 2 (fontified t) 2 5 (face font-lock-constant-face fontified t) 5 7 (fontified t) 7 13 (face font-lock-preprocessor-face fontified t) 13 14 (fontified t) 14 27 (face font-lock-string-face fontified t) 27 29 (fontified t) 29 30 (face rust-ampersand-face fontified t) 30 37 (fontified t)) . 11792) (undo-tree-id641 . -36) (undo-tree-id642 . -36) (undo-tree-id643 . -36) (undo-tree-id644 . -36) (undo-tree-id645 . -36) (undo-tree-id646 . -36) (undo-tree-id647 . -36) (undo-tree-id648 . -36) (undo-tree-id649 . -36) (undo-tree-id650 . -37) (undo-tree-id651 . -37) (undo-tree-id652 . -37) (undo-tree-id653 . -37) (undo-tree-id654 . -37) (undo-tree-id655 . -37) (undo-tree-id656 . -37) (undo-tree-id657 . -37) (undo-tree-id658 . -37)) nil (25969 47236 392283 0) 0 nil])
([nil nil ((#("		log::debug!(\"function={:?}\", &cb);" 0 2 (fontified t) 2 5 (face font-lock-constant-face fontified t) 5 7 (fontified t) 7 13 (face font-lock-preprocessor-face fontified t) 13 14 (fontified t) 14 29 (face font-lock-string-face fontified t) 29 31 (fontified t) 31 32 (face rust-ampersand-face fontified t) 32 36 (fontified t)) . 11827) (undo-tree-id631 . -36) (undo-tree-id632 . -36) (undo-tree-id633 . -36) (undo-tree-id634 . -36) (undo-tree-id635 . -36) (undo-tree-id636 . -36) (undo-tree-id637 . -36) (undo-tree-id638 . -36) (undo-tree-id639 . -36) (undo-tree-id640 . -36)) nil (25969 47236 392260 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -11830) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (#("e" 0 1 (fontified t)) . -11831) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (#("v" 0 1 (fontified t)) . -11832) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) 11833 (t 25969 47236 439942 447000)) nil (25969 47246 200088 0) 0 nil])
([nil nil ((11830 . 11833)) nil (25969 47246 200948 0) 0 nil])
([nil nil ((11833 . 11834)) nil (25969 47252 909633 0) 0 nil] [nil nil ((12563 . 12569) (#("ce.send_report_with_u8_array(2, &mut send_buf[1..18])).await;
			match res {
			    Err(err) => logging::log!(\"{:?}\", err),
			    _ => {},
			}
			//		    std::thread::sleep(std::time::Duration::from_millis(1));
		    } else {
			logging::log!(\"Device is not opend\");
		    }

		}

		//close device" 0 2 (fontified t) 2 3 (fontified t) 3 30 (fontified t) 30 32 (fontified t) 32 33 (face rust-ampersand-face fontified t) 33 36 (face font-lock-keyword-face fontified t) 36 37 (fontified t) 37 45 (fontified t) 45 47 (fontified t) 47 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 55 (fontified t) 55 60 (face font-lock-keyword-face fontified t) 60 62 (fontified t) 62 64 (fontified t) 64 65 (fontified t) 65 70 (face font-lock-keyword-face fontified t) 70 71 (fontified t) 71 77 (fontified t) 77 79 (fontified t) 79 80 (fontified t) 80 84 (fontified t) 84 87 (face font-lock-type-face fontified t) 87 91 (fontified t) 91 94 (fontified t) 94 95 (syntax-table (1) fontified t) 95 96 (fontified t) 96 103 (face font-lock-constant-face fontified t) 103 105 (fontified t) 105 109 (face font-lock-preprocessor-face fontified t) 109 110 (fontified t) 110 114 (face font-lock-string-face fontified t) 114 116 (face font-lock-string-face fontified t) 116 119 (fontified t) 119 121 (fontified t) 121 124 (fontified t) 124 126 (fontified t) 126 127 (fontified t) 127 131 (fontified t) 131 134 (fontified t) 134 135 (syntax-table (1) fontified t) 135 138 (fontified t) 138 140 (fontified t) 140 142 (fontified t) 142 143 (fontified t) 143 144 (fontified t) 144 145 (fontified t) 145 147 (fontified t) 147 148 (fontified t) 148 150 (face font-lock-comment-delimiter-face fontified t) 150 156 (face font-lock-comment-delimiter-face fontified t) 156 157 (face font-lock-comment-face fontified t) 157 159 (face font-lock-comment-face fontified t) 159 161 (face font-lock-comment-face fontified t) 161 167 (face font-lock-comment-face fontified t) 167 169 (face font-lock-comment-face fontified t) 169 175 (face font-lock-comment-face fontified t) 175 178 (face font-lock-comment-face fontified t) 178 179 (face font-lock-comment-face fontified t) 179 180 (face font-lock-comment-face fontified t) 180 184 (face font-lock-comment-face fontified t) 184 186 (face font-lock-comment-face fontified t) 186 194 (face font-lock-comment-face fontified t) 194 213 (face font-lock-comment-face fontified t) 213 215 (fontified t) 215 219 (fontified t) 219 221 (fontified t) 221 225 (face font-lock-keyword-face fontified t) 225 228 (fontified t) 228 230 (fontified t) 230 231 (fontified t) 231 238 (face font-lock-constant-face fontified t) 238 240 (fontified t) 240 244 (face font-lock-preprocessor-face fontified t) 244 245 (fontified t) 245 249 (face font-lock-string-face fontified t) 249 266 (face font-lock-string-face fontified t) 266 268 (fontified t) 268 269 (fontified t) 269 271 (fontified t) 271 275 (fontified t) 275 276 (fontified t) 276 277 (fontified t) 277 278 (fontified t) 278 280 (fontified t) 280 281 (fontified t rear-nonsticky t) 281 282 (fontified t) 282 283 (fontified t) 283 285 (fontified t) 285 287 (face font-lock-comment-delimiter-face fontified t) 287 299 (face font-lock-comment-face fontified t)) . 12642) (undo-tree-id813 . -230) (undo-tree-id814 . -215) (undo-tree-id815 . -147) (undo-tree-id816 . -126) (undo-tree-id817 . -126) (undo-tree-id818 . -126) (undo-tree-id819 . -126) (undo-tree-id820 . -126) (undo-tree-id821 . -126) (undo-tree-id822 . -230) (undo-tree-id823 . -126) (undo-tree-id824 . -126) (undo-tree-id825 . -277) (undo-tree-id826 . -281) (undo-tree-id827 . -276) (11830 . 11836) (#("dev" 0 3 (fontified t)) . -11830) (undo-tree-id828 . -3) (undo-tree-id829 . -1) (undo-tree-id830 . -2) (undo-tree-id831 . -2) (undo-tree-id832 . -3) (undo-tree-id833 . -3) 11833) ((11830 . 11833) (#("device" 0 6 (fontified t)) . 11830) (12642 . 12941) (#("device" 0 6 (fontified t)) . 12563) (undo-tree-id873 . -6)) (25969 47246 200042 0) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -11833) (undo-tree-id932 . -1) (undo-tree-id933 . -1) 11834) nil (25969 47252 909632 0) 0 nil])
nil
([nil nil ((11833 . 11834)) nil (25969 47252 909627 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -11830) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (#("e" 0 1 (fontified t)) . -11831) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (#("v" 0 1 (fontified t)) . -11832) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (#("i" 0 1 (fontified t)) . -11833) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) 11834) nil (25969 47252 909623 0) 0 nil])
([nil nil ((11830 . 11831)) nil (25969 47252 909569 0) 0 nil])
([nil nil ((11830 . 11836)) nil (25969 47252 909568 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11836) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) 11837) nil (25969 47252 909564 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -11830) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (#("e" 0 1 (fontified t)) . -11831) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (#("v" 0 1 (fontified t)) . -11832) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (#("i" 0 1 (fontified t)) . -11833) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (#("c" 0 1 (fontified t)) . -11834) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (#("e" 0 1 (fontified t)) . -11835) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) 11836 (t 25969 47252 957983 395000)) nil (25969 47279 442875 0) 0 nil])
([nil nil ((11830 . 11832)) nil (25969 47279 442561 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -11831) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) 11832) nil (25969 47279 442559 0) 0 nil])
([nil nil ((11831 . 11832)) nil (25969 47279 442548 0) 0 nil])
([nil nil ((11830 . 11837) (#("ui" 0 2 (fontified nil)) . 11830) (11830 . 11832) (#("uistate" 0 7 (fontified nil)) . -11830) (11830 . 11837) (#("ui" 0 2 (fontified t)) . -11830) (undo-tree-id944 . -2) (undo-tree-id945 . -2) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -2) (undo-tree-id960 . -2) (undo-tree-id961 . -2) (undo-tree-id962 . -2) (undo-tree-id963 . -2) (undo-tree-id964 . -2) (undo-tree-id965 . -2) (undo-tree-id966 . -2) 11832) nil (25969 47279 442545 0) 0 nil])
([nil nil ((11837 . 11839)) nil (25969 47279 442519 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11838 11843 #s(yas--snippet nil nil #s(yas--exit 11843 nil) 124 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11843 nil) 124 nil nil nil nil)) (11838 . 11843) (#("get()$0" 0 7 (fontified nil)) . 11838) (11838 . 11845) (#("g" 0 1 (fontified nil)) . 11838) (11838 . 11839) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -11838) (11838 . 11858) (#("g" 0 1 (fontified t)) . -11838) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) 11839) nil (25969 47279 442517 0) 0 nil])
([nil nil ((11843 . 11845)) nil (25969 47279 442507 0) 0 nil])
([nil nil ((11844 . 11854) (#("d" 0 1 (fontified nil)) . 11844) (11844 . 11845) (#("hid_device" 0 10 (fontified nil)) . -11844) (11844 . 11854) (#("d" 0 1 (fontified t)) . -11844) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) 11845) nil (25969 47279 442503 0) 0 nil])
([nil nil ((11854 . 11855) (t 25969 47279 494042 920000)) nil (25969 47317 438736 0) 0 nil])
([nil nil ((11854 . 11857)) nil (25969 47317 438734 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -11855) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (#("b" 0 1 (fontified t)) . -11856) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) 11857) nil (25969 47317 438732 0) 0 nil])
([nil nil ((11855 . 11857)) nil (25969 47317 438713 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11854) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (#("o" 0 1 (fontified t)) . -11855) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (#("n" 0 1 (fontified t)) . -11856) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) 11857) nil (25969 47317 438709 0) 0 nil])
([nil nil ((11854 . 11855)) nil (25969 47317 438650 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11854) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) 11855) nil (25969 47317 438648 0) 0 nil])
([nil nil ((11854 . 11856)) nil (25969 47317 438640 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11855 11863 #s(yas--snippet nil nil #s(yas--exit 11863 nil) 125 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11863 nil) 125 nil nil nil nil)) (11855 . 11863) (#("unwrap()$0" 0 10 (fontified nil)) . 11855) (11855 . 11865) (#("u" 0 1 (fontified nil)) . 11855) (11855 . 11856) (#("unwrap()" 0 8 (fontified nil)) . -11855) (11855 . 11863) (#("u" 0 1 (fontified t)) . -11855) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) 11856) nil (25969 47317 438637 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11863) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) 11864) nil (25969 47317 438620 0) 0 nil])
([nil nil ((11472 . 11475) (t 25969 47317 489259 809000)) nil (25969 47343 26112 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11473 11480 #s(yas--snippet nil nil #s(yas--exit 11480 nil) 126 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11480 nil) 126 nil nil nil nil)) (11473 . 11480) (#("clone()$0" 0 9 (fontified nil)) . 11473) (11473 . 11482) (#("cl" 0 2 (fontified nil)) . 11473) (11473 . 11475) (#("clone() (as Clone)" 0 18 (fontified nil)) . -11473) (11473 . 11491) (#("cl" 0 2 (fontified t)) . -11473) (undo-tree-id1403 . -2) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -2) (undo-tree-id1409 . -2) (undo-tree-id1410 . -2) (undo-tree-id1411 . -2) 11475) nil (25969 47343 26106 0) 0 nil])
([nil nil ((#("hid_" 0 4 (fontified t)) . -11852) (undo-tree-id1455 . -4) (undo-tree-id1456 . -4) (undo-tree-id1457 . -4) (undo-tree-id1458 . -4) (undo-tree-id1459 . -4) (undo-tree-id1460 . -4) (undo-tree-id1461 . -4) (undo-tree-id1462 . -4) (undo-tree-id1463 . -4) (undo-tree-id1464 . -4) (undo-tree-id1465 . -4) (undo-tree-id1466 . -4) (undo-tree-id1467 . -4) (undo-tree-id1468 . -4) (undo-tree-id1469 . -4) (undo-tree-id1470 . -4) (undo-tree-id1471 . -4) (undo-tree-id1472 . -4) (undo-tree-id1473 . -4) (undo-tree-id1474 . -4) 11856 (t 25969 47343 74071 265000)) nil (25969 47348 72601 0) 0 nil])
([nil nil ((#("get()." 0 6 (fontified t)) . -11846) (undo-tree-id1434 . -6) (undo-tree-id1435 . -6) (undo-tree-id1436 . -6) (undo-tree-id1437 . -6) (undo-tree-id1438 . -6) (undo-tree-id1439 . -6) (undo-tree-id1440 . -6) (undo-tree-id1441 . -6) (undo-tree-id1442 . -6) (undo-tree-id1443 . -6) (undo-tree-id1444 . -6) (undo-tree-id1445 . -6) (undo-tree-id1446 . -6) (undo-tree-id1447 . -6) (undo-tree-id1448 . -6) (undo-tree-id1449 . -6) (undo-tree-id1450 . -6) (undo-tree-id1451 . -6) (undo-tree-id1452 . -6) (undo-tree-id1453 . -6) (undo-tree-id1454 . -6) 11852) nil (25969 47348 72575 0) 0 nil])
([nil nil ((#("uistate." 0 8 (fontified t)) . -11838) (undo-tree-id1412 . -8) (undo-tree-id1413 . -8) (undo-tree-id1414 . -8) (undo-tree-id1415 . -8) (undo-tree-id1416 . -8) (undo-tree-id1417 . -8) (undo-tree-id1418 . -8) (undo-tree-id1419 . -8) (undo-tree-id1420 . -8) (undo-tree-id1421 . -8) (undo-tree-id1422 . -8) (undo-tree-id1423 . -8) (undo-tree-id1424 . -8) (undo-tree-id1425 . -8) (undo-tree-id1426 . -8) (undo-tree-id1427 . -8) (undo-tree-id1428 . -8) (undo-tree-id1429 . -8) (undo-tree-id1430 . -8) (undo-tree-id1431 . -8) (undo-tree-id1432 . -8) (undo-tree-id1433 . -8) 11846) nil (25969 47348 72550 0) 0 nil])
([nil nil ((#("unwrap()" 0 8 (fontified t)) . -11845) (undo-tree-id1487 . -8) (undo-tree-id1488 . -8) (undo-tree-id1489 . -8) (undo-tree-id1490 . -8) (undo-tree-id1491 . -8) (undo-tree-id1492 . -8) 11853 (t 25969 47348 120599 311000)) nil (25969 47352 255477 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11844) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) 11845) nil (25969 47352 255467 0) 0 nil])
([nil nil ((#("		uistate.update(|state| state.hid_device=Some(device.clone()));" 0 2 (fontified t) 2 10 (fontified t) 10 25 (fontified t) 25 31 (fontified t) 31 47 (fontified t) 47 54 (fontified t) 54 61 (fontified t) 61 62 (fontified t) 62 64 (fontified t)) . 11419) (undo-tree-id1493 . -64) (undo-tree-id1494 . -64) (undo-tree-id1495 . -64) (undo-tree-id1496 . -64) (undo-tree-id1497 . -64) (undo-tree-id1498 . -64) (undo-tree-id1499 . -64) (undo-tree-id1500 . -64) (undo-tree-id1501 . -64) (t 25969 47352 304290 332000)) nil (25969 47369 955112 0) 0 nil])
([nil nil ((11829 . 11832)) nil (25969 47369 955095 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11895 . 11896) (nil fontified nil 11894 . 11896) (nil fontified nil 11893 . 11894) (nil fontified nil 11886 . 11893) (nil fontified nil 11879 . 11886) (nil fontified nil 11863 . 11879) (nil fontified nil 11857 . 11863) (nil fontified nil 11842 . 11857) (nil fontified nil 11834 . 11842) (nil fontified nil 11832 . 11834) (11832 . 11896)) nil (25969 47369 955093 0) 0 nil])
([nil nil ((#("		" 0 2 (fontified t)) . -11832) 11896) nil (25969 47369 955082 0) 0 nil])
([nil nil ((11894 . 11897) (t 25969 47370 5802 111000)) nil (25969 47381 407649 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11894) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (#("	" 0 1 (fontified t)) . -11895) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (#("	" 0 1 (fontified t)) . -11896) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) 11897 (t 25969 47381 455690 822000)) nil (25969 47389 212748 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11883) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (#("c" 0 1 (fontified t)) . -11884) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (#("l" 0 1 (fontified t)) . -11885) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (#("o" 0 1 (fontified t)) . -11886) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (#("n" 0 1 (fontified t)) . -11887) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (#("e" 0 1 (fontified t)) . -11888) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (#("(" 0 1 (fontified t)) . -11889) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (#(")" 0 1 (fontified t)) . -11890) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) 11891) nil (25969 47389 212567 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11770) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) 11771 (t 25969 47389 262934 868000)) nil (25969 47404 744663 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11735) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) 11736) nil (25969 47404 744642 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11702) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) 11703) nil (25969 47404 744623 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -11599) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) 11600 (t 25969 47404 793710 455000)) nil (25969 47420 154663 0) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -11598) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) 11599) nil (25969 47421 872045 0) 0 nil] [nil nil ((#("let closure = Closure::wrap(Box::new(
		    move |_" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 11 (face font-lock-variable-name-face fontified t) 11 14 (fontified t) 14 21 (face font-lock-type-face fontified t) 21 28 (fontified t) 28 31 (face font-lock-type-face fontified t) 31 38 (fontified t) 38 44 (fontified t) 44 48 (face font-lock-keyword-face fontified t) 48 50 (fontified t) 50 51 (face font-lock-variable-name-face fontified t)) . -11548) (undo-tree-id1997 . -51) (undo-tree-id1998 . -51) (undo-tree-id1999 . -51) (undo-tree-id2000 . -51) (undo-tree-id2001 . -51) (undo-tree-id2002 . -51) (undo-tree-id2003 . -51) (undo-tree-id2004 . -51) (undo-tree-id2005 . -51) (undo-tree-id2006 . -51) (undo-tree-id2007 . -51) (undo-tree-id2008 . -51) (undo-tree-id2009 . -51) (undo-tree-id2010 . -51) (undo-tree-id2011 . -51) (undo-tree-id2012 . -51) (undo-tree-id2013 . -51) (undo-tree-id2014 . -38) (undo-tree-id2015 . -51) (undo-tree-id2016 . -51) (undo-tree-id2017 . -51) (undo-tree-id2018 . -51) (undo-tree-id2019 . -51) (undo-tree-id2020 . -51) 11599) ((11548 . 11599)) (25969 47419 756528 0) 0 nil])
([nil nil ((11598 . 11599)) nil (25969 47433 282981 0) 0 nil])
([nil nil ((11548 . 11549)) ((#("e" 0 1 (face font-lock-variable-name-face fontified t)) . 11548) (undo-tree-id2031 . -1)) (25969 47419 756245 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11905 . 11906) (nil fontified nil 11638 . 11906) (11638 . 11906) (t 25969 47421 921037 763000)) nil (25969 47442 189782 0) 0 nil] [nil nil ((nil rear-nonsticky nil 11866 . 11867) (nil fontified nil 11599 . 11867) (11599 . 11867) (t 25969 47421 921037 763000)) ((#("    let dataview = evt.data();
    log::debug!(\"HIDInputReportEvent.data={:?}\", &dataview);
    let dev = evt.device();
    log::debug!(\"HIDInputReportEvent.device={:?}\", &dev);
    let rid = evt.report_id();
    log::debug!(\"HIDInputReportEvent.reportId={:?}\", &rid);" 0 4 (fontified nil) 4 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil) 8 16 (face font-lock-variable-name-face fontified nil) 16 35 (fontified nil) 35 38 (face font-lock-constant-face fontified nil) 38 40 (fontified nil) 40 46 (face font-lock-preprocessor-face fontified nil) 46 47 (fontified nil) 47 78 (face font-lock-string-face fontified nil) 78 80 (fontified nil) 80 81 (face rust-ampersand-face fontified nil) 81 96 (fontified nil) 96 99 (face font-lock-keyword-face fontified nil) 99 100 (fontified nil) 100 103 (face font-lock-variable-name-face fontified nil) 103 124 (fontified nil) 124 127 (face font-lock-constant-face fontified nil) 127 129 (fontified nil) 129 135 (face font-lock-preprocessor-face fontified nil) 135 136 (fontified nil) 136 169 (face font-lock-string-face fontified nil) 169 171 (fontified nil) 171 172 (face rust-ampersand-face fontified nil) 172 182 (fontified nil) 182 185 (face font-lock-keyword-face fontified nil) 185 186 (fontified nil) 186 189 (face font-lock-variable-name-face fontified nil) 189 209 (fontified nil) 209 213 (fontified nil) 213 216 (face font-lock-constant-face fontified nil) 216 218 (fontified nil) 218 224 (face font-lock-preprocessor-face fontified nil) 224 225 (fontified nil) 225 260 (face font-lock-string-face fontified nil) 260 262 (fontified nil) 262 263 (face rust-ampersand-face fontified nil) 263 267 (fontified nil) 267 268 (rear-nonsticky nil fontified nil)) . 11599) (undo-tree-id2061 . -268) (undo-tree-id2062 . -268) (undo-tree-id2063 . -209) (nil fontified t 11788 . 11808) (nil fontified t 11785 . 11788) (nil fontified t 11784 . 11785) (nil fontified t 11781 . 11784) (nil fontified t 11771 . 11781) (nil fontified t 11770 . 11771) (nil fontified t 11768 . 11770) (nil fontified t 11735 . 11768) (nil fontified t 11734 . 11735) (nil fontified t 11728 . 11734) (nil fontified t 11726 . 11728) (nil fontified t 11723 . 11726) (nil fontified t 11702 . 11723) (nil fontified t 11699 . 11702) (nil fontified t 11698 . 11699) (nil fontified t 11695 . 11698) (nil fontified t 11680 . 11695) (nil fontified t 11679 . 11680) (nil fontified t 11677 . 11679) (nil fontified t 11646 . 11677) (nil fontified t 11645 . 11646) (nil fontified t 11639 . 11645) (nil fontified t 11637 . 11639) (nil fontified t 11634 . 11637) (nil fontified t 11615 . 11634) (nil fontified t 11607 . 11615) (nil fontified t 11606 . 11607) (nil fontified t 11603 . 11606) (nil fontified t 11599 . 11603) (nil rear-nonsticky t 11866 . 11867)) (25969 47433 282171 0) 0 nil])
nil
([nil nil ((11839 . 11842) (#("    " 0 4 (fontified t)) . 11839) (11809 . 11812) (#("    " 0 4 (fontified t)) . 11809) (11752 . 11755) (#("    " 0 4 (fontified t)) . 11752) (11725 . 11728) (#("    " 0 4 (fontified t)) . 11725) (11665 . 11668) (#("    " 0 4 (fontified t)) . 11665) (#("    " 0 4 (fontified t)) . -11638) (undo-tree-id2106 . -2) (undo-tree-id2107 . -3) (undo-tree-id2108 . -3) (undo-tree-id2109 . -3) (undo-tree-id2110 . -3) (undo-tree-id2111 . -3) (undo-tree-id2112 . -3) (undo-tree-id2113 . -3) (undo-tree-id2114 . -3) (undo-tree-id2115 . -3) (undo-tree-id2116 . -2) (undo-tree-id2117 . -2) (undo-tree-id2118 . -2) 11640) nil (25969 47442 189778 0) 0 nil])
nil
([nil nil ((#("			log::debug!(\"HIDInputReportEvent.data={:?}\", &dataview);" 0 3 (fontified t) 3 6 (face font-lock-constant-face fontified t) 6 8 (fontified t) 8 14 (face font-lock-preprocessor-face fontified t) 14 15 (fontified t) 15 46 (face font-lock-string-face fontified t) 46 48 (fontified t) 48 49 (face rust-ampersand-face fontified t) 49 59 (fontified t)) . 11665) (undo-tree-id2093 . -29) (undo-tree-id2094 . -28) (undo-tree-id2095 . -27) (undo-tree-id2096 . -26) (undo-tree-id2097 . -26) (undo-tree-id2098 . -26) (undo-tree-id2099 . -59) (undo-tree-id2100 . -59) (undo-tree-id2101 . -59) (undo-tree-id2102 . -59) (undo-tree-id2103 . -59) (undo-tree-id2104 . -59) (undo-tree-id2105 . -59)) nil (25969 47442 189760 0) 0 nil])
([nil nil ((#("			log::debug!(\"HIDInputReportEvent.device={:?}\", &dev);" 0 3 (fontified t) 3 6 (face font-lock-constant-face fontified t) 6 8 (fontified t) 8 14 (face font-lock-preprocessor-face fontified t) 14 15 (fontified t) 15 48 (face font-lock-string-face fontified t) 48 50 (fontified t) 50 51 (face rust-ampersand-face fontified t) 51 56 (fontified t)) . 11693) (undo-tree-id2089 . -42) (undo-tree-id2090 . -39) (undo-tree-id2091 . -36) (undo-tree-id2092 . -56)) nil (25969 47442 189745 0) 0 nil])
([nil nil ((#("			log::debug!(\"HIDInputReportEvent.reportId={:?}\", &rid);" 0 3 (fontified t) 3 6 (face font-lock-constant-face fontified t) 6 8 (fontified t) 8 14 (face font-lock-preprocessor-face fontified t) 14 15 (fontified t) 15 50 (face font-lock-string-face fontified t) 50 52 (fontified t) 52 53 (face rust-ampersand-face fontified t) 53 57 (fontified t) 57 58 (rear-nonsticky t fontified t)) . 11724) (undo-tree-id2064 . -58) (undo-tree-id2065 . -58) (undo-tree-id2066 . -58) (undo-tree-id2067 . -58) (undo-tree-id2068 . -58) (undo-tree-id2069 . -58) (undo-tree-id2070 . -58) (undo-tree-id2071 . -58) (undo-tree-id2072 . -58) (undo-tree-id2073 . -58) (undo-tree-id2074 . -58) (undo-tree-id2075 . -58) (undo-tree-id2076 . -58) (undo-tree-id2077 . -58) (undo-tree-id2078 . -58) (undo-tree-id2079 . -58) (undo-tree-id2080 . -58) (undo-tree-id2081 . -58) (undo-tree-id2082 . -58) (undo-tree-id2083 . -58) (undo-tree-id2084 . -58) (undo-tree-id2085 . -58) (undo-tree-id2086 . -56) (undo-tree-id2087 . -58) (undo-tree-id2088 . -58)) nil (25969 47442 189734 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11692) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) 11693 (t 25969 47442 240195 234000)) nil (25969 47449 438487 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11664) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) 11665) nil (25969 47449 438469 0) 0 nil])
([nil nil ((#("			let dev = evt.device();" 0 3 (fontified t) 3 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 10 (face font-lock-variable-name-face fontified t) 10 26 (fontified t)) . 11665) (undo-tree-id2120 . -26) (undo-tree-id2121 . -26) (undo-tree-id2122 . -26) (undo-tree-id2123 . -26) (undo-tree-id2124 . -26) (undo-tree-id2125 . -26) (undo-tree-id2126 . -26) (undo-tree-id2127 . -26) (undo-tree-id2128 . -26) (undo-tree-id2129 . -26) (undo-tree-id2130 . -26) (undo-tree-id2131 . -26) (undo-tree-id2132 . -26) (undo-tree-id2133 . -26) (undo-tree-id2134 . -26) (undo-tree-id2135 . -26) (undo-tree-id2136 . -26) (undo-tree-id2137 . -26) (undo-tree-id2138 . -26) (undo-tree-id2139 . -26) (undo-tree-id2140 . -26) (undo-tree-id2141 . -26) (undo-tree-id2142 . -26) (undo-tree-id2143 . -26) (undo-tree-id2144 . -26) (undo-tree-id2145 . -26) (undo-tree-id2146 . -26) (undo-tree-id2147 . -26) (undo-tree-id2148 . -26) (undo-tree-id2149 . -26) (undo-tree-id2150 . -26) (undo-tree-id2151 . -26) (undo-tree-id2152 . -26) (undo-tree-id2153 . -26) (undo-tree-id2154 . -26)) nil (25969 47449 438436 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11665) (undo-tree-id2119 . -1)) nil (25969 47449 438397 0) 0 nil])
([nil nil ((11694 . 11698) (t 25969 47449 488364 903000)) nil (25969 47461 566137 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11698) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) 11699) nil (25969 47461 566135 0) 0 nil])
([nil nil ((11698 . 11703)) nil (25969 47461 566126 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -11702) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) 11703) nil (25969 47461 566124 0) 0 nil])
([nil nil ((11702 . 11712)) nil (25969 47461 566117 0) 0 nil])
([nil nil ((11713 . 11716) (#("			    " 0 7 (fontified nil)) . 11712) (undo-tree-id2198 . -3) (undo-tree-id2199 . -3) (undo-tree-id2200 . -3) (11715 . 11719) (11711 . 11716)) nil (25969 47461 566113 0) 0 nil])
([nil nil ((11712 . 11719) (t 25969 47461 615578 726000)) nil (25969 47562 161726 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12013 . 12014) (nil fontified nil 11993 . 12014) (nil fontified nil 11990 . 11993) (nil fontified nil 11989 . 11990) (nil fontified nil 11987 . 11989) (nil fontified nil 11934 . 11987) (nil fontified nil 11930 . 11934) (nil fontified nil 11914 . 11930) (nil fontified nil 11912 . 11914) (nil fontified nil 11909 . 11912) (nil fontified nil 11908 . 11909) (nil fontified nil 11906 . 11908) (nil fontified nil 11879 . 11906) (nil fontified nil 11843 . 11879) (nil fontified nil 11841 . 11843) (nil fontified nil 11789 . 11841) (nil fontified nil 11787 . 11789) (nil fontified nil 11777 . 11787) (nil fontified nil 11774 . 11777) (nil fontified nil 11769 . 11774) (nil fontified nil 11764 . 11769) (nil fontified nil 11763 . 11764) (nil fontified nil 11761 . 11763) (nil fontified nil 11739 . 11761) (nil fontified nil 11726 . 11739) (nil fontified nil 11725 . 11726) (nil fontified nil 11722 . 11725) (nil fontified nil 11719 . 11722) (11719 . 12014)) nil (25969 47562 161723 0) 0 nil])
([nil nil ((12009 . 12013) (12003 . 12004) (#("    " 0 4 (fontified t)) . 12003) (undo-tree-id2214 . -4) (undo-tree-id2215 . -3) (undo-tree-id2216 . -2) (undo-tree-id2217 . -1) (11937 . 11941) (11925 . 11926) (#("    " 0 4 (fontified t)) . 11925) (11919 . 11920) (#("    " 0 4 (fontified t)) . 11919) (11857 . 11861) (11838 . 11839) (#("    " 0 4 (fontified t)) . 11838) (11771 . 11775) (#("			" 0 3 (fontified t)) . -11719) 11714) nil (25969 47562 161711 0) 0 nil])
([nil nil ((11663 . 11665) (t 25969 47562 211325 226000)) nil (25969 47594 919540 0) 0 nil])
([nil nil ((11665 . 11668)) nil (25969 47594 919539 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11663) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (#("i" 0 1 (fontified t)) . -11664) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -11665) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (#("t" 0 1 (fontified t)) . -11666) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (#("o" 0 1 (fontified t)) . -11667) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) 11668) nil (25969 47594 919531 0) 0 nil])
([nil nil ((11663 . 11665) (t 25969 47594 969753 207000)) nil (25969 47681 911102 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11664 11672 #s(yas--snippet nil nil #s(yas--exit 11672 nil) 127 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11672 nil) 127 nil nil nil nil)) (11664 . 11672) (#("buffer()$0" 0 10 (fontified nil)) . 11664) (11664 . 11674) (#("b" 0 1 (fontified nil)) . 11664) (11664 . 11665) (#("buffer()" 0 8 (fontified nil)) . -11664) (11664 . 11672) (#("b" 0 1 (fontified t)) . -11664) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) 11665) nil (25969 47681 911097 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -11642) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -11643) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -11644) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -11645) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (#("v" 0 1 (face font-lock-variable-name-face fontified t)) . -11646) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -11647) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -11648) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (#("w" 0 1 (face font-lock-variable-name-face fontified t)) . -11649) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) 11650 (t 25969 47681 961011 179000)) nil (25969 47773 778521 0) 0 nil])
([nil nil ((11642 . 11644)) nil (25969 47773 778419 0) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-variable-name-face fontified t)) . -11643) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) 11644) nil (25969 47773 778417 0) 0 nil])
([nil nil ((11643 . 11653)) nil (25969 47773 778403 0) 0 nil])
([nil nil ((11675 . 11678) (t 25969 47773 829303 117000)) nil (25969 47901 76885 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11675) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (#("t" 0 1 (fontified t)) . -11676) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (#("o" 0 1 (fontified t)) . -11677) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) 11678) nil (25969 47901 76878 0) 0 nil])
([nil nil ((11675 . 11677) (t 25969 47901 126641 846000)) nil (25969 48012 942633 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11676 11686 #s(yas--snippet nil nil #s(yas--exit 11686 nil) 128 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11686 nil) 128 nil nil nil nil)) (11676 . 11686) (#("dyn_into()$0" 0 12 (fontified nil)) . 11676) (11676 . 11688) (#("d" 0 1 (fontified nil)) . 11676) (11676 . 11677) (#("dyn_into() (as JsCast)" 0 22 (fontified nil)) . -11676) (11676 . 11698) (#("d" 0 1 (fontified t)) . -11676) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) 11677) nil (25969 48012 942631 0) 0 nil])
([nil nil ((11684 . 11688)) nil (25969 48012 942622 0) 0 nil])
([nil nil ((11687 . 11689)) nil (25969 48012 942621 0) 0 nil])
([nil nil ((11687 . 11694) (#("Js" 0 2 (fontified nil)) . 11687) (11687 . 11689) (#("JsValue" 0 7 (fontified nil)) . -11687) (11687 . 11694) (#("Js" 0 2 (face font-lock-type-face fontified t)) . -11687) (undo-tree-id2887 . -2) (undo-tree-id2888 . -2) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -2) (undo-tree-id2897 . -2) (undo-tree-id2898 . -2) (undo-tree-id2899 . -2) 11689) nil (25969 48012 942619 0) 0 nil])
([nil nil ((11694 . 11697)) nil (25969 48012 942602 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -11696) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) 11697) nil (25969 48012 942601 0) 0 nil])
([nil nil ((11696 . 11698)) nil (25969 48012 942593 0) 0 nil])
([nil nil ((#("J" 0 1 (face font-lock-type-face fontified t)) . -11687) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (#("s" 0 1 (face font-lock-type-face fontified t)) . -11688) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (#("V" 0 1 (face font-lock-type-face fontified t)) . -11689) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -11690) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (#("l" 0 1 (face font-lock-type-face fontified t)) . -11691) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (#("u" 0 1 (face font-lock-type-face fontified t)) . -11692) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -11693) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (#(":" 0 1 (fontified t)) . -11694) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (#(":" 0 1 (fontified t)) . -11695) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (#("I" 0 1 (face font-lock-type-face fontified t)) . -11696) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -11697) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) 11698) nil (25969 48012 942574 0) 0 nil])
([nil nil ((11687 . 11689)) nil (25969 48012 942180 0) 0 nil])
([nil nil ((11687 . 11693) (#("js" 0 2 (fontified nil)) . 11687) (11687 . 11689) (#("js_sys" 0 6 (fontified nil)) . -11687) (11687 . 11693) (#("js" 0 2 (fontified t)) . -11687) (undo-tree-id2487 . -2) (undo-tree-id2488 . -1) (undo-tree-id2489 . -2) (undo-tree-id2490 . -2) (undo-tree-id2491 . -2) (undo-tree-id2492 . -2) (undo-tree-id2493 . -2) (undo-tree-id2494 . -2) 11689) nil (25969 48012 942178 0) 0 nil])
([nil nil ((11693 . 11696)) nil (25969 48012 942167 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -11695) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) 11696) nil (25969 48012 942165 0) 0 nil])
([nil nil ((11695 . 11696)) nil (25969 48012 942158 0) 0 nil])
([nil nil ((11695 . 11704) (#("A" 0 1 (fontified nil)) . 11695) (11695 . 11696) (#("Int8Array" 0 9 (fontified nil)) . -11695) (11695 . 11704) (#("A" 0 1 (face font-lock-type-face fontified t)) . -11695) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) 11696) nil (25969 48012 942156 0) 0 nil])
([nil nil ((11707 . 11709)) nil (25969 48012 942148 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 11715 11744 nil nil nil t #s(yas--exit 11745 nil))) #s(yas--exit 11745 nil) 129 nil #s(yas--field 1 11715 11744 nil nil nil t #s(yas--exit 11745 nil)) nil nil)) (11708 . 11719) (#("expect(${1:msg})$0" 0 18 (fontified nil)) . 11708) (11708 . 11726) (#("e" 0 1 (fontified nil)) . 11708) (11708 . 11709) (#("expect(…)" 0 9 (fontified nil)) . -11708) (11708 . 11717) (#("e" 0 1 (fontified t)) . -11708) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) 11709) nil (25969 48012 942145 0) 0 nil])
([nil nil ((11716 . 11717) (#("msg" 0 3 (fontified nil)) . 11716) (undo-tree-id2471 . -3) (11715 . 11716)) nil (25969 48012 942135 0) 0 nil])
([nil nil ((11716 . 11730)) nil (25969 48012 942126 0) 0 nil])
([nil nil ((11730 . 11743)) nil (25969 48012 942121 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11708 11745 #s(yas--snippet nil (#s(yas--field 1 11715 11744 nil nil nil t #s(yas--exit 11745 nil))) #s(yas--exit 11745 nil) 129 nil #s(yas--field 1 11715 11744 nil nil nil t #s(yas--exit 11745 nil)) nil nil))) nil (25969 48058 271806 0) 0 nil])
([nil nil ((#("I" 0 1 (face font-lock-type-face fontified t)) . -11695) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -11696) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -11697) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) 11698 (t 25969 48012 994997 143000)) nil (25969 48058 271802 0) 0 nil])
([nil nil ((11695 . 11696)) nil (25969 48058 271729 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -11695) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (#("8" 0 1 (face font-lock-type-face fontified t)) . -11696) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (#("A" 0 1 (fontified t)) . -11697) (undo-tree-id2991 . -1) (undo-tree-id2992 . 1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (#("r" 0 1 (fontified t)) . -11698) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (#("r" 0 1 (fontified t)) . -11699) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (#("a" 0 1 (fontified t)) . -11700) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (#("y" 0 1 (fontified t)) . -11701) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) 11702) nil (25969 48058 271720 0) 0 nil])
([nil nil ((11695 . 11696)) nil (25969 48058 271543 0) 0 nil])
([nil nil ((11695 . 11705) (#("A" 0 1 (fontified nil)) . 11695) (11695 . 11696) (#("Uint8Array" 0 10 (fontified nil)) . -11695) (11695 . 11705) (#("A" 0 1 (face font-lock-type-face fontified t)) . -11695) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) 11696) nil (25969 48058 271539 0) 0 nil])
([nil nil ((#("1]" 0 2 (fontified t)) . -11838) (undo-tree-id3258 . -2) (undo-tree-id3259 . -2) (undo-tree-id3260 . -2) (undo-tree-id3261 . -2) (undo-tree-id3262 . -2) (undo-tree-id3263 . -2) (undo-tree-id3264 . -2) (undo-tree-id3265 . -2) (undo-tree-id3266 . -2) (undo-tree-id3267 . -2) (undo-tree-id3268 . -2) (undo-tree-id3269 . -2) (undo-tree-id3270 . -2) (undo-tree-id3271 . -2) (undo-tree-id3272 . -2) (undo-tree-id3273 . -2) (undo-tree-id3274 . -2) (undo-tree-id3275 . -2) 11840 (t 25969 48058 324867 15000)) nil (25969 48143 232457 0) 0 nil])
([nil nil ((#("buf[" 0 4 (fontified t)) . -11834) (undo-tree-id3235 . -4) (undo-tree-id3236 . -4) (undo-tree-id3237 . -4) (undo-tree-id3238 . -4) (undo-tree-id3239 . -4) (undo-tree-id3240 . -4) (undo-tree-id3241 . -4) (undo-tree-id3242 . -4) (undo-tree-id3243 . -4) (undo-tree-id3244 . -4) (undo-tree-id3245 . -4) (undo-tree-id3246 . -4) (undo-tree-id3247 . -4) (undo-tree-id3248 . -4) (undo-tree-id3249 . -4) (undo-tree-id3250 . -4) (undo-tree-id3251 . -4) (undo-tree-id3252 . -4) (undo-tree-id3253 . -4) (undo-tree-id3254 . -4) (undo-tree-id3255 . -4) (undo-tree-id3256 . -4) (undo-tree-id3257 . -4) 11838) nil (25969 48143 232437 0) 0 nil])
([nil nil ((#("recv_" 0 5 (fontified t)) . -11829) (undo-tree-id3207 . -5) (undo-tree-id3208 . -5) (undo-tree-id3209 . -5) (undo-tree-id3210 . -5) (undo-tree-id3211 . -5) (undo-tree-id3212 . -5) (undo-tree-id3213 . -5) (undo-tree-id3214 . -5) (undo-tree-id3215 . -5) (undo-tree-id3216 . -5) (undo-tree-id3217 . -5) (undo-tree-id3218 . -5) (undo-tree-id3219 . -5) (undo-tree-id3220 . -5) (undo-tree-id3221 . -5) (undo-tree-id3222 . -5) (undo-tree-id3223 . -5) (undo-tree-id3224 . -5) (undo-tree-id3225 . -5) (undo-tree-id3226 . -5) (undo-tree-id3227 . -5) (undo-tree-id3228 . -5) (undo-tree-id3229 . -5) (undo-tree-id3230 . -5) (undo-tree-id3231 . -5) (undo-tree-id3232 . -5) (undo-tree-id3233 . -5) (undo-tree-id3234 . -5) 11834) nil (25969 48143 232413 0) 0 nil])
([nil nil ((#("handle." 0 7 (fontified t)) . -11822) (undo-tree-id3174 . -7) (undo-tree-id3175 . -7) (undo-tree-id3176 . -7) (undo-tree-id3177 . -7) (undo-tree-id3178 . -7) (undo-tree-id3179 . -7) (undo-tree-id3180 . -7) (undo-tree-id3181 . -7) (undo-tree-id3182 . -7) (undo-tree-id3183 . -7) (undo-tree-id3184 . -7) (undo-tree-id3185 . -7) (undo-tree-id3186 . -7) (undo-tree-id3187 . -7) (undo-tree-id3188 . -7) (undo-tree-id3189 . -7) (undo-tree-id3190 . -7) (undo-tree-id3191 . -7) (undo-tree-id3192 . -7) (undo-tree-id3193 . -7) (undo-tree-id3194 . -7) (undo-tree-id3195 . -7) (undo-tree-id3196 . -7) (undo-tree-id3197 . -7) (undo-tree-id3198 . -7) (undo-tree-id3199 . -7) (undo-tree-id3200 . -7) (undo-tree-id3201 . -7) (undo-tree-id3202 . -7) (undo-tree-id3203 . -7) (undo-tree-id3204 . -7) (undo-tree-id3205 . -7) (undo-tree-id3206 . -7) 11829) nil (25969 48143 232382 0) 0 nil])
([nil nil ((11822 . 11823)) nil (25969 48143 232343 0) 0 nil])
([nil nil ((11822 . 11833) (#("a" 0 1 (fontified nil)) . 11822) (11822 . 11823) (#("arraybuffer" 0 11 (fontified nil)) . -11822) (11822 . 11833) (#("a" 0 1 (fontified t)) . -11822) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) 11823) nil (25969 48143 232341 0) 0 nil])
([nil nil ((11833 . 11836)) nil (25969 48143 232332 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 11837 11838 nil nil nil t #s(yas--exit 11839 nil))) #s(yas--exit 11839 nil) 130 nil #s(yas--field 1 11837 11838 nil nil nil t #s(yas--exit 11839 nil)) nil nil)) (11834 . 11841) (#("at(${1:idx})$0" 0 14 (fontified nil)) . 11834) (11834 . 11848) (#("at" 0 2 (fontified nil)) . 11834) (11834 . 11836) (#("at(…)" 0 5 (fontified nil)) . -11834) (11834 . 11839) (#("at" 0 2 (fontified t)) . -11834) (undo-tree-id3158 . -2) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -2) (undo-tree-id3164 . -2) (undo-tree-id3165 . -2) (undo-tree-id3166 . -2) 11836) nil (25969 48143 232329 0) 0 nil])
([nil nil ((#("idx" 0 3 (fontified nil)) . 11838) (undo-tree-id3157 . -3) (11837 . 11838)) nil (25969 48143 232312 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11834 11839 #s(yas--snippet nil (#s(yas--field 1 11837 11838 nil nil nil t #s(yas--exit 11839 nil))) #s(yas--exit 11839 nil) 130 nil #s(yas--field 1 11837 11838 nil nil nil t #s(yas--exit 11839 nil)) nil nil))) nil (25969 48162 330230 0) 0 nil])
([nil nil ((11839 . 11841) (t 25969 48143 283876 400000)) nil (25969 48162 330229 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -11839) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (#("." 0 1 (fontified t)) . -11840) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) 11841) nil (25969 48162 330226 0) 0 nil])
([nil nil ((11839 . 11841)) nil (25969 48162 330195 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11840 11848 #s(yas--snippet nil nil #s(yas--exit 11848 nil) 131 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11848 nil) 131 nil nil nil nil)) (11840 . 11848) (#("unwrap()$0" 0 10 (fontified nil)) . 11840) (11840 . 11850) (#("u" 0 1 (fontified nil)) . 11840) (11840 . 11841) (#("unwrap()" 0 8 (fontified nil)) . -11840) (11840 . 11848) (#("u" 0 1 (fontified t)) . -11840) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) 11841) nil (25969 48162 330190 0) 0 nil])
([nil nil ((apply -48 11859 12155 undo--wrap-and-run-primitive-undo 11859 12155 ((12149 . 12152) (12136 . 12139) (12136 . 12137) (#("	" 0 1 (fontified t)) . 12136) (12132 . 12136) (12062 . 12065) (12062 . 12063) (#("	" 0 1 (fontified t)) . 12062) (12058 . 12062) (12044 . 12047) (12044 . 12045) (#("	" 0 1 (fontified t)) . 12044) (12040 . 12044) (12031 . 12034) (12031 . 12032) (#("	" 0 1 (fontified t)) . 12031) (12027 . 12031) (11961 . 11964) (11961 . 11962) (#("	" 0 1 (fontified t)) . 11961) (11957 . 11961) (11936 . 11939) (11936 . 11937) (#("	" 0 1 (fontified t)) . 11936) (11932 . 11936) (11866 . 11869) 11859))) nil (25969 48167 855761 0) 0 nil])
([nil nil ((11806 . 11807) (t 25969 48167 906922 856000)) nil (25969 48172 971031 0) 0 nil])
([nil nil ((11634 . 11638) (t 25969 48173 24410 333000)) nil (25969 48256 699389 0) 0 nil])
([nil nil ((11638 . 11647)) nil (25969 48256 699388 0) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-variable-name-face fontified t)) . -11646) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) 11647) nil (25969 48256 699387 0) 0 nil])
([nil nil ((11646 . 11654)) nil (25969 48256 699380 0) 0 nil])
([nil nil ((11653 . 11656) (#("e" 0 1 (fontified nil)) . 11653) (11653 . 11654) (#("evt" 0 3 (fontified nil)) . -11653) (11653 . 11656) (#("e" 0 1 (fontified t)) . -11653) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) 11654) nil (25969 48256 699376 0) 0 nil])
([nil nil ((11656 . 11659)) nil (25969 48256 699363 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11657 11663 #s(yas--snippet nil nil #s(yas--exit 11663 nil) 132 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11663 nil) 132 nil nil nil nil)) (11657 . 11663) (#("data()$0" 0 8 (fontified nil)) . 11657) (11657 . 11665) (#("da" 0 2 (fontified nil)) . 11657) (11657 . 11659) (#("data()" 0 6 (fontified nil)) . -11657) (11657 . 11663) (#("da" 0 2 (fontified t)) . -11657) (undo-tree-id3353 . -1) (undo-tree-id3354 . -2) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -2) (undo-tree-id3359 . -2) (undo-tree-id3360 . -2) (undo-tree-id3361 . -2) 11659) nil (25969 48256 699357 0) 0 nil])
([nil nil ((11663 . 11664)) nil (25969 48256 699343 0) 0 nil])
([nil nil ((#("data()" 0 6 (fontified t)) . -11690) (undo-tree-id3336 . -1) (undo-tree-id3337 . -6) (undo-tree-id3338 . -6) (undo-tree-id3339 . -6) (undo-tree-id3340 . -6) (undo-tree-id3341 . -6) (undo-tree-id3342 . -6) (undo-tree-id3343 . -6) (undo-tree-id3344 . -6) (undo-tree-id3345 . -6) (undo-tree-id3346 . -6) (undo-tree-id3347 . -6) (undo-tree-id3348 . -6) (undo-tree-id3349 . -6) (undo-tree-id3350 . -6) (undo-tree-id3351 . -6) (undo-tree-id3352 . -6) 11696) nil (25969 48256 699341 0) 0 nil])
([nil nil ((#("evt." 0 4 (fontified t)) . -11686) (undo-tree-id3318 . -4) (undo-tree-id3319 . -4) (undo-tree-id3320 . -4) (undo-tree-id3321 . -4) (undo-tree-id3322 . -4) (undo-tree-id3323 . -4) (undo-tree-id3324 . -4) (undo-tree-id3325 . -4) (undo-tree-id3326 . -4) (undo-tree-id3327 . -4) (undo-tree-id3328 . -4) (undo-tree-id3329 . -4) (undo-tree-id3330 . -4) (undo-tree-id3331 . -4) (undo-tree-id3332 . -4) (undo-tree-id3333 . -4) (undo-tree-id3334 . -4) (undo-tree-id3335 . -4) 11690) nil (25969 48256 699321 0) 0 nil])
([nil nil ((11686 . 11688)) nil (25969 48256 699299 0) 0 nil])
([nil nil ((11686 . 11694) (#("da" 0 2 (fontified nil)) . 11686) (11686 . 11688) (#("dataview" 0 8 (fontified nil)) . -11686) (11686 . 11694) (#("da" 0 2 (fontified t)) . -11686) (undo-tree-id3313 . -2) (undo-tree-id3314 . -1) (undo-tree-id3315 . -2) (undo-tree-id3316 . -2) (undo-tree-id3317 . -2) 11688) nil (25969 48256 699294 0) 0 nil])
([nil nil ((11664 . 11668) (t 25969 48256 753827 861000)) nil (25969 48282 190946 0) 0 nil])
([nil nil ((11668 . 11672)) nil (25969 48282 190944 0) 0 nil])
([nil nil ((11668 . 11675) (#("logg" 0 4 (fontified nil)) . 11668) (11668 . 11672) (#("logging" 0 7 (fontified nil)) . -11668) (11668 . 11675) (#("logg" 0 4 (fontified t)) . -11668) (undo-tree-id3385 . -4) 11672) nil (25969 48282 190943 0) 0 nil])
([nil nil ((11675 . 11678)) nil (25969 48282 190939 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11677 11683 #s(yas--snippet nil nil #s(yas--exit 11682 nil) 133 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11682 nil) 133 nil nil nil nil)) (11677 . 11683) (#("log!($0)" 0 8 (fontified nil)) . 11677) (11677 . 11685) (#("l" 0 1 (fontified nil)) . 11677) (11677 . 11678) (#("log!(…)" 0 7 (fontified nil)) . -11677) (11677 . 11684) (#("l" 0 1 (fontified t)) . -11677) (undo-tree-id3384 . -1) 11678) nil (25969 48282 190937 0) 0 nil])
([nil nil ((11682 . 11683)) nil (25969 48282 190932 0) 0 nil])
([nil nil ((11683 . 11684)) nil (25969 48282 190932 0) 0 nil])
([nil nil ((11682 . 11690)) nil (25969 48282 190931 0) 0 nil])
([nil nil ((11682 . 11683)) nil (25969 48282 190930 0) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -11691) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) 11692) nil (25969 48282 190928 0) 0 nil])
([nil nil ((11691 . 11695)) nil (25969 48282 190922 0) 0 nil])
([nil nil ((11694 . 11696)) nil (25969 48282 190921 0) 0 nil])
([nil nil ((11698 . 11702)) nil (25969 48282 190920 0) 0 nil])
([nil nil ((11700 . 11708) (#("da" 0 2 (fontified nil)) . 11700) (11700 . 11702) (#("dataview" 0 8 (fontified nil)) . -11700) (11700 . 11708) (#("da" 0 2 (fontified t)) . -11700) (undo-tree-id3375 . -2) (undo-tree-id3376 . -1) (undo-tree-id3377 . -2) (undo-tree-id3378 . -2) (undo-tree-id3379 . -2) 11702) nil (25969 48282 190918 0) 0 nil])
([nil nil ((11709 . 11710)) nil (25969 48499 263172 0) 0 nil])
([nil nil ((10420 . 10426) (t 25969 48501 790780 592000)) nil (25969 48516 6607 0) 0 nil] [nil nil ((10631 . 10637) (t 25969 48282 242733 871000)) ((#("move||" 0 4 (face font-lock-keyword-face fontified t) 4 6 (fontified t)) . 10631)) (25969 48497 551629 0) 0 nil])
([nil nil ((10426 . 10429)) nil (25969 48516 6606 0) 0 nil])
([nil nil ((10672 . 10673) (10631 . 10631) (10631 . 10632) (t 25969 48474 201543 52000)) ((#("{" 0 1 (fontified nil)) . 10631) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (#("}" 0 1 (fontified t)) . 10672) (t 25969 48485 644103 647000)) (25969 48485 592186 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -10426) (undo-tree-id3455 . -1) (#("e" 0 1 (fontified t)) . -10427) (undo-tree-id3456 . -1) (#("t" 0 1 (fontified t)) . -10428) (undo-tree-id3457 . -1) 10429) nil (25969 48516 6604 0) 0 nil])
nil
([nil nil ((10426 . 10432)) nil (25969 48516 6600 0) 0 nil])
([nil nil ((10432 . 10440)) nil (25969 48516 6599 0) 0 nil])
([nil nil ((10440 . 10448)) nil (25969 48516 6598 0) 0 nil])
([nil nil ((10446 . 10453) (#("ui" 0 2 (fontified nil)) . 10446) (10446 . 10448) (#("uistate" 0 7 (fontified nil)) . -10446) (10446 . 10453) (#("ui" 0 2 (fontified t)) . -10446) (undo-tree-id3452 . -2) (undo-tree-id3453 . -2) (undo-tree-id3454 . -2) 10448) nil (25969 48516 6596 0) 0 nil])
([nil nil ((10453 . 10455)) nil (25969 48516 6590 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10454 10459 #s(yas--snippet nil nil #s(yas--exit 10459 nil) 134 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 10459 nil) 134 nil nil nil nil)) (10454 . 10459) (#("get()$0" 0 7 (fontified nil)) . 10454) (10454 . 10461) (#("g" 0 1 (fontified nil)) . 10454) (10454 . 10455) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -10454) (10454 . 10474) (#("g" 0 1 (fontified t)) . -10454) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) 10455) nil (25969 48516 6588 0) 0 nil])
([nil nil ((10459 . 10460)) nil (25969 48538 432973 0) 0 nil])
([nil nil ((#("	    let uistate = move||uistate.get()." 0 5 (fontified t) 5 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 16 (face font-lock-variable-name-face fontified t) 16 19 (fontified t) 19 23 (face font-lock-keyword-face fontified t) 23 25 (fontified t) 25 33 (fontified t) 33 38 (fontified t) 38 39 (fontified t)) . 10421) (undo-tree-id3611 . -38) (undo-tree-id3612 . -38) (undo-tree-id3613 . -38) (undo-tree-id3614 . -39) (undo-tree-id3615 . -39) (undo-tree-id3616 . -39) (undo-tree-id3617 . -39) (undo-tree-id3618 . -39) (undo-tree-id3619 . -39) (undo-tree-id3620 . -39) (undo-tree-id3621 . -39) (undo-tree-id3622 . -39) (undo-tree-id3623 . -39)) nil (25969 48542 330280 0) 0 nil] [nil nil ((#("." 0 1 (fontified t)) . -10459) (undo-tree-id3445 . -1) 10460) ((10459 . 10460)) (25969 48537 881861 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10421) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1)) nil (25969 48542 330263 0) 0 nil])
([nil nil ((10459 . 10460)) ((#(";" 0 1 (fontified t)) . 10459)) (25969 48537 455328 0) 0 nil])
([nil nil ((13535 . 13537) (t 25969 48542 383170 586000)) nil (25969 48598 128371 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10678) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3461 . -1) (undo-tree-id3463 . -1) (undo-tree-id3465 . -1) (undo-tree-id3467 . -1) (undo-tree-id3469 . -1) (undo-tree-id3471 . -1) (undo-tree-id3473 . -1) (undo-tree-id3475 . -1) (undo-tree-id3477 . -1) (undo-tree-id3479 . -1) (undo-tree-id3481 . -1) (undo-tree-id3483 . -1) (#("g" 0 1 (fontified t)) . -10679) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3488 . -1) (undo-tree-id3490 . -1) (undo-tree-id3492 . -1) (undo-tree-id3494 . -1) (undo-tree-id3496 . -1) (undo-tree-id3498 . -1) (undo-tree-id3500 . -1) (undo-tree-id3502 . -1) (undo-tree-id3504 . -1) (undo-tree-id3506 . -1) (undo-tree-id3508 . -1) (undo-tree-id3510 . -1) (#("e" 0 1 (fontified t)) . -10680) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3514 . -1) (undo-tree-id3516 . -1) (undo-tree-id3518 . -1) (undo-tree-id3520 . -1) (undo-tree-id3522 . -1) (undo-tree-id3524 . -1) (undo-tree-id3526 . -1) (undo-tree-id3528 . -1) (undo-tree-id3530 . -1) (undo-tree-id3532 . -1) (undo-tree-id3534 . -1) (#("t" 0 1 (fontified t)) . -10681) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3539 . -1) (undo-tree-id3541 . -1) (undo-tree-id3543 . -1) (undo-tree-id3545 . -1) (undo-tree-id3547 . -1) (undo-tree-id3549 . -1) (undo-tree-id3551 . -1) (undo-tree-id3553 . -1) (undo-tree-id3555 . -1) (undo-tree-id3557 . -1) (undo-tree-id3559 . -1) (#("(" 0 1 (fontified t)) . -10682) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3563 . -1) (undo-tree-id3565 . -1) (undo-tree-id3567 . -1) (undo-tree-id3569 . -1) (undo-tree-id3571 . -1) (undo-tree-id3573 . -1) (undo-tree-id3575 . -1) (undo-tree-id3577 . -1) (undo-tree-id3579 . -1) (#(")" 0 1 (fontified t)) . -10683) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3584 . -1) (undo-tree-id3586 . -1) (undo-tree-id3588 . -1) (undo-tree-id3590 . -1) (undo-tree-id3592 . -1) (undo-tree-id3594 . -1) 10684 (t 25969 48516 59231 663000)) ((10678 . 10684) (t 25969 48521 350581 156000)) (25969 48537 110940 0) 0 nil])
([nil nil ((12557 . 12558) (t 25969 48598 182446 341000)) nil (25969 48633 815936 0) 0 nil])
([nil nil ((10678 . 10679) (t 25969 48521 350581 156000)) ((#(" " 0 1 (fontified t)) . 10678) (undo-tree-id3608 . 1)) (25969 48536 701636 0) 0 nil])
([nil nil ((#("		wasm_bindgen_futures::JsFuture::from(device.open()).await.expect(\"Cannot Open Device\");" 0 2 (fontified t) 2 22 (face font-lock-constant-face fontified t) 22 24 (fontified t) 24 32 (face font-lock-type-face fontified t) 32 39 (fontified t) 39 52 (fontified t) 52 54 (fontified t) 54 59 (face font-lock-keyword-face fontified t) 59 60 (fontified t) 60 67 (fontified t) 67 87 (face font-lock-string-face fontified t) 87 89 (fontified t)) . 12558) (undo-tree-id3624 . -39) (undo-tree-id3625 . -53) (undo-tree-id3626 . -30) (undo-tree-id3627 . -30) (undo-tree-id3628 . -30) (undo-tree-id3629 . -30) (undo-tree-id3630 . -30) (undo-tree-id3631 . -30) (undo-tree-id3632 . -30) (undo-tree-id3633 . -30) (undo-tree-id3634 . -30) (undo-tree-id3635 . -30) (undo-tree-id3636 . -30) (undo-tree-id3637 . -30) (undo-tree-id3638 . -30) (undo-tree-id3639 . -30) (undo-tree-id3640 . -30) (undo-tree-id3641 . -30) (undo-tree-id3642 . -89)) nil (25969 48633 815934 0) 0 nil])
([nil nil ((10678 . 10680)) ((#(".g" 0 1 (fontified t) 1 2 (fontified t)) . 10678) (undo-tree-id3600 . -1) (undo-tree-id3601 . -2) (undo-tree-id3602 . -2) (undo-tree-id3603 . -2) (undo-tree-id3604 . -2) (undo-tree-id3605 . -2) (undo-tree-id3606 . -2) (undo-tree-id3607 . -2)) (25969 48536 387236 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11507 . 11508) (nil fontified nil 11506 . 11508) (nil fontified nil 11486 . 11506) (nil fontified nil 11479 . 11486) (nil fontified nil 11478 . 11479) (nil fontified nil 11473 . 11478) (nil fontified nil 11471 . 11473) (nil fontified nil 11458 . 11471) (nil fontified nil 11451 . 11458) (nil fontified nil 11443 . 11451) (nil fontified nil 11441 . 11443) (nil fontified nil 11421 . 11441) (nil fontified nil 11419 . 11421) (11419 . 11508)) nil (25969 48633 815900 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -10679) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) 10680) ((10679 . 10680)) (25969 48536 386952 0) 0 nil])
([nil nil ((11418 . 11421) (t 25969 48633 870065 248000)) nil (25969 48649 483250 0) 0 nil])
nil
([nil nil ((11421 . 11422)) nil (25969 48649 483249 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11421) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) 11422) nil (25969 48649 483247 0) 0 nil])
([nil nil ((11421 . 11434)) nil (25969 48649 483230 0) 0 nil])
([nil nil ((12664 . 12666) (t 25969 48649 536869 434000)) nil (25969 48689 458697 0) 0 nil])
([nil nil ((12666 . 12668)) nil (25969 48689 458696 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -12666) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -12667) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) 12668) nil (25969 48689 458694 0) 0 nil])
([nil nil ((12666 . 12671)) nil (25969 48689 458679 0) 0 nil])
([nil nil ((12669 . 12675) (#("de" 0 2 (fontified nil)) . 12669) (12669 . 12671) (#("device" 0 6 (fontified nil)) . -12669) (12669 . 12675) (#("de" 0 2 (fontified t)) . -12669) (undo-tree-id3679 . -2) (undo-tree-id3680 . -1) (undo-tree-id3681 . -2) (undo-tree-id3682 . -2) 12671) nil (25969 48689 458677 0) 0 nil])
([nil nil ((12675 . 12678)) nil (25969 48821 698538 0) 0 nil])
([nil nil ((#("		if device.op" 0 2 (fontified t) 2 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 12 (fontified t) 12 14 (fontified t)) . 12664) (undo-tree-id4565 . -12) (undo-tree-id4566 . -12) (undo-tree-id4567 . -12) (undo-tree-id4568 . -12) (undo-tree-id4569 . -12) (undo-tree-id4570 . -12) (undo-tree-id4571 . -12) (undo-tree-id4572 . -12) (undo-tree-id4573 . -12) (undo-tree-id4574 . -12) (undo-tree-id4575 . -12) (undo-tree-id4576 . -12) (undo-tree-id4577 . -12) (undo-tree-id4578 . -12) (undo-tree-id4579 . -12) (undo-tree-id4580 . -12) (undo-tree-id4581 . -12) (undo-tree-id4582 . -12) (undo-tree-id4583 . -12) (undo-tree-id4584 . -12) (undo-tree-id4585 . -12) (undo-tree-id4586 . -12) (undo-tree-id4587 . -12) (undo-tree-id4588 . -12) (undo-tree-id4589 . -12) (undo-tree-id4590 . -12) (undo-tree-id4591 . -12) (undo-tree-id4592 . -4) (undo-tree-id4593 . -4) (undo-tree-id4594 . -4) (undo-tree-id4595 . -4) (undo-tree-id4596 . -4) (undo-tree-id4597 . -4) (undo-tree-id4598 . -4) (undo-tree-id4599 . -4) (undo-tree-id4600 . -4) (undo-tree-id4601 . -4) (undo-tree-id4602 . -4) (undo-tree-id4603 . -4) (undo-tree-id4604 . -4) (undo-tree-id4605 . -4) (undo-tree-id4606 . -4) (undo-tree-id4607 . -4) (undo-tree-id4608 . -4) (undo-tree-id4609 . -5) (undo-tree-id4610 . -5) (undo-tree-id4611 . -5) (undo-tree-id4612 . -5) (undo-tree-id4613 . -5) (undo-tree-id4614 . -5) (undo-tree-id4615 . -5) (undo-tree-id4616 . -12) (undo-tree-id4617 . -12) (undo-tree-id4618 . -12) (undo-tree-id4619 . -12) (undo-tree-id4620 . -12) (undo-tree-id4621 . -12) (undo-tree-id4622 . -12) (undo-tree-id4623 . -12) (undo-tree-id4624 . -12) (undo-tree-id4625 . -12) (undo-tree-id4626 . -12) (undo-tree-id4627 . -12) (undo-tree-id4628 . -12) (undo-tree-id4629 . -12) (undo-tree-id4630 . -12) (undo-tree-id4631 . -12) (undo-tree-id4632 . -12) (undo-tree-id4633 . -12) (undo-tree-id4634 . -12) (undo-tree-id4635 . -12) (undo-tree-id4636 . -12) (undo-tree-id4637 . -12) (undo-tree-id4638 . -12) (undo-tree-id4639 . -12) (undo-tree-id4640 . -12) (undo-tree-id4641 . -12) (undo-tree-id4642 . -12) (undo-tree-id4643 . -12) (undo-tree-id4644 . -12) (undo-tree-id4645 . -12) (undo-tree-id4646 . -12) (undo-tree-id4647 . -12) (undo-tree-id4648 . -12) (undo-tree-id4649 . -12) (undo-tree-id4650 . -12) (undo-tree-id4651 . -12) (undo-tree-id4652 . -12) (undo-tree-id4653 . -12) (undo-tree-id4654 . -12) (undo-tree-id4655 . -12) (undo-tree-id4656 . -12) (undo-tree-id4657 . -12) (undo-tree-id4658 . -12) (undo-tree-id4659 . -12) (undo-tree-id4660 . -12) (undo-tree-id4661 . -12) (undo-tree-id4662 . -12) (undo-tree-id4663 . -12) (undo-tree-id4664 . -12) (undo-tree-id4665 . -12) (undo-tree-id4666 . -12) (undo-tree-id4667 . -12) (undo-tree-id4668 . -12) (undo-tree-id4669 . -12) (undo-tree-id4670 . -12) (undo-tree-id4671 . -12) (undo-tree-id4672 . -12) (undo-tree-id4673 . -12) (undo-tree-id4674 . -12) (undo-tree-id4675 . -12) (undo-tree-id4676 . -12) (undo-tree-id4677 . -12) (undo-tree-id4678 . -12) (undo-tree-id4679 . -12) (undo-tree-id4680 . -12) (undo-tree-id4681 . -12) (undo-tree-id4682 . -12) (undo-tree-id4683 . -12) (undo-tree-id4684 . -12) (undo-tree-id4685 . -12) (undo-tree-id4686 . -12) (undo-tree-id4687 . -12) (undo-tree-id4688 . -12) (undo-tree-id4689 . -12) (undo-tree-id4690 . -12) (undo-tree-id4691 . -12) (undo-tree-id4692 . -12) (undo-tree-id4693 . -12) (undo-tree-id4694 . -12) (undo-tree-id4695 . -12) (undo-tree-id4696 . -12) (undo-tree-id4697 . -12) (undo-tree-id4698 . -12) (undo-tree-id4699 . -9) (undo-tree-id4700 . -9) (undo-tree-id4701 . -9) (undo-tree-id4702 . -9) (undo-tree-id4703 . -9) (undo-tree-id4704 . -9) (undo-tree-id4705 . -9) (undo-tree-id4706 . -9) (undo-tree-id4707 . -9) (undo-tree-id4708 . -9) (undo-tree-id4709 . -9) (undo-tree-id4710 . -9) (undo-tree-id4711 . -9) (undo-tree-id4712 . -9) (undo-tree-id4713 . -9) (undo-tree-id4714 . -9) (undo-tree-id4715 . -9) (undo-tree-id4716 . -9) (undo-tree-id4717 . -9) (undo-tree-id4718 . -9) (undo-tree-id4719 . -9) (undo-tree-id4720 . -9) (undo-tree-id4721 . -9) (undo-tree-id4722 . -9) (undo-tree-id4723 . -9) (undo-tree-id4724 . -9) (undo-tree-id4725 . -9) (undo-tree-id4726 . -9) (undo-tree-id4727 . -9) (undo-tree-id4728 . -9) (undo-tree-id4729 . -9) (undo-tree-id4730 . -9) (undo-tree-id4731 . -9) (undo-tree-id4732 . -9) (undo-tree-id4733 . -9) (undo-tree-id4734 . -9) (undo-tree-id4735 . -9) (undo-tree-id4736 . -9) (undo-tree-id4737 . -9) (undo-tree-id4738 . -9) (undo-tree-id4739 . -9) (undo-tree-id4740 . -9) (undo-tree-id4741 . -9) (undo-tree-id4742 . -9) (undo-tree-id4743 . -9) (undo-tree-id4744 . -9) (undo-tree-id4745 . -9) (undo-tree-id4746 . -9) (undo-tree-id4747 . -9) (undo-tree-id4748 . -9) (undo-tree-id4749 . -9) (undo-tree-id4750 . -9) (undo-tree-id4751 . -9) (undo-tree-id4752 . -9) (undo-tree-id4753 . -9) (undo-tree-id4754 . -9) (undo-tree-id4755 . -9) (undo-tree-id4756 . -9) (undo-tree-id4757 . -9) (undo-tree-id4758 . -9) (undo-tree-id4759 . -9) (undo-tree-id4760 . -9) (undo-tree-id4761 . -9) (undo-tree-id4762 . -9) (undo-tree-id4763 . -9) (undo-tree-id4764 . -9) (undo-tree-id4765 . -9) (undo-tree-id4766 . -9) (undo-tree-id4767 . -9) (undo-tree-id4768 . -9) (undo-tree-id4769 . -9) (undo-tree-id4770 . -9) (undo-tree-id4771 . -9) (undo-tree-id4772 . -9) (undo-tree-id4773 . -9) (undo-tree-id4774 . -9) (undo-tree-id4775 . -9) (undo-tree-id4776 . -9) (undo-tree-id4777 . -9) (undo-tree-id4778 . -9) (undo-tree-id4779 . -9) (undo-tree-id4780 . -9) (undo-tree-id4781 . -9) (undo-tree-id4782 . -9) (undo-tree-id4783 . -12) (undo-tree-id4784 . -12) (undo-tree-id4785 . -12) (undo-tree-id4786 . -12) (undo-tree-id4787 . -12) (undo-tree-id4788 . -12) (undo-tree-id4789 . -12) (undo-tree-id4790 . -12) (undo-tree-id4791 . -12) (undo-tree-id4792 . -12) (undo-tree-id4793 . -12) (undo-tree-id4794 . -12) (undo-tree-id4795 . -12) (undo-tree-id4796 . -12) (undo-tree-id4797 . -12) (undo-tree-id4798 . -12) (undo-tree-id4799 . -12) (undo-tree-id4800 . -12) (undo-tree-id4801 . -12) (undo-tree-id4802 . -12) (undo-tree-id4803 . -5) (undo-tree-id4804 . -4) (undo-tree-id4805 . -4) (undo-tree-id4806 . -4) (undo-tree-id4807 . -4) (undo-tree-id4808 . -4) (undo-tree-id4809 . -4) (undo-tree-id4810 . -4) (undo-tree-id4811 . -4) (undo-tree-id4812 . -4) (undo-tree-id4813 . -4) (undo-tree-id4814 . -12) (undo-tree-id4815 . -12) (undo-tree-id4816 . -12) (undo-tree-id4817 . -12) (undo-tree-id4818 . -12) (undo-tree-id4819 . -12) (undo-tree-id4820 . -12) (undo-tree-id4821 . -12) (undo-tree-id4822 . -12) (undo-tree-id4823 . -12) (undo-tree-id4824 . -12) (undo-tree-id4825 . -12) (undo-tree-id4826 . -12) (undo-tree-id4827 . -12) (undo-tree-id4828 . -12) (undo-tree-id4829 . -12) (undo-tree-id4830 . -12) (undo-tree-id4831 . -12) (undo-tree-id4832 . -12) (undo-tree-id4833 . -12) (undo-tree-id4834 . -12) (undo-tree-id4835 . -12) (undo-tree-id4836 . -12) (undo-tree-id4837 . -12) (undo-tree-id4838 . -12) (undo-tree-id4839 . -12) (undo-tree-id4840 . -12) (undo-tree-id4841 . -12) (undo-tree-id4842 . -12) (undo-tree-id4843 . -12) (undo-tree-id4844 . -12) (undo-tree-id4845 . -12) (undo-tree-id4846 . -12) (undo-tree-id4847 . -12) (undo-tree-id4848 . -12) (undo-tree-id4849 . -12) (undo-tree-id4850 . -12) (undo-tree-id4851 . -12) (undo-tree-id4852 . -12) (undo-tree-id4853 . -14) (undo-tree-id4854 . -14) (undo-tree-id4855 . -14) (undo-tree-id4856 . -14) (undo-tree-id4857 . -14) (undo-tree-id4858 . -14) (undo-tree-id4859 . -14) (undo-tree-id4860 . -14)) nil (25969 48823 339460 0) 0 nil] [nil nil ((apply yas--snippet-revive 12676 12684 #s(yas--snippet nil nil #s(yas--exit #<marker at 12568 in component.rs> nil) 135 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 12568 in component.rs> nil) 135 nil nil nil nil)) (12676 . 12684) (#("opened()$0" 0 10 (fontified nil)) . 12676) (12676 . 12686) (#("op" 0 2 (fontified nil)) . 12676) (12676 . 12678) (#("opened()" 0 8 (fontified nil)) . -12676) (12676 . 12684) (#("op" 0 2 (fontified t)) . -12676) (undo-tree-id3672 . -2) (undo-tree-id3673 . -2) (undo-tree-id3675 . -2) (undo-tree-id3677 . -2) 12678) ((12676 . 12678) (#("opened()" 0 8 (fontified nil)) . 12676) (12676 . 12684) (#("op" 0 2 (fontified nil)) . 12676) (12676 . 12678) (#("opened()$0" 0 10 (fontified nil)) . 12676) (12676 . 12686) (#("opened()" 0 8 (fontified t)) . 12676) (undo-tree-id4395 . -8) (undo-tree-id4396 . -8) (undo-tree-id4397 . -8) (undo-tree-id4398 . -8) (undo-tree-id4399 . -8) (undo-tree-id4400 . -8) (undo-tree-id4401 . -8) (undo-tree-id4402 . -8) (undo-tree-id4403 . -8) (undo-tree-id4404 . -8) (undo-tree-id4405 . -8) (undo-tree-id4406 . -8) (undo-tree-id4407 . -8) (undo-tree-id4408 . -8) (undo-tree-id4409 . -8) (undo-tree-id4410 . -8) (undo-tree-id4411 . -8) (undo-tree-id4412 . -8) (undo-tree-id4413 . -8) (undo-tree-id4414 . -8) (undo-tree-id4415 . -8) (undo-tree-id4416 . -8) (undo-tree-id4417 . -8) (undo-tree-id4418 . -8) (undo-tree-id4419 . -8) (undo-tree-id4420 . -8) (undo-tree-id4421 . -8) (undo-tree-id4422 . -8) (undo-tree-id4423 . -8) (undo-tree-id4424 . -8) (undo-tree-id4425 . -8) (undo-tree-id4426 . -8) (undo-tree-id4427 . -8) (undo-tree-id4428 . -8) (undo-tree-id4429 . -8) (undo-tree-id4430 . -8) (undo-tree-id4431 . -8) (undo-tree-id4432 . -8) (undo-tree-id4433 . -8) (undo-tree-id4434 . -8) (undo-tree-id4435 . -8) (undo-tree-id4436 . -8) (undo-tree-id4437 . -8) (undo-tree-id4438 . -8) (undo-tree-id4439 . -8) (undo-tree-id4440 . -8) (undo-tree-id4441 . -8) (undo-tree-id4442 . -8) (undo-tree-id4443 . -8) (undo-tree-id4444 . -8) (undo-tree-id4445 . -8) (undo-tree-id4446 . -8) (undo-tree-id4447 . -8) (undo-tree-id4448 . -8) (undo-tree-id4449 . -8) (undo-tree-id4450 . -8) (undo-tree-id4451 . -8) (undo-tree-id4452 . -8) (undo-tree-id4453 . -8) (undo-tree-id4454 . -8) (undo-tree-id4455 . -8) (undo-tree-id4456 . -8) (undo-tree-id4457 . -4) (undo-tree-id4458 . -4) (undo-tree-id4459 . -4) (undo-tree-id4460 . -4) (undo-tree-id4461 . -4) (undo-tree-id4462 . -4) (undo-tree-id4463 . -4) (undo-tree-id4464 . -4) (undo-tree-id4465 . -4) (undo-tree-id4466 . -4) (undo-tree-id4467 . -4) (undo-tree-id4468 . -4) (undo-tree-id4469 . -4) (undo-tree-id4470 . -4) (undo-tree-id4471 . -4) (undo-tree-id4472 . -4) (undo-tree-id4473 . -4) (undo-tree-id4474 . -4) (undo-tree-id4475 . -4) (undo-tree-id4476 . -4) (undo-tree-id4477 . -4) (undo-tree-id4478 . -4) (undo-tree-id4479 . -4) (undo-tree-id4480 . -4) (undo-tree-id4481 . -4) (undo-tree-id4482 . -4) (undo-tree-id4483 . -4) (undo-tree-id4484 . -4) (undo-tree-id4485 . -4) (undo-tree-id4486 . -4) (undo-tree-id4487 . -4) (undo-tree-id4488 . -4) (undo-tree-id4489 . -4) (undo-tree-id4490 . -4) (undo-tree-id4491 . -4) (undo-tree-id4492 . -4) (undo-tree-id4493 . -4) (undo-tree-id4494 . -4) (undo-tree-id4495 . -4) (undo-tree-id4496 . -4) (undo-tree-id4497 . -4) (undo-tree-id4498 . -4) (undo-tree-id4499 . -4) (undo-tree-id4500 . -4) (undo-tree-id4501 . -4) (undo-tree-id4502 . -4) (undo-tree-id4503 . -4) (undo-tree-id4504 . -4) (undo-tree-id4505 . -4) (undo-tree-id4506 . -3) (undo-tree-id4507 . -3) (undo-tree-id4508 . -3) (undo-tree-id4509 . -3) (undo-tree-id4510 . -3) (undo-tree-id4511 . -3) (undo-tree-id4512 . -3) (undo-tree-id4513 . -3) (undo-tree-id4514 . -3) (undo-tree-id4515 . -3) (undo-tree-id4516 . -3) (undo-tree-id4517 . -3) (undo-tree-id4518 . -3) (undo-tree-id4519 . -3) (undo-tree-id4520 . -3) (undo-tree-id4521 . -8) (undo-tree-id4522 . -8) (undo-tree-id4523 . -8) (undo-tree-id4524 . -8) (undo-tree-id4525 . -8) (undo-tree-id4526 . -8) (undo-tree-id4527 . -8) (undo-tree-id4528 . -8) (undo-tree-id4529 . -8) (undo-tree-id4530 . -8) (undo-tree-id4531 . -8) (undo-tree-id4532 . -8) (undo-tree-id4533 . -8) (undo-tree-id4534 . -8) (undo-tree-id4535 . -8) (undo-tree-id4536 . -8) (undo-tree-id4537 . -8) (undo-tree-id4538 . -8) (undo-tree-id4539 . -8) (undo-tree-id4540 . -8) (undo-tree-id4541 . -8) (undo-tree-id4542 . -8) (undo-tree-id4543 . -8) (undo-tree-id4544 . -8) (undo-tree-id4545 . -8) (undo-tree-id4546 . -8) (undo-tree-id4547 . -8) (undo-tree-id4548 . -8) (undo-tree-id4549 . -8) (undo-tree-id4550 . -8) (undo-tree-id4551 . -8) (undo-tree-id4552 . -8) (undo-tree-id4553 . -8) (undo-tree-id4554 . -8) (undo-tree-id4555 . -8) (undo-tree-id4556 . -8) (undo-tree-id4557 . -8) (undo-tree-id4558 . -8) (undo-tree-id4559 . -8) (undo-tree-id4560 . -8) (undo-tree-id4561 . -8) (undo-tree-id4562 . -8) (undo-tree-id4563 . -8) (undo-tree-id4564 . -8)) (25969 48821 335889 0) 0 nil])
([nil nil ((12663 . 12665) (t 25969 48823 395294 28000)) nil (25969 48857 759973 0) 0 nil])
([nil nil ((12684 . 12687)) ((#(" {}" 0 2 (fontified t) 2 3 (fontified t)) . 12684) (undo-tree-id4372 . -2) (undo-tree-id4373 . -3) (undo-tree-id4374 . -2) (undo-tree-id4375 . -2) (undo-tree-id4376 . -2) (undo-tree-id4377 . -2) (undo-tree-id4378 . -2) (undo-tree-id4379 . -2) (undo-tree-id4380 . -2) (undo-tree-id4381 . -2) (undo-tree-id4382 . -2) (undo-tree-id4383 . -2) (undo-tree-id4384 . -2) (undo-tree-id4385 . -2) (undo-tree-id4386 . -2) (undo-tree-id4387 . -2) (undo-tree-id4388 . -2) (undo-tree-id4389 . -2) (undo-tree-id4390 . -3) (undo-tree-id4391 . -3) (undo-tree-id4392 . -3) (undo-tree-id4393 . -3) (undo-tree-id4394 . -3)) (25969 48820 852020 0) 0 nil])
([nil nil ((12665 . 12670)) nil (25969 48857 759972 0) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -12686) (undo-tree-id3666 . -1) (undo-tree-id3668 . -1) (undo-tree-id3670 . -1) 12687) ((12686 . 12687)) (25969 48820 452462 0) 0 nil])
([nil nil ((12668 . 12674) (#("de" 0 2 (fontified nil)) . 12668) (12668 . 12670) (#("device" 0 6 (fontified nil)) . -12668) (12668 . 12674) (#("de" 0 2 (fontified t)) . -12668) (undo-tree-id4889 . -2) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -2) (undo-tree-id4894 . -2) (undo-tree-id4895 . -2) (undo-tree-id4896 . -2) 12670) nil (25969 48857 759967 0) 0 nil])
([nil nil ((13556 . 13558) (13556 . 13557)) ((#("}" 0 1 (fontified nil)) . 13556) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (#("		" 0 2 (fontified t)) . 13556)) (25969 48819 727897 0) 0 nil])
([nil nil ((12674 . 12675)) nil (25969 48857 759956 0) 0 nil])
([nil nil ((13568 . 13572) (13562 . 13563) (#("    " 0 4 (fontified t)) . 13562) (13518 . 13522) (13505 . 13506) (#("    " 0 4 (fontified t)) . 13505) (13434 . 13438) (13425 . 13429) (13412 . 13413) (#("    " 0 4 (fontified t)) . 13412) (13368 . 13369) (#("    " 0 4 (fontified t)) . 13368) (13349 . 13353) (13229 . 13233) (13204 . 13205) (#("    " 0 4 (fontified t)) . 13204) (13122 . 13123) (#("    " 0 4 (fontified t)) . 13122) (13117 . 13118) (#("    " 0 4 (fontified t)) . 13117) (13066 . 13070) (13014 . 13018) (12962 . 12966) (12880 . 12884) (12859 . 12860) (#("    " 0 4 (fontified t)) . 12859) (12826 . 12827) (#("    " 0 4 (fontified t)) . 12826) (12806 . 12807) (#("    " 0 4 (fontified t)) . 12806) (12726 . 12730) (12690 . 12694) 12689) ((#("    " 0 4 (fontified t)) . 12690) (#("    " 0 4 (fontified t)) . 12726) (12806 . 12810) (#("	" 0 1 (fontified t)) . 12806) (12826 . 12830) (#("	" 0 1 (fontified t)) . 12826) (12859 . 12863) (#("	" 0 1 (fontified t)) . 12859) (#("    " 0 4 (fontified t)) . 12880) (#("    " 0 4 (fontified t)) . 12962) (#("    " 0 4 (fontified t)) . 13014) (#("    " 0 4 (fontified t)) . 13066) (13117 . 13121) (#("	" 0 1 (fontified t)) . 13117) (13122 . 13126) (#("	" 0 1 (fontified t)) . 13122) (13204 . 13208) (#("	" 0 1 (fontified t)) . 13204) (#("    " 0 4 (fontified t)) . 13229) (#("    " 0 4 (fontified t)) . 13349) (13368 . 13372) (#("	" 0 1 (fontified t)) . 13368) (13412 . 13416) (#("	" 0 1 (fontified t)) . 13412) (#("    " 0 4 (fontified t)) . 13425) (#("    " 0 4 (fontified t)) . 13434) (13505 . 13509) (#("	" 0 1 (fontified t)) . 13505) (#("    " 0 4 (fontified t)) . 13518) (13562 . 13566) (#("	" 0 1 (fontified t)) . 13562) (#("    " 0 4 (fontified t)) . 13568)) (25969 48818 598137 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -12674) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) 12675) nil (25969 48857 759955 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -12686) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3650 . -1) (undo-tree-id3652 . -1) (undo-tree-id3654 . -1) (undo-tree-id3656 . -1) (undo-tree-id3658 . -1) (undo-tree-id3660 . -1) (undo-tree-id3662 . -1) 12687) ((12686 . 12687)) (25969 48818 236409 0) 0 nil])
([nil nil ((12674 . 12677)) nil (25969 48857 759941 0) 0 nil])
([nil nil ((13576 . 13584) (t 25969 48689 511974 922000)) ((#(" else {}" 0 1 (fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 7 (fontified t) 7 8 (fontified t)) . 13576) (undo-tree-id4297 . -7) (undo-tree-id4298 . -7) (undo-tree-id4299 . -1) (undo-tree-id4300 . -8) (undo-tree-id4301 . -8) (undo-tree-id4302 . -7) (undo-tree-id4303 . -7) (undo-tree-id4304 . -7) (undo-tree-id4305 . -7) (undo-tree-id4306 . -7) (undo-tree-id4307 . -7) (undo-tree-id4308 . -7) (undo-tree-id4309 . -7) (undo-tree-id4310 . -7) (undo-tree-id4311 . -7) (undo-tree-id4312 . -7) (undo-tree-id4313 . -7) (undo-tree-id4314 . -7) (undo-tree-id4315 . -7) (undo-tree-id4316 . -7) (undo-tree-id4317 . -7) (undo-tree-id4318 . -7) (undo-tree-id4319 . -7) (undo-tree-id4320 . -7) (undo-tree-id4321 . -7) (undo-tree-id4322 . -7) (undo-tree-id4323 . -7) (undo-tree-id4324 . -7) (undo-tree-id4325 . -7) (undo-tree-id4326 . -7) (undo-tree-id4327 . -7) (undo-tree-id4328 . -7) (undo-tree-id4329 . -7) (undo-tree-id4330 . -7) (undo-tree-id4331 . -7) (undo-tree-id4332 . -7) (undo-tree-id4333 . -7)) (25969 48817 894044 0) 0 nil])
([nil nil ((apply yas--snippet-revive 12675 12683 #s(yas--snippet nil nil #s(yas--exit 12683 nil) 138 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 12683 nil) 138 nil nil nil nil)) (12675 . 12683) (#("opened()$0" 0 10 (fontified nil)) . 12675) (12675 . 12685) (#("op" 0 2 (fontified nil)) . 12675) (12675 . 12677) (#("opened()" 0 8 (fontified nil)) . -12675) (12675 . 12683) (#("op" 0 2 (fontified t)) . -12675) (undo-tree-id4871 . -1) (undo-tree-id4872 . -2) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -2) (undo-tree-id4877 . -2) (undo-tree-id4878 . -2) (undo-tree-id4879 . -2) 12677) nil (25969 48857 759939 0) 0 nil])
([nil nil ((13585 . 13587) (#("		    " 0 6 (fontified nil)) . 13584) (undo-tree-id3750 . -2) (undo-tree-id3752 . -2) (13586 . 13590) (13583 . 13587)) ((#("
		
" 0 1 (fontified t) 1 3 (fontified nil) 3 4 (fontified nil)) . 13583) (undo-tree-id4263 . -3) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (#("    " 0 4 (fontified nil)) . 13586) (13584 . 13590) (#("		" 0 2 (fontified t)) . 13585)) (25969 48817 705947 0) 0 nil])
([nil nil ((12683 . 12685)) nil (25969 48857 759924 0) 0 nil])
([nil nil ((13584 . 13590)) ((#("		    " 0 6 (fontified t)) . 13584) (undo-tree-id4232 . -6) (undo-tree-id4233 . -6) (undo-tree-id4234 . -6) (undo-tree-id4235 . -6) (undo-tree-id4236 . -6) (undo-tree-id4237 . -6) (undo-tree-id4238 . -6) (undo-tree-id4239 . -6) (undo-tree-id4240 . -6) (undo-tree-id4241 . -6) (undo-tree-id4242 . -6) (undo-tree-id4243 . -6) (undo-tree-id4244 . -6) (undo-tree-id4245 . -6) (undo-tree-id4246 . -6) (undo-tree-id4247 . -6) (undo-tree-id4248 . -6) (undo-tree-id4249 . -6) (undo-tree-id4250 . -6) (undo-tree-id4251 . -6) (undo-tree-id4252 . -6) (undo-tree-id4253 . -6) (undo-tree-id4254 . -6) (undo-tree-id4255 . -6) (undo-tree-id4256 . -6) (undo-tree-id4257 . -6) (undo-tree-id4258 . -6) (undo-tree-id4259 . -6) (undo-tree-id4260 . -6) (undo-tree-id4261 . -6) (undo-tree-id4262 . -6)) (25969 48817 517383 0) 0 nil])
([nil nil ((apply yas--snippet-revive 12684 12689 #s(yas--snippet nil nil #s(yas--exit 12689 nil) 139 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 12689 nil) 139 nil nil nil nil)) (12684 . 12689) (#("not()$0" 0 7 (fontified nil)) . 12684) (12684 . 12691) (#("n" 0 1 (fontified nil)) . 12684) (12684 . 12685) (#("not() (as Not)" 0 14 (fontified nil)) . -12684) (12684 . 12698) (#("n" 0 1 (fontified t)) . -12684) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) 12685) nil (25969 48857 759922 0) 0 nil])
([nil nil ((13590 . 13593)) ((#("log" 0 3 (fontified t)) . 13590) (undo-tree-id4230 . -3) (undo-tree-id4231 . -3)) (25969 48817 317567 0) 0 nil])
([nil nil ((12689 . 12692)) nil (25969 48857 759910 0) 0 nil])
([nil nil ((13590 . 13597) (#("log" 0 3 (fontified nil)) . 13590) (13590 . 13593) (#("logging" 0 7 (fontified nil)) . -13590) (13590 . 13597) (#("log" 0 3 (fontified t)) . -13590) (undo-tree-id3740 . -3) (undo-tree-id3742 . -1) (undo-tree-id3744 . -2) (undo-tree-id3746 . -3) (undo-tree-id3748 . -3) 13593) ((13590 . 13593) (#("logging" 0 7 (fontified nil)) . 13590) (13590 . 13597) (#("log" 0 3 (fontified nil)) . 13590) (13590 . 13593) (#("logging" 0 7 (fontified t)) . 13590) (undo-tree-id4201 . -7) (undo-tree-id4202 . -7) (undo-tree-id4203 . -7) (undo-tree-id4204 . -7) (undo-tree-id4205 . -7) (undo-tree-id4206 . -7) (undo-tree-id4207 . -7) (undo-tree-id4208 . -7) (undo-tree-id4209 . -7) (undo-tree-id4210 . -7) (undo-tree-id4211 . -7) (undo-tree-id4212 . -7) (undo-tree-id4213 . -7) (undo-tree-id4214 . -7) (undo-tree-id4215 . -7) (undo-tree-id4216 . -7) (undo-tree-id4217 . -7) (undo-tree-id4218 . -7) (undo-tree-id4219 . -7) (undo-tree-id4220 . -7) (undo-tree-id4221 . -7) (undo-tree-id4222 . -7) (undo-tree-id4223 . -7) (undo-tree-id4224 . -7) (undo-tree-id4225 . -7) (undo-tree-id4226 . -7) (undo-tree-id4227 . -7) (undo-tree-id4228 . -7) (undo-tree-id4229 . -7)) (25969 48817 148476 0) 0 nil])
([nil nil ((12693 . 12695) (#("		    " 0 6 (fontified nil)) . 12692) (undo-tree-id4861 . -2) (undo-tree-id4862 . -2) (undo-tree-id4863 . -2) (12694 . 12698) (12691 . 12695)) nil (25969 48857 759909 0) 0 nil])
([nil nil ((13597 . 13600)) ((#("::l" 0 2 (fontified t) 2 3 (fontified t)) . 13597) (undo-tree-id4173 . -3) (undo-tree-id4174 . -2) (undo-tree-id4175 . -2) (undo-tree-id4176 . -2) (undo-tree-id4177 . -2) (undo-tree-id4178 . -2) (undo-tree-id4179 . -2) (undo-tree-id4180 . -2) (undo-tree-id4181 . -2) (undo-tree-id4182 . -2) (undo-tree-id4183 . -2) (undo-tree-id4184 . -2) (undo-tree-id4185 . -2) (undo-tree-id4186 . -2) (undo-tree-id4187 . -2) (undo-tree-id4188 . -2) (undo-tree-id4189 . -2) (undo-tree-id4190 . -2) (undo-tree-id4191 . -2) (undo-tree-id4192 . -2) (undo-tree-id4193 . -2) (undo-tree-id4194 . -2) (undo-tree-id4195 . -2) (undo-tree-id4196 . -2) (undo-tree-id4197 . -2) (undo-tree-id4198 . -2) (undo-tree-id4199 . -2) (undo-tree-id4200 . -3)) (25969 48816 997162 0) 0 nil])
([nil nil ((12692 . 12698)) nil (25969 48857 759898 0) 0 nil])
([nil nil ((apply yas--snippet-revive 13599 13605 #s(yas--snippet nil nil #s(yas--exit #<marker at 13456 in component.rs> nil) 136 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 13456 in component.rs> nil) 136 nil nil nil nil)) (13599 . 13605) (#("log!($0)" 0 8 (fontified nil)) . 13599) (13599 . 13607) (#("l" 0 1 (fontified nil)) . 13599) (13599 . 13600) (#("log!(…)" 0 7 (fontified nil)) . -13599) (13599 . 13606) (#("l" 0 1 (fontified t)) . -13599) (undo-tree-id3735 . -1) (undo-tree-id3737 . -1) (undo-tree-id3739 . -1) 13600) ((13599 . 13600) (#("log!(…)" 0 7 (fontified nil)) . 13599) (13599 . 13606) (#("l" 0 1 (fontified nil)) . 13599) (13599 . 13600) (#("log!($0)" 0 8 (fontified nil)) . 13599) (13599 . 13607) (#("log!()" 0 4 (face font-lock-preprocessor-face fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 13599) (undo-tree-id4146 . -5) (undo-tree-id4147 . -5) (undo-tree-id4148 . -6) (undo-tree-id4149 . -6) (undo-tree-id4150 . -6) (undo-tree-id4151 . -6) (undo-tree-id4152 . -6) (undo-tree-id4153 . -6) (undo-tree-id4154 . -6) (undo-tree-id4155 . -6) (undo-tree-id4156 . -6) (undo-tree-id4157 . -6) (undo-tree-id4158 . -6) (undo-tree-id4159 . -6) (undo-tree-id4160 . -6) (undo-tree-id4161 . -5) (undo-tree-id4162 . -5) (undo-tree-id4163 . -5) (undo-tree-id4164 . -5) (undo-tree-id4165 . -5) (undo-tree-id4166 . -5) (undo-tree-id4167 . -5) (undo-tree-id4168 . -5) (undo-tree-id4169 . -5) (undo-tree-id4170 . -5) (undo-tree-id4171 . -5) (undo-tree-id4172 . -5)) (25969 48816 818155 0) 0 nil])
([nil nil ((nil fontified nil 12786 . 12787) (nil fontified nil 12785 . 12786) (nil fontified nil 12765 . 12785) (nil fontified nil 12758 . 12765) (nil fontified nil 12757 . 12758) (nil fontified nil 12752 . 12757) (nil fontified nil 12750 . 12752) (nil fontified nil 12737 . 12750) (nil fontified nil 12730 . 12737) (nil fontified nil 12722 . 12730) (nil fontified nil 12720 . 12722) (nil fontified nil 12700 . 12720) (nil fontified nil 12698 . 12700) (12698 . 12787)) nil (25969 48857 759896 0) 0 nil])
([nil nil ((13604 . 13606)) ((#("\"\"" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t)) . 13604) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1)) (25969 48816 648242 0) 0 nil])
([nil nil ((#("		" 0 2 (fontified t)) . -12698) 12787) nil (25969 48996 194732 0) 0 nil])
([nil nil ((13605 . 13607)) ((#("di" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t)) . 13605) (undo-tree-id4125 . -2) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -2)) (25969 48816 461426 0) 0 nil])
([nil nil ((apply -69 11651 12596 undo--wrap-and-run-primitive-undo 11651 12596 ((12575 . 12578) (12534 . 12537) (12497 . 12500) (12462 . 12465) (12404 . 12407) (12393 . 12396) (12385 . 12388) (12369 . 12372) (12353 . 12356) (12276 . 12279) (12255 . 12258) (12239 . 12242) (12166 . 12169) (12138 . 12141) (12065 . 12068) (11997 . 12000) (11977 . 11980) (11944 . 11947) (11830 . 11833) (11781 . 11784) (11748 . 11751) (11696 . 11699) (11653 . 11656) 11651))) nil (25969 49000 454229 0) 0 nil] [nil nil ((#("		let closure = Closure::wrap(Box::new(
		    move |evt: web_sys::HidInputReportEvent| {
			let dataview = evt.data();
			logging::log!(\"DataView: {:?}\", dataview);
			let arraybuffer = dataview.buffer().dyn_into::<js_sys::Uint8Array>().expect(\"Cannot convert to Int8Array\");
			let rid = evt.report_id();
			if rid == 2 {
			    let _adc_data_page = arraybuffer.at(0).unwrap() as usize;
			    // for (idx, x) in handle.recv_buf[2..18].iter().enumerate() {
			    // 	if idx%2==1 {
			    // 	    adc_data[idx/2 + adc_data_page*8] += x.clone() as u32;
			    // 	}
			    // 	else {
			    // 	    adc_data[idx/2 + adc_data_page*8] = x.clone() as u32 *256;
			    // 	}
			    // } 
			}
		    }
		) as Box<dyn FnMut(web_sys::HidInputReportEvent)> );
		let jsval = closure.as_ref();
		let cb = jsval.unchecked_ref();
		device.set_oninputreport(Some(cb));
		closure.forget();" 0 2 (fontified t) 2 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face font-lock-variable-name-face fontified t) 13 16 (fontified t) 16 23 (face font-lock-type-face fontified t) 23 30 (fontified t) 30 33 (face font-lock-type-face fontified t) 33 40 (fontified t) 40 46 (fontified t) 46 50 (face font-lock-keyword-face fontified t) 50 52 (fontified t) 52 53 (face font-lock-variable-name-face fontified t) 53 55 (face font-lock-variable-name-face fontified t) 55 57 (fontified t) 57 64 (face font-lock-constant-face fontified t) 64 66 (fontified t) 66 85 (face font-lock-type-face fontified t) 85 89 (fontified t) 89 92 (fontified t) 92 95 (face font-lock-keyword-face fontified t) 95 96 (fontified t) 96 104 (face font-lock-variable-name-face fontified t) 104 107 (fontified t) 107 111 (fontified t) 111 119 (fontified t) 119 122 (fontified t) 122 129 (face font-lock-constant-face fontified t) 129 131 (fontified t) 131 135 (face font-lock-preprocessor-face fontified t) 135 136 (fontified t) 136 137 (face font-lock-string-face fontified t) 137 151 (face font-lock-string-face fontified t) 151 152 (face font-lock-string-face fontified t) 152 154 (fontified t) 154 162 (fontified t) 162 164 (fontified t) 164 165 (fontified t) 165 168 (fontified t) 168 171 (face font-lock-keyword-face fontified t) 171 172 (fontified t) 172 183 (face font-lock-variable-name-face fontified t) 183 186 (fontified t) 186 194 (fontified t) 194 195 (fontified t) 195 204 (fontified t) 204 212 (fontified t) 212 214 (fontified t) 214 215 (fontified t) 215 221 (face font-lock-constant-face fontified t) 221 223 (fontified t) 223 233 (face font-lock-type-face fontified t) 233 234 (fontified t) 234 237 (fontified t) 237 244 (fontified t) 244 273 (face font-lock-string-face fontified t) 273 274 (fontified t) 274 275 (fontified t) 275 276 (fontified t) 276 279 (fontified t) 279 282 (face font-lock-keyword-face fontified t) 282 283 (fontified t) 283 286 (face font-lock-variable-name-face fontified t) 286 306 (fontified t) 306 309 (fontified t) 309 311 (face font-lock-keyword-face fontified t) 311 323 (fontified t) 323 330 (fontified t) 330 333 (face font-lock-keyword-face fontified t) 333 334 (fontified t) 334 335 (face font-lock-variable-name-face fontified t) 335 348 (face font-lock-variable-name-face fontified t) 348 351 (fontified t) 351 363 (fontified t) 363 369 (fontified t) 369 375 (fontified t) 375 377 (fontified t) 377 378 (fontified t) 378 380 (face font-lock-keyword-face fontified t) 380 381 (fontified t) 381 386 (face font-lock-type-face fontified t) 386 388 (fontified t) 388 395 (fontified t) 395 398 (face font-lock-comment-delimiter-face fontified t) 398 401 (face font-lock-comment-face fontified t) 401 408 (face font-lock-comment-face fontified t) 408 411 (face font-lock-comment-face fontified t) 411 413 (face font-lock-comment-face fontified t) 413 458 (face font-lock-comment-face fontified t) 458 465 (fontified t) 465 468 (face font-lock-comment-delimiter-face fontified t) 468 469 (face font-lock-comment-delimiter-face fontified t) 469 471 (face font-lock-comment-face fontified t) 471 483 (face font-lock-comment-face fontified t) 483 490 (fontified t) 490 493 (face font-lock-comment-delimiter-face fontified t) 493 498 (face font-lock-comment-delimiter-face fontified t) 498 518 (face font-lock-comment-face fontified t) 518 545 (face font-lock-comment-face fontified t) 545 547 (face font-lock-comment-face fontified t) 547 548 (face font-lock-comment-face fontified t) 548 551 (face font-lock-comment-face fontified t) 551 553 (face font-lock-comment-face fontified t) 553 560 (fontified t) 560 563 (face font-lock-comment-delimiter-face fontified t) 563 564 (face font-lock-comment-delimiter-face fontified t) 564 566 (face font-lock-comment-face fontified t) 566 573 (fontified t) 573 576 (face font-lock-comment-delimiter-face fontified t) 576 577 (face font-lock-comment-delimiter-face fontified t) 577 581 (face font-lock-comment-face fontified t) 581 584 (face font-lock-comment-face fontified t) 584 591 (fontified t) 591 594 (face font-lock-comment-delimiter-face fontified t) 594 599 (face font-lock-comment-delimiter-face fontified t) 599 622 (face font-lock-comment-face fontified t) 622 645 (face font-lock-comment-face fontified t) 645 647 (face font-lock-comment-face fontified t) 647 648 (face font-lock-comment-face fontified t) 648 651 (face font-lock-comment-face fontified t) 651 658 (face font-lock-comment-face fontified t) 658 665 (fontified t) 665 668 (face font-lock-comment-delimiter-face fontified t) 668 669 (face font-lock-comment-delimiter-face fontified t) 669 671 (face font-lock-comment-face fontified t) 671 678 (fontified t) 678 681 (face font-lock-comment-delimiter-face fontified t) 681 682 (face font-lock-comment-face fontified t) 682 683 (face font-lock-comment-face fontified t rear-nonsticky t) 683 684 (face font-lock-comment-face fontified t) 684 688 (fontified t) 688 689 (fontified t) 689 695 (fontified t) 695 697 (fontified t) 697 699 (fontified t) 699 701 (fontified t) 701 703 (face font-lock-keyword-face fontified t) 703 704 (fontified t) 704 707 (face font-lock-type-face fontified t) 707 708 (fontified t) 708 711 (face font-lock-keyword-face fontified t) 711 712 (fontified t) 712 717 (face font-lock-type-face fontified t) 717 718 (fontified t) 718 725 (face font-lock-constant-face fontified t) 725 727 (fontified t) 727 746 (face font-lock-type-face fontified t) 746 747 (fontified t) 747 748 (fontified t) 748 751 (fontified t) 751 752 (fontified t) 752 754 (fontified t) 754 757 (face font-lock-keyword-face fontified t) 757 758 (fontified t) 758 763 (face font-lock-variable-name-face fontified t) 763 783 (fontified t) 783 784 (fontified t) 784 786 (fontified t) 786 789 (face font-lock-keyword-face fontified t) 789 790 (fontified t) 790 792 (face font-lock-variable-name-face fontified t) 792 817 (fontified t) 817 818 (fontified t) 818 820 (fontified t) 820 826 (fontified t) 826 845 (fontified t) 845 849 (face font-lock-type-face fontified t) 849 856 (fontified t) 856 858 (fontified t) 858 874 (fontified t) 874 875 (fontified t rear-nonsticky t)) . 11651) (undo-tree-id4897 . -875) (undo-tree-id4898 . -834) (undo-tree-id4899 . -52) (undo-tree-id4900 . -53) (undo-tree-id4901 . -168) (undo-tree-id4902 . -309) (undo-tree-id4903 . -330) (undo-tree-id4904 . -186) (undo-tree-id4905 . -180) (undo-tree-id4906 . -180) (undo-tree-id4907 . -223) (undo-tree-id4908 . -683) (undo-tree-id4909 . -40) (undo-tree-id4910 . -40) (undo-tree-id4911 . -40) (undo-tree-id4912 . -40) (undo-tree-id4913 . -40) (undo-tree-id4914 . -40) (undo-tree-id4915 . -40) (undo-tree-id4916 . -89) (undo-tree-id4917 . -119) (undo-tree-id4918 . -165) (undo-tree-id4919 . -276) (undo-tree-id4920 . -306) (undo-tree-id4921 . -323) (undo-tree-id4922 . -388) (undo-tree-id4923 . -458) (undo-tree-id4924 . -483) (undo-tree-id4925 . -553) (undo-tree-id4926 . -553) (undo-tree-id4927 . -553) (undo-tree-id4928 . -553) (undo-tree-id4929 . -553) (undo-tree-id4930 . -553) (undo-tree-id4931 . -553) (undo-tree-id4932 . -553) (undo-tree-id4933 . -553) (undo-tree-id4934 . -553) (undo-tree-id4935 . -553) (undo-tree-id4936 . -553) (undo-tree-id4937 . -553) (undo-tree-id4938 . -553) (undo-tree-id4939 . -553) (undo-tree-id4940 . -553) (undo-tree-id4941 . -553) (undo-tree-id4942 . -856) (undo-tree-id4943 . -818) (undo-tree-id4944 . -784) (undo-tree-id4945 . -752) (undo-tree-id4946 . -697) (undo-tree-id4947 . -689) (undo-tree-id4948 . -684) (undo-tree-id4949 . -671) (undo-tree-id4950 . -658) (undo-tree-id4951 . -584) (undo-tree-id4952 . -584) (undo-tree-id4953 . -584) (undo-tree-id4954 . -566) (undo-tree-id4955 . -566) (undo-tree-id4956 . -566) (undo-tree-id4957 . -566) (undo-tree-id4958 . -566) (undo-tree-id4959 . -566) (undo-tree-id4960 . -566) (undo-tree-id4961 . -566) (undo-tree-id4962 . -566) (undo-tree-id4963 . -566) (undo-tree-id4964 . -566) (undo-tree-id4965 . -566) (undo-tree-id4966 . -566) (undo-tree-id4967 . -566) (undo-tree-id4968 . -566) (undo-tree-id4969 . -566) (undo-tree-id4970 . -566) (undo-tree-id4971 . -566) (undo-tree-id4972 . -566) (undo-tree-id4973 . -566) (undo-tree-id4974 . -566) (undo-tree-id4975 . -23) (undo-tree-id4976 . -23) (undo-tree-id4977 . -23) (undo-tree-id4978 . -23) (undo-tree-id4979 . -23) (undo-tree-id4980 . -23) (undo-tree-id4981 . -23) (undo-tree-id4982 . -23) (undo-tree-id4983 . -23) (undo-tree-id4984 . -23) (undo-tree-id4985 . -23) (undo-tree-id4986 . -23) (undo-tree-id4987 . -23) (undo-tree-id4988 . -28) (undo-tree-id4989 . -28) (undo-tree-id4990 . -28) (undo-tree-id4991 . -28) (undo-tree-id4992 . -28) (undo-tree-id4993 . -28) (undo-tree-id4994 . -28) (undo-tree-id4995 . -28) (undo-tree-id4996 . -28) (undo-tree-id4997 . -28) (undo-tree-id4998 . -28) (undo-tree-id4999 . -28) (undo-tree-id5000 . -28) (undo-tree-id5001 . -28) (undo-tree-id5002 . -28) (undo-tree-id5003 . -28) (undo-tree-id5004 . -28) (undo-tree-id5005 . -875) (undo-tree-id5006 . -875) (undo-tree-id5007 . -875) (undo-tree-id5008 . -875) (undo-tree-id5009 . -875) (undo-tree-id5010 . -875) (undo-tree-id5011 . -875) (undo-tree-id5012 . -836) (undo-tree-id5013 . -696) (undo-tree-id5014 . -587) (undo-tree-id5015 . -460) (undo-tree-id5016 . -166) (undo-tree-id5017 . -89) (undo-tree-id5018 . -875) (t 25969 48857 816822 881000)) ((11651 . 12526)) (25969 48995 764226 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t)) . -13606) (undo-tree-id3731 . -1) (undo-tree-id3733 . -1) 13607) ((13606 . 13607)) (25969 48816 281440 0) 0 nil])
([nil nil ((13729 . 13731) (t 25969 49000 509738 316000)) nil (25969 49035 86450 0) 0 nil])
([nil nil ((11651 . 11652)) ((#("c" 0 1 (fontified t)) . 11651) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1)) (25969 48995 763842 0) 0 nil])
([nil nil ((13606 . 13608)) ((#("ev" 0 2 (face font-lock-string-face fontified t)) . 13606) (undo-tree-id4117 . -2) (undo-tree-id4118 . -2) (undo-tree-id4119 . -2) (undo-tree-id4120 . -2) (undo-tree-id4121 . -2) (undo-tree-id4122 . -2) (undo-tree-id4123 . -2) (undo-tree-id4124 . -2)) (25969 48816 97876 0) 0 nil])
([nil nil ((13731 . 13735)) nil (25969 49035 86449 0) 0 nil])
nil
([nil nil ((13608 . 13619)) ((#("ice is hot " 0 7 (face font-lock-string-face fontified t) 7 8 (face font-lock-string-face fontified t) 8 9 (face font-lock-string-face fontified t) 9 10 (face font-lock-string-face fontified t) 10 11 (face font-lock-string-face fontified t)) . 13608) (undo-tree-id4110 . -11) (undo-tree-id4111 . -7) (undo-tree-id4112 . -7) (undo-tree-id4113 . -7) (undo-tree-id4114 . -7) (undo-tree-id4115 . -7) (undo-tree-id4116 . -11)) (25969 48815 902539 0) 0 nil])
([nil nil ((13731 . 13738) (#("logg" 0 4 (fontified nil)) . 13731) (13731 . 13735) (#("logging" 0 7 (fontified nil)) . -13731) (13731 . 13738) (#("logg" 0 4 (fontified t)) . -13731) (undo-tree-id5081 . -4) (undo-tree-id5082 . -1) (undo-tree-id5083 . -2) (undo-tree-id5084 . -3) (undo-tree-id5085 . -4) 13735) nil (25969 49035 86447 0) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-string-face fontified t)) . -13615) (undo-tree-id3711 . -1) (undo-tree-id3713 . -1) (undo-tree-id3715 . -1) (undo-tree-id3717 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -13616) (undo-tree-id3719 . -1) (undo-tree-id3721 . -1) (undo-tree-id3723 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -13617) (undo-tree-id3725 . -1) (undo-tree-id3727 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -13618) (undo-tree-id3729 . -1) 13619) ((13615 . 13619)) (25969 48815 655281 0) 0 nil])
([nil nil ((13738 . 13741)) nil (25969 49035 86440 0) 0 nil])
([nil nil ((13615 . 13621)) ((#("not oi" 0 5 (face font-lock-string-face fontified t) 5 6 (face font-lock-string-face fontified t)) . 13615) (undo-tree-id4105 . -6) (undo-tree-id4106 . -5) (undo-tree-id4107 . -5) (undo-tree-id4108 . -5) (undo-tree-id4109 . -6)) (25969 48815 393673 0) 0 nil])
([nil nil ((apply yas--snippet-revive 13740 13746 #s(yas--snippet nil nil #s(yas--exit 13745 nil) 140 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 13745 nil) 140 nil nil nil nil)) (13740 . 13746) (#("log!($0)" 0 8 (fontified nil)) . 13740) (13740 . 13748) (#("l" 0 1 (fontified nil)) . 13740) (13740 . 13741) (#("log!(…)" 0 7 (fontified nil)) . -13740) (13740 . 13747) (#("l" 0 1 (fontified t)) . -13740) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) 13741) nil (25969 49035 86437 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t)) . -13620) (undo-tree-id3709 . -1) 13621) ((13620 . 13621)) (25969 48814 827864 0) 0 nil])
([nil nil ((13745 . 13746)) nil (25969 49035 86428 0) 0 nil])
([nil nil ((13620 . 13623)) ((#("pen" 0 3 (face font-lock-string-face fontified t)) . 13620)) (25969 48814 251481 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -13745) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) 13746) nil (25969 49035 86427 0) 0 nil])
([nil nil ((13625 . 13626)) ((#(";" 0 1 (fontified t)) . 13625) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1)) (25969 48813 400504 0) 0 nil])
([nil nil ((13745 . 13747)) nil (25969 49035 86419 0) 0 nil])
([nil nil ((13626 . 13633)) (("
		    " . 13626) (undo-tree-id4088 . -7) (undo-tree-id4089 . -7) (undo-tree-id4090 . -7) (undo-tree-id4091 . -7) (undo-tree-id4092 . -7) (undo-tree-id4093 . -7)) (25969 48812 572036 0) 0 nil])
([nil nil ((13746 . 13751)) nil (25969 49035 86418 0) 0 nil])
([nil nil ((11435 . 11436)) ((#("
" 0 1 (fontified t)) . 11435) (undo-tree-id4087 . -1)) (25969 48812 63284 0) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-string-face fontified t)) . -13746) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -13747) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -13748) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -13749) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -13750) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) 13751) nil (25969 49035 86414 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -11434) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3757 . -1) (undo-tree-id3759 . -1) (undo-tree-id3761 . -1) (undo-tree-id3763 . -1) (undo-tree-id3765 . -1) (undo-tree-id3767 . -1) 11435) ((11434 . 11435)) (25969 48811 483391 0) 0 nil] [nil nil ((#("device

" 0 6 (face font-lock-comment-face fontified t) 6 7 (face font-lock-comment-face fontified t) 7 8 (fontified t)) . -11428) (undo-tree-id3696 . -7) (undo-tree-id3697 . -8) (undo-tree-id3698 . -7) (undo-tree-id3699 . -7) (undo-tree-id3700 . -7) (undo-tree-id3701 . -7) (undo-tree-id3702 . -7) (undo-tree-id3703 . -7) (undo-tree-id3704 . -7) (undo-tree-id3705 . -7) (undo-tree-id3706 . -8) (undo-tree-id3707 . -8) (undo-tree-id3708 . -8) 11436) ((11428 . 11436)) (25969 48721 779129 0) 0 nil])
([nil nil ((13746 . 13755)) nil (25969 49035 86353 0) 0 nil])
([nil nil ((nil fontified nil 13721 . 13722) (nil fontified nil 13720 . 13721) (nil fontified nil 13700 . 13720) (nil fontified nil 13693 . 13700) (nil fontified nil 13692 . 13693) (nil fontified nil 13687 . 13692) (nil fontified nil 13685 . 13687) (nil fontified nil 13672 . 13685) (nil fontified nil 13665 . 13672) (nil fontified nil 13657 . 13665) (nil fontified nil 13655 . 13657) (nil fontified nil 13635 . 13655) (nil fontified nil 13633 . 13635) (13633 . 13722)) ((#("		wasm_bindgen_futures::JsFuture::from(device.open()).await.expect(\"Cannot Open Device\");" 0 2 (fontified nil) 2 22 (face font-lock-constant-face fontified nil) 22 24 (fontified nil) 24 32 (face font-lock-type-face fontified nil) 32 39 (fontified nil) 39 52 (fontified nil) 52 54 (fontified nil) 54 59 (face font-lock-keyword-face fontified nil) 59 60 (fontified nil) 60 67 (fontified nil) 67 87 (face font-lock-string-face fontified nil) 87 88 (fontified nil) 88 89 (fontified nil rear-nonsticky t)) . 13633) (undo-tree-id4083 . -89) (undo-tree-id4084 . -89) (undo-tree-id4085 . -89) (undo-tree-id4086 . -89) (nil fontified t 13721 . 13722)) (25969 48809 511513 0) 0 nil])
nil
([nil nil ((13755 . 13757)) nil (25969 49035 86351 0) 0 nil])
([nil nil ((#("		" 0 2 (fontified t)) . -13633) 13722) ((13633 . 13635)) (25969 48808 107407 0) 0 nil])
([nil nil ((13759 . 13760)) nil (25969 49035 86347 0) 0 nil])
([nil nil ((12686 . 12693) (t 25969 48731 336074 241000)) ((#("
		    " 0 1 (fontified t) 1 7 (fontified t)) . 12686) (undo-tree-id4082 . -1)) (25969 48807 339797 0) 0 nil])
([nil nil ((11653 . 11655) (#("		" 0 2 (fontified nil)) . 11652) (undo-tree-id5090 . -2) (undo-tree-id5091 . -2) (undo-tree-id5092 . -2) (11652 . 11655) (#("		" 0 2 (fontified nil)) . 11651) (undo-tree-id5093 . -2) (undo-tree-id5094 . -2) (undo-tree-id5095 . -2) (11651 . 11654) (#("		" 0 2 (face font-lock-comment-face fontified nil)) . 11650) (11650 . 11652) (11650 . 11651) (t 25969 49035 142461 255000)) nil (25969 49219 802488 0) 0 nil])
([nil nil ((#("else {
		    logging::log!(\"device is not open\");
		    wasm_bindgen_futures::JsFuture::from(device.open()).await.expect(\"Cannot Open Device\");
		}" 0 4 (face font-lock-keyword-face fontified t) 4 7 (fontified t) 7 13 (fontified t) 13 20 (face font-lock-constant-face fontified t) 20 22 (fontified t) 22 26 (face font-lock-preprocessor-face fontified t) 26 27 (fontified t) 27 47 (face font-lock-string-face fontified t) 47 50 (fontified t) 50 56 (fontified t) 56 76 (face font-lock-constant-face fontified t) 76 78 (fontified t) 78 86 (face font-lock-type-face fontified t) 86 93 (fontified t) 93 106 (fontified t) 106 108 (fontified t) 108 113 (face font-lock-keyword-face fontified t) 113 114 (fontified t) 114 121 (fontified t) 121 141 (face font-lock-string-face fontified t) 141 142 (fontified t) 142 143 (fontified t rear-nonsticky t) 143 144 (fontified t) 144 147 (fontified t)) . -13584) (undo-tree-id3778 . -147) (undo-tree-id3779 . -147) (undo-tree-id3780 . -27) (undo-tree-id3782 . -56) (undo-tree-id3784 . -143) (undo-tree-id3786 . -143) (undo-tree-id3788 . -143) (undo-tree-id3790 . -143) (undo-tree-id3792 . -143) (undo-tree-id3794 . -143) (undo-tree-id3796 . -143) (undo-tree-id3798 . -143) (undo-tree-id3800 . -143) (undo-tree-id3802 . -143) (undo-tree-id3804 . -143) (undo-tree-id3806 . -143) (undo-tree-id3808 . -143) (undo-tree-id3810 . -143) (undo-tree-id3812 . -143) (undo-tree-id3814 . -143) (undo-tree-id3816 . -143) (undo-tree-id3818 . -143) (undo-tree-id3820 . -143) (undo-tree-id3822 . -143) (undo-tree-id3824 . -143) (undo-tree-id3826 . -143) (undo-tree-id3828 . -143) (undo-tree-id3830 . -143) (undo-tree-id3832 . -143) (undo-tree-id3834 . -143) (undo-tree-id3836 . -143) (undo-tree-id3838 . -55) (undo-tree-id3840 . -55) (undo-tree-id3842 . -147) (undo-tree-id3844 . -147) (undo-tree-id3846 . -147) (undo-tree-id3848 . -144) (undo-tree-id3850 . -147) (undo-tree-id3852 . -147) (undo-tree-id3854 . -147) 13731) ((13584 . 13731)) (25969 48807 27764 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12237 . 12238) (nil fontified nil 11655 . 12238) (11655 . 12238)) nil (25969 49219 802479 0) 0 nil])
([nil nil ((12686 . 12687)) ((#("}" 0 1 (fontified t)) . 12686)) (25969 48806 773935 0) 0 nil])
([nil nil ((12195 . 12197) (#("    " 0 4 (fontified t)) . 12195) (12127 . 12129) (#("    " 0 4 (fontified t)) . 12127) (12072 . 12074) (#("    " 0 4 (fontified t)) . 12072) (12029 . 12035) (#("        " 0 8 (fontified t)) . 12029) (11946 . 11952) (#("        " 0 8 (fontified t)) . 11946) (11906 . 11912) (#("        " 0 8 (fontified t)) . 11906) (11866 . 11872) (#("        " 0 8 (fontified t)) . 11866) (11816 . 11822) (#("        " 0 8 (fontified t)) . 11816) (11785 . 11791) (#("        " 0 8 (fontified t)) . 11785) (11733 . 11739) (#("        " 0 8 (fontified t)) . 11733) (#("    " 0 4 (fontified t)) . -11655) 11654) nil (25969 49219 802475 0) 0 nil])
([nil nil ((12688 . 12690) (#("		    " 0 6 (fontified nil)) . 12687) (undo-tree-id3768 . -2) (undo-tree-id3769 . -2) (undo-tree-id3771 . -2) (undo-tree-id3773 . -2) (undo-tree-id3775 . -2) (undo-tree-id3777 . -2) (12689 . 12693) (12686 . 12690)) ((#("
		
" 0 1 (fontified t) 1 3 (fontified nil) 3 4 (fontified nil)) . 12686) (undo-tree-id4076 . -1) (undo-tree-id4077 . -3) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (#("    " 0 4 (fontified nil)) . 12689) (12687 . 12693) (#("		" 0 2 (fontified t)) . 12688)) (25969 48806 474907 0) 0 nil])
([nil nil ((13159 . 13160)) nil (25969 49219 802468 0) 0 nil])
([nil nil ((12687 . 12693)) ((#("		    " 0 6 (fontified t)) . 12687) (undo-tree-id4072 . -6) (undo-tree-id4073 . -6) (undo-tree-id4074 . -6) (undo-tree-id4075 . -6)) (25969 48806 53929 0) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-comment-face fontified t)) . -13159) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) 13160) nil (25969 49219 802466 0) 0 nil])
([nil nil ((nil fontified nil 12781 . 12782) (nil fontified nil 12780 . 12781) (nil fontified nil 12760 . 12780) (nil fontified nil 12753 . 12760) (nil fontified nil 12752 . 12753) (nil fontified nil 12747 . 12752) (nil fontified nil 12745 . 12747) (nil fontified nil 12732 . 12745) (nil fontified nil 12725 . 12732) (nil fontified nil 12717 . 12725) (nil fontified nil 12715 . 12717) (nil fontified nil 12695 . 12715) (nil fontified nil 12693 . 12695) (12693 . 12782)) ((#("		wasm_bindgen_futures::JsFuture::from(device.open()).await.expect(\"Cannot Open Device\");" 0 2 (fontified nil) 2 22 (face font-lock-constant-face fontified nil) 22 24 (fontified nil) 24 32 (face font-lock-type-face fontified nil) 32 39 (fontified nil) 39 52 (fontified nil) 52 54 (fontified nil) 54 59 (face font-lock-keyword-face fontified nil) 59 60 (fontified nil) 60 67 (fontified nil) 67 87 (face font-lock-string-face fontified nil) 87 88 (fontified nil) 88 89 (fontified nil rear-nonsticky t)) . 12693) (undo-tree-id4070 . -89) (undo-tree-id4071 . -89) (nil fontified t 12781 . 12782)) (25969 48805 787545 0) 0 nil])
([nil nil ((13159 . 13162)) nil (25969 49219 802451 0) 0 nil])
([nil nil ((#("		" 0 2 (fontified t)) . -12693) 12782) ((12693 . 12695)) (25969 48805 519899 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -11739) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (#("o" 0 1 (fontified t)) . -11740) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (#("g" 0 1 (fontified t)) . -11741) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (#(":" 0 1 (fontified t)) . -11742) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (#(":" 0 1 (fontified t)) . -11743) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (#("d" 0 1 (fontified t)) . -11744) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (#("e" 0 1 (fontified t)) . -11745) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (#("b" 0 1 (fontified t)) . -11746) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (#("u" 0 1 (fontified t)) . -11747) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (#("g" 0 1 (fontified t)) . -11748) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (#("!" 0 1 (face font-lock-preprocessor-face fontified t)) . -11749) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) 11750 (t 25969 49219 860503 52000)) nil (25969 49230 467106 0) 0 nil])
([nil nil ((12684 . 12685) (t 25969 48757 775056 394000)) ((#("." 0 1 (fontified t)) . 12684) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1)) (25969 48805 219213 0) 0 nil])
([nil nil ((11739 . 11743)) nil (25969 49230 466924 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -12684) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) 12685) ((12684 . 12685)) (25969 48804 958754 0) 0 nil])
([nil nil ((11739 . 11746) (#("logg" 0 4 (fontified nil)) . 11739) (11739 . 11743) (#("logging" 0 7 (fontified nil)) . -11739) (11739 . 11746) (#("logg" 0 4 (fontified t)) . -11739) (undo-tree-id5103 . -4) (undo-tree-id5104 . -1) (undo-tree-id5105 . -2) (undo-tree-id5106 . -2) (undo-tree-id5107 . -3) (undo-tree-id5108 . -3) (undo-tree-id5109 . -4) (undo-tree-id5110 . -4) (undo-tree-id5111 . -4) (undo-tree-id5112 . -4) 11743) nil (25969 49230 466921 0) 0 nil])
([nil nil ((12684 . 12687)) ((#(".no" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 12684) (undo-tree-id4036 . -3) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -2) (undo-tree-id4043 . -2) (undo-tree-id4044 . -2) (undo-tree-id4045 . -2) (undo-tree-id4046 . -2) (undo-tree-id4047 . -3) (undo-tree-id4048 . -3) (undo-tree-id4049 . -3) (undo-tree-id4050 . -2) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -3)) (25969 48804 691538 0) 0 nil])
([nil nil ((11746 . 11751)) nil (25969 49230 466908 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -12684) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (#("n" 0 1 (fontified t)) . -12685) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (#("o" 0 1 (fontified t)) . -12686) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) 12687) ((12684 . 12687)) (25969 48804 427349 0) 0 nil])
([nil nil ((11748 . 11752) (#("log" 0 3 (fontified nil)) . 11748) (11748 . 11751) (#("log!(…)" 0 7 (fontified nil)) . -11748) (11748 . 11755) (#("log" 0 3 (fontified t)) . -11748) (undo-tree-id5096 . -3) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -2) (undo-tree-id5100 . -2) (undo-tree-id5101 . -3) (undo-tree-id5102 . -3) 11751) nil (25969 49230 466903 0) 0 nil])
([nil nil ((12668 . 12672)) ((#(" not" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 12668) (undo-tree-id4013 . -4) (undo-tree-id4014 . -2) (undo-tree-id4015 . -3) (undo-tree-id4016 . -3) (undo-tree-id4017 . -4) (undo-tree-id4018 . -4) (undo-tree-id4019 . -4) (undo-tree-id4020 . -4) (undo-tree-id4021 . -3) (undo-tree-id4022 . -3) (undo-tree-id4023 . -3) (undo-tree-id4024 . -3) (undo-tree-id4025 . -2) (undo-tree-id4026 . -2) (undo-tree-id4027 . -2) (undo-tree-id4028 . -2) (undo-tree-id4029 . -2) (undo-tree-id4030 . -2) (undo-tree-id4031 . -4) (undo-tree-id4032 . -4) (undo-tree-id4033 . -4) (undo-tree-id4034 . -4) (undo-tree-id4035 . -4)) (25969 48804 163788 0) 0 nil])
([nil nil ((#("log::debug!" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t) 5 11 (face font-lock-preprocessor-face fontified t)) . -11824) (undo-tree-id5321 . -11) (undo-tree-id5322 . -11) (undo-tree-id5323 . -1) (undo-tree-id5324 . -3) (undo-tree-id5325 . -7) (undo-tree-id5326 . -9) (undo-tree-id5327 . -10) (undo-tree-id5328 . -11) (undo-tree-id5329 . -11) (undo-tree-id5330 . -11) (undo-tree-id5331 . -11) (undo-tree-id5332 . -11) (undo-tree-id5333 . -11) (undo-tree-id5334 . -11) (undo-tree-id5335 . -11) (undo-tree-id5336 . -11) (undo-tree-id5337 . -11) (undo-tree-id5338 . -11) (undo-tree-id5339 . -11) (undo-tree-id5340 . -11) 11835 (t 25969 49230 524255 811000)) nil (25969 49240 116905 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -12669) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (#("o" 0 1 (fontified t)) . -12670) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (#("t" 0 1 (fontified t)) . -12671) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) 12672) ((12669 . 12672)) (25969 48803 939325 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11836 . 11837) (nil fontified nil 11833 . 11837) (nil fontified nil 11831 . 11833) (nil fontified nil 11824 . 11831) (11824 . 11837)) nil (25969 49240 116883 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -12669) (undo-tree-id3868 . -1) (undo-tree-id3869 . 1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) 12670) ((12669 . 12670)) (25969 48803 598549 0) 0 nil])
([nil nil ((#("log::debug!" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t) 5 11 (face font-lock-preprocessor-face fontified t)) . -12039) (undo-tree-id5300 . -11) (undo-tree-id5301 . -11) (undo-tree-id5302 . -1) (undo-tree-id5303 . -3) (undo-tree-id5304 . -4) (undo-tree-id5305 . -6) (undo-tree-id5306 . -7) (undo-tree-id5307 . -8) (undo-tree-id5308 . -9) (undo-tree-id5309 . -10) (undo-tree-id5310 . -11) (undo-tree-id5311 . -11) (undo-tree-id5312 . -11) (undo-tree-id5313 . -11) (undo-tree-id5314 . -11) (undo-tree-id5315 . -11) (undo-tree-id5316 . -11) (undo-tree-id5317 . -11) (undo-tree-id5318 . -11) (undo-tree-id5319 . -11) (undo-tree-id5320 . -11) 12050) nil (25969 49240 116880 0) 0 nil])
([nil nil ((12684 . 12688)) ((#("==fa" 0 4 (fontified t)) . 12684) (undo-tree-id3997 . -4) (undo-tree-id3998 . -1) (undo-tree-id3999 . -2) (undo-tree-id4000 . -2) (undo-tree-id4001 . -3) (undo-tree-id4002 . -3) (undo-tree-id4003 . -3) (undo-tree-id4004 . -3) (undo-tree-id4005 . -4) (undo-tree-id4006 . -4) (undo-tree-id4007 . -4) (undo-tree-id4008 . -4) (undo-tree-id4009 . -4) (undo-tree-id4010 . -4) (undo-tree-id4011 . -4) (undo-tree-id4012 . -4)) (25969 48802 711959 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12051 . 12052) (nil fontified nil 12048 . 12052) (nil fontified nil 12046 . 12048) (nil fontified nil 12039 . 12046) (12039 . 12052)) nil (25969 49240 116843 0) 0 nil])
([nil nil ((apply yas--snippet-revive 12686 12691 #s(yas--snippet nil nil nil 137 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 137 nil nil nil nil)) (12686 . 12691) (#("false" 0 5 (fontified nil)) . 12686) (12686 . 12691) (#("fa" 0 2 (fontified nil)) . 12686) (12684 . 12688) (#("false" 0 5 (fontified nil)) . -12684) (12684 . 12689) (#("==fa" 0 4 (fontified t)) . -12684) (undo-tree-id3855 . -3) (undo-tree-id3856 . -4) (undo-tree-id3857 . -1) (undo-tree-id3858 . -2) (undo-tree-id3859 . -2) (undo-tree-id3860 . -3) (undo-tree-id3861 . -3) (undo-tree-id3862 . -3) (undo-tree-id3863 . -3) (undo-tree-id3864 . -4) (undo-tree-id3865 . -4) (undo-tree-id3866 . -4) (undo-tree-id3867 . -4) 12688) ((12684 . 12688) (#("false" 0 5 (fontified nil)) . 12684) (12684 . 12689) (#("==fa" 0 2 (fontified nil) 2 4 (fontified nil)) . 12684) (undo-tree-id3953 . -2) (undo-tree-id3954 . -2) (undo-tree-id3955 . -2) (undo-tree-id3956 . -2) (undo-tree-id3957 . -2) (undo-tree-id3958 . -2) (undo-tree-id3959 . -2) (undo-tree-id3960 . -2) (undo-tree-id3961 . -2) (undo-tree-id3962 . -2) (undo-tree-id3963 . -2) (undo-tree-id3964 . -2) (undo-tree-id3965 . -2) (undo-tree-id3966 . -2) (undo-tree-id3967 . -2) (undo-tree-id3968 . -2) (undo-tree-id3969 . -2) (undo-tree-id3970 . -2) (undo-tree-id3971 . -2) (undo-tree-id3972 . -2) (undo-tree-id3973 . -2) (undo-tree-id3974 . -2) (12686 . 12688) (#("false" 0 5 (fontified nil)) . 12686) (12686 . 12691) (#("false" 0 5 (fontified t)) . 12686) (undo-tree-id3975 . -5) (undo-tree-id3976 . -5) (undo-tree-id3977 . -5) (undo-tree-id3978 . -5) (undo-tree-id3979 . -5) (undo-tree-id3980 . -5) (undo-tree-id3981 . -5) (undo-tree-id3982 . -5) (undo-tree-id3983 . -5) (undo-tree-id3984 . -5) (undo-tree-id3985 . -5) (undo-tree-id3986 . -5) (undo-tree-id3987 . -5) (undo-tree-id3988 . -5) (undo-tree-id3989 . -5) (undo-tree-id3990 . -5) (undo-tree-id3991 . -5) (undo-tree-id3992 . -5) (undo-tree-id3993 . -5) (undo-tree-id3994 . -5) (undo-tree-id3995 . -5) (undo-tree-id3996 . -5) (t 25969 48775 707798 149000)) (25969 48775 653153 0) 0 nil])
([nil nil ((13232 . 13239) (t 25969 49240 173979 883000)) nil (25969 49280 329727 0) 0 nil])
nil
([nil nil ((14502 . 14503) (#("    " 0 4 (fontified t)) . 14502) (14390 . 14396) (14371 . 14375) (14335 . 14339) (14327 . 14331) (14321 . 14322) (#("    " 0 4 (fontified t)) . 14321) (14277 . 14281) (14264 . 14265) (#("    " 0 4 (fontified t)) . 14264) (14193 . 14197) (14184 . 14188) (14171 . 14172) (#("    " 0 4 (fontified t)) . 14171) (14127 . 14128) (#("    " 0 4 (fontified t)) . 14127) (14108 . 14112) (13988 . 13992) (13963 . 13964) (#("    " 0 4 (fontified t)) . 13963) (13881 . 13882) (#("    " 0 4 (fontified t)) . 13881) (13876 . 13877) (#("    " 0 4 (fontified t)) . 13876) (13825 . 13829) (13773 . 13777) (13721 . 13725) (13639 . 13643) (13618 . 13619) (#("    " 0 4 (fontified t)) . 13618) (13585 . 13586) (#("    " 0 4 (fontified t)) . 13585) (13565 . 13566) (#("    " 0 4 (fontified t)) . 13565) (13485 . 13489) (13449 . 13453) (13439 . 13443) (13348 . 13349) (#("    " 0 4 (fontified t)) . 13348) (undo-tree-id5341 . -4) (undo-tree-id5342 . -2) (13315 . 13319) (13294 . 13298) (13241 . 13242) (#("    " 0 4 (fontified t)) . 13241) 14469) nil (25969 49280 329721 0) 0 nil])
([nil nil ((14505 . 14510) (14505 . 14506)) nil (25969 49280 329691 0) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-string-face fontified t)) . -15186) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -15187) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -15188) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . -15189) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -15190) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -15191) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -15192) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -15193) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (undo-tree-id5707 . -1) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (undo-tree-id5714 . -1) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) (undo-tree-id5724 . -1) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -15194) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1) (undo-tree-id5756 . -1) (undo-tree-id5757 . -1) (undo-tree-id5758 . -1) (undo-tree-id5759 . -1) (undo-tree-id5760 . -1) (undo-tree-id5761 . -1) (undo-tree-id5762 . -1) (undo-tree-id5763 . -1) (undo-tree-id5764 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -15195) (undo-tree-id5765 . -1) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5782 . -1) (undo-tree-id5783 . -1) (undo-tree-id5784 . -1) (undo-tree-id5785 . -1) (undo-tree-id5786 . -1) (undo-tree-id5787 . -1) (undo-tree-id5788 . -1) (undo-tree-id5789 . -1) (#("y" 0 1 (face font-lock-string-face fontified t)) . -15196) (undo-tree-id5790 . -1) (undo-tree-id5791 . -1) (undo-tree-id5792 . -1) (undo-tree-id5793 . -1) (undo-tree-id5794 . -1) (undo-tree-id5795 . -1) (undo-tree-id5796 . -1) (undo-tree-id5797 . -1) (undo-tree-id5798 . -1) (undo-tree-id5799 . -1) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -1) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) (undo-tree-id5808 . -1) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) (undo-tree-id5813 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -15197) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (undo-tree-id5816 . -1) (undo-tree-id5817 . -1) (undo-tree-id5818 . -1) (undo-tree-id5819 . -1) 15198 (t 25969 49280 388765 605000)) nil (25969 49307 831952 0) 0 nil])
([nil nil ((15195 . 15196) (t 25969 49307 890867 407000)) nil (25969 49377 110998 0) 0 nil])
([nil nil ((15195 . 15201)) nil (25969 49377 110996 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -15200) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) 15201) nil (25969 49377 110995 0) 0 nil])
([nil nil ((15200 . 15202)) nil (25969 49377 110989 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -15200) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (#("c" 0 1 (fontified t)) . -15201) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) 15202) nil (25969 49377 110987 0) 0 nil])
([nil nil ((15200 . 15202)) nil (25969 49377 110962 0) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -15201) (undo-tree-id5870 . -1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) 15202) nil (25969 49377 110961 0) 0 nil])
([nil nil ((15201 . 15203)) nil (25969 49377 110949 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -15201) (undo-tree-id5844 . -1) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) (undo-tree-id5850 . -1) (undo-tree-id5851 . -1) (undo-tree-id5852 . -1) (undo-tree-id5853 . -1) (undo-tree-id5854 . -1) (undo-tree-id5855 . -1) (undo-tree-id5856 . -1) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (undo-tree-id5859 . -1) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (#("t" 0 1 (fontified t)) . -15202) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) (undo-tree-id5868 . -1) (undo-tree-id5869 . -1) 15203) nil (25969 49377 110946 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 15211 . 15212) (nil fontified nil 15201 . 15212) (15201 . 15212)) nil (25969 49377 110916 0) 0 nil])
([nil nil ((15212 . 15221)) nil (25969 49377 110914 0) 0 nil])
([nil nil ((15219 . 15226) (#("ui" 0 2 (fontified nil)) . 15219) (15219 . 15221) (#("uistate" 0 7 (fontified nil)) . -15219) (15219 . 15226) (#("ui" 0 2 (fontified t)) . -15219) (undo-tree-id5839 . -2) (undo-tree-id5840 . -1) (undo-tree-id5841 . -2) (undo-tree-id5842 . -2) (undo-tree-id5843 . -2) 15221) nil (25969 49377 110912 0) 0 nil])
([nil nil ((15226 . 15228)) nil (25969 49377 110903 0) 0 nil])
([nil nil ((apply yas--snippet-revive 15227 15232 #s(yas--snippet nil nil #s(yas--exit 15232 nil) 141 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 15232 nil) 141 nil nil nil nil)) (15227 . 15232) (#("get()$0" 0 7 (fontified nil)) . 15227) (15227 . 15234) (#("g" 0 1 (fontified nil)) . 15227) (15227 . 15228) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -15227) (15227 . 15247) (#("g" 0 1 (fontified t)) . -15227) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) 15228) nil (25969 49377 110901 0) 0 nil])
([nil nil ((15232 . 15234)) nil (25969 49377 110894 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -15233) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) 15234) nil (25969 49377 110893 0) 0 nil])
([nil nil ((15233 . 15235)) nil (25969 49377 110888 0) 0 nil])
([nil nil ((15233 . 15243) (#("hi" 0 2 (fontified nil)) . 15233) (15233 . 15235) (#("hid_device" 0 10 (fontified nil)) . -15233) (15233 . 15243) (#("hi" 0 2 (fontified t)) . -15233) (undo-tree-id5826 . -2) (undo-tree-id5827 . -1) (undo-tree-id5828 . -1) (undo-tree-id5829 . -2) (undo-tree-id5830 . -2) (undo-tree-id5831 . -2) (undo-tree-id5832 . -2) 15235) nil (25969 49377 110886 0) 0 nil])
([nil nil ((15243 . 15246)) nil (25969 49377 110875 0) 0 nil])
([nil nil ((apply yas--snippet-revive 15244 15253 #s(yas--snippet nil nil #s(yas--exit 15253 nil) 142 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 15253 nil) 142 nil nil nil nil)) (15244 . 15253) (#("is_some()$0" 0 11 (fontified nil)) . 15244) (15244 . 15255) (#("is" 0 2 (fontified nil)) . 15244) (15244 . 15246) (#("is_some()" 0 9 (fontified nil)) . -15244) (15244 . 15253) (#("is" 0 2 (fontified t)) . -15244) (undo-tree-id5820 . -2) (undo-tree-id5821 . -1) (undo-tree-id5822 . -2) (undo-tree-id5823 . -2) (undo-tree-id5824 . -2) (undo-tree-id5825 . -2) 15246) nil (25969 49377 110870 0) 0 nil])
([nil nil ((#("		    logging::log!(\"HidInputReportEvent: {:?}\", &e);" 0 6 (fontified t) 6 13 (face font-lock-constant-face fontified t) 13 15 (fontified t) 15 19 (face font-lock-preprocessor-face fontified t) 19 20 (fontified t) 20 47 (face font-lock-string-face fontified t) 47 49 (fontified t) 49 50 (face rust-ampersand-face fontified t) 50 53 (fontified t)) . 11733) (undo-tree-id5953 . -6) (undo-tree-id5954 . -53) (undo-tree-id5955 . -53) (undo-tree-id5956 . -53) (undo-tree-id5957 . -53) (undo-tree-id5958 . -53) (undo-tree-id5959 . -53) (undo-tree-id5960 . -53) (undo-tree-id5961 . -53) (undo-tree-id5962 . -53) (t 25969 49377 170158 521000)) nil (25969 49467 215464 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11733) (undo-tree-id5952 . -1)) nil (25969 49467 215452 0) 0 nil])
([nil nil ((#("		    logging::log!(\"  DataView: {:?}\", &dataview);" 0 6 (fontified t) 6 13 (face font-lock-constant-face fontified t) 13 15 (fontified t) 15 18 (face font-lock-preprocessor-face fontified t) 18 19 (face font-lock-preprocessor-face fontified t rear-nonsticky t) 19 20 (fontified t) 20 38 (face font-lock-string-face fontified t) 38 40 (fontified t) 40 41 (face rust-ampersand-face fontified t) 41 51 (fontified t)) . 11764) (undo-tree-id5938 . -6) (undo-tree-id5939 . -51) (undo-tree-id5940 . -51) (undo-tree-id5941 . -51) (undo-tree-id5942 . -51) (undo-tree-id5943 . -51) (undo-tree-id5944 . -51) (undo-tree-id5945 . -51) (undo-tree-id5946 . -51) (undo-tree-id5947 . -51) (undo-tree-id5948 . -51) (undo-tree-id5949 . -51) (undo-tree-id5950 . -51) (undo-tree-id5951 . -51)) nil (25969 49467 215449 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11764) (undo-tree-id5937 . -1)) nil (25969 49467 215432 0) 0 nil])
([nil nil ((#("		    logging::log!(\"  Vec<u8>: {:?}\", &ba);" 0 6 (fontified t) 6 13 (face font-lock-constant-face fontified t) 13 15 (fontified t) 15 18 (face font-lock-preprocessor-face fontified t) 18 19 (face font-lock-preprocessor-face fontified t rear-nonsticky t) 19 20 (fontified t) 20 26 (face font-lock-string-face fontified t) 26 27 (face font-lock-string-face fontified t syntax-table (1)) 27 29 (face font-lock-string-face fontified t) 29 30 (face font-lock-string-face fontified t syntax-table (1)) 30 37 (face font-lock-string-face fontified t) 37 39 (fontified t) 39 40 (face rust-ampersand-face fontified t) 40 44 (fontified t)) . 11927) (undo-tree-id5925 . -6) (undo-tree-id5926 . -44) (undo-tree-id5927 . -44) (undo-tree-id5928 . -44) (undo-tree-id5929 . -44) (undo-tree-id5930 . -44) (undo-tree-id5931 . -44) (undo-tree-id5932 . -44) (undo-tree-id5933 . -44) (undo-tree-id5934 . -44) (undo-tree-id5935 . -44) (undo-tree-id5936 . -44)) nil (25969 49467 215429 0) 0 nil])
([nil nil ((11928 . 11934) (#("		    " 0 6 (fontified nil)) . 11927) (11927 . 11933) (11927 . 11928)) nil (25969 49467 215415 0) 0 nil])
([nil nil ((11927 . 11933)) nil (25969 49467 215413 0) 0 nil])
([nil nil ((11763 . 11770)) nil (25969 49467 215412 0) 0 nil])
([nil nil ((11770 . 11772)) nil (25969 49467 215411 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -11771) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) 11772) nil (25969 49467 215410 0) 0 nil])
([nil nil ((11771 . 11776)) nil (25969 49467 215407 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -11775) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) 11776) nil (25969 49467 215405 0) 0 nil])
([nil nil ((11775 . 11783)) nil (25969 49467 215401 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -11782) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) 11783) nil (25969 49467 215400 0) 0 nil])
([nil nil ((11782 . 11784)) nil (25969 49467 215391 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11782 11793 #s(yas--snippet nil nil #s(yas--exit 11793 nil) 143 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11793 nil) 143 nil nil nil nil)) (11782 . 11793) (#("report_id()$0" 0 13 (fontified nil)) . 11782) (11782 . 11795) (#("re" 0 2 (fontified nil)) . 11782) (11782 . 11784) (#("report_id()" 0 11 (fontified nil)) . -11782) (11782 . 11793) (#("re" 0 2 (fontified t)) . -11782) (undo-tree-id5906 . -2) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -2) (undo-tree-id5910 . -2) (undo-tree-id5911 . -2) (undo-tree-id5912 . -2) 11784) nil (25969 49467 215388 0) 0 nil])
([nil nil ((11793 . 11794)) nil (25969 49467 215367 0) 0 nil])
([nil nil ((apply 69 12115 12990 undo--wrap-and-run-primitive-undo 12115 12990 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12973) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12935) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12901) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12869) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12814) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12806) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12801) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12788) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12775) (#<marker at 12288 in component.rs> . -3) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12701) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12683) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12670) (#<marker at 12288 in component.rs> . -1) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12600) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12575) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12505) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12440) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12423) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12393) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12282) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12236) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12206) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12157) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12117) 12115))) nil (25969 49533 547904 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12373 . 12374) (nil fontified nil 12373 . 12374) (nil fontified nil 12372 . 12373) (nil fontified nil 12370 . 12372) (nil fontified nil 12369 . 12370) (nil fontified nil 12368 . 12369) (nil fontified nil 12367 . 12368) (nil fontified nil 12364 . 12367) (nil fontified nil 12359 . 12364) (nil fontified nil 12357 . 12359) (nil fontified nil 12355 . 12357) (nil fontified nil 12354 . 12355) (nil fontified nil 12351 . 12354) (nil fontified nil 12346 . 12351) (nil fontified nil 12344 . 12346) (nil fontified nil 12337 . 12344) (nil fontified nil 12334 . 12337) (nil fontified nil 12333 . 12334) (nil fontified nil 12331 . 12333) (nil fontified nil 12308 . 12331) (nil fontified nil 12285 . 12308) (nil fontified nil 12280 . 12285) (nil fontified nil 12277 . 12280) (nil fontified nil 12272 . 12277) (nil fontified nil 12270 . 12272) (nil fontified nil 12267 . 12270) (nil fontified nil 12263 . 12267) (nil fontified nil 12262 . 12263) (nil fontified nil 12259 . 12262) (nil fontified nil 12254 . 12259) (nil fontified nil 12252 . 12254) (nil fontified nil 12250 . 12252) (nil fontified nil 12249 . 12250) (nil fontified nil 12246 . 12249) (nil fontified nil 12241 . 12246) (nil fontified nil 12239 . 12241) (nil fontified nil 12237 . 12239) (nil fontified nil 12234 . 12237) (nil fontified nil 12233 . 12234) (nil fontified nil 12231 . 12233) (nil fontified nil 12204 . 12231) (nil fontified nil 12184 . 12204) (nil fontified nil 12179 . 12184) (nil fontified nil 12176 . 12179) (nil fontified nil 12171 . 12176) (nil fontified nil 12169 . 12171) (nil fontified nil 12157 . 12169) (nil fontified nil 12155 . 12157) (nil fontified nil 12154 . 12155) (nil fontified nil 12151 . 12154) (nil fontified nil 12146 . 12151) (nil fontified nil 12144 . 12146) (nil fontified nil 12099 . 12144) (nil fontified nil 12097 . 12099) (nil fontified nil 12094 . 12097) (nil fontified nil 12087 . 12094) (nil fontified nil 12084 . 12087) (nil fontified nil 12081 . 12084) (nil fontified nil 12076 . 12081) (nil fontified nil 12074 . 12076) (nil fontified nil 12072 . 12074) (nil fontified nil 12067 . 12072) (nil fontified nil 12066 . 12067) (nil fontified nil 12064 . 12066) (nil fontified nil 12063 . 12064) (nil fontified nil 12061 . 12063) (nil fontified nil 12055 . 12061) (nil fontified nil 12049 . 12055) (nil fontified nil 12037 . 12049) (nil fontified nil 12034 . 12037) (nil fontified nil 12021 . 12034) (nil fontified nil 12020 . 12021) (nil fontified nil 12019 . 12020) (nil fontified nil 12016 . 12019) (nil fontified nil 12011 . 12016) (nil fontified nil 12009 . 12011) (nil fontified nil 11997 . 12009) (nil fontified nil 11995 . 11997) (nil fontified nil 11994 . 11995) (nil fontified nil 11992 . 11994) (nil fontified nil 11972 . 11992) (nil fontified nil 11969 . 11972) (nil fontified nil 11968 . 11969) (nil fontified nil 11965 . 11968) (nil fontified nil 11964 . 11965) (11964 . 12374)) nil (25969 49533 547900 0) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -12342) (12342 . 12343) (#("	" 0 1 (fontified nil)) . 12342) (12338 . 12342) (#("    " 0 4 (fontified t)) . -12330) (undo-tree-id6373 . -2) (#("    " 0 4 (fontified t)) . -12321) (#("    " 0 4 (fontified t)) . -12251) (#("    " 0 4 (fontified t)) . -12237) (#("    " 0 4 (fontified t)) . -12228) (#("    " 0 4 (fontified t)) . -12162) (#("    " 0 4 (fontified t)) . -12141) (#("    " 0 4 (fontified t)) . -12075) (#("    " 0 4 (fontified t)) . -12014) (#("	" 0 1 (fontified nil)) . -11997) (11997 . 11998) (#("	" 0 1 (fontified nil)) . 11997) (11993 . 11997) (#("	" 0 1 (fontified t)) . -11964) 11959) nil (25969 49533 547875 0) 0 nil])
([nil nil ((#("	let closure = Closure::wrap(Box::new(
		    move |evt: web_sys::HidInputReportEvent| {
			let dataview = evt.data();
			logging::log!(\"DataView: {:?}\", dataview);
			let arraybuffer = dataview.buffer().dyn_into::<js_sys::Uint8Array>().expect(\"Cannot convert to Int8Array\");
			let rid = evt.report_id();
			if rid == 2 {
			    let _adc_data_page = arraybuffer.at(0).unwrap() as usize;
			    // for (idx, x) in handle.recv_buf[2..18].iter().enumerate() {
			    // 	if idx%2==1 {
			    // 	    adc_data[idx/2 + adc_data_page*8] += x.clone() as u32;
			    // 	}
			    // 	else {
			    // 	    adc_data[idx/2 + adc_data_page*8] = x.clone() as u32 *256;
			    // 	}
			    // } 
			}
		    }
		) as Box<dyn FnMut(web_sys::HidInputReportEvent)> );
		let jsval = closure.as_ref();
		let cb = jsval.unchecked_ref();
		device.set_oninputreport(Some(cb));
		closure.forget();" 0 1 (fontified t) 1 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 12 (face font-lock-variable-name-face fontified t) 12 15 (fontified t) 15 22 (face font-lock-type-face fontified t) 22 29 (fontified t) 29 32 (face font-lock-type-face fontified t) 32 39 (fontified t) 39 41 (fontified t) 41 45 (fontified t) 45 49 (face font-lock-keyword-face fontified t) 49 51 (fontified t) 51 52 (face font-lock-variable-name-face fontified t) 52 54 (face font-lock-variable-name-face fontified t) 54 56 (fontified t) 56 63 (face font-lock-constant-face fontified t) 63 65 (fontified t) 65 84 (face font-lock-type-face fontified t) 84 88 (fontified t) 88 90 (fontified t) 90 91 (fontified t) 91 94 (face font-lock-keyword-face fontified t) 94 95 (fontified t) 95 103 (face font-lock-variable-name-face fontified t) 103 106 (fontified t) 106 110 (fontified t) 110 118 (fontified t) 118 120 (fontified t) 120 121 (fontified t) 121 128 (face font-lock-constant-face fontified t) 128 130 (fontified t) 130 134 (face font-lock-preprocessor-face fontified t) 134 135 (fontified t) 135 136 (face font-lock-string-face fontified t) 136 150 (face font-lock-string-face fontified t) 150 151 (face font-lock-string-face fontified t) 151 153 (fontified t) 153 161 (fontified t) 161 163 (fontified t) 163 164 (fontified t) 164 166 (fontified t) 166 167 (fontified t) 167 170 (face font-lock-keyword-face fontified t) 170 171 (fontified t) 171 182 (face font-lock-variable-name-face fontified t) 182 185 (fontified t) 185 193 (fontified t) 193 194 (fontified t) 194 203 (fontified t) 203 211 (fontified t) 211 213 (fontified t) 213 214 (fontified t) 214 220 (face font-lock-constant-face fontified t) 220 222 (fontified t) 222 232 (face font-lock-type-face fontified t) 232 233 (fontified t) 233 236 (fontified t) 236 243 (fontified t) 243 272 (face font-lock-string-face fontified t) 272 273 (fontified t) 273 274 (fontified t) 274 275 (fontified t) 275 277 (fontified t) 277 278 (fontified t) 278 281 (face font-lock-keyword-face fontified t) 281 282 (fontified t) 282 285 (face font-lock-variable-name-face fontified t) 285 305 (fontified t) 305 307 (fontified t) 307 308 (fontified t) 308 310 (face font-lock-keyword-face fontified t) 310 322 (fontified t) 322 324 (fontified t) 324 329 (fontified t) 329 332 (face font-lock-keyword-face fontified t) 332 333 (fontified t) 333 334 (face font-lock-variable-name-face fontified t) 334 347 (face font-lock-variable-name-face fontified t) 347 350 (fontified t) 350 362 (fontified t) 362 368 (fontified t) 368 374 (fontified t) 374 376 (fontified t) 376 377 (fontified t) 377 379 (face font-lock-keyword-face fontified t) 379 380 (fontified t) 380 385 (face font-lock-type-face fontified t) 385 387 (fontified t) 387 389 (fontified t) 389 394 (fontified t) 394 397 (face font-lock-comment-delimiter-face fontified t) 397 400 (face font-lock-comment-face fontified t) 400 407 (face font-lock-comment-face fontified t) 407 410 (face font-lock-comment-face fontified t) 410 412 (face font-lock-comment-face fontified t) 412 457 (face font-lock-comment-face fontified t) 457 459 (fontified t) 459 464 (fontified t) 464 467 (face font-lock-comment-delimiter-face fontified t) 467 468 (face font-lock-comment-delimiter-face fontified t) 468 470 (face font-lock-comment-face fontified t) 470 482 (face font-lock-comment-face fontified t) 482 484 (fontified t) 484 489 (fontified t) 489 492 (face font-lock-comment-delimiter-face fontified t) 492 497 (face font-lock-comment-delimiter-face fontified t) 497 517 (face font-lock-comment-face fontified t) 517 544 (face font-lock-comment-face fontified t) 544 546 (face font-lock-comment-face fontified t) 546 547 (face font-lock-comment-face fontified t) 547 550 (face font-lock-comment-face fontified t) 550 552 (face font-lock-comment-face fontified t) 552 554 (fontified t) 554 559 (fontified t) 559 562 (face font-lock-comment-delimiter-face fontified t) 562 563 (face font-lock-comment-delimiter-face fontified t) 563 565 (face font-lock-comment-face fontified t) 565 567 (fontified t) 567 572 (fontified t) 572 575 (face font-lock-comment-delimiter-face fontified t) 575 576 (face font-lock-comment-delimiter-face fontified t) 576 580 (face font-lock-comment-face fontified t) 580 583 (face font-lock-comment-face fontified t) 583 585 (fontified t) 585 590 (fontified t) 590 593 (face font-lock-comment-delimiter-face fontified t) 593 598 (face font-lock-comment-delimiter-face fontified t) 598 621 (face font-lock-comment-face fontified t) 621 644 (face font-lock-comment-face fontified t) 644 646 (face font-lock-comment-face fontified t) 646 647 (face font-lock-comment-face fontified t) 647 650 (face font-lock-comment-face fontified t) 650 657 (face font-lock-comment-face fontified t) 657 659 (fontified t) 659 664 (fontified t) 664 667 (face font-lock-comment-delimiter-face fontified t) 667 668 (face font-lock-comment-delimiter-face fontified t) 668 670 (face font-lock-comment-face fontified t) 670 672 (fontified t) 672 677 (fontified t) 677 680 (face font-lock-comment-delimiter-face fontified t) 680 681 (face font-lock-comment-face fontified t) 681 682 (face font-lock-comment-face fontified t rear-nonsticky t) 682 683 (face font-lock-comment-face fontified t) 683 685 (fontified t) 685 686 (fontified t) 686 687 (fontified t) 687 688 (fontified t) 688 690 (fontified t) 690 694 (fontified t) 694 696 (fontified t) 696 698 (fontified t) 698 700 (fontified t) 700 702 (face font-lock-keyword-face fontified t) 702 703 (fontified t) 703 706 (face font-lock-type-face fontified t) 706 707 (fontified t) 707 710 (face font-lock-keyword-face fontified t) 710 711 (fontified t) 711 716 (face font-lock-type-face fontified t) 716 717 (fontified t) 717 724 (face font-lock-constant-face fontified t) 724 726 (fontified t) 726 745 (face font-lock-type-face fontified t) 745 746 (fontified t) 746 747 (fontified t) 747 750 (fontified t) 750 751 (fontified t) 751 753 (fontified t) 753 756 (face font-lock-keyword-face fontified t) 756 757 (fontified t) 757 762 (face font-lock-variable-name-face fontified t) 762 782 (fontified t) 782 783 (fontified t) 783 785 (fontified t) 785 788 (face font-lock-keyword-face fontified t) 788 789 (fontified t) 789 791 (face font-lock-variable-name-face fontified t) 791 816 (fontified t) 816 817 (fontified t) 817 819 (fontified t) 819 825 (fontified t) 825 844 (fontified t) 844 848 (face font-lock-type-face fontified t) 848 855 (fontified t) 855 857 (fontified t) 857 873 (fontified t) 873 874 (fontified t rear-nonsticky t)) . -12495) (undo-tree-id6257 . -179) (undo-tree-id6258 . -874) (undo-tree-id6259 . -276) (undo-tree-id6260 . -874) (undo-tree-id6261 . -874) (undo-tree-id6262 . -874) (undo-tree-id6263 . -874) (undo-tree-id6264 . -874) (undo-tree-id6265 . -874) (undo-tree-id6266 . -874) (undo-tree-id6267 . -838) (undo-tree-id6268 . -802) (undo-tree-id6269 . -712) (undo-tree-id6270 . -687) (undo-tree-id6271 . -659) (undo-tree-id6272 . -554) (undo-tree-id6273 . -388) (undo-tree-id6274 . -276) (undo-tree-id6275 . -276) (undo-tree-id6276 . -276) (undo-tree-id6277 . -276) (undo-tree-id6278 . -88) (undo-tree-id6279 . -874) (undo-tree-id6280 . -277) (undo-tree-id6281 . -277) (undo-tree-id6282 . -277) (undo-tree-id6283 . -277) (undo-tree-id6284 . -277) (undo-tree-id6285 . -277) (undo-tree-id6286 . -277) (undo-tree-id6287 . -278) (undo-tree-id6288 . -279) (undo-tree-id6289 . -280) (undo-tree-id6290 . -281) (undo-tree-id6291 . -282) (undo-tree-id6292 . -283) (undo-tree-id6293 . -284) (undo-tree-id6294 . -285) (undo-tree-id6295 . -316) (undo-tree-id6296 . -317) (undo-tree-id6297 . -318) (undo-tree-id6298 . -319) (undo-tree-id6299 . -337) (undo-tree-id6300 . -402) (undo-tree-id6301 . -402) (undo-tree-id6302 . -472) (undo-tree-id6303 . -472) (undo-tree-id6304 . -564) (undo-tree-id6305 . -579) (undo-tree-id6306 . -596) (undo-tree-id6307 . -669) (undo-tree-id6308 . -669) (undo-tree-id6309 . -669) (undo-tree-id6310 . -669) (undo-tree-id6311 . -669) (undo-tree-id6312 . -669) (undo-tree-id6313 . -669) (undo-tree-id6314 . -682) (undo-tree-id6315 . -682) (undo-tree-id6316 . -682) (undo-tree-id6317 . -682) (undo-tree-id6318 . -682) (undo-tree-id6319 . -682) (undo-tree-id6320 . -687) (undo-tree-id6321 . -687) (undo-tree-id6322 . -687) (undo-tree-id6323 . -687) (undo-tree-id6324 . -687) (undo-tree-id6325 . -874) (undo-tree-id6326 . -277) (undo-tree-id6327 . -687) (undo-tree-id6328 . -687) (undo-tree-id6329 . -687) (undo-tree-id6330 . -687) (undo-tree-id6331 . -687) (undo-tree-id6332 . -687) (undo-tree-id6333 . -687) (undo-tree-id6334 . -687) (undo-tree-id6335 . -687) (undo-tree-id6336 . -687) (undo-tree-id6337 . -687) (undo-tree-id6338 . -687) (undo-tree-id6339 . -687) (undo-tree-id6340 . -687) (undo-tree-id6341 . -687) (undo-tree-id6342 . -687) (undo-tree-id6343 . -687) (undo-tree-id6344 . -687) (undo-tree-id6345 . -687) (undo-tree-id6346 . -687) (undo-tree-id6347 . -687) (undo-tree-id6348 . -687) (undo-tree-id6349 . -687) (undo-tree-id6350 . -687) (undo-tree-id6351 . -277) (undo-tree-id6352 . -90) (undo-tree-id6353 . -328) (undo-tree-id6354 . -466) (undo-tree-id6355 . -598) (undo-tree-id6356 . -682) (undo-tree-id6357 . -725) (undo-tree-id6358 . -782) (undo-tree-id6359 . -850) (undo-tree-id6360 . -874) (undo-tree-id6361 . -874) (undo-tree-id6362 . -874) (undo-tree-id6363 . -874) (undo-tree-id6364 . -874) (undo-tree-id6365 . -874) (undo-tree-id6366 . -855) (undo-tree-id6367 . -874) (undo-tree-id6368 . -874) (undo-tree-id6369 . -874) (undo-tree-id6370 . -874) (undo-tree-id6371 . -874) (undo-tree-id6372 . -874) 13369) nil (25969 49533 547863 0) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -12494) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) 12495) nil (25969 49533 547746 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -12493) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) 12494) nil (25969 49533 547610 0) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -11975) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (#("t" 0 1 (fontified t)) . -11976) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) 11977 (t 25969 49533 607432 425000)) nil (25969 49549 962097 0) 0 nil])
([nil nil ((#("unwrap()" 0 6 (fontified t) 6 8 (fontified t)) . -12051) (undo-tree-id6486 . -8) (undo-tree-id6487 . -8) (undo-tree-id6488 . -8) (undo-tree-id6489 . -8) (undo-tree-id6490 . -8) (undo-tree-id6491 . -8) (undo-tree-id6492 . -8) (undo-tree-id6493 . -8) (undo-tree-id6494 . -8) (undo-tree-id6495 . -8) (undo-tree-id6496 . -8) (undo-tree-id6497 . -8) (undo-tree-id6498 . -8) (undo-tree-id6499 . -8) (undo-tree-id6500 . -8) (undo-tree-id6501 . -8) 12059) nil (25969 49549 962061 0) 0 nil])
([nil nil ((#("0)." 0 3 (fontified t)) . -12048) (undo-tree-id6465 . -3) (undo-tree-id6466 . -3) (undo-tree-id6467 . -3) (undo-tree-id6468 . -3) (undo-tree-id6469 . -3) (undo-tree-id6470 . -3) (undo-tree-id6471 . -3) (undo-tree-id6472 . -3) (undo-tree-id6473 . -3) (undo-tree-id6474 . -3) (undo-tree-id6475 . -3) (undo-tree-id6476 . -3) (undo-tree-id6477 . -3) (undo-tree-id6478 . -3) (undo-tree-id6479 . -3) (undo-tree-id6480 . -3) (undo-tree-id6481 . -3) (undo-tree-id6482 . -3) (undo-tree-id6483 . -3) (undo-tree-id6484 . -3) (undo-tree-id6485 . -3) 12051) nil (25969 49549 962043 0) 0 nil])
([nil nil ((#("at(" 0 3 (fontified t)) . -12045) (undo-tree-id6439 . -3) (undo-tree-id6440 . -3) (undo-tree-id6441 . -3) (undo-tree-id6442 . -3) (undo-tree-id6443 . -3) (undo-tree-id6444 . -3) (undo-tree-id6445 . -3) (undo-tree-id6446 . -3) (undo-tree-id6447 . -3) (undo-tree-id6448 . -3) (undo-tree-id6449 . -3) (undo-tree-id6450 . -3) (undo-tree-id6451 . -3) (undo-tree-id6452 . -3) (undo-tree-id6453 . -3) (undo-tree-id6454 . -3) (undo-tree-id6455 . -3) (undo-tree-id6456 . -3) (undo-tree-id6457 . -3) (undo-tree-id6458 . -3) (undo-tree-id6459 . -3) (undo-tree-id6460 . -3) (undo-tree-id6461 . -3) (undo-tree-id6462 . -3) (undo-tree-id6463 . -3) (undo-tree-id6464 . -3) 12048) nil (25969 49549 962020 0) 0 nil])
([nil nil ((#("arraybuffer." 0 12 (fontified t)) . -12033) (undo-tree-id6374 . -12) (undo-tree-id6375 . -12) (undo-tree-id6376 . -10) (undo-tree-id6377 . -10) (undo-tree-id6378 . -10) (undo-tree-id6379 . -10) (undo-tree-id6380 . -10) (undo-tree-id6381 . -10) (undo-tree-id6382 . -10) (undo-tree-id6383 . -10) (undo-tree-id6384 . -10) (undo-tree-id6385 . -10) (undo-tree-id6386 . -10) (undo-tree-id6387 . -10) (undo-tree-id6388 . -10) (undo-tree-id6389 . -10) (undo-tree-id6390 . -10) (undo-tree-id6391 . -10) (undo-tree-id6392 . -10) (undo-tree-id6393 . -10) (undo-tree-id6394 . -10) (undo-tree-id6395 . -10) (undo-tree-id6396 . -10) (undo-tree-id6397 . -10) (undo-tree-id6398 . -10) (undo-tree-id6399 . -10) (undo-tree-id6400 . -10) (undo-tree-id6401 . -10) (undo-tree-id6402 . -10) (undo-tree-id6403 . -10) (undo-tree-id6404 . -10) (undo-tree-id6405 . -10) (undo-tree-id6406 . -10) (undo-tree-id6407 . -10) (undo-tree-id6408 . -10) (undo-tree-id6409 . -10) (undo-tree-id6410 . -12) (undo-tree-id6411 . -12) (undo-tree-id6412 . -12) (undo-tree-id6413 . -12) (undo-tree-id6414 . -12) (undo-tree-id6415 . -12) (undo-tree-id6416 . -12) (undo-tree-id6417 . -12) (undo-tree-id6418 . -12) (undo-tree-id6419 . -12) (undo-tree-id6420 . -12) (undo-tree-id6421 . -12) (undo-tree-id6422 . -12) (undo-tree-id6423 . -12) (undo-tree-id6424 . -12) (undo-tree-id6425 . -12) (undo-tree-id6426 . -12) (undo-tree-id6427 . -12) (undo-tree-id6428 . -12) (undo-tree-id6429 . -12) (undo-tree-id6430 . -12) (undo-tree-id6431 . -12) (undo-tree-id6432 . -12) (undo-tree-id6433 . -12) (undo-tree-id6434 . -12) (undo-tree-id6435 . -12) (undo-tree-id6436 . -12) (undo-tree-id6437 . -12) (undo-tree-id6438 . -12) 12045) nil (25969 49549 961989 0) 0 nil])
([nil nil ((12033 . 12037)) nil (25969 49549 961912 0) 0 nil])
([nil nil ((12036 . 12037)) nil (25969 49549 961908 0) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -12016) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) 12017 (t 25969 49550 21771 646000)) nil (25969 49557 222888 0) 0 nil])
([nil nil ((apply 24 12048 12287 undo--wrap-and-run-primitive-undo 12048 12287 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12285) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12279) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12212) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12201) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12195) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12132) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12114) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12051) 12048))) nil (25969 49557 222862 0) 0 nil])
([nil nil ((#("buf" 0 3 (fontified t)) . -12079) (undo-tree-id6597 . -3) (undo-tree-id6598 . -3) (undo-tree-id6599 . -3) (undo-tree-id6600 . -3) (undo-tree-id6601 . -3) (undo-tree-id6602 . -3) (undo-tree-id6603 . -3) (undo-tree-id6604 . -3) (undo-tree-id6605 . -3) (undo-tree-id6606 . -3) (undo-tree-id6607 . -3) (undo-tree-id6608 . -3) (undo-tree-id6609 . -3) (undo-tree-id6610 . -3) 12082 (t 25969 49557 283364 8000)) nil (25969 49572 957379 0) 0 nil])
([nil nil ((#("recv_" 0 5 (fontified t)) . -12074) (undo-tree-id6582 . -5) (undo-tree-id6583 . -5) (undo-tree-id6584 . -5) (undo-tree-id6585 . -5) (undo-tree-id6586 . -5) (undo-tree-id6587 . -5) (undo-tree-id6588 . -5) (undo-tree-id6589 . -5) (undo-tree-id6590 . -5) (undo-tree-id6591 . -5) (undo-tree-id6592 . -5) (undo-tree-id6593 . -5) (undo-tree-id6594 . -5) (undo-tree-id6595 . -5) (undo-tree-id6596 . -5) 12079) nil (25969 49572 957359 0) 0 nil])
([nil nil ((#("handle." 0 7 (fontified t)) . -12067) (undo-tree-id6562 . -7) (undo-tree-id6563 . -7) (undo-tree-id6564 . -7) (undo-tree-id6565 . -7) (undo-tree-id6566 . -7) (undo-tree-id6567 . -7) (undo-tree-id6568 . -7) (undo-tree-id6569 . -7) (undo-tree-id6570 . -7) (undo-tree-id6571 . -7) (undo-tree-id6572 . -7) (undo-tree-id6573 . -7) (undo-tree-id6574 . -7) (undo-tree-id6575 . -7) (undo-tree-id6576 . -7) (undo-tree-id6577 . -7) (undo-tree-id6578 . -7) (undo-tree-id6579 . -7) (undo-tree-id6580 . -7) (undo-tree-id6581 . -7) 12074) nil (25969 49572 957342 0) 0 nil])
([nil nil ((12067 . 12069)) nil (25969 49572 957320 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -12070) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) 12071) nil (25969 49572 957319 0) 0 nil])
([nil nil ((12070 . 12071)) nil (25969 49572 957310 0) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . -12074) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) 12075) nil (25969 49572 957308 0) 0 nil])
([nil nil ((12074 . 12075)) nil (25969 49572 957290 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -12124) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (#("d" 0 1 (fontified t)) . -12125) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (#("c" 0 1 (fontified t)) . -12126) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (#("_" 0 1 (fontified t)) . -12127) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (#("d" 0 1 (fontified t)) . -12128) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (#("a" 0 1 (fontified t)) . -12129) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (#("t" 0 1 (fontified t)) . -12130) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (#("a" 0 1 (fontified t)) . -12131) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) 12132 (t 25969 49573 18241 58000)) nil (25969 49652 15100 0) 0 nil])
([nil nil ((12125 . 12128)) nil (25969 49652 15988 0) 0 nil])
([nil nil ((12128 . 12129)) nil (25969 49674 598592 0) 0 nil] [nil nil ((12125 . 12131) (#("STMidx" 0 3 (fontified nil) 3 6 (face font-lock-type-face fontified nil)) . 12125) (undo-tree-id6611 . 3) (12125 . 12128) (#("STM2RS" 0 6 (fontified nil)) . -12125) (12125 . 12131) (#("STM" 0 3 (face font-lock-type-face fontified t)) . -12125) (undo-tree-id6612 . -3) (undo-tree-id6613 . -3) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -2) (undo-tree-id6617 . -2) (undo-tree-id6618 . -3) (undo-tree-id6619 . -3) (undo-tree-id6620 . -3) (undo-tree-id6621 . -3) (undo-tree-id6622 . -3) (undo-tree-id6623 . -3) (undo-tree-id6624 . -3) (undo-tree-id6625 . -3) (undo-tree-id6626 . -3) (undo-tree-id6627 . -3) 12128) ((12125 . 12128) (#("STM2RS" 0 6 (fontified nil)) . 12125) (12125 . 12131) (#("STM" 0 3 (fontified nil)) . 12125) (12125 . 12131) (#("STM2RS" 0 6 (face font-lock-type-face fontified t)) . 12125) (undo-tree-id6784 . -6) (undo-tree-id6785 . -6)) (25969 49652 14935 0) 0 nil])
([nil nil ((12128 . 12129)) nil (25969 49674 598591 0) 0 nil])
nil
([nil nil ((#("S" 0 1 (face font-lock-type-face fontified t)) . -12125) (undo-tree-id6852 . -1) (undo-tree-id6853 . -1) (undo-tree-id6854 . -1) (undo-tree-id6855 . -1) (undo-tree-id6856 . -1) (undo-tree-id6857 . -1) (undo-tree-id6858 . -1) (undo-tree-id6859 . -1) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) (undo-tree-id6867 . -1) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1) (undo-tree-id6870 . -1) (undo-tree-id6871 . -1) (undo-tree-id6872 . -1) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (#("T" 0 1 (face font-lock-type-face fontified t)) . -12126) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) (#("M" 0 1 (face font-lock-type-face fontified t)) . -12127) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (undo-tree-id6957 . -1) (undo-tree-id6958 . -1) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) (undo-tree-id6989 . -1) (undo-tree-id6990 . -1) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (#("3" 0 1 (face font-lock-type-face fontified t)) . -12128) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) 12129) nil (25969 49674 598582 0) 0 nil])
([nil nil ((12125 . 12126)) nil (25969 49674 598414 0) 0 nil])
([nil nil ((12125 . 12131) (#("S" 0 1 (fontified nil)) . 12125) (12125 . 12126) (#("STM2RS" 0 6 (fontified nil)) . -12125) (12125 . 12131) (#("S" 0 1 (face font-lock-type-face fontified t)) . -12125) (undo-tree-id6845 . -1) (undo-tree-id6846 . -1) (undo-tree-id6847 . -1) (undo-tree-id6848 . -1) (undo-tree-id6849 . -1) (undo-tree-id6850 . -1) (undo-tree-id6851 . -1) 12126) nil (25969 49674 598412 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -12131) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (undo-tree-id6830 . -1) (undo-tree-id6831 . -1) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6834 . -1) (undo-tree-id6835 . -1) (undo-tree-id6836 . -1) (undo-tree-id6837 . -1) (undo-tree-id6838 . -1) (undo-tree-id6839 . -1) (undo-tree-id6840 . -1) (undo-tree-id6841 . -1) (undo-tree-id6842 . -1) (undo-tree-id6843 . -1) (undo-tree-id6844 . -1) 12132) nil (25969 49674 598401 0) 0 nil])
([nil nil ((12131 . 12132)) nil (25969 49674 598378 0) 0 nil])
([nil nil ((12155 . 12156)) nil (25969 49674 598377 0) 0 nil])
([nil nil ((12213 . 12214)) nil (25969 49674 598376 0) 0 nil])
([nil nil ((12213 . 12215)) nil (25969 49674 598375 0) 0 nil])
([nil nil ((12213 . 12219) (#("ST" 0 2 (fontified nil)) . 12213) (12213 . 12215) (#("STM2RS" 0 6 (fontified nil)) . -12213) (12213 . 12219) (#("ST" 0 2 (face font-lock-type-face fontified t)) . -12213) (undo-tree-id6824 . -2) (undo-tree-id6825 . -1) (undo-tree-id6826 . -2) (undo-tree-id6827 . -2) 12215) nil (25969 49674 598373 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -12219) (undo-tree-id6815 . -1) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (undo-tree-id6819 . -1) (undo-tree-id6820 . -1) (undo-tree-id6821 . -1) (undo-tree-id6822 . -1) (undo-tree-id6823 . -1) 12220) nil (25969 49674 598366 0) 0 nil])
([nil nil ((12219 . 12220)) nil (25969 49674 598356 0) 0 nil])
([nil nil ((12243 . 12244)) nil (25969 49674 598355 0) 0 nil])
([nil nil ((#("data" 0 4 (fontified t)) . -12208) (undo-tree-id6803 . -4) (undo-tree-id6804 . -4) (undo-tree-id6805 . -4) (undo-tree-id6806 . -4) (undo-tree-id6807 . -4) (undo-tree-id6808 . -4) (undo-tree-id6809 . -4) (undo-tree-id6810 . -4) (undo-tree-id6811 . -4) (undo-tree-id6812 . -4) (undo-tree-id6813 . -4) (undo-tree-id6814 . -4) 12212) nil (25969 49674 598353 0) 0 nil])
([nil nil ((#("adc_" 0 4 (fontified t)) . -12204) (undo-tree-id6786 . -4) (undo-tree-id6787 . -4) (undo-tree-id6788 . -4) (undo-tree-id6789 . -4) (undo-tree-id6790 . -4) (undo-tree-id6791 . -4) (undo-tree-id6792 . -4) (undo-tree-id6793 . -4) (undo-tree-id6794 . -4) (undo-tree-id6795 . -4) (undo-tree-id6796 . -4) (undo-tree-id6797 . -4) (undo-tree-id6798 . -4) (undo-tree-id6799 . -4) (undo-tree-id6800 . -4) (undo-tree-id6801 . -4) (undo-tree-id6802 . -4) 12208) nil (25969 49674 598336 0) 0 nil])
([nil nil ((12124 . 12125) (t 25969 49674 659840 53000)) nil (25969 49784 148472 0) 0 nil])
([nil nil ((12124 . 12125)) nil (25969 49784 148471 0) 0 nil])
([nil nil ((12124 . 12138) (#("k" 0 1 (fontified nil)) . 12124) (12124 . 12125) (#("keyboard_state" 0 14 (fontified nil)) . -12124) (12124 . 12138) (#("k" 0 1 (fontified t)) . -12124) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) 12125) nil (25969 49784 148469 0) 0 nil])
([nil nil ((12138 . 12141)) nil (25969 49784 148458 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 12146 12147 nil nil nil nil #s(yas--exit 12148 nil))) #s(yas--exit 12148 nil) 144 nil #s(yas--field 1 12146 12147 nil nil nil nil #s(yas--exit 12148 nil)) nil nil)) (12139 . 12148) (#("update(${1:f})$0" 0 16 (fontified nil)) . 12139) (12139 . 12155) (#("up" 0 2 (fontified nil)) . 12139) (12139 . 12141) (#("update(…) (as SignalUpdate)" 0 27 (fontified nil)) . -12139) (12139 . 12166) (#("up" 0 2 (fontified t)) . -12139) (undo-tree-id7014 . -2) (undo-tree-id7015 . -2) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -2) (undo-tree-id7020 . -2) (undo-tree-id7021 . -2) (undo-tree-id7022 . -2) (undo-tree-id7023 . -2) (undo-tree-id7024 . -2) 12141) nil (25969 49784 148455 0) 0 nil])
([nil nil ((apply yas--snippet-revive 12139 12148 #s(yas--snippet nil (#s(yas--field 1 12146 12147 nil nil nil nil #s(yas--exit 12148 nil))) #s(yas--exit 12148 nil) 144 nil #s(yas--field 1 12146 12147 nil nil nil nil #s(yas--exit 12148 nil)) nil nil))) nil (25969 49784 148430 0) 0 nil])
([nil nil ((10088 . 10093)) nil (25969 49784 148429 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10165 . 10166) (nil fontified nil 10147 . 10166) (nil fontified nil 10144 . 10147) (nil fontified nil 10142 . 10144) (nil fontified nil 10131 . 10142) (nil fontified nil 10114 . 10131) (nil fontified nil 10101 . 10114) (nil fontified nil 10100 . 10101) (nil fontified nil 10097 . 10100) (nil fontified nil 10093 . 10097) (10093 . 10166)) nil (25969 49784 148427 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -10093) 10143) nil (25969 49784 148419 0) 0 nil])
([nil nil ((#("f) " 0 2 (fontified t) 2 3 (fontified t)) . -12220) (undo-tree-id7067 . -3) (undo-tree-id7068 . -3) 12223 (t 25969 49784 209068 651000)) nil (25969 49822 383921 0) 0 nil])
([nil nil ((#("update(" 0 7 (fontified t)) . -12213) (undo-tree-id7065 . -7) (undo-tree-id7066 . -7) 12220) nil (25969 49822 383918 0) 0 nil])
([nil nil ((#("state." 0 6 (fontified t)) . -12207) (undo-tree-id7063 . -6) (undo-tree-id7064 . -6) 12213) nil (25969 49822 383915 0) 0 nil])
([nil nil ((#("keyboard_" 0 9 (fontified t)) . -12198) (undo-tree-id7061 . -9) (undo-tree-id7062 . -9) 12207) nil (25969 49822 383911 0) 0 nil])
([nil nil ((12198 . 12199)) nil (25969 49822 383908 0) 0 nil])
([nil nil ((12198 . 12199)) nil (25969 49822 383907 0) 0 nil])
([nil nil ((12198 . 12211) (#("s" 0 1 (fontified nil)) . 12198) (12198 . 12199) (#("set_adc_datas" 0 13 (fontified nil)) . -12198) (12198 . 12211) (#("s" 0 1 (fontified t)) . -12198) (undo-tree-id7060 . -1) 12199) nil (25969 49822 383905 0) 0 nil])
([nil nil ((12211 . 12214)) nil (25969 49822 383902 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 12219 12220 nil nil nil nil #s(yas--exit 12221 nil))) #s(yas--exit 12221 nil) 145 nil #s(yas--field 1 12219 12220 nil nil nil nil #s(yas--exit 12221 nil)) nil nil)) (12212 . 12221) (#("update(${1:f})$0" 0 16 (fontified nil)) . 12212) (12212 . 12228) (#("up" 0 2 (fontified nil)) . 12212) (12212 . 12214) (#("update(…) (as SignalUpdate)" 0 27 (fontified nil)) . -12212) (12212 . 12239) (#("up" 0 2 (fontified t)) . -12212) (undo-tree-id7059 . -2) 12214) nil (25969 49822 383900 0) 0 nil])
([nil nil ((apply yas--snippet-revive 12212 12221 #s(yas--snippet nil (#s(yas--field 1 12219 12220 nil nil nil nil #s(yas--exit 12221 nil))) #s(yas--exit 12221 nil) 145 nil #s(yas--field 1 12219 12220 nil nil nil nil #s(yas--exit 12221 nil)) nil nil))) nil (25969 49822 383896 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -12219) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (#(")" 0 1 (fontified t)) . -12220) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) 12221) nil (25969 49822 383894 0) 0 nil])
([nil nil ((12219 . 12221)) nil (25969 49822 383884 0) 0 nil])
([nil nil ((12220 . 12225)) nil (25969 49822 383883 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -12224) (undo-tree-id7050 . -1) 12225) nil (25969 49822 383882 0) 0 nil])
([nil nil ((12224 . 12225)) nil (25969 49822 383880 0) 0 nil])
([nil nil ((12227 . 12232)) nil (25969 49822 383879 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -12285) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) 12286) nil (25969 49822 383876 0) 0 nil])
([nil nil ((12285 . 12287)) nil (25969 49822 383844 0) 0 nil])
([nil nil ((12313 . 12318) (t 25969 49822 445694 928000)) nil (25969 49850 643579 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -12375) (undo-tree-id7132 . -1) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) 12376) nil (25969 49850 643577 0) 0 nil])
([nil nil ((12312 . 12313)) nil (25969 49850 643564 0) 0 nil])
([nil nil ((12312 . 12315)) nil (25969 49850 643563 0) 0 nil])
([nil nil ((12312 . 12325) (#("set" 0 3 (fontified nil)) . 12312) (12312 . 12315) (#("set_adc_datas" 0 13 (fontified nil)) . -12312) (12312 . 12325) (#("set" 0 3 (fontified t)) . -12312) (undo-tree-id7114 . -3) (undo-tree-id7115 . -3) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7119 . -2) (undo-tree-id7120 . -2) (undo-tree-id7121 . -2) (undo-tree-id7122 . -2) (undo-tree-id7123 . -3) (undo-tree-id7124 . -3) (undo-tree-id7125 . -3) (undo-tree-id7126 . -3) (undo-tree-id7127 . -3) (undo-tree-id7128 . -3) (undo-tree-id7129 . -3) (undo-tree-id7130 . -3) (undo-tree-id7131 . -3) 12315) nil (25969 49850 643560 0) 0 nil])
([nil nil ((12325 . 12327)) nil (25969 49850 643536 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -12326) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) 12327) nil (25969 49850 643534 0) 0 nil])
([nil nil ((12326 . 12327)) nil (25969 49850 643523 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 12333 12334 nil nil nil t #s(yas--exit 12335 nil))) #s(yas--exit 12335 nil) 146 nil #s(yas--field 1 12333 12334 nil nil nil t #s(yas--exit 12335 nil)) nil nil)) (12326 . 12335) (#("update(${1:f})$0" 0 16 (fontified nil)) . 12326) (12326 . 12342) (#("u" 0 1 (fontified nil)) . 12326) (12326 . 12327) (#("update(…) (as SignalUpdate)" 0 27 (fontified nil)) . -12326) (12326 . 12353) (#("u" 0 1 (fontified t)) . -12326) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) 12327) nil (25969 49850 643521 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -12333) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) 12334) nil (25969 49850 643508 0) 0 nil])
([nil nil ((12333 . 12334)) nil (25969 49850 643500 0) 0 nil])
([nil nil ((apply yas--snippet-revive 12326 12335 #s(yas--snippet nil (#s(yas--field 1 12333 12334 nil nil nil t #s(yas--exit 12335 nil))) #s(yas--exit 12335 nil) 146 nil #s(yas--field 1 12333 12334 nil nil nil t #s(yas--exit 12335 nil)) nil nil))) nil (25969 49850 643499 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -12334) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) 12335) nil (25969 49850 643497 0) 0 nil])
([nil nil ((12334 . 12335)) nil (25969 49850 643479 0) 0 nil])
([nil nil ((12334 . 12339)) nil (25969 49850 643478 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -12340) (undo-tree-id7069 . -1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) 12341) nil (25969 49850 643475 0) 0 nil])
([nil nil ((12403 . 12405)) nil (25969 49850 643455 0) 0 nil])
([nil nil ((12312 . 12313) 12316 (t 25969 49850 705632 750000)) nil (25969 49853 853244 0) 0 nil])
([nil nil ((#("		    let rid = e.report_id();" 0 6 (fontified t) 6 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 13 (face font-lock-variable-name-face fontified t) 13 30 (fontified t)) . 12032) (undo-tree-id7145 . -30) (undo-tree-id7146 . -6) (undo-tree-id7147 . -30) (undo-tree-id7148 . -30) (undo-tree-id7149 . -30) (undo-tree-id7150 . -30) (undo-tree-id7151 . -30) (undo-tree-id7152 . -30) (undo-tree-id7153 . -30) (undo-tree-id7154 . -30) (undo-tree-id7155 . -30) (undo-tree-id7156 . -30) (undo-tree-id7157 . -30) (undo-tree-id7158 . -30) (undo-tree-id7159 . -30) (t 25969 49853 916946 188000)) nil (25969 49870 174807 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12032) (undo-tree-id7144 . -1)) nil (25969 49870 174787 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -12401) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) 12402 (t 25969 49870 238135 615000)) nil (25969 49877 467863 0) 0 nil])
([nil nil ((#("		   
" 0 5 (fontified t) 5 6 (fontified t)) . 12396) (undo-tree-id7160 . -5) (undo-tree-id7161 . -5) (undo-tree-id7162 . -5) (undo-tree-id7163 . -5) (undo-tree-id7164 . -5) (undo-tree-id7165 . -5) (undo-tree-id7166 . -5) (undo-tree-id7167 . -5) (undo-tree-id7168 . -5) (undo-tree-id7169 . -5) (undo-tree-id7170 . -5) (undo-tree-id7171 . -5) (undo-tree-id7172 . -5) (undo-tree-id7173 . -5) (undo-tree-id7174 . -6)) nil (25969 49877 467844 0) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -14643) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (#("S" 0 1 (face font-lock-string-face fontified t)) . -14644) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -14645) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -14646) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -14647) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -14648) (undo-tree-id7225 . -1) (undo-tree-id7226 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -14649) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -14650) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -14651) (undo-tree-id7231 . -1) (undo-tree-id7232 . -1) (#("K" 0 1 (face font-lock-string-face fontified t)) . -14652) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -14653) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (#("y" 0 1 (face font-lock-string-face fontified t)) . -14654) (undo-tree-id7237 . -1) (undo-tree-id7238 . -1) (#("b" 0 1 (face font-lock-string-face fontified t)) . -14655) (undo-tree-id7239 . -1) (undo-tree-id7240 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -14656) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -14657) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -14658) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -14659) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -14660) (undo-tree-id7249 . -1) (undo-tree-id7250 . -1) 14661 (t 25969 49877 530139 958000)) nil (25969 50139 570881 0) 0 nil])
([nil nil ((14643 . 14645)) nil (25969 50139 570838 0) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 14644) (undo-tree-id7214 . -1) 14645) nil (25969 50139 570837 0) 0 nil])
([nil nil ((14644 . 14646)) nil (25969 50139 570834 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -14644) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -14645) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) 14646) nil (25969 50139 570830 0) 0 nil])
([nil nil ((14644 . 14645)) nil (25969 50139 570824 0) 0 nil])
([nil nil ((14644 . 14646)) nil (25969 50139 570823 0) 0 nil])
([nil nil ((14646 . 14647)) nil (25969 50139 570822 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -14644) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -14645) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (#(" " 0 1 (fontified t)) . -14646) (undo-tree-id7209 . -1) 14647) nil (25969 50139 570821 0) 0 nil])
([nil nil ((14644 . 14652)) nil (25969 50139 570811 0) 0 nil])
([nil nil ((14650 . 14657) (#("ui" 0 2 (fontified nil)) . 14650) (14650 . 14652) (#("uistate" 0 7 (fontified nil)) . -14650) (14650 . 14657) (#("ui" 0 2 (fontified t)) . -14650) (undo-tree-id7204 . -2) 14652) nil (25969 50139 570809 0) 0 nil])
([nil nil ((14657 . 14659)) nil (25969 50139 570805 0) 0 nil])
([nil nil ((apply yas--snippet-revive 14658 14663 #s(yas--snippet nil nil #s(yas--exit 14663 nil) 147 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 14663 nil) 147 nil nil nil nil)) (14658 . 14663) (#("get()$0" 0 7 (fontified nil)) . 14658) (14658 . 14665) (#("g" 0 1 (fontified nil)) . 14658) (14658 . 14659) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -14658) (14658 . 14678) (#("g" 0 1 (fontified t)) . -14658) (undo-tree-id7203 . -1) 14659) nil (25969 50139 570803 0) 0 nil])
([nil nil ((14663 . 14664)) nil (25969 50139 570799 0) 0 nil])
([nil nil ((14664 . 14665)) nil (25969 50139 570796 0) 0 nil])
([nil nil ((14664 . 14674) (#("h" 0 1 (fontified nil)) . 14664) (14664 . 14665) (#("hid_device" 0 10 (fontified nil)) . -14664) (14664 . 14674) (#("h" 0 1 (fontified t)) . -14664) (undo-tree-id7202 . -1) 14665) nil (25969 50139 570794 0) 0 nil])
([nil nil ((14674 . 14677)) nil (25969 50139 570790 0) 0 nil])
([nil nil ((apply yas--snippet-revive 14675 14684 #s(yas--snippet nil nil #s(yas--exit 14684 nil) 148 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 14684 nil) 148 nil nil nil nil)) (14675 . 14684) (#("is_some()$0" 0 11 (fontified nil)) . 14675) (14675 . 14686) (#("is" 0 2 (fontified nil)) . 14675) (14675 . 14677) (#("is_some()" 0 9 (fontified nil)) . -14675) (14675 . 14684) (#("is" 0 2 (fontified t)) . -14675) (undo-tree-id7201 . -2) 14677) nil (25969 50139 570788 0) 0 nil])
([nil nil ((14650 . 14652)) nil (25969 50139 570783 0) 0 nil])
([nil nil ((14652 . 14653)) nil (25969 50139 570782 0) 0 nil])
([nil nil ((14687 . 14690)) nil (25969 50139 570781 0) 0 nil])
([nil nil ((14689 . 14691)) nil (25969 50139 570779 0) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -14688) (undo-tree-id7199 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -14689) (undo-tree-id7200 . -1) 14690) nil (25969 50139 570777 0) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -14688) (undo-tree-id7198 . -1) 14689) nil (25969 50139 570773 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14687) (undo-tree-id7196 . -1) (#("}" 0 1 (fontified t)) . -14688) (undo-tree-id7197 . -1) 14689) nil (25969 50139 570771 0) 0 nil])
([nil nil ((14650 . 14652)) nil (25969 50139 570767 0) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -14651) (undo-tree-id7195 . -1) 14652) nil (25969 50139 570765 0) 0 nil])
([nil nil ((14651 . 14652)) nil (25969 50139 570761 0) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -14651) (undo-tree-id7194 . -1) 14652) nil (25969 50139 570760 0) 0 nil])
([nil nil ((14651 . 14652)) nil (25969 50139 570758 0) 0 nil])
([nil nil ((14689 . 14690)) nil (25969 50139 570757 0) 0 nil])
([nil nil ((14652 . 14655)) nil (25969 50139 570756 0) 0 nil])
([nil nil ((14692 . 14698)) nil (25969 50139 570755 0) 0 nil])
([nil nil ((14692 . 14695)) nil (25969 50139 570754 0) 0 nil])
([nil nil ((14696 . 14698) (#("		    " 0 6 (fontified nil)) . 14695) (undo-tree-id7193 . -2) (14697 . 14701) (14694 . 14698)) nil (25969 50139 570753 0) 0 nil])
([nil nil ((14695 . 14701)) nil (25969 50139 570750 0) 0 nil])
([nil nil ((14701 . 14703)) nil (25969 50139 570749 0) 0 nil])
([nil nil ((14702 . 14711)) nil (25969 50139 570748 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -14710) (undo-tree-id7192 . -1) 14711) nil (25969 50139 570747 0) 0 nil])
([nil nil ((14710 . 14718)) nil (25969 50139 570744 0) 0 nil])
([nil nil ((14723 . 14731)) nil (25969 50139 570743 0) 0 nil])
([nil nil ((14732 . 14734) (#("		    " 0 6 (fontified nil)) . 14731) (undo-tree-id7189 . -2) (undo-tree-id7190 . -2) (undo-tree-id7191 . -2) (14733 . 14737) (14730 . 14734)) nil (25969 50139 570742 0) 0 nil])
([nil nil ((14731 . 14737)) nil (25969 50139 570732 0) 0 nil])
([nil nil ((14737 . 14739)) nil (25969 50139 570730 0) 0 nil])
([nil nil ((14738 . 14745)) nil (25969 50246 957914 0) 0 nil])
([nil nil ((apply -30 12053 12418 undo--wrap-and-run-primitive-undo 12053 12418 (("        " . 12053) (12417 . 12420) (12408 . 12411) (12303 . 12306) (12289 . 12292) (12280 . 12283) (12179 . 12182) (12158 . 12161) (12105 . 12108) (12063 . 12066) (12053 . 12061) (12387 . 12390) (#(" " 0 1 (fontified t rear-nonsticky t)) . 12387) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker at 12134 in component.rs> . -1) (#<marker in no buffer> . -1) (12386 . 12387) 12053))) nil (25969 50529 595955 0) 0 nil] [nil nil ((#("." 0 1 (fontified t)) . -12239) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (undo-tree-id7265 . -1) (undo-tree-id7266 . -1) (undo-tree-id7267 . -1) (undo-tree-id7268 . -1) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (undo-tree-id7271 . -1) (undo-tree-id7272 . -1) (undo-tree-id7273 . -1) (undo-tree-id7274 . -1) (undo-tree-id7275 . -1) (undo-tree-id7276 . -1) (undo-tree-id7277 . -1) (undo-tree-id7278 . -1) (undo-tree-id7279 . -1) (undo-tree-id7280 . -1) (undo-tree-id7281 . -1) (undo-tree-id7282 . -1) (undo-tree-id7283 . -1) (#("c" 0 1 (fontified t)) . -12240) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (undo-tree-id7286 . -1) (undo-tree-id7287 . -1) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) (undo-tree-id7296 . -1) (undo-tree-id7297 . -1) (undo-tree-id7298 . -1) (undo-tree-id7299 . -1) (undo-tree-id7300 . -1) (undo-tree-id7301 . -1) (undo-tree-id7302 . -1) (undo-tree-id7303 . -1) (undo-tree-id7304 . -1) (undo-tree-id7305 . -1) (undo-tree-id7306 . -1) (undo-tree-id7307 . -1) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) (undo-tree-id7310 . -1) (undo-tree-id7311 . -1) (#("l" 0 1 (fontified t)) . -12241) (undo-tree-id7312 . -1) (undo-tree-id7313 . -1) (undo-tree-id7314 . -1) (undo-tree-id7315 . -1) (undo-tree-id7316 . -1) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (#("o" 0 1 (fontified t)) . -12242) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (#("n" 0 1 (fontified t)) . -12243) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) (undo-tree-id7364 . -1) (undo-tree-id7365 . -1) (undo-tree-id7366 . -1) (undo-tree-id7367 . -1) (undo-tree-id7368 . -1) (undo-tree-id7369 . -1) (undo-tree-id7370 . -1) (undo-tree-id7371 . -1) (undo-tree-id7372 . -1) (undo-tree-id7373 . -1) (undo-tree-id7374 . -1) (undo-tree-id7375 . -1) (undo-tree-id7376 . -1) (undo-tree-id7377 . -1) (#("e" 0 1 (fontified t)) . -12244) (undo-tree-id7378 . -1) (undo-tree-id7379 . -1) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) (undo-tree-id7384 . -1) (undo-tree-id7385 . -1) (undo-tree-id7386 . -1) (undo-tree-id7387 . -1) (undo-tree-id7388 . -1) (undo-tree-id7389 . -1) (undo-tree-id7390 . -1) (undo-tree-id7391 . -1) (undo-tree-id7392 . -1) (undo-tree-id7393 . -1) (undo-tree-id7394 . -1) (undo-tree-id7395 . -1) (undo-tree-id7396 . -1) (undo-tree-id7397 . -1) (#("(" 0 1 (fontified t)) . -12245) (undo-tree-id7398 . -1) (undo-tree-id7399 . -1) (undo-tree-id7400 . -1) (undo-tree-id7401 . -1) (undo-tree-id7402 . -1) (undo-tree-id7403 . -1) (undo-tree-id7404 . -1) (undo-tree-id7405 . -1) (undo-tree-id7406 . -1) (undo-tree-id7407 . -1) (undo-tree-id7408 . -1) (undo-tree-id7409 . -1) (undo-tree-id7410 . -1) (undo-tree-id7411 . -1) (undo-tree-id7412 . -1) (undo-tree-id7413 . -1) (undo-tree-id7414 . -1) (undo-tree-id7415 . -1) (undo-tree-id7416 . -1) (#(")" 0 1 (fontified t)) . -12246) (undo-tree-id7417 . -1) (undo-tree-id7418 . -1) (undo-tree-id7419 . -1) (undo-tree-id7420 . -1) (undo-tree-id7421 . -1) (undo-tree-id7422 . -1) (undo-tree-id7423 . -1) (undo-tree-id7424 . -1) (undo-tree-id7425 . -1) (undo-tree-id7426 . -1) (undo-tree-id7427 . -1) (undo-tree-id7428 . -1) 12247 (t 25969 50139 634449 628000)) ((12239 . 12247) (t 25969 50243 638417 385000)) (25969 50243 573260 0) 0 nil])
([nil nil ((12051 . 12055)) nil (25969 50529 595954 0) 0 nil])
nil
([nil nil ((12055 . 12059)) nil (25969 50529 595953 0) 0 nil])
([nil nil ((12055 . 12062) (#("logg" 0 4 (fontified nil)) . 12055) (12055 . 12059) (#("logging" 0 7 (fontified nil)) . -12055) (12055 . 12062) (#("logg" 0 4 (fontified t)) . -12055) (undo-tree-id7436 . -4) (undo-tree-id7437 . -2) (undo-tree-id7438 . -3) (undo-tree-id7439 . -3) (undo-tree-id7440 . -4) (undo-tree-id7441 . -4) (undo-tree-id7442 . -4) (undo-tree-id7443 . -4) 12059) nil (25969 50529 595948 0) 0 nil])
([nil nil ((12062 . 12065)) nil (25969 50529 595936 0) 0 nil])
([nil nil ((apply yas--snippet-revive 12064 12070 #s(yas--snippet nil nil #s(yas--exit 12069 nil) 149 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 12069 nil) 149 nil nil nil nil)) (12064 . 12070) (#("log!($0)" 0 8 (fontified nil)) . 12064) (12064 . 12072) (#("l" 0 1 (fontified nil)) . 12064) (12064 . 12065) (#("log!(…)" 0 7 (fontified nil)) . -12064) (12064 . 12071) (#("l" 0 1 (fontified t)) . -12064) (undo-tree-id7431 . -1) (undo-tree-id7432 . -1) (undo-tree-id7433 . -1) (undo-tree-id7434 . -1) (undo-tree-id7435 . -1) 12065) nil (25969 50529 595933 0) 0 nil])
([nil nil ((12069 . 12071)) nil (25969 50529 595924 0) 0 nil])
([nil nil ((12070 . 12071)) nil (25969 50529 595923 0) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-string-face fontified t)) . -12070) (undo-tree-id7429 . -1) (undo-tree-id7430 . -1) 12071) nil (25969 50529 595919 0) 0 nil])
([nil nil ((12070 . 12072)) nil (25969 50529 595909 0) 0 nil])
([nil nil ((12071 . 12073)) nil (25969 50529 595908 0) 0 nil])
([nil nil ((12075 . 12079)) nil (25969 50529 595899 0) 0 nil])
([nil nil ((12080 . 12081)) nil (25969 50529 595895 0) 0 nil])
([nil nil ((1392 . 1394) (t 25969 50529 659739 115000)) nil (25969 50659 977887 0) 0 nil])
([nil nil ((1261 . 1263) (t 25969 50660 41081 616000)) nil (25969 50667 888517 0) 0 nil])
([nil nil ((apply 27 12086 12420 undo--wrap-and-run-primitive-undo 12086 12420 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12419) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12413) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12311) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12300) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12294) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12196) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12178) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12128) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -12089) 12086))) nil (25969 50726 925524 0) 0 nil])
([nil nil ((12056 . 12058)) nil (25969 50726 925520 0) 0 nil])
([nil nil ((#("64]" 0 3 (fontified t)) . -10148) (undo-tree-id7502 . -3) (undo-tree-id7503 . -3) (undo-tree-id7504 . -3) (undo-tree-id7505 . -3) (undo-tree-id7506 . -3) (undo-tree-id7507 . -3) (undo-tree-id7508 . -3) (undo-tree-id7509 . -3) (undo-tree-id7510 . -3) (undo-tree-id7511 . -3) (undo-tree-id7512 . -3) (undo-tree-id7513 . -3) (undo-tree-id7514 . -3) (undo-tree-id7515 . -3) (undo-tree-id7516 . -3) (undo-tree-id7517 . -3) 10151 (t 25969 50726 989355 328000)) nil (25969 51109 637665 0) 0 nil])
([nil nil ((#("u32;" 0 3 (face font-lock-type-face fontified t) 3 4 (fontified t)) . -10144) (undo-tree-id7481 . -4) (undo-tree-id7482 . -4) (undo-tree-id7483 . -4) (undo-tree-id7484 . -4) (undo-tree-id7485 . -4) (undo-tree-id7486 . -4) (undo-tree-id7487 . -4) (undo-tree-id7488 . -4) (undo-tree-id7489 . -4) (undo-tree-id7490 . -4) (undo-tree-id7491 . -4) (undo-tree-id7492 . -4) (undo-tree-id7493 . -4) (undo-tree-id7494 . -4) (undo-tree-id7495 . -4) (undo-tree-id7496 . -4) (undo-tree-id7497 . -4) (undo-tree-id7498 . -4) (undo-tree-id7499 . -4) (undo-tree-id7500 . -4) (undo-tree-id7501 . -4) 10148) nil (25969 51109 637646 0) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -10143) (undo-tree-id7449 . -1) (undo-tree-id7450 . -1) (undo-tree-id7451 . -1) (undo-tree-id7452 . -1) (undo-tree-id7453 . -1) (undo-tree-id7454 . -1) (undo-tree-id7455 . -1) (undo-tree-id7456 . -1) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) (undo-tree-id7470 . -1) (undo-tree-id7471 . -1) (undo-tree-id7472 . -1) (undo-tree-id7473 . -1) (undo-tree-id7474 . -1) (undo-tree-id7475 . -1) (undo-tree-id7476 . -1) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) (undo-tree-id7480 . -1) 10144) nil (25969 51109 637622 0) 0 nil])
([nil nil ((10143 . 10144)) nil (25969 51109 637588 0) 0 nil])
([nil nil ((10143 . 10151) (#("A" 0 1 (fontified nil)) . 10143) (10143 . 10144) (#("ADC_Data" 0 8 (fontified nil)) . -10143) (10143 . 10151) (#("A" 0 1 (face font-lock-type-face fontified t)) . -10143) (undo-tree-id7444 . -1) (undo-tree-id7445 . -1) (undo-tree-id7446 . -1) (undo-tree-id7447 . -1) (undo-tree-id7448 . -1) 10144) nil (25969 51109 637581 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -12225) (undo-tree-id7638 . -1) (undo-tree-id7639 . -1) (undo-tree-id7640 . -1) (undo-tree-id7641 . -1) (undo-tree-id7642 . -1) (undo-tree-id7643 . -1) (undo-tree-id7644 . -1) (undo-tree-id7645 . -1) (undo-tree-id7646 . -1) (undo-tree-id7647 . -1) (undo-tree-id7648 . -1) (undo-tree-id7649 . -1) (undo-tree-id7650 . -1) (undo-tree-id7651 . -1) (undo-tree-id7652 . -1) (undo-tree-id7653 . -1) (#("r" 0 1 (fontified t)) . -12226) (undo-tree-id7654 . -1) (undo-tree-id7655 . -1) (undo-tree-id7656 . -1) (undo-tree-id7657 . -1) (undo-tree-id7658 . -1) (undo-tree-id7659 . -1) (undo-tree-id7660 . -1) (undo-tree-id7661 . -1) (undo-tree-id7662 . -1) (undo-tree-id7663 . -1) (undo-tree-id7664 . -1) (undo-tree-id7665 . -1) (undo-tree-id7666 . -1) (undo-tree-id7667 . -1) (undo-tree-id7668 . -1) (#("r" 0 1 (fontified t)) . -12227) (undo-tree-id7669 . -1) (undo-tree-id7670 . -1) (undo-tree-id7671 . -1) (undo-tree-id7672 . -1) (undo-tree-id7673 . -1) (undo-tree-id7674 . -1) (undo-tree-id7675 . -1) (undo-tree-id7676 . -1) (undo-tree-id7677 . -1) (undo-tree-id7678 . -1) (undo-tree-id7679 . -1) (undo-tree-id7680 . -1) (undo-tree-id7681 . -1) (undo-tree-id7682 . -1) (#("a" 0 1 (fontified t)) . -12228) (undo-tree-id7683 . -1) (undo-tree-id7684 . -1) (undo-tree-id7685 . -1) (undo-tree-id7686 . -1) (undo-tree-id7687 . -1) (undo-tree-id7688 . -1) (undo-tree-id7689 . -1) (undo-tree-id7690 . -1) (undo-tree-id7691 . -1) (undo-tree-id7692 . -1) (undo-tree-id7693 . -1) (undo-tree-id7694 . -1) (undo-tree-id7695 . -1) (#("y" 0 1 (fontified t)) . -12229) (undo-tree-id7696 . -1) (undo-tree-id7697 . -1) (undo-tree-id7698 . -1) (undo-tree-id7699 . -1) (undo-tree-id7700 . -1) (undo-tree-id7701 . -1) (undo-tree-id7702 . -1) (undo-tree-id7703 . -1) (undo-tree-id7704 . -1) (undo-tree-id7705 . -1) (undo-tree-id7706 . -1) (undo-tree-id7707 . -1) 12230 (t 25969 51109 702505 393000)) nil (25969 51126 855887 0) 0 nil])
([nil nil ((12225 . 12226)) nil (25969 51126 855813 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -12225) (undo-tree-id7632 . -1) (undo-tree-id7633 . -1) (undo-tree-id7634 . -1) (undo-tree-id7635 . -1) (undo-tree-id7636 . -1) (undo-tree-id7637 . -1) 12226) nil (25969 51126 855811 0) 0 nil])
([nil nil ((12225 . 12226)) nil (25969 51126 855804 0) 0 nil])
([nil nil ((12228 . 12230)) nil (25969 51126 855802 0) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -12337) (undo-tree-id7524 . -1) (undo-tree-id7525 . -1) (undo-tree-id7526 . -1) (undo-tree-id7527 . -1) (undo-tree-id7528 . -1) (undo-tree-id7529 . -1) (undo-tree-id7530 . -1) (undo-tree-id7531 . -1) (undo-tree-id7532 . -1) (undo-tree-id7533 . -1) (undo-tree-id7534 . -1) (undo-tree-id7535 . -1) (undo-tree-id7536 . -1) (undo-tree-id7537 . -1) (undo-tree-id7538 . -1) (undo-tree-id7539 . -1) (undo-tree-id7540 . -1) (undo-tree-id7541 . -1) (undo-tree-id7542 . -1) (undo-tree-id7543 . -1) (undo-tree-id7544 . -1) (#("a" 0 1 (fontified t)) . -12338) (undo-tree-id7545 . -1) (undo-tree-id7546 . -1) (undo-tree-id7547 . -1) (undo-tree-id7548 . -1) (undo-tree-id7549 . -1) (undo-tree-id7550 . -1) (undo-tree-id7551 . -1) (undo-tree-id7552 . -1) (undo-tree-id7553 . -1) (undo-tree-id7554 . -1) (undo-tree-id7555 . -1) (undo-tree-id7556 . -1) (undo-tree-id7557 . -1) (undo-tree-id7558 . -1) (undo-tree-id7559 . -1) (undo-tree-id7560 . -1) (undo-tree-id7561 . -1) (undo-tree-id7562 . -1) (undo-tree-id7563 . -1) (undo-tree-id7564 . -1) (#("r" 0 1 (fontified t)) . -12339) (undo-tree-id7565 . -1) (undo-tree-id7566 . -1) (undo-tree-id7567 . -1) (undo-tree-id7568 . -1) (undo-tree-id7569 . -1) (undo-tree-id7570 . -1) (undo-tree-id7571 . -1) (undo-tree-id7572 . -1) (undo-tree-id7573 . -1) (undo-tree-id7574 . -1) (undo-tree-id7575 . -1) (undo-tree-id7576 . -1) (undo-tree-id7577 . -1) (undo-tree-id7578 . -1) (undo-tree-id7579 . -1) (undo-tree-id7580 . -1) (undo-tree-id7581 . -1) (undo-tree-id7582 . -1) (undo-tree-id7583 . -1) (#("r" 0 1 (fontified t)) . -12340) (undo-tree-id7584 . -1) (undo-tree-id7585 . -1) (undo-tree-id7586 . -1) (undo-tree-id7587 . -1) (undo-tree-id7588 . -1) (undo-tree-id7589 . -1) (undo-tree-id7590 . -1) (undo-tree-id7591 . -1) (undo-tree-id7592 . -1) (undo-tree-id7593 . -1) (undo-tree-id7594 . -1) (undo-tree-id7595 . -1) (undo-tree-id7596 . -1) (undo-tree-id7597 . -1) (undo-tree-id7598 . -1) (undo-tree-id7599 . -1) (undo-tree-id7600 . -1) (undo-tree-id7601 . -1) (#("a" 0 1 (fontified t)) . -12341) (undo-tree-id7602 . -1) (undo-tree-id7603 . -1) (undo-tree-id7604 . -1) (undo-tree-id7605 . -1) (undo-tree-id7606 . -1) (undo-tree-id7607 . -1) (undo-tree-id7608 . -1) (undo-tree-id7609 . -1) (undo-tree-id7610 . -1) (undo-tree-id7611 . -1) (undo-tree-id7612 . -1) (undo-tree-id7613 . -1) (undo-tree-id7614 . -1) (undo-tree-id7615 . -1) (undo-tree-id7616 . -1) (undo-tree-id7617 . -1) (undo-tree-id7618 . -1) (#("y" 0 1 (fontified t)) . -12342) (undo-tree-id7619 . -1) (undo-tree-id7620 . -1) (undo-tree-id7621 . -1) (undo-tree-id7622 . -1) (undo-tree-id7623 . -1) (undo-tree-id7624 . -1) (undo-tree-id7625 . -1) (undo-tree-id7626 . -1) (undo-tree-id7627 . -1) (undo-tree-id7628 . -1) (undo-tree-id7629 . -1) (undo-tree-id7630 . -1) (undo-tree-id7631 . -1) 12343) nil (25969 51126 855796 0) 0 nil])
([nil nil ((12337 . 12338)) nil (25969 51126 855683 0) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -12337) (undo-tree-id7518 . -1) (undo-tree-id7519 . -1) (undo-tree-id7520 . -1) (undo-tree-id7521 . -1) (undo-tree-id7522 . -1) (undo-tree-id7523 . -1) 12338) nil (25969 51126 855681 0) 0 nil])
([nil nil ((12337 . 12339)) nil (25969 51126 855665 0) 0 nil])
([nil nil ((12341 . 12343)) nil (25969 51126 855661 0) 0 nil])
([nil nil ((#("#[derive(Clone, serde::Deserialize)]
struct ADC_Data {
    index: u32,
    value: u32,
}" 0 36 (face font-lock-preprocessor-face fontified t) 36 37 (fontified t) 37 43 (face font-lock-keyword-face fontified t) 43 44 (fontified t) 44 52 (face font-lock-type-face fontified t) 52 55 (fontified t) 55 59 (fontified t) 59 64 (face font-lock-variable-name-face fontified t) 64 66 (fontified t) 66 69 (face font-lock-type-face fontified t) 69 71 (fontified t) 71 75 (fontified t) 75 80 (face font-lock-variable-name-face fontified t) 80 82 (fontified t) 82 85 (face font-lock-type-face fontified t) 85 87 (fontified t) 87 88 (fontified t)) . 609) (undo-tree-id7772 . -88) (undo-tree-id7773 . -44) (undo-tree-id7774 . -44) (undo-tree-id7775 . -44) (undo-tree-id7776 . -44) (undo-tree-id7777 . -44) (undo-tree-id7778 . -44) (undo-tree-id7779 . -44) (undo-tree-id7780 . -44) (undo-tree-id7781 . -44) (undo-tree-id7782 . -44) (undo-tree-id7783 . -44) (undo-tree-id7784 . -44) (undo-tree-id7785 . -44) (undo-tree-id7786 . -44) (undo-tree-id7787 . -44) (undo-tree-id7788 . -44) (undo-tree-id7789 . -44) (undo-tree-id7790 . -44) (undo-tree-id7791 . -44) (undo-tree-id7792 . -44) (undo-tree-id7793 . -44) (undo-tree-id7794 . -44) (undo-tree-id7795 . -44) (undo-tree-id7796 . -44) (undo-tree-id7797 . -44) (undo-tree-id7798 . -44) (undo-tree-id7799 . -44) (undo-tree-id7800 . -44) (undo-tree-id7801 . -44) (undo-tree-id7802 . -44) (undo-tree-id7803 . -88) (undo-tree-id7804 . -88) (undo-tree-id7805 . -88) (undo-tree-id7806 . -88) (undo-tree-id7807 . -88) (undo-tree-id7808 . -74) (undo-tree-id7809 . -55) (undo-tree-id7810 . -55) (undo-tree-id7811 . -55) (undo-tree-id7812 . -55) (undo-tree-id7813 . -55) (undo-tree-id7814 . -55) (undo-tree-id7815 . -55) (undo-tree-id7816 . -55) (undo-tree-id7817 . -55) (undo-tree-id7818 . -55) (undo-tree-id7819 . -55) (undo-tree-id7820 . -88) (t 25969 51126 918898 801000)) nil (25969 51164 413662 0) 0 nil])
([nil nil ((#("async fn listen_on_adc_event(adc_datas: WriteSignal<[u32; 64]>) {
    spawn_local(async move {
	let mut events = event::listen::<Payload>(\"adc_data\")
            .await
            .unwrap();

	while let Some(event) = events.next().await {
	    let adc_data: ADC_Data = serde_json::from_str(event.payload.message.as_str()).unwrap();
	    adc_datas.update(|array| {
		array[STM2RS[adc_data.index as usize]] = adc_data.value;
	    });
	}
    });

}" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 28 (face font-lock-function-name-face fontified t) 28 29 (fontified t) 29 38 (face font-lock-variable-name-face fontified t) 38 40 (fontified t) 40 51 (face font-lock-type-face fontified t) 51 53 (fontified t) 53 56 (face font-lock-type-face fontified t) 56 66 (fontified t) 66 82 (fontified t) 82 87 (face font-lock-keyword-face fontified t) 87 88 (fontified t) 88 92 (face font-lock-keyword-face fontified t) 92 95 (fontified t) 95 96 (fontified t) 96 99 (face font-lock-keyword-face fontified t) 99 100 (fontified t) 100 103 (face font-lock-keyword-face fontified t) 103 104 (fontified t) 104 110 (face font-lock-variable-name-face fontified t) 110 113 (fontified t) 113 118 (face font-lock-constant-face fontified t) 118 129 (fontified t) 129 136 (face font-lock-type-face fontified t) 136 138 (fontified t) 138 148 (face font-lock-string-face fontified t) 148 150 (fontified t) 150 163 (fontified t) 163 168 (face font-lock-keyword-face fontified t) 168 169 (fontified t) 169 192 (fontified t) 192 193 (fontified t) 193 194 (fontified t) 194 199 (face font-lock-keyword-face fontified t) 199 200 (fontified t) 200 203 (face font-lock-keyword-face fontified t) 203 204 (fontified t) 204 208 (face font-lock-type-face fontified t) 208 232 (fontified t) 232 237 (face font-lock-keyword-face fontified t) 237 240 (fontified t) 240 245 (fontified t) 245 248 (face font-lock-keyword-face fontified t) 248 249 (fontified t) 249 257 (face font-lock-variable-name-face fontified t) 257 259 (fontified t) 259 267 (face font-lock-type-face fontified t) 267 270 (fontified t) 270 280 (face font-lock-constant-face fontified t) 280 333 (fontified t) 333 365 (fontified t) 365 373 (fontified t) 373 379 (face font-lock-type-face fontified t) 379 395 (fontified t) 395 397 (face font-lock-keyword-face fontified t) 397 398 (fontified t) 398 403 (face font-lock-type-face fontified t) 403 424 (fontified t) 424 433 (fontified t) 433 436 (fontified t) 436 446 (fontified t)) . 611) (undo-tree-id7744 . -446) (undo-tree-id7745 . -432) (undo-tree-id7746 . -2) (undo-tree-id7747 . -446) (undo-tree-id7748 . -446) (undo-tree-id7749 . -446) (undo-tree-id7750 . -446) (undo-tree-id7751 . -446) (undo-tree-id7752 . -444) (undo-tree-id7753 . -444) (undo-tree-id7754 . -444) (undo-tree-id7755 . -173) (undo-tree-id7756 . -95) (undo-tree-id7757 . -69) (undo-tree-id7758 . -68) (undo-tree-id7759 . -2) (undo-tree-id7760 . -2) (undo-tree-id7761 . -2) (undo-tree-id7762 . -2) (undo-tree-id7763 . -2) (undo-tree-id7764 . -2) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (undo-tree-id7769 . -1) (undo-tree-id7770 . -1) (undo-tree-id7771 . -446)) nil (25969 51164 413599 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -610) (undo-tree-id7708 . -1) (undo-tree-id7709 . -1) (undo-tree-id7710 . -1) (undo-tree-id7711 . -1) (undo-tree-id7712 . -1) (undo-tree-id7713 . -1) (undo-tree-id7714 . -1) (undo-tree-id7715 . -1) (undo-tree-id7716 . -1) (undo-tree-id7717 . -1) (undo-tree-id7718 . -1) (undo-tree-id7719 . -1) (undo-tree-id7720 . -1) (undo-tree-id7721 . -1) (undo-tree-id7722 . -1) (undo-tree-id7723 . -1) (undo-tree-id7724 . -1) (undo-tree-id7725 . -1) (undo-tree-id7726 . -1) (undo-tree-id7727 . -1) (undo-tree-id7728 . -1) (undo-tree-id7729 . -1) (undo-tree-id7730 . -1) (undo-tree-id7731 . -1) (undo-tree-id7732 . -1) (undo-tree-id7733 . -1) (undo-tree-id7734 . -1) (undo-tree-id7735 . -1) (undo-tree-id7736 . -1) (undo-tree-id7737 . -1) (undo-tree-id7738 . -1) (undo-tree-id7739 . -1) (undo-tree-id7740 . -1) (undo-tree-id7741 . -1) (undo-tree-id7742 . -1) (undo-tree-id7743 . -1) 611) nil (25969 51164 413567 0) 0 nil])
([nil nil ((#("Data" 0 4 (face font-lock-type-face fontified t)) . -9612) (undo-tree-id7860 . -4) (undo-tree-id7861 . -4) (undo-tree-id7862 . -4) (undo-tree-id7863 . -4) (undo-tree-id7864 . -4) (undo-tree-id7865 . -4) (undo-tree-id7866 . -4) (undo-tree-id7867 . -4) (undo-tree-id7868 . -4) (undo-tree-id7869 . -4) (undo-tree-id7870 . -4) (undo-tree-id7871 . -4) 9616 (t 25969 51164 478002 2000)) nil (25969 51181 125413 0) 0 nil])
([nil nil ((#("ADC_" 0 4 (face font-lock-type-face fontified t)) . -9608) (undo-tree-id7845 . -4) (undo-tree-id7846 . -4) (undo-tree-id7847 . -4) (undo-tree-id7848 . -4) (undo-tree-id7849 . -4) (undo-tree-id7850 . -4) (undo-tree-id7851 . -4) (undo-tree-id7852 . -4) (undo-tree-id7853 . -4) (undo-tree-id7854 . -4) (undo-tree-id7855 . -4) (undo-tree-id7856 . -4) (undo-tree-id7857 . -4) (undo-tree-id7858 . -4) (undo-tree-id7859 . -4) 9612) nil (25969 51181 125396 0) 0 nil])
([nil nil ((9608 . 9609)) nil (25969 51181 125379 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -9608) (undo-tree-id7842 . -1) (undo-tree-id7843 . -1) (undo-tree-id7844 . -1) 9609) nil (25969 51181 125378 0) 0 nil])
([nil nil ((9608 . 9611)) nil (25969 51181 125373 0) 0 nil])
([nil nil ((362 . 363) (369 . 380) (9608 . 9608) (9608 . 9616) (#("ADC" 0 3 (fontified nil)) . 9608) (9608 . 9611) (#("ADC_Data (use crate::app::ADC_Data)" 0 35 (fontified nil)) . -9608) (9608 . 9643) (#("ADC" 0 3 (face font-lock-type-face fontified t)) . -9608) (undo-tree-id7821 . -3) (undo-tree-id7822 . -3) (undo-tree-id7823 . -1) (undo-tree-id7824 . -1) (undo-tree-id7825 . -1) (undo-tree-id7826 . -1) (undo-tree-id7827 . -1) (undo-tree-id7828 . -2) (undo-tree-id7829 . -2) (undo-tree-id7830 . -2) (undo-tree-id7831 . -2) (undo-tree-id7832 . -3) (undo-tree-id7833 . -3) (undo-tree-id7834 . -3) (undo-tree-id7835 . -3) (undo-tree-id7836 . -3) (undo-tree-id7837 . -3) (undo-tree-id7838 . -3) (undo-tree-id7839 . -3) (undo-tree-id7840 . -3) (undo-tree-id7841 . -3) 9611) nil (25969 51181 125368 0) 0 nil])
([nil nil ((11706 . 11707) (t 25969 51181 189368 661000)) nil (25969 51222 50785 0) 0 nil])
([nil nil ((11706 . 11707)) nil (25969 51222 50784 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -11706) (undo-tree-id7896 . -1) (undo-tree-id7897 . -1) (undo-tree-id7898 . -1) (undo-tree-id7899 . -1) (undo-tree-id7900 . -1) (undo-tree-id7901 . -1) (undo-tree-id7902 . -1) (undo-tree-id7903 . -1) (undo-tree-id7904 . -1) 11707) nil (25969 51222 50782 0) 0 nil])
([nil nil ((11706 . 11708)) nil (25969 51222 50772 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11706) (undo-tree-id7883 . -1) (undo-tree-id7884 . -1) (undo-tree-id7885 . -1) (undo-tree-id7886 . -1) (undo-tree-id7887 . -1) (undo-tree-id7888 . -1) (undo-tree-id7889 . -1) (undo-tree-id7890 . -1) (#("a" 0 1 (fontified t)) . -11707) (undo-tree-id7891 . -1) (undo-tree-id7892 . -1) (undo-tree-id7893 . -1) (undo-tree-id7894 . -1) (undo-tree-id7895 . -1) 11708) nil (25969 51222 50770 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11706) (undo-tree-id7872 . -1) (undo-tree-id7873 . -1) (undo-tree-id7874 . -1) (undo-tree-id7875 . 1) (undo-tree-id7876 . -1) (undo-tree-id7877 . -1) (undo-tree-id7878 . -1) (undo-tree-id7879 . -1) (undo-tree-id7880 . -1) (undo-tree-id7881 . -1) (undo-tree-id7882 . -1) 11707) nil (25969 51222 50752 0) 0 nil])
([nil nil ((#("64]" 0 3 (fontified t)) . -2880) (undo-tree-id7987 . -3) (undo-tree-id7988 . -3) (undo-tree-id7989 . -2) (undo-tree-id7990 . -2) (undo-tree-id7991 . -2) (undo-tree-id7992 . -2) (undo-tree-id7993 . -2) (undo-tree-id7994 . -2) (undo-tree-id7995 . -2) (undo-tree-id7996 . -2) (undo-tree-id7997 . -2) (undo-tree-id7998 . -2) (undo-tree-id7999 . -2) (undo-tree-id8000 . -2) (undo-tree-id8001 . -2) (undo-tree-id8002 . -2) (undo-tree-id8003 . -2) (undo-tree-id8004 . -2) (undo-tree-id8005 . -2) (undo-tree-id8006 . -2) (undo-tree-id8007 . -2) (undo-tree-id8008 . -2) (undo-tree-id8009 . -3) (undo-tree-id8010 . -3) (undo-tree-id8011 . -3) (undo-tree-id8012 . -3) (undo-tree-id8013 . -3) (undo-tree-id8014 . -3) (undo-tree-id8015 . -3) 2883 (t 25969 51222 115377 458000)) nil (25969 51234 670326 0) 0 nil])
([nil nil ((#("u32;" 0 3 (face font-lock-type-face fontified t) 3 4 (fontified t)) . -2876) (undo-tree-id7953 . -4) (undo-tree-id7954 . -4) (undo-tree-id7955 . -4) (undo-tree-id7956 . -4) (undo-tree-id7957 . -4) (undo-tree-id7958 . -4) (undo-tree-id7959 . -4) (undo-tree-id7960 . -4) (undo-tree-id7961 . -4) (undo-tree-id7962 . -4) (undo-tree-id7963 . -4) (undo-tree-id7964 . -4) (undo-tree-id7965 . -4) (undo-tree-id7966 . -4) (undo-tree-id7967 . -4) (undo-tree-id7968 . -4) (undo-tree-id7969 . -4) (undo-tree-id7970 . -4) (undo-tree-id7971 . -4) (undo-tree-id7972 . -4) (undo-tree-id7973 . -4) (undo-tree-id7974 . -4) (undo-tree-id7975 . -4) (undo-tree-id7976 . -4) (undo-tree-id7977 . -4) (undo-tree-id7978 . -4) (undo-tree-id7979 . -4) (undo-tree-id7980 . -4) (undo-tree-id7981 . -4) (undo-tree-id7982 . -4) (undo-tree-id7983 . -4) (undo-tree-id7984 . -4) (undo-tree-id7985 . -4) (undo-tree-id7986 . -4) 2880) nil (25969 51234 670293 0) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -2875) (undo-tree-id7910 . -1) (undo-tree-id7911 . -1) (undo-tree-id7912 . -1) (undo-tree-id7913 . -1) (undo-tree-id7914 . -1) (undo-tree-id7915 . -1) (undo-tree-id7916 . -1) (undo-tree-id7917 . -1) (undo-tree-id7918 . -1) (undo-tree-id7919 . -1) (undo-tree-id7920 . -1) (undo-tree-id7921 . -1) (undo-tree-id7922 . -1) (undo-tree-id7923 . -1) (undo-tree-id7924 . -1) (undo-tree-id7925 . -1) (undo-tree-id7926 . -1) (undo-tree-id7927 . -1) (undo-tree-id7928 . -1) (undo-tree-id7929 . -1) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) (undo-tree-id7932 . -1) (undo-tree-id7933 . -1) (undo-tree-id7934 . -1) (undo-tree-id7935 . -1) (undo-tree-id7936 . -1) (undo-tree-id7937 . -1) (undo-tree-id7938 . -1) (undo-tree-id7939 . -1) (undo-tree-id7940 . -1) (undo-tree-id7941 . -1) (undo-tree-id7942 . -1) (undo-tree-id7943 . -1) (undo-tree-id7944 . -1) (undo-tree-id7945 . -1) (undo-tree-id7946 . -1) (undo-tree-id7947 . -1) (undo-tree-id7948 . -1) (undo-tree-id7949 . -1) (undo-tree-id7950 . -1) (undo-tree-id7951 . -1) (undo-tree-id7952 . -1) 2876) nil (25969 51234 670256 0) 0 nil])
([nil nil ((2875 . 2876)) nil (25969 51234 670211 0) 0 nil])
([nil nil ((2875 . 2883) (#("A" 0 1 (fontified nil)) . 2875) (2875 . 2876) (#("ADC_Data" 0 8 (fontified nil)) . -2875) (2875 . 2883) (#("A" 0 1 (face font-lock-type-face fontified t)) . -2875) (undo-tree-id7905 . -1) (undo-tree-id7906 . -1) (undo-tree-id7907 . -1) (undo-tree-id7908 . -1) (undo-tree-id7909 . -1) 2876) nil (25969 51234 670206 0) 0 nil])
([nil nil ((4187 . 4188) (t 25969 51234 734160 49000)) nil (25969 51248 321316 0) 0 nil])
([nil nil ((4187 . 4189)) nil (25969 51248 321315 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4188) (undo-tree-id8032 . -1) (undo-tree-id8033 . -1) (undo-tree-id8034 . -1) (undo-tree-id8035 . -1) (undo-tree-id8036 . -1) 4189) nil (25969 51248 321313 0) 0 nil])
([nil nil ((4188 . 4193)) nil (25969 51248 321306 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4193) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) (undo-tree-id8020 . -1) (undo-tree-id8021 . -1) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) (undo-tree-id8024 . 1) (undo-tree-id8025 . -1) (undo-tree-id8026 . -1) (undo-tree-id8027 . -1) (undo-tree-id8028 . -1) (undo-tree-id8029 . -1) (undo-tree-id8030 . -1) (undo-tree-id8031 . -1) 4194) nil (25969 51248 321302 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4179) (undo-tree-id8166 . -1) (undo-tree-id8167 . -1) (undo-tree-id8168 . -1) (#("s" 0 1 (fontified t)) . -4180) (undo-tree-id8169 . -1) (undo-tree-id8170 . -1) (undo-tree-id8171 . -1) (#("." 0 1 (fontified t)) . -4181) (undo-tree-id8172 . -1) (undo-tree-id8173 . -1) (undo-tree-id8174 . -1) (#("g" 0 1 (fontified t)) . -4182) (undo-tree-id8175 . -1) (undo-tree-id8176 . -1) (undo-tree-id8177 . -1) (#("e" 0 1 (fontified t)) . -4183) (undo-tree-id8178 . -1) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) (#("t" 0 1 (fontified t)) . -4184) (undo-tree-id8181 . -1) (undo-tree-id8182 . -1) (undo-tree-id8183 . -1) (#("(" 0 1 (fontified t)) . -4185) (undo-tree-id8184 . -1) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (#(")" 0 1 (fontified t)) . -4186) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (undo-tree-id8189 . -1) (#("." 0 1 (fontified t)) . -4187) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (#("a" 0 1 (fontified t)) . -4188) (undo-tree-id8193 . -1) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) (#("r" 0 1 (fontified t)) . -4189) (undo-tree-id8196 . -1) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (#("r" 0 1 (fontified t)) . -4190) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) (#("a" 0 1 (fontified t)) . -4191) (undo-tree-id8202 . -1) (undo-tree-id8203 . -1) (undo-tree-id8204 . -1) (#("y" 0 1 (fontified t)) . -4192) (undo-tree-id8205 . -1) (undo-tree-id8206 . -1) (undo-tree-id8207 . -1) (#("[" 0 1 (fontified t)) . -4193) (undo-tree-id8208 . -1) (undo-tree-id8209 . -1) (#("i" 0 1 (fontified t)) . -4194) (undo-tree-id8210 . -1) (undo-tree-id8211 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -4195) (undo-tree-id8212 . -1) (undo-tree-id8213 . -1) (#("d" 0 1 (fontified t)) . -4196) (undo-tree-id8214 . -1) (undo-tree-id8215 . -1) (#("e" 0 1 (fontified t)) . -4197) (undo-tree-id8216 . -1) (undo-tree-id8217 . -1) (#("x" 0 1 (fontified t)) . -4198) (undo-tree-id8218 . -1) (undo-tree-id8219 . -1) (#("]" 0 1 (fontified t)) . -4199) (undo-tree-id8220 . -1) (undo-tree-id8221 . -1) 4200 (t 25969 51248 384908 611000)) nil (25969 51471 54407 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4172) (undo-tree-id8145 . -1) (undo-tree-id8146 . -1) (undo-tree-id8147 . -1) (#("d" 0 1 (fontified t)) . -4173) (undo-tree-id8148 . -1) (undo-tree-id8149 . -1) (undo-tree-id8150 . -1) (#("c" 0 1 (fontified t)) . -4174) (undo-tree-id8151 . -1) (undo-tree-id8152 . -1) (undo-tree-id8153 . -1) (#("_" 0 1 (fontified t)) . -4175) (undo-tree-id8154 . -1) (undo-tree-id8155 . -1) (undo-tree-id8156 . -1) (#("d" 0 1 (fontified t)) . -4176) (undo-tree-id8157 . -1) (undo-tree-id8158 . -1) (undo-tree-id8159 . -1) (#("a" 0 1 (fontified t)) . -4177) (undo-tree-id8160 . -1) (undo-tree-id8161 . -1) (undo-tree-id8162 . -1) (#("t" 0 1 (fontified t)) . -4178) (undo-tree-id8163 . -1) (undo-tree-id8164 . -1) (undo-tree-id8165 . -1) 4179) nil (25969 51471 54343 0) 0 nil])
([nil nil ((2897 . 2902)) nil (25969 51471 54319 0) 0 nil])
([nil nil ((2902 . 2918)) nil (25969 51471 54318 0) 0 nil])
([nil nil ((2918 . 2921)) nil (25969 51471 54317 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 2929 2929 nil nil nil t #s(yas--exit 2930 nil))) #s(yas--exit 2930 nil) 152 nil #s(yas--field 1 2929 2929 nil nil nil t #s(yas--exit 2930 nil)) nil nil)) (2917 . 2931) (#("create_memo(${1:f})$0" 0 21 (fontified nil)) . 2917) (2917 . 2938) (#("crea" 0 4 (fontified nil)) . 2917) (2917 . 2921) (#("create_memo(…)" 0 14 (fontified nil)) . -2917) (2917 . 2931) (#("crea" 0 4 (fontified t)) . -2917) (undo-tree-id8139 . -4) (undo-tree-id8140 . -2) (undo-tree-id8141 . -3) (undo-tree-id8142 . -4) (undo-tree-id8143 . -4) (undo-tree-id8144 . -4) 2921) nil (25969 51471 54315 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -2929) (undo-tree-id8131 . -1) (undo-tree-id8132 . -1) (undo-tree-id8133 . -1) (undo-tree-id8134 . -1) (undo-tree-id8135 . -1) (undo-tree-id8136 . -1) (undo-tree-id8137 . -1) (undo-tree-id8138 . -1) 2930) nil (25969 51471 54305 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2917 2930 #s(yas--snippet nil (#s(yas--field 1 2929 2929 nil nil nil t #s(yas--exit 2930 nil))) #s(yas--exit 2930 nil) 152 nil #s(yas--field 1 2929 2929 nil nil nil t #s(yas--exit 2930 nil)) nil nil))) nil (25969 51471 54296 0) 0 nil])
([nil nil ((#("    let adc_memo = create_memo()" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 16 (face font-lock-variable-name-face fontified t) 16 19 (fontified t) 19 32 (fontified t)) . 2898) (undo-tree-id8037 . -19) (undo-tree-id8038 . -19) (undo-tree-id8039 . -19) (undo-tree-id8040 . -19) (undo-tree-id8041 . -19) (undo-tree-id8042 . -32) (undo-tree-id8043 . -32) (undo-tree-id8044 . -31) (undo-tree-id8045 . -31) (undo-tree-id8046 . -31) (undo-tree-id8047 . -31) (undo-tree-id8048 . -31) (undo-tree-id8049 . -31) (undo-tree-id8050 . -31) (undo-tree-id8051 . -31) (undo-tree-id8052 . -31) (undo-tree-id8053 . -31) (undo-tree-id8054 . -31) (undo-tree-id8055 . -31) (undo-tree-id8056 . -31) (undo-tree-id8057 . -31) (undo-tree-id8058 . -31) (undo-tree-id8059 . -31) (undo-tree-id8060 . -31) (undo-tree-id8061 . -31) (undo-tree-id8062 . -31) (undo-tree-id8063 . -31) (undo-tree-id8064 . -31) (undo-tree-id8065 . -31) (undo-tree-id8066 . -31) (undo-tree-id8067 . -31) (undo-tree-id8068 . -31) (undo-tree-id8069 . -31) (undo-tree-id8070 . -31) (undo-tree-id8071 . -31) (undo-tree-id8072 . -31) (undo-tree-id8073 . -31) (undo-tree-id8074 . -31) (undo-tree-id8075 . -31) (undo-tree-id8076 . -31) (undo-tree-id8077 . -31) (undo-tree-id8078 . -31) (undo-tree-id8079 . -31) (undo-tree-id8080 . -31) (undo-tree-id8081 . -31) (undo-tree-id8082 . -31) (undo-tree-id8083 . -31) (undo-tree-id8084 . -31) (undo-tree-id8085 . -31) (undo-tree-id8086 . -31) (undo-tree-id8087 . -31) (undo-tree-id8088 . -31) (undo-tree-id8089 . -31) (undo-tree-id8090 . -31) (undo-tree-id8091 . -31) (undo-tree-id8092 . -31) (undo-tree-id8093 . -31) (undo-tree-id8094 . -31) (undo-tree-id8095 . -31) (undo-tree-id8096 . -31) (undo-tree-id8097 . -31) (undo-tree-id8098 . -31) (undo-tree-id8099 . -31) (undo-tree-id8100 . -31) (undo-tree-id8101 . -31) (undo-tree-id8102 . -31) (undo-tree-id8103 . -31) (undo-tree-id8104 . -31) (undo-tree-id8105 . -31) (undo-tree-id8106 . -31) (undo-tree-id8107 . -31) (undo-tree-id8108 . -31) (undo-tree-id8109 . -31) (undo-tree-id8110 . -31) (undo-tree-id8111 . -31) (undo-tree-id8112 . -32) (undo-tree-id8113 . -32) (undo-tree-id8114 . -32) (undo-tree-id8115 . -32) (undo-tree-id8116 . -32) (undo-tree-id8117 . -32) (undo-tree-id8118 . -32) (undo-tree-id8119 . -32) (undo-tree-id8120 . -32) (undo-tree-id8121 . -32) (undo-tree-id8122 . -32) (undo-tree-id8123 . -32) (undo-tree-id8124 . -32) (undo-tree-id8125 . -32) (undo-tree-id8126 . -32) (undo-tree-id8127 . -32) (undo-tree-id8128 . -32) (undo-tree-id8129 . -32) (undo-tree-id8130 . -32)) nil (25969 51471 54290 0) 0 nil])
([nil nil ((2898 . 2902)) nil (25969 51471 54170 0) 0 nil])
([nil nil ((2902 . 2910) (t 25969 51471 120235 618000)) nil (25969 51707 963836 0) 0 nil])
([nil nil ((2906 . 2910)) nil (25969 51707 963834 0) 0 nil])
([nil nil ((2914 . 2923)) nil (25969 51707 963833 0) 0 nil])
([nil nil ((2923 . 2926)) nil (25969 51707 963832 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 2931 2932 nil nil nil t #s(yas--exit 2933 nil))) #s(yas--exit 2933 nil) 153 nil #s(yas--field 1 2931 2932 nil nil nil t #s(yas--exit 2933 nil)) nil nil)) (2917 . 2937) (#("create_signal(${1:value})$0" 0 27 (fontified nil)) . 2917) (2917 . 2944) (#("create_sg" 0 9 (fontified nil)) . 2917) (2917 . 2926) (#("create_signal(…)" 0 16 (fontified nil)) . -2917) (2917 . 2933) (#("create_sg" 0 9 (fontified t)) . -2917) (undo-tree-id8223 . -9) (undo-tree-id8224 . -7) (undo-tree-id8225 . -8) (undo-tree-id8226 . -8) (undo-tree-id8227 . -8) (undo-tree-id8228 . -8) (undo-tree-id8229 . -9) (undo-tree-id8230 . -9) (undo-tree-id8231 . -9) (undo-tree-id8232 . -9) 2926) nil (25969 51707 963830 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified nil)) . 2932) (undo-tree-id8222 . -5) (2931 . 2932)) nil (25969 51707 963816 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2917 2933 #s(yas--snippet nil (#s(yas--field 1 2931 2932 nil nil nil t #s(yas--exit 2933 nil))) #s(yas--exit 2933 nil) 153 nil #s(yas--field 1 2931 2932 nil nil nil t #s(yas--exit 2933 nil)) nil nil))) nil (25969 51707 963804 0) 0 nil])
([nil nil ((2933 . 2934)) nil (25969 51707 963800 0) 0 nil])
([nil nil ((2906 . 2907) (t 25969 51708 30273 418000)) nil (25969 51722 102192 0) 0 nil])
([nil nil ((2915 . 2921)) nil (25969 51722 102191 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2919) (undo-tree-id8235 . -1) (undo-tree-id8236 . -1) (#("_" 0 1 (fontified t)) . -2920) (undo-tree-id8237 . -1) (undo-tree-id8238 . -1) 2921) nil (25969 51722 102189 0) 0 nil])
([nil nil ((2919 . 2921)) nil (25969 51722 102183 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -2920) (undo-tree-id8233 . -1) (undo-tree-id8234 . -1) 2921) nil (25969 51722 102182 0) 0 nil])
([nil nil ((2920 . 2927)) nil (25969 51722 102169 0) 0 nil])
([nil nil ((2927 . 2930)) nil (25969 51722 102165 0) 0 nil])
([nil nil ((2952 . 2956) (#("    " 0 4 (fontified nil)) . 2951) (undo-tree-id8357 . -4) (undo-tree-id8358 . -4) (2950 . 2956) (t 25969 51722 166604 659000)) nil (25969 51793 930031 0) 0 nil])
([nil nil ((2951 . 2955)) nil (25969 51793 930028 0) 0 nil])
([nil nil ((2955 . 2958)) nil (25969 51793 930027 0) 0 nil])
([nil nil ((2958 . 2961)) nil (25969 51793 930026 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 2969 2976 nil nil nil t #s(yas--exit 2977 nil))) #s(yas--exit 2977 nil) 154 nil #s(yas--field 1 2969 2976 nil nil nil t #s(yas--exit 2977 nil)) nil nil)) (2955 . 2971) (#("create_effect(${1:f})$0" 0 23 (fontified nil)) . 2955) (2955 . 2978) (#("create" 0 6 (fontified nil)) . 2955) (2955 . 2961) (#("create_effect(…)" 0 16 (fontified nil)) . -2955) (2955 . 2971) (#("create" 0 6 (fontified t)) . -2955) (undo-tree-id8356 . -6) 2961) nil (25969 51793 930024 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -2969) (undo-tree-id8354 . -1) (undo-tree-id8355 . -1) 2970) nil (25969 51793 930019 0) 0 nil])
([nil nil ((2969 . 2976)) nil (25969 51793 930016 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2955 2977 #s(yas--snippet nil (#s(yas--field 1 2969 2976 nil nil nil t #s(yas--exit 2977 nil))) #s(yas--exit 2977 nil) 154 nil #s(yas--field 1 2969 2976 nil nil nil t #s(yas--exit 2977 nil)) nil nil))) nil (25969 51793 930015 0) 0 nil])
([nil nil ((2977 . 2978)) nil (25969 51793 930014 0) 0 nil])
([nil nil ((2950 . 2955)) nil (25969 51793 930013 0) 0 nil])
([nil nil ((2955 . 2956)) nil (25969 51793 930012 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -2955) (undo-tree-id8353 . -1) 2956) nil (25969 51793 930011 0) 0 nil])
([nil nil ((2955 . 2960)) nil (25969 51793 930009 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-variable-name-face fontified t)) . -2959) (undo-tree-id8352 . -1) 2960) nil (25969 51793 930008 0) 0 nil])
([nil nil ((2959 . 2970)) nil (25969 51793 930005 0) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -2969) (undo-tree-id8351 . -1) 2970) nil (25969 51793 930004 0) 0 nil])
([nil nil ((2969 . 2972)) nil (25969 51793 930002 0) 0 nil])
([nil nil ((2972 . 2974)) nil (25969 51793 930001 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2972) (undo-tree-id8349 . -1) (#("=" 0 1 (fontified t)) . -2973) (undo-tree-id8350 . -1) 2974) nil (25969 51793 930000 0) 0 nil])
([nil nil ((2972 . 2976)) nil (25969 51793 929996 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2975) (undo-tree-id8348 . -1) 2976) nil (25969 51793 929995 0) 0 nil])
([nil nil ((2975 . 2980)) nil (25969 51793 929992 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2978) (undo-tree-id8338 . -1) (undo-tree-id8339 . -1) (undo-tree-id8340 . -1) (undo-tree-id8341 . -1) (undo-tree-id8342 . -1) (undo-tree-id8343 . -1) (undo-tree-id8344 . -1) (#("e" 0 1 (fontified t)) . -2979) (undo-tree-id8345 . -1) (undo-tree-id8346 . -1) (undo-tree-id8347 . -1) 2980) nil (25969 51793 929991 0) 0 nil])
([nil nil ((2978 . 2980)) nil (25969 51793 929978 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 2986 3014 nil nil nil t #s(yas--exit 3015 nil))) #s(yas--exit 3015 nil) 155 nil #s(yas--field 1 2986 3014 nil nil nil t #s(yas--exit 3015 nil)) nil nil)) (2974 . 2988) (#("create_memo(${1:f})$0" 0 21 (fontified nil)) . 2974) (2974 . 2995) (#("create" 0 6 (fontified nil)) . 2974) (2974 . 2980) (#("create_memo(…)" 0 14 (fontified nil)) . -2974) (2974 . 2988) (#("create" 0 6 (fontified t)) . -2974) (undo-tree-id8319 . -6) (undo-tree-id8320 . -3) (undo-tree-id8321 . -4) (undo-tree-id8322 . -4) (undo-tree-id8323 . -4) (undo-tree-id8324 . -4) (undo-tree-id8325 . -4) (undo-tree-id8326 . -4) (undo-tree-id8327 . -4) (undo-tree-id8328 . -4) (undo-tree-id8329 . -4) (undo-tree-id8330 . -4) (undo-tree-id8331 . -4) (undo-tree-id8332 . -5) (undo-tree-id8333 . -5) (undo-tree-id8334 . -6) (undo-tree-id8335 . -6) (undo-tree-id8336 . -6) (undo-tree-id8337 . -6) 2980) nil (25969 51793 929976 0) 0 nil])
([nil nil ((2987 . 2988) (#("f" 0 1 (fontified nil)) . 2987) (undo-tree-id8318 . -1) (2986 . 2987)) nil (25969 51793 929953 0) 0 nil])
([nil nil ((2986 . 2991)) nil (25969 51793 929950 0) 0 nil])
([nil nil ((2992 . 2993)) nil (25969 51793 929949 0) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -2992) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (undo-tree-id8290 . -1) (undo-tree-id8291 . -1) (undo-tree-id8292 . -1) (undo-tree-id8293 . -1) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (#("|" 0 1 (fontified t)) . -2993) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (undo-tree-id8302 . -1) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) (undo-tree-id8309 . -1) (undo-tree-id8310 . -1) (undo-tree-id8311 . -1) (undo-tree-id8312 . -1) (undo-tree-id8313 . -1) (undo-tree-id8314 . -1) (undo-tree-id8315 . -1) (undo-tree-id8316 . -1) (undo-tree-id8317 . -1) 2994) nil (25969 51793 929946 0) 0 nil])
([nil nil ((2992 . 2997)) nil (25969 51793 929888 0) 0 nil])
([nil nil ((2997 . 2998)) nil (25969 51793 929887 0) 0 nil])
([nil nil ((2995 . 3004) (#("adc" 0 3 (fontified nil)) . 2995) (undo-tree-id8248 . -3) (2995 . 2998) (#("adc_datas" 0 9 (fontified nil)) . -2995) (undo-tree-id8249 . -9) (2995 . 3004) (#("adc" 0 3 (fontified t)) . -2995) (undo-tree-id8250 . -3) (undo-tree-id8251 . -3) (undo-tree-id8252 . -3) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (undo-tree-id8256 . -2) (undo-tree-id8257 . -2) (undo-tree-id8258 . -2) (undo-tree-id8259 . -2) (undo-tree-id8260 . -3) (undo-tree-id8261 . -3) (undo-tree-id8262 . -3) (undo-tree-id8263 . -3) 2998) nil (25969 51793 929884 0) 0 nil])
([nil nil ((3004 . 3006)) nil (25969 51793 929865 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3005 3010 #s(yas--snippet nil nil #s(yas--exit 3010 nil) 156 nil nil #s(yas--field 1 2986 3014 nil nil nil t #s(yas--exit 3015 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3010 nil) 156 nil nil #s(yas--field 1 2986 3014 nil nil nil t #s(yas--exit 3015 nil)) nil)) (3005 . 3010) (#("get()$0" 0 7 (fontified nil)) . 3005) (undo-tree-id8240 . -7) (3005 . 3012) (#("g" 0 1 (fontified nil)) . 3005) (undo-tree-id8241 . -1) (3005 . 3006) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -3005) (undo-tree-id8242 . -20) (3005 . 3025) (#("g" 0 1 (fontified t)) . -3005) (undo-tree-id8243 . -1) (undo-tree-id8244 . -1) (undo-tree-id8245 . -1) (undo-tree-id8246 . -1) (undo-tree-id8247 . -1) 3006) nil (25969 51793 929863 0) 0 nil])
([nil nil ((3010 . 3011)) nil (25969 51793 929849 0) 0 nil])
([nil nil ((3011 . 3014) (#("cnt" 0 3 (fontified nil)) . -3011) (undo-tree-id8239 . -3) (3011 . 3014)) nil (25969 51793 929848 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2974 3015 #s(yas--snippet nil (#s(yas--field 1 2986 3014 nil nil nil t #s(yas--exit 3015 nil))) #s(yas--exit 3015 nil) 155 nil #s(yas--field 1 2986 3014 nil nil nil t #s(yas--exit 3015 nil)) nil nil))) nil (25969 51793 929839 0) 0 nil])
([nil nil ((3015 . 3016)) nil (25969 51793 929834 0) 0 nil])
([nil nil ((3039 . 3040) (t 25969 51793 995903 874000)) nil (25969 51880 82781 0) 0 nil])
([nil nil ((3041 . 3042)) nil (25969 51880 82780 0) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -3041) (undo-tree-id8380 . -1) (undo-tree-id8381 . -1) 3042) nil (25969 51880 82779 0) 0 nil])
([nil nil ((3041 . 3042)) nil (25969 51880 82775 0) 0 nil])
([nil nil ((3044 . 3046)) nil (25969 51880 82774 0) 0 nil])
([nil nil ((3047 . 3051) (#("	" 0 1 (fontified nil)) . 3046) (3046 . 3047) (#("    " 0 4 (fontified nil)) . 3046) (undo-tree-id8379 . -4) (3045 . 3051)) nil (25969 51880 82773 0) 0 nil])
([nil nil ((3046 . 3047)) nil (25969 51880 82770 0) 0 nil])
([nil nil ((4335 . 4338)) nil (25969 51880 82769 0) 0 nil])
([nil nil ((4335 . 4343) (#("adc" 0 3 (fontified nil)) . 4335) (4335 . 4338) (#("adc_data" 0 8 (fontified nil)) . -4335) (4335 . 4343) (#("adc" 0 3 (fontified t)) . -4335) (undo-tree-id8378 . -3) 4338) nil (25969 51880 82767 0) 0 nil])
([nil nil ((4343 . 4345)) nil (25969 51880 82764 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4344 4349 #s(yas--snippet nil nil #s(yas--exit 4349 nil) 157 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 4349 nil) 157 nil nil nil nil)) (4344 . 4349) (#("get()$0" 0 7 (fontified nil)) . 4344) (4344 . 4351) (#("g" 0 1 (fontified nil)) . 4344) (4344 . 4345) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -4344) (4344 . 4364) (#("g" 0 1 (fontified t)) . -4344) (undo-tree-id8377 . -1) 4345) nil (25969 51880 82762 0) 0 nil])
([nil nil ((4349 . 4351)) nil (25969 51880 82757 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -4349) (undo-tree-id8375 . -1) (#("a" 0 1 (fontified t)) . -4350) (undo-tree-id8376 . -1) 4351) nil (25969 51880 82756 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -4343) (undo-tree-id8363 . -1) (undo-tree-id8364 . -1) (#("g" 0 1 (fontified t)) . -4344) (undo-tree-id8365 . -1) (undo-tree-id8366 . -1) (#("e" 0 1 (fontified t)) . -4345) (undo-tree-id8367 . -1) (undo-tree-id8368 . -1) (#("t" 0 1 (fontified t)) . -4346) (undo-tree-id8369 . -1) (undo-tree-id8370 . -1) (#("(" 0 1 (fontified t)) . -4347) (undo-tree-id8371 . -1) (undo-tree-id8372 . -1) (#(")" 0 1 (fontified t)) . -4348) (undo-tree-id8373 . -1) (undo-tree-id8374 . -1) 4349) nil (25969 51880 82747 0) 0 nil])
([nil nil ((4343 . 4344)) nil (25969 51880 82731 0) 0 nil])
([nil nil ((4344 . 4346)) nil (25969 51880 82730 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4345 4350 #s(yas--snippet nil nil #s(yas--exit 4350 nil) 158 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 4350 nil) 158 nil nil nil nil)) (4345 . 4350) (#("get()$0" 0 7 (fontified nil)) . 4345) (4345 . 4352) (#("g" 0 1 (fontified nil)) . 4345) (4345 . 4346) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -4345) (4345 . 4365) (#("g" 0 1 (fontified t)) . -4345) (undo-tree-id8362 . -1) 4346) nil (25969 51880 82728 0) 0 nil])
([nil nil ((4350 . 4352)) nil (25969 51880 82723 0) 0 nil])
([nil nil ((4351 . 4356) (#("a" 0 1 (fontified nil)) . 4351) (4351 . 4352) (#("array" 0 5 (fontified nil)) . -4351) (4351 . 4356) (#("a" 0 1 (fontified t)) . -4351) (undo-tree-id8361 . -1) 4352) nil (25969 51880 82721 0) 0 nil])
([nil nil ((4356 . 4357)) nil (25969 51880 82717 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -4356) (undo-tree-id8360 . -1) 4357) nil (25969 51880 82716 0) 0 nil])
([nil nil ((4356 . 4358)) nil (25969 51880 82714 0) 0 nil])
([nil nil ((4357 . 4362)) nil (25969 51880 82712 0) 0 nil])
([nil nil ((4357 . 4362) (#("index" 0 5 (fontified nil)) . 4357) (4357 . 4362) (#("index" 0 5 (fontified t)) . -4357) (undo-tree-id8359 . -5) 4362) nil (25969 51888 87652 0) 0 nil])
([nil nil ((apply -12 2898 3068 undo--wrap-and-run-primitive-undo 2898 3068 ((3061 . 3064) (3027 . 3030) (2958 . 2961) (2902 . 2905) 2898))) nil (25969 51893 533375 0) 0 nil] [nil nil ((#("   let (adc_data, set_adc_data) = create_signal(0);
    let adc_data_cnt = create_memo(move |_| adc_datas.get().cnt);
    create_effect(move |_| {
	
    });" 0 3 (fontified t) 3 6 (face font-lock-keyword-face fontified t) 6 8 (fontified t) 8 12 (fontified t) 12 31 (fontified t) 31 34 (fontified t) 34 52 (fontified t) 52 56 (fontified t) 56 59 (face font-lock-keyword-face fontified t) 59 60 (fontified t) 60 72 (face font-lock-variable-name-face fontified t) 72 75 (fontified t) 75 87 (fontified t) 87 91 (face font-lock-keyword-face fontified t) 91 92 (fontified t) 92 96 (fontified t) 96 106 (fontified t) 106 112 (fontified t) 112 115 (fontified t) 115 117 (fontified t) 117 118 (fontified t) 118 122 (fontified t) 122 136 (fontified t) 136 140 (face font-lock-keyword-face fontified t) 140 141 (fontified t) 141 147 (fontified t) 147 148 (fontified t) 148 149 (fontified t) 149 154 (fontified t) 154 156 (fontified t)) . 2899) (undo-tree-id8382 . -156) (undo-tree-id8383 . -87) (undo-tree-id8384 . -148) (undo-tree-id8385 . -148) (undo-tree-id8386 . -148) (undo-tree-id8387 . -148) (undo-tree-id8388 . -148) (undo-tree-id8389 . -148) (undo-tree-id8390 . -148) (undo-tree-id8391 . -148) (undo-tree-id8392 . -148) (undo-tree-id8393 . -148) (undo-tree-id8394 . -148) (undo-tree-id8395 . -148) (undo-tree-id8396 . -148) (undo-tree-id8397 . -148) (undo-tree-id8398 . -148) (undo-tree-id8399 . -148) (undo-tree-id8400 . -148) (undo-tree-id8401 . -156) (undo-tree-id8402 . -156) (undo-tree-id8403 . -156) (undo-tree-id8404 . -156) (undo-tree-id8405 . -156) (undo-tree-id8406 . -156) (undo-tree-id8407 . -156) (undo-tree-id8408 . -156) (undo-tree-id8409 . -156) (undo-tree-id8410 . -148) (undo-tree-id8411 . -129) (undo-tree-id8412 . -126) (undo-tree-id8413 . -122) (undo-tree-id8414 . -120) (undo-tree-id8415 . -52) (undo-tree-id8416 . -52) (undo-tree-id8417 . -52) (undo-tree-id8418 . -52) (undo-tree-id8419 . -52) (undo-tree-id8420 . -52) (undo-tree-id8421 . -52) (undo-tree-id8422 . -52) (undo-tree-id8423 . -52) (undo-tree-id8424 . -52) (undo-tree-id8425 . -52) (undo-tree-id8426 . -156) (undo-tree-id8427 . -156) (undo-tree-id8428 . -156) (t 25969 51880 148792 173000)) ((2899 . 3055)) (25969 51887 665665 0) 0 nil])
([nil nil ((2897 . 2902) (t 25969 51893 598693 838000)) nil (25969 51966 818032 0) 0 nil])
([nil nil ((2899 . 2900)) ((#("c" 0 1 (fontified t)) . 2899) (undo-tree-id8429 . -1) (undo-tree-id8430 . -1)) (25969 51887 665344 0) 0 nil])
([nil nil ((2902 . 2910)) nil (25969 51966 818030 0) 0 nil])
nil
([nil nil ((#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -2906) (undo-tree-id8460 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -2907) (undo-tree-id8461 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -2908) (undo-tree-id8462 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -2909) (undo-tree-id8463 . -1) 2910) nil (25969 51966 818028 0) 0 nil])
([nil nil ((2906 . 2920)) nil (25969 51966 818023 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -2917) (undo-tree-id8457 . -1) (#("s" 0 1 (fontified t)) . -2918) (undo-tree-id8458 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -2919) (undo-tree-id8459 . -1) 2920) nil (25969 51966 818021 0) 0 nil])
([nil nil ((2917 . 2918)) nil (25969 51966 818017 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 2929 2966 nil nil nil t #s(yas--exit 2967 nil))) #s(yas--exit 2967 nil) 159 nil #s(yas--field 1 2929 2966 nil nil nil t #s(yas--exit 2967 nil)) nil nil)) (2917 . 2931) (#("create_memo(${1:f})$0" 0 21 (fontified nil)) . 2917) (2917 . 2938) (#("c" 0 1 (fontified nil)) . 2917) (2917 . 2918) (#("create_memo(…)" 0 14 (fontified nil)) . -2917) (2917 . 2931) (#("c" 0 1 (fontified t)) . -2917) (undo-tree-id8456 . -1) 2918) nil (25969 51966 818015 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified nil)) . 2930) (undo-tree-id8455 . -1) (2929 . 2930)) nil (25969 51966 818010 0) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -2929) (undo-tree-id8452 . -1) (undo-tree-id8453 . -1) (undo-tree-id8454 . -1) 2930) nil (25969 51966 818008 0) 0 nil])
([nil nil ((2929 . 2936)) nil (25969 51966 818004 0) 0 nil])
([nil nil ((2935 . 2936)) nil (25969 51966 818003 0) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-type-face fontified t)) . -2935) (undo-tree-id8450 . -1) (undo-tree-id8451 . -1) 2936) nil (25969 51966 818002 0) 0 nil])
([nil nil ((2935 . 2936)) nil (25969 51966 817998 0) 0 nil])
([nil nil ((2937 . 2940)) nil (25969 51966 817997 0) 0 nil])
([nil nil ((2938 . 2947) (#("ad" 0 2 (fontified nil)) . 2938) (undo-tree-id8445 . -2) (2938 . 2940) (#("adc_datas" 0 9 (fontified nil)) . -2938) (undo-tree-id8446 . -9) (2938 . 2947) (#("ad" 0 2 (fontified t)) . -2938) (undo-tree-id8447 . -2) (undo-tree-id8448 . -2) (undo-tree-id8449 . -2) 2940) nil (25969 51966 817995 0) 0 nil])
([nil nil ((2947 . 2949)) nil (25969 51966 817988 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -2947) (undo-tree-id8439 . -1) (undo-tree-id8440 . -1) (undo-tree-id8441 . -1) (#("." 0 1 (fontified t)) . -2948) (undo-tree-id8442 . -1) (undo-tree-id8443 . -1) (undo-tree-id8444 . -1) 2949) nil (25969 51966 817986 0) 0 nil])
([nil nil ((2947 . 2949)) nil (25969 51966 817979 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2948 2953 #s(yas--snippet nil nil #s(yas--exit 2953 nil) 160 nil nil #s(yas--field 1 2929 2966 nil nil nil t #s(yas--exit 2967 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 2953 nil) 160 nil nil #s(yas--field 1 2929 2966 nil nil nil t #s(yas--exit 2967 nil)) nil)) (2948 . 2953) (#("get()$0" 0 7 (fontified nil)) . 2948) (undo-tree-id8434 . -7) (2948 . 2955) (#("g" 0 1 (fontified nil)) . 2948) (undo-tree-id8435 . -1) (2948 . 2949) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -2948) (undo-tree-id8436 . -20) (2948 . 2968) (#("g" 0 1 (fontified t)) . -2948) (undo-tree-id8437 . -1) (undo-tree-id8438 . -1) 2949) nil (25969 51966 817977 0) 0 nil])
([nil nil ((2953 . 2954)) nil (25969 51966 817968 0) 0 nil])
([nil nil ((2954 . 2959) (#("array" 0 5 (fontified nil)) . -2954) (undo-tree-id8433 . -5) (2954 . 2959)) nil (25969 51966 817967 0) 0 nil])
([nil nil ((2959 . 2960)) nil (25969 51966 817964 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2959) (undo-tree-id8431 . -1) (undo-tree-id8432 . -1) 2960) nil (25969 51966 817963 0) 0 nil])
([nil nil ((2959 . 2961)) nil (25969 51966 817952 0) 0 nil])
([nil nil ((2960 . 2965)) nil (25969 51966 817951 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2917 2967 #s(yas--snippet nil (#s(yas--field 1 2929 2966 nil nil nil t #s(yas--exit 2967 nil))) #s(yas--exit 2967 nil) 159 nil #s(yas--field 1 2929 2966 nil nil nil t #s(yas--exit 2967 nil)) nil nil))) nil (25969 51966 817950 0) 0 nil])
([nil nil ((2967 . 2968)) nil (25969 51966 817943 0) 0 nil])
([nil nil ((#("index]" 0 5 (fontified t) 5 6 (fontified t)) . -4440) (undo-tree-id8754 . -6) (undo-tree-id8755 . -6) (undo-tree-id8756 . -6) (undo-tree-id8757 . -6) (undo-tree-id8758 . -6) (undo-tree-id8759 . -6) (undo-tree-id8760 . -6) (undo-tree-id8761 . -6) (undo-tree-id8762 . -6) (undo-tree-id8763 . -6) (undo-tree-id8764 . -6) 4446 (t 25969 51966 883406 576000)) nil (25969 51976 639922 0) 0 nil])
([nil nil ((#("array[" 0 6 (fontified t)) . -4434) (undo-tree-id8738 . -6) (undo-tree-id8739 . -6) (undo-tree-id8740 . -6) (undo-tree-id8741 . -6) (undo-tree-id8742 . -6) (undo-tree-id8743 . -6) (undo-tree-id8744 . -6) (undo-tree-id8745 . -6) (undo-tree-id8746 . -6) (undo-tree-id8747 . -6) (undo-tree-id8748 . -6) (undo-tree-id8749 . -6) (undo-tree-id8750 . -6) (undo-tree-id8751 . -6) (undo-tree-id8752 . -6) (undo-tree-id8753 . -6) 4440) nil (25969 51976 639909 0) 0 nil])
([nil nil ((#("get()." 0 6 (fontified t)) . -4428) (undo-tree-id8717 . -6) (undo-tree-id8718 . -6) (undo-tree-id8719 . -6) (undo-tree-id8720 . -6) (undo-tree-id8721 . -6) (undo-tree-id8722 . -6) (undo-tree-id8723 . -6) (undo-tree-id8724 . -6) (undo-tree-id8725 . -6) (undo-tree-id8726 . -6) (undo-tree-id8727 . -6) (undo-tree-id8728 . -6) (undo-tree-id8729 . -6) (undo-tree-id8730 . -6) (undo-tree-id8731 . -6) (undo-tree-id8732 . -6) (undo-tree-id8733 . -6) (undo-tree-id8734 . -6) (undo-tree-id8735 . -6) (undo-tree-id8736 . -6) (undo-tree-id8737 . -6) 4434) nil (25969 51976 639890 0) 0 nil])
([nil nil ((#("datas." 0 6 (fontified t)) . -4422) (undo-tree-id8673 . -5) (undo-tree-id8674 . -6) (undo-tree-id8675 . -5) (undo-tree-id8676 . -5) (undo-tree-id8677 . -5) (undo-tree-id8678 . -5) (undo-tree-id8679 . -5) (undo-tree-id8680 . -5) (undo-tree-id8681 . -5) (undo-tree-id8682 . -5) (undo-tree-id8683 . -5) (undo-tree-id8684 . -5) (undo-tree-id8685 . -5) (undo-tree-id8686 . -5) (undo-tree-id8687 . -5) (undo-tree-id8688 . -5) (undo-tree-id8689 . -5) (undo-tree-id8690 . -5) (undo-tree-id8691 . -5) (undo-tree-id8692 . -6) (undo-tree-id8693 . -6) (undo-tree-id8694 . -6) (undo-tree-id8695 . -6) (undo-tree-id8696 . -6) (undo-tree-id8697 . -6) (undo-tree-id8698 . -6) (undo-tree-id8699 . -6) (undo-tree-id8700 . -6) (undo-tree-id8701 . -6) (undo-tree-id8702 . -6) (undo-tree-id8703 . -6) (undo-tree-id8704 . -6) (undo-tree-id8705 . -6) (undo-tree-id8706 . -6) (undo-tree-id8707 . -6) (undo-tree-id8708 . -6) (undo-tree-id8709 . -6) (undo-tree-id8710 . -6) (undo-tree-id8711 . -6) (undo-tree-id8712 . -6) (undo-tree-id8713 . -6) (undo-tree-id8714 . -6) (undo-tree-id8715 . -6) (undo-tree-id8716 . -6) 4428) nil (25969 51976 639864 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4418) (undo-tree-id8477 . -1) (undo-tree-id8478 . -1) (undo-tree-id8479 . -1) (undo-tree-id8480 . -1) (undo-tree-id8481 . -1) (undo-tree-id8482 . -1) (undo-tree-id8483 . -1) (undo-tree-id8484 . -1) (undo-tree-id8485 . -1) (undo-tree-id8486 . -1) (undo-tree-id8487 . -1) (undo-tree-id8488 . -1) (undo-tree-id8489 . -1) (undo-tree-id8490 . -1) (undo-tree-id8491 . -1) (undo-tree-id8492 . -1) (undo-tree-id8493 . -1) (undo-tree-id8494 . -1) (undo-tree-id8495 . -1) (undo-tree-id8496 . -1) (undo-tree-id8497 . -1) (undo-tree-id8498 . -1) (undo-tree-id8499 . -1) (undo-tree-id8500 . -1) (undo-tree-id8501 . -1) (undo-tree-id8502 . -1) (undo-tree-id8503 . -1) (undo-tree-id8504 . -1) (undo-tree-id8505 . -1) (undo-tree-id8506 . -1) (undo-tree-id8507 . -1) (undo-tree-id8508 . -1) (undo-tree-id8509 . -1) (undo-tree-id8510 . -1) (undo-tree-id8511 . -1) (undo-tree-id8512 . -1) (undo-tree-id8513 . -1) (undo-tree-id8514 . -1) (undo-tree-id8515 . -1) (undo-tree-id8516 . -1) (undo-tree-id8517 . -1) (undo-tree-id8518 . -1) (undo-tree-id8519 . -1) (undo-tree-id8520 . -1) (undo-tree-id8521 . -1) (undo-tree-id8522 . -1) (undo-tree-id8523 . -1) (undo-tree-id8524 . -1) (undo-tree-id8525 . -1) (undo-tree-id8526 . -1) (undo-tree-id8527 . -1) (#("d" 0 1 (fontified t)) . -4419) (undo-tree-id8528 . -1) (undo-tree-id8529 . -1) (undo-tree-id8530 . -1) (undo-tree-id8531 . -1) (undo-tree-id8532 . -1) (undo-tree-id8533 . -1) (undo-tree-id8534 . -1) (undo-tree-id8535 . -1) (undo-tree-id8536 . -1) (undo-tree-id8537 . -1) (undo-tree-id8538 . -1) (undo-tree-id8539 . -1) (undo-tree-id8540 . -1) (undo-tree-id8541 . -1) (undo-tree-id8542 . -1) (undo-tree-id8543 . -1) (undo-tree-id8544 . -1) (undo-tree-id8545 . -1) (undo-tree-id8546 . -1) (undo-tree-id8547 . -1) (undo-tree-id8548 . -1) (undo-tree-id8549 . -1) (undo-tree-id8550 . -1) (undo-tree-id8551 . -1) (undo-tree-id8552 . -1) (undo-tree-id8553 . -1) (undo-tree-id8554 . -1) (undo-tree-id8555 . -1) (undo-tree-id8556 . -1) (undo-tree-id8557 . -1) (undo-tree-id8558 . -1) (undo-tree-id8559 . -1) (undo-tree-id8560 . -1) (undo-tree-id8561 . -1) (undo-tree-id8562 . -1) (undo-tree-id8563 . -1) (undo-tree-id8564 . -1) (undo-tree-id8565 . -1) (undo-tree-id8566 . -1) (undo-tree-id8567 . -1) (undo-tree-id8568 . -1) (undo-tree-id8569 . -1) (undo-tree-id8570 . -1) (undo-tree-id8571 . -1) (undo-tree-id8572 . -1) (undo-tree-id8573 . -1) (undo-tree-id8574 . -1) (undo-tree-id8575 . -1) (undo-tree-id8576 . -1) (undo-tree-id8577 . -1) (#("c" 0 1 (fontified t)) . -4420) (undo-tree-id8578 . -1) (undo-tree-id8579 . -1) (undo-tree-id8580 . -1) (undo-tree-id8581 . -1) (undo-tree-id8582 . -1) (undo-tree-id8583 . -1) (undo-tree-id8584 . -1) (undo-tree-id8585 . -1) (undo-tree-id8586 . -1) (undo-tree-id8587 . -1) (undo-tree-id8588 . -1) (undo-tree-id8589 . -1) (undo-tree-id8590 . -1) (undo-tree-id8591 . -1) (undo-tree-id8592 . -1) (undo-tree-id8593 . -1) (undo-tree-id8594 . -1) (undo-tree-id8595 . -1) (undo-tree-id8596 . -1) (undo-tree-id8597 . -1) (undo-tree-id8598 . -1) (undo-tree-id8599 . -1) (undo-tree-id8600 . -1) (undo-tree-id8601 . -1) (undo-tree-id8602 . -1) (undo-tree-id8603 . -1) (undo-tree-id8604 . -1) (undo-tree-id8605 . -1) (undo-tree-id8606 . -1) (undo-tree-id8607 . -1) (undo-tree-id8608 . -1) (undo-tree-id8609 . -1) (undo-tree-id8610 . -1) (undo-tree-id8611 . -1) (undo-tree-id8612 . -1) (undo-tree-id8613 . -1) (undo-tree-id8614 . -1) (undo-tree-id8615 . -1) (undo-tree-id8616 . -1) (undo-tree-id8617 . -1) (undo-tree-id8618 . -1) (undo-tree-id8619 . -1) (undo-tree-id8620 . -1) (undo-tree-id8621 . -1) (undo-tree-id8622 . -1) (undo-tree-id8623 . -1) (undo-tree-id8624 . -1) (undo-tree-id8625 . -1) (#("_" 0 1 (fontified t)) . -4421) (undo-tree-id8626 . -1) (undo-tree-id8627 . -1) (undo-tree-id8628 . -1) (undo-tree-id8629 . -1) (undo-tree-id8630 . -1) (undo-tree-id8631 . -1) (undo-tree-id8632 . -1) (undo-tree-id8633 . -1) (undo-tree-id8634 . -1) (undo-tree-id8635 . -1) (undo-tree-id8636 . -1) (undo-tree-id8637 . -1) (undo-tree-id8638 . -1) (undo-tree-id8639 . -1) (undo-tree-id8640 . -1) (undo-tree-id8641 . -1) (undo-tree-id8642 . -1) (undo-tree-id8643 . -1) (undo-tree-id8644 . -1) (undo-tree-id8645 . -1) (undo-tree-id8646 . -1) (undo-tree-id8647 . -1) (undo-tree-id8648 . -1) (undo-tree-id8649 . -1) (undo-tree-id8650 . -1) (undo-tree-id8651 . -1) (undo-tree-id8652 . -1) (undo-tree-id8653 . -1) (undo-tree-id8654 . -1) (undo-tree-id8655 . -1) (undo-tree-id8656 . -1) (undo-tree-id8657 . -1) (undo-tree-id8658 . -1) (undo-tree-id8659 . -1) (undo-tree-id8660 . -1) (undo-tree-id8661 . -1) (undo-tree-id8662 . -1) (undo-tree-id8663 . -1) (undo-tree-id8664 . -1) (undo-tree-id8665 . -1) (undo-tree-id8666 . -1) (undo-tree-id8667 . -1) (undo-tree-id8668 . -1) (undo-tree-id8669 . -1) (undo-tree-id8670 . -1) (undo-tree-id8671 . -1) (undo-tree-id8672 . -1) 4422) nil (25969 51976 639803 0) 0 nil])
([nil nil ((4418 . 4419)) nil (25969 51976 639571 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -4418) (undo-tree-id8475 . -1) (undo-tree-id8476 . -1) 4419) nil (25969 51976 639570 0) 0 nil])
([nil nil ((4418 . 4420)) nil (25969 51976 639566 0) 0 nil])
([nil nil ((4418 . 4426) (#("ad" 0 2 (fontified nil)) . 4418) (4418 . 4420) (#("adc_data" 0 8 (fontified nil)) . -4418) (4418 . 4426) (#("ad" 0 2 (fontified t)) . -4418) (undo-tree-id8469 . -2) (undo-tree-id8470 . -1) (undo-tree-id8471 . -2) (undo-tree-id8472 . -2) (undo-tree-id8473 . -2) (undo-tree-id8474 . -2) 4420) nil (25969 51976 639564 0) 0 nil])
([nil nil ((4426 . 4428)) nil (25969 51976 639555 0) 0 nil])
([nil current ((apply yas--snippet-revive 4427 4432 #s(yas--snippet nil nil #s(yas--exit 4432 nil) 161 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 4432 nil) 161 nil nil nil nil)) (4427 . 4432) (#("get()$0" 0 7 (fontified nil)) . 4427) (4427 . 4434) (#("g" 0 1 (fontified nil)) . 4427) (4427 . 4428) (#("get() (as SignalGet)" 0 20 (fontified nil)) . -4427) (4427 . 4447) (#("g" 0 1 (fontified t)) . -4427) (undo-tree-id8464 . -1) (undo-tree-id8465 . -1) (undo-tree-id8466 . -1) (undo-tree-id8467 . -1) (undo-tree-id8468 . -1) 4428) nil (25969 51976 639550 0) 0 nil])
nil
