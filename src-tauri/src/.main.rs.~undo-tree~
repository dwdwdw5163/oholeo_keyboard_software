(undo-tree-save-format-version . 1)
"406ba2d6714bade9d89f1758598786bc463ee940"
[nil nil nil nil (25953 59888 550221 0) 0 nil]
([nil nil ((#("pub struct Key {
    pub index: u32,
    pub stm32_index: u32,
    pub bind_key: u32,
    /// 0: default; 1: RT
    pub mode: u32,
    /// 0: normal trigger travel 1: dynamic trigger travel 2: dynamic reset travel 3: lower deadzone
    pub value: (u32, u32, u32, u32),
    pub position: (u32, u32),
    pub size: (u32, u32),
    pub selected: bool,
}" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 14 (face font-lock-type-face fontified t) 14 21 (fontified t) 21 24 (face font-lock-keyword-face fontified t) 24 25 (fontified t) 25 30 (face font-lock-variable-name-face fontified t) 30 32 (fontified t) 32 35 (face font-lock-type-face fontified t) 35 41 (fontified t) 41 44 (face font-lock-keyword-face fontified t) 44 45 (fontified t) 45 56 (face font-lock-variable-name-face fontified t) 56 58 (fontified t) 58 61 (face font-lock-type-face fontified t) 61 67 (fontified t) 67 70 (face font-lock-keyword-face fontified t) 70 71 (fontified t) 71 79 (face font-lock-variable-name-face fontified t) 79 81 (fontified t) 81 84 (face font-lock-type-face fontified t) 84 90 (fontified t) 90 112 (face font-lock-doc-face fontified t) 112 116 (fontified t) 116 119 (face font-lock-keyword-face fontified t) 119 120 (fontified t) 120 124 (face font-lock-variable-name-face fontified t) 124 126 (fontified t) 126 129 (face font-lock-type-face fontified t) 129 135 (fontified t) 135 232 (face font-lock-doc-face fontified t) 232 236 (fontified t) 236 239 (face font-lock-keyword-face fontified t) 239 240 (fontified t) 240 245 (face font-lock-variable-name-face fontified t) 245 248 (fontified t) 248 251 (face font-lock-type-face fontified t) 251 253 (fontified t) 253 256 (face font-lock-type-face fontified t) 256 258 (fontified t) 258 261 (face font-lock-type-face fontified t) 261 263 (fontified t) 263 266 (face font-lock-type-face fontified t) 266 273 (fontified t) 273 276 (face font-lock-keyword-face fontified t) 276 277 (fontified t) 277 285 (face font-lock-variable-name-face fontified t) 285 288 (fontified t) 288 291 (face font-lock-type-face fontified t) 291 293 (fontified t) 293 296 (face font-lock-type-face fontified t) 296 303 (fontified t) 303 306 (face font-lock-keyword-face fontified t) 306 307 (fontified t) 307 311 (face font-lock-variable-name-face fontified t) 311 314 (fontified t) 314 317 (face font-lock-type-face fontified t) 317 319 (fontified t) 319 322 (face font-lock-type-face fontified t) 322 329 (fontified t) 329 332 (face font-lock-keyword-face fontified t) 332 333 (fontified t) 333 341 (face font-lock-variable-name-face fontified t) 341 343 (fontified t) 343 347 (face font-lock-type-face fontified t) 347 350 (fontified t)) . 638) (undo-tree-id74 . -350) (undo-tree-id75 . -350) (undo-tree-id76 . -350) (undo-tree-id77 . -350) (undo-tree-id78 . -350) (undo-tree-id79 . -350) (undo-tree-id80 . -330) (undo-tree-id81 . -303) (undo-tree-id82 . -235) (undo-tree-id83 . -134) (undo-tree-id84 . -134) (undo-tree-id85 . -88) (undo-tree-id86 . -18) (undo-tree-id87 . -350) (undo-tree-id88 . -350) (undo-tree-id89 . -350) (undo-tree-id90 . -350) (undo-tree-id91 . -350) (undo-tree-id92 . -350) (undo-tree-id93 . -350) (undo-tree-id94 . -350) (undo-tree-id95 . -329) (undo-tree-id96 . -328) (undo-tree-id97 . -301) (undo-tree-id98 . -270) (undo-tree-id99 . -232) (undo-tree-id100 . -112) (undo-tree-id101 . -112) (undo-tree-id102 . -112) (undo-tree-id103 . -112) (undo-tree-id104 . -350) (undo-tree-id105 . -350) (undo-tree-id106 . -350)) nil (25953 59894 860376 0) 0 nil] [nil nil ((#("#[derive(Debug, Clone, serde::Deserialize)]
pub struct Key {
    pub index: u32,
    pub stm32_index: u32,
    pub bind_key: u32,
    /// 0: default; 1: RT
    pub mode: u32,
    /// 0: normal trigger travel 1: dynamic trigger travel 2: dynamic reset travel 3: lower deadzone
    pub value: (u32, u32, u32, u32),
    pub position: (u32, u32),
    pub size: (u32, u32),
    pub selected: bool,
}" 0 43 (face font-lock-preprocessor-face fontified t) 43 44 (fontified t) 44 47 (face font-lock-keyword-face fontified t) 47 48 (fontified t) 48 54 (face font-lock-keyword-face fontified t) 54 55 (fontified t) 55 58 (face font-lock-type-face fontified t) 58 65 (fontified t) 65 68 (face font-lock-keyword-face fontified t) 68 69 (fontified t) 69 74 (face font-lock-variable-name-face fontified t) 74 76 (fontified t) 76 79 (face font-lock-type-face fontified t) 79 85 (fontified t) 85 88 (face font-lock-keyword-face fontified t) 88 89 (fontified t) 89 100 (face font-lock-variable-name-face fontified t) 100 102 (fontified t) 102 105 (face font-lock-type-face fontified t) 105 111 (fontified t) 111 114 (face font-lock-keyword-face fontified t) 114 115 (fontified t) 115 123 (face font-lock-variable-name-face fontified t) 123 125 (fontified t) 125 128 (face font-lock-type-face fontified t) 128 134 (fontified t) 134 156 (face font-lock-doc-face fontified t) 156 160 (fontified t) 160 163 (face font-lock-keyword-face fontified t) 163 164 (fontified t) 164 168 (face font-lock-variable-name-face fontified t) 168 170 (fontified t) 170 173 (face font-lock-type-face fontified t) 173 179 (fontified t) 179 276 (face font-lock-doc-face fontified t) 276 280 (fontified t) 280 283 (face font-lock-keyword-face fontified t) 283 284 (fontified t) 284 289 (face font-lock-variable-name-face fontified t) 289 292 (fontified t) 292 295 (face font-lock-type-face fontified t) 295 297 (fontified t) 297 300 (face font-lock-type-face fontified t) 300 302 (fontified t) 302 305 (face font-lock-type-face fontified t) 305 307 (fontified t) 307 310 (face font-lock-type-face fontified t) 310 317 (fontified t) 317 320 (face font-lock-keyword-face fontified t) 320 321 (fontified t) 321 329 (face font-lock-variable-name-face fontified t) 329 332 (fontified t) 332 335 (face font-lock-type-face fontified t) 335 337 (fontified t) 337 340 (face font-lock-type-face fontified t) 340 347 (fontified t) 347 350 (face font-lock-keyword-face fontified t) 350 351 (fontified t) 351 355 (face font-lock-variable-name-face fontified t) 355 358 (fontified t) 358 361 (face font-lock-type-face fontified t) 361 363 (fontified t) 363 366 (face font-lock-type-face fontified t) 366 373 (fontified t) 373 376 (face font-lock-keyword-face fontified t) 376 377 (fontified t) 377 385 (face font-lock-variable-name-face fontified t) 385 387 (fontified t) 387 391 (face font-lock-type-face fontified t) 391 394 (fontified t)) . 594) (undo-tree-id0 . -394) (undo-tree-id1 . -394) (undo-tree-id2 . -394) (undo-tree-id3 . -394) (undo-tree-id4 . -394) (undo-tree-id5 . -394) (undo-tree-id6 . -374) (undo-tree-id7 . -347) (undo-tree-id8 . -279) (undo-tree-id9 . -178) (undo-tree-id10 . -178) (undo-tree-id11 . -132) (undo-tree-id12 . -62) (undo-tree-id13 . -44) (undo-tree-id14 . -44) (undo-tree-id15 . -44) (undo-tree-id16 . -44) (undo-tree-id17 . -44) (undo-tree-id18 . -394) (t 25952 32028 813022 149000)) ((594 . 988)) (25953 59887 903496 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1059 . 1060) (nil fontified nil 1059 . 1060) (nil fontified nil 1058 . 1059) (nil fontified nil 1057 . 1058) (nil fontified nil 1054 . 1057) (nil fontified nil 1052 . 1054) (nil fontified nil 1043 . 1052) (nil fontified nil 1042 . 1043) (nil fontified nil 1039 . 1042) (nil fontified nil 1035 . 1039) (nil fontified nil 1033 . 1035) (nil fontified nil 1029 . 1033) (nil fontified nil 1027 . 1029) (nil fontified nil 1019 . 1027) (nil fontified nil 1018 . 1019) (nil fontified nil 1015 . 1018) (nil fontified nil 1011 . 1015) (nil fontified nil 1008 . 1011) (nil fontified nil 1005 . 1008) (nil fontified nil 1003 . 1005) (nil fontified nil 1000 . 1003) (nil fontified nil 997 . 1000) (nil fontified nil 993 . 997) (nil fontified nil 992 . 993) (nil fontified nil 989 . 992) (nil fontified nil 982 . 989) (nil fontified nil 979 . 982) (nil fontified nil 977 . 979) (nil fontified nil 974 . 977) (nil fontified nil 971 . 974) (nil fontified nil 963 . 971) (nil fontified nil 962 . 963) (nil fontified nil 959 . 962) (nil fontified nil 952 . 959) (nil fontified nil 949 . 952) (nil fontified nil 947 . 949) (nil fontified nil 944 . 947) (nil fontified nil 942 . 944) (nil fontified nil 939 . 942) (nil fontified nil 937 . 939) (nil fontified nil 934 . 937) (nil fontified nil 931 . 934) (nil fontified nil 926 . 931) (nil fontified nil 925 . 926) (nil fontified nil 922 . 925) (nil fontified nil 918 . 922) (nil fontified nil 821 . 918) (nil fontified nil 815 . 821) (nil fontified nil 812 . 815) (nil fontified nil 810 . 812) (nil fontified nil 806 . 810) (nil fontified nil 805 . 806) (nil fontified nil 802 . 805) (nil fontified nil 798 . 802) (nil fontified nil 776 . 798) (nil fontified nil 770 . 776) (nil fontified nil 767 . 770) (nil fontified nil 765 . 767) (nil fontified nil 757 . 765) (nil fontified nil 756 . 757) (nil fontified nil 753 . 756) (nil fontified nil 747 . 753) (nil fontified nil 744 . 747) (nil fontified nil 742 . 744) (nil fontified nil 731 . 742) (nil fontified nil 730 . 731) (nil fontified nil 727 . 730) (nil fontified nil 721 . 727) (nil fontified nil 718 . 721) (nil fontified nil 716 . 718) (nil fontified nil 711 . 716) (nil fontified nil 710 . 711) (nil fontified nil 707 . 710) (nil fontified nil 700 . 707) (nil fontified nil 697 . 700) (nil fontified nil 696 . 697) (nil fontified nil 690 . 696) (nil fontified nil 689 . 690) (nil fontified nil 686 . 689) (nil fontified nil 685 . 686) (nil fontified nil 638 . 685) (638 . 1060)) nil (25953 59894 860341 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1015 . 1016) (nil fontified nil 1015 . 1016) (nil fontified nil 1014 . 1015) (nil fontified nil 1013 . 1014) (nil fontified nil 1010 . 1013) (nil fontified nil 1008 . 1010) (nil fontified nil 999 . 1008) (nil fontified nil 998 . 999) (nil fontified nil 995 . 998) (nil fontified nil 991 . 995) (nil fontified nil 989 . 991) (nil fontified nil 985 . 989) (nil fontified nil 983 . 985) (nil fontified nil 975 . 983) (nil fontified nil 974 . 975) (nil fontified nil 971 . 974) (nil fontified nil 967 . 971) (nil fontified nil 964 . 967) (nil fontified nil 961 . 964) (nil fontified nil 959 . 961) (nil fontified nil 956 . 959) (nil fontified nil 953 . 956) (nil fontified nil 949 . 953) (nil fontified nil 948 . 949) (nil fontified nil 945 . 948) (nil fontified nil 938 . 945) (nil fontified nil 935 . 938) (nil fontified nil 933 . 935) (nil fontified nil 930 . 933) (nil fontified nil 927 . 930) (nil fontified nil 919 . 927) (nil fontified nil 918 . 919) (nil fontified nil 915 . 918) (nil fontified nil 908 . 915) (nil fontified nil 905 . 908) (nil fontified nil 903 . 905) (nil fontified nil 900 . 903) (nil fontified nil 898 . 900) (nil fontified nil 895 . 898) (nil fontified nil 893 . 895) (nil fontified nil 890 . 893) (nil fontified nil 887 . 890) (nil fontified nil 882 . 887) (nil fontified nil 881 . 882) (nil fontified nil 878 . 881) (nil fontified nil 874 . 878) (nil fontified nil 777 . 874) (nil fontified nil 771 . 777) (nil fontified nil 768 . 771) (nil fontified nil 766 . 768) (nil fontified nil 762 . 766) (nil fontified nil 761 . 762) (nil fontified nil 758 . 761) (nil fontified nil 754 . 758) (nil fontified nil 732 . 754) (nil fontified nil 726 . 732) (nil fontified nil 723 . 726) (nil fontified nil 721 . 723) (nil fontified nil 713 . 721) (nil fontified nil 712 . 713) (nil fontified nil 709 . 712) (nil fontified nil 703 . 709) (nil fontified nil 700 . 703) (nil fontified nil 698 . 700) (nil fontified nil 687 . 698) (nil fontified nil 686 . 687) (nil fontified nil 683 . 686) (nil fontified nil 677 . 683) (nil fontified nil 674 . 677) (nil fontified nil 672 . 674) (nil fontified nil 667 . 672) (nil fontified nil 666 . 667) (nil fontified nil 663 . 666) (nil fontified nil 656 . 663) (nil fontified nil 653 . 656) (nil fontified nil 652 . 653) (nil fontified nil 646 . 652) (nil fontified nil 645 . 646) (nil fontified nil 642 . 645) (nil fontified nil 641 . 642) (nil fontified nil 594 . 641) (594 . 1016)) ((#("#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct Key {
    pub index: u32,
    pub stm32_index: u32,
    pub bind_key: u32,
    /// 0: default; 1: RT
    pub mode: u32,
    /// 0: normal trigger travel 1: dynamic trigger travel 2: dynamic reset travel 3: lower deadzone
    pub value: (u32, u32, u32, u32),
    pub position: (u32, u32),
    pub size: (u32, u32),
    pub selected: bool,
    pub adc_value: u32,
}" 0 47 (face font-lock-preprocessor-face fontified nil) 47 48 (fontified nil) 48 51 (face font-lock-keyword-face fontified nil) 51 52 (fontified nil) 52 58 (face font-lock-keyword-face fontified nil) 58 59 (fontified nil) 59 62 (face font-lock-type-face fontified nil) 62 65 (fontified nil) 65 69 (fontified nil) 69 72 (face font-lock-keyword-face fontified nil) 72 73 (fontified nil) 73 78 (face font-lock-variable-name-face fontified nil) 78 80 (fontified nil) 80 83 (face font-lock-type-face fontified nil) 83 85 (fontified nil) 85 89 (fontified nil) 89 92 (face font-lock-keyword-face fontified nil) 92 93 (fontified nil) 93 104 (face font-lock-variable-name-face fontified nil) 104 106 (fontified nil) 106 109 (face font-lock-type-face fontified nil) 109 111 (fontified nil) 111 115 (fontified nil) 115 118 (face font-lock-keyword-face fontified nil) 118 119 (fontified nil) 119 127 (face font-lock-variable-name-face fontified nil) 127 129 (fontified nil) 129 132 (face font-lock-type-face fontified nil) 132 134 (fontified nil) 134 138 (fontified nil) 138 160 (face font-lock-doc-face fontified nil) 160 164 (fontified nil) 164 167 (face font-lock-keyword-face fontified nil) 167 168 (fontified nil) 168 172 (face font-lock-variable-name-face fontified nil) 172 174 (fontified nil) 174 177 (face font-lock-type-face fontified nil) 177 179 (fontified nil) 179 183 (fontified nil) 183 280 (face font-lock-doc-face fontified nil) 280 284 (fontified nil) 284 287 (face font-lock-keyword-face fontified nil) 287 288 (fontified nil) 288 293 (face font-lock-variable-name-face fontified nil) 293 296 (fontified nil) 296 299 (face font-lock-type-face fontified nil) 299 301 (fontified nil) 301 304 (face font-lock-type-face fontified nil) 304 306 (fontified nil) 306 309 (face font-lock-type-face fontified nil) 309 311 (fontified nil) 311 314 (face font-lock-type-face fontified nil) 314 317 (fontified nil) 317 321 (fontified nil) 321 324 (face font-lock-keyword-face fontified nil) 324 325 (fontified nil) 325 333 (face font-lock-variable-name-face fontified nil) 333 336 (fontified nil) 336 339 (face font-lock-type-face fontified nil) 339 341 (fontified nil) 341 344 (face font-lock-type-face fontified nil) 344 347 (fontified nil) 347 351 (fontified nil) 351 354 (face font-lock-keyword-face fontified nil) 354 355 (fontified nil) 355 359 (face font-lock-variable-name-face fontified nil) 359 362 (fontified nil) 362 365 (face font-lock-type-face fontified nil) 365 367 (fontified nil) 367 370 (face font-lock-type-face fontified nil) 370 373 (fontified nil) 373 377 (fontified nil) 377 380 (face font-lock-keyword-face fontified nil) 380 381 (fontified nil) 381 389 (face font-lock-variable-name-face fontified nil) 389 391 (fontified nil) 391 395 (face font-lock-type-face fontified nil) 395 397 (fontified nil) 397 401 (fontified nil) 401 404 (face font-lock-keyword-face fontified nil) 404 405 (fontified nil) 405 414 (face font-lock-variable-name-face fontified nil) 414 416 (fontified nil) 416 419 (face font-lock-type-face fontified nil) 419 420 (fontified nil) 420 421 (fontified nil) 421 422 (rear-nonsticky nil fontified nil)) . 594) (undo-tree-id19 . -422) (undo-tree-id20 . -422) (undo-tree-id21 . -422) (undo-tree-id22 . -422) (undo-tree-id23 . -422) (undo-tree-id24 . -422) (undo-tree-id25 . -422) (undo-tree-id26 . -422) (undo-tree-id27 . -422) (undo-tree-id28 . -422) (undo-tree-id29 . -422) (undo-tree-id30 . -422) (undo-tree-id31 . -422) (undo-tree-id32 . -422) (undo-tree-id33 . -422) (undo-tree-id34 . -422) (undo-tree-id35 . -422) (undo-tree-id36 . -422) (undo-tree-id37 . -422) (undo-tree-id38 . -422) (undo-tree-id39 . -422) (undo-tree-id40 . -422) (undo-tree-id41 . -422) (undo-tree-id42 . -422) (undo-tree-id43 . -422) (undo-tree-id44 . -422) (undo-tree-id45 . -422) (undo-tree-id46 . -422) (undo-tree-id47 . -422) (undo-tree-id48 . -422) (undo-tree-id49 . -422) (undo-tree-id50 . -422) (undo-tree-id51 . -422) (undo-tree-id52 . -422) (undo-tree-id53 . -422) (undo-tree-id54 . -422) (undo-tree-id55 . -422) (undo-tree-id56 . -421) (undo-tree-id57 . -422) (undo-tree-id58 . -422) (undo-tree-id59 . -422) (undo-tree-id60 . -422) (nil fontified t 641 . 642) (nil fontified t 656 . 659) (nil fontified t 677 . 679) (nil fontified t 703 . 705) (nil fontified t 726 . 728) (nil fontified t 732 . 754) (nil fontified t 771 . 773) (nil fontified t 777 . 874) (nil fontified t 908 . 911) (nil fontified t 938 . 941) (nil fontified t 964 . 967) (nil fontified t 989 . 991) (nil fontified t 1014 . 1015) (nil rear-nonsticky t 1015 . 1016) (t 25953 59870 285912 44000)) (25953 59870 281160 0) 0 nil])
([nil nil ((#("#[derive(Debug, Clone, Serialize, Deserialize)]" 0 47 (face font-lock-preprocessor-face fontified t)) . 638) (undo-tree-id62 . -3) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -47)) nil (25953 59894 860319 0) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 638) (undo-tree-id61 . -1)) nil (25953 60045 664852 0) 0 nil])
([nil nil ((1172 . 1174) (t 25953 60032 466042 84000)) nil (25953 60099 701941 0) 0 nil] [nil nil ((#("String" 0 6 (face font-lock-type-face fontified t)) . -2759) (undo-tree-id235 . -5) (undo-tree-id236 . -6) (undo-tree-id237 . -5) (undo-tree-id238 . -5) (undo-tree-id239 . -5) (undo-tree-id240 . -5) (undo-tree-id241 . -5) (undo-tree-id242 . -5) (undo-tree-id243 . -5) (undo-tree-id244 . -5) (undo-tree-id245 . -5) (undo-tree-id246 . -5) (undo-tree-id247 . -5) (undo-tree-id248 . -5) (undo-tree-id249 . -5) (undo-tree-id250 . -5) (undo-tree-id251 . -5) (undo-tree-id252 . -5) (undo-tree-id253 . -5) (undo-tree-id254 . -5) (undo-tree-id255 . -6) (undo-tree-id256 . -6) (undo-tree-id257 . -6) (undo-tree-id258 . -6) (undo-tree-id259 . -6) 2765 (t 25953 60032 466042 84000)) ((2759 . 2765)) (25953 60045 363782 0) 0 nil] [nil nil ((#("String" 0 6 (face font-lock-type-face fontified t)) . -580) (undo-tree-id114 . -6) (undo-tree-id115 . -6) (undo-tree-id117 . -6) (undo-tree-id119 . -6) (undo-tree-id121 . -6) (undo-tree-id123 . -6) (undo-tree-id125 . -6) (undo-tree-id127 . -6) (undo-tree-id129 . -6) (undo-tree-id131 . -6) 586 (t 25953 59894 864599 264000)) ((580 . 586)) (25953 60031 438148 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1266 . 1267) (nil fontified nil 1174 . 1267) (1174 . 1267)) nil (25953 60099 701940 0) 0 nil])
([nil nil ((2759 . 2760)) ((#("P" 0 1 (face font-lock-type-face fontified t)) . 2759) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1)) (25953 60044 931885 0) 0 nil])
([nil nil ((580 . 581)) ((#("P" 0 1 (face font-lock-type-face fontified t)) . 580) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1)) (25953 60030 995158 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -1241) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (#("6" 0 1 (face font-lock-type-face fontified t)) . -1242) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) 1243) nil (25953 60099 701936 0) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-type-face fontified t)) . -2759) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) 2760) ((2759 . 2760)) (25953 60044 931587 0) 0 nil])
([nil nil ((580 . 587) (#("P" 0 1 (fontified nil)) . 580) (580 . 581) (#("Payload" 0 7 (fontified nil)) . -580) (580 . 587) (#("P" 0 1 (face font-lock-type-face fontified t)) . -580) (undo-tree-id107 . -1) (undo-tree-id109 . -1) (undo-tree-id111 . -1) (undo-tree-id113 . -1) 581) ((580 . 581) (#("Payload" 0 7 (fontified nil)) . 580) (580 . 587) (#("P" 0 1 (fontified nil)) . 580) (580 . 581) (#("Payload" 0 7 (face font-lock-type-face fontified t)) . 580) (undo-tree-id215 . -7) (undo-tree-id216 . -7) (undo-tree-id217 . -7) (undo-tree-id218 . -7) (undo-tree-id219 . -7) (undo-tree-id220 . -7) (undo-tree-id221 . -7) (undo-tree-id222 . -7) (undo-tree-id223 . -7) (undo-tree-id224 . -7) (undo-tree-id225 . -7) (undo-tree-id226 . -7) (t 25953 60020 671528 481000)) (25953 60014 303743 0) 0 nil])
([nil nil ((1241 . 1243)) nil (25953 60099 701895 0) 0 nil])
nil
([nil nil ((#("String" 0 6 (face font-lock-type-face fontified t)) . -2723) (undo-tree-id137 . -6) (undo-tree-id138 . -6) (undo-tree-id139 . -6) (undo-tree-id140 . -6) (undo-tree-id141 . -6) (undo-tree-id142 . -6) (undo-tree-id143 . -6) (undo-tree-id144 . -6) (undo-tree-id145 . -6) (undo-tree-id146 . -6) (undo-tree-id147 . -6) (undo-tree-id148 . -6) (undo-tree-id149 . -6) (undo-tree-id150 . -6) (undo-tree-id151 . -6) (undo-tree-id152 . -6) (undo-tree-id153 . -6) (undo-tree-id154 . -6) (undo-tree-id155 . -6) 2729 (t 25953 59988 26244 102000)) ((2723 . 2729)) (25953 60013 843200 0) 0 nil])
([nil nil ((1154 . 1156) 1160 (t 25953 60099 706292 765000)) nil (25953 60135 317441 0) 0 nil])
([nil nil ((2723 . 2724)) ((#("P" 0 1 (face font-lock-type-face fontified t)) . 2723) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1)) (25953 60013 396128 0) 0 nil])
([nil nil ((#("Generic" 0 7 (face font-lock-type-face fontified t)) . -1218) (undo-tree-id296 . -7) (undo-tree-id297 . -7) (undo-tree-id298 . -7) (undo-tree-id299 . -7) (undo-tree-id300 . -7) (undo-tree-id301 . -7) (undo-tree-id302 . -7) (undo-tree-id303 . -7) (undo-tree-id304 . -7) (undo-tree-id305 . -7) (undo-tree-id306 . -7) (undo-tree-id307 . -7) (undo-tree-id308 . -7) (undo-tree-id309 . -7) (undo-tree-id310 . -7) (undo-tree-id311 . -7) (undo-tree-id312 . -7) (undo-tree-id313 . -7) (undo-tree-id314 . -7) (undo-tree-id315 . -7) (undo-tree-id316 . -7) (undo-tree-id317 . -7) (undo-tree-id318 . -7) (undo-tree-id319 . -7) (undo-tree-id320 . -7) (undo-tree-id321 . -7) (undo-tree-id322 . -7) (undo-tree-id323 . -7) (undo-tree-id324 . -7) (undo-tree-id325 . -7) (undo-tree-id326 . -7) (undo-tree-id327 . -7) (undo-tree-id328 . -7) (undo-tree-id329 . -7) (undo-tree-id330 . -7) (undo-tree-id331 . -7) (undo-tree-id332 . -7) (undo-tree-id333 . -7) (undo-tree-id334 . -7) (undo-tree-id335 . -7) (undo-tree-id336 . -7) (undo-tree-id337 . -7) (undo-tree-id338 . -7) (undo-tree-id339 . -7) (undo-tree-id340 . -7) (undo-tree-id341 . -7) (undo-tree-id342 . -7) (undo-tree-id343 . -7) (undo-tree-id344 . -7) (undo-tree-id345 . -7) (undo-tree-id346 . -7) (undo-tree-id347 . -7) (undo-tree-id348 . -7) (undo-tree-id349 . -7) (undo-tree-id350 . -7) (undo-tree-id351 . -7) (undo-tree-id352 . -7) (undo-tree-id353 . -7) (undo-tree-id354 . -7) (undo-tree-id355 . -7) (undo-tree-id356 . -7) (undo-tree-id357 . -7) (undo-tree-id358 . -7) (undo-tree-id359 . -7) (undo-tree-id360 . -7) (undo-tree-id361 . -7) (undo-tree-id362 . -7) 1225) nil (25953 60135 317435 0) 0 nil])
([nil nil ((2723 . 2730) (#("P" 0 1 (fontified nil)) . 2723) (2723 . 2724) (#("Payload" 0 7 (fontified nil)) . -2723) (2723 . 2730) (#("P" 0 1 (face font-lock-type-face fontified t)) . -2723) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) 2724) ((2723 . 2724) (#("Payload" 0 7 (fontified nil)) . 2723) (2723 . 2730) (#("P" 0 1 (fontified nil)) . 2723) (2723 . 2724) (#("Payload" 0 7 (face font-lock-type-face fontified t)) . 2723) (undo-tree-id156 . -7) (undo-tree-id157 . -7) (undo-tree-id158 . -7) (undo-tree-id159 . -7) (undo-tree-id160 . -7) (undo-tree-id161 . -7) (undo-tree-id162 . -7) (undo-tree-id163 . -7) (undo-tree-id164 . -7) (undo-tree-id165 . -7) (undo-tree-id166 . -7) (undo-tree-id167 . -7) (undo-tree-id168 . -7) (undo-tree-id169 . -7) (undo-tree-id170 . -7) (undo-tree-id171 . -7) (undo-tree-id172 . -7) (undo-tree-id173 . -7) (undo-tree-id174 . -7) (undo-tree-id175 . -7) (undo-tree-id176 . -7) (undo-tree-id177 . -7) (undo-tree-id178 . -7) (undo-tree-id179 . -7) (undo-tree-id180 . -7) (undo-tree-id181 . -7) (undo-tree-id182 . -7) (undo-tree-id183 . -7) (undo-tree-id184 . -7) (undo-tree-id185 . -7) (undo-tree-id186 . -7) (undo-tree-id187 . -7) (undo-tree-id188 . -7) (undo-tree-id189 . -7) (undo-tree-id190 . -7) (undo-tree-id191 . -7) (undo-tree-id192 . -7) (undo-tree-id193 . -7) (undo-tree-id194 . -7) (undo-tree-id195 . -7) (undo-tree-id196 . -7) (undo-tree-id197 . -7) (undo-tree-id198 . -7) (undo-tree-id199 . -7) (undo-tree-id200 . -7) (undo-tree-id201 . -7) (undo-tree-id202 . -7) (undo-tree-id203 . -7) (undo-tree-id204 . -7) (undo-tree-id205 . -7) (undo-tree-id206 . -7) (undo-tree-id207 . -7) (undo-tree-id208 . -7) (undo-tree-id209 . -7) (t 25953 60008 495782 431000)) (25953 60008 492134 0) 0 nil])
([nil nil ((1218 . 1221)) nil (25953 60135 317355 0) 0 nil])
nil
([nil nil ((#("#[derive(Clone, serde::Serialize)]
struct ADCEvent {
    num: u32,
    message: String,
}" 0 34 (face font-lock-preprocessor-face fontified t) 34 35 (fontified t) 35 41 (face font-lock-keyword-face fontified t) 41 42 (fontified t) 42 45 (face font-lock-type-face fontified t) 45 50 (face font-lock-type-face fontified t) 50 53 (fontified t) 53 57 (fontified t) 57 60 (face font-lock-variable-name-face fontified t) 60 62 (fontified t) 62 65 (face font-lock-type-face fontified t) 65 67 (fontified t) 67 71 (fontified t) 71 78 (face font-lock-variable-name-face fontified t) 78 80 (fontified t) 80 86 (face font-lock-type-face fontified t) 86 88 (fontified t) 88 89 (fontified t rear-nonsticky t)) . 1176) (undo-tree-id543 . -89) (undo-tree-id544 . -87) (undo-tree-id545 . -42) (undo-tree-id546 . -42) (undo-tree-id547 . -42) (undo-tree-id548 . -42) (undo-tree-id549 . -42) (undo-tree-id550 . -42) (undo-tree-id551 . -42) (undo-tree-id552 . -42) (undo-tree-id553 . -42) (undo-tree-id554 . -42) (undo-tree-id555 . -42) (undo-tree-id556 . -42) (undo-tree-id557 . -42) (undo-tree-id558 . -42) (undo-tree-id559 . -42) (undo-tree-id560 . -42) (undo-tree-id561 . -42) (undo-tree-id562 . -42) (undo-tree-id563 . -42) (undo-tree-id564 . -42) (undo-tree-id565 . -42) (undo-tree-id566 . -42) (undo-tree-id567 . -42) (undo-tree-id568 . -42) (undo-tree-id569 . -42) (undo-tree-id570 . -42) (undo-tree-id571 . -42) (undo-tree-id572 . -42) (undo-tree-id573 . -42) (undo-tree-id574 . -42) (undo-tree-id575 . -42) (undo-tree-id576 . -42) (undo-tree-id577 . -42) (undo-tree-id578 . -42) (undo-tree-id579 . -42) (undo-tree-id580 . -42) (undo-tree-id581 . -42) (undo-tree-id582 . -42) (undo-tree-id583 . -42) (undo-tree-id584 . -42) (undo-tree-id585 . -42) (undo-tree-id586 . -42) (undo-tree-id587 . -42) (undo-tree-id588 . -42) (undo-tree-id589 . -42) (undo-tree-id590 . -42) (undo-tree-id591 . -42) (undo-tree-id592 . -42) (undo-tree-id593 . -42) (undo-tree-id594 . -42) (undo-tree-id595 . -42) (undo-tree-id596 . -42) (undo-tree-id597 . -42) (undo-tree-id598 . -42) (undo-tree-id599 . -42) (undo-tree-id600 . -42) (undo-tree-id601 . -42) (undo-tree-id602 . -42) (undo-tree-id603 . -42) (undo-tree-id604 . -42) (undo-tree-id605 . -42) (undo-tree-id606 . -42) (undo-tree-id607 . -42) (undo-tree-id608 . -42) (undo-tree-id609 . 44) (undo-tree-id610 . -52) (undo-tree-id611 . -52) (undo-tree-id612 . -52) (undo-tree-id613 . -2) (undo-tree-id614 . -66) (undo-tree-id615 . -66) (undo-tree-id616 . -66) (undo-tree-id617 . -66) (undo-tree-id618 . -66) (undo-tree-id619 . -66) (undo-tree-id620 . -66) (undo-tree-id621 . -66) (undo-tree-id622 . -66) (undo-tree-id623 . -66) (undo-tree-id624 . -66) (undo-tree-id625 . -66) (undo-tree-id626 . -66) (undo-tree-id627 . -66) (undo-tree-id628 . -66) (undo-tree-id629 . -66) (undo-tree-id630 . -66) (undo-tree-id631 . -66) (undo-tree-id632 . -66) (undo-tree-id633 . -66) (undo-tree-id634 . -66) (undo-tree-id635 . -66) (undo-tree-id636 . -66) (undo-tree-id637 . -66) (undo-tree-id638 . -66) (undo-tree-id639 . -66) (undo-tree-id640 . -66) (undo-tree-id641 . -66) (undo-tree-id642 . -66) (undo-tree-id643 . -66) (undo-tree-id644 . -66) (undo-tree-id645 . -66) (undo-tree-id646 . -66) (undo-tree-id647 . -66) (undo-tree-id648 . -66) (undo-tree-id649 . -66) (undo-tree-id650 . -66) (undo-tree-id651 . -66) (undo-tree-id652 . -66) (undo-tree-id653 . -66) (undo-tree-id654 . -66) (undo-tree-id655 . -66) (undo-tree-id656 . -66) (undo-tree-id657 . -66) (undo-tree-id658 . -66) (undo-tree-id659 . -66) (undo-tree-id660 . -66) (undo-tree-id661 . -66) (undo-tree-id662 . -66) (undo-tree-id663 . -66) (undo-tree-id664 . -67) (undo-tree-id665 . -67) (undo-tree-id666 . -52) (undo-tree-id667 . -66) (undo-tree-id668 . -67) (undo-tree-id669 . -67) (undo-tree-id670 . -53) (undo-tree-id671 . -67) (undo-tree-id672 . -67) (undo-tree-id673 . -66) (undo-tree-id674 . -53) (undo-tree-id675 . -67) (undo-tree-id676 . -67) (undo-tree-id677 . -67) (undo-tree-id678 . -67) (undo-tree-id679 . -67) (undo-tree-id680 . -67) (undo-tree-id681 . -67) (undo-tree-id682 . -67) (undo-tree-id683 . -67) (undo-tree-id684 . -67) (undo-tree-id685 . -67) (undo-tree-id686 . -67) (undo-tree-id687 . -67) (undo-tree-id688 . -67) (undo-tree-id689 . -89) (undo-tree-id690 . -89) (undo-tree-id691 . -89) (undo-tree-id692 . -89) (undo-tree-id693 . -89) (undo-tree-id694 . -71) (undo-tree-id695 . -71) (undo-tree-id696 . -71) (undo-tree-id697 . -38) (undo-tree-id698 . -37) (undo-tree-id699 . -2) (undo-tree-id700 . -2) (undo-tree-id701 . -2) (undo-tree-id702 . -2) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -53) (undo-tree-id707 . -89) (t 25953 60135 321297 897000)) nil (25953 60146 539399 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1175) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) 1176) nil (25953 60146 539224 0) 0 nil])
([nil nil ((1174 . 1176) (t 25953 60146 543681 120000)) nil (25953 60235 84165 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1249 . 1250) (nil fontified nil 1249 . 1250) (nil fontified nil 1247 . 1249) (nil fontified nil 1241 . 1247) (nil fontified nil 1239 . 1241) (nil fontified nil 1232 . 1239) (nil fontified nil 1228 . 1232) (nil fontified nil 1225 . 1228) (nil fontified nil 1218 . 1225) (nil fontified nil 1217 . 1218) (nil fontified nil 1211 . 1217) (nil fontified nil 1210 . 1211) (nil fontified nil 1176 . 1210) (1176 . 1250)) nil (25953 60235 84163 0) 0 nil])
([nil nil ((#("Payload" 0 7 (face font-lock-type-face fontified t)) . -1218) (undo-tree-id838 . -6) (undo-tree-id839 . -7) (undo-tree-id840 . -6) 1225) nil (25953 60235 84159 0) 0 nil])
([nil nil ((1218 . 1224)) nil (25953 60235 84154 0) 0 nil])
([nil nil ((#("D" 0 1 (face font-lock-type-face fontified t)) . -1222) (undo-tree-id836 . -1) (#("A" 0 1 (face font-lock-type-face fontified t)) . -1223) (undo-tree-id837 . -1) 1224) nil (25953 60235 84153 0) 0 nil])
([nil nil ((1222 . 1225)) nil (25953 60235 84150 0) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-type-face fontified t)) . -1224) (undo-tree-id835 . -1) 1225) nil (25953 60235 84149 0) 0 nil])
([nil nil ((1224 . 1226)) nil (25953 60235 84146 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-type-face fontified t)) . -1222) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) 1223) nil (25953 60235 84145 0) 0 nil])
([nil nil ((1222 . 1223)) nil (25953 60235 84141 0) 0 nil])
([nil nil ((#("String," 0 6 (face font-lock-type-face fontified t) 6 7 (fontified t)) . -1242) (undo-tree-id828 . -7) (undo-tree-id829 . -7) (undo-tree-id830 . -7) (undo-tree-id831 . -7) 1249) nil (25953 60235 84140 0) 0 nil])
([nil nil ((#("message: " 0 7 (face font-lock-variable-name-face fontified t) 7 9 (fontified t)) . -1233) (undo-tree-id824 . -9) (undo-tree-id825 . -9) (undo-tree-id826 . -9) (undo-tree-id827 . -9) 1242) nil (25953 60235 84135 0) 0 nil])
([nil nil ((1233 . 1234)) nil (25953 60235 84130 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -1233) (undo-tree-id822 . -1) (undo-tree-id823 . -1) 1234) nil (25953 60235 84129 0) 0 nil])
([nil nil ((1233 . 1234)) nil (25953 60235 84125 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1233) (undo-tree-id820 . -1) (undo-tree-id821 . -1) 1234) nil (25953 60235 84124 0) 0 nil])
([nil nil ((1233 . 1234)) nil (25953 60235 84121 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1233) (undo-tree-id818 . -1) (undo-tree-id819 . -1) 1234) nil (25953 60235 84120 0) 0 nil])
([nil nil ((1233 . 1235)) nil (25953 60235 84117 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -1233) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (#("a" 0 1 (fontified t)) . -1234) (undo-tree-id816 . -1) (undo-tree-id817 . -1) 1235) nil (25953 60235 84116 0) 0 nil])
([nil nil ((1233 . 1244)) nil (25953 60235 84109 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -1243) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) 1244) nil (25953 60235 84108 0) 0 nil])
([nil nil ((1243 . 1244)) nil (25953 60235 84100 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -1243) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) 1244) nil (25953 60235 84099 0) 0 nil])
([nil nil ((1243 . 1244)) nil (25953 60235 84092 0) 0 nil])
([nil nil ((1244 . 1249)) nil (25953 60235 84091 0) 0 nil])
([nil nil ((1249 . 1253)) nil (25953 60235 84090 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1249) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (#("a" 0 1 (fontified t)) . -1250) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (#("t" 0 1 (fontified t)) . -1251) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (#("a" 0 1 (fontified t)) . -1252) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) 1253) nil (25953 60235 84085 0) 0 nil])
([nil nil ((1249 . 1256)) nil (25953 60235 84004 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1255) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) 1256) nil (25953 60235 84002 0) 0 nil])
([nil nil ((1255 . 1257)) nil (25953 60235 83992 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -1256) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) 1257) nil (25953 60306 701331 0) 0 nil])
([nil nil ((1256 . 1260)) nil (25953 60309 409497 0) 0 nil] [nil nil ((1256 . 1260)) ((#("u32," 0 3 (face font-lock-type-face fontified t) 3 4 (fontified t)) . 1256) (t 25953 60235 88962 525000)) (25953 60306 506227 0) 0 nil])
([nil nil ((#("			    let adc_data_num = state.lock().await.key_monitor as usize;
			    output_tx.send(adc_data[adc_data_num].to_string()).await.unwrap();" 0 7 (fontified t) 7 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 23 (face font-lock-variable-name-face fontified t) 23 39 (fontified t) 39 44 (face font-lock-keyword-face fontified t) 44 57 (fontified t) 57 59 (face font-lock-keyword-face fontified t) 59 60 (fontified t) 60 65 (face font-lock-type-face fontified t) 65 67 (fontified t) 67 125 (fontified t) 125 130 (face font-lock-keyword-face fontified t) 130 140 (fontified t)) . 4809) (undo-tree-id1368 . -140) (undo-tree-id1369 . -66) (undo-tree-id1370 . -140) (undo-tree-id1371 . -140) (undo-tree-id1372 . -140) (undo-tree-id1373 . -140) (undo-tree-id1374 . -140) (undo-tree-id1375 . -140) (undo-tree-id1376 . -140) (undo-tree-id1377 . -139) (undo-tree-id1378 . -135) (undo-tree-id1379 . -133) (undo-tree-id1380 . -128) (undo-tree-id1381 . -124) (undo-tree-id1382 . -120) (undo-tree-id1383 . -118) (undo-tree-id1384 . -115) (undo-tree-id1385 . -111) (undo-tree-id1386 . -109) (undo-tree-id1387 . -107) (undo-tree-id1388 . -104) (undo-tree-id1389 . -103) (undo-tree-id1390 . -100) (undo-tree-id1391 . -97) (undo-tree-id1392 . -95) (undo-tree-id1393 . -94) (undo-tree-id1394 . -92) (undo-tree-id1395 . -91) (undo-tree-id1396 . -90) (undo-tree-id1397 . -22) (undo-tree-id1398 . -21) (undo-tree-id1399 . -20) (undo-tree-id1400 . -19) (undo-tree-id1401 . -18) (undo-tree-id1402 . -17) (undo-tree-id1403 . -16) (undo-tree-id1404 . -67) (undo-tree-id1405 . -140) (t 25953 60309 414647 494000)) nil (25953 60395 816679 0) 0 nil])
([nil nil ((#("			    output_tx.send(adc_data[adc_data_num].to_string()).await.unwrap();
" 0 58 (fontified t) 58 63 (face font-lock-keyword-face fontified t) 63 74 (fontified t)) . 4876) (undo-tree-id841 . -74) (undo-tree-id842 . -74) (undo-tree-id843 . -73) (undo-tree-id844 . -73) (undo-tree-id845 . -73) (undo-tree-id846 . -73) (undo-tree-id847 . -73) (undo-tree-id848 . -73) (undo-tree-id849 . -73) (undo-tree-id850 . -72) (undo-tree-id851 . -68) (undo-tree-id852 . -31) (undo-tree-id853 . -29) (undo-tree-id854 . -27) (undo-tree-id855 . -26) (undo-tree-id856 . -24) (undo-tree-id857 . -23) (undo-tree-id858 . -21) (undo-tree-id859 . -20) (undo-tree-id860 . -73) (undo-tree-id861 . -73) (undo-tree-id862 . -73) (undo-tree-id863 . -73) (undo-tree-id864 . -73) (undo-tree-id865 . -73) (undo-tree-id866 . -73) (undo-tree-id867 . -73) (undo-tree-id868 . -72) (undo-tree-id869 . -68) (undo-tree-id870 . -64) (undo-tree-id871 . -60) (undo-tree-id872 . -57) (undo-tree-id873 . -54) (undo-tree-id874 . -52) (undo-tree-id875 . -49) (undo-tree-id876 . -48) (undo-tree-id877 . -46) (undo-tree-id878 . -73) (undo-tree-id879 . -73) (undo-tree-id880 . -73) (undo-tree-id881 . -2) (undo-tree-id882 . -2) (undo-tree-id883 . -2) (undo-tree-id884 . -2) (undo-tree-id885 . -2) (undo-tree-id886 . -2) (undo-tree-id887 . -2) (undo-tree-id888 . -2) (undo-tree-id889 . -2) (undo-tree-id890 . -2) (undo-tree-id891 . -2) (undo-tree-id892 . -2) (undo-tree-id893 . -2) (undo-tree-id894 . -7) (undo-tree-id895 . -7) (undo-tree-id896 . -7) (undo-tree-id897 . -7) (undo-tree-id898 . -73) (undo-tree-id899 . -7) (undo-tree-id900 . -7) (undo-tree-id901 . -7) (undo-tree-id902 . -7) (undo-tree-id903 . -74) (undo-tree-id904 . -74) (undo-tree-id905 . -74) (undo-tree-id906 . -74) (undo-tree-id907 . -74) (undo-tree-id908 . -74) (undo-tree-id909 . -74) (undo-tree-id910 . -74) (undo-tree-id911 . -74) (undo-tree-id912 . -74) (undo-tree-id913 . -74) (undo-tree-id914 . -74) (undo-tree-id915 . -74) (undo-tree-id916 . -74) 4950 (t 25953 60235 88962 525000)) ((4876 . 4950)) (25953 60306 505599 0) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . -4763) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) 4764) nil (25953 60416 728469 0) 0 nil] [nil nil ((#("			send_interval+=1;
			if send_interval>8 {send_interval=0;}
			if send_interval==0 {

			    
			}" 0 24 (fontified t) 24 26 (face font-lock-keyword-face fontified t) 26 40 (fontified t) 40 41 (fontified t syntax-table (1)) 41 65 (fontified t) 65 67 (face font-lock-keyword-face fontified t) 67 87 (fontified t) 87 88 (fontified t) 88 96 (fontified t) 96 100 (fontified t)) . 4722) (undo-tree-id1268 . -100) (undo-tree-id1269 . -86) (undo-tree-id1270 . -87) (undo-tree-id1271 . -100) (undo-tree-id1272 . -100) (undo-tree-id1273 . -87) (undo-tree-id1274 . -87) (undo-tree-id1275 . -87) (undo-tree-id1276 . -87) (undo-tree-id1277 . -87) (undo-tree-id1278 . -87) (undo-tree-id1279 . -87) (undo-tree-id1280 . -87) (undo-tree-id1281 . -87) (undo-tree-id1282 . -87) (undo-tree-id1283 . -87) (undo-tree-id1284 . -87) (undo-tree-id1285 . -87) (undo-tree-id1286 . -87) (undo-tree-id1287 . -87) (undo-tree-id1288 . -87) (undo-tree-id1289 . -87) (undo-tree-id1290 . -87) (undo-tree-id1291 . -87) (undo-tree-id1292 . -87) (undo-tree-id1293 . -87) (undo-tree-id1294 . -87) (undo-tree-id1295 . -87) (undo-tree-id1296 . -87) (undo-tree-id1297 . -87) (undo-tree-id1298 . -87) (undo-tree-id1299 . -87) (undo-tree-id1300 . -87) (undo-tree-id1301 . -87) (undo-tree-id1302 . -87) (undo-tree-id1303 . -87) (undo-tree-id1304 . -87) (undo-tree-id1305 . -87) (undo-tree-id1306 . -87) (undo-tree-id1307 . -76) (undo-tree-id1308 . -75) (undo-tree-id1309 . -74) (undo-tree-id1310 . -72) (undo-tree-id1311 . -70) (undo-tree-id1312 . -69) (undo-tree-id1313 . -68) (undo-tree-id1314 . -67) (undo-tree-id1315 . -66) (undo-tree-id1316 . -65) (undo-tree-id1317 . -64) (undo-tree-id1318 . -63) (undo-tree-id1319 . -87) (undo-tree-id1320 . -87) (undo-tree-id1321 . -87) (undo-tree-id1322 . -87) (undo-tree-id1323 . -87) (undo-tree-id1324 . -87) (undo-tree-id1325 . -87) (undo-tree-id1326 . -87) (undo-tree-id1327 . -87) (undo-tree-id1328 . -87) (undo-tree-id1329 . -87) (undo-tree-id1330 . -87) (undo-tree-id1331 . -87) (undo-tree-id1332 . -87) (undo-tree-id1333 . -87) (undo-tree-id1334 . -87) (undo-tree-id1335 . -87) (undo-tree-id1336 . -100) (undo-tree-id1337 . -100) (undo-tree-id1338 . -100) (undo-tree-id1339 . -100) (undo-tree-id1340 . -100) (undo-tree-id1341 . -100) (undo-tree-id1342 . -100) (undo-tree-id1343 . -100) (undo-tree-id1344 . -100) (undo-tree-id1345 . -100) (undo-tree-id1346 . -100) (undo-tree-id1347 . -100) (undo-tree-id1348 . -100) (undo-tree-id1349 . -100) (undo-tree-id1350 . -100) (undo-tree-id1351 . -100) (undo-tree-id1352 . -100) (undo-tree-id1353 . -100) (undo-tree-id1354 . -100) (undo-tree-id1355 . -100) (undo-tree-id1356 . -100) (undo-tree-id1357 . -100) (undo-tree-id1358 . -100) (undo-tree-id1359 . -100) (undo-tree-id1360 . -100) (undo-tree-id1361 . -93) (undo-tree-id1362 . -92) (undo-tree-id1363 . -87) (undo-tree-id1364 . -64) (undo-tree-id1365 . -22) (undo-tree-id1366 . -87) (undo-tree-id1367 . -100)) ((4722 . 4822)) (25953 60395 392743 0) 0 nil])
nil
([nil nil ((4763 . 4765)) nil (25953 60416 728453 0) 0 nil])
([nil nil ((4722 . 4725)) ((#("			" 0 3 (fontified t)) . 4722) (undo-tree-id1758 . -3) (undo-tree-id1759 . -3) (undo-tree-id1760 . -3) (undo-tree-id1761 . -3) (undo-tree-id1762 . -3) (undo-tree-id1763 . -3) (undo-tree-id1764 . -3) (undo-tree-id1765 . -3) (undo-tree-id1766 . -3) (undo-tree-id1767 . -3) (undo-tree-id1768 . -3) (undo-tree-id1769 . -3) (undo-tree-id1770 . -3) (undo-tree-id1771 . -3) (undo-tree-id1772 . -3) (undo-tree-id1773 . -3) (undo-tree-id1774 . -3) (undo-tree-id1775 . -3) (undo-tree-id1776 . -3) (undo-tree-id1777 . -3) (undo-tree-id1778 . -3) (undo-tree-id1779 . -3) (undo-tree-id1780 . -3) (undo-tree-id1781 . -3) (undo-tree-id1782 . -3) (undo-tree-id1783 . -3) (undo-tree-id1784 . -3) (undo-tree-id1785 . -3) (undo-tree-id1786 . -3) (undo-tree-id1787 . -3) (undo-tree-id1788 . -3) (undo-tree-id1789 . -3) (undo-tree-id1790 . -3) (undo-tree-id1791 . -3) (undo-tree-id1792 . -3) (undo-tree-id1793 . -3) (undo-tree-id1794 . -3) (undo-tree-id1795 . -3) (undo-tree-id1796 . -3) (undo-tree-id1797 . -3) (undo-tree-id1798 . -3) (undo-tree-id1799 . -3) (undo-tree-id1800 . -3) (undo-tree-id1801 . -3) (undo-tree-id1802 . -3) (undo-tree-id1803 . -3) (undo-tree-id1804 . -3) (undo-tree-id1805 . -3) (undo-tree-id1806 . -3) (undo-tree-id1807 . -3) (undo-tree-id1808 . -3) (undo-tree-id1809 . -3) (undo-tree-id1810 . -3) (undo-tree-id1811 . -3) (undo-tree-id1812 . -3) (undo-tree-id1813 . -3) (undo-tree-id1814 . -3) (undo-tree-id1815 . -3) (undo-tree-id1816 . -3) (undo-tree-id1817 . -3) (undo-tree-id1818 . -3) (undo-tree-id1819 . -3) (undo-tree-id1820 . -3) (undo-tree-id1821 . -3) (undo-tree-id1822 . -3) (undo-tree-id1823 . -3) (undo-tree-id1824 . -3) (undo-tree-id1825 . -3) (undo-tree-id1826 . -3) (undo-tree-id1827 . -3) (undo-tree-id1828 . -3) (undo-tree-id1829 . -3) (undo-tree-id1830 . -3) (undo-tree-id1831 . -3) (undo-tree-id1832 . -3) (undo-tree-id1833 . -3) (undo-tree-id1834 . -3) (undo-tree-id1835 . -3) (undo-tree-id1836 . -3) (undo-tree-id1837 . -3) (undo-tree-id1838 . -3) (undo-tree-id1839 . -3) (undo-tree-id1840 . -3) (undo-tree-id1841 . -3) (undo-tree-id1842 . -3) (undo-tree-id1843 . -3) (undo-tree-id1844 . -3) (undo-tree-id1845 . -3) (undo-tree-id1846 . -3) (undo-tree-id1847 . -3) (undo-tree-id1848 . -3) (undo-tree-id1849 . -3) (undo-tree-id1850 . -3) (undo-tree-id1851 . -3) (undo-tree-id1852 . -3) (undo-tree-id1853 . -3) (undo-tree-id1854 . -3) (undo-tree-id1855 . -3) (undo-tree-id1856 . -3) (undo-tree-id1857 . -3) (undo-tree-id1858 . -3) (undo-tree-id1859 . -3) (undo-tree-id1860 . -3) (undo-tree-id1861 . -3) (undo-tree-id1862 . -3) (undo-tree-id1863 . -3) (undo-tree-id1864 . -3) (undo-tree-id1865 . -3) (undo-tree-id1866 . -3) (undo-tree-id1867 . -3) (undo-tree-id1868 . -3) (undo-tree-id1869 . -3) (undo-tree-id1870 . -3) (undo-tree-id1871 . -3) (undo-tree-id1872 . -3) (undo-tree-id1873 . -3) (undo-tree-id1874 . -3) (undo-tree-id1875 . -3) (undo-tree-id1876 . -3) (undo-tree-id1877 . -3) (undo-tree-id1878 . -3) (undo-tree-id1879 . -3) (undo-tree-id1880 . -3) (undo-tree-id1881 . -3) (undo-tree-id1882 . -3) (undo-tree-id1883 . -3) (undo-tree-id1884 . -3) (undo-tree-id1885 . -3) (undo-tree-id1886 . -3) (undo-tree-id1887 . -3) (undo-tree-id1888 . -3) (undo-tree-id1889 . -3) (undo-tree-id1890 . -3) (undo-tree-id1891 . -3) (undo-tree-id1892 . -3) (undo-tree-id1893 . -3) (undo-tree-id1894 . -3) (undo-tree-id1895 . -3) (undo-tree-id1896 . -3) (undo-tree-id1897 . -3) (undo-tree-id1898 . -3) (undo-tree-id1899 . -3) (undo-tree-id1900 . -3) (undo-tree-id1901 . -3) (undo-tree-id1902 . -3) (undo-tree-id1903 . -3) (undo-tree-id1904 . -3) (undo-tree-id1905 . -3) (undo-tree-id1906 . -3) (undo-tree-id1907 . -3) (undo-tree-id1908 . -3) (undo-tree-id1909 . -3) (undo-tree-id1910 . -3) (undo-tree-id1911 . -3) (undo-tree-id1912 . -3) (undo-tree-id1913 . -3) (undo-tree-id1914 . -3) (undo-tree-id1915 . -3) (undo-tree-id1916 . -3) (undo-tree-id1917 . -3) (undo-tree-id1918 . -3) (undo-tree-id1919 . -3) (undo-tree-id1920 . -3) (undo-tree-id1921 . -3) (undo-tree-id1922 . -3) (undo-tree-id1923 . -3) (undo-tree-id1924 . -3) (undo-tree-id1925 . -3) (undo-tree-id1926 . -3) (undo-tree-id1927 . -3) (undo-tree-id1928 . -3) (undo-tree-id1929 . -3) (undo-tree-id1930 . -3) (undo-tree-id1931 . -3) (undo-tree-id1932 . -3) (undo-tree-id1933 . -3) (undo-tree-id1934 . -3) (undo-tree-id1935 . -3) (undo-tree-id1936 . -3) (undo-tree-id1937 . -3) (undo-tree-id1938 . -3) (undo-tree-id1939 . -3) (undo-tree-id1940 . -3) (undo-tree-id1941 . -3)) (25953 60395 308959 0) 0 nil])
([nil nil ((4763 . 4764)) nil (25953 60416 728452 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 4864 . 4865) (nil fontified nil 4855 . 4865) (nil fontified nil 4850 . 4855) (nil fontified nil 4792 . 4850) (nil fontified nil 4790 . 4792) (nil fontified nil 4785 . 4790) (nil fontified nil 4784 . 4785) (nil fontified nil 4782 . 4784) (nil fontified nil 4769 . 4782) (nil fontified nil 4764 . 4769) (nil fontified nil 4748 . 4764) (nil fontified nil 4736 . 4748) (nil fontified nil 4735 . 4736) (nil fontified nil 4732 . 4735) (nil fontified nil 4725 . 4732) (4725 . 4865)) ((#("			    let adc_data_num = state.lock().await.key_monitor as usize;
			    output_tx.send(adc_data[adc_data_num].to_string()).await.unwrap();" 0 7 (fontified nil) 7 10 (face font-lock-keyword-face fontified nil) 10 11 (fontified nil) 11 23 (face font-lock-variable-name-face fontified nil) 23 39 (fontified nil) 39 44 (face font-lock-keyword-face fontified nil) 44 57 (fontified nil) 57 59 (face font-lock-keyword-face fontified nil) 59 60 (fontified nil) 60 65 (face font-lock-type-face fontified nil) 65 67 (fontified nil) 67 70 (fontified nil) 70 74 (fontified nil) 74 89 (fontified nil) 89 111 (fontified nil) 111 112 (fontified nil) 112 113 (fontified nil) 113 114 (fontified nil) 114 115 (fontified nil) 115 123 (fontified nil) 123 125 (fontified nil) 125 130 (face font-lock-keyword-face fontified nil) 130 139 (fontified nil) 139 140 (rear-nonsticky nil fontified nil)) . 4725) (undo-tree-id1578 . -89) (undo-tree-id1579 . -11) (undo-tree-id1580 . -11) (undo-tree-id1581 . -11) (undo-tree-id1582 . -11) (undo-tree-id1583 . -11) (undo-tree-id1584 . -11) (undo-tree-id1585 . -11) (undo-tree-id1586 . -11) (undo-tree-id1587 . -11) (undo-tree-id1588 . -101) (undo-tree-id1589 . -101) (undo-tree-id1590 . -101) (undo-tree-id1591 . -101) (undo-tree-id1592 . -101) (undo-tree-id1593 . -101) (undo-tree-id1594 . -101) (undo-tree-id1595 . -101) (undo-tree-id1596 . -101) (undo-tree-id1597 . -101) (undo-tree-id1598 . -101) (undo-tree-id1599 . -101) (undo-tree-id1600 . -101) (undo-tree-id1601 . -101) (undo-tree-id1602 . -39) (undo-tree-id1603 . -39) (undo-tree-id1604 . -39) (undo-tree-id1605 . -39) (undo-tree-id1606 . -39) (undo-tree-id1607 . -39) (undo-tree-id1608 . -39) (undo-tree-id1609 . -39) (undo-tree-id1610 . -39) (undo-tree-id1611 . -39) (undo-tree-id1612 . -44) (undo-tree-id1613 . -44) (undo-tree-id1614 . -39) (undo-tree-id1615 . -44) (undo-tree-id1616 . -44) (undo-tree-id1617 . -67) (undo-tree-id1618 . -67) (undo-tree-id1619 . -39) (undo-tree-id1620 . -67) (undo-tree-id1621 . -67) (undo-tree-id1622 . -67) (undo-tree-id1623 . -67) (undo-tree-id1624 . -67) (undo-tree-id1625 . -67) (undo-tree-id1626 . -90) (undo-tree-id1627 . -91) (undo-tree-id1628 . -92) (undo-tree-id1629 . -94) (undo-tree-id1630 . -96) (undo-tree-id1631 . -97) (undo-tree-id1632 . -98) (undo-tree-id1633 . -99) (undo-tree-id1634 . -100) (undo-tree-id1635 . -101) (undo-tree-id1636 . -102) (undo-tree-id1637 . -103) (undo-tree-id1638 . -104) (undo-tree-id1639 . -105) (undo-tree-id1640 . -106) (undo-tree-id1641 . -107) (undo-tree-id1642 . -108) (undo-tree-id1643 . -109) (undo-tree-id1644 . -109) (undo-tree-id1645 . -109) (undo-tree-id1646 . -109) (undo-tree-id1647 . -109) (undo-tree-id1648 . -110) (undo-tree-id1649 . -110) (undo-tree-id1650 . -110) (undo-tree-id1651 . -110) (undo-tree-id1652 . -110) (undo-tree-id1653 . -111) (undo-tree-id1654 . -111) (undo-tree-id1655 . -111) (undo-tree-id1656 . -111) (undo-tree-id1657 . -111) (undo-tree-id1658 . -89) (undo-tree-id1659 . -89) (undo-tree-id1660 . -111) (undo-tree-id1661 . -111) (undo-tree-id1662 . -111) (undo-tree-id1663 . -111) (undo-tree-id1664 . -111) (undo-tree-id1665 . -111) (undo-tree-id1666 . -112) (undo-tree-id1667 . -112) (undo-tree-id1668 . -112) (undo-tree-id1669 . -112) (undo-tree-id1670 . -112) (undo-tree-id1671 . -112) (undo-tree-id1672 . -113) (undo-tree-id1673 . -114) (undo-tree-id1674 . -115) (undo-tree-id1675 . -116) (undo-tree-id1676 . -117) (undo-tree-id1677 . -118) (undo-tree-id1678 . -119) (undo-tree-id1679 . -120) (undo-tree-id1680 . -121) (undo-tree-id1681 . -121) (undo-tree-id1682 . -121) (undo-tree-id1683 . -121) (undo-tree-id1684 . -121) (undo-tree-id1685 . -122) (undo-tree-id1686 . -122) (undo-tree-id1687 . -122) (undo-tree-id1688 . -122) (undo-tree-id1689 . -122) (undo-tree-id1690 . -123) (undo-tree-id1691 . -123) (undo-tree-id1692 . -123) (undo-tree-id1693 . -123) (undo-tree-id1694 . -123) (undo-tree-id1695 . -123) (undo-tree-id1696 . -123) (undo-tree-id1697 . -123) (undo-tree-id1698 . -123) (undo-tree-id1699 . -115) (undo-tree-id1700 . -115) (undo-tree-id1701 . -115) (undo-tree-id1702 . -115) (undo-tree-id1703 . -115) (undo-tree-id1704 . -115) (undo-tree-id1705 . -115) (undo-tree-id1706 . -115) (undo-tree-id1707 . -115) (undo-tree-id1708 . -114) (undo-tree-id1709 . -114) (undo-tree-id1710 . -114) (undo-tree-id1711 . -114) (undo-tree-id1712 . -114) (undo-tree-id1713 . -113) (undo-tree-id1714 . -113) (undo-tree-id1715 . -113) (undo-tree-id1716 . -113) (undo-tree-id1717 . -113) (undo-tree-id1718 . -112) (undo-tree-id1719 . -89) (undo-tree-id1720 . -89) (undo-tree-id1721 . -89) (undo-tree-id1722 . -89) (undo-tree-id1723 . -89) (undo-tree-id1724 . -89) (undo-tree-id1725 . -89) (undo-tree-id1726 . -89) (undo-tree-id1727 . -89) (undo-tree-id1728 . -89) (undo-tree-id1729 . -89) (undo-tree-id1730 . -89) (undo-tree-id1731 . -89) (undo-tree-id1732 . -89) (undo-tree-id1733 . -89) (undo-tree-id1734 . -89) (undo-tree-id1735 . -89) (undo-tree-id1736 . -89) (undo-tree-id1737 . -89) (undo-tree-id1738 . -89) (undo-tree-id1739 . -89) (undo-tree-id1740 . -89) (undo-tree-id1741 . -89) (undo-tree-id1742 . -89) (undo-tree-id1743 . -89) (undo-tree-id1744 . -89) (undo-tree-id1745 . -89) (undo-tree-id1746 . -89) (undo-tree-id1747 . -89) (undo-tree-id1748 . -89) (undo-tree-id1749 . -89) (undo-tree-id1750 . -89) (undo-tree-id1751 . -89) (undo-tree-id1752 . -89) (undo-tree-id1753 . -89) (undo-tree-id1754 . -89) (undo-tree-id1755 . -89) (undo-tree-id1756 . 17) (undo-tree-id1757 . -89) (nil fontified t 4790 . 4792) (nil rear-nonsticky t 4864 . 4865)) (25953 60395 225768 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -4763) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) 4764) nil (25953 60416 728451 0) 0 nil])
([nil nil ((#("			    " 0 7 (fontified t)) . -4725) 4736) ((4725 . 4732)) (25953 60395 142411 0) 0 nil])
([nil nil ((4763 . 4764)) nil (25953 60416 728445 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4788) 4819) ((4788 . 4792)) (25953 60395 59049 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -4763) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) 4764) nil (25953 60416 728443 0) 0 nil])
([nil nil ((#("			let adc_data_num = state.lock().await.key_monitor as usize;
" 0 3 (fontified t) 3 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 19 (face font-lock-variable-name-face fontified t) 19 35 (fontified t) 35 40 (face font-lock-keyword-face fontified t) 40 53 (fontified t) 53 55 (face font-lock-keyword-face fontified t) 55 56 (fontified t) 56 61 (face font-lock-type-face fontified t) 61 63 (fontified t)) . -4722) (undo-tree-id1229 . -63) (undo-tree-id1230 . -63) (undo-tree-id1231 . -3) (undo-tree-id1232 . -3) (undo-tree-id1233 . -3) (undo-tree-id1234 . -3) (undo-tree-id1235 . -7) (undo-tree-id1236 . -7) (undo-tree-id1237 . -7) (undo-tree-id1238 . -7) (undo-tree-id1239 . -7) (undo-tree-id1240 . -7) (undo-tree-id1241 . -7) (undo-tree-id1242 . -35) (undo-tree-id1243 . -35) (undo-tree-id1244 . -35) (undo-tree-id1245 . -35) (undo-tree-id1246 . -35) (undo-tree-id1247 . -35) (undo-tree-id1248 . -35) (undo-tree-id1249 . -35) (undo-tree-id1250 . -35) (undo-tree-id1251 . -35) (undo-tree-id1252 . -40) (undo-tree-id1253 . -40) (undo-tree-id1254 . -3) (undo-tree-id1255 . -35) (undo-tree-id1256 . -40) (undo-tree-id1257 . -40) (undo-tree-id1258 . -63) (undo-tree-id1259 . -63) (undo-tree-id1260 . -35) (undo-tree-id1261 . -63) (undo-tree-id1262 . -63) (undo-tree-id1263 . -63) (undo-tree-id1264 . -63) (undo-tree-id1265 . -63) (undo-tree-id1266 . -63) (undo-tree-id1267 . -63) 4785) ((4722 . 4785)) (25953 60394 975355 0) 0 nil])
([nil nil ((4763 . 4764)) nil (25953 60416 728426 0) 0 nil])
([nil nil ((#("adc_data[adc_data_num]" 0 22 (fontified t)) . -4740) (undo-tree-id1175 . -22) (undo-tree-id1176 . -22) (undo-tree-id1177 . -12) (undo-tree-id1178 . -12) (undo-tree-id1179 . -12) (undo-tree-id1180 . -12) (undo-tree-id1181 . -12) (undo-tree-id1182 . -12) (undo-tree-id1183 . -12) (undo-tree-id1184 . -12) (undo-tree-id1185 . -12) (undo-tree-id1186 . -12) (undo-tree-id1187 . -12) (undo-tree-id1188 . -12) (undo-tree-id1189 . -12) (undo-tree-id1190 . -12) (undo-tree-id1191 . -1) (undo-tree-id1192 . -2) (undo-tree-id1193 . -3) (undo-tree-id1194 . -5) (undo-tree-id1195 . -7) (undo-tree-id1196 . -8) (undo-tree-id1197 . -9) (undo-tree-id1198 . -10) (undo-tree-id1199 . -11) (undo-tree-id1200 . -12) (undo-tree-id1201 . -13) (undo-tree-id1202 . -14) (undo-tree-id1203 . -15) (undo-tree-id1204 . -16) (undo-tree-id1205 . -17) (undo-tree-id1206 . -18) (undo-tree-id1207 . -19) (undo-tree-id1208 . -20) (undo-tree-id1209 . -20) (undo-tree-id1210 . -20) (undo-tree-id1211 . -20) (undo-tree-id1212 . -20) (undo-tree-id1213 . -21) (undo-tree-id1214 . -21) (undo-tree-id1215 . -21) (undo-tree-id1216 . -21) (undo-tree-id1217 . -21) (undo-tree-id1218 . -22) (undo-tree-id1219 . -22) (undo-tree-id1220 . -22) (undo-tree-id1221 . -22) (undo-tree-id1222 . -22) (undo-tree-id1223 . -22) (undo-tree-id1224 . -22) (undo-tree-id1225 . -22) (undo-tree-id1226 . -22) (undo-tree-id1227 . -22) (undo-tree-id1228 . -22) 4762) ((4740 . 4762)) (25953 60394 892422 0) 0 nil])
([nil nil ((#("			if send_interval==0 {

			    
			}" 0 3 (fontified t) 3 5 (face font-lock-keyword-face fontified t) 5 25 (fontified t) 25 26 (fontified t) 26 34 (fontified t) 34 38 (fontified t)) . 4786) (undo-tree-id2057 . -38) (undo-tree-id2058 . -38) (t 25953 60416 737201 963000)) nil (25953 60488 741600 0) 0 nil])
([nil nil ((#("string()" 0 8 (fontified t)) . -4744) (undo-tree-id1149 . -8) (undo-tree-id1150 . -8) (undo-tree-id1151 . -1) (undo-tree-id1152 . -2) (undo-tree-id1153 . -3) (undo-tree-id1154 . -4) (undo-tree-id1155 . -5) (undo-tree-id1156 . -6) (undo-tree-id1157 . -6) (undo-tree-id1158 . -6) (undo-tree-id1159 . -6) (undo-tree-id1160 . -6) (undo-tree-id1161 . -7) (undo-tree-id1162 . -7) (undo-tree-id1163 . -7) (undo-tree-id1164 . -7) (undo-tree-id1165 . -7) (undo-tree-id1166 . -8) (undo-tree-id1167 . -8) (undo-tree-id1168 . -8) (undo-tree-id1169 . -8) (undo-tree-id1170 . -8) (undo-tree-id1171 . -8) (undo-tree-id1172 . -8) (undo-tree-id1173 . -8) (undo-tree-id1174 . -8) 4752) ((4744 . 4752)) (25953 60394 809823 0) 0 nil])
([nil nil ((4786 . 4789)) nil (25953 60488 741597 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -4740) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (#("t" 0 1 (fontified t)) . -4741) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (#("o" 0 1 (fontified t)) . -4742) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (#("_" 0 1 (fontified t)) . -4743) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) 4744) ((4740 . 4744)) (25953 60394 725765 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 4861 . 4862) (nil fontified nil 4789 . 4862) (4789 . 4862)) nil (25953 60488 741596 0) 0 nil])
([nil nil ((4740 . 4743)) ((#("ser" 0 3 (fontified t)) . 4740) (undo-tree-id1569 . -3) (undo-tree-id1570 . -3) (undo-tree-id1571 . -1) (undo-tree-id1572 . -2) (undo-tree-id1573 . -2) (undo-tree-id1574 . -3) (undo-tree-id1575 . -3) (undo-tree-id1576 . -3) (undo-tree-id1577 . -3)) (25953 60394 643132 0) 0 nil])
([nil nil ((#("			    " 0 7 (fontified t)) . -4789) 4804) nil (25953 60488 741595 0) 0 nil])
([nil nil ((4740 . 4750) (#("ser" 0 3 (fontified nil)) . 4740) (4740 . 4743) (#("serde_json" 0 10 (fontified nil)) . -4740) (4740 . 4750) (#("ser" 0 3 (fontified t)) . -4740) (undo-tree-id960 . -3) (undo-tree-id961 . -1) (undo-tree-id962 . -2) (undo-tree-id963 . -2) (undo-tree-id964 . -3) (undo-tree-id965 . -3) (undo-tree-id966 . -3) (undo-tree-id967 . -3) 4743) ((4740 . 4743) (#("serde_json" 0 10 (fontified nil)) . 4740) (4740 . 4750) (#("ser" 0 3 (fontified nil)) . 4740) (4740 . 4743) (#("serde_json" 0 10 (fontified t)) . 4740) (undo-tree-id1536 . -10) (undo-tree-id1537 . -10) (undo-tree-id1538 . -10) (undo-tree-id1539 . -10) (undo-tree-id1540 . -10) (undo-tree-id1541 . -10) (undo-tree-id1542 . -10) (undo-tree-id1543 . -10) (undo-tree-id1544 . -10) (undo-tree-id1545 . -10) (undo-tree-id1546 . -10) (undo-tree-id1547 . -10) (undo-tree-id1548 . -10) (undo-tree-id1549 . -10) (undo-tree-id1550 . -10) (undo-tree-id1551 . -10) (undo-tree-id1552 . -10) (undo-tree-id1553 . -10) (undo-tree-id1554 . -10) (undo-tree-id1555 . -10) (undo-tree-id1556 . -10) (undo-tree-id1557 . -10) (undo-tree-id1558 . -10) (undo-tree-id1559 . -10) (undo-tree-id1560 . -10) (undo-tree-id1561 . -10) (undo-tree-id1562 . -10) (undo-tree-id1563 . -10) (undo-tree-id1564 . -10) (undo-tree-id1565 . -10) (undo-tree-id1566 . -10) (undo-tree-id1567 . -10) (undo-tree-id1568 . -10)) (25953 60394 558561 0) 0 nil])
([nil nil ((#("string()" 0 8 (fontified t)) . -4830) (undo-tree-id2053 . -8) (undo-tree-id2054 . -8) (undo-tree-id2055 . -8) (undo-tree-id2056 . -8) 4838) nil (25953 60488 741593 0) 0 nil])
([nil nil ((4750 . 4753)) ((#("::t" 0 2 (fontified t) 2 3 (fontified t)) . 4750) (undo-tree-id1503 . -3) (undo-tree-id1504 . -3) (undo-tree-id1505 . -3) (undo-tree-id1506 . -3) (undo-tree-id1507 . -2) (undo-tree-id1508 . -2) (undo-tree-id1509 . -2) (undo-tree-id1510 . -2) (undo-tree-id1511 . -2) (undo-tree-id1512 . -2) (undo-tree-id1513 . -2) (undo-tree-id1514 . -2) (undo-tree-id1515 . -2) (undo-tree-id1516 . -2) (undo-tree-id1517 . -2) (undo-tree-id1518 . -2) (undo-tree-id1519 . -2) (undo-tree-id1520 . -2) (undo-tree-id1521 . -2) (undo-tree-id1522 . -2) (undo-tree-id1523 . -2) (undo-tree-id1524 . -2) (undo-tree-id1525 . -2) (undo-tree-id1526 . -2) (undo-tree-id1527 . -2) (undo-tree-id1528 . -2) (undo-tree-id1529 . -2) (undo-tree-id1530 . -2) (undo-tree-id1531 . -2) (undo-tree-id1532 . -2) (undo-tree-id1533 . -2) (undo-tree-id1534 . -2) (undo-tree-id1535 . -2)) (25953 60394 475845 0) 0 nil])
([nil nil ((#("to_" 0 3 (fontified t)) . -4827) (undo-tree-id2049 . -3) (undo-tree-id2050 . -3) (undo-tree-id2051 . -3) (undo-tree-id2052 . -3) 4830) nil (25953 60488 741588 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -4752) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) 4753) ((4752 . 4753)) (25953 60394 391809 0) 0 nil])
([nil nil ((#("num]." 0 5 (fontified t)) . -4822) (undo-tree-id2045 . -5) (undo-tree-id2046 . -5) (undo-tree-id2047 . -5) (undo-tree-id2048 . -5) 4827) nil (25953 60488 741583 0) 0 nil])
([nil nil ((4752 . 4753)) ((#("f" 0 1 (fontified t)) . 4752) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1)) (25953 60394 308964 0) 0 nil])
([nil nil ((#("data_" 0 5 (fontified t)) . -4817) (undo-tree-id2041 . -5) (undo-tree-id2042 . -5) (undo-tree-id2043 . -5) (undo-tree-id2044 . -5) 4822) nil (25953 60488 741577 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -4752) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) 4753) ((4752 . 4753)) (25953 60394 224835 0) 0 nil])
([nil nil ((#("adc_" 0 4 (fontified t)) . -4813) (undo-tree-id2037 . -4) (undo-tree-id2038 . -4) (undo-tree-id2039 . -4) (undo-tree-id2040 . -4) 4817) nil (25953 60488 741572 0) 0 nil])
([nil nil ((4752 . 4753)) ((#("t" 0 1 (fontified t)) . 4752) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1)) (25953 60394 140856 0) 0 nil])
([nil nil ((#("data[" 0 5 (fontified t)) . -4808) (undo-tree-id2033 . -5) (undo-tree-id2034 . -5) (undo-tree-id2035 . -5) (undo-tree-id2036 . -5) 4813) nil (25953 60488 741566 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -4752) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) 4753) ((4752 . 4753)) (25953 60394 57001 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4804) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (#("d" 0 1 (fontified t)) . -4805) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (#("c" 0 1 (fontified t)) . -4806) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (#("_" 0 1 (fontified t)) . -4807) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) 4808) nil (25953 60488 741560 0) 0 nil])
([nil nil ((4752 . 4754)) ((#("to" 0 2 (fontified t)) . 4752) (undo-tree-id1483 . -2) (undo-tree-id1484 . -2) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -2) (undo-tree-id1488 . -2) (undo-tree-id1489 . -2) (undo-tree-id1490 . -2)) (25953 60394 9369 0) 0 nil])
([nil nil ((4804 . 4805)) nil (25953 60488 741539 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 4762 4767 nil nil nil t #s(yas--exit 4768 nil))) #s(yas--exit 4768 nil) 15 nil #s(yas--field 1 4762 4767 nil nil nil t #s(yas--exit 4768 nil)) nil nil)) (4752 . 4768) (#("to_string(${1:value})$0" 0 23 (fontified nil)) . 4752) (4752 . 4775) (#("to" 0 2 (fontified nil)) . 4752) (4752 . 4754) (#("to_string(…)" 0 12 (fontified nil)) . -4752) (4752 . 4764) (#("to" 0 2 (fontified t)) . -4752) (undo-tree-id940 . -2) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -2) (undo-tree-id944 . -2) (undo-tree-id945 . -2) (undo-tree-id946 . -2) 4754) ((4752 . 4754) (#("to_string(…)" 0 12 (fontified nil)) . 4752) (4752 . 4764) (#("to" 0 2 (fontified nil)) . 4752) (4752 . 4754) (#("to_string(${1:value})$0" 0 23 (fontified nil)) . 4752) (4752 . 4775) (#("to_string(value)" 0 10 (fontified t) 10 15 (fontified t) 15 16 (fontified t)) . 4752) (undo-tree-id1465 . -10) (undo-tree-id1466 . -10) (undo-tree-id1467 . -10) (undo-tree-id1468 . -10) (undo-tree-id1469 . -10) (undo-tree-id1470 . -10) (undo-tree-id1471 . -10) (undo-tree-id1472 . -10) (undo-tree-id1473 . -10) (undo-tree-id1474 . -10) (undo-tree-id1475 . -10) (undo-tree-id1476 . -10) (undo-tree-id1477 . -10) (undo-tree-id1478 . -10) (undo-tree-id1479 . -10) (undo-tree-id1480 . -10) (undo-tree-id1481 . 1) (undo-tree-id1482 . -10) (apply yas--snippet-revive 4752 4768 #s(yas--snippet nil (#s(yas--field 1 4762 4767 nil nil nil t #s(yas--exit 4768 nil))) #s(yas--exit 4768 nil) 15 nil #s(yas--field 1 4762 4767 nil nil nil t #s(yas--exit 4768 nil)) nil nil))) (25953 60393 473975 0) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-type-face fontified t)) . -4804) (undo-tree-id2016 . -1) 4805) nil (25953 60488 741538 0) 0 nil])
([nil nil ((4763 . 4764) (#("value" 0 5 (fontified nil)) . 4763) (undo-tree-id939 . -5) (4762 . 4763)) ((#("A" 0 1 (face font-lock-type-face fontified nil)) . 4762) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (4763 . 4768) (#("D" 0 1 (face font-lock-type-face fontified t)) . 4763) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1)) (25953 60393 351899 0) 0 nil])
([nil nil ((4804 . 4805)) nil (25953 60488 741535 0) 0 nil])
([nil nil ((4762 . 4770) (#("AD" 0 2 (fontified nil)) . 4762) (undo-tree-id929 . -2) (4762 . 4764) (#("ADC_Data" 0 8 (fontified nil)) . -4762) (undo-tree-id930 . -8) (4762 . 4770) (#("AD" 0 2 (face font-lock-type-face fontified t)) . -4762) (undo-tree-id931 . -2) (undo-tree-id932 . -2) (undo-tree-id933 . -2) (undo-tree-id934 . -1) (undo-tree-id935 . -2) (undo-tree-id936 . -2) (undo-tree-id937 . -2) (undo-tree-id938 . -2) 4764) ((4762 . 4764) (#("ADC_Data" 0 8 (fontified nil)) . 4762) (undo-tree-id1437 . -8) (4762 . 4770) (#("AD" 0 2 (fontified nil)) . 4762) (undo-tree-id1438 . -2) (4762 . 4764) (#("ADC_Data" 0 8 (face font-lock-type-face fontified t)) . 4762) (undo-tree-id1439 . -8) (undo-tree-id1440 . -8) (undo-tree-id1441 . -8) (undo-tree-id1442 . -8) (undo-tree-id1443 . -8) (undo-tree-id1444 . -8) (undo-tree-id1445 . -8) (undo-tree-id1446 . -8) (undo-tree-id1447 . -8) (undo-tree-id1448 . -8) (undo-tree-id1449 . -8) (undo-tree-id1450 . -8)) (25953 60393 187746 0) 0 nil])
([nil nil ((#("T" 0 1 (face font-lock-type-face fontified t)) . -4804) (undo-tree-id2015 . -1) 4805) nil (25953 60488 741534 0) 0 nil])
([nil nil ((4770 . 4772)) ((#("{}" 0 1 (fontified t) 1 2 (fontified t)) . 4770) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -2) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . 1) (undo-tree-id1436 . -1)) (25953 60393 34384 0) 0 nil])
([nil nil ((4804 . 4805)) nil (25953 60488 741532 0) 0 nil])
([nil nil ((4771 . 4772)) ((#("v" 0 1 (fontified t)) . 4771) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1)) (25953 60392 874170 0) 0 nil])
([nil nil ((#("K" 0 1 (face font-lock-type-face fontified t)) . -4804) (undo-tree-id2014 . -1) 4805) nil (25953 60488 741531 0) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -4771) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) 4772) ((4771 . 4772)) (25953 60392 543269 0) 0 nil])
([nil nil ((4804 . 4805)) nil (25953 60488 741528 0) 0 nil])
([nil nil ((4771 . 4772)) ((#("i" 0 1 (fontified t)) . 4771) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1)) (25953 60392 392907 0) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-type-face fontified t)) . -4804) (undo-tree-id2013 . -1) 4805) nil (25953 60488 741527 0) 0 nil])
([nil nil ((4771 . 4776) (#("i" 0 1 (fontified nil)) . 4771) (4771 . 4772) (#("index" 0 5 (fontified nil)) . -4771) (4771 . 4776) (#("i" 0 1 (fontified t)) . -4771) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) 4772) ((4771 . 4772) (#("index" 0 5 (fontified nil)) . 4771) (4771 . 4776) (#("i" 0 1 (fontified nil)) . 4771) (4771 . 4772) (#("index" 0 5 (fontified t)) . 4771) (undo-tree-id1409 . -5) (undo-tree-id1410 . -5) (undo-tree-id1411 . -5)) (25953 60392 215033 0) 0 nil])
([nil nil ((4804 . 4807)) nil (25953 60488 741525 0) 0 nil])
([nil nil ((4776 . 4778)) ((#(": " 0 2 (fontified t)) . 4776) (undo-tree-id1406 . -2) (undo-tree-id1407 . -2) (undo-tree-id1408 . -2)) (25953 60391 458313 0) 0 nil])
([nil nil ((4804 . 4814) (#("ser" 0 3 (fontified nil)) . 4804) (4804 . 4807) (#("serde_json" 0 10 (fontified nil)) . -4804) (4804 . 4814) (#("ser" 0 3 (fontified t)) . -4804) (undo-tree-id2012 . -3) 4807) nil (25953 60488 741523 0) 0 nil])
nil
([nil nil ((4814 . 4819)) nil (25953 60488 741520 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -4818) (undo-tree-id2011 . -1) 4819) nil (25953 60488 741519 0) 0 nil])
([nil nil ((4818 . 4819)) nil (25953 60488 741517 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 4826 4897 nil nil nil t #s(yas--exit 4898 nil))) #s(yas--exit 4898 nil) 16 nil #s(yas--field 1 4826 4897 nil nil nil t #s(yas--exit 4898 nil)) nil nil)) (4816 . 4832) (#("to_string(${1:value})$0" 0 23 (fontified nil)) . 4816) (4816 . 4839) (#("to_" 0 3 (fontified nil)) . 4816) (4816 . 4819) (#("to_string(…)" 0 12 (fontified nil)) . -4816) (4816 . 4828) (#("to_" 0 3 (fontified t)) . -4816) (undo-tree-id2010 . -3) 4819) nil (25953 60488 741515 0) 0 nil])
([nil nil ((#("value" 0 5 (fontified nil)) . 4827) (undo-tree-id2009 . -5) (4826 . 4827)) nil (25953 60488 741511 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -4826) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) 4827) nil (25953 60488 741508 0) 0 nil])
([nil nil ((4826 . 4827)) nil (25953 60488 741504 0) 0 nil])
([nil nil ((#("K" 0 1 (face font-lock-type-face fontified t)) . -4826) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) 4827) nil (25953 60488 741502 0) 0 nil])
([nil nil ((4826 . 4828)) nil (25953 60488 741498 0) 0 nil])
([nil nil ((4826 . 4834) (#("AD" 0 2 (fontified nil)) . 4826) (undo-tree-id1998 . -2) (4826 . 4828) (#("ADC_Data" 0 8 (fontified nil)) . -4826) (undo-tree-id1999 . -8) (4826 . 4834) (#("AD" 0 2 (face font-lock-type-face fontified t)) . -4826) (undo-tree-id2000 . -2) (undo-tree-id2001 . -2) (undo-tree-id2002 . -2) 4828) nil (25953 60488 741497 0) 0 nil])
([nil nil ((4834 . 4836)) nil (25953 60488 741490 0) 0 nil])
([nil nil ((4835 . 4837)) nil (25953 60488 741489 0) 0 nil])
([nil nil ((4835 . 4840) (#("in" 0 2 (fontified nil)) . 4835) (4835 . 4837) (#("index" 0 5 (fontified nil)) . -4835) (4835 . 4840) (#("in" 0 2 (face font-lock-keyword-face fontified t)) . -4835) (undo-tree-id1996 . -2) (undo-tree-id1997 . -2) 4837) nil (25953 60488 741487 0) 0 nil])
([nil nil ((4840 . 4845)) nil (25953 60488 741483 0) 0 nil])
([nil nil ((4842 . 4855) (#("sen" 0 3 (fontified nil)) . 4842) (4842 . 4845) (#("send_interval" 0 13 (fontified nil)) . -4842) (4842 . 4855) (#("sen" 0 3 (fontified t)) . -4842) (undo-tree-id1991 . -3) (undo-tree-id1992 . -3) (undo-tree-id1993 . -3) (undo-tree-id1994 . -3) (undo-tree-id1995 . -3) 4845) nil (25953 60488 741481 0) 0 nil])
([nil nil ((4855 . 4858)) nil (25953 60488 741474 0) 0 nil])
([nil nil ((4857 . 4862) (#("v" 0 1 (fontified nil)) . 4857) (4857 . 4858) (#("value" 0 5 (fontified nil)) . -4857) (4857 . 4862) (#("v" 0 1 (fontified t)) . -4857) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) 4858) nil (25953 60488 741472 0) 0 nil])
([nil nil ((4862 . 4867)) nil (25953 60488 741463 0) 0 nil])
([nil nil ((4864 . 4872) (#("adc" 0 3 (fontified nil)) . 4864) (4864 . 4867) (#("adc_data" 0 8 (fontified nil)) . -4864) (4864 . 4872) (#("adc" 0 3 (fontified t)) . -4864) (undo-tree-id1973 . -3) (undo-tree-id1974 . -3) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -2) (undo-tree-id1979 . -2) (undo-tree-id1980 . -3) (undo-tree-id1981 . -3) (undo-tree-id1982 . -3) (undo-tree-id1983 . -3) 4867) nil (25953 60488 741461 0) 0 nil])
([nil nil ((4872 . 4874)) nil (25953 60488 741448 0) 0 nil])
([nil nil ((4873 . 4876)) nil (25953 60488 741447 0) 0 nil])
([nil nil ((4873 . 4886) (#("sen" 0 3 (fontified nil)) . 4873) (4873 . 4876) (#("send_interval" 0 13 (fontified nil)) . -4873) (4873 . 4886) (#("sen" 0 3 (fontified t)) . -4873) (undo-tree-id1964 . -3) (undo-tree-id1965 . -3) (undo-tree-id1966 . -1) (undo-tree-id1967 . -2) (undo-tree-id1968 . -2) (undo-tree-id1969 . -3) (undo-tree-id1970 . -3) (undo-tree-id1971 . -3) (undo-tree-id1972 . -3) 4876) nil (25953 60488 741444 0) 0 nil])
([nil nil ((4886 . 4895)) nil (25953 60488 741424 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4816 4898 #s(yas--snippet nil (#s(yas--field 1 4826 4897 nil nil nil t #s(yas--exit 4898 nil))) #s(yas--exit 4898 nil) 16 nil #s(yas--field 1 4826 4897 nil nil nil t #s(yas--exit 4898 nil)) nil nil))) nil (25953 60488 741419 0) 0 nil])
([nil nil ((4898 . 4900) (t 25953 60488 751080 610000)) nil (25953 60497 936408 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4899 4907 #s(yas--snippet nil nil #s(yas--exit 4907 nil) 17 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 4907 nil) 17 nil nil nil nil)) (4899 . 4907) (#("unwrap()$0" 0 10 (fontified nil)) . 4899) (4899 . 4909) (#("u" 0 1 (fontified nil)) . 4899) (4899 . 4900) (#("unwrap()" 0 8 (fontified nil)) . -4899) (4899 . 4907) (#("u" 0 1 (fontified t)) . -4899) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) 4900) nil (25953 60497 936403 0) 0 nil])
([nil nil ((4804 . 4805) (t 25953 60497 945854 788000)) nil (25953 60505 12272 0) 0 nil])
([nil nil ((#("&" 0 1 (face rust-ampersand-face fontified t)) . -4804) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) 4805 (t 25953 60505 21593 225000)) nil (25953 60514 966726 0) 0 nil])
([nil nil ((4826 . 4827) (t 25953 60514 976207 884000)) nil (25953 61568 634736 0) 0 nil])
([nil nil ((#("runtime" 0 7 (face font-lock-constant-face fontified t)) . -5534) (undo-tree-id2391 . -7) (undo-tree-id2392 . -7) (undo-tree-id2393 . -7) (undo-tree-id2394 . -7) (undo-tree-id2395 . -7) (undo-tree-id2396 . -7) (undo-tree-id2397 . -7) (undo-tree-id2398 . -7) (undo-tree-id2399 . -7) (undo-tree-id2400 . -7) (undo-tree-id2401 . -7) (undo-tree-id2402 . -7) (undo-tree-id2403 . -7) (undo-tree-id2404 . -7) (undo-tree-id2405 . -7) (undo-tree-id2406 . -7) (undo-tree-id2407 . -7) (undo-tree-id2408 . -7) (undo-tree-id2409 . -7) (undo-tree-id2410 . -7) 5541 (t 25953 60536 482327 701000)) nil (25953 64164 993693 0) 0 nil] [nil nil ((4843 . 4844) (t 25953 60536 482327 701000)) ((#(" " 0 1 (fontified t)) . 4843)) (25953 61568 634233 0) 0 nil])
([nil nil ((#("async_" 0 6 (face font-lock-constant-face fontified t)) . -5528) (undo-tree-id2370 . -6) (undo-tree-id2371 . -6) (undo-tree-id2372 . -6) (undo-tree-id2373 . -6) (undo-tree-id2374 . -6) (undo-tree-id2375 . -6) (undo-tree-id2376 . -6) (undo-tree-id2377 . -6) (undo-tree-id2378 . -6) (undo-tree-id2379 . -6) (undo-tree-id2380 . -6) (undo-tree-id2381 . -6) (undo-tree-id2382 . -6) (undo-tree-id2383 . -6) (undo-tree-id2384 . -6) (undo-tree-id2385 . -6) (undo-tree-id2386 . -6) (undo-tree-id2387 . -6) (undo-tree-id2388 . -6) (undo-tree-id2389 . -6) (undo-tree-id2390 . -6) 5534) nil (25953 64164 993671 0) 0 nil])
nil
([nil nil ((#("tauri::" 0 5 (face font-lock-constant-face fontified t) 5 7 (fontified t)) . -5521) (undo-tree-id2342 . -7) (undo-tree-id2343 . -7) (undo-tree-id2344 . -7) (undo-tree-id2345 . -7) (undo-tree-id2346 . -7) (undo-tree-id2347 . -7) (undo-tree-id2348 . -7) (undo-tree-id2349 . -7) (undo-tree-id2350 . -7) (undo-tree-id2351 . -7) (undo-tree-id2352 . -7) (undo-tree-id2353 . -7) (undo-tree-id2354 . -7) (undo-tree-id2355 . -7) (undo-tree-id2356 . -7) (undo-tree-id2357 . -7) (undo-tree-id2358 . -7) (undo-tree-id2359 . -7) (undo-tree-id2360 . -7) (undo-tree-id2361 . -7) (undo-tree-id2362 . -7) (undo-tree-id2363 . -7) (undo-tree-id2364 . -7) (undo-tree-id2365 . -7) (undo-tree-id2366 . -7) (undo-tree-id2367 . -7) (undo-tree-id2368 . -7) (undo-tree-id2369 . -7) 5528) nil (25953 64164 993649 0) 0 nil])
([nil nil ((5521 . 5522)) nil (25953 64164 993621 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-constant-face fontified t)) . -5521) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) 5522) nil (25953 64164 993619 0) 0 nil])
([nil nil ((5521 . 5523)) nil (25953 64164 993616 0) 0 nil])
([nil nil ((5521 . 5527) (#("th" 0 2 (fontified nil)) . 5521) (5521 . 5523) (#("thread" 0 6 (fontified nil)) . -5521) (5521 . 5527) (#("th" 0 2 (face font-lock-constant-face fontified t)) . -5521) (undo-tree-id2334 . -2) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -2) (undo-tree-id2339 . -2) 5523) nil (25953 64164 993614 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -5535) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (#("s" 0 1 (fontified t)) . -5536) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (#("y" 0 1 (fontified t)) . -5537) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (#("n" 0 1 (fontified t)) . -5538) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (#("c" 0 1 (fontified t)) . -5539) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (#(" " 0 1 (fontified t)) . -5540) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) 5541) nil (25953 64164 993595 0) 0 nil])
([nil nil ((5539 . 5542)) nil (25953 64164 993351 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5539) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (#("|" 0 1 (fontified t)) . -5540) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (#("|" 0 1 (fontified t)) . -5541) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) 5542 (t 25953 64165 5509 994000)) nil (25953 64179 495893 0) 0 nil])
([nil nil ((5535 . 5540)) nil (25953 64179 495687 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -5537) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (#("n" 0 1 (fontified t)) . -5538) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (#("c" 0 1 (fontified t)) . -5539) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) 5540) nil (25953 64179 495684 0) 0 nil])
([nil nil ((5537 . 5541)) nil (25953 64179 495655 0) 0 nil])
([nil nil ((5546 . 5548) (t 25953 64179 506452 17000)) nil (25953 64186 1003 0) 0 nil])
([nil nil ((#("async " 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . -5535) (undo-tree-id2643 . -6) (undo-tree-id2644 . -6) (undo-tree-id2645 . -6) (undo-tree-id2646 . -6) (undo-tree-id2647 . -6) (undo-tree-id2648 . -6) (undo-tree-id2649 . -6) (undo-tree-id2650 . -6) (undo-tree-id2651 . -6) (undo-tree-id2652 . -6) (undo-tree-id2653 . -6) (undo-tree-id2654 . -6) (undo-tree-id2655 . -6) (undo-tree-id2656 . -6) (undo-tree-id2657 . -6) (undo-tree-id2658 . -6) 5541 (t 25953 64186 11818 257000)) nil (25953 64190 622039 0) 0 nil])
([nil nil ((#("await" 0 5 (face font-lock-keyword-face fontified t)) . -5615) (undo-tree-id2682 . -5) (undo-tree-id2683 . -5) (undo-tree-id2684 . -5) (undo-tree-id2685 . -5) (undo-tree-id2686 . -5) (undo-tree-id2687 . -5) (undo-tree-id2688 . -5) (undo-tree-id2689 . -5) (undo-tree-id2690 . -5) (undo-tree-id2691 . -5) (undo-tree-id2692 . -5) (undo-tree-id2693 . -5) (undo-tree-id2694 . -5) (undo-tree-id2695 . -5) (undo-tree-id2696 . -5) (undo-tree-id2697 . -5) 5620 (t 25953 64190 633188 331000)) nil (25953 64196 972435 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -5614) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) 5615) nil (25953 64196 972412 0) 0 nil])
([nil nil ((5543 . 5546) (t 25953 64196 983024 463000)) nil (25953 64266 694379 0) 0 nil])
([nil nil ((5546 . 5547)) nil (25953 64266 694377 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -5546) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) 5547) nil (25953 64266 694376 0) 0 nil])
([nil nil ((5546 . 5548)) nil (25953 64266 694373 0) 0 nil])
([nil nil ((5546 . 5551) (#("to" 0 2 (fontified nil)) . 5546) (5546 . 5548) (#("tokio" 0 5 (fontified nil)) . -5546) (5546 . 5551) (#("to" 0 2 (fontified t)) . -5546) (undo-tree-id2789 . -1) (undo-tree-id2790 . -2) 5548) nil (25953 64266 694371 0) 0 nil])
([nil nil ((5551 . 5555)) nil (25953 64266 694367 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -5551) (undo-tree-id2785 . -1) (#(":" 0 1 (fontified t)) . -5552) (undo-tree-id2786 . -1) (#("b" 0 1 (fontified t)) . -5553) (undo-tree-id2787 . -1) (#("l" 0 1 (fontified t)) . -5554) (undo-tree-id2788 . -1) 5555) nil (25953 64266 694365 0) 0 nil])
([nil nil ((5551 . 5553)) nil (25953 64266 694359 0) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -5551) (undo-tree-id2783 . -1) (#("L" 0 1 (fontified t)) . -5552) (undo-tree-id2784 . -1) 5553) nil (25953 64266 694358 0) 0 nil])
([nil nil ((5551 . 5554)) nil (25953 64266 694354 0) 0 nil])
([nil nil ((5553 . 5560) (#("r" 0 1 (fontified nil)) . 5553) (5553 . 5554) (#("runtime" 0 7 (fontified nil)) . -5553) (5553 . 5560) (#("r" 0 1 (fontified t)) . -5553) (undo-tree-id2782 . -1) 5554) nil (25953 64266 694352 0) 0 nil])
([nil nil ((5560 . 5564)) nil (25953 64266 694349 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -5546) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (#("o" 0 1 (fontified t)) . -5547) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (#("k" 0 1 (fontified t)) . -5548) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (#("i" 0 1 (fontified t)) . -5549) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (#("o" 0 1 (fontified t)) . -5550) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (#(":" 0 1 (fontified t)) . -5551) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (#(":" 0 1 (fontified t)) . -5552) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (#("r" 0 1 (fontified t)) . -5553) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (#("u" 0 1 (fontified t)) . -5554) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (#("n" 0 1 (fontified t)) . -5555) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (#("t" 0 1 (fontified t)) . -5556) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (#("i" 0 1 (fontified t)) . -5557) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (#("m" 0 1 (fontified t)) . -5558) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (#("e" 0 1 (fontified t)) . -5559) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (#(":" 0 1 (fontified t)) . -5560) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (#(":" 0 1 (fontified t)) . -5561) (undo-tree-id2779 . -1) (#("b" 0 1 (fontified t)) . -5562) (undo-tree-id2780 . -1) (#("l" 0 1 (fontified t)) . -5563) (undo-tree-id2781 . -1) 5564) nil (25953 64266 694344 0) 0 nil])
([nil nil ((5546 . 5549)) nil (25953 64266 694307 0) 0 nil])
([nil nil ((5546 . 5551) (#("tok" 0 3 (fontified nil)) . 5546) (5546 . 5549) (#("tokio" 0 5 (fontified nil)) . -5546) (5546 . 5551) (#("tok" 0 3 (fontified t)) . -5546) (undo-tree-id2748 . -3) 5549) nil (25953 64266 694306 0) 0 nil])
([nil nil ((5551 . 5553)) nil (25953 64266 694302 0) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -5551) (undo-tree-id2746 . -1) (#("L" 0 1 (fontified t)) . -5552) (undo-tree-id2747 . -1) 5553) nil (25953 64266 694301 0) 0 nil])
([nil nil ((5551 . 5554)) nil (25953 64266 694297 0) 0 nil])
([nil nil ((5553 . 5557) (#("t" 0 1 (fontified nil)) . 5553) (5553 . 5554) (#("task" 0 4 (fontified nil)) . -5553) (5553 . 5557) (#("t" 0 1 (fontified t)) . -5553) (undo-tree-id2745 . -1) 5554) nil (25953 64266 694296 0) 0 nil])
([nil nil ((5557 . 5558)) nil (25953 64266 694292 0) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -5557) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) 5558) nil (25953 64266 694291 0) 0 nil])
([nil nil ((5557 . 5561)) nil (25953 64266 694281 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 5574 5574 nil nil nil t #s(yas--exit 5575 nil))) #s(yas--exit 5575 nil) 37 nil #s(yas--field 1 5574 5574 nil nil nil t #s(yas--exit 5575 nil)) nil nil)) (5559 . 5576) (#("spawn_blocking(${1:f})$0" 0 24 (fontified nil)) . 5559) (5559 . 5583) (#("sp" 0 2 (fontified nil)) . 5559) (5559 . 5561) (#("spawn_blocking(…)" 0 17 (fontified nil)) . -5559) (5559 . 5576) (#("sp" 0 2 (fontified t)) . -5559) (undo-tree-id2729 . -2) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -2) (undo-tree-id2733 . -2) (undo-tree-id2734 . -2) (undo-tree-id2735 . -2) 5561) nil (25953 64266 694279 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -5574) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) 5575) nil (25953 64266 694268 0) 0 nil])
([nil nil ((apply yas--snippet-revive 5559 5575 #s(yas--snippet nil (#s(yas--field 1 5574 5574 nil nil nil t #s(yas--exit 5575 nil))) #s(yas--exit 5575 nil) 37 nil #s(yas--field 1 5574 5574 nil nil nil t #s(yas--exit 5575 nil)) nil nil))) nil (25953 64266 694258 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -5574) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) 5575) nil (25953 64266 694256 0) 0 nil])
([nil nil ((5645 . 5647)) nil (25953 64266 694238 0) 0 nil])
([nil nil ((5646 . 5651) (#("a" 0 1 (fontified nil)) . 5646) (5646 . 5647) (#("await" 0 5 (fontified nil)) . -5646) (5646 . 5651) (#("a" 0 1 (fontified t)) . -5646) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) 5647) nil (25953 64266 694235 0) 0 nil])
([nil nil ((5651 . 5652)) nil (25953 64266 694217 0) 0 nil])
([nil nil ((5656 . 5658) (5577 . 5581) (5651 . 5652) (t 25953 64266 705441 740000)) nil (25953 64271 484832 0) 0 nil])
([nil nil ((#("	    thread::spawn(move ||{" 0 5 (fontified t) 5 11 (face font-lock-constant-face fontified t) 11 19 (fontified t) 19 23 (face font-lock-keyword-face fontified t) 23 27 (fontified t)) . 5516) (undo-tree-id2856 . -27) (undo-tree-id2857 . -27) (undo-tree-id2858 . -27) (undo-tree-id2859 . -27) (undo-tree-id2860 . -27) (undo-tree-id2861 . -27) (undo-tree-id2862 . -27) (undo-tree-id2863 . -27) (undo-tree-id2864 . -26) (undo-tree-id2865 . -25) (undo-tree-id2866 . -24) (undo-tree-id2867 . -22) (undo-tree-id2868 . -21) (undo-tree-id2869 . -20) (undo-tree-id2870 . -19) (undo-tree-id2871 . -18) (undo-tree-id2872 . -17) (undo-tree-id2873 . -16) (undo-tree-id2874 . -15) (undo-tree-id2875 . -14) (undo-tree-id2876 . -12) (undo-tree-id2877 . -11) (undo-tree-id2878 . -10) (undo-tree-id2879 . -9) (undo-tree-id2880 . -8) (undo-tree-id2881 . -7) (undo-tree-id2882 . -6) (undo-tree-id2883 . -5) (undo-tree-id2884 . -4) (undo-tree-id2885 . -3) (undo-tree-id2886 . -2) (undo-tree-id2887 . -1) (undo-tree-id2888 . -27) (t 25953 64271 495850 39000)) nil (25953 64297 455557 0) 0 nil])
([nil nil ((#(" });" 0 4 (fontified t)) . 5638) (undo-tree-id2844 . -4) (undo-tree-id2845 . -4) (undo-tree-id2846 . -4) (undo-tree-id2847 . -4) (undo-tree-id2848 . -4) (undo-tree-id2849 . -4) (undo-tree-id2850 . -4) (undo-tree-id2851 . -4) (undo-tree-id2852 . -4) (undo-tree-id2853 . -4) (undo-tree-id2854 . -1) (undo-tree-id2855 . -4)) nil (25953 64297 455524 0) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -5633) (5633 . 5634) (#("	" 0 1 (fontified nil)) . 5633) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (5629 . 5633) (#("    " 0 4 (fontified t)) . -5553) (#("	" 0 1 (fontified nil)) . -5522) (5522 . 5523) (#("	" 0 1 (fontified nil)) . 5522) (5518 . 5522) 5516) nil (25953 64297 455505 0) 0 nil])
([nil nil ((5550 . 5552) (t 25953 64297 467258 489000)) nil (25953 64343 840062 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -5551) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) 5552) nil (25953 64343 840059 0) 0 nil])
([nil nil ((5551 . 5561)) nil (25953 64343 840047 0) 0 nil])
([nil nil ((5561 . 5562)) nil (25953 64343 840046 0) 0 nil])
([nil nil ((5639 . 5640)) nil (25953 64343 840042 0) 0 nil])
([nil nil ((5561 . 5563) (t 25953 64343 851435 750000)) nil (25953 64351 1464 0) 0 nil])
([nil nil ((5562 . 5563) (t 25953 64351 12701 319000)) nil (25953 64352 775603 0) 0 nil])
([nil nil ((#("async " 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . -5550) (undo-tree-id2894 . -6) (undo-tree-id2895 . -6) (undo-tree-id2896 . -6) (undo-tree-id2897 . -6) (undo-tree-id2898 . -6) (undo-tree-id2899 . -6) (undo-tree-id2900 . -6) (undo-tree-id2901 . -6) (undo-tree-id2902 . -6) (undo-tree-id2903 . -6) (undo-tree-id2904 . -6) (undo-tree-id2905 . -6) (undo-tree-id2906 . -6) (undo-tree-id2907 . -6) (undo-tree-id2908 . -6) (undo-tree-id2909 . -6) 5556 (t 25953 64352 786783 930000)) nil (25953 64354 770022 0) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -5555) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (#("_" 0 1 (fontified t)) . -5556) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (#("|" 0 1 (fontified t)) . -5557) (undo-tree-id3015 . -1) (undo-tree-id3016 . 1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) 5558 (t 25953 64354 781386 441000)) nil (25953 64372 388122 0) 0 nil])
([nil nil ((5550 . 5556)) nil (25953 64372 388065 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -5552) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (#("n" 0 1 (fontified t)) . -5553) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (#("c" 0 1 (fontified t)) . -5554) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (#(" " 0 1 (fontified t)) . -5555) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) 5556) nil (25953 64372 388060 0) 0 nil])
([nil nil ((5552 . 5556)) nil (25953 64372 387993 0) 0 nil])
([nil nil ((#("task:" 0 4 (face font-lock-constant-face fontified t) 4 5 (fontified t)) . -5529) (undo-tree-id3096 . -5) (undo-tree-id3097 . -5) (undo-tree-id3098 . -5) (undo-tree-id3099 . -5) (undo-tree-id3100 . -5) (undo-tree-id3101 . -5) (undo-tree-id3102 . -5) (undo-tree-id3103 . -5) (undo-tree-id3104 . -5) (undo-tree-id3105 . -5) (undo-tree-id3106 . -5) (undo-tree-id3107 . -5) (undo-tree-id3108 . -5) (undo-tree-id3109 . -5) (undo-tree-id3110 . -5) (undo-tree-id3111 . -5) (undo-tree-id3112 . -5) (undo-tree-id3113 . -5) (undo-tree-id3114 . -5) (undo-tree-id3115 . -5) 5534 (t 25953 64372 400350 545000)) nil (25953 64425 528042 0) 0 nil])
([nil nil ((#("blocking" 0 8 (fontified t)) . -5536) (undo-tree-id3072 . -6) (undo-tree-id3073 . -8) (undo-tree-id3074 . -1) (undo-tree-id3075 . -2) (undo-tree-id3076 . -3) (undo-tree-id3077 . -4) (undo-tree-id3078 . -5) (undo-tree-id3079 . -6) (undo-tree-id3080 . -6) (undo-tree-id3081 . -6) (undo-tree-id3082 . -6) (undo-tree-id3083 . -6) (undo-tree-id3084 . -6) (undo-tree-id3085 . -6) (undo-tree-id3086 . -7) (undo-tree-id3087 . -7) (undo-tree-id3088 . -7) (undo-tree-id3089 . -7) (undo-tree-id3090 . -7) (undo-tree-id3091 . -8) (undo-tree-id3092 . -8) (undo-tree-id3093 . -8) (undo-tree-id3094 . -8) (undo-tree-id3095 . -8) 5544) nil (25953 64425 528020 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -5535) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) 5536) nil (25953 64425 527994 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -5529) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) 5530) nil (25953 64425 527961 0) 0 nil])
([nil nil ((5624 . 5630) (t 25953 64425 540171 427000)) nil (25953 64437 243587 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5631) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (#("	" 0 1 (fontified t)) . -5632) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (#(" " 0 1 (fontified t)) . -5633) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (#(" " 0 1 (fontified t)) . -5634) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (#(" " 0 1 (fontified t)) . -5635) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (#(" " 0 1 (fontified t)) . -5636) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) 5637) nil (25953 64437 243580 0) 0 nil])
([nil nil ((#("	    tokio::spawn(async move {
		hid_thread(async_proc_input_rx, async_proc_output_tx, state.clone()).await
	    });" 0 5 (fontified t) 5 10 (face font-lock-constant-face fontified t) 10 12 (fontified t) 12 18 (fontified t) 18 23 (face font-lock-keyword-face fontified t) 23 24 (fontified t) 24 28 (face font-lock-keyword-face fontified t) 28 30 (fontified t) 30 31 (fontified t) 31 102 (fontified t) 102 107 (face font-lock-keyword-face fontified t) 107 108 (fontified t) 108 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 116 (fontified t)) . 5517) (undo-tree-id3389 . -116) (t 25953 64437 255172 114000)) nil (25953 64600 220801 0) 0 nil])
([nil nil ((5517 . 5522)) nil (25953 64600 220799 0) 0 nil])
([nil nil ((5522 . 5523)) nil (25953 64600 220798 0) 0 nil])
([nil nil ((5522 . 5528) (#("t" 0 1 (fontified nil)) . 5522) (5522 . 5523) (#("thread" 0 6 (fontified nil)) . -5522) (5522 . 5528) (#("t" 0 1 (fontified t)) . -5522) (undo-tree-id3388 . -1) 5523) nil (25953 64600 220796 0) 0 nil])
([nil nil ((5528 . 5531)) nil (25953 64600 220793 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -5530) (undo-tree-id3387 . -1) 5531) nil (25953 64600 220791 0) 0 nil])
([nil nil ((5530 . 5534)) nil (25953 64600 220789 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 5536 5546 nil nil nil t #s(yas--exit 5547 nil))) #s(yas--exit 5547 nil) 38 nil #s(yas--field 1 5536 5546 nil nil nil t #s(yas--exit 5547 nil)) nil nil)) (5530 . 5538) (#("spawn(${1:f})$0" 0 15 (fontified nil)) . 5530) (5530 . 5545) (#("span" 0 4 (fontified nil)) . 5530) (5530 . 5534) (#("spawn(…)" 0 8 (fontified nil)) . -5530) (5530 . 5538) (#("span" 0 4 (fontified t)) . -5530) (undo-tree-id3386 . -4) 5534) nil (25953 64600 220787 0) 0 nil])
([nil nil ((5537 . 5546) (#("f" 0 1 (fontified nil)) . 5537) (5536 . 5537)) nil (25953 64600 220783 0) 0 nil])
([nil nil ((apply yas--snippet-revive 5530 5547 #s(yas--snippet nil (#s(yas--field 1 5536 5546 nil nil nil t #s(yas--exit 5547 nil))) #s(yas--exit 5547 nil) 38 nil #s(yas--field 1 5536 5546 nil nil nil t #s(yas--exit 5547 nil)) nil nil))) nil (25953 64600 220781 0) 0 nil])
([nil nil ((5547 . 5548)) nil (25953 64600 220781 0) 0 nil])
([nil nil ((5547 . 5552) (#("		" 0 2 (fontified nil)) . 5546) (undo-tree-id3384 . -1) (5547 . 5548) (#("    " 0 4 (fontified nil)) . 5547) (undo-tree-id3385 . -4) (5545 . 5552)) nil (25953 64600 220779 0) 0 nil])
([nil nil ((5546 . 5548)) nil (25953 64600 220775 0) 0 nil])
([nil nil ((5548 . 5549)) nil (25953 64600 220774 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 5559 5567 nil nil nil nil #s(yas--field 2 5569 5578 nil nil nil nil #s(yas--field 3 5580 5585 nil nil nil nil #s(yas--exit 5586 nil)))) #s(yas--field 2 5569 5578 nil nil nil nil #s(yas--field 3 5580 5585 nil nil nil nil #s(yas--exit 5586 nil))) #s(yas--field 3 5580 5585 nil nil nil nil #s(yas--exit 5586 nil))) #s(yas--exit 5586 nil) 39 nil #s(yas--field 1 5559 5567 nil nil nil nil #s(yas--field 2 5569 5578 nil nil nil nil #s(yas--field 3 5580 5585 nil nil nil nil #s(yas--exit 5586 nil)))) nil nil)) (5548 . 5586) (#("hid_thread(${1:input_rx}, ${2:output_tx}, ${3:state})$0" 0 55 (fontified nil)) . 5548) (5548 . 5603) (#("h" 0 1 (fontified nil)) . 5548) (5548 . 5549) (#("hid_thread(…)" 0 13 (fontified nil)) . -5548) (5548 . 5561) (#("h" 0 1 (fontified t)) . -5548) (undo-tree-id3383 . -1) 5549) nil (25953 64600 220773 0) 0 nil])
([nil nil ((apply yas--snippet-revive 5548 5586 #s(yas--snippet nil (#s(yas--field 1 5559 5567 nil nil nil nil #s(yas--field 2 5569 5578 nil nil nil nil #s(yas--field 3 5580 5585 nil nil nil nil #s(yas--exit 5586 nil)))) #s(yas--field 2 5569 5578 nil nil nil nil #s(yas--field 3 5580 5585 nil nil nil nil #s(yas--exit 5586 nil))) #s(yas--field 3 5580 5585 nil nil nil nil #s(yas--exit 5586 nil))) #s(yas--exit 5586 nil) 39 nil #s(yas--field 1 5559 5567 nil nil nil nil #s(yas--field 2 5569 5578 nil nil nil nil #s(yas--field 3 5580 5585 nil nil nil nil #s(yas--exit 5586 nil)))) nil nil))) nil (25953 64600 220768 0) 0 nil])
([nil nil ((#("mut input_rx: mpsc::Receiver<String>,
    output_tx: mpsc::Sender<String>," 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 12 (face font-lock-variable-name-face fontified t) 12 14 (fontified t) 14 18 (face font-lock-constant-face fontified t) 18 20 (fontified t) 20 28 (face font-lock-type-face fontified t) 28 29 (fontified t) 29 35 (face font-lock-type-face fontified t) 35 38 (fontified t) 38 42 (fontified t) 42 51 (face font-lock-variable-name-face fontified t) 51 53 (fontified t) 53 57 (face font-lock-constant-face fontified t) 57 59 (fontified t) 59 65 (face font-lock-type-face fontified t) 65 66 (fontified t) 66 72 (face font-lock-type-face fontified t) 72 74 (fontified t)) . 2784) (undo-tree-id3341 . -74) (undo-tree-id3342 . -74) (undo-tree-id3343 . -74) (undo-tree-id3344 . -74) (undo-tree-id3345 . -74) (undo-tree-id3346 . -74) (undo-tree-id3347 . -74) (undo-tree-id3348 . -74) (undo-tree-id3349 . -74) (undo-tree-id3350 . -74) (undo-tree-id3351 . -72) (undo-tree-id3352 . -69) (undo-tree-id3353 . -24) (undo-tree-id3354 . -22) (undo-tree-id3355 . -20) (undo-tree-id3356 . -18) (undo-tree-id3357 . -16) (undo-tree-id3358 . -14) (undo-tree-id3359 . -55) (undo-tree-id3360 . -54) (undo-tree-id3361 . -53) (undo-tree-id3362 . -51) (undo-tree-id3363 . -50) (undo-tree-id3364 . -48) (undo-tree-id3365 . -47) (undo-tree-id3366 . -46) (undo-tree-id3367 . -45) (undo-tree-id3368 . -3) (undo-tree-id3369 . -3) (undo-tree-id3370 . -3) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -74) 2785) nil (25953 64600 220765 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2846 . 2847) (nil fontified nil 2845 . 2847) (nil fontified nil 2844 . 2845) (nil fontified nil 2843 . 2844) (nil fontified nil 2836 . 2843) (nil fontified nil 2835 . 2836) (nil fontified nil 2831 . 2835) (nil fontified nil 2830 . 2831) (nil fontified nil 2828 . 2830) (nil fontified nil 2821 . 2828) (nil fontified nil 2819 . 2821) (nil fontified nil 2813 . 2819) (nil fontified nil 2811 . 2813) (nil fontified nil 2804 . 2811) (nil fontified nil 2802 . 2804) (nil fontified nil 2800 . 2802) (nil fontified nil 2795 . 2800) (nil fontified nil 2793 . 2795) (nil fontified nil 2788 . 2793) (nil fontified nil 2786 . 2788) (nil fontified nil 2785 . 2786) (nil fontified nil 2784 . 2785) (2784 . 2847)) nil (25953 64600 220723 0) 0 nil])
([nil nil ((#("async " 0 2 (face font-lock-keyword-face fontified t) 2 4 (face font-lock-keyword-face fontified t) 4 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . -2759) (undo-tree-id3329 . -6) (undo-tree-id3330 . -6) (undo-tree-id3331 . -6) (undo-tree-id3332 . -6) (undo-tree-id3333 . -6) (undo-tree-id3334 . -6) (undo-tree-id3335 . -6) (undo-tree-id3336 . -6) (undo-tree-id3337 . -6) (undo-tree-id3338 . -6) (undo-tree-id3339 . -6) (undo-tree-id3340 . -6) 2765) nil (25953 64600 220716 0) 0 nil])
([nil nil ((#("<R: tauri::Runtime>" 0 1 (fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 4 (fontified t) 4 9 (face font-lock-constant-face fontified t) 9 11 (fontified t) 11 16 (face font-lock-type-face fontified t) 16 18 (face font-lock-type-face fontified t) 18 19 (fontified t)) . 2778) (undo-tree-id3299 . -18) (undo-tree-id3300 . -19) (undo-tree-id3301 . -2) (undo-tree-id3302 . -3) (undo-tree-id3303 . -5) (undo-tree-id3304 . -6) (undo-tree-id3305 . -7) (undo-tree-id3306 . -9) (undo-tree-id3307 . -10) (undo-tree-id3308 . -11) (undo-tree-id3309 . -12) (undo-tree-id3310 . -14) (undo-tree-id3311 . -15) (undo-tree-id3312 . -15) (undo-tree-id3313 . -15) (undo-tree-id3314 . -16) (undo-tree-id3315 . -17) (undo-tree-id3316 . -18) (undo-tree-id3317 . -18) (undo-tree-id3318 . -18) (undo-tree-id3319 . -18) (undo-tree-id3320 . -18) (undo-tree-id3321 . -19) (undo-tree-id3322 . -19) (undo-tree-id3323 . -19) (undo-tree-id3324 . -19) (undo-tree-id3325 . -19) (undo-tree-id3326 . -19) (undo-tree-id3327 . -19) (undo-tree-id3328 . -19) 2797) nil (25953 64600 220702 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2790 . 2791) (nil fontified nil 2790 . 2791) (nil fontified nil 2788 . 2790) (nil fontified nil 2783 . 2788) (nil fontified nil 2781 . 2783) (nil fontified nil 2776 . 2781) (nil fontified nil 2774 . 2776) (nil fontified nil 2773 . 2774) (nil fontified nil 2772 . 2773) (2772 . 2791)) nil (25953 64600 220672 0) 0 nil])
([nil nil ((#("String, " 0 6 (face font-lock-type-face fontified t) 6 8 (fontified t)) . -2807) (undo-tree-id3276 . -8) (undo-tree-id3277 . -8) (undo-tree-id3278 . -7) (undo-tree-id3279 . -7) (undo-tree-id3280 . -7) (undo-tree-id3281 . -7) (undo-tree-id3282 . -7) (undo-tree-id3283 . -7) (undo-tree-id3284 . -7) (undo-tree-id3285 . -7) (undo-tree-id3286 . -7) (undo-tree-id3287 . -7) (undo-tree-id3288 . -7) (undo-tree-id3289 . -7) (undo-tree-id3290 . -7) (undo-tree-id3291 . -7) (undo-tree-id3292 . -8) (undo-tree-id3293 . -8) (undo-tree-id3294 . -8) (undo-tree-id3295 . -8) (undo-tree-id3296 . -8) (undo-tree-id3297 . -8) (undo-tree-id3298 . -8) 2815) nil (25953 64600 220667 0) 0 nil])
([nil nil ((#("message: " 0 7 (face font-lock-variable-name-face fontified t) 7 9 (fontified t)) . -2798) (undo-tree-id3248 . -9) (undo-tree-id3249 . -9) (undo-tree-id3250 . -9) (undo-tree-id3251 . -9) (undo-tree-id3252 . -9) (undo-tree-id3253 . -9) (undo-tree-id3254 . -9) (undo-tree-id3255 . -9) (undo-tree-id3256 . -9) (undo-tree-id3257 . -9) (undo-tree-id3258 . -9) (undo-tree-id3259 . -9) (undo-tree-id3260 . -9) (undo-tree-id3261 . -9) (undo-tree-id3262 . -9) (undo-tree-id3263 . -9) (undo-tree-id3264 . -9) (undo-tree-id3265 . -9) (undo-tree-id3266 . -9) (undo-tree-id3267 . -9) (undo-tree-id3268 . -9) (undo-tree-id3269 . -9) (undo-tree-id3270 . -9) (undo-tree-id3271 . -9) (undo-tree-id3272 . -9) (undo-tree-id3273 . -9) (undo-tree-id3274 . -9) (undo-tree-id3275 . -9) 2807) nil (25953 64600 220643 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -2797) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) 2798) nil (25953 64600 220614 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t rear-nonsticky t)) . -2822) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) 2823) nil (25953 64600 220572 0) 0 nil])
([nil nil ((2822 . 2823)) nil (25953 64600 220514 0) 0 nil])
([nil nil ((#("	    let app_handle = app.handle();" 0 5 (fontified t) 5 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 19 (face font-lock-variable-name-face fontified t) 19 35 (fontified t)) . 5567) (undo-tree-id3716 . -35) (undo-tree-id3717 . -35) (undo-tree-id3718 . -35) (undo-tree-id3719 . -35) (undo-tree-id3720 . -35) (undo-tree-id3721 . -35) (undo-tree-id3722 . -35) (undo-tree-id3723 . -35) (undo-tree-id3724 . -35) (undo-tree-id3725 . -35) (undo-tree-id3726 . -34) (undo-tree-id3727 . -32) (undo-tree-id3728 . -27) (undo-tree-id3729 . -24) (undo-tree-id3730 . -19) (undo-tree-id3731 . -15) (undo-tree-id3732 . -11) (undo-tree-id3733 . -2) (undo-tree-id3734 . -35) (t 25953 64600 233211 475000)) nil (25953 64630 583315 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 5515 . 5516) (nil fontified nil 5500 . 5516) (nil fontified nil 5490 . 5500) (nil fontified nil 5489 . 5490) (nil fontified nil 5486 . 5489) (nil fontified nil 5481 . 5486) (5481 . 5516)) nil (25953 64630 583295 0) 0 nil])
([nil nil ((#("state" 0 5 (fontified t)) . -5580) (undo-tree-id3696 . -5) (undo-tree-id3697 . -5) (undo-tree-id3698 . -5) (undo-tree-id3699 . -5) (undo-tree-id3700 . -5) (undo-tree-id3701 . -5) (undo-tree-id3702 . -5) (undo-tree-id3703 . -5) (undo-tree-id3704 . -5) (undo-tree-id3705 . -5) (undo-tree-id3706 . -5) (undo-tree-id3707 . -5) (undo-tree-id3708 . -5) (undo-tree-id3709 . -5) (undo-tree-id3710 . -5) (undo-tree-id3711 . -5) (undo-tree-id3712 . -5) (undo-tree-id3713 . -5) (undo-tree-id3714 . -5) (undo-tree-id3715 . -5) 5585) nil (25953 64630 583291 0) 0 nil])
([nil nil ((#("tx, " 0 4 (fontified t)) . -5576) (undo-tree-id3648 . -4) (undo-tree-id3649 . -4) (undo-tree-id3650 . -3) (undo-tree-id3651 . -3) (undo-tree-id3652 . -3) (undo-tree-id3653 . -3) (undo-tree-id3654 . -3) (undo-tree-id3655 . -3) (undo-tree-id3656 . -3) (undo-tree-id3657 . -3) (undo-tree-id3658 . -3) (undo-tree-id3659 . -3) (undo-tree-id3660 . -3) (undo-tree-id3661 . -3) (undo-tree-id3662 . -3) (undo-tree-id3663 . -3) (undo-tree-id3664 . -3) (undo-tree-id3665 . -3) (undo-tree-id3666 . -3) (undo-tree-id3667 . -3) (undo-tree-id3668 . -3) (undo-tree-id3669 . -4) (undo-tree-id3670 . -4) (undo-tree-id3671 . -4) (undo-tree-id3672 . -4) (undo-tree-id3673 . -4) (undo-tree-id3674 . -4) (undo-tree-id3675 . -4) (undo-tree-id3676 . -4) (undo-tree-id3677 . -4) (undo-tree-id3678 . -4) (undo-tree-id3679 . -4) (undo-tree-id3680 . -4) (undo-tree-id3681 . -4) (undo-tree-id3682 . -4) (undo-tree-id3683 . -4) (undo-tree-id3684 . -4) (undo-tree-id3685 . -4) (undo-tree-id3686 . -4) (undo-tree-id3687 . -4) (undo-tree-id3688 . -4) (undo-tree-id3689 . -4) (undo-tree-id3690 . -4) (undo-tree-id3691 . -4) (undo-tree-id3692 . -4) (undo-tree-id3693 . -4) (undo-tree-id3694 . -4) (undo-tree-id3695 . -4) 5580) nil (25953 64630 583270 0) 0 nil])
([nil nil ((#("output_" 0 7 (fontified t)) . -5569) (undo-tree-id3599 . -7) (undo-tree-id3600 . -7) (undo-tree-id3601 . -7) (undo-tree-id3602 . -7) (undo-tree-id3603 . -7) (undo-tree-id3604 . -7) (undo-tree-id3605 . -7) (undo-tree-id3606 . -7) (undo-tree-id3607 . -7) (undo-tree-id3608 . -7) (undo-tree-id3609 . -7) (undo-tree-id3610 . -7) (undo-tree-id3611 . -7) (undo-tree-id3612 . -7) (undo-tree-id3613 . -7) (undo-tree-id3614 . -7) (undo-tree-id3615 . -7) (undo-tree-id3616 . -7) (undo-tree-id3617 . -7) (undo-tree-id3618 . -7) (undo-tree-id3619 . -7) (undo-tree-id3620 . -7) (undo-tree-id3621 . -7) (undo-tree-id3622 . -7) (undo-tree-id3623 . -7) (undo-tree-id3624 . -7) (undo-tree-id3625 . -7) (undo-tree-id3626 . -7) (undo-tree-id3627 . -7) (undo-tree-id3628 . -7) (undo-tree-id3629 . -7) (undo-tree-id3630 . -7) (undo-tree-id3631 . -7) (undo-tree-id3632 . -7) (undo-tree-id3633 . -7) (undo-tree-id3634 . -7) (undo-tree-id3635 . -7) (undo-tree-id3636 . -7) (undo-tree-id3637 . -7) (undo-tree-id3638 . -7) (undo-tree-id3639 . -7) (undo-tree-id3640 . -7) (undo-tree-id3641 . -7) (undo-tree-id3642 . -7) (undo-tree-id3643 . -7) (undo-tree-id3644 . -7) (undo-tree-id3645 . -7) (undo-tree-id3646 . -7) (undo-tree-id3647 . -7) 5576) nil (25953 64630 583222 0) 0 nil])
([nil nil ((#("rx, " 0 4 (fontified t)) . -5565) (undo-tree-id3543 . -4) (undo-tree-id3544 . -4) (undo-tree-id3545 . -4) (undo-tree-id3546 . -4) (undo-tree-id3547 . -4) (undo-tree-id3548 . -4) (undo-tree-id3549 . -4) (undo-tree-id3550 . -4) (undo-tree-id3551 . -4) (undo-tree-id3552 . -4) (undo-tree-id3553 . -4) (undo-tree-id3554 . -4) (undo-tree-id3555 . -4) (undo-tree-id3556 . -4) (undo-tree-id3557 . -4) (undo-tree-id3558 . -4) (undo-tree-id3559 . -4) (undo-tree-id3560 . -4) (undo-tree-id3561 . -4) (undo-tree-id3562 . -4) (undo-tree-id3563 . -4) (undo-tree-id3564 . -4) (undo-tree-id3565 . -4) (undo-tree-id3566 . -4) (undo-tree-id3567 . -4) (undo-tree-id3568 . -4) (undo-tree-id3569 . -4) (undo-tree-id3570 . -4) (undo-tree-id3571 . -4) (undo-tree-id3572 . -4) (undo-tree-id3573 . -4) (undo-tree-id3574 . -4) (undo-tree-id3575 . -4) (undo-tree-id3576 . -4) (undo-tree-id3577 . -4) (undo-tree-id3578 . -4) (undo-tree-id3579 . -4) (undo-tree-id3580 . -4) (undo-tree-id3581 . -4) (undo-tree-id3582 . -4) (undo-tree-id3583 . -4) (undo-tree-id3584 . -4) (undo-tree-id3585 . -4) (undo-tree-id3586 . -4) (undo-tree-id3587 . -4) (undo-tree-id3588 . -4) (undo-tree-id3589 . -4) (undo-tree-id3590 . -4) (undo-tree-id3591 . -4) (undo-tree-id3592 . -4) (undo-tree-id3593 . -4) (undo-tree-id3594 . -4) (undo-tree-id3595 . -4) (undo-tree-id3596 . -4) (undo-tree-id3597 . -4) (undo-tree-id3598 . -4) 5569) nil (25953 64630 583173 0) 0 nil])
([nil nil ((#("input_" 0 6 (fontified t)) . -5559) (undo-tree-id3480 . -6) (undo-tree-id3481 . -6) (undo-tree-id3482 . -6) (undo-tree-id3483 . -6) (undo-tree-id3484 . -6) (undo-tree-id3485 . -6) (undo-tree-id3486 . -6) (undo-tree-id3487 . -6) (undo-tree-id3488 . -6) (undo-tree-id3489 . -6) (undo-tree-id3490 . -6) (undo-tree-id3491 . -6) (undo-tree-id3492 . -6) (undo-tree-id3493 . -6) (undo-tree-id3494 . -6) (undo-tree-id3495 . -6) (undo-tree-id3496 . -6) (undo-tree-id3497 . -6) (undo-tree-id3498 . -6) (undo-tree-id3499 . -6) (undo-tree-id3500 . -6) (undo-tree-id3501 . -6) (undo-tree-id3502 . -6) (undo-tree-id3503 . -6) (undo-tree-id3504 . -6) (undo-tree-id3505 . -6) (undo-tree-id3506 . -6) (undo-tree-id3507 . -6) (undo-tree-id3508 . -6) (undo-tree-id3509 . -6) (undo-tree-id3510 . -6) (undo-tree-id3511 . -6) (undo-tree-id3512 . -6) (undo-tree-id3513 . -6) (undo-tree-id3514 . -6) (undo-tree-id3515 . -6) (undo-tree-id3516 . -6) (undo-tree-id3517 . -6) (undo-tree-id3518 . -6) (undo-tree-id3519 . -6) (undo-tree-id3520 . -6) (undo-tree-id3521 . -6) (undo-tree-id3522 . -6) (undo-tree-id3523 . -6) (undo-tree-id3524 . -6) (undo-tree-id3525 . -6) (undo-tree-id3526 . -6) (undo-tree-id3527 . -6) (undo-tree-id3528 . -6) (undo-tree-id3529 . -6) (undo-tree-id3530 . -6) (undo-tree-id3531 . -6) (undo-tree-id3532 . -6) (undo-tree-id3533 . -6) (undo-tree-id3534 . -6) (undo-tree-id3535 . -6) (undo-tree-id3536 . -6) (undo-tree-id3537 . -6) (undo-tree-id3538 . -6) (undo-tree-id3539 . -6) (undo-tree-id3540 . -6) (undo-tree-id3541 . -6) (undo-tree-id3542 . -6) 5565) nil (25953 64630 583117 0) 0 nil])
([nil nil ((5559 . 5560)) nil (25953 64630 583057 0) 0 nil])
([nil nil ((5560 . 5561)) nil (25953 64630 583056 0) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -5560) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) 5561) nil (25953 64630 583054 0) 0 nil])
([nil nil ((5560 . 5562)) nil (25953 64630 583042 0) 0 nil])
([nil nil ((5559 . 5569) (#("app" 0 3 (fontified nil)) . 5559) (5559 . 5562) (#("app_handle" 0 10 (fontified nil)) . -5559) (5559 . 5569) (#("app" 0 3 (fontified t)) . -5559) (undo-tree-id3436 . -3) (undo-tree-id3437 . -3) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -2) (undo-tree-id3461 . -3) (undo-tree-id3462 . -3) (undo-tree-id3463 . -3) (undo-tree-id3464 . -3) (undo-tree-id3465 . -3) (undo-tree-id3466 . -3) (undo-tree-id3467 . -3) 5562) nil (25953 64630 583039 0) 0 nil])
([nil nil ((5569 . 5572)) nil (25953 64630 583004 0) 0 nil])
([nil nil ((5571 . 5576) (#("s" 0 1 (fontified nil)) . 5571) (5571 . 5572) (#("state" 0 5 (fontified nil)) . -5571) (5571 . 5576) (#("s" 0 1 (fontified t)) . -5571) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) 5572) nil (25953 64630 583002 0) 0 nil])
([nil nil ((5576 . 5578)) nil (25953 64630 582987 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -5577) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) 5578) nil (25953 64630 582986 0) 0 nil])
([nil nil ((5577 . 5579)) nil (25953 64630 582978 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -5578) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) 5579) nil (25953 64630 582977 0) 0 nil])
([nil nil ((5578 . 5579)) nil (25953 64630 582966 0) 0 nil])
([nil nil ((apply yas--snippet-revive 5577 5584 #s(yas--snippet nil nil #s(yas--exit 5584 nil) 40 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 5584 nil) 40 nil nil nil nil)) (5577 . 5584) (#("clone()$0" 0 9 (fontified nil)) . 5577) (5577 . 5586) (#("cl" 0 2 (fontified nil)) . 5577) (5577 . 5579) (#("clone() (as Clone)" 0 18 (fontified nil)) . -5577) (5577 . 5595) (#("cl" 0 2 (fontified t)) . -5577) (undo-tree-id3390 . -1) (undo-tree-id3391 . -2) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -2) 5579) nil (25953 64630 582963 0) 0 nil])
([nil nil ((5585 . 5586)) nil (25953 64630 582931 0) 0 nil])
([nil nil ((5559 . 5560) (t 25953 64630 596410 22000)) nil (25953 64638 868475 0) 0 nil])
([nil nil ((apply -28 5605 5968 undo--wrap-and-run-primitive-undo 5605 5968 ((" " . 5605) (5962 . 5965) (5941 . 5944) (5916 . 5919) (5831 . 5834) (5831 . 5832) (#("	" 0 1 (fontified t)) . 5831) (5827 . 5831) (5780 . 5783) (5699 . 5702) (5673 . 5676) (5617 . 5620) (5605 . 5606)))) nil (25953 64671 544172 0) 0 nil])
([nil nil ((#("await" 0 5 (face font-lock-keyword-face fontified t)) . -3465) (undo-tree-id3762 . -5) (undo-tree-id3763 . -5) (undo-tree-id3764 . -5) (undo-tree-id3765 . -5) (undo-tree-id3766 . -5) (undo-tree-id3767 . -5) (undo-tree-id3768 . -5) (undo-tree-id3769 . -5) (undo-tree-id3770 . -5) (undo-tree-id3771 . -5) (undo-tree-id3772 . -5) (undo-tree-id3773 . -5) (undo-tree-id3774 . -5) (undo-tree-id3775 . -5) (undo-tree-id3776 . -5) (undo-tree-id3777 . -5) (undo-tree-id3778 . -5) (undo-tree-id3779 . -5) (undo-tree-id3780 . -5) (undo-tree-id3781 . -5) 3470 (t 25953 64671 557435 98000)) nil (25953 64708 842211 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3464) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) 3465) nil (25953 64715 868488 0) 0 nil] [nil nil ((#("." 0 1 (fontified t)) . -3464) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) 3465) ((3464 . 3465) (t 25953 64698 118070 753000)) (25953 64698 104215 0) 0 nil])
([nil nil ((apply -3 274 301 undo--wrap-and-run-primitive-undo 274 301 ((274 . 277) 297))) nil (25953 64732 711099 0) 0 nil] [nil nil ((apply -537 297 6499 undo--wrap-and-run-primitive-undo 297 6499 ((6477 . 6480) (6453 . 6456) (6425 . 6428) (6344 . 6347) (6283 . 6286) (6199 . 6202) (6170 . 6173) (6111 . 6114) (6092 . 6095) (6047 . 6050) (6015 . 6018) (5976 . 5979) (5957 . 5960) (5943 . 5946) (5888 . 5891) (5857 . 5860) (5851 . 5854) (5829 . 5832) (5809 . 5812) (5776 . 5779) (5672 . 5675) (5592 . 5595) (5518 . 5521) (5477 . 5480) (5462 . 5465) (5456 . 5459) (5447 . 5450) (5441 . 5444) (5407 . 5410) (5397 . 5400) (5389 . 5392) (5373 . 5376) (5342 . 5345) (5328 . 5331) (5317 . 5320) (5174 . 5177) (5128 . 5131) (5104 . 5107) (5072 . 5075) (5063 . 5066) (5051 . 5054) (4985 . 4988) (4968 . 4971) (4956 . 4959) (4894 . 4897) (4870 . 4873) (4804 . 4807) (4749 . 4752) (4711 . 4714) (4623 . 4626) (4597 . 4600) (4590 . 4593) (4579 . 4582) (4563 . 4566) (4546 . 4549) (4514 . 4517) (4499 . 4502) (4403 . 4406) (4360 . 4363) (4279 . 4282) (4271 . 4274) (4216 . 4219) (4161 . 4164) (4106 . 4109) (4020 . 4023) (3998 . 4001) (3962 . 3965) (3939 . 3942) (3866 . 3869) (3824 . 3827) (3790 . 3793) (3750 . 3753) (3735 . 3738) (3722 . 3725) (3698 . 3701) (3688 . 3691) (3652 . 3655) (3645 . 3648) (3633 . 3636) (3607 . 3610) (3586 . 3589) (3574 . 3577) (3561 . 3564) (3528 . 3531) (3506 . 3509) (3461 . 3464) (3446 . 3449) (3413 . 3416) (3399 . 3402) (3357 . 3360) (3320 . 3323) (3286 . 3289) (3217 . 3220) (3172 . 3175) (3109 . 3112) (3102 . 3105) (3070 . 3073) (3036 . 3039) (2999 . 3002) (2992 . 2995) (2970 . 2973) (2931 . 2934) (2916 . 2919) (2879 . 2882) (2802 . 2805) (2781 . 2784) (2773 . 2776) (2759 . 2762) (2734 . 2737) (2665 . 2668) (2600 . 2603) (2552 . 2555) (2486 . 2489) (2442 . 2445) (2352 . 2355) (2324 . 2327) (2273 . 2276) (2251 . 2254) (2226 . 2229) (2205 . 2208) (2119 . 2122) (2113 . 2116) (2099 . 2102) (2074 . 2077) (2035 . 2038) (1983 . 1986) (1938 . 1941) (1873 . 1876) (1825 . 1828) (1759 . 1762) (1715 . 1718) (1625 . 1628) (1597 . 1600) (1546 . 1549) (1524 . 1527) (1495 . 1498) (1474 . 1477) (1388 . 1391) (1381 . 1384) (1362 . 1365) (1343 . 1346) (1322 . 1325) (1284 . 1287) (1278 . 1281) (1254 . 1257) (1234 . 1237) (1196 . 1199) (1189 . 1192) (1162 . 1165) (1137 . 1140) (1114 . 1117) (1096 . 1099) (1089 . 1092) (1062 . 1065) (1035 . 1038) (1006 . 1009) (973 . 976) (933 . 936) (829 . 832) (807 . 810) (778 . 781) (752 . 755) (723 . 726) (700 . 703) (680 . 683) (633 . 636) (626 . 629) (583 . 586) (554 . 557) (548 . 551) (522 . 525) (488 . 491) (468 . 471) (445 . 448) (408 . 411) (375 . 378) (347 . 350) (320 . 323) (298 . 301) 297))) ((apply 537 297 5962 undo--wrap-and-run-primitive-undo 297 5962 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 298) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 320) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 347) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 375) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 408) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 445) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 468) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 488) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 522) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 548) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 554) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 583) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 626) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 633) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 680) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 700) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 723) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 752) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 778) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 807) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 829) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 933) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 973) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1006) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1035) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1062) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1089) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1096) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1114) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1137) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1162) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1189) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1196) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1234) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1254) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1278) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1284) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1322) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1343) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1362) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1381) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1388) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1474) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1495) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1524) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1546) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1597) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1625) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1715) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1759) ("// " . 1825) ("// " . 1873) ("// " . 1938) ("// " . 1983) ("// " . 2035) ("// " . 2074) ("// " . 2099) ("// " . 2113) ("// " . 2119) ("// " . 2205) ("// " . 2226) ("// " . 2251) ("// " . 2273) ("// " . 2324) ("// " . 2352) ("// " . 2442) ("// " . 2486) ("// " . 2552) ("// " . 2600) ("// " . 2665) ("// " . 2734) ("// " . 2759) ("// " . 2773) ("// " . 2781) ("// " . 2802) ("// " . 2879) ("// " . 2916) ("// " . 2931) ("// " . 2970) ("// " . 2992) ("// " . 2999) ("// " . 3036) ("// " . 3070) ("// " . 3102) ("// " . 3109) ("// " . 3172) ("// " . 3217) ("// " . 3286) ("// " . 3320) ("// " . 3357) ("// " . 3399) ("// " . 3413) ("// " . 3446) ("// " . 3461) ("// " . 3506) ("// " . 3528) ("// " . 3561) ("// " . 3574) ("// " . 3586) ("// " . 3607) ("// " . 3633) ("// " . 3645) ("// " . 3652) ("// " . 3688) ("// " . 3698) ("// " . 3722) ("// " . 3735) ("// " . 3750) ("// " . 3790) ("// " . 3824) ("// " . 3866) ("// " . 3939) ("// " . 3962) ("// " . 3998) ("// " . 4020) ("// " . 4106) ("// " . 4161) ("// " . 4216) ("// " . 4271) ("// " . 4279) ("// " . 4360) ("// " . 4403) ("// " . 4499) ("// " . 4514) ("// " . 4546) ("// " . 4563) ("// " . 4579) ("// " . 4590) ("// " . 4597) ("// " . 4623) ("// " . 4711) ("// " . 4749) ("// " . 4804) ("// " . 4870) ("// " . 4894) ("// " . 4956) ("// " . 4968) ("// " . 4985) ("// " . 5051) ("// " . 5063) ("// " . 5072) ("// " . 5104) ("// " . 5128) ("// " . 5174) ("// " . 5317) ("// " . 5328) ("// " . 5342) ("// " . 5373) ("// " . 5389) ("// " . 5397) ("// " . 5407) ("// " . 5441) ("// " . 5447) ("// " . 5456) ("// " . 5462) ("// " . 5477) ("// " . 5518) ("// " . 5592) ("// " . 5672) ("// " . 5776) ("// " . 5809) ("// " . 5829) ("// " . 5851) ("// " . 5857) ("// " . 5888) ("// " . 5943) ("// " . 5957) ("// " . 5976) ("// " . 6015) ("// " . 6047) ("// " . 6092) ("// " . 6111) ("// " . 6170) ("// " . 6199) ("// " . 6283) ("// " . 6344) ("// " . 6425) ("// " . 6453) ("// " . 6477) 297))) (25953 64715 865853 0) 0 nil])
nil
([nil nil ((300 . 301)) nil (25953 64732 711098 0) 0 nil])
nil
([nil nil ((301 . 312)) nil (25953 64732 711097 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -309) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (#("h" 0 1 (fontified t)) . -310) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (#("r" 0 1 (fontified t)) . -311) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) 312) nil (25953 64732 711093 0) 0 nil])
([nil nil ((309 . 313)) nil (25953 64732 711025 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -309) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (#("y" 0 1 (fontified t)) . -310) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (#("n" 0 1 (fontified t)) . -311) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (#("c" 0 1 (fontified t)) . -312) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) 313) nil (25953 64732 711020 0) 0 nil])
([nil nil ((309 . 312)) nil (25953 64732 710947 0) 0 nil])
([nil nil ((310 . 314) (#("sy" 0 2 (fontified nil)) . 310) (310 . 312) (#("sync" 0 4 (fontified nil)) . -310) (310 . 314) (#("sy" 0 2 (fontified t)) . -310) (undo-tree-id3839 . -2) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -2) (undo-tree-id3845 . -2) (undo-tree-id3846 . -2) (undo-tree-id3847 . -2) 312) nil (25953 64732 710945 0) 0 nil])
([nil nil ((314 . 316)) nil (25953 64732 710934 0) 0 nil])
([nil nil ((316 . 318)) nil (25953 64732 710933 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -316) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (#("m" 0 1 (fontified t)) . -317) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) 318) nil (25953 64732 710931 0) 0 nil])
([nil nil ((316 . 317)) nil (25953 64732 710913 0) 0 nil])
([nil nil ((316 . 321) (#("M" 0 1 (fontified nil)) . 316) (316 . 317) (#("Mutex" 0 5 (fontified nil)) . -316) (316 . 321) (#("M" 0 1 (face font-lock-type-face fontified t)) . -316) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) 317) nil (25953 64732 710910 0) 0 nil])
([nil nil ((321 . 322)) nil (25953 64732 710892 0) 0 nil])
([nil nil ((#("await" 0 5 (face font-lock-keyword-face fontified t)) . -2414) (undo-tree-id4019 . -5) (undo-tree-id4020 . -5) (undo-tree-id4021 . -5) (undo-tree-id4022 . -5) (undo-tree-id4023 . -5) (undo-tree-id4024 . -5) (undo-tree-id4025 . -5) (undo-tree-id4026 . -5) (undo-tree-id4027 . -5) (undo-tree-id4028 . -5) (undo-tree-id4029 . -5) (undo-tree-id4030 . -5) (undo-tree-id4031 . -5) (undo-tree-id4032 . -5) (undo-tree-id4033 . -5) (undo-tree-id4034 . -5) (undo-tree-id4035 . -5) (undo-tree-id4036 . -5) (undo-tree-id4037 . -5) 2419 (t 25953 64732 724919 368000)) nil (25953 64741 595413 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2413) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) 2414) nil (25953 64741 595390 0) 0 nil])
([nil nil ((2413 . 2415) (t 25953 64741 609792 663000)) nil (25953 64752 946874 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2414 2422 #s(yas--snippet nil nil #s(yas--exit 2422 nil) 41 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 2422 nil) 41 nil nil nil nil)) (2414 . 2422) (#("unwrap()$0" 0 10 (fontified nil)) . 2414) (2414 . 2424) (#("u" 0 1 (fontified nil)) . 2414) (2414 . 2415) (#("unwrap()" 0 8 (fontified nil)) . -2414) (2414 . 2422) (#("u" 0 1 (fontified t)) . -2414) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) 2415) nil (25953 64752 946870 0) 0 nil])
([nil nil ((#("await" 0 5 (face font-lock-keyword-face fontified t)) . -1738) (undo-tree-id4101 . -5) (undo-tree-id4102 . -5) (undo-tree-id4103 . -5) (undo-tree-id4104 . -5) (undo-tree-id4105 . -5) (undo-tree-id4106 . -5) (undo-tree-id4107 . -5) (undo-tree-id4108 . -5) (undo-tree-id4109 . -5) (undo-tree-id4110 . -5) (undo-tree-id4111 . -5) (undo-tree-id4112 . -5) (undo-tree-id4113 . -5) (undo-tree-id4114 . -5) 1743 (t 25953 64752 961503 83000)) nil (25953 64760 125058 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1737) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) 1738) nil (25953 64760 125043 0) 0 nil])
([nil nil ((1737 . 1739)) nil (25953 64760 125019 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1737) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (#("y" 0 1 (fontified t)) . -1738) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) 1739) nil (25953 64760 125016 0) 0 nil])
([nil nil ((1737 . 1739)) nil (25953 64760 124989 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1738 1746 #s(yas--snippet nil nil #s(yas--exit 1746 nil) 42 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1746 nil) 42 nil nil nil nil)) (1738 . 1746) (#("unwrap()$0" 0 10 (fontified nil)) . 1738) (1738 . 1748) (#("u" 0 1 (fontified nil)) . 1738) (1738 . 1739) (#("unwrap()" 0 8 (fontified nil)) . -1738) (1738 . 1746) (#("u" 0 1 (fontified t)) . -1738) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) 1739) nil (25953 64760 124984 0) 0 nil])
([nil nil ((#("unwrap()" 0 8 (fontified t)) . -1738) (undo-tree-id4188 . -8) (undo-tree-id4189 . -8) (undo-tree-id4190 . -8) (undo-tree-id4191 . -8) (undo-tree-id4192 . -8) (undo-tree-id4193 . -8) (undo-tree-id4194 . -8) (undo-tree-id4195 . -8) (undo-tree-id4196 . -8) (undo-tree-id4197 . -8) (undo-tree-id4198 . -8) (undo-tree-id4199 . -8) (undo-tree-id4200 . -8) (undo-tree-id4201 . -8) (undo-tree-id4202 . -8) (undo-tree-id4203 . -8) (undo-tree-id4204 . -8) (undo-tree-id4205 . -8) (undo-tree-id4206 . -8) (undo-tree-id4207 . -8) (undo-tree-id4208 . -8) (undo-tree-id4209 . -8) (undo-tree-id4210 . -8) (undo-tree-id4211 . -8) (undo-tree-id4212 . -8) (undo-tree-id4213 . -8) (undo-tree-id4214 . -8) (undo-tree-id4215 . -8) (undo-tree-id4216 . -8) (undo-tree-id4217 . -8) (undo-tree-id4218 . -8) (undo-tree-id4219 . -8) (undo-tree-id4220 . -8) (undo-tree-id4221 . -8) (undo-tree-id4222 . -8) (undo-tree-id4223 . -8) (undo-tree-id4224 . -8) (undo-tree-id4225 . -8) (undo-tree-id4226 . -8) (undo-tree-id4227 . -8) (undo-tree-id4228 . -8) (undo-tree-id4229 . -8) (undo-tree-id4230 . -8) (undo-tree-id4231 . -8) (undo-tree-id4232 . -8) (undo-tree-id4233 . -8) (undo-tree-id4234 . -8) (undo-tree-id4235 . -8) (undo-tree-id4236 . -8) (undo-tree-id4237 . -8) (undo-tree-id4238 . -8) (undo-tree-id4239 . -8) (undo-tree-id4240 . -8) (undo-tree-id4241 . -8) 1746 (t 25953 64760 139162 558000)) nil (25953 64772 406107 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1737) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) 1738) nil (25953 64772 406052 0) 0 nil])
([nil nil ((1737 . 1739)) nil (25953 64772 405981 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1738 1746 #s(yas--snippet nil nil #s(yas--exit 1746 nil) 43 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1746 nil) 43 nil nil nil nil)) (1738 . 1746) (#("unwrap()$0" 0 10 (fontified nil)) . 1738) (1738 . 1748) (#("u" 0 1 (fontified nil)) . 1738) (1738 . 1739) (#("unwrap()" 0 8 (fontified nil)) . -1738) (1738 . 1746) (#("u" 0 1 (fontified t)) . -1738) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) 1739) nil (25953 64772 405977 0) 0 nil])
([nil nil ((3513 . 3515) (t 25953 64772 420261 465000)) nil (25953 64794 498784 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -3514) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) 3515) nil (25953 64794 498783 0) 0 nil])
([nil nil ((3514 . 3515)) nil (25953 64794 498775 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3513) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) 3514) nil (25953 64794 498773 0) 0 nil])
([nil nil ((3513 . 3514)) nil (25953 64794 498753 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3513 3521 #s(yas--snippet nil nil #s(yas--exit 3521 nil) 44 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3521 nil) 44 nil nil nil nil)) (3513 . 3521) (#("unwrap()$0" 0 10 (fontified nil)) . 3513) (3513 . 3523) (#("u" 0 1 (fontified nil)) . 3513) (3513 . 3514) (#("unwrap()" 0 8 (fontified nil)) . -3513) (3513 . 3521) (#("u" 0 1 (fontified t)) . -3513) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) 3514) nil (25953 64794 498750 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3521) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) 3522) nil (25953 64794 498736 0) 0 nil])
([nil nil ((3521 . 3522)) nil (25953 64794 498712 0) 0 nil])
([nil nil ((3554 . 3555) (t 25953 64794 513638 280000)) nil (25953 64808 250269 0) 0 nil])
([nil nil ((3554 . 3555)) nil (25953 64808 250267 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -3554) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) 3555) nil (25953 64808 250266 0) 0 nil])
([nil nil ((3554 . 3555)) nil (25953 64808 250256 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3554 3562 #s(yas--snippet nil nil #s(yas--exit 3562 nil) 45 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3562 nil) 45 nil nil nil nil)) (3554 . 3562) (#("unwrap()$0" 0 10 (fontified nil)) . 3554) (3554 . 3564) (#("u" 0 1 (fontified nil)) . 3554) (3554 . 3555) (#("unwrap()" 0 8 (fontified nil)) . -3554) (3554 . 3562) (#("u" 0 1 (fontified t)) . -3554) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) 3555) nil (25953 64808 250254 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3562) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) 3563) nil (25953 64808 250243 0) 0 nil])
([nil nil ((3562 . 3563)) nil (25953 64808 250217 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3563 3569 #s(yas--snippet nil nil #s(yas--exit 3569 nil) 46 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3569 nil) 46 nil nil nil nil)) (3563 . 3569) (#("into()$0" 0 8 (fontified nil)) . 3563) (3563 . 3571) (#("into() (as Into)" 0 16 (fontified nil)) . -3563) (3563 . 3579)) nil (25953 64808 250215 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3563) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (#("n" 0 1 (fontified t)) . -3564) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (#("t" 0 1 (fontified t)) . -3565) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (#("o" 0 1 (fontified t)) . -3566) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (#("(" 0 1 (fontified t)) . -3567) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (#(")" 0 1 (fontified t)) . -3568) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) 3569) nil (25953 64808 250204 0) 0 nil])
([nil nil ((3625 . 3626) (t 25953 64808 265683 992000)) nil (25953 64824 116372 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -3625) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) 3626) nil (25953 64824 116370 0) 0 nil])
([nil nil ((3625 . 3626)) nil (25953 64824 116355 0) 0 nil])
([nil nil ((3626 . 3627)) nil (25953 64824 116354 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -3626) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) 3627) nil (25953 64824 116353 0) 0 nil])
([nil nil ((3495 . 3497)) nil (25953 64824 116347 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3496 3504 #s(yas--snippet nil nil #s(yas--exit 3504 nil) 47 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3504 nil) 47 nil nil nil nil)) (3496 . 3504) (#("unwrap()$0" 0 10 (fontified nil)) . 3496) (3496 . 3506) (#("u" 0 1 (fontified nil)) . 3496) (3496 . 3497) (#("unwrap()" 0 8 (fontified nil)) . -3496) (3496 . 3504) (#("u" 0 1 (fontified t)) . -3496) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) 3497) nil (25953 64824 116343 0) 0 nil])
([nil nil ((#("unwrap()" 0 8 (fontified t)) . -3522) (undo-tree-id4516 . -8) (undo-tree-id4517 . -8) (undo-tree-id4518 . -8) (undo-tree-id4519 . -8) (undo-tree-id4520 . -8) (undo-tree-id4521 . -8) (undo-tree-id4522 . -8) (undo-tree-id4523 . -8) (undo-tree-id4524 . -8) (undo-tree-id4525 . -8) (undo-tree-id4526 . -8) (undo-tree-id4527 . -8) 3530 (t 25953 64824 132047 555000)) nil (25953 64830 171122 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3521) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) 3522) nil (25953 64830 171108 0) 0 nil])
([nil nil ((#("unwrap()" 0 8 (fontified t)) . -3554) (undo-tree-id4485 . -8) (undo-tree-id4486 . -8) (undo-tree-id4487 . -8) (undo-tree-id4488 . -8) (undo-tree-id4489 . -8) (undo-tree-id4490 . -8) (undo-tree-id4491 . -8) (undo-tree-id4492 . -8) (undo-tree-id4493 . -8) (undo-tree-id4494 . -8) (undo-tree-id4495 . -8) (undo-tree-id4496 . -8) (undo-tree-id4497 . -8) (undo-tree-id4498 . -8) 3562) nil (25953 64830 171090 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3553) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) 3554) nil (25953 64830 171074 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3617) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) 3618) nil (25953 64830 171056 0) 0 nil])
([nil nil ((apply -3 4785 4936 undo--wrap-and-run-primitive-undo 4785 4936 ((4788 . 4791) 4925))) nil (25953 64844 771919 0) 0 nil])
([nil nil ((4927 . 4931) (t 25953 64844 788371 626000)) nil (25953 64853 636409 0) 0 nil])
([nil nil ((4931 . 4935)) nil (25953 64853 636407 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4931) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (#("p" 0 1 (fontified t)) . -4932) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (#("p" 0 1 (fontified t)) . -4933) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (#("_" 0 1 (fontified t)) . -4934) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) 4935) nil (25953 64853 636401 0) 0 nil])
([nil nil ((4931 . 4933) (t 25953 64853 651615 769000)) nil (25953 64931 950751 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -4931) (undo-tree-id4643 . -1) (#("a" 0 1 (fontified t)) . -4932) (undo-tree-id4644 . -1) 4933) nil (25953 64931 950749 0) 0 nil])
([nil nil ((4931 . 4934)) nil (25953 64931 950746 0) 0 nil])
([nil nil ((4931 . 4938) (#("man" 0 3 (fontified nil)) . 4931) (4931 . 4934) (#("manager" 0 7 (fontified nil)) . -4931) (4931 . 4938) (#("man" 0 3 (fontified t)) . -4931) (undo-tree-id4642 . -3) 4934) nil (25953 64931 950744 0) 0 nil])
([nil nil ((4938 . 4940)) nil (25953 64931 950741 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4939) (undo-tree-id4641 . -1) 4940) nil (25953 64931 950740 0) 0 nil])
([nil nil ((4939 . 4941)) nil (25953 64931 950736 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 4948 4953 nil nil nil nil #s(yas--field 2 4955 4962 nil nil nil nil #s(yas--exit 4963 nil))) #s(yas--field 2 4955 4962 nil nil nil nil #s(yas--exit 4963 nil))) #s(yas--exit 4963 nil) 48 nil #s(yas--field 1 4948 4953 nil nil nil nil #s(yas--field 2 4955 4962 nil nil nil nil #s(yas--exit 4963 nil))) nil nil)) (4939 . 4963) (#("emit_all(${1:event}, ${2:payload})$0" 0 36 (fontified nil)) . 4939) (4939 . 4975) (#("em" 0 2 (fontified nil)) . 4939) (4939 . 4941) (#("emit_all(…) (as Manager)" 0 24 (fontified nil)) . -4939) (4939 . 4963) (#("em" 0 2 (fontified t)) . -4939) (undo-tree-id4640 . -2) 4941) nil (25953 64931 950734 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4939 4963 #s(yas--snippet nil (#s(yas--field 1 4948 4953 nil nil nil nil #s(yas--field 2 4955 4962 nil nil nil nil #s(yas--exit 4963 nil))) #s(yas--field 2 4955 4962 nil nil nil nil #s(yas--exit 4963 nil))) #s(yas--exit 4963 nil) 48 nil #s(yas--field 1 4948 4953 nil nil nil nil #s(yas--field 2 4955 4962 nil nil nil nil #s(yas--exit 4963 nil))) nil nil))) nil (25953 64931 950730 0) 0 nil])
([nil nil ((#("event" 0 5 (fontified t)) . -4948) (undo-tree-id4638 . -5) (undo-tree-id4639 . -5) 4953) nil (25953 64931 950729 0) 0 nil])
([nil nil ((4948 . 4950)) nil (25953 64931 950726 0) 0 nil])
([nil nil ((4949 . 4957)) nil (25953 64931 950725 0) 0 nil])
([nil nil ((#("payload" 0 7 (fontified t)) . -4960) (undo-tree-id4634 . -7) (undo-tree-id4635 . -7) (undo-tree-id4636 . -7) (undo-tree-id4637 . -7) 4967) nil (25953 64931 950724 0) 0 nil])
([nil nil ((4960 . 4961)) nil (25953 64931 950719 0) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -4960) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) 4961) nil (25953 64931 950718 0) 0 nil])
([nil nil ((4960 . 4962)) nil (25953 64931 950715 0) 0 nil])
([nil nil ((4960 . 4967) (#("Pa" 0 2 (fontified nil)) . 4960) (4960 . 4962) (#("Payload" 0 7 (fontified nil)) . -4960) (4960 . 4967) (#("Pa" 0 2 (face font-lock-type-face fontified t)) . -4960) (undo-tree-id4631 . -2) 4962) nil (25953 64931 950713 0) 0 nil])
([nil nil ((4967 . 4969)) nil (25953 64931 950710 0) 0 nil])
([nil nil ((4968 . 4969)) nil (25953 64931 950709 0) 0 nil])
([nil nil ((4968 . 4975) (#("m" 0 1 (fontified nil)) . 4968) (4968 . 4969) (#("message" 0 7 (fontified nil)) . -4968) (4968 . 4975) (#("m" 0 1 (fontified t)) . -4968) (undo-tree-id4630 . -1) 4969) nil (25953 64931 950707 0) 0 nil])
([nil nil ((4975 . 4977)) nil (25953 64931 950704 0) 0 nil])
([nil nil ((4979 . 4981)) nil (25953 64931 950703 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4980 4988 #s(yas--snippet nil nil #s(yas--exit 4988 nil) 49 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 4988 nil) 49 nil nil nil nil)) (4980 . 4988) (#("unwrap()$0" 0 10 (fontified nil)) . 4980) (4980 . 4990) (#("u" 0 1 (fontified nil)) . 4980) (4980 . 4981) (#("unwrap()" 0 8 (fontified nil)) . -4980) (4980 . 4988) (#("u" 0 1 (fontified t)) . -4980) (undo-tree-id4629 . -1) 4981) nil (25953 64931 950701 0) 0 nil])
([nil nil ((4988 . 4989)) nil (25953 64931 950697 0) 0 nil])
([nil nil ((4977 . 4980)) nil (25953 64931 950696 0) 0 nil])
([nil nil ((4977 . 4987) (#("ser" 0 3 (fontified nil)) . 4977) (4977 . 4980) (#("serde_json" 0 10 (fontified nil)) . -4977) (4977 . 4987) (#("ser" 0 3 (fontified t)) . -4977) (undo-tree-id4628 . -3) 4980) nil (25953 64931 950694 0) 0 nil])
([nil nil ((4987 . 4991)) nil (25953 64931 950691 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 4999 5071 nil nil nil t #s(yas--exit 5072 nil))) #s(yas--exit 5072 nil) 50 nil #s(yas--field 1 4999 5071 nil nil nil t #s(yas--exit 5072 nil)) nil nil)) (4989 . 5005) (#("to_string(${1:value})$0" 0 23 (fontified nil)) . 4989) (4989 . 5012) (#("to" 0 2 (fontified nil)) . 4989) (4989 . 4991) (#("to_string(…)" 0 12 (fontified nil)) . -4989) (4989 . 5001) (#("to" 0 2 (fontified t)) . -4989) (undo-tree-id4627 . -2) 4991) nil (25953 64931 950689 0) 0 nil])
([nil nil ((5000 . 5003) (#("value" 0 5 (fontified nil)) . 5000) (undo-tree-id4626 . -5) (4999 . 5000)) nil (25953 64931 950685 0) 0 nil])
([nil nil ((5000 . 5008) (#("ADC" 0 3 (fontified nil)) . 5000) (undo-tree-id4621 . -3) (5000 . 5003) (#("ADC_Data" 0 8 (fontified nil)) . -5000) (undo-tree-id4622 . -8) (5000 . 5008) (#("ADC" 0 3 (face font-lock-type-face fontified t)) . -5000) (undo-tree-id4623 . -3) (undo-tree-id4624 . -3) (undo-tree-id4625 . -3) 5003) nil (25953 64931 950681 0) 0 nil])
([nil nil ((5008 . 5010)) nil (25953 64931 950674 0) 0 nil])
([nil nil ((5009 . 5011)) nil (25953 64931 950673 0) 0 nil])
([nil nil ((5009 . 5014) (#("in" 0 2 (fontified nil)) . 5009) (5009 . 5011) (#("index" 0 5 (fontified nil)) . -5009) (5009 . 5014) (#("in" 0 2 (face font-lock-keyword-face fontified t)) . -5009) (undo-tree-id4614 . -2) (undo-tree-id4615 . -2) (undo-tree-id4616 . -1) (undo-tree-id4617 . -2) (undo-tree-id4618 . -2) (undo-tree-id4619 . -2) (undo-tree-id4620 . -2) 5011) nil (25953 64931 950671 0) 0 nil])
([nil nil ((5014 . 5017)) nil (25953 64931 950662 0) 0 nil])
([nil nil ((5016 . 5029) (#("s" 0 1 (fontified nil)) . 5016) (5016 . 5017) (#("send_interval" 0 13 (fontified nil)) . -5016) (5016 . 5029) (#("s" 0 1 (fontified t)) . -5016) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) 5017) nil (25953 64931 950660 0) 0 nil])
([nil nil ((5029 . 5032)) nil (25953 64931 950651 0) 0 nil])
([nil nil ((5032 . 5033)) nil (25953 64931 950650 0) 0 nil])
([nil nil ((5031 . 5036) (#("va" 0 2 (fontified nil)) . 5031) (5031 . 5033) (#("value" 0 5 (fontified nil)) . -5031) (5031 . 5036) (#("va" 0 2 (fontified t)) . -5031) (undo-tree-id4600 . -2) (undo-tree-id4601 . -2) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -2) (undo-tree-id4606 . -2) 5033) nil (25953 64931 950649 0) 0 nil])
([nil nil ((5036 . 5041)) nil (25953 64931 950639 0) 0 nil])
([nil nil ((5038 . 5046) (#("adc" 0 3 (fontified nil)) . 5038) (5038 . 5041) (#("adc_data" 0 8 (fontified nil)) . -5038) (5038 . 5046) (#("adc" 0 3 (fontified t)) . -5038) (undo-tree-id4591 . -3) (undo-tree-id4592 . -3) (undo-tree-id4593 . -1) (undo-tree-id4594 . -2) (undo-tree-id4595 . -2) (undo-tree-id4596 . -3) (undo-tree-id4597 . -3) (undo-tree-id4598 . -3) (undo-tree-id4599 . -3) 5041) nil (25953 64931 950638 0) 0 nil])
([nil nil ((5046 . 5048)) nil (25953 64931 950626 0) 0 nil])
([nil nil ((5047 . 5048)) nil (25953 64931 950625 0) 0 nil])
([nil nil ((5047 . 5060) (#("s" 0 1 (fontified nil)) . 5047) (5047 . 5048) (#("send_interval" 0 13 (fontified nil)) . -5047) (5047 . 5060) (#("s" 0 1 (fontified t)) . -5047) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) 5048) nil (25953 64931 950624 0) 0 nil])
([nil nil ((5060 . 5069)) nil (25953 64931 950616 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4989 5072 #s(yas--snippet nil (#s(yas--field 1 4999 5071 nil nil nil t #s(yas--exit 5072 nil))) #s(yas--exit 5072 nil) 50 nil #s(yas--field 1 4999 5071 nil nil nil t #s(yas--exit 5072 nil)) nil nil))) nil (25953 64931 950615 0) 0 nil])
([nil nil ((5072 . 5074)) nil (25953 64931 950614 0) 0 nil])
([nil nil ((apply yas--snippet-revive 5073 5081 #s(yas--snippet nil nil #s(yas--exit 5081 nil) 51 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 5081 nil) 51 nil nil nil nil)) (5073 . 5081) (#("unwrap()$0" 0 10 (fontified nil)) . 5073) (5073 . 5083) (#("u" 0 1 (fontified nil)) . 5073) (5073 . 5074) (#("unwrap()" 0 8 (fontified nil)) . -5073) (5073 . 5081) (#("u" 0 1 (fontified t)) . -5073) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) 5074) nil (25953 64931 950609 0) 0 nil])
([nil nil ((apply -6 5259 5413 undo--wrap-and-run-primitive-undo 5259 5413 ((5337 . 5340) (5263 . 5266) 5259))) nil (25953 64948 318158 0) 0 nil])
([nil nil ((apply -9 5583 5683 undo--wrap-and-run-primitive-undo 5583 5683 ((5677 . 5680) (5622 . 5625) (5584 . 5587) 5583))) nil (25953 64959 141477 0) 0 nil])
([nil nil ((5159 . 5161) (#("		" 0 2 (fontified nil)) . 5158) (undo-tree-id4676 . -2) (5157 . 5161) (t 25953 64959 157846 863000)) nil (25954 1931 928341 0) 0 nil])
([nil nil ((5161 . 5165)) nil (25954 1931 928338 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 5167 5191 nil nil nil t #s(yas--exit 5192 nil))) #s(yas--exit 5192 nil) 53 nil #s(yas--field 1 5167 5191 nil nil nil t #s(yas--exit 5192 nil)) nil nil)) (5161 . 5171) (#("sleep(${1:dur})$0" 0 17 (fontified nil)) . 5161) (5161 . 5178) (#("slee" 0 4 (fontified nil)) . 5161) (5161 . 5165) (#("sleep(…)" 0 8 (fontified nil)) . -5161) (5161 . 5169) (#("slee" 0 4 (fontified t)) . -5161) (undo-tree-id4665 . -4) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -2) (undo-tree-id4669 . -2) (undo-tree-id4670 . -3) (undo-tree-id4671 . -3) (undo-tree-id4672 . -4) (undo-tree-id4673 . -4) (undo-tree-id4674 . -4) (undo-tree-id4675 . -4) 5165) nil (25954 1931 928336 0) 0 nil])
([nil nil ((5168 . 5170) (#("dur" 0 3 (fontified nil)) . 5168) (undo-tree-id4664 . -3) (5167 . 5168)) nil (25954 1931 928322 0) 0 nil])
([nil nil ((5167 . 5175) (#("Dur" 0 3 (fontified nil)) . 5167) (undo-tree-id4648 . -3) (5167 . 5170) (#("Duration" 0 8 (fontified nil)) . -5167) (undo-tree-id4649 . -8) (5167 . 5175) (#("Dur" 0 3 (face font-lock-type-face fontified t)) . -5167) (undo-tree-id4650 . -3) (undo-tree-id4651 . -3) (undo-tree-id4652 . -3) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -2) (undo-tree-id4659 . -2) (undo-tree-id4660 . -3) (undo-tree-id4661 . -3) (undo-tree-id4662 . -3) (undo-tree-id4663 . -3) 5170) nil (25954 1931 928318 0) 0 nil])
([nil nil ((5175 . 5177)) nil (25954 1931 928300 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 5189 5190 nil nil nil t #s(yas--exit 5191 nil))) #s(yas--exit 5191 nil) 54 nil #s(yas--field 1 5189 5190 nil nil nil t #s(yas--exit 5191 nil)) #s(yas--field 1 5167 5191 nil nil nil t #s(yas--exit 5192 nil)) nil)) (5177 . 5196) (#("from_millis(${1:millis})$0" 0 26 (fontified nil)) . 5177) (undo-tree-id4646 . -26) (5177 . 5203) (#("from_millis(…)" 0 14 (fontified nil)) . -5177) (undo-tree-id4647 . -14) (5177 . 5191)) nil (25954 1931 928299 0) 0 nil])
([nil nil ((#("millis" 0 6 (fontified nil)) . 5190) (undo-tree-id4645 . -6) (5189 . 5190)) nil (25954 1931 928294 0) 0 nil])
([nil nil ((apply yas--snippet-revive 5177 5191 #s(yas--snippet nil (#s(yas--field 1 5189 5190 nil nil nil t #s(yas--exit 5191 nil))) #s(yas--exit 5191 nil) 54 nil #s(yas--field 1 5189 5190 nil nil nil t #s(yas--exit 5191 nil)) #s(yas--field 1 5167 5191 nil nil nil t #s(yas--exit 5192 nil)) nil))) nil (25954 1931 928283 0) 0 nil])
([nil nil ((apply yas--snippet-revive 5161 5192 #s(yas--snippet nil (#s(yas--field 1 5167 5191 nil nil nil t #s(yas--exit 5192 nil))) #s(yas--exit 5192 nil) 53 nil #s(yas--field 1 5167 5191 nil nil nil t #s(yas--exit 5192 nil)) nil nil))) nil (25954 1931 928282 0) 0 nil])
([nil nil ((5192 . 5193)) nil (25954 1931 928277 0) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -5189) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) 5190 (t 25954 1931 946720 366000)) nil (25954 2047 604694 0) 0 nil])
([nil nil ((5189 . 5190)) nil (25954 2047 604670 0) 0 nil])
([nil nil ((#("		sleep(Duration::from_millis(2));
" 0 2 (fontified t) 2 8 (fontified t) 8 16 (face font-lock-type-face fontified t) 16 18 (fontified t) 18 32 (fontified t) 32 34 (fontified t) 34 35 (fontified t)) . -5159) (undo-tree-id4689 . -35) (undo-tree-id4690 . -35) (undo-tree-id4691 . -8) (undo-tree-id4692 . -30) (undo-tree-id4693 . -30) (undo-tree-id4694 . -30) (undo-tree-id4695 . -30) (undo-tree-id4696 . -30) (undo-tree-id4697 . -30) (undo-tree-id4698 . -30) (undo-tree-id4699 . -30) (undo-tree-id4700 . -30) (undo-tree-id4701 . 4) (undo-tree-id4702 . -31) (undo-tree-id4703 . -31) (undo-tree-id4704 . -31) (undo-tree-id4705 . -31) (undo-tree-id4706 . -31) (undo-tree-id4707 . -31) (undo-tree-id4708 . -31) (undo-tree-id4709 . -31) (undo-tree-id4710 . -31) (undo-tree-id4711 . -31) (undo-tree-id4712 . -31) (undo-tree-id4713 . -31) (undo-tree-id4714 . -31) (undo-tree-id4715 . -31) (undo-tree-id4716 . -31) (undo-tree-id4717 . -31) (undo-tree-id4718 . -31) (undo-tree-id4719 . -31) (undo-tree-id4720 . -31) (undo-tree-id4721 . -31) (undo-tree-id4722 . -31) (undo-tree-id4723 . -31) (undo-tree-id4724 . -31) (undo-tree-id4725 . -31) (undo-tree-id4726 . -31) (undo-tree-id4727 . -31) (undo-tree-id4728 . -31) (undo-tree-id4729 . -31) (undo-tree-id4730 . -31) (undo-tree-id4731 . -31) (undo-tree-id4732 . -31) (undo-tree-id4733 . -31) (undo-tree-id4734 . -31) (undo-tree-id4735 . -31) (undo-tree-id4736 . -31) (undo-tree-id4737 . -31) (undo-tree-id4738 . -31) (undo-tree-id4739 . -31) (undo-tree-id4740 . -31) (undo-tree-id4741 . -31) (undo-tree-id4742 . -31) (undo-tree-id4743 . -31) (undo-tree-id4744 . -31) (undo-tree-id4745 . -31) (undo-tree-id4746 . -31) (undo-tree-id4747 . -31) (undo-tree-id4748 . -31) (undo-tree-id4749 . -31) (undo-tree-id4750 . -23) (undo-tree-id4751 . -23) (undo-tree-id4752 . -23) (undo-tree-id4753 . -23) (undo-tree-id4754 . -23) (undo-tree-id4755 . -23) (undo-tree-id4756 . -29) (undo-tree-id4757 . -29) (undo-tree-id4758 . -23) (undo-tree-id4759 . -29) (undo-tree-id4760 . -29) (undo-tree-id4761 . -35) (undo-tree-id4762 . -35) (undo-tree-id4763 . -23) (undo-tree-id4764 . -35) (undo-tree-id4765 . -35) (undo-tree-id4766 . -35) (undo-tree-id4767 . -35) (undo-tree-id4768 . -35) (undo-tree-id4769 . -35) (undo-tree-id4770 . -35) 5194 (t 25954 2047 622133 183000)) nil (25954 2092 292573 0) 0 nil])
([nil nil ((5159 . 5160) (t 25954 2092 310464 467000)) nil (25954 2166 829658 0) 0 nil])
([nil current ((#("n" 0 1 (fontified t)) . -5159) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) 5160) nil (25954 2166 829654 0) 0 nil])
nil
