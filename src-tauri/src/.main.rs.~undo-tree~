(undo-tree-save-format-version . 1)
"f5e64e152cb7550e4307751693ea0bb89d88698f"
[nil nil nil nil (25944 26676 704695 0) 0 nil]
([nil nil ((2281 . 2283) (t 25942 11912 988073 832000)) nil (25944 26676 704694 0) 0 nil])
([nil nil ((2291 . 2294) (2282 . 2290) (#("	" 0 1 (fontified t)) . -2282) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) 2283 (2283 . 2283) (2283 . 2284)) nil (25944 26676 704692 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 2298 2311 nil nil nil t #s(yas--exit 2312 nil))) #s(yas--exit 2312 nil) 0 nil #s(yas--field 1 2298 2311 nil nil nil t #s(yas--exit 2312 nil)) nil nil)) (2291 . 2304) (#("manage(${1:state})$0" 0 20 (fontified nil)) . 2291) (2291 . 2311) (#("man" 0 3 (fontified nil)) . 2291) (2291 . 2294) (#("manage(â€¦)" 0 9 (fontified nil)) . -2291) (2291 . 2300) (#("man" 0 3 (fontified t)) . -2291) (undo-tree-id141 . -3) (undo-tree-id142 . -1) (undo-tree-id143 . -2) (undo-tree-id144 . -2) (undo-tree-id145 . -3) (undo-tree-id146 . -3) 2294) nil (25944 26676 704683 0) 0 nil])
([nil nil ((#("state" 0 5 (fontified nil)) . 2299) (undo-tree-id140 . -5) (2298 . 2299)) nil (25944 26676 704669 0) 0 nil])
([nil nil ((2298 . 2308) (#("H" 0 1 (fontified nil)) . 2298) (undo-tree-id130 . -1) (2298 . 2299) (#("Hid_Handle" 0 10 (fontified nil)) . -2298) (undo-tree-id131 . -10) (2298 . 2308) (#("H" 0 1 (face font-lock-type-face fontified t)) . -2298) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) 2299) nil (25944 26676 704665 0) 0 nil])
([nil nil ((2308 . 2311)) nil (25944 26676 704653 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2291 2312 #s(yas--snippet nil (#s(yas--field 1 2298 2311 nil nil nil t #s(yas--exit 2312 nil))) #s(yas--exit 2312 nil) 0 nil #s(yas--field 1 2298 2311 nil nil nil t #s(yas--exit 2312 nil)) nil nil))) nil (25944 26676 704652 0) 0 nil])
([nil nil ((#("        .manage(Hid_Handle {})
" 0 8 (fontified t) 8 9 (fontified t) 9 16 (fontified t) 16 26 (face font-lock-type-face fontified t) 26 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t)) . -2282) (undo-tree-id0 . -31) (undo-tree-id1 . -31) (undo-tree-id2 . -9) (undo-tree-id3 . -9) (undo-tree-id4 . -9) (undo-tree-id5 . -9) (undo-tree-id6 . -9) (undo-tree-id7 . -9) (undo-tree-id8 . -9) (undo-tree-id9 . -9) (undo-tree-id10 . -9) (undo-tree-id11 . -9) (undo-tree-id12 . -9) (undo-tree-id13 . -9) (undo-tree-id14 . -9) (undo-tree-id15 . -30) (undo-tree-id16 . -30) (undo-tree-id17 . -16) (undo-tree-id18 . -16) (undo-tree-id19 . -16) (undo-tree-id20 . -16) (undo-tree-id21 . -16) (undo-tree-id22 . -16) (undo-tree-id23 . -16) (undo-tree-id24 . -16) (undo-tree-id25 . -16) (undo-tree-id26 . -16) (undo-tree-id27 . -16) (undo-tree-id28 . -16) (undo-tree-id29 . -16) (undo-tree-id30 . -16) (undo-tree-id31 . -16) (undo-tree-id32 . -16) (undo-tree-id33 . -16) (undo-tree-id34 . -16) (undo-tree-id35 . -26) (undo-tree-id36 . -26) (undo-tree-id37 . -26) (undo-tree-id38 . -26) (undo-tree-id39 . -26) (undo-tree-id40 . -26) (undo-tree-id41 . -26) (undo-tree-id42 . -26) (undo-tree-id43 . -26) (undo-tree-id44 . -26) (undo-tree-id45 . -27) (undo-tree-id46 . -27) (undo-tree-id47 . -27) (undo-tree-id48 . -27) (undo-tree-id49 . -27) (undo-tree-id50 . -28) (undo-tree-id51 . -28) (undo-tree-id52 . -28) (undo-tree-id53 . -29) (undo-tree-id54 . -29) (undo-tree-id55 . -29) (undo-tree-id56 . -29) (undo-tree-id57 . -29) (undo-tree-id58 . -29) (undo-tree-id59 . -29) (undo-tree-id60 . -29) (undo-tree-id61 . -29) (undo-tree-id62 . -29) (undo-tree-id63 . -29) (undo-tree-id64 . -29) (undo-tree-id65 . -29) (undo-tree-id66 . -28) (undo-tree-id67 . -28) (undo-tree-id68 . -28) (undo-tree-id69 . -28) (undo-tree-id70 . -28) (undo-tree-id71 . -28) (undo-tree-id72 . -28) (undo-tree-id73 . -28) (undo-tree-id74 . -27) (undo-tree-id75 . -27) (undo-tree-id76 . -27) (undo-tree-id77 . -27) (undo-tree-id78 . -27) (undo-tree-id79 . -27) (undo-tree-id80 . -27) (undo-tree-id81 . -27) (undo-tree-id82 . -27) (undo-tree-id83 . -27) (undo-tree-id84 . -27) (undo-tree-id85 . -27) (undo-tree-id86 . -27) (undo-tree-id87 . -27) (undo-tree-id88 . -27) (undo-tree-id89 . -27) (undo-tree-id90 . -27) (undo-tree-id91 . -27) (undo-tree-id92 . -27) (undo-tree-id93 . -27) (undo-tree-id94 . -27) (undo-tree-id95 . -27) (undo-tree-id96 . -27) (undo-tree-id97 . -27) (undo-tree-id98 . -27) (undo-tree-id99 . -27) (undo-tree-id100 . -27) (undo-tree-id101 . -27) (undo-tree-id102 . -27) (undo-tree-id103 . -27) (undo-tree-id104 . -27) (undo-tree-id105 . -27) (undo-tree-id106 . -27) (undo-tree-id107 . -30) (undo-tree-id108 . -30) (undo-tree-id109 . -30) (undo-tree-id110 . -30) (undo-tree-id111 . -30) (undo-tree-id112 . -30) (undo-tree-id113 . -30) (undo-tree-id114 . -31) (undo-tree-id115 . -31) (undo-tree-id116 . -30) (undo-tree-id117 . -30) (undo-tree-id118 . -31) (undo-tree-id119 . -31) (undo-tree-id120 . -31) (undo-tree-id121 . -31) (undo-tree-id122 . -30) (undo-tree-id123 . -31) (undo-tree-id124 . -31) (undo-tree-id125 . -31) (undo-tree-id126 . -31) (undo-tree-id127 . -31) (undo-tree-id128 . -31) (undo-tree-id129 . -31) 2313) nil (25944 26824 630572 0) 0 nil])
([nil nil ((#("		    println!(\"{:?}\", res);" 0 6 (fontified t) 6 14 (face rust-builtin-formatting-macro fontified t) 14 15 (fontified t) 15 16 (face font-lock-string-face fontified t) 16 20 (face rust-string-interpolation fontified t) 20 21 (face font-lock-string-face fontified t) 21 28 (fontified t)) . 1804) (undo-tree-id254 . -28) (undo-tree-id255 . -28) (undo-tree-id256 . -28) (undo-tree-id257 . -28) (undo-tree-id258 . -28) (undo-tree-id259 . -28) (undo-tree-id260 . -28) (undo-tree-id261 . -28) (undo-tree-id262 . -28) (undo-tree-id263 . -28) (undo-tree-id264 . -28) (undo-tree-id265 . -28) (undo-tree-id266 . -28) (undo-tree-id267 . -28) (undo-tree-id268 . -28) (undo-tree-id269 . -28) (t 25944 26826 356784 794000)) nil (25944 26858 27891 0) 0 nil] [nil nil ((#("runtime" 0 7 (face font-lock-constant-face fontified t)) . -2407) (undo-tree-id166 . -3) (undo-tree-id167 . -7) (undo-tree-id168 . -7) (undo-tree-id169 . -7) 2414 (t 25944 26676 739608 893000)) ((2407 . 2414)) (25944 26824 93691 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1804) (undo-tree-id253 . -1)) nil (25944 26858 27873 0) 0 nil])
([nil nil ((#("async_" 0 6 (face font-lock-constant-face fontified t)) . -2401) (undo-tree-id162 . -6) (undo-tree-id163 . -6) (undo-tree-id164 . -6) (undo-tree-id165 . -6) 2407) ((2401 . 2407)) (25944 26823 144662 0) 0 nil])
([nil nil ((1838 . 1842)) nil (25944 26858 27871 0) 0 nil])
([nil nil ((#("tauri::" 0 5 (face font-lock-constant-face fontified t) 5 7 (fontified t)) . -2394) (undo-tree-id158 . -7) (undo-tree-id159 . -7) (undo-tree-id160 . -7) (undo-tree-id161 . -7) 2401) ((2394 . 2401)) (25944 26822 819752 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1870 . 1871) (nil fontified nil 1870 . 1871) (nil fontified nil 1863 . 1870) (nil fontified nil 1862 . 1863) (nil fontified nil 1858 . 1862) (nil fontified nil 1857 . 1858) (nil fontified nil 1856 . 1857) (nil fontified nil 1848 . 1856) (nil fontified nil 1842 . 1848) (1842 . 1871)) nil (25944 26858 27869 0) 0 nil])
([nil nil ((2394 . 2400)) ((#("thread" 0 6 (face font-lock-constant-face fontified t)) . 2394) (undo-tree-id240 . -6) (undo-tree-id241 . -6)) (25944 26822 392294 0) 0 nil])
([nil nil ((#("		    " 0 6 (fontified t)) . -1842) 1839) nil (25944 26858 27865 0) 0 nil])
([nil nil ((2394 . 2400) (#("thread" 0 6 (fontified nil)) . 2394) (2394 . 2400) (#("thread" 0 6 (face font-lock-constant-face fontified t)) . -2394) (undo-tree-id156 . -6) (undo-tree-id157 . -6) 2400) ((2394 . 2400) (#("thread" 0 6 (fontified nil)) . 2394) (2394 . 2400) (#("thread" 0 6 (face font-lock-constant-face fontified t)) . 2394)) (25944 26821 443212 0) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -1864) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) 1865) nil (25944 26858 27861 0) 0 nil])
([nil nil ((#("async " 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . -2408) (undo-tree-id152 . -6) (undo-tree-id154 . -6) 2414) ((2408 . 2414)) (25944 26821 12493 0) 0 nil])
([nil nil ((#("    info!(?message, \"rs2js\");" 0 4 (fontified t) 4 9 (face font-lock-preprocessor-face fontified t) 9 10 (fontified t) 10 11 (face rust-question-mark fontified t) 11 20 (fontified t) 20 27 (face font-lock-string-face fontified t) 27 29 (fontified t)) . 1019) (undo-tree-id291 . -29) (undo-tree-id292 . -29) (undo-tree-id293 . -29) (undo-tree-id294 . -29) (undo-tree-id295 . -29) (undo-tree-id296 . -29) (undo-tree-id297 . -29) (undo-tree-id298 . -29) (undo-tree-id299 . -29) (undo-tree-id300 . -29) (undo-tree-id301 . -29) (undo-tree-id302 . -29) (undo-tree-id303 . -29) (undo-tree-id304 . -29) (undo-tree-id305 . -29) (undo-tree-id306 . -29) (undo-tree-id307 . -29) (undo-tree-id308 . -29) (t 25944 26858 33927 202000)) nil (25944 26944 313209 0) 0 nil])
([nil nil ((#("await" 0 5 (face font-lock-keyword-face fontified t)) . -2471) (undo-tree-id218 . -5) (undo-tree-id219 . -5) (undo-tree-id220 . -5) (undo-tree-id221 . -5) (undo-tree-id222 . -5) (undo-tree-id223 . -5) (undo-tree-id224 . -5) (undo-tree-id225 . -5) (undo-tree-id226 . -5) (undo-tree-id227 . -5) (undo-tree-id228 . -5) (undo-tree-id229 . -5) (undo-tree-id230 . -5) (undo-tree-id231 . -5) (undo-tree-id232 . -5) (undo-tree-id233 . -5) (undo-tree-id234 . -5) (undo-tree-id235 . -5) (undo-tree-id236 . -5) (undo-tree-id237 . -5) (undo-tree-id238 . -5) (undo-tree-id239 . -5) 2476 (t 25944 26779 379378 555000)) ((2471 . 2476)) (25944 26820 454417 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1019) (undo-tree-id290 . -1)) nil (25944 26944 313191 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2470) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) 2471) ((2470 . 2471)) (25944 26820 59735 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 1019) (1019 . 1023) (1019 . 1020)) nil (25944 26944 313188 0) 0 nil])
([nil nil ((#("async " 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . -1139) (undo-tree-id170 . -6) (undo-tree-id171 . -6) (undo-tree-id172 . -6) (undo-tree-id173 . -6) (undo-tree-id174 . -6) (undo-tree-id175 . -6) (undo-tree-id176 . -6) (undo-tree-id177 . -6) (undo-tree-id178 . -6) (undo-tree-id179 . -6) (undo-tree-id180 . -6) (undo-tree-id181 . -6) (undo-tree-id182 . -6) (undo-tree-id183 . -6) (undo-tree-id184 . -6) (undo-tree-id185 . -6) (undo-tree-id186 . -6) 1145) ((1139 . 1145) (t 25944 26789 785864 796000)) (25944 26789 780345 0) 0 nil])
([nil nil ((1019 . 1023)) nil (25944 26944 313187 0) 0 nil])
nil
([nil nil ((1023 . 1024)) nil (25944 26944 313186 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1023 1033 #s(yas--snippet nil nil #s(yas--exit 1032 nil) 1 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1032 nil) 1 nil nil nil nil)) (1023 . 1033) (#("println!($0)" 0 12 (fontified nil)) . 1023) (1023 . 1035) (#("p" 0 1 (fontified nil)) . 1023) (1023 . 1024) (#("println!(â€¦)" 0 11 (fontified nil)) . -1023) (1023 . 1034) (#("p" 0 1 (fontified t)) . -1023) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) 1024) nil (25944 26944 313184 0) 0 nil])
([nil nil ((1032 . 1034)) nil (25944 26944 313176 0) 0 nil])
([nil nil ((1033 . 1035)) nil (25944 26944 313175 0) 0 nil])
([nil nil ((1034 . 1036)) nil (25944 26944 313174 0) 0 nil])
([nil nil ((1038 . 1039)) nil (25944 26944 313173 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -1038) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) 1039) nil (25944 26944 313171 0) 0 nil])
([nil nil ((1038 . 1042)) nil (25944 26944 313163 0) 0 nil])
([nil nil ((1040 . 1047) (#("me" 0 2 (fontified nil)) . 1040) (1040 . 1042) (#("message" 0 7 (fontified nil)) . -1040) (1040 . 1047) (#("me" 0 2 (fontified t)) . -1040) (undo-tree-id270 . -2) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -2) (undo-tree-id274 . -2) (undo-tree-id275 . -2) (undo-tree-id276 . -2) 1042) nil (25944 26944 313160 0) 0 nil])
([nil nil ((1048 . 1049)) nil (25944 26944 313142 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -1836) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) 1837 (t 25944 26944 319367 406000)) nil (25944 27753 924705 0) 0 nil])
([nil nil ((1836 . 1837)) nil (25944 27753 924677 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -1836) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) 1837 (t 25944 27753 931513 623000)) nil (25944 27968 432553 0) 0 nil])
([nil nil ((1836 . 1837)) nil (25944 27968 432473 0) 0 nil])
([nil nil ((1915 . 1916) (1884 . 1884) (1884 . 1885) (t 25944 27968 438672 581000)) nil (25944 28019 934840 0) 0 nil])
([nil nil ((1903 . 1904)) nil (25944 28019 934838 0) 0 nil])
([nil nil ((1903 . 1909)) nil (25944 28019 934837 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1908) (undo-tree-id389 . -1) (undo-tree-id390 . -1) 1909) nil (25944 28019 934836 0) 0 nil])
([nil nil ((1908 . 1912)) nil (25944 28019 934833 0) 0 nil])
([nil nil ((1908 . 1914) (#("hand" 0 4 (fontified nil)) . 1908) (1908 . 1912) (#("handle" 0 6 (fontified nil)) . -1908) (1908 . 1914) (#("hand" 0 4 (fontified t)) . -1908) (undo-tree-id387 . -4) (undo-tree-id388 . -4) 1912) nil (25944 28019 934831 0) 0 nil])
([nil nil ((1914 . 1917)) nil (25944 28019 934827 0) 0 nil])
([nil nil ((1915 . 1923) (#("re" 0 2 (fontified nil)) . 1915) (1915 . 1917) (#("recv_buf" 0 8 (fontified nil)) . -1915) (1915 . 1923) (#("re" 0 2 (fontified t)) . -1915) (undo-tree-id385 . -2) (undo-tree-id386 . -2) 1917) nil (25944 28019 934825 0) 0 nil])
([nil nil ((1923 . 1924)) nil (25944 28019 934821 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1923) (undo-tree-id383 . -1) (undo-tree-id384 . -1) 1924) nil (25944 28019 934820 0) 0 nil])
([nil nil ((1923 . 1925)) nil (25944 28019 934816 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1923) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (#("[" 0 1 (fontified t)) . -1924) (undo-tree-id381 . -1) (undo-tree-id382 . -1) 1925) nil (25944 28019 934814 0) 0 nil])
([nil nil ((1923 . 1925)) nil (25944 28019 934800 0) 0 nil])
([nil nil ((1924 . 1925)) nil (25944 28019 934796 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1940) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) 1941 (t 25944 28019 940982 471000)) nil (25944 28039 858157 0) 0 nil])
([nil nil ((1903 . 1910) (t 25944 28039 864344 620000)) nil (25944 28057 369829 0) 0 nil])
([nil nil ((1933 . 1940) (t 25944 28057 376316 534000)) nil (25944 31022 522096 0) 0 nil])
([nil nil ((apply -3 1019 1053 undo--wrap-and-run-primitive-undo 1019 1053 ((1023 . 1026)))) ((apply 3 1019 1050 undo--wrap-and-run-primitive-undo 1019 1050 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1023) 1868))) (25944 31037 141660 0) 0 nil] [nil nil ((#("    println!(\"{:?}\", message);" 0 4 (fontified t) 4 12 (face rust-builtin-formatting-macro fontified t) 12 13 (fontified t) 13 14 (face font-lock-string-face fontified t) 14 18 (face rust-string-interpolation fontified t) 18 19 (face font-lock-string-face fontified t) 19 21 (fontified t) 21 28 (fontified t) 28 30 (fontified t)) . -1019) (undo-tree-id416 . -30) (undo-tree-id417 . -30) (undo-tree-id418 . -30) (undo-tree-id419 . -30) (undo-tree-id420 . -30) (undo-tree-id421 . -30) (undo-tree-id422 . -30) (undo-tree-id423 . -30) (undo-tree-id424 . -30) (undo-tree-id425 . -30) (undo-tree-id426 . -30) (undo-tree-id427 . -30)) ((1019 . 1049)) (25944 31001 586939 0) 0 nil] [nil nil ((apply -93 1019 1959 undo--wrap-and-run-primitive-undo 1019 1959 ((1895 . 1898) (1808 . 1811) (1793 . 1796) (1780 . 1783) (1756 . 1759) (1746 . 1749) (1710 . 1713) (1703 . 1706) (1691 . 1694) (1665 . 1668) (1644 . 1647) (1632 . 1635) (1619 . 1622) (1586 . 1589) (1564 . 1567) (1519 . 1522) (1504 . 1507) (1471 . 1474) (1457 . 1460) (1383 . 1386) (1334 . 1337) (1271 . 1274) (1264 . 1267) (1224 . 1227) (1179 . 1182) (1155 . 1158) (1148 . 1151) (1126 . 1129) (1068 . 1071) (1053 . 1056) (1019 . 1022)))) ((apply 93 1019 1866 undo--wrap-and-run-primitive-undo 1019 1866 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1019) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1053) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1068) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1126) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1148) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1155) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1179) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1224) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1264) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1271) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1334) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1383) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1457) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1471) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1504) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1519) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1564) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1586) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1619) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1632) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1644) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1665) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1691) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1703) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1710) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1746) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1756) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1780) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1793) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1808) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1895) 1019))) (25944 30997 991400 0) 0 nil] [nil nil ((apply -3 1843 1869 undo--wrap-and-run-primitive-undo 1843 1869 (("                        " . 1843) (1843 . 1870) 1865))) ((apply 3 1843 1866 undo--wrap-and-run-primitive-undo 1843 1866 ((#("                        // " 24 27 (face font-lock-comment-delimiter-face fontified t)) . 1843) (1843 . 1867) 1049))) (25944 28639 103725 0) 0 nil])
([nil nil ((apply -3 1843 1872 undo--wrap-and-run-primitive-undo 1843 1872 ((1846 . 1849) 1868))) nil (25944 31042 411838 0) 0 nil] [nil nil ((apply -96 1019 1965 undo--wrap-and-run-primitive-undo 1019 1965 ((1936 . 1939) (1898 . 1901) (1811 . 1814) (1796 . 1799) (1783 . 1786) (1759 . 1762) (1749 . 1752) (1713 . 1716) (1706 . 1709) (1694 . 1697) (1668 . 1671) (1647 . 1650) (1635 . 1638) (1622 . 1625) (1589 . 1592) (1567 . 1570) (1522 . 1525) (1507 . 1510) (1474 . 1477) (1460 . 1463) (1386 . 1389) (1337 . 1340) (1274 . 1277) (1267 . 1270) (1227 . 1230) (1182 . 1185) (1158 . 1161) (1151 . 1154) (1129 . 1132) (1071 . 1074) (1056 . 1059) (1019 . 1022) 1868))) ((apply 96 1019 1869 undo--wrap-and-run-primitive-undo 1019 1869 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1019) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1056) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1071) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1129) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1151) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1158) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1182) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1227) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1267) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1274) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1337) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1386) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1460) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1474) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1507) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1522) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1567) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1589) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1622) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1635) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1647) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1668) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1694) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1706) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1713) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1749) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1759) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1783) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1796) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1811) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1898) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 1936) 1964))) (25944 31037 140916 0) 0 nil])
([nil nil ((1019 . 1020)) ((#("c" 0 1 (fontified t)) . 1019) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1)) (25944 31001 87961 0) 0 nil])
nil
nil
([nil nil ((#("message)" 0 8 (fontified t)) . -1110) (undo-tree-id498 . -8) (undo-tree-id499 . -8) (undo-tree-id500 . -8) (undo-tree-id501 . -8) (undo-tree-id502 . -8) (undo-tree-id503 . -8) (undo-tree-id504 . -8) (undo-tree-id505 . -8) (undo-tree-id506 . -8) (undo-tree-id507 . -8) (undo-tree-id508 . -8) (undo-tree-id509 . -8) (undo-tree-id510 . -8) (undo-tree-id511 . -8) (undo-tree-id512 . -8) (undo-tree-id513 . -8) 1118 (t 25944 31042 418695 156000)) nil (25944 37876 615418 0) 0 nil])
nil
([nil nil ((#("c" 0 1 (fontified t)) . -1019) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) 1020) ((1019 . 1020)) (25944 31001 87725 0) 0 nil])
([nil nil ((#("rs: {}\", " 0 4 (face font-lock-string-face fontified t) 4 6 (face rust-string-interpolation fontified t) 6 7 (face font-lock-string-face fontified t) 7 9 (fontified t)) . -1101) (undo-tree-id475 . -9) (undo-tree-id476 . -9) (undo-tree-id477 . -9) (undo-tree-id478 . -9) (undo-tree-id479 . -9) (undo-tree-id480 . -9) (undo-tree-id481 . -9) (undo-tree-id482 . -9) (undo-tree-id483 . -9) (undo-tree-id484 . -9) (undo-tree-id485 . -9) (undo-tree-id486 . -9) (undo-tree-id487 . -9) (undo-tree-id488 . -9) (undo-tree-id489 . -9) (undo-tree-id490 . -9) (undo-tree-id491 . -9) (undo-tree-id492 . -9) (undo-tree-id493 . -9) (undo-tree-id494 . -9) (undo-tree-id495 . -9) (undo-tree-id496 . -9) (undo-tree-id497 . -9) 1110) nil (25944 37876 615396 0) 0 nil])
nil
([nil nil ((#("format!(\"" 0 7 (face rust-builtin-formatting-macro fontified t) 7 8 (fontified t) 8 9 (face font-lock-string-face fontified t)) . -1092) (undo-tree-id445 . -9) (undo-tree-id446 . -9) (undo-tree-id447 . -9) (undo-tree-id448 . -9) (undo-tree-id449 . -9) (undo-tree-id450 . -9) (undo-tree-id451 . -9) (undo-tree-id452 . -9) (undo-tree-id453 . -9) (undo-tree-id454 . -9) (undo-tree-id455 . -9) (undo-tree-id456 . -9) (undo-tree-id457 . -9) (undo-tree-id458 . -9) (undo-tree-id459 . -9) (undo-tree-id460 . -9) (undo-tree-id461 . -9) (undo-tree-id462 . -9) (undo-tree-id463 . -9) (undo-tree-id464 . -9) (undo-tree-id465 . -9) (undo-tree-id466 . -9) (undo-tree-id467 . -9) (undo-tree-id468 . -9) (undo-tree-id469 . -9) (undo-tree-id470 . -9) (undo-tree-id471 . -9) (undo-tree-id472 . -9) (undo-tree-id473 . -9) (undo-tree-id474 . -9) 1101) nil (25944 37876 615372 0) 0 nil])
([nil nil ((1092 . 1094)) nil (25944 37876 615342 0) 0 nil])
([nil nil ((1092 . 1099) (#("me" 0 2 (fontified nil)) . 1092) (1092 . 1094) (#("message" 0 7 (fontified nil)) . -1092) (1092 . 1099) (#("me" 0 2 (fontified t)) . -1092) (undo-tree-id440 . -2) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -2) (undo-tree-id444 . -2) 1094) nil (25944 37876 615337 0) 0 nil])
([nil nil ((apply 3 1019 1049 undo--wrap-and-run-primitive-undo 1019 1049 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1023) (#<marker at 2543 in main.rs<src-tauri>> . -3) (#<marker at 2543 in main.rs<src-tauri>> . -3) (#<marker at 2543 in main.rs<src-tauri>> . -3) (#<marker at 2543 in main.rs<src-tauri>> . -3) (#<marker at 2543 in main.rs<src-tauri>> . -3) (#<marker at 2543 in main.rs<src-tauri>> . -3) (#<marker at 2543 in main.rs<src-tauri>> . -3) (#<marker at 2543 in main.rs<src-tauri>> . -3) (#<marker at 2543 in main.rs<src-tauri>> . -3) (#<marker at 2543 in main.rs<src-tauri>> . -3) (#<marker at 2543 in main.rs<src-tauri>> . -3) (#<marker at 2543 in main.rs<src-tauri>> . -3) (#<marker at 2543 in main.rs<src-tauri>> . -3) (#<marker at 2543 in main.rs<src-tauri>> . -3) (#<marker at 2543 in main.rs<src-tauri>> . -3) (#<marker at 2543 in main.rs<src-tauri>> . -3) (#<marker in no buffer> . -3) 1052))) nil (25944 38004 245785 0) 0 nil])
([nil nil ((2907 . 2909) (t 25944 38004 253091 434000)) nil (25944 38255 452242 0) 0 nil])
([nil nil ((2909 . 2914)) nil (25944 38255 452237 0) 0 nil])
([nil nil ((365 . 366) (357 . 357) (357 . 358) (t 25944 38255 460617 310000)) nil (25944 38396 931394 0) 0 nil])
([nil nil ((365 . 370)) nil (25944 38396 931392 0) 0 nil])
([nil nil ((367 . 373) (#("Win" 0 3 (fontified nil)) . 367) (367 . 370) (#("Window" 0 6 (fontified nil)) . -367) (367 . 373) (#("Win" 0 3 (face font-lock-type-face fontified t)) . -367) (undo-tree-id514 . -3) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) 370) nil (25944 38663 460698 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2917) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (#(" " 0 1 (fontified t)) . -2918) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (#("r" 0 1 (fontified t)) . -2919) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (#("s" 0 1 (fontified t)) . -2920) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (#("2" 0 1 (fontified t)) . -2921) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (#("j" 0 1 (fontified t)) . -2922) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (#("s" 0 1 (fontified t)) . -2923) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) 2924 (t 25944 38664 897462 728000)) nil (25944 38675 831509 0) 0 nil] [nil nil ((#("Runtime>" 0 7 (face font-lock-type-face fontified t) 7 8 (fontified t)) . -974) (undo-tree-id919 . -8) (undo-tree-id920 . -8) (undo-tree-id922 . -8) (undo-tree-id924 . -8) (undo-tree-id926 . -8) (undo-tree-id928 . -8) (undo-tree-id930 . -8) (undo-tree-id932 . -8) (undo-tree-id934 . -8) (undo-tree-id936 . -8) (undo-tree-id938 . -8) 982 (t 25944 38396 938816 463000)) ((974 . 982)) (25944 38662 568188 0) 0 nil])
([nil nil ((#("mut " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -1303) (undo-tree-id1419 . -4) (undo-tree-id1420 . -4) (undo-tree-id1421 . -4) (undo-tree-id1422 . -4) (undo-tree-id1423 . -4) (undo-tree-id1424 . -4) (undo-tree-id1425 . -4) (undo-tree-id1426 . -4) (undo-tree-id1427 . -4) (undo-tree-id1428 . -4) (undo-tree-id1429 . -4) (undo-tree-id1430 . -4) 1307 (t 25944 38675 840681 303000)) nil (25944 38699 784056 0) 0 nil])
([nil nil ((#("tauri::" 0 5 (face font-lock-constant-face fontified t) 5 7 (fontified t)) . -967) (undo-tree-id893 . -7) (undo-tree-id894 . -7) (undo-tree-id896 . -7) (undo-tree-id898 . -7) (undo-tree-id900 . -7) (undo-tree-id902 . -7) (undo-tree-id904 . -7) (undo-tree-id906 . -7) (undo-tree-id908 . -7) (undo-tree-id910 . -7) (undo-tree-id912 . -7) (undo-tree-id914 . -7) (undo-tree-id916 . -7) (undo-tree-id918 . -7) 974) ((967 . 974)) (25944 38661 738565 0) 0 nil])
([nil nil ((apply -3 1029 1063 undo--wrap-and-run-primitive-undo 1029 1063 ((1033 . 1036) 1029))) nil (25944 38833 884697 0) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -963) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id750 . -1) (undo-tree-id752 . -1) (undo-tree-id754 . -1) (undo-tree-id756 . -1) (undo-tree-id758 . -1) (undo-tree-id760 . -1) (undo-tree-id762 . -1) (undo-tree-id764 . -1) (undo-tree-id766 . -1) (undo-tree-id768 . -1) (undo-tree-id770 . -1) (undo-tree-id772 . -1) (undo-tree-id774 . -1) (undo-tree-id776 . -1) (undo-tree-id778 . -1) (undo-tree-id780 . -1) (undo-tree-id782 . -1) (undo-tree-id784 . -1) (undo-tree-id786 . -1) (undo-tree-id788 . -1) (undo-tree-id790 . -1) (#("R" 0 1 (face font-lock-type-face fontified t)) . -964) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id794 . -1) (undo-tree-id796 . -1) (undo-tree-id798 . -1) (undo-tree-id800 . -1) (undo-tree-id802 . -1) (undo-tree-id804 . -1) (undo-tree-id806 . -1) (undo-tree-id808 . -1) (undo-tree-id810 . -1) (undo-tree-id812 . -1) (undo-tree-id814 . -1) (undo-tree-id816 . -1) (undo-tree-id818 . -1) (undo-tree-id820 . -1) (undo-tree-id822 . -1) (undo-tree-id824 . -1) (undo-tree-id826 . -1) (#(":" 0 1 (fontified t)) . -965) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id831 . -1) (undo-tree-id833 . -1) (undo-tree-id835 . -1) (undo-tree-id837 . -1) (undo-tree-id839 . -1) (undo-tree-id841 . -1) (undo-tree-id843 . -1) (undo-tree-id845 . -1) (undo-tree-id847 . -1) (undo-tree-id849 . -1) (undo-tree-id851 . -1) (undo-tree-id853 . -1) (undo-tree-id855 . -1) (undo-tree-id857 . -1) (undo-tree-id859 . -1) (undo-tree-id861 . -1) (#(" " 0 1 (fontified t)) . -966) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id865 . -1) (undo-tree-id867 . -1) (undo-tree-id869 . -1) (undo-tree-id871 . -1) (undo-tree-id873 . -1) (undo-tree-id875 . -1) (undo-tree-id877 . -1) (undo-tree-id879 . -1) (undo-tree-id881 . -1) (undo-tree-id883 . -1) (undo-tree-id885 . -1) (undo-tree-id887 . -1) (undo-tree-id889 . -1) (undo-tree-id891 . -1) 967) ((963 . 967)) (25944 38661 369504 0) 0 nil])
([nil nil ((571 . 573) (t 25944 38833 893094 65000)) nil (25944 39024 724847 0) 0 nil])
([nil nil ((#("R>" 0 1 (face font-lock-type-face fontified t) 1 2 (fontified t)) . -1004) (undo-tree-id731 . -2) (undo-tree-id732 . -2) (undo-tree-id734 . -2) (undo-tree-id736 . -2) (undo-tree-id738 . -2) (undo-tree-id740 . -2) (undo-tree-id742 . -2) (undo-tree-id744 . -2) (undo-tree-id746 . -2) 1006) ((1004 . 1006)) (25944 38660 985077 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 609 . 610) (nil fontified nil 573 . 610) (573 . 610)) nil (25944 39028 241802 0) 0 nil])
([nil nil ((#("Manager<" 0 7 (face font-lock-type-face fontified t) 7 8 (fontified t)) . -996) (undo-tree-id710 . -8) (undo-tree-id711 . -8) (undo-tree-id713 . -8) (undo-tree-id715 . -8) (undo-tree-id717 . -8) (undo-tree-id719 . -8) (undo-tree-id721 . -8) (undo-tree-id723 . -8) (undo-tree-id725 . -8) (undo-tree-id727 . -8) (undo-tree-id729 . -8) 1004) ((996 . 1004)) (25944 38660 613443 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 606 . 607) (nil fontified nil 572 . 607) (572 . 607)) nil (25944 39036 877773 0) 0 nil] [nil nil ((nil rear-nonsticky nil 608 . 609) (nil fontified nil 572 . 609) (572 . 609)) ((#("struct Payload {
  message: String,
}" 0 6 (face font-lock-keyword-face fontified nil) 6 7 (fontified nil) 7 14 (face font-lock-type-face fontified nil) 14 19 (fontified nil) 19 26 (face font-lock-variable-name-face fontified nil) 26 28 (fontified nil) 28 34 (face font-lock-type-face fontified nil) 34 36 (fontified nil) 36 37 (rear-nonsticky nil fontified nil)) . 572) (undo-tree-id1431 . -37) (undo-tree-id1432 . -36) (nil fontified t 606 . 608) (nil fontified t 600 . 606) (nil fontified t 598 . 600) (nil fontified t 591 . 598) (nil fontified t 586 . 591) (nil fontified t 579 . 586) (nil fontified t 578 . 579) (nil fontified t 572 . 578) (nil rear-nonsticky t 608 . 609)) (25944 39028 241142 0) 0 nil] [nil nil ((572 . 573)) ((#("
" 0 1 (fontified t)) . 572)) (25944 39024 724840 0) 0 nil])
([nil nil ((#("impl " 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . -991) (undo-tree-id684 . -5) (undo-tree-id685 . -5) (undo-tree-id687 . -5) (undo-tree-id689 . -5) (undo-tree-id691 . -5) (undo-tree-id693 . -5) (undo-tree-id695 . -5) (undo-tree-id697 . -5) (undo-tree-id699 . -5) (undo-tree-id701 . -5) (undo-tree-id703 . -5) (undo-tree-id705 . -5) (undo-tree-id707 . -5) (undo-tree-id709 . -5) 996) ((991 . 996)) (25944 38660 232058 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -607) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) 608) nil (25944 39036 877771 0) 0 nil])
nil
nil
([nil nil ((#("manager: &" 0 7 (face font-lock-variable-name-face fontified t) 7 9 (fontified t) 9 10 (fontified t)) . -981) (undo-tree-id653 . -10) (undo-tree-id654 . -10) (undo-tree-id656 . -10) (undo-tree-id658 . -10) (undo-tree-id660 . -10) (undo-tree-id662 . -10) (undo-tree-id664 . -10) (undo-tree-id666 . -10) (undo-tree-id668 . -10) (undo-tree-id670 . -10) (undo-tree-id672 . -10) (undo-tree-id674 . -10) (undo-tree-id676 . -10) (undo-tree-id678 . -10) (undo-tree-id680 . -10) (undo-tree-id682 . -10) 991) ((981 . 991)) (25944 38659 756596 0) 0 nil])
([nil nil ((571 . 573)) nil (25944 39036 877753 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -979) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id579 . -1) (undo-tree-id581 . -1) (undo-tree-id583 . -1) (undo-tree-id585 . -1) (undo-tree-id587 . -1) (undo-tree-id589 . -1) (undo-tree-id591 . -1) (undo-tree-id593 . -1) (undo-tree-id595 . -1) (undo-tree-id597 . -1) (undo-tree-id599 . -1) (undo-tree-id601 . -1) (undo-tree-id603 . -1) (undo-tree-id605 . -1) (undo-tree-id607 . -1) (undo-tree-id609 . -1) (undo-tree-id611 . -1) (undo-tree-id613 . -1) (#(" " 0 1 (fontified t)) . -980) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id618 . -1) (undo-tree-id620 . -1) (undo-tree-id622 . -1) (undo-tree-id624 . -1) (undo-tree-id626 . -1) (undo-tree-id628 . -1) (undo-tree-id630 . -1) (undo-tree-id632 . -1) (undo-tree-id634 . -1) (undo-tree-id636 . -1) (undo-tree-id638 . -1) (undo-tree-id640 . -1) (undo-tree-id642 . -1) (undo-tree-id644 . -1) (undo-tree-id646 . -1) (undo-tree-id648 . -1) (undo-tree-id650 . -1) (undo-tree-id652 . -1) 981) ((979 . 981)) (25944 38659 487288 0) 0 nil])
([nil nil ((apply -3 2803 2858 undo--wrap-and-run-primitive-undo 2803 2858 ((2827 . 2830) 2854))) nil (25944 39118 575130 0) 0 nil])
([nil nil ((964 . 968)) ((#("win " 0 3 (fontified t) 3 4 (fontified t)) . 964) (undo-tree-id1293 . -3) (undo-tree-id1294 . -3) (undo-tree-id1295 . -3) (undo-tree-id1296 . -3) (undo-tree-id1297 . -3) (undo-tree-id1298 . -3) (undo-tree-id1299 . -3) (undo-tree-id1300 . -3) (undo-tree-id1301 . -3) (undo-tree-id1302 . -3) (undo-tree-id1303 . -3) (undo-tree-id1304 . -3) (undo-tree-id1305 . -3) (undo-tree-id1306 . -3) (undo-tree-id1307 . -3) (undo-tree-id1308 . -3) (undo-tree-id1309 . -3) (undo-tree-id1310 . -3) (undo-tree-id1311 . -3) (undo-tree-id1312 . -3)) (25944 38659 254801 0) 0 nil])
([nil nil ((2857 . 2861)) nil (25944 39118 575129 0) 0 nil])
([nil nil ((967 . 969)) ((#("do" 0 2 (fontified t)) . 967) (undo-tree-id1282 . -2) (undo-tree-id1283 . -2) (undo-tree-id1284 . -2) (undo-tree-id1285 . -2) (undo-tree-id1286 . -2) (undo-tree-id1287 . -2) (undo-tree-id1288 . -2) (undo-tree-id1289 . -2) (undo-tree-id1290 . -2) (undo-tree-id1291 . -2) (undo-tree-id1292 . -2)) (25944 38659 11373 0) 0 nil])
([nil nil ((2861 . 2866)) nil (25944 39118 575128 0) 0 nil])
([nil nil ((373 . 381) (964 . 964) (964 . 970) (#("windo" 0 5 (fontified nil)) . 964) (964 . 969) (#("window (use tauri::window)" 0 26 (fontified nil)) . -964) (964 . 990) (#("windo" 0 5 (fontified t)) . -964) (undo-tree-id548 . -5) (undo-tree-id549 . -5) (undo-tree-id551 . -2) (undo-tree-id553 . -3) (undo-tree-id555 . -3) (undo-tree-id557 . -3) (undo-tree-id559 . -3) (undo-tree-id561 . -3) (undo-tree-id563 . -3) (undo-tree-id565 . -3) (undo-tree-id567 . -3) (undo-tree-id569 . -4) (undo-tree-id571 . -5) (undo-tree-id573 . -5) (undo-tree-id575 . -5) 969) ((964 . 969) (#("window (use tauri::window)" 0 26 (fontified nil)) . 964) (964 . 990) (#("windo" 0 5 (fontified nil)) . 964) (964 . 969) (#("window" 0 6 (fontified t)) . 964) (undo-tree-id1197 . -6) (undo-tree-id1198 . -6) (undo-tree-id1199 . -6) (undo-tree-id1200 . -6) (undo-tree-id1201 . -6) (undo-tree-id1202 . -6) (undo-tree-id1203 . -6) (undo-tree-id1204 . -6) (undo-tree-id1205 . -6) (undo-tree-id1206 . -6) (undo-tree-id1207 . -6) (undo-tree-id1208 . -6) (undo-tree-id1209 . -6) (undo-tree-id1210 . -6) (undo-tree-id1211 . -6) (undo-tree-id1212 . -6) (undo-tree-id1213 . -6) (undo-tree-id1214 . -6) (undo-tree-id1215 . -6) (undo-tree-id1216 . -6) (undo-tree-id1217 . -6) (undo-tree-id1218 . -6) (undo-tree-id1219 . -6) (undo-tree-id1220 . -6) (undo-tree-id1221 . -6) (undo-tree-id1222 . -6) (undo-tree-id1223 . -6) (undo-tree-id1224 . -6) (undo-tree-id1225 . -6) (undo-tree-id1226 . -6) (undo-tree-id1227 . -6) (undo-tree-id1228 . -6) (undo-tree-id1229 . -6) (undo-tree-id1230 . -6) (undo-tree-id1231 . -6) (undo-tree-id1232 . -6) (undo-tree-id1233 . -6) (undo-tree-id1234 . -6) (undo-tree-id1235 . -6) (undo-tree-id1236 . -6) (undo-tree-id1237 . -6) (undo-tree-id1238 . -6) (undo-tree-id1239 . -6) (undo-tree-id1240 . -6) (undo-tree-id1241 . -6) (undo-tree-id1242 . -6) (undo-tree-id1243 . -6) (undo-tree-id1244 . -6) (undo-tree-id1245 . -6) (undo-tree-id1246 . -6) (undo-tree-id1247 . -6) (undo-tree-id1248 . -6) (undo-tree-id1249 . -6) (undo-tree-id1250 . -6) (undo-tree-id1251 . -6) (undo-tree-id1252 . -6) (undo-tree-id1253 . -6) (undo-tree-id1254 . -6) (undo-tree-id1255 . -6) (undo-tree-id1256 . -6) (undo-tree-id1257 . -6) (undo-tree-id1258 . -6) (undo-tree-id1259 . -6) (undo-tree-id1260 . -6) (undo-tree-id1261 . -6) (undo-tree-id1262 . -6) (undo-tree-id1263 . -6) (undo-tree-id1264 . -6) (undo-tree-id1265 . -6) (undo-tree-id1266 . -6) (undo-tree-id1267 . -6) (undo-tree-id1268 . -6) (undo-tree-id1269 . -6) (undo-tree-id1270 . -6) (undo-tree-id1271 . -6) (undo-tree-id1272 . -6) (undo-tree-id1273 . -6) (undo-tree-id1274 . -6) (undo-tree-id1275 . -6) (undo-tree-id1276 . -6) (undo-tree-id1277 . -6) (undo-tree-id1278 . -6) (undo-tree-id1279 . -6) (undo-tree-id1280 . -6) (undo-tree-id1281 . -6) (#(", window" 0 8 (fontified t)) . 373)) (25944 38658 783947 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 2874 2884 nil nil nil t #s(yas--field 2 2886 2893 nil nil nil nil #s(yas--exit 2894 nil))) #s(yas--field 2 2886 2893 nil nil nil nil #s(yas--exit 2894 nil))) #s(yas--exit 2894 nil) 86 nil #s(yas--field 1 2874 2884 nil nil nil t #s(yas--field 2 2886 2893 nil nil nil nil #s(yas--exit 2894 nil))) nil nil)) (2865 . 2889) (#("emit_all(${1:event}, ${2:payload})$0" 0 36 (fontified nil)) . 2865) (2865 . 2901) (#("e" 0 1 (fontified nil)) . 2865) (2865 . 2866) (#("emit_all(â€¦) (as Manager)" 0 24 (fontified nil)) . -2865) (2865 . 2889) (#("e" 0 1 (fontified t)) . -2865) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) 2866) nil (25944 39118 575126 0) 0 nil])
([nil nil ((978 . 980)) ((#("::" 0 1 (fontified t) 1 2 (fontified t)) . 978) (undo-tree-id1122 . -2) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -2) (undo-tree-id1191 . -2) (undo-tree-id1192 . -2) (undo-tree-id1193 . -2) (undo-tree-id1194 . -2) (undo-tree-id1195 . -2) (undo-tree-id1196 . -2)) (25944 38658 548053 0) 0 nil])
([nil nil ((2875 . 2876) (#("event" 0 5 (fontified nil)) . 2875) (undo-tree-id1526 . -5) (2874 . 2875)) nil (25944 39118 575118 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -979) (undo-tree-id544 . -1) (undo-tree-id546 . -1) 980) ((979 . 980)) (25944 38658 216890 0) 0 nil])
([nil nil ((2875 . 2883)) nil (25944 39118 575115 0) 0 nil])
([nil nil ((979 . 983)) ((#(" Win" 0 1 (fontified t) 1 4 (face font-lock-type-face fontified t)) . 979) (undo-tree-id1061 . -4) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -4) (undo-tree-id1117 . -4) (undo-tree-id1118 . -4) (undo-tree-id1119 . -4) (undo-tree-id1120 . -4) (undo-tree-id1121 . -4)) (25944 38658 56355 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-string-face fontified t)) . -2879) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -2880) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -2881) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -2882) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) 2883) nil (25944 39118 575113 0) 0 nil])
([nil nil ((980 . 986) (#("Win" 0 3 (fontified nil)) . 980) (980 . 983) (#("Window" 0 6 (fontified nil)) . -980) (980 . 986) (#("Win" 0 3 (face font-lock-type-face fontified t)) . -980) (undo-tree-id538 . -3) (undo-tree-id540 . -2) (undo-tree-id542 . -3) 983) ((980 . 983) (#("Window" 0 6 (fontified nil)) . 980) (980 . 986) (#("Win" 0 3 (fontified nil)) . 980) (980 . 983) (#("Window" 0 6 (face font-lock-type-face fontified t)) . 980) (undo-tree-id1006 . -6) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -6) (undo-tree-id1056 . -6) (undo-tree-id1057 . -6) (undo-tree-id1058 . -6) (undo-tree-id1059 . -6) (undo-tree-id1060 . -6)) (25944 38657 889842 0) 0 nil])
([nil nil ((2879 . 2883)) nil (25944 39118 575083 0) 0 nil])
([nil nil ((986 . 987)) ((#("," 0 1 (fontified t)) . 986)) (25944 38657 708272 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2865 2894 #s(yas--snippet nil (#s(yas--field 1 2874 2884 nil nil nil t #s(yas--field 2 2886 2893 nil nil nil nil #s(yas--exit 2894 nil))) #s(yas--field 2 2886 2893 nil nil nil nil #s(yas--exit 2894 nil))) #s(yas--exit 2894 nil) 86 nil #s(yas--field 1 2874 2884 nil nil nil t #s(yas--field 2 2886 2893 nil nil nil nil #s(yas--exit 2894 nil))) nil nil))) nil (25944 39118 575082 0) 0 nil])
([nil nil ((#("manager" 0 7 (fontified t)) . -1042) (undo-tree-id524 . -7) (undo-tree-id525 . -7) (undo-tree-id526 . -7) (undo-tree-id528 . -7) (undo-tree-id529 . -7) (undo-tree-id531 . -7) (undo-tree-id533 . -7) (undo-tree-id535 . -7) (undo-tree-id537 . -7) 1049) ((1042 . 1049)) (25944 38657 520194 0) 0 nil])
([nil nil ((#("payload" 0 7 (fontified t)) . -2886) (undo-tree-id1482 . -7) (undo-tree-id1483 . -1) (undo-tree-id1484 . -2) (undo-tree-id1485 . -3) (undo-tree-id1486 . -4) (undo-tree-id1487 . -5) (undo-tree-id1488 . -6) (undo-tree-id1489 . -6) (undo-tree-id1490 . -6) (undo-tree-id1491 . -6) (undo-tree-id1492 . -6) (undo-tree-id1493 . -7) (undo-tree-id1494 . -7) (undo-tree-id1495 . -7) (undo-tree-id1496 . -7) (undo-tree-id1497 . -7) 2893) nil (25944 39118 575080 0) 0 nil])
([nil nil ((1042 . 1044)) ((#("Wi" 0 2 (face font-lock-type-face fontified t)) . 1042) (undo-tree-id1002 . -2) (undo-tree-id1003 . -2) (undo-tree-id1004 . -2) (undo-tree-id1005 . -2)) (25944 38657 300802 0) 0 nil])
([nil nil ((2886 . 2890)) nil (25944 39118 575064 0) 0 nil])
([nil nil ((1042 . 1048) (#("Wi" 0 2 (fontified nil)) . 1042) (1042 . 1044) (#("Window" 0 6 (fontified nil)) . -1042) (1042 . 1048) (#("Wi" 0 2 (face font-lock-type-face fontified t)) . -1042) (undo-tree-id520 . -2) (undo-tree-id522 . -2) 1044) ((1042 . 1044) (#("Window" 0 6 (fontified nil)) . 1042) (1042 . 1048) (#("Wi" 0 2 (fontified nil)) . 1042) (1042 . 1044) (#("Window" 0 6 (face font-lock-type-face fontified t)) . 1042) (undo-tree-id994 . -6) (undo-tree-id995 . -6) (undo-tree-id996 . -6) (undo-tree-id997 . -6) (undo-tree-id998 . -6) (undo-tree-id999 . -6) (undo-tree-id1000 . -6) (undo-tree-id1001 . -6)) (25944 38657 107908 0) 0 nil])
([nil nil ((2886 . 2893) (#("Payl" 0 4 (fontified nil)) . 2886) (2886 . 2890) (#("Payload" 0 7 (fontified nil)) . -2886) (2886 . 2893) (#("Payl" 0 4 (face font-lock-type-face fontified t)) . -2886) (undo-tree-id1472 . -4) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -2) (undo-tree-id1477 . -2) (undo-tree-id1478 . -3) (undo-tree-id1479 . -3) (undo-tree-id1480 . -4) (undo-tree-id1481 . -4) 2890) nil (25944 39118 575062 0) 0 nil])
([nil nil ((#("Window" 0 6 (face font-lock-type-face fontified t)) . -1042) (undo-tree-id947 . -6) (undo-tree-id948 . -6) (undo-tree-id950 . -6) (undo-tree-id952 . -6) (undo-tree-id954 . -6) (undo-tree-id956 . -6) (undo-tree-id958 . -6) (undo-tree-id960 . -6) (undo-tree-id962 . -6) (undo-tree-id964 . -6) (undo-tree-id966 . -6) (undo-tree-id968 . -6) (undo-tree-id970 . -6) (undo-tree-id972 . -6) (undo-tree-id974 . -6) (undo-tree-id976 . -6) (undo-tree-id978 . -6) (undo-tree-id980 . -6) (undo-tree-id982 . -6) (undo-tree-id984 . -6) (undo-tree-id986 . -6) 1048 (t 25944 38435 656087 675000)) ((1042 . 1048)) (25944 38656 783573 0) 0 nil])
([nil nil ((2893 . 2895)) nil (25944 39118 575050 0) 0 nil])
([nil nil ((1042 . 1044)) ((#("wi" 0 2 (fontified t)) . 1042) (undo-tree-id989 . -2) (undo-tree-id990 . -2) (undo-tree-id991 . -2) (undo-tree-id992 . -2) (undo-tree-id993 . -2)) (25944 38656 458137 0) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-type-face fontified t)) . -2893) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (#("{" 0 1 (fontified t)) . -2894) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) 2895) nil (25944 39118 575047 0) 0 nil])
([nil nil ((1042 . 1048) (#("wi" 0 2 (fontified nil)) . 1042) (1042 . 1044) (#("window" 0 6 (fontified nil)) . -1042) (1042 . 1048) (#("wi" 0 2 (fontified t)) . -1042) (undo-tree-id940 . -1) (undo-tree-id941 . -2) (undo-tree-id943 . -2) (undo-tree-id945 . -2) 1044) ((1042 . 1044) (#("window" 0 6 (fontified nil)) . 1042) (1042 . 1048) (#("wi" 0 2 (fontified nil)) . 1042) (1042 . 1044) (#("window" 0 6 (fontified t)) . 1042) (t 25944 38440 305910 333000)) (25944 38541 615261 0) 0 nil])
([nil nil ((2893 . 2895)) nil (25944 39118 575028 0) 0 nil])
([nil nil ((#("		" 0 2 (fontified nil)) . 1606) (1606 . 1608) (1606 . 1607) (t 25944 38440 305910 333000)) ((#("
" 0 1 (fontified nil)) . 1606) (undo-tree-id988 . -1) (#("		" 0 2 (fontified nil)) . 1606) (1606 . 1608)) (25944 38541 614610 0) 0 nil])
([nil nil ((2894 . 2895)) nil (25944 39118 575027 0) 0 nil])
nil
([nil nil ((2894 . 2901) (#("m" 0 1 (fontified nil)) . 2894) (2894 . 2895) (#("message" 0 7 (fontified nil)) . -2894) (2894 . 2901) (#("m" 0 1 (fontified t)) . -2894) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) 2895) nil (25944 39118 575025 0) 0 nil])
([nil nil ((2901 . 2905)) nil (25944 39118 575019 0) 0 nil])
([nil nil ((2903 . 2909) (#("ou" 0 2 (fontified nil)) . 2903) (2903 . 2905) (#("output" 0 6 (fontified nil)) . -2903) (2903 . 2909) (#("ou" 0 2 (fontified t)) . -2903) (undo-tree-id1446 . -2) (undo-tree-id1447 . -1) (undo-tree-id1448 . -2) (undo-tree-id1449 . -2) 2905) nil (25944 39118 575017 0) 0 nil])
([nil nil ((2911 . 2914)) nil (25944 39118 575010 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2912 2920 #s(yas--snippet nil nil #s(yas--exit 2920 nil) 87 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 2920 nil) 87 nil nil nil nil)) (2912 . 2920) (#("unwrap()$0" 0 10 (fontified nil)) . 2912) (2912 . 2922) (#("un" 0 2 (fontified nil)) . 2912) (2912 . 2914) (#("unwrap()" 0 8 (fontified nil)) . -2912) (2912 . 2920) (#("un" 0 2 (fontified t)) . -2912) (undo-tree-id1441 . -2) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -2) (undo-tree-id1445 . -2) 2914) nil (25944 39118 575007 0) 0 nil])
([nil nil ((2920 . 2921)) nil (25944 39118 574989 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2861) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (#("p" 0 1 (fontified t)) . -2862) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (#("p" 0 1 (fontified t)) . -2863) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) 2864 (t 25944 39118 583915 411000)) nil (25944 39165 745879 0) 0 nil])
([nil nil ((2861 . 2863)) nil (25944 39165 745865 0) 0 nil])
([nil nil ((2861 . 2871) (#("ap" 0 2 (fontified nil)) . 2861) (2861 . 2863) (#("app_handle" 0 10 (fontified nil)) . -2861) (2861 . 2871) (#("ap" 0 2 (fontified t)) . -2861) (undo-tree-id1532 . -2) (undo-tree-id1533 . -1) (undo-tree-id1534 . -2) (undo-tree-id1535 . -2) (undo-tree-id1536 . -2) (undo-tree-id1537 . -2) (undo-tree-id1538 . -2) (undo-tree-id1539 . -2) 2863) nil (25944 39165 745861 0) 0 nil])
([nil nil ((1480 . 1485) (t 25944 39165 754427 710000)) nil (25944 43478 187591 0) 0 nil])
([nil nil ((1485 . 1500)) nil (25944 43478 187589 0) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-variable-name-face fontified t)) . -1499) (undo-tree-id1560 . -1) 1500) nil (25944 43478 187588 0) 0 nil])
([nil nil ((1499 . 1503)) nil (25944 43478 187586 0) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -1501) (undo-tree-id1558 . -1) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -1502) (undo-tree-id1559 . -1) 1503) nil (25944 43478 187584 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-variable-name-face fontified t)) . -1500) (undo-tree-id1557 . -1) 1501) nil (25944 43478 187580 0) 0 nil])
([nil nil ((1500 . 1505)) nil (25944 43478 187578 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1504) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) 1505) nil (25944 43478 187576 0) 0 nil])
([nil nil ((1504 . 1507)) nil (25944 43478 187559 0) 0 nil])
([nil nil ((1960 . 1964) (t 25944 43478 197232 398000)) nil (25944 43524 199951 0) 0 nil])
([nil nil ((1964 . 1970)) nil (25944 43524 199949 0) 0 nil])
([nil nil ((1967 . 1980) (#("sen" 0 3 (fontified nil)) . 1967) (1967 . 1970) (#("send_interval" 0 13 (fontified nil)) . -1967) (1967 . 1980) (#("sen" 0 3 (fontified t)) . -1967) (undo-tree-id1664 . -3) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -2) (undo-tree-id1669 . -2) (undo-tree-id1670 . -3) (undo-tree-id1671 . -3) 1970) nil (25944 43524 199947 0) 0 nil])
([nil nil ((1980 . 1983)) nil (25944 43524 199937 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -1982) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) 1983) nil (25944 43524 199936 0) 0 nil])
([nil nil ((1982 . 1985)) nil (25944 43524 199929 0) 0 nil])
([nil nil ((2095 . 2102) (1989 . 1993) (2090 . 2091)) nil (25944 43524 199928 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -2098) (undo-tree-id1651 . -4) (undo-tree-id1652 . -4) (undo-tree-id1653 . -4) (undo-tree-id1654 . -4) (undo-tree-id1655 . -4) (undo-tree-id1656 . -4) (undo-tree-id1657 . -4) (undo-tree-id1658 . -4) (2102 . 2103)) nil (25944 43524 199926 0) 0 nil])
([nil nil ((1960 . 1964)) nil (25944 43524 199917 0) 0 nil])
([nil nil ((1964 . 1965)) nil (25944 43524 199916 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1964) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) 1965) nil (25944 43524 199914 0) 0 nil])
([nil nil ((1964 . 1968)) nil (25944 43524 199911 0) 0 nil])
([nil nil ((1964 . 1977) (#("send" 0 4 (fontified nil)) . 1964) (1964 . 1968) (#("send_interval" 0 13 (fontified nil)) . -1964) (1964 . 1977) (#("send" 0 4 (fontified t)) . -1964) (undo-tree-id1641 . -4) (undo-tree-id1642 . -1) (undo-tree-id1643 . -2) (undo-tree-id1644 . -2) (undo-tree-id1645 . -3) (undo-tree-id1646 . -3) (undo-tree-id1647 . -4) (undo-tree-id1648 . -4) 1968) nil (25944 43524 199909 0) 0 nil])
([nil nil ((1977 . 1980)) nil (25944 43524 199899 0) 0 nil])
([nil nil ((1980 . 1984)) nil (25944 43524 199898 0) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -1978) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (#(";" 0 1 (fontified t)) . -1979) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (#("
" 0 1 (fontified t)) . -1980) (undo-tree-id1621 . -1) (undo-tree-id1622 . 1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (#("	" 0 1 (fontified t)) . -1981) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (#("	" 0 1 (fontified t)) . -1982) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (#("	" 0 1 (fontified t)) . -1983) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) 1984) nil (25944 43524 199893 0) 0 nil])
([nil nil ((1978 . 1981)) nil (25944 43524 199834 0) 0 nil])
([nil nil ((1981 . 1985)) nil (25944 43524 199833 0) 0 nil])
([nil nil ((1985 . 1987)) nil (25944 43524 199832 0) 0 nil])
([nil nil ((1987 . 1991)) nil (25944 43524 199831 0) 0 nil])
([nil nil ((1988 . 2001) (#("sen" 0 3 (fontified nil)) . 1988) (1988 . 1991) (#("send_interval" 0 13 (fontified nil)) . -1988) (1988 . 2001) (#("sen" 0 3 (fontified t)) . -1988) (undo-tree-id1579 . -3) (undo-tree-id1580 . -1) (undo-tree-id1581 . -2) (undo-tree-id1582 . -2) (undo-tree-id1583 . -3) (undo-tree-id1584 . -3) (undo-tree-id1585 . -3) (undo-tree-id1586 . -3) 1991) nil (25944 43524 199829 0) 0 nil])
([nil nil ((2001 . 2003)) nil (25944 43524 199818 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -2002) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) 2003) nil (25944 43524 199817 0) 0 nil])
([nil nil ((2002 . 2003)) nil (25944 43524 199809 0) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -2002) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) 2003) nil (25944 43524 199808 0) 0 nil])
([nil nil ((2002 . 2003)) nil (25944 43524 199800 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -2002) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) 2003) nil (25944 43524 199798 0) 0 nil])
([nil nil ((2002 . 2006)) nil (25944 43524 199795 0) 0 nil])
([nil nil ((2005 . 2006)) nil (25944 43524 199794 0) 0 nil])
([nil nil ((2005 . 2018) (#("s" 0 1 (fontified nil)) . 2005) (2005 . 2006) (#("send_interval" 0 13 (fontified nil)) . -2005) (2005 . 2018) (#("s" 0 1 (fontified t)) . -2005) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) 2006) nil (25944 43524 199791 0) 0 nil])
([nil nil ((2018 . 2020)) nil (25944 43524 199775 0) 0 nil])
([nil nil ((2020 . 2021) (t 25944 43524 209361 952000)) nil (25944 43526 253186 0) 0 nil])
([nil nil ((1489 . 1493) (t 25944 43526 262628 931000)) nil (25944 43535 600815 0) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -2006) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) 2007 (t 25944 43535 611043 861000)) nil (25944 43707 383397 0) 0 nil])
([nil nil ((2006 . 2007)) nil (25944 43707 383370 0) 0 nil])
([nil nil ((647 . 649) (t 25944 43707 393454 446000)) nil (25944 49512 382074 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -647) (undo-tree-id1699 . -1) (#("
" 0 1 (fontified t)) . -648) (undo-tree-id1700 . -1) 649) nil (25944 49512 382072 0) 0 nil])
([nil nil ((573 . 575)) nil (25944 49512 382069 0) 0 nil])
([nil nil ((573 . 577)) nil (25944 49512 382068 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -576) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) 577) nil (25944 49512 382067 0) 0 nil])
([nil nil ((576 . 578)) nil (25944 49512 382063 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -575) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (#("c" 0 1 (fontified t)) . -576) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (#("t" 0 1 (fontified t)) . -577) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) 578) nil (25944 49512 382062 0) 0 nil])
([nil nil ((575 . 576)) nil (25944 49512 382054 0) 0 nil])
([nil nil ((apply yas--snippet-revive 573 585 #s(yas--snippet nil nil #s(yas--exit 584 nil) 112 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 584 nil) 112 nil nil nil nil)) (573 . 585) (#("stringify!($0)" 0 14 (fontified nil)) . 573) (573 . 587) (#("str" 0 3 (fontified nil)) . 573) (573 . 576) (#("stringify!(â€¦)" 0 13 (fontified nil)) . -573) (573 . 586) (#("str" 0 3 (face font-lock-type-face fontified t)) . -573) (undo-tree-id1689 . -2) (undo-tree-id1690 . -3) 576) nil (25944 49512 382052 0) 0 nil])
([nil nil ((#("stringify!()" 0 10 (face font-lock-preprocessor-face fontified t) 10 12 (fontified t)) . 573)) nil (25944 49512 382046 0) 0 nil])
([nil nil ((573 . 583)) nil (25944 49512 382045 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-type-face fontified t)) . -580) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -581) (undo-tree-id1687 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -582) (undo-tree-id1688 . -1) 583) nil (25944 49512 382043 0) 0 nil])
([nil nil ((580 . 588)) nil (25944 49512 382037 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 588) (588 . 592) (587 . 589)) nil (25944 49512 382036 0) 0 nil])
([nil nil ((588 . 592)) nil (25944 49512 382034 0) 0 nil])
([nil nil ((572 . 573)) nil (25944 49512 382033 0) 0 nil])
([nil nil ((573 . 576)) nil (25944 49512 382032 0) 0 nil])
([nil nil ((575 . 578)) nil (25944 49512 382031 0) 0 nil])
([nil nil ((575 . 581) (#("der" 0 3 (fontified nil)) . 575) (575 . 578) (#("derive" 0 6 (fontified nil)) . -575) (575 . 581) (#("der" 0 3 (face font-lock-preprocessor-face fontified t)) . -575) (undo-tree-id1684 . -3) 578) nil (25944 49512 382029 0) 0 nil])
([nil nil ((581 . 583)) nil (25944 49512 382016 0) 0 nil])
([nil nil ((582 . 586)) nil (25944 49512 382012 0) 0 nil])
([nil nil ((#("Sync" 0 4 (face font-lock-preprocessor-face fontified t)) . -582) (undo-tree-id1792 . -4) (undo-tree-id1793 . -4) (undo-tree-id1794 . -4) (undo-tree-id1795 . -4) (undo-tree-id1796 . -4) (undo-tree-id1797 . -4) (undo-tree-id1798 . -4) (undo-tree-id1799 . -4) (undo-tree-id1800 . -4) (undo-tree-id1801 . -4) (undo-tree-id1802 . -4) (undo-tree-id1803 . -4) (undo-tree-id1804 . -4) (undo-tree-id1805 . -4) (undo-tree-id1806 . -4) (undo-tree-id1807 . -4) (undo-tree-id1808 . -4) (undo-tree-id1809 . -4) (undo-tree-id1810 . -4) (undo-tree-id1811 . -4) (undo-tree-id1812 . -4) (undo-tree-id1813 . -4) (undo-tree-id1814 . -4) (undo-tree-id1815 . -4) (undo-tree-id1816 . -4) (undo-tree-id1817 . -4) (undo-tree-id1818 . -4) (undo-tree-id1819 . -4) (undo-tree-id1820 . -4) (undo-tree-id1821 . -4) (undo-tree-id1822 . -4) (undo-tree-id1823 . -4) (undo-tree-id1824 . -4) 586 (t 25944 49512 392948 143000)) nil (25944 49528 408637 0) 0 nil])
([nil nil ((582 . 586)) nil (25944 49528 408604 0) 0 nil])
([nil nil ((231 . 248) (582 . 582) (582 . 586) (#("sync" 0 4 (fontified nil)) . 582) (582 . 586) (#("sync (use alloc::sync)" 0 22 (fontified nil)) . -582) (582 . 604) (#("sync" 0 4 (face font-lock-preprocessor-face fontified t)) . -582) (undo-tree-id1776 . -4) (undo-tree-id1777 . -4) (undo-tree-id1778 . -1) (undo-tree-id1779 . -2) (undo-tree-id1780 . -2) (undo-tree-id1781 . -3) (undo-tree-id1782 . -3) (undo-tree-id1783 . -3) (undo-tree-id1784 . -3) (undo-tree-id1785 . -3) (undo-tree-id1786 . -3) (undo-tree-id1787 . -4) (undo-tree-id1788 . -4) (undo-tree-id1789 . -4) (undo-tree-id1790 . -4) (undo-tree-id1791 . -4) 586) nil (25944 49528 408601 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-preprocessor-face fontified t)) . -599) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (#("y" 0 1 (face font-lock-preprocessor-face fontified t)) . -600) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (#("n" 0 1 (face font-lock-preprocessor-face fontified t)) . -601) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (#("c" 0 1 (face font-lock-preprocessor-face fontified t)) . -602) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) 603) nil (25944 49528 408580 0) 0 nil])
([nil nil ((#("use alloc::sync;" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 9 (face font-lock-constant-face fontified t) 9 16 (fontified t)) . 231) (undo-tree-id1702 . -16) (undo-tree-id1703 . -16) (undo-tree-id1704 . -16) (undo-tree-id1705 . -16) (undo-tree-id1706 . -16) (undo-tree-id1707 . -16) (undo-tree-id1708 . -16) (undo-tree-id1709 . -16) (undo-tree-id1710 . -16) (undo-tree-id1711 . -16) (undo-tree-id1712 . -16) (undo-tree-id1713 . -16) (undo-tree-id1714 . -16) (undo-tree-id1715 . -16) (undo-tree-id1716 . -16) (undo-tree-id1717 . -16)) nil (25944 49528 408518 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 231) (undo-tree-id1701 . -1)) nil (25944 49528 408498 0) 0 nil])
([nil nil ((582 . 584) (t 25944 49528 418510 622000)) nil (25944 49549 212366 0) 0 nil])
([nil nil ((199 . 214) (582 . 582) (582 . 586) (#("sy" 0 2 (fontified nil)) . 582) (582 . 584) (#("sync (use std::sync)" 0 20 (fontified nil)) . -582) (582 . 602) (#("sy" 0 2 (face font-lock-preprocessor-face fontified t)) . -582) (undo-tree-id2328 . -2) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -2) (undo-tree-id2332 . -2) (undo-tree-id2333 . -2) (undo-tree-id2334 . -2) (undo-tree-id2335 . -2) 584) nil (25944 49549 212364 0) 0 nil])
([nil nil ((601 . 604)) nil (25944 49549 212353 0) 0 nil])
([nil nil ((#(":" 0 1 (face font-lock-preprocessor-face fontified t)) . -601) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (#(":" 0 1 (face font-lock-preprocessor-face fontified t)) . -602) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (#("S" 0 1 (face font-lock-preprocessor-face fontified t)) . -603) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) 604) nil (25944 49549 212351 0) 0 nil])
([nil nil ((601 . 605)) nil (25944 49549 212319 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-preprocessor-face fontified t)) . -603) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (#("y" 0 1 (face font-lock-preprocessor-face fontified t)) . -604) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) 605) nil (25944 49549 212317 0) 0 nil])
([nil nil ((603 . 607)) nil (25944 49549 212299 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-preprocessor-face fontified t)) . -597) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (#("y" 0 1 (face font-lock-preprocessor-face fontified t)) . -598) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (#("n" 0 1 (face font-lock-preprocessor-face fontified t)) . -599) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (#("c" 0 1 (face font-lock-preprocessor-face fontified t)) . -600) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (#(":" 0 1 (face font-lock-preprocessor-face fontified t)) . -601) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (#(":" 0 1 (face font-lock-preprocessor-face fontified t)) . -602) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (#("S" 0 1 (face font-lock-preprocessor-face fontified t)) . -603) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (#("y" 0 1 (face font-lock-preprocessor-face fontified t)) . -604) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (#("n" 0 1 (face font-lock-preprocessor-face fontified t)) . -605) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (#("c" 0 1 (face font-lock-preprocessor-face fontified t)) . -606) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) 607) nil (25944 49549 212277 0) 0 nil])
([nil nil ((597 . 601)) nil (25944 49549 211817 0) 0 nil])
([nil nil ((#("sync" 0 4 (fontified t)) . -208) (undo-tree-id2563 . -4) (undo-tree-id2564 . -4) (undo-tree-id2565 . -4) (undo-tree-id2566 . -4) (undo-tree-id2567 . -4) (undo-tree-id2568 . -4) (undo-tree-id2569 . -4) (undo-tree-id2570 . -4) (undo-tree-id2571 . -4) (undo-tree-id2572 . -4) (undo-tree-id2573 . -4) (undo-tree-id2574 . -4) 212 (t 25944 49549 223309 291000)) nil (25944 49568 850866 0) 0 nil])
([nil nil ((208 . 210)) nil (25944 49568 850853 0) 0 nil])
([nil nil ((208 . 214) (#("th" 0 2 (fontified nil)) . 208) (208 . 210) (#("thread" 0 6 (fontified nil)) . -208) (208 . 214) (#("th" 0 2 (fontified t)) . -208) (undo-tree-id2552 . -2) (undo-tree-id2553 . -2) (undo-tree-id2554 . -1) (undo-tree-id2555 . -2) (undo-tree-id2556 . -2) (undo-tree-id2557 . -2) (undo-tree-id2558 . -2) (undo-tree-id2559 . -2) (undo-tree-id2560 . -2) (undo-tree-id2561 . -2) (undo-tree-id2562 . -2) 210) nil (25944 49568 850851 0) 0 nil])
([nil nil ((214 . 219)) nil (25944 49568 850838 0) 0 nil])
([nil nil ((#("syn" 0 3 (fontified t)) . -216) (undo-tree-id2547 . -3) (undo-tree-id2548 . -2) (undo-tree-id2549 . -2) (undo-tree-id2550 . -3) (undo-tree-id2551 . -3) 219) nil (25944 49568 850837 0) 0 nil])
([nil nil ((#("thread::" 0 6 (face font-lock-constant-face fontified t) 6 8 (fontified t)) . -208) (undo-tree-id2527 . -7) (undo-tree-id2528 . -8) (undo-tree-id2529 . -6) (undo-tree-id2530 . -6) (undo-tree-id2531 . -6) (undo-tree-id2532 . -6) (undo-tree-id2533 . -7) (undo-tree-id2534 . -7) (undo-tree-id2535 . -7) (undo-tree-id2536 . -7) (undo-tree-id2537 . -7) (undo-tree-id2538 . -7) (undo-tree-id2539 . -7) (undo-tree-id2540 . -8) (undo-tree-id2541 . -8) (undo-tree-id2542 . -8) (undo-tree-id2543 . -8) (undo-tree-id2544 . -8) (undo-tree-id2545 . -8) (undo-tree-id2546 . -8) 216) nil (25944 49568 850829 0) 0 nil])
([nil nil ((#("std::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -203) (undo-tree-id2475 . -5) (undo-tree-id2476 . -5) (undo-tree-id2477 . -5) (undo-tree-id2478 . -5) (undo-tree-id2479 . -5) (undo-tree-id2480 . -5) (undo-tree-id2481 . -5) (undo-tree-id2482 . -5) (undo-tree-id2483 . -5) (undo-tree-id2484 . -5) (undo-tree-id2485 . -5) (undo-tree-id2486 . -5) (undo-tree-id2487 . -5) (undo-tree-id2488 . -5) (undo-tree-id2489 . -5) (undo-tree-id2490 . -5) (undo-tree-id2491 . -5) (undo-tree-id2492 . -5) (undo-tree-id2493 . -5) (undo-tree-id2494 . -5) (undo-tree-id2495 . -5) (undo-tree-id2496 . -5) (undo-tree-id2497 . -5) (undo-tree-id2498 . -5) (undo-tree-id2499 . -5) (undo-tree-id2500 . -5) (undo-tree-id2501 . -5) (undo-tree-id2502 . -5) (undo-tree-id2503 . -5) (undo-tree-id2504 . -5) (undo-tree-id2505 . -5) (undo-tree-id2506 . -5) (undo-tree-id2507 . -5) (undo-tree-id2508 . -5) (undo-tree-id2509 . -5) (undo-tree-id2510 . -5) (undo-tree-id2511 . -5) (undo-tree-id2512 . -5) (undo-tree-id2513 . -5) (undo-tree-id2514 . -5) (undo-tree-id2515 . -5) (undo-tree-id2516 . -5) (undo-tree-id2517 . -5) (undo-tree-id2518 . -5) (undo-tree-id2519 . -5) (undo-tree-id2520 . -5) (undo-tree-id2521 . -5) (undo-tree-id2522 . -5) (undo-tree-id2523 . -5) (undo-tree-id2524 . -5) (undo-tree-id2525 . -5) (undo-tree-id2526 . -5) 208) nil (25944 49568 850807 0) 0 nil])
([nil nil ((203 . 210)) nil (25944 49568 850758 0) 0 nil])
([nil nil ((208 . 212) (#("sy" 0 2 (fontified nil)) . 208) (208 . 210) (#("sync" 0 4 (fontified nil)) . -208) (208 . 212) (#("sy" 0 2 (fontified t)) . -208) (undo-tree-id2464 . -2) (undo-tree-id2465 . -2) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -2) (undo-tree-id2470 . -2) (undo-tree-id2471 . -2) (undo-tree-id2472 . -2) (undo-tree-id2473 . -2) (undo-tree-id2474 . -2) 210) nil (25944 49568 850755 0) 0 nil])
([nil nil ((212 . 215)) nil (25944 49568 850743 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -215) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . 1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) 216) nil (25944 49568 850741 0) 0 nil])
([nil nil ((#("use std::sync::S" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-constant-face fontified t) 7 9 (fontified t) 9 13 (face font-lock-constant-face fontified t) 13 15 (fontified t) 15 16 (face font-lock-type-face fontified t)) . 199) (undo-tree-id2338 . -16) (undo-tree-id2339 . -4) (undo-tree-id2340 . -4) (undo-tree-id2341 . -4) (undo-tree-id2342 . -4) (undo-tree-id2343 . -4) (undo-tree-id2344 . -4) (undo-tree-id2345 . -4) (undo-tree-id2346 . -4) (undo-tree-id2347 . -4) (undo-tree-id2348 . -4) (undo-tree-id2349 . -4) (undo-tree-id2350 . -4) (undo-tree-id2351 . -4) (undo-tree-id2352 . -4) (undo-tree-id2353 . -4) (undo-tree-id2354 . -4) (undo-tree-id2355 . -4) (undo-tree-id2356 . -4) (undo-tree-id2357 . -4) (undo-tree-id2358 . -4) (undo-tree-id2359 . -4) (undo-tree-id2360 . -4) (undo-tree-id2361 . -4) (undo-tree-id2362 . -4) (undo-tree-id2363 . -4) (undo-tree-id2364 . -4) (undo-tree-id2365 . -4) (undo-tree-id2366 . -4) (undo-tree-id2367 . -4) (undo-tree-id2368 . -4) (undo-tree-id2369 . -4) (undo-tree-id2370 . -4) (undo-tree-id2371 . -4) (undo-tree-id2372 . -4) (undo-tree-id2373 . -4) (undo-tree-id2374 . -4) (undo-tree-id2375 . -4) (undo-tree-id2376 . -4) (undo-tree-id2377 . -4) (undo-tree-id2378 . -4) (undo-tree-id2379 . -4) (undo-tree-id2380 . -4) (undo-tree-id2381 . -4) (undo-tree-id2382 . -4) (undo-tree-id2383 . -4) (undo-tree-id2384 . -4) (undo-tree-id2385 . -4) (undo-tree-id2386 . -4) (undo-tree-id2387 . -4) (undo-tree-id2388 . -4) (undo-tree-id2389 . -4) (undo-tree-id2390 . -4) (undo-tree-id2391 . -4) (undo-tree-id2392 . -4) (undo-tree-id2393 . -4) (undo-tree-id2394 . -4) (undo-tree-id2395 . -4) (undo-tree-id2396 . -5) (undo-tree-id2397 . -6) (undo-tree-id2398 . -6) (undo-tree-id2399 . -7) (undo-tree-id2400 . -7) (undo-tree-id2401 . -8) (undo-tree-id2402 . -8) (undo-tree-id2403 . -8) (undo-tree-id2404 . -8) (undo-tree-id2405 . -9) (undo-tree-id2406 . -9) (undo-tree-id2407 . -9) (undo-tree-id2408 . -9) (undo-tree-id2409 . -9) (undo-tree-id2410 . -9) (undo-tree-id2411 . -9) (undo-tree-id2412 . -9) (undo-tree-id2413 . -9) (undo-tree-id2414 . -9) (undo-tree-id2415 . -9) (undo-tree-id2416 . -9) (undo-tree-id2417 . -9) (undo-tree-id2418 . -9) (undo-tree-id2419 . -13) (undo-tree-id2420 . -13) (undo-tree-id2421 . -13) (undo-tree-id2422 . -13) (undo-tree-id2423 . -14) (undo-tree-id2424 . -14) (undo-tree-id2425 . -14) (undo-tree-id2426 . -14) (undo-tree-id2427 . -14) (undo-tree-id2428 . -14) (undo-tree-id2429 . -14) (undo-tree-id2430 . -15) (undo-tree-id2431 . -16) (undo-tree-id2432 . -16) (undo-tree-id2433 . -16) (undo-tree-id2434 . -16) (undo-tree-id2435 . -16) (undo-tree-id2436 . -16) (undo-tree-id2437 . -16) (undo-tree-id2438 . -16) (undo-tree-id2439 . -16) (undo-tree-id2440 . -16) (undo-tree-id2441 . -16) (undo-tree-id2442 . -16) (undo-tree-id2443 . -16) (undo-tree-id2444 . -16) (undo-tree-id2445 . -16) (undo-tree-id2446 . -16) (undo-tree-id2447 . -16) (undo-tree-id2448 . -16) (undo-tree-id2449 . -16) (undo-tree-id2450 . -16) (undo-tree-id2451 . -16)) nil (25944 49568 850723 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 199) (undo-tree-id2336 . 1) (undo-tree-id2337 . -1)) nil (25944 49568 850598 0) 0 nil])
([nil nil ((#("#[derive(Sync)]" 0 2 (face font-lock-preprocessor-face fontified t) 2 13 (face font-lock-preprocessor-face fontified t) 13 14 (face font-lock-preprocessor-face fontified t) 14 15 (face font-lock-preprocessor-face fontified t)) . 573) (undo-tree-id2576 . -15) (undo-tree-id2577 . -15) (undo-tree-id2578 . -15) (undo-tree-id2579 . -15) (undo-tree-id2580 . -15) (undo-tree-id2581 . -15) (undo-tree-id2582 . -15) (undo-tree-id2583 . -15) (undo-tree-id2584 . -15) (undo-tree-id2585 . -15) (undo-tree-id2586 . -15) (undo-tree-id2587 . -15) (undo-tree-id2588 . -15) (t 25944 49568 861861 646000)) nil (25944 49571 427762 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 573) (undo-tree-id2575 . -1)) nil (25944 49571 427745 0) 0 nil])
([nil nil ((592 . 595) (t 25944 49571 439560 133000)) nil (25944 49709 663348 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -594) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) 595) nil (25944 49709 663346 0) 0 nil])
([nil nil ((594 . 596)) nil (25944 49709 663337 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -592) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (#("y" 0 1 (fontified t)) . -593) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (#("n" 0 1 (fontified t)) . -594) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (#("c" 0 1 (fontified t)) . -595) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) 596) nil (25944 49709 663332 0) 0 nil])
([nil nil ((592 . 593)) nil (25944 49709 663235 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -592) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) 593) nil (25944 49709 663233 0) 0 nil])
([nil nil ((592 . 594)) nil (25944 49709 663226 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -592) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (#("i" 0 1 (fontified t)) . -593) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) 594) nil (25944 49709 663223 0) 0 nil])
([nil nil ((592 . 596)) nil (25944 49709 663189 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -592) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (#("i" 0 1 (fontified t)) . -593) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (#("n" 0 1 (fontified t)) . -594) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (#("d" 0 1 (fontified t)) . -595) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) 596) nil (25944 49709 663184 0) 0 nil])
([nil nil ((592 . 600)) nil (25944 49709 663096 0) 0 nil])
([nil nil ((600 . 606)) nil (25944 49709 663091 0) 0 nil])
([nil nil ((#("u32" 0 3 (face font-lock-type-face fontified t)) . -602) (undo-tree-id2829 . -3) (undo-tree-id2830 . -3) 605 (t 25944 49709 675412 365000)) nil (25944 49811 889562 0) 0 nil])
([nil nil ((602 . 604)) nil (25944 49811 889558 0) 0 nil])
([nil nil ((#("M" 0 1 (face font-lock-type-face fontified t)) . -602) (undo-tree-id2827 . -1) (#("u" 0 1 (face font-lock-type-face fontified t)) . -603) (undo-tree-id2828 . -1) 604) nil (25944 49811 889557 0) 0 nil])
([nil nil ((#("selected: " 0 8 (face font-lock-variable-name-face fontified t) 8 10 (fontified t)) . -592) (undo-tree-id2825 . -10) (undo-tree-id2826 . -10) 602) nil (25944 49811 889553 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -592) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) 593) nil (25944 49811 889550 0) 0 nil])
([nil nil ((592 . 594)) nil (25944 49811 889545 0) 0 nil])
([nil nil ((594 . 600)) nil (25944 49811 889544 0) 0 nil])
([nil nil ((apply yas--snippet-revive 598 605 #s(yas--snippet nil nil #s(yas--exit 604 nil) 113 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 604 nil) 113 nil nil nil nil)) (598 . 605) (#("Mutex<$0>" 0 9 (fontified nil)) . 598) (598 . 607) (#("Mu" 0 2 (fontified nil)) . 598) (598 . 600) (#("Mutex<â€¦>" 0 8 (fontified nil)) . -598) (598 . 606) (#("Mu" 0 2 (face font-lock-type-face fontified t)) . -598) (undo-tree-id2821 . -2) 600) nil (25944 49811 889542 0) 0 nil])
([nil nil ((#("Mutex<>" 0 5 (face font-lock-type-face fontified t) 5 7 (fontified t)) . -598) (undo-tree-id2819 . -7) (undo-tree-id2820 . -7) 605) nil (25944 49811 889537 0) 0 nil])
([nil nil ((598 . 601)) nil (25944 49811 889534 0) 0 nil])
([nil nil ((199 . 219) (apply yas--snippet-revive 598 603 #s(yas--snippet nil nil #s(yas--exit 602 nil) 114 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 602 nil) 114 nil nil nil nil)) (598 . 603) (#("Arc<$0>" 0 7 (fontified nil)) . 598) (598 . 605) (#("Arc" 0 3 (fontified nil)) . 598) (598 . 601) (#("Arc<â€¦> (use std::sync::Arc)" 0 27 (fontified nil)) . -598) (598 . 625) (#("Arc" 0 3 (face font-lock-type-face fontified t)) . -598) (undo-tree-id2818 . -3) 601) nil (25944 49811 889532 0) 0 nil])
([nil nil ((622 . 624)) nil (25944 49811 889526 0) 0 nil])
([nil nil ((apply yas--snippet-revive 622 629 #s(yas--snippet nil nil #s(yas--exit 628 nil) 115 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 628 nil) 115 nil nil nil nil)) (622 . 629) (#("Mutex<$0>" 0 9 (fontified nil)) . 622) (622 . 631) (#("Mu" 0 2 (fontified nil)) . 622) (622 . 624) (#("Mutex<â€¦>" 0 8 (fontified nil)) . -622) (622 . 630) (#("Mu" 0 2 (face font-lock-type-face fontified t)) . -622) (undo-tree-id2817 . -2) 624) nil (25944 49811 889524 0) 0 nil])
([nil nil ((628 . 631)) nil (25944 49811 889520 0) 0 nil])
([nil nil ((apply yas--snippet-revive 628 633 #s(yas--snippet nil nil #s(yas--exit 632 nil) 116 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 632 nil) 116 nil nil nil nil)) (628 . 633) (#("Vec<$0>" 0 7 (fontified nil)) . 628) (628 . 635) (#("Vec" 0 3 (fontified nil)) . 628) (628 . 631) (#("Vec<â€¦>" 0 6 (fontified nil)) . -628) (628 . 634) (#("Vec" 0 3 (face font-lock-type-face fontified t)) . -628) (undo-tree-id2815 . -3) (undo-tree-id2816 . -3) 631) nil (25944 49811 889517 0) 0 nil])
([nil nil ((632 . 635)) nil (25944 49811 889505 0) 0 nil])
([nil nil ((592 . 594)) nil (25944 49811 889504 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 966 . 967) (nil fontified nil 962 . 967) (nil fontified nil 958 . 962) (nil fontified nil 956 . 958) (nil fontified nil 948 . 956) (nil fontified nil 947 . 948) (nil fontified nil 944 . 947) (nil fontified nil 937 . 944) (nil fontified nil 934 . 937) (nil fontified nil 932 . 934) (nil fontified nil 929 . 932) (nil fontified nil 926 . 929) (nil fontified nil 922 . 926) (nil fontified nil 921 . 922) (nil fontified nil 918 . 921) (nil fontified nil 911 . 918) (nil fontified nil 908 . 911) (nil fontified nil 906 . 908) (nil fontified nil 903 . 906) (nil fontified nil 900 . 903) (nil fontified nil 892 . 900) (nil fontified nil 891 . 892) (nil fontified nil 888 . 891) (nil fontified nil 884 . 888) (nil fontified nil 881 . 884) (nil fontified nil 878 . 881) (nil fontified nil 876 . 878) (nil fontified nil 873 . 876) (nil fontified nil 871 . 873) (nil fontified nil 868 . 871) (nil fontified nil 866 . 868) (nil fontified nil 863 . 866) (nil fontified nil 860 . 863) (nil fontified nil 855 . 860) (nil fontified nil 854 . 855) (nil fontified nil 851 . 854) (nil fontified nil 847 . 851) (nil fontified nil 750 . 847) (nil fontified nil 746 . 750) (nil fontified nil 744 . 746) (nil fontified nil 741 . 744) (nil fontified nil 739 . 741) (nil fontified nil 735 . 739) (nil fontified nil 734 . 735) (nil fontified nil 731 . 734) (nil fontified nil 727 . 731) (nil fontified nil 705 . 727) (nil fontified nil 699 . 705) (nil fontified nil 696 . 699) (nil fontified nil 694 . 696) (nil fontified nil 686 . 694) (nil fontified nil 685 . 686) (nil fontified nil 682 . 685) (nil fontified nil 676 . 682) (nil fontified nil 673 . 676) (nil fontified nil 671 . 673) (nil fontified nil 666 . 671) (nil fontified nil 665 . 666) (nil fontified nil 662 . 665) (nil fontified nil 655 . 662) (nil fontified nil 652 . 655) (nil fontified nil 651 . 652) (nil fontified nil 645 . 651) (nil fontified nil 644 . 645) (nil fontified nil 641 . 644) (nil fontified nil 640 . 641) (nil fontified nil 593 . 640) (593 . 967)) nil (25944 49811 889500 0) 0 nil])
([nil nil ((592 . 593)) nil (25944 49811 889475 0) 0 nil])
([nil nil ((#("Serialize, " 0 11 (face font-lock-preprocessor-face fontified t)) . -617) (undo-tree-id2831 . -10) (undo-tree-id2832 . -11) (undo-tree-id2833 . -10) (undo-tree-id2834 . -10) (undo-tree-id2835 . -10) (undo-tree-id2836 . -10) (undo-tree-id2837 . -10) (undo-tree-id2838 . -10) (undo-tree-id2839 . -10) (undo-tree-id2840 . -10) (undo-tree-id2841 . -10) (undo-tree-id2842 . -10) (undo-tree-id2843 . -10) (undo-tree-id2844 . -10) (undo-tree-id2845 . -10) (undo-tree-id2846 . -10) (undo-tree-id2847 . -10) (undo-tree-id2848 . -10) (undo-tree-id2849 . -10) (undo-tree-id2850 . -10) (undo-tree-id2851 . -10) (undo-tree-id2852 . -10) (undo-tree-id2853 . -10) (undo-tree-id2854 . -10) (undo-tree-id2855 . -10) (undo-tree-id2856 . -10) (undo-tree-id2857 . -10) (undo-tree-id2858 . -10) (undo-tree-id2859 . -10) (undo-tree-id2860 . -10) (undo-tree-id2861 . -10) (undo-tree-id2862 . -10) (undo-tree-id2863 . -10) (undo-tree-id2864 . -10) (undo-tree-id2865 . -10) (undo-tree-id2866 . -10) (undo-tree-id2867 . -11) (undo-tree-id2868 . -11) (undo-tree-id2869 . -11) (undo-tree-id2870 . -11) (undo-tree-id2871 . -11) 628 (t 25944 49811 901674 851000)) nil (25944 49821 289768 0) 0 nil])
([nil nil ((617 . 624)) nil (25944 49821 289714 0) 0 nil])
([nil nil ((2955 . 2957) (t 25944 49821 301492 454000)) nil (25944 49893 57955 0) 0 nil])
([nil nil ((2965 . 2966) (2956 . 2964) (#("	" 0 1 (fontified t)) . -2956) 2957 (2957 . 2957) (2957 . 2958)) nil (25944 49893 57954 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 2972 2983 nil nil nil t #s(yas--exit 2984 nil))) #s(yas--exit 2984 nil) 117 nil #s(yas--field 1 2972 2983 nil nil nil t #s(yas--exit 2984 nil)) nil nil)) (2965 . 2978) (#("manage(${1:state})$0" 0 20 (fontified nil)) . 2965) (2965 . 2985) (#("m" 0 1 (fontified nil)) . 2965) (2965 . 2966) (#("manage(â€¦)" 0 9 (fontified nil)) . -2965) (2965 . 2974) (#("m" 0 1 (fontified t)) . -2965) (undo-tree-id2958 . -1) 2966) nil (25944 49893 57951 0) 0 nil])
([nil nil ((2973 . 2977) (#("state" 0 5 (fontified nil)) . 2973) (2972 . 2973)) nil (25944 49893 57936 0) 0 nil])
([nil nil ((2972 . 2977) (#("State" 0 5 (fontified nil)) . 2972) (2972 . 2977) (#("State" 0 5 (face font-lock-type-face fontified t)) . -2972) (undo-tree-id2956 . -5) (undo-tree-id2957 . -5) 2977) nil (25944 49893 57934 0) 0 nil])
([nil nil ((2977 . 2980)) nil (25944 49893 57930 0) 0 nil])
([nil nil ((2981 . 2982) (#("	    " 0 5 (fontified nil)) . 2980) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (2981 . 2985) (2979 . 2982)) nil (25944 49893 57929 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2965 2984 #s(yas--snippet nil (#s(yas--field 1 2972 2983 nil nil nil t #s(yas--exit 2984 nil))) #s(yas--exit 2984 nil) 117 nil #s(yas--field 1 2972 2983 nil nil nil t #s(yas--exit 2984 nil)) nil nil))) nil (25944 49893 57925 0) 0 nil])
([nil nil ((2980 . 2985)) nil (25944 49893 57924 0) 0 nil])
([nil nil ((2985 . 2989)) nil (25944 49893 57923 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -2986) (undo-tree-id2951 . -1) (#("e" 0 1 (fontified t)) . -2987) (undo-tree-id2952 . -1) (#("y" 0 1 (fontified t)) . -2988) (undo-tree-id2953 . -1) 2989) nil (25944 49893 57921 0) 0 nil])
([nil nil ((2986 . 2993)) nil (25944 49893 57917 0) 0 nil])
([nil nil ((2991 . 2994) (#("Ar" 0 2 (fontified nil)) . 2991) (2991 . 2993) (#("Arc" 0 3 (fontified nil)) . -2991) (2991 . 2994) (#("Ar" 0 2 (face font-lock-type-face fontified t)) . -2991) (undo-tree-id2950 . -2) 2993) nil (25944 49893 57915 0) 0 nil])
([nil nil ((2994 . 2996)) nil (25944 49893 57912 0) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-type-face fontified t)) . -2994) (undo-tree-id2948 . -1) (#("L" 0 1 (face font-lock-type-face fontified t)) . -2995) (undo-tree-id2949 . -1) 2996) nil (25944 49893 57910 0) 0 nil])
([nil nil ((2994 . 2997)) nil (25944 49893 57907 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3000 3018 nil nil nil t #s(yas--exit 3019 nil))) #s(yas--exit 3019 nil) 118 nil #s(yas--field 1 3000 3018 nil nil nil t #s(yas--exit 3019 nil)) nil nil)) (2996 . 3005) (#("new(${1:data})$0" 0 16 (fontified nil)) . 2996) (2996 . 3012) (#("n" 0 1 (fontified nil)) . 2996) (2996 . 2997) (#("new(â€¦)" 0 6 (fontified nil)) . -2996) (2996 . 3002) (#("n" 0 1 (fontified t)) . -2996) (undo-tree-id2947 . -1) 2997) nil (25944 49893 57905 0) 0 nil])
([nil nil ((3001 . 3002) (#("data" 0 4 (fontified nil)) . 3001) (undo-tree-id2946 . -4) (3000 . 3001)) nil (25944 49893 57901 0) 0 nil])
([nil nil ((3000 . 3005) (#("Mu" 0 2 (fontified nil)) . 3000) (undo-tree-id2941 . -2) (3000 . 3002) (#("Mutex" 0 5 (fontified nil)) . -3000) (undo-tree-id2942 . -5) (3000 . 3005) (#("Mu" 0 2 (face font-lock-type-face fontified t)) . -3000) (undo-tree-id2943 . -2) (undo-tree-id2944 . -2) (undo-tree-id2945 . -2) 3002) nil (25944 49893 57898 0) 0 nil])
([nil nil ((3005 . 3008)) nil (25944 49893 57890 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3011 3017 nil nil nil t #s(yas--exit 3018 nil))) #s(yas--exit 3018 nil) 119 nil #s(yas--field 1 3011 3017 nil nil nil t #s(yas--exit 3018 nil)) #s(yas--field 1 3000 3018 nil nil nil t #s(yas--exit 3019 nil)) nil)) (3007 . 3013) (#("new(${1:t})$0" 0 13 (fontified nil)) . 3007) (undo-tree-id2935 . -13) (3007 . 3020) (#("n" 0 1 (fontified nil)) . 3007) (undo-tree-id2936 . -1) (3007 . 3008) (#("new(â€¦)" 0 6 (fontified nil)) . -3007) (undo-tree-id2937 . -6) (3007 . 3013) (#("n" 0 1 (fontified t)) . -3007) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) 3008) nil (25944 49893 57888 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified nil)) . 3012) (undo-tree-id2934 . -1) (3011 . 3012)) nil (25944 49893 57879 0) 0 nil])
([nil nil ((3011 . 3014) (#("V" 0 1 (fontified nil)) . 3011) (undo-tree-id2929 . -1) (3011 . 3012) (#("Vec" 0 3 (fontified nil)) . -3011) (undo-tree-id2930 . -3) (3011 . 3014) (#("V" 0 1 (face font-lock-type-face fontified t)) . -3011) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) 3012) nil (25944 49893 57877 0) 0 nil])
([nil nil ((3014 . 3016)) nil (25944 49893 57869 0) 0 nil])
([nil nil ((#("V" 0 1 (face font-lock-type-face fontified t)) . -3011) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -3012) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (#("c" 0 1 (face font-lock-type-face fontified t)) . -3013) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (#(":" 0 1 (fontified t)) . -3014) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (#(":" 0 1 (fontified t)) . -3015) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) 3016) nil (25944 49893 57865 0) 0 nil])
([nil nil ((3011 . 3017)) nil (25944 49893 57797 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2996 3019 #s(yas--snippet nil (#s(yas--field 1 3000 3018 nil nil nil t #s(yas--exit 3019 nil))) #s(yas--exit 3019 nil) 118 nil #s(yas--field 1 3000 3018 nil nil nil t #s(yas--exit 3019 nil)) nil nil)) (apply yas--snippet-revive 3007 3018 #s(yas--snippet nil (#s(yas--field 1 3011 3017 nil nil nil t #s(yas--exit 3018 nil))) #s(yas--exit 3018 nil) 119 nil #s(yas--field 1 3011 3017 nil nil nil t #s(yas--exit 3018 nil)) #s(yas--field 1 3000 3018 nil nil nil t #s(yas--exit 3019 nil)) nil))) nil (25944 49955 875987 0) 0 nil])
([nil nil ((1228 . 1229) (t 25944 49893 70249 465000)) nil (25944 49955 875986 0) 0 nil])
([nil nil ((1229 . 1234)) nil (25944 49955 875984 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1280 . 1281) (nil fontified nil 1234 . 1281) (1234 . 1281)) nil (25944 49955 875983 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1234) 1230) nil (25944 49955 875982 0) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -1276) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) 1277) nil (25944 49955 875980 0) 0 nil])
([nil nil ((#("AsyncProcInputTx" 0 16 (face font-lock-type-face fontified t)) . -1258) (undo-tree-id2974 . -16) (undo-tree-id2975 . -16) (undo-tree-id2976 . -16) (undo-tree-id2977 . -16) (undo-tree-id2978 . -16) (undo-tree-id2979 . -16) (undo-tree-id2980 . -16) (undo-tree-id2981 . -16) (undo-tree-id2982 . -16) (undo-tree-id2983 . -16) (undo-tree-id2984 . -16) (undo-tree-id2985 . -16) (undo-tree-id2986 . -16) (undo-tree-id2987 . -16) 1274) nil (25944 49955 875967 0) 0 nil])
([nil nil ((1258 . 1259)) nil (25944 49955 875953 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1258) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) 1259) nil (25944 49955 875951 0) 0 nil])
([nil nil ((1258 . 1263)) nil (25944 49958 758602 0) 0 nil])
([nil nil ((apply -9 1280 1479 undo--wrap-and-run-primitive-undo 1280 1479 ((1412 . 1415) (1371 . 1374) (1284 . 1287) 1280))) nil (25944 49968 310236 0) 0 nil] [nil nil ((1258 . 1263) (#("State" 0 5 (fontified nil)) . 1258) (1258 . 1263) (#("State" 0 5 (face font-lock-type-face fontified t)) . -1258) (undo-tree-id2959 . -5) (undo-tree-id2960 . -1) (undo-tree-id2961 . -2) (undo-tree-id2962 . -2) (undo-tree-id2963 . -3) (undo-tree-id2964 . -3) (undo-tree-id2965 . -4) (undo-tree-id2966 . -4) (undo-tree-id2967 . -5) (undo-tree-id2968 . -5) (undo-tree-id2969 . -5) 1263) ((1258 . 1263) (#("State" 0 5 (fontified nil)) . 1258) (1258 . 1263) (#("State" 0 5 (face font-lock-type-face fontified t)) . 1258) (undo-tree-id2999 . -5) (undo-tree-id3000 . -5) (undo-tree-id3001 . -5) (undo-tree-id3002 . -5) (undo-tree-id3003 . -5) (undo-tree-id3004 . -5) (undo-tree-id3005 . -5) (undo-tree-id3006 . -5) (undo-tree-id3007 . -5) (undo-tree-id3008 . -5) (undo-tree-id3009 . -5) (undo-tree-id3010 . -5) (undo-tree-id3011 . -5) (undo-tree-id3012 . -5) (undo-tree-id3013 . -5) (undo-tree-id3014 . -5) (undo-tree-id3015 . -5) (undo-tree-id3016 . -5) (undo-tree-id3017 . -5) (undo-tree-id3018 . -5) (undo-tree-id3019 . -5) (undo-tree-id3020 . -5) (undo-tree-id3021 . -5) (undo-tree-id3022 . -5) (t 25944 49955 888340 441000)) (25944 49955 875941 0) 0 nil])
([nil nil ((1478 . 1483) (t 25944 49968 322591 982000)) nil (25944 50119 139244 0) 0 nil])
nil
([nil nil ((1483 . 1486)) nil (25944 50119 139243 0) 0 nil])
([nil nil ((1483 . 1490) (#("pay" 0 3 (fontified nil)) . 1483) (1483 . 1486) (#("payload" 0 7 (fontified nil)) . -1483) (1483 . 1490) (#("pay" 0 3 (fontified t)) . -1483) (undo-tree-id3110 . -3) 1486) nil (25944 50119 139241 0) 0 nil])
([nil nil ((1490 . 1491)) nil (25944 50119 139238 0) 0 nil])
([nil nil ((#("payload." 0 8 (fontified t)) . -1483) (undo-tree-id3108 . -7) (undo-tree-id3109 . -8) 1491) nil (25944 50119 139236 0) 0 nil])
([nil nil ((#("data\");
    " 0 5 (face font-lock-comment-face fontified t) 5 8 (face font-lock-comment-face fontified t) 8 12 (fontified t)) . -1471) (undo-tree-id3105 . -7) (undo-tree-id3106 . -12) (undo-tree-id3107 . -12) 1483) nil (25944 50119 139233 0) 0 nil])
([nil nil ((1471 . 1475) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 1470) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (1471 . 1472)) nil (25944 50119 139229 0) 0 nil])
([nil nil ((1475 . 1478)) nil (25944 50119 139224 0) 0 nil])
([nil nil ((1475 . 1485) (#("ser" 0 3 (fontified nil)) . 1475) (1475 . 1478) (#("serde_json" 0 10 (fontified nil)) . -1475) (1475 . 1485) (#("ser" 0 3 (fontified t)) . -1475) (undo-tree-id3101 . -3) 1478) nil (25944 50119 139222 0) 0 nil])
([nil nil ((1485 . 1489)) nil (25944 50119 139219 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1487) (undo-tree-id3099 . -1) (#("o" 0 1 (fontified t)) . -1488) (undo-tree-id3100 . -1) 1489) nil (25944 50119 139218 0) 0 nil])
([nil nil ((1487 . 1491)) nil (25944 50119 139214 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1496 1497 nil nil nil nil #s(yas--exit 1498 nil))) #s(yas--exit 1498 nil) 120 nil #s(yas--field 1 1496 1497 nil nil nil nil #s(yas--exit 1498 nil)) nil nil)) (1487 . 1498) (#("from_str(${1:s})$0" 0 18 (fontified nil)) . 1487) (1487 . 1505) (#("from" 0 4 (fontified nil)) . 1487) (1487 . 1491) (#("from_str(â€¦)" 0 11 (fontified nil)) . -1487) (1487 . 1498) (#("from" 0 4 (fontified t)) . -1487) (undo-tree-id3098 . -4) 1491) nil (25944 50119 139213 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1487 1498 #s(yas--snippet nil (#s(yas--field 1 1496 1497 nil nil nil nil #s(yas--exit 1498 nil))) #s(yas--exit 1498 nil) 120 nil #s(yas--field 1 1496 1497 nil nil nil nil #s(yas--exit 1498 nil)) nil nil))) nil (25944 50119 139208 0) 0 nil])
([nil nil ((1470 . 1475)) nil (25944 50119 139207 0) 0 nil])
([nil nil ((1475 . 1484)) nil (25944 50119 139206 0) 0 nil])
([nil nil ((1484 . 1493)) nil (25944 50119 139205 0) 0 nil])
([nil nil ((1492 . 1497) (#("s" 0 1 (fontified nil)) . 1492) (1492 . 1493) (#("state" 0 5 (fontified nil)) . -1492) (1492 . 1497) (#("s" 0 1 (fontified t)) . -1492) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) 1493) nil (25944 50119 139204 0) 0 nil])
([nil nil ((1497 . 1498)) nil (25944 50119 139197 0) 0 nil])
([nil nil ((1498 . 1502) (#("keys" 0 4 (fontified nil)) . -1498) (1498 . 1502)) nil (25944 50119 139196 0) 0 nil])
([nil nil ((1502 . 1503)) nil (25944 50119 139194 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1502) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) 1503) nil (25944 50119 139193 0) 0 nil])
([nil nil ((1502 . 1505)) nil (25944 50119 139175 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -1504) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) 1505) nil (25944 50119 139174 0) 0 nil])
([nil nil ((1504 . 1505)) nil (25944 50119 139169 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1503 1509 #s(yas--snippet nil nil #s(yas--exit 1509 nil) 121 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1509 nil) 121 nil nil nil nil)) (1503 . 1509) (#("lock()$0" 0 8 (fontified nil)) . 1503) (1503 . 1511) (#("lo" 0 2 (fontified nil)) . 1503) (1503 . 1505) (#("lock()" 0 6 (fontified nil)) . -1503) (1503 . 1509) (#("lo" 0 2 (fontified t)) . -1503) (undo-tree-id3067 . -2) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -2) (undo-tree-id3075 . -2) (undo-tree-id3076 . -2) 1505) nil (25944 50119 139167 0) 0 nil])
([nil nil ((1509 . 1511)) nil (25944 50119 139153 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1509) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (#("a" 0 1 (fontified t)) . -1510) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) 1511) nil (25944 50119 139151 0) 0 nil])
([nil nil ((1191 . 1194)) nil (25944 50119 139123 0) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -1193) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) 1194) nil (25944 50119 139121 0) 0 nil])
([nil nil ((1193 . 1197)) nil (25944 50119 139108 0) 0 nil])
([nil nil ((1515 . 1517)) nil (25944 50119 139107 0) 0 nil])
([nil nil ((1516 . 1521) (#("a" 0 1 (fontified nil)) . 1516) (1516 . 1517) (#("await" 0 5 (fontified nil)) . -1516) (1516 . 1521) (#("a" 0 1 (fontified t)) . -1516) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) 1517) nil (25944 50119 139105 0) 0 nil])
([nil nil ((1521 . 1522)) nil (25944 50119 139086 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1548) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) 1549 (t 25944 50119 152590 52000)) nil (25944 50191 858249 0) 0 nil])
([nil nil ((1527 . 1530)) nil (25944 50191 858236 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1527) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -1528) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (#("t" 0 1 (face font-lock-constant-face fontified t)) . -1529) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) 1530) nil (25944 50191 858233 0) 0 nil])
([nil nil ((1527 . 1531)) nil (25944 50191 858208 0) 0 nil])
([nil nil ((1531 . 1532)) nil (25944 50191 858207 0) 0 nil])
([nil nil ((1531 . 1532)) nil (25944 50191 858206 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -1531) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) 1532) nil (25944 50191 858205 0) 0 nil])
([nil nil ((#("lock" 0 4 (face font-lock-variable-name-face fontified t)) . -1491) (undo-tree-id3149 . -4) (undo-tree-id3150 . -4) (undo-tree-id3151 . -4) (undo-tree-id3152 . -4) (undo-tree-id3153 . -4) (undo-tree-id3154 . -4) (undo-tree-id3155 . -4) (undo-tree-id3156 . -4) (undo-tree-id3157 . -4) (undo-tree-id3158 . -4) (undo-tree-id3159 . -4) (undo-tree-id3160 . -4) 1495) nil (25944 50191 858199 0) 0 nil])
([nil nil ((#("state_" 0 6 (face font-lock-variable-name-face fontified t)) . -1485) (undo-tree-id3134 . -6) (undo-tree-id3135 . -6) (undo-tree-id3136 . -6) (undo-tree-id3137 . -6) (undo-tree-id3138 . -6) (undo-tree-id3139 . -6) (undo-tree-id3140 . -6) (undo-tree-id3141 . -6) (undo-tree-id3142 . -6) (undo-tree-id3143 . -6) (undo-tree-id3144 . -6) (undo-tree-id3145 . -6) (undo-tree-id3146 . -6) (undo-tree-id3147 . -6) (undo-tree-id3148 . -6) 1491) nil (25944 50191 858182 0) 0 nil])
([nil nil ((1485 . 1489)) nil (25944 50191 858166 0) 0 nil])
([nil nil ((1531 . 1532) (1554 . 1555) (1525 . 1525) (1525 . 1531)) nil (25944 50191 858165 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1531) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) 1532) nil (25944 50191 858162 0) 0 nil])
([nil nil ((1553 . 1554)) nil (25944 50191 858149 0) 0 nil])
([nil nil ((1553 . 1560) (#("p" 0 1 (fontified nil)) . 1553) (1553 . 1554) (#("payload" 0 7 (fontified nil)) . -1553) (1553 . 1560) (#("p" 0 1 (fontified t)) . -1553) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) 1554) nil (25944 50191 858147 0) 0 nil])
([nil nil ((1561 . 1564)) nil (25944 50191 858140 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1562 1570 #s(yas--snippet nil nil #s(yas--exit 1570 nil) 122 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1570 nil) 122 nil nil nil nil)) (1562 . 1570) (#("unwrap()$0" 0 10 (fontified nil)) . 1562) (1562 . 1572) (#("un" 0 2 (fontified nil)) . 1562) (1562 . 1564) (#("unwrap()" 0 8 (fontified nil)) . -1562) (1562 . 1570) (#("un" 0 2 (fontified t)) . -1562) (undo-tree-id3111 . -2) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -2) (undo-tree-id3115 . -2) (undo-tree-id3116 . -2) (undo-tree-id3117 . -2) (undo-tree-id3118 . -2) 1564) nil (25944 50191 858135 0) 0 nil])
([nil nil ((#("let " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -1521) (undo-tree-id3201 . -4) (undo-tree-id3202 . -4) (undo-tree-id3203 . -4) (undo-tree-id3204 . -4) (undo-tree-id3205 . -4) (undo-tree-id3206 . -4) (undo-tree-id3207 . -4) (undo-tree-id3208 . -4) (undo-tree-id3209 . -4) (undo-tree-id3210 . -4) (undo-tree-id3211 . -4) (undo-tree-id3212 . -4) (undo-tree-id3213 . -4) (undo-tree-id3214 . -4) (undo-tree-id3215 . -4) (undo-tree-id3216 . -4) (undo-tree-id3217 . -4) 1525 (t 25944 50191 871496 919000)) nil (25944 50201 624316 0) 0 nil])
([nil nil ((1485 . 1489) (t 25944 50201 637459 154000)) nil (25944 50203 659802 0) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -1009) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (#(">" 0 1 (fontified t)) . -1010) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) 1011 (t 25944 50203 673084 615000)) nil (25944 50257 596393 0) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-type-face fontified t)) . -991) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -992) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (#("c" 0 1 (face font-lock-type-face fontified t)) . -993) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (#("<" 0 1 (fontified t)) . -994) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (#("M" 0 1 (face font-lock-type-face fontified t)) . -995) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (#("u" 0 1 (face font-lock-type-face fontified t)) . -996) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -997) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -998) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (#("x" 0 1 (face font-lock-type-face fontified t)) . -999) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (#("<" 0 1 (fontified t)) . -1000) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) 1001) nil (25944 50257 596347 0) 0 nil])
([nil nil ((#("vec![]" 0 4 (face font-lock-preprocessor-face fontified t) 4 6 (fontified t)) . -3138) (undo-tree-id3507 . -6) (undo-tree-id3508 . -6) (undo-tree-id3509 . -6) (undo-tree-id3510 . -6) (undo-tree-id3511 . -6) (undo-tree-id3512 . -6) (undo-tree-id3513 . -6) (undo-tree-id3514 . -6) (undo-tree-id3515 . -6) (undo-tree-id3516 . -6) (undo-tree-id3517 . -6) (undo-tree-id3518 . -6) 3144 (t 25944 50257 610053 63000)) nil (25944 50282 389938 0) 0 nil])
([nil nil ((3138 . 3143)) nil (25944 50282 389925 0) 0 nil])
([nil nil ((3138 . 3143) (#("State" 0 5 (fontified nil)) . 3138) (3138 . 3143) (#("State" 0 5 (face font-lock-type-face fontified t)) . -3138) (undo-tree-id3491 . -2) (undo-tree-id3492 . -5) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -2) (undo-tree-id3499 . -2) (undo-tree-id3500 . -2) (undo-tree-id3501 . -3) (undo-tree-id3502 . -3) (undo-tree-id3503 . -4) (undo-tree-id3504 . -4) (undo-tree-id3505 . -5) (undo-tree-id3506 . -5) 3143) nil (25944 50282 389922 0) 0 nil])
([nil nil ((3143 . 3145)) nil (25944 50282 389904 0) 0 nil])
([nil nil ((3144 . 3145)) nil (25944 50282 389903 0) 0 nil])
([nil nil ((3144 . 3148) (#("k" 0 1 (fontified nil)) . 3144) (3144 . 3145) (#("keys" 0 4 (fontified nil)) . -3144) (3144 . 3148) (#("k" 0 1 (fontified t)) . -3144) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) 3145) nil (25944 50282 389901 0) 0 nil])
([nil nil ((3148 . 3153)) nil (25944 50282 389885 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3150 3156 #s(yas--snippet nil nil #s(yas--exit 3155 nil) 123 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3155 nil) 123 nil nil nil nil)) (3150 . 3156) (#("vec![$0]" 0 8 (fontified nil)) . 3150) (3150 . 3158) (#("vec" 0 3 (fontified nil)) . 3150) (3150 . 3153) (#("vec![â€¦]" 0 7 (fontified nil)) . -3150) (3150 . 3157) (#("vec" 0 3 (fontified t)) . -3150) (undo-tree-id3476 . -3) (undo-tree-id3477 . -3) (undo-tree-id3478 . -1) (undo-tree-id3479 . -2) (undo-tree-id3480 . -3) (undo-tree-id3481 . -3) (undo-tree-id3482 . -3) (undo-tree-id3483 . -3) 3153) nil (25944 50282 389880 0) 0 nil])
([nil nil ((#("State {" 0 5 (face font-lock-type-face fontified t) 5 7 (fontified t)) . -3099) (undo-tree-id3642 . -7) (undo-tree-id3643 . -7) (undo-tree-id3644 . -7) (undo-tree-id3645 . -7) (undo-tree-id3646 . -7) (undo-tree-id3647 . -7) (undo-tree-id3648 . -7) (undo-tree-id3649 . -7) (undo-tree-id3650 . -7) (undo-tree-id3651 . -7) (undo-tree-id3652 . -7) (undo-tree-id3653 . -7) 3106 (t 25944 50282 403590 388000)) nil (25944 50307 373054 0) 0 nil])
([nil nil ((#("keys: " 0 4 (face font-lock-variable-name-face fontified t) 4 6 (fontified t)) . -3105) (undo-tree-id3597 . -6) (undo-tree-id3598 . -6) (undo-tree-id3599 . -5) (undo-tree-id3600 . -5) (undo-tree-id3601 . -5) (undo-tree-id3602 . -5) (undo-tree-id3603 . -5) (undo-tree-id3604 . -5) (undo-tree-id3605 . -5) (undo-tree-id3606 . -5) (undo-tree-id3607 . -5) (undo-tree-id3608 . -5) (undo-tree-id3609 . -5) (undo-tree-id3610 . -5) (undo-tree-id3611 . -5) (undo-tree-id3612 . -5) (undo-tree-id3613 . -5) (undo-tree-id3614 . -5) (undo-tree-id3615 . -5) (undo-tree-id3616 . -5) (undo-tree-id3617 . -5) (undo-tree-id3618 . -5) (undo-tree-id3619 . -5) (undo-tree-id3620 . -5) (undo-tree-id3621 . -5) (undo-tree-id3622 . -5) (undo-tree-id3623 . -5) (undo-tree-id3624 . -5) (undo-tree-id3625 . -5) (undo-tree-id3626 . -4) (undo-tree-id3627 . -4) (undo-tree-id3628 . -4) (undo-tree-id3629 . -4) (undo-tree-id3630 . -5) (undo-tree-id3631 . -5) (undo-tree-id3632 . -5) (undo-tree-id3633 . -5) (undo-tree-id3634 . -5) (undo-tree-id3635 . -6) (undo-tree-id3636 . -6) (undo-tree-id3637 . -6) (undo-tree-id3638 . -6) (undo-tree-id3639 . -6) (undo-tree-id3640 . -6) (undo-tree-id3641 . -6) 3111) nil (25944 50307 373038 0) 0 nil])
([nil nil ((#("vec![]}))
	}" 0 4 (face font-lock-preprocessor-face fontified t) 4 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 12 (fontified t)) . -3137) (undo-tree-id3528 . -12) (undo-tree-id3529 . -5) (undo-tree-id3530 . -5) (undo-tree-id3531 . -5) (undo-tree-id3532 . -5) (undo-tree-id3533 . -5) (undo-tree-id3534 . -5) (undo-tree-id3535 . -5) (undo-tree-id3536 . -5) (undo-tree-id3537 . -5) (undo-tree-id3538 . -5) (undo-tree-id3539 . -5) (undo-tree-id3540 . -5) (undo-tree-id3541 . -5) (undo-tree-id3542 . -5) (undo-tree-id3543 . -5) (undo-tree-id3544 . -5) (undo-tree-id3545 . -5) (undo-tree-id3546 . -5) (undo-tree-id3547 . -5) (undo-tree-id3548 . -5) (undo-tree-id3549 . -5) (undo-tree-id3550 . -5) (undo-tree-id3551 . -5) (undo-tree-id3552 . -5) (undo-tree-id3553 . -5) (undo-tree-id3554 . -5) (undo-tree-id3555 . -5) (undo-tree-id3556 . -5) (undo-tree-id3557 . -5) (undo-tree-id3558 . -5) (undo-tree-id3559 . -5) (undo-tree-id3560 . -5) (undo-tree-id3561 . -5) (undo-tree-id3562 . -5) (undo-tree-id3563 . -5) (undo-tree-id3564 . -5) (undo-tree-id3565 . -5) (undo-tree-id3566 . -5) (undo-tree-id3567 . -5) (undo-tree-id3568 . -5) (undo-tree-id3569 . -5) (undo-tree-id3570 . -5) (undo-tree-id3571 . -5) (undo-tree-id3572 . -5) (undo-tree-id3573 . -5) (undo-tree-id3574 . -5) (undo-tree-id3575 . -5) (undo-tree-id3576 . -5) (undo-tree-id3577 . -5) (undo-tree-id3578 . -5) (undo-tree-id3579 . -5) (undo-tree-id3580 . -5) (undo-tree-id3581 . -12) (undo-tree-id3582 . -12) (undo-tree-id3583 . -12) (undo-tree-id3584 . -12) (undo-tree-id3585 . -12) (undo-tree-id3586 . -11) (undo-tree-id3587 . -11) (undo-tree-id3588 . -11) (undo-tree-id3589 . -11) (undo-tree-id3590 . -11) (undo-tree-id3591 . -10) (undo-tree-id3592 . -12) (undo-tree-id3593 . -12) (undo-tree-id3594 . -12) (undo-tree-id3595 . -12) (undo-tree-id3596 . -12) 3149) nil (25944 50307 372984 0) 0 nil])
([nil nil ((3137 . 3138)) nil (25944 50307 372905 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3137 3143 #s(yas--snippet nil nil #s(yas--exit 3142 nil) 124 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3142 nil) 124 nil nil nil nil)) (3137 . 3143) (#("vec![$0]" 0 8 (fontified nil)) . 3137) (3137 . 3145) (#("v" 0 1 (fontified nil)) . 3137) (3137 . 3138) (#("vec![â€¦]" 0 7 (fontified nil)) . -3137) (3137 . 3144) (#("v" 0 1 (fontified t)) . -3137) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) 3138) nil (25944 50307 372900 0) 0 nil])
([nil nil ((3144 . 3145) (t 25944 50307 387085 35000)) nil (25944 50323 368471 0) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -3144) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) 3145) nil (25944 50328 394822 0) 0 nil])
([nil nil ((#("vec![])" 0 4 (face font-lock-preprocessor-face fontified t) 4 6 (fontified t) 6 7 (fontified t)) . -3137) (undo-tree-id4531 . -7) (undo-tree-id4532 . -7) (undo-tree-id4533 . -7) (undo-tree-id4534 . -7) (undo-tree-id4535 . -7) (undo-tree-id4536 . -7) (undo-tree-id4537 . -7) (undo-tree-id4538 . -7) (undo-tree-id4539 . -7) (undo-tree-id4540 . -7) (undo-tree-id4541 . -7) (undo-tree-id4542 . -7) (undo-tree-id4543 . -7) (undo-tree-id4544 . -7) (undo-tree-id4545 . -7) (undo-tree-id4546 . -7) (undo-tree-id4547 . -7) (undo-tree-id4548 . -7) (undo-tree-id4549 . -7) (undo-tree-id4550 . -7) (undo-tree-id4551 . -7) (undo-tree-id4552 . -7) (undo-tree-id4553 . -7) (undo-tree-id4554 . -7) (undo-tree-id4555 . -7) (undo-tree-id4556 . -7) (undo-tree-id4557 . -7) (undo-tree-id4558 . -7) (undo-tree-id4559 . -7) (undo-tree-id4560 . -7) (undo-tree-id4561 . -7) (undo-tree-id4562 . -7) (undo-tree-id4563 . -7) (undo-tree-id4564 . -7) (undo-tree-id4565 . -7) (undo-tree-id4566 . -7) (undo-tree-id4567 . -7) (undo-tree-id4568 . -7) (undo-tree-id4569 . -7) (undo-tree-id4570 . -7) (undo-tree-id4571 . -7) (undo-tree-id4572 . -7) (undo-tree-id4573 . -7) (undo-tree-id4574 . -7) (undo-tree-id4575 . -7) (undo-tree-id4576 . -7) (undo-tree-id4577 . -7) (undo-tree-id4578 . -7) (undo-tree-id4579 . -7) (undo-tree-id4580 . -7) (undo-tree-id4581 . -7) (undo-tree-id4582 . -7) (undo-tree-id4583 . -7) (undo-tree-id4584 . -7) (undo-tree-id4585 . -7) (undo-tree-id4586 . -7) (undo-tree-id4587 . -7) (undo-tree-id4588 . -7) (undo-tree-id4589 . -7) (undo-tree-id4590 . -7) (undo-tree-id4591 . -7) (undo-tree-id4592 . -7) (undo-tree-id4593 . -7) (undo-tree-id4594 . -7) (undo-tree-id4595 . -7) (undo-tree-id4596 . -7) (undo-tree-id4597 . -7) (undo-tree-id4598 . -7) (undo-tree-id4599 . -7) (undo-tree-id4600 . -7) (undo-tree-id4601 . -7) (undo-tree-id4602 . -7) (undo-tree-id4603 . -7) (undo-tree-id4604 . -7) (undo-tree-id4605 . -7) (undo-tree-id4606 . -7) (undo-tree-id4607 . -7) (undo-tree-id4608 . -7) (undo-tree-id4609 . -7) (undo-tree-id4610 . -7) (undo-tree-id4611 . -7) (undo-tree-id4612 . -7) (undo-tree-id4613 . -7) (undo-tree-id4614 . -7) (undo-tree-id4615 . -7) (undo-tree-id4616 . -7) (undo-tree-id4617 . -7) (undo-tree-id4618 . -7) (undo-tree-id4619 . -7) (undo-tree-id4620 . -7) (undo-tree-id4621 . -7) (undo-tree-id4622 . -7) (undo-tree-id4623 . -7) (undo-tree-id4624 . -7) (undo-tree-id4625 . -7) (undo-tree-id4626 . -7) (undo-tree-id4627 . -7) (undo-tree-id4628 . -7) (undo-tree-id4629 . -7) (undo-tree-id4630 . -7) (undo-tree-id4631 . -7) (undo-tree-id4632 . -7) (undo-tree-id4633 . -7) (undo-tree-id4634 . -7) (undo-tree-id4635 . -7) (undo-tree-id4636 . -7) (undo-tree-id4637 . -7) (undo-tree-id4638 . -7) (undo-tree-id4639 . -7) (undo-tree-id4640 . -7) (undo-tree-id4641 . -7) (undo-tree-id4642 . -7) (undo-tree-id4643 . -7) (undo-tree-id4644 . -7) (undo-tree-id4645 . -7) (undo-tree-id4646 . -7) (undo-tree-id4647 . -7) (undo-tree-id4648 . -7) (undo-tree-id4649 . -7) (undo-tree-id4650 . -7) (undo-tree-id4651 . -7) (undo-tree-id4652 . -7) (undo-tree-id4653 . -7) (undo-tree-id4654 . -7) (undo-tree-id4655 . -7) (undo-tree-id4656 . -7) (undo-tree-id4657 . -7) (undo-tree-id4658 . -7) (undo-tree-id4659 . -7) (undo-tree-id4660 . -7) (undo-tree-id4661 . -7) (undo-tree-id4662 . -7) (undo-tree-id4663 . -7) (undo-tree-id4664 . -7) (undo-tree-id4665 . -7) (undo-tree-id4666 . -7) (undo-tree-id4667 . -7) (undo-tree-id4668 . -7) (undo-tree-id4669 . -7) (undo-tree-id4670 . -7) (undo-tree-id4671 . -7) (undo-tree-id4672 . -7) (undo-tree-id4673 . -7) (undo-tree-id4674 . -7) (undo-tree-id4675 . -7) (undo-tree-id4676 . -7) (undo-tree-id4677 . -7) (undo-tree-id4678 . -7) (undo-tree-id4679 . -7) (undo-tree-id4680 . -7) (undo-tree-id4681 . -7) (undo-tree-id4682 . -7) (undo-tree-id4683 . -7) (undo-tree-id4684 . -7) (undo-tree-id4685 . -7) (undo-tree-id4686 . -7) (undo-tree-id4687 . -7) 3144) nil (25944 50355 445857 0) 0 nil] [nil nil ((3144 . 3145)) ((#(")" 0 1 (fontified t)) . 3144) (undo-tree-id3984 . 1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1)) (25944 50328 114322 0) 0 nil])
([nil nil ((#("keys: " 0 4 (face font-lock-variable-name-face fontified t) 4 6 (fontified t)) . -3131) (undo-tree-id4367 . -6) (undo-tree-id4368 . -6) (undo-tree-id4369 . -6) (undo-tree-id4370 . -6) (undo-tree-id4371 . -6) (undo-tree-id4372 . -6) (undo-tree-id4373 . -6) (undo-tree-id4374 . -6) (undo-tree-id4375 . -6) (undo-tree-id4376 . -6) (undo-tree-id4377 . -6) (undo-tree-id4378 . -6) (undo-tree-id4379 . -6) (undo-tree-id4380 . -6) (undo-tree-id4381 . -6) (undo-tree-id4382 . -6) (undo-tree-id4383 . -6) (undo-tree-id4384 . -6) (undo-tree-id4385 . -6) (undo-tree-id4386 . -6) (undo-tree-id4387 . -6) (undo-tree-id4388 . -6) (undo-tree-id4389 . -6) (undo-tree-id4390 . -6) (undo-tree-id4391 . -6) (undo-tree-id4392 . -6) (undo-tree-id4393 . -6) (undo-tree-id4394 . -6) (undo-tree-id4395 . -6) (undo-tree-id4396 . -6) (undo-tree-id4397 . -6) (undo-tree-id4398 . -6) (undo-tree-id4399 . -6) (undo-tree-id4400 . -6) (undo-tree-id4401 . -6) (undo-tree-id4402 . -6) (undo-tree-id4403 . -6) (undo-tree-id4404 . -6) (undo-tree-id4405 . -6) (undo-tree-id4406 . -6) (undo-tree-id4407 . -6) (undo-tree-id4408 . -6) (undo-tree-id4409 . -6) (undo-tree-id4410 . -6) (undo-tree-id4411 . -6) (undo-tree-id4412 . -6) (undo-tree-id4413 . -6) (undo-tree-id4414 . -6) (undo-tree-id4415 . -6) (undo-tree-id4416 . -6) (undo-tree-id4417 . -6) (undo-tree-id4418 . -6) (undo-tree-id4419 . -6) (undo-tree-id4420 . -6) (undo-tree-id4421 . -6) (undo-tree-id4422 . -6) (undo-tree-id4423 . -6) (undo-tree-id4424 . -6) (undo-tree-id4425 . -6) (undo-tree-id4426 . -6) (undo-tree-id4427 . -6) (undo-tree-id4428 . -6) (undo-tree-id4429 . -6) (undo-tree-id4430 . -6) (undo-tree-id4431 . -6) (undo-tree-id4432 . -6) (undo-tree-id4433 . -6) (undo-tree-id4434 . -6) (undo-tree-id4435 . -6) (undo-tree-id4436 . -6) (undo-tree-id4437 . -6) (undo-tree-id4438 . -6) (undo-tree-id4439 . -6) (undo-tree-id4440 . -6) (undo-tree-id4441 . -6) (undo-tree-id4442 . -6) (undo-tree-id4443 . -6) (undo-tree-id4444 . -6) (undo-tree-id4445 . -6) (undo-tree-id4446 . -6) (undo-tree-id4447 . -6) (undo-tree-id4448 . -6) (undo-tree-id4449 . -6) (undo-tree-id4450 . -6) (undo-tree-id4451 . -6) (undo-tree-id4452 . -6) (undo-tree-id4453 . -6) (undo-tree-id4454 . -6) (undo-tree-id4455 . -6) (undo-tree-id4456 . -6) (undo-tree-id4457 . -6) (undo-tree-id4458 . -6) (undo-tree-id4459 . -6) (undo-tree-id4460 . -6) (undo-tree-id4461 . -6) (undo-tree-id4462 . -6) (undo-tree-id4463 . -6) (undo-tree-id4464 . -6) (undo-tree-id4465 . -6) (undo-tree-id4466 . -6) (undo-tree-id4467 . -6) (undo-tree-id4468 . -6) (undo-tree-id4469 . -6) (undo-tree-id4470 . -6) (undo-tree-id4471 . -6) (undo-tree-id4472 . -6) (undo-tree-id4473 . -6) (undo-tree-id4474 . -6) (undo-tree-id4475 . -6) (undo-tree-id4476 . -6) (undo-tree-id4477 . -6) (undo-tree-id4478 . -6) (undo-tree-id4479 . -6) (undo-tree-id4480 . -6) (undo-tree-id4481 . -6) (undo-tree-id4482 . -6) (undo-tree-id4483 . -6) (undo-tree-id4484 . -6) (undo-tree-id4485 . -6) (undo-tree-id4486 . -6) (undo-tree-id4487 . -6) (undo-tree-id4488 . -6) (undo-tree-id4489 . -6) (undo-tree-id4490 . -6) (undo-tree-id4491 . -6) (undo-tree-id4492 . -6) (undo-tree-id4493 . -6) (undo-tree-id4494 . -6) (undo-tree-id4495 . -6) (undo-tree-id4496 . -6) (undo-tree-id4497 . -6) (undo-tree-id4498 . -6) (undo-tree-id4499 . -6) (undo-tree-id4500 . -6) (undo-tree-id4501 . -6) (undo-tree-id4502 . -6) (undo-tree-id4503 . -6) (undo-tree-id4504 . -6) (undo-tree-id4505 . -6) (undo-tree-id4506 . -6) (undo-tree-id4507 . -6) (undo-tree-id4508 . -6) (undo-tree-id4509 . -6) (undo-tree-id4510 . -6) (undo-tree-id4511 . -6) (undo-tree-id4512 . -6) (undo-tree-id4513 . -6) (undo-tree-id4514 . -6) (undo-tree-id4515 . -6) (undo-tree-id4516 . -6) (undo-tree-id4517 . -6) (undo-tree-id4518 . -6) (undo-tree-id4519 . -6) (undo-tree-id4520 . -6) (undo-tree-id4521 . -6) (undo-tree-id4522 . -6) (undo-tree-id4523 . -6) (undo-tree-id4524 . -6) (undo-tree-id4525 . -6) (undo-tree-id4526 . -6) (undo-tree-id4527 . -6) (undo-tree-id4528 . -6) (undo-tree-id4529 . -6) (undo-tree-id4530 . -6) 3137) nil (25944 50355 445700 0) 0 nil])
([nil nil ((3144 . 3150)) ((#("
	    " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 3144) (undo-tree-id3940 . -6) (undo-tree-id3941 . 6) (undo-tree-id3942 . -6) (undo-tree-id3943 . -6) (undo-tree-id3944 . -6) (undo-tree-id3945 . -6) (undo-tree-id3946 . -6) (undo-tree-id3947 . -6) (undo-tree-id3948 . -6) (undo-tree-id3949 . -6) (undo-tree-id3950 . -6) (undo-tree-id3951 . -6) (undo-tree-id3952 . -5) (undo-tree-id3953 . -5) (undo-tree-id3954 . -5) (undo-tree-id3955 . -5) (undo-tree-id3956 . -5) (undo-tree-id3957 . -4) (undo-tree-id3958 . -4) (undo-tree-id3959 . -4) (undo-tree-id3960 . -4) (undo-tree-id3961 . -4) (undo-tree-id3962 . -3) (undo-tree-id3963 . -3) (undo-tree-id3964 . -3) (undo-tree-id3965 . -3) (undo-tree-id3966 . -3) (undo-tree-id3967 . -2) (undo-tree-id3968 . -2) (undo-tree-id3969 . -2) (undo-tree-id3970 . -2) (undo-tree-id3971 . -2) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -6) (undo-tree-id3979 . -6) (undo-tree-id3980 . -6) (undo-tree-id3981 . -6) (undo-tree-id3982 . -6) (undo-tree-id3983 . -6)) (25944 50327 702448 0) 0 nil])
([nil nil ((#("State{" 0 5 (face font-lock-type-face fontified t) 5 6 (fontified t)) . -3125) (undo-tree-id4194 . -6) (undo-tree-id4195 . -6) (undo-tree-id4196 . -6) (undo-tree-id4197 . -6) (undo-tree-id4198 . -6) (undo-tree-id4199 . -6) (undo-tree-id4200 . -6) (undo-tree-id4201 . -6) (undo-tree-id4202 . -6) (undo-tree-id4203 . -6) (undo-tree-id4204 . -6) (undo-tree-id4205 . -6) (undo-tree-id4206 . -6) (undo-tree-id4207 . -6) (undo-tree-id4208 . -6) (undo-tree-id4209 . -6) (undo-tree-id4210 . -6) (undo-tree-id4211 . -6) (undo-tree-id4212 . -6) (undo-tree-id4213 . -6) (undo-tree-id4214 . -6) (undo-tree-id4215 . -6) (undo-tree-id4216 . -6) (undo-tree-id4217 . -6) (undo-tree-id4218 . -6) (undo-tree-id4219 . -6) (undo-tree-id4220 . -6) (undo-tree-id4221 . -6) (undo-tree-id4222 . -6) (undo-tree-id4223 . -6) (undo-tree-id4224 . -6) (undo-tree-id4225 . -6) (undo-tree-id4226 . -6) (undo-tree-id4227 . -6) (undo-tree-id4228 . -6) (undo-tree-id4229 . -6) (undo-tree-id4230 . -6) (undo-tree-id4231 . -6) (undo-tree-id4232 . -6) (undo-tree-id4233 . -6) (undo-tree-id4234 . -6) (undo-tree-id4235 . -6) (undo-tree-id4236 . -6) (undo-tree-id4237 . -6) (undo-tree-id4238 . -6) (undo-tree-id4239 . -6) (undo-tree-id4240 . -6) (undo-tree-id4241 . -6) (undo-tree-id4242 . -6) (undo-tree-id4243 . -6) (undo-tree-id4244 . -6) (undo-tree-id4245 . -6) (undo-tree-id4246 . -6) (undo-tree-id4247 . -6) (undo-tree-id4248 . -6) (undo-tree-id4249 . -6) (undo-tree-id4250 . -6) (undo-tree-id4251 . -6) (undo-tree-id4252 . -6) (undo-tree-id4253 . -6) (undo-tree-id4254 . -6) (undo-tree-id4255 . -6) (undo-tree-id4256 . -6) (undo-tree-id4257 . -6) (undo-tree-id4258 . -6) (undo-tree-id4259 . -6) (undo-tree-id4260 . -6) (undo-tree-id4261 . -6) (undo-tree-id4262 . -6) (undo-tree-id4263 . -6) (undo-tree-id4264 . -6) (undo-tree-id4265 . -6) (undo-tree-id4266 . -6) (undo-tree-id4267 . -6) (undo-tree-id4268 . -6) (undo-tree-id4269 . -6) (undo-tree-id4270 . -6) (undo-tree-id4271 . -6) (undo-tree-id4272 . -6) (undo-tree-id4273 . -6) (undo-tree-id4274 . -6) (undo-tree-id4275 . -6) (undo-tree-id4276 . -6) (undo-tree-id4277 . -6) (undo-tree-id4278 . -6) (undo-tree-id4279 . -6) (undo-tree-id4280 . -6) (undo-tree-id4281 . -6) (undo-tree-id4282 . -6) (undo-tree-id4283 . -6) (undo-tree-id4284 . -6) (undo-tree-id4285 . -6) (undo-tree-id4286 . -6) (undo-tree-id4287 . -6) (undo-tree-id4288 . -6) (undo-tree-id4289 . -6) (undo-tree-id4290 . -6) (undo-tree-id4291 . -6) (undo-tree-id4292 . -6) (undo-tree-id4293 . -6) (undo-tree-id4294 . -6) (undo-tree-id4295 . -6) (undo-tree-id4296 . -6) (undo-tree-id4297 . -6) (undo-tree-id4298 . -6) (undo-tree-id4299 . -6) (undo-tree-id4300 . -6) (undo-tree-id4301 . -6) (undo-tree-id4302 . -6) (undo-tree-id4303 . -6) (undo-tree-id4304 . -6) (undo-tree-id4305 . -6) (undo-tree-id4306 . -6) (undo-tree-id4307 . -6) (undo-tree-id4308 . -6) (undo-tree-id4309 . -6) (undo-tree-id4310 . -6) (undo-tree-id4311 . -6) (undo-tree-id4312 . -6) (undo-tree-id4313 . -6) (undo-tree-id4314 . -6) (undo-tree-id4315 . -6) (undo-tree-id4316 . -6) (undo-tree-id4317 . -6) (undo-tree-id4318 . -6) (undo-tree-id4319 . -6) (undo-tree-id4320 . -6) (undo-tree-id4321 . -6) (undo-tree-id4322 . -6) (undo-tree-id4323 . -6) (undo-tree-id4324 . -6) (undo-tree-id4325 . -6) (undo-tree-id4326 . -6) (undo-tree-id4327 . -6) (undo-tree-id4328 . -6) (undo-tree-id4329 . -6) (undo-tree-id4330 . -6) (undo-tree-id4331 . -6) (undo-tree-id4332 . -6) (undo-tree-id4333 . -6) (undo-tree-id4334 . -6) (undo-tree-id4335 . -6) (undo-tree-id4336 . -6) (undo-tree-id4337 . -6) (undo-tree-id4338 . -6) (undo-tree-id4339 . -6) (undo-tree-id4340 . -6) (undo-tree-id4341 . -6) (undo-tree-id4342 . -6) (undo-tree-id4343 . -6) (undo-tree-id4344 . -6) (undo-tree-id4345 . -6) (undo-tree-id4346 . -6) (undo-tree-id4347 . -6) (undo-tree-id4348 . -6) (undo-tree-id4349 . -6) (undo-tree-id4350 . -6) (undo-tree-id4351 . -6) (undo-tree-id4352 . -6) (undo-tree-id4353 . -6) (undo-tree-id4354 . -6) (undo-tree-id4355 . -6) (undo-tree-id4356 . -6) (undo-tree-id4357 . -6) (undo-tree-id4358 . -6) (undo-tree-id4359 . -6) (undo-tree-id4360 . -6) (undo-tree-id4361 . -6) (undo-tree-id4362 . -6) (undo-tree-id4363 . -6) (undo-tree-id4364 . -6) (undo-tree-id4365 . -6) (undo-tree-id4366 . -6) 3131) nil (25944 50355 445497 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3144) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . 1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (#("	" 0 1 (fontified t)) . -3145) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (#(" " 0 1 (fontified t)) . -3146) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (#(" " 0 1 (fontified t)) . -3147) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (#(" " 0 1 (fontified t)) . -3148) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (#(" " 0 1 (fontified t)) . -3149) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) 3150) ((3144 . 3150)) (25944 50327 483793 0) 0 nil])
([nil nil ((3125 . 3128)) nil (25944 50355 445331 0) 0 nil])
([nil nil ((3145 . 3146)) ((#(")" 0 1 (fontified t)) . 3145) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1)) (25944 50327 213185 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -3127) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) 3128) nil (25944 50355 445329 0) 0 nil])
([nil nil ((3146 . 3149)) ((#("
		" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 3146) (undo-tree-id3901 . -3) (undo-tree-id3902 . -3) (undo-tree-id3903 . 3) (undo-tree-id3904 . -3) (undo-tree-id3905 . -3) (undo-tree-id3906 . -3) (undo-tree-id3907 . -3) (undo-tree-id3908 . -3) (undo-tree-id3909 . -3) (undo-tree-id3910 . -2) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -3) (undo-tree-id3914 . -3) (undo-tree-id3915 . -3) (undo-tree-id3916 . -3) (undo-tree-id3917 . -3) (undo-tree-id3918 . -3)) (25944 50327 29247 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -3125) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (#(")" 0 1 (fontified t)) . -3126) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) 3127) nil (25944 50355 445313 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3146) (undo-tree-id3654 . -1) (undo-tree-id3655 . 1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (#("	" 0 1 (fontified t)) . -3147) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (#("	" 0 1 (fontified t)) . -3148) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) 3149) ((3146 . 3149)) (25944 50326 817886 0) 0 nil])
([nil nil ((3125 . 3128)) nil (25944 50355 445249 0) 0 nil])
([nil nil ((3145 . 3151)) ((#("
	    " 0 6 (fontified t)) . 3145) (undo-tree-id3843 . -6) (undo-tree-id3844 . -6) (undo-tree-id3845 . -6) (undo-tree-id3846 . -6) (undo-tree-id3847 . -6) (undo-tree-id3848 . -6) (undo-tree-id3849 . -6) (undo-tree-id3850 . -6) (undo-tree-id3851 . -6) (undo-tree-id3852 . -6) (undo-tree-id3853 . -6) (undo-tree-id3854 . -6) (undo-tree-id3855 . -6) (undo-tree-id3856 . -6) (undo-tree-id3857 . -6) (undo-tree-id3858 . -6) (undo-tree-id3859 . -6) (undo-tree-id3860 . -6) (undo-tree-id3861 . -6) (undo-tree-id3862 . -6) (undo-tree-id3863 . -6) (undo-tree-id3864 . -6) (undo-tree-id3865 . -6) (undo-tree-id3866 . -6) (undo-tree-id3867 . -6) (undo-tree-id3868 . -6) (undo-tree-id3869 . -6) (undo-tree-id3870 . -6) (undo-tree-id3871 . -6) (undo-tree-id3872 . -6) (undo-tree-id3873 . -6) (undo-tree-id3874 . -6) (undo-tree-id3875 . -6) (undo-tree-id3876 . -6) (undo-tree-id3877 . -6) (undo-tree-id3878 . -6) (undo-tree-id3879 . -6) (undo-tree-id3880 . -6) (undo-tree-id3881 . -6) (undo-tree-id3882 . -6) (undo-tree-id3883 . -6) (undo-tree-id3884 . -6) (undo-tree-id3885 . -6) (undo-tree-id3886 . -6) (undo-tree-id3887 . -6) (undo-tree-id3888 . -6) (undo-tree-id3889 . -6) (undo-tree-id3890 . -6) (undo-tree-id3891 . -6) (undo-tree-id3892 . -6) (undo-tree-id3893 . -6) (undo-tree-id3894 . -6) (undo-tree-id3895 . -6) (undo-tree-id3896 . -1) (undo-tree-id3897 . -6) (undo-tree-id3898 . -6) (undo-tree-id3899 . -6) (undo-tree-id3900 . -6) (t 25944 50323 382850 354000)) (25944 50323 368258 0) 0 nil])
([nil nil ((3127 . 3129)) nil (25944 50355 445248 0) 0 nil])
nil
([nil nil ((3125 . 3128)) nil (25944 50355 445247 0) 0 nil])
([nil nil ((#("V" 0 1 (face font-lock-type-face fontified t)) . -3125) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -3126) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (#("c" 0 1 (face font-lock-type-face fontified t)) . -3127) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) 3128) nil (25944 50355 445244 0) 0 nil])
([nil nil ((3125 . 3126)) nil (25944 50355 445217 0) 0 nil])
([nil nil ((3125 . 3131) (#("S" 0 1 (fontified nil)) . 3125) (3125 . 3126) (#("String" 0 6 (fontified nil)) . -3125) (3125 . 3131) (#("S" 0 1 (face font-lock-type-face fontified t)) . -3125) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) 3126) nil (25944 50355 445215 0) 0 nil])
([nil nil ((#("String" 0 6 (face font-lock-type-face fontified t)) . -3125) (undo-tree-id4089 . -6) (undo-tree-id4090 . -6) (undo-tree-id4091 . -6) (undo-tree-id4092 . -6) (undo-tree-id4093 . -6) (undo-tree-id4094 . -6) 3131) nil (25944 50355 445208 0) 0 nil])
([nil nil ((3125 . 3128)) nil (25944 50355 445200 0) 0 nil])
([nil nil ((3125 . 3130) (#("Sta" 0 3 (fontified nil)) . 3125) (3125 . 3128) (#("State" 0 5 (fontified nil)) . -3125) (3125 . 3130) (#("Sta" 0 3 (face font-lock-type-face fontified t)) . -3125) (undo-tree-id4081 . -3) (undo-tree-id4082 . -1) (undo-tree-id4083 . -2) (undo-tree-id4084 . -2) (undo-tree-id4085 . -3) (undo-tree-id4086 . -3) (undo-tree-id4087 . -3) (undo-tree-id4088 . -3) 3128) nil (25944 50355 445198 0) 0 nil])
([nil nil ((3130 . 3132)) nil (25944 50355 445187 0) 0 nil])
([nil nil ((3131 . 3132)) nil (25944 50355 445186 0) 0 nil])
([nil nil ((3131 . 3135) (#("k" 0 1 (fontified nil)) . 3131) (3131 . 3132) (#("keys" 0 4 (fontified nil)) . -3131) (3131 . 3135) (#("k" 0 1 (fontified t)) . -3131) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) 3132) nil (25944 50355 445185 0) 0 nil])
([nil nil ((3135 . 3137)) nil (25944 50355 445178 0) 0 nil])
([nil nil ((3137 . 3140)) nil (25944 50355 445177 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3137 3143 #s(yas--snippet nil nil #s(yas--exit 3142 nil) 125 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3142 nil) 125 nil nil nil nil)) (3137 . 3143) (#("vec![$0]" 0 8 (fontified nil)) . 3137) (3137 . 3145) (#("vec" 0 3 (fontified nil)) . 3137) (3137 . 3140) (#("vec![â€¦]" 0 7 (fontified nil)) . -3137) (3137 . 3144) (#("vec" 0 3 (fontified t)) . -3137) (undo-tree-id4071 . -3) (undo-tree-id4072 . -1) (undo-tree-id4073 . -2) (undo-tree-id4074 . -2) (undo-tree-id4075 . -3) (undo-tree-id4076 . -3) 3140) nil (25944 50355 445171 0) 0 nil])
([nil nil ((#("State" 0 5 (face font-lock-type-face fontified t)) . -1252) (undo-tree-id4742 . -5) (undo-tree-id4743 . -5) (undo-tree-id4744 . -5) (undo-tree-id4745 . -5) (undo-tree-id4746 . -5) (undo-tree-id4747 . -5) (undo-tree-id4748 . -5) (undo-tree-id4749 . -5) (undo-tree-id4750 . -5) (undo-tree-id4751 . -5) (undo-tree-id4752 . -5) (undo-tree-id4753 . -5) (undo-tree-id4754 . -5) (undo-tree-id4755 . -5) (undo-tree-id4756 . -5) (undo-tree-id4757 . -5) (undo-tree-id4758 . -5) (undo-tree-id4759 . -5) (undo-tree-id4760 . -5) (undo-tree-id4761 . -5) (undo-tree-id4762 . -5) 1257 (t 25944 50355 461539 539000)) nil (25944 50373 930191 0) 0 nil])
([nil nil ((1252 . 1254)) nil (25944 50373 930169 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1252 1257 #s(yas--snippet nil nil #s(yas--exit 1256 nil) 126 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1256 nil) 126 nil nil nil nil)) (1252 . 1257) (#("Arc<$0>" 0 7 (fontified nil)) . 1252) (1252 . 1259) (#("Ar" 0 2 (fontified nil)) . 1252) (1252 . 1254) (#("Arc<â€¦>" 0 6 (fontified nil)) . -1252) (1252 . 1258) (#("Ar" 0 2 (face font-lock-type-face fontified t)) . -1252) (undo-tree-id4737 . -2) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -2) (undo-tree-id4741 . -2) 1254) nil (25944 50373 930167 0) 0 nil])
([nil nil ((1256 . 1257)) nil (25944 50373 930158 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1256 1263 #s(yas--snippet nil nil #s(yas--exit 1262 nil) 127 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1262 nil) 127 nil nil nil nil)) (1256 . 1263) (#("Mutex<$0>" 0 9 (fontified nil)) . 1256) (1256 . 1265) (#("M" 0 1 (fontified nil)) . 1256) (1256 . 1257) (#("Mutex<â€¦>" 0 8 (fontified nil)) . -1256) (1256 . 1264) (#("M" 0 1 (face font-lock-type-face fontified t)) . -1256) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) 1257) nil (25944 50373 930156 0) 0 nil])
([nil nil ((1262 . 1264)) nil (25944 50373 930147 0) 0 nil])
([nil nil ((1262 . 1267) (#("St" 0 2 (fontified nil)) . 1262) (1262 . 1264) (#("State" 0 5 (fontified nil)) . -1262) (1262 . 1267) (#("St" 0 2 (face font-lock-type-face fontified t)) . -1262) (undo-tree-id4725 . -2) (undo-tree-id4726 . -2) (undo-tree-id4727 . -1) (undo-tree-id4728 . -2) (undo-tree-id4729 . -2) (undo-tree-id4730 . -2) (undo-tree-id4731 . -2) 1264) nil (25944 50373 930145 0) 0 nil])
([nil nil ((#("keys" 0 4 (fontified t)) . -1502) (undo-tree-id4709 . -4) (undo-tree-id4710 . -4) (undo-tree-id4711 . -4) (undo-tree-id4712 . -4) (undo-tree-id4713 . -4) (undo-tree-id4714 . -4) (undo-tree-id4715 . -4) (undo-tree-id4716 . -4) (undo-tree-id4717 . -4) (undo-tree-id4718 . -4) (undo-tree-id4719 . -4) (undo-tree-id4720 . -4) (undo-tree-id4721 . -4) (undo-tree-id4722 . -4) (undo-tree-id4723 . -4) (undo-tree-id4724 . -4) 1506) nil (25944 50373 930133 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1501) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) 1502) nil (25944 50373 930086 0) 0 nil])
([nil nil ((#("keys" 0 4 (face font-lock-variable-name-face fontified t)) . -1489) (undo-tree-id4804 . -4) (undo-tree-id4805 . -4) (undo-tree-id4806 . -4) (undo-tree-id4807 . -4) (undo-tree-id4808 . -4) (undo-tree-id4809 . -4) (undo-tree-id4810 . -4) (undo-tree-id4811 . -4) (undo-tree-id4812 . -4) (undo-tree-id4813 . -4) (undo-tree-id4814 . -4) (undo-tree-id4815 . -4) (undo-tree-id4816 . -4) (undo-tree-id4817 . -4) (undo-tree-id4818 . -4) 1493 (t 25944 50373 946167 413000)) nil (25944 50398 574174 0) 0 nil])
([nil nil ((1489 . 1494)) nil (25944 50398 574157 0) 0 nil])
([nil nil ((#("keys" 0 4 (fontified t)) . -1521) (undo-tree-id4781 . -4) (undo-tree-id4782 . -4) (undo-tree-id4783 . -4) (undo-tree-id4784 . -4) (undo-tree-id4785 . -4) (undo-tree-id4786 . -4) (undo-tree-id4787 . -4) (undo-tree-id4788 . -4) (undo-tree-id4789 . -4) (undo-tree-id4790 . -4) (undo-tree-id4791 . -4) (undo-tree-id4792 . -4) (undo-tree-id4793 . -4) (undo-tree-id4794 . -4) (undo-tree-id4795 . -4) (undo-tree-id4796 . -4) (undo-tree-id4797 . -4) (undo-tree-id4798 . -4) (undo-tree-id4799 . -4) (undo-tree-id4800 . -4) (undo-tree-id4801 . -4) (undo-tree-id4802 . -4) (undo-tree-id4803 . -4) 1525) nil (25944 50398 574155 0) 0 nil])
([nil nil ((1521 . 1524)) nil (25944 50398 574132 0) 0 nil])
([nil nil ((1521 . 1526) (#("sta" 0 3 (fontified nil)) . 1521) (1521 . 1524) (#("state" 0 5 (fontified nil)) . -1521) (1521 . 1526) (#("sta" 0 3 (fontified t)) . -1521) (undo-tree-id4772 . -3) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -2) (undo-tree-id4776 . -2) (undo-tree-id4777 . -3) (undo-tree-id4778 . -3) (undo-tree-id4779 . -3) (undo-tree-id4780 . -3) 1524) nil (25944 50398 574130 0) 0 nil])
([nil nil ((1526 . 1528)) nil (25944 50398 574118 0) 0 nil])
([nil nil ((1527 . 1531) (#("k" 0 1 (fontified nil)) . 1527) (1527 . 1528) (#("keys" 0 4 (fontified nil)) . -1527) (1527 . 1531) (#("k" 0 1 (fontified t)) . -1527) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) 1528) nil (25944 50398 574113 0) 0 nil])
([nil nil ((1591 . 1593) (t 25944 50398 590025 564000)) nil (25944 50411 711683 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1591) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (#("u" 0 1 (fontified t)) . -1592) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) 1593) nil (25944 50411 711678 0) 0 nil])
([nil nil ((#("async " 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . -1179) (undo-tree-id4934 . -6) (undo-tree-id4935 . -6) (undo-tree-id4936 . -6) (undo-tree-id4937 . -6) (undo-tree-id4938 . -6) (undo-tree-id4939 . -6) (undo-tree-id4940 . -6) (undo-tree-id4941 . -6) (undo-tree-id4942 . -6) (undo-tree-id4943 . -6) (undo-tree-id4944 . -6) (undo-tree-id4945 . -6) (undo-tree-id4946 . -6) (undo-tree-id4947 . -6) (undo-tree-id4948 . -6) (undo-tree-id4949 . -6) (undo-tree-id4950 . -6) (undo-tree-id4951 . -6) (undo-tree-id4952 . -6) (undo-tree-id4953 . -6) 1185 (t 25944 50411 727535 757000)) nil (25944 50438 233362 0) 0 nil])
([nil nil ((#("await" 0 5 (face font-lock-keyword-face fontified t)) . -1504) (undo-tree-id4920 . -5) (undo-tree-id4921 . -5) (undo-tree-id4922 . -5) (undo-tree-id4923 . -5) (undo-tree-id4924 . -5) (undo-tree-id4925 . -5) (undo-tree-id4926 . -5) (undo-tree-id4927 . -5) (undo-tree-id4928 . -5) (undo-tree-id4929 . -5) (undo-tree-id4930 . -5) (undo-tree-id4931 . -5) (undo-tree-id4932 . -5) (undo-tree-id4933 . -5) 1509) nil (25944 50438 233864 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1503) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) 1504) nil (25944 50441 852315 0) 0 nil] [nil nil ((#("// Learn more about Tauri commands at https://tauri.app/v1/guides/features/command
#[tauri::command]
fn upload_settings(
    payload: &str,
    state: tauri::State<'_, Arc<Mutex<State>>>,
) -> String {
    // let file = File::create(\"./results/keyboard.json\").expect(\"Failed to create \");
    // let mut f = BufWriter::new(file);
    // f.write_all(payload.as_bytes()).expect(\"unable to write
    let mut state = state.lock()." 0 3 (face font-lock-comment-delimiter-face fontified t) 3 83 (face font-lock-comment-face fontified t) 83 100 (face font-lock-preprocessor-face fontified t) 100 101 (fontified t) 101 103 (face font-lock-keyword-face fontified t) 103 104 (fontified t) 104 119 (face font-lock-function-name-face fontified t) 119 121 (fontified t) 121 125 (fontified t) 125 132 (face font-lock-variable-name-face fontified t) 132 134 (fontified t) 134 135 (face rust-ampersand-face fontified t) 135 138 (face font-lock-type-face fontified t) 138 140 (fontified t) 140 144 (fontified t) 144 149 (face font-lock-variable-name-face fontified t) 149 151 (fontified t) 151 156 (face font-lock-constant-face fontified t) 156 158 (fontified t) 158 163 (face font-lock-type-face fontified t) 163 165 (fontified t) 165 166 (face font-lock-variable-name-face fontified t) 166 168 (fontified t) 168 171 (face font-lock-type-face fontified t) 171 172 (fontified t) 172 177 (face font-lock-type-face fontified t) 177 178 (fontified t) 178 183 (face font-lock-type-face fontified t) 183 184 (fontified t) 184 185 (fontified t) 185 187 (fontified t) 187 188 (fontified t) 188 191 (fontified t) 191 192 (fontified t syntax-table (1)) 192 193 (fontified t) 193 199 (face font-lock-type-face fontified t) 199 202 (fontified t) 202 206 (fontified t) 206 209 (face font-lock-comment-delimiter-face fontified t) 209 212 (face font-lock-comment-face fontified t) 212 213 (face font-lock-comment-face fontified t) 213 217 (face font-lock-comment-face fontified t) 217 220 (face font-lock-comment-face fontified t) 220 224 (face font-lock-comment-face fontified t) 224 233 (face font-lock-comment-face fontified t) 233 258 (face font-lock-comment-face fontified t) 258 267 (face font-lock-comment-face fontified t) 267 286 (face font-lock-comment-face fontified t) 286 289 (face font-lock-comment-face fontified t) 289 293 (fontified t) 293 296 (face font-lock-comment-delimiter-face fontified t) 296 299 (face font-lock-comment-face fontified t) 299 300 (face font-lock-comment-face fontified t) 300 303 (face font-lock-comment-face fontified t) 303 304 (face font-lock-comment-face fontified t) 304 305 (face font-lock-comment-face fontified t) 305 308 (face font-lock-comment-face fontified t) 308 317 (face font-lock-comment-face fontified t) 317 330 (face font-lock-comment-face fontified t) 330 334 (fontified t) 334 337 (face font-lock-comment-delimiter-face fontified t) 337 376 (face font-lock-comment-face fontified t) 376 393 (face font-lock-comment-face fontified t) 393 397 (fontified t) 397 400 (face font-lock-keyword-face fontified t) 400 401 (fontified t) 401 404 (face font-lock-keyword-face fontified t) 404 405 (fontified t) 405 410 (face font-lock-variable-name-face fontified t) 410 413 (fontified t) 413 418 (fontified t) 418 419 (fontified t) 419 426 (fontified t)) . -1078) (undo-tree-id4837 . -392) (undo-tree-id4838 . -426) (undo-tree-id4839 . -426) (undo-tree-id4840 . -144) (undo-tree-id4841 . -202) (undo-tree-id4842 . -172) (undo-tree-id4843 . -211) (undo-tree-id4844 . -211) (undo-tree-id4845 . -211) (undo-tree-id4846 . -211) (undo-tree-id4847 . -211) (undo-tree-id4848 . -211) (undo-tree-id4849 . -211) (undo-tree-id4850 . -211) (undo-tree-id4851 . -211) (undo-tree-id4852 . -211) (undo-tree-id4853 . -211) (undo-tree-id4854 . -211) (undo-tree-id4855 . -211) (undo-tree-id4856 . -211) (undo-tree-id4857 . -211) (undo-tree-id4858 . -211) (undo-tree-id4859 . -211) (undo-tree-id4860 . -211) (undo-tree-id4861 . -211) (undo-tree-id4862 . -211) (undo-tree-id4863 . -211) (undo-tree-id4864 . -211) (undo-tree-id4865 . -211) (undo-tree-id4866 . -211) (undo-tree-id4867 . -211) (undo-tree-id4868 . -101) (undo-tree-id4869 . -101) (undo-tree-id4870 . -101) (undo-tree-id4871 . -101) (undo-tree-id4872 . -101) (undo-tree-id4873 . -101) (undo-tree-id4874 . -101) (undo-tree-id4875 . -101) (undo-tree-id4876 . -101) (undo-tree-id4877 . -101) (undo-tree-id4878 . -101) (undo-tree-id4879 . -101) (undo-tree-id4880 . -101) (undo-tree-id4881 . -101) (undo-tree-id4882 . -101) (undo-tree-id4883 . -101) (undo-tree-id4884 . -101) (undo-tree-id4885 . -101) (undo-tree-id4886 . -101) (undo-tree-id4887 . -101) (undo-tree-id4888 . -101) (undo-tree-id4889 . -101) (undo-tree-id4890 . -101) (undo-tree-id4891 . -101) (undo-tree-id4892 . -101) (undo-tree-id4893 . -101) (undo-tree-id4894 . -101) (undo-tree-id4895 . -101) (undo-tree-id4896 . -101) (undo-tree-id4897 . -101) (undo-tree-id4898 . -426) (undo-tree-id4899 . -426) (undo-tree-id4900 . -426) (undo-tree-id4901 . -426) (undo-tree-id4902 . -426) (undo-tree-id4903 . -426) (undo-tree-id4904 . -426) (undo-tree-id4905 . -426) (undo-tree-id4906 . -426) (undo-tree-id4907 . -426) (undo-tree-id4908 . -426) (undo-tree-id4909 . -426) (undo-tree-id4910 . -393) (undo-tree-id4911 . -426) (undo-tree-id4912 . -426) (undo-tree-id4913 . -426) (undo-tree-id4914 . -426) (undo-tree-id4915 . -426) (undo-tree-id4916 . -426) (undo-tree-id4917 . -426) (undo-tree-id4918 . -426) (undo-tree-id4919 . -426) 1504) ((1078 . 1504)) (25944 50438 233321 0) 0 nil])
([nil nil ((1503 . 1505) (t 25944 50441 868626 143000)) nil (25944 50451 28102 0) 0 nil])
nil
([nil nil ((1504 . 1509) (#("a" 0 1 (fontified nil)) . 1504) (1504 . 1505) (#("await" 0 5 (fontified nil)) . -1504) (1504 . 1509) (#("a" 0 1 (fontified t)) . -1504) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) 1505) nil (25944 50451 28098 0) 0 nil])
([nil nil ((1179 . 1185) (t 25944 50451 44981 782000)) nil (25944 50456 684035 0) 0 nil])
([nil nil ((#("String" 0 6 (face font-lock-type-face fontified t)) . -1277) (undo-tree-id5079 . -6) (undo-tree-id5080 . -6) (undo-tree-id5081 . -6) (undo-tree-id5082 . -6) (undo-tree-id5083 . -6) (undo-tree-id5084 . -6) (undo-tree-id5085 . -6) (undo-tree-id5086 . -6) (undo-tree-id5087 . -6) (undo-tree-id5088 . -6) (undo-tree-id5089 . -6) (undo-tree-id5090 . -6) (undo-tree-id5091 . -6) (undo-tree-id5092 . -6) 1283 (t 25944 50456 700900 85000)) nil (25944 50462 956138 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -1274) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (#(">" 0 1 (syntax-table (1) fontified t)) . -1275) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (#(" " 0 1 (fontified t)) . -1276) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) 1277) nil (25944 50462 956108 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1273) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) 1274 (t 25944 50462 972796 661000)) nil (25944 50464 381760 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1293 . 1294) (nil fontified nil 1273 . 1294) (1273 . 1294) (t 25944 50464 398430 555000)) nil (25944 50487 705636 0) 0 nil])
([nil nil ((#("Ok\")" 0 3 (face font-lock-string-face fontified t) 3 4 (fontified t)) . -1598) (undo-tree-id5371 . -4) (undo-tree-id5372 . -4) (undo-tree-id5373 . -4) (undo-tree-id5374 . -4) (undo-tree-id5375 . -4) (undo-tree-id5376 . -4) (undo-tree-id5377 . -4) (undo-tree-id5378 . -4) (undo-tree-id5379 . -4) (undo-tree-id5380 . -4) (undo-tree-id5381 . -4) (undo-tree-id5382 . -4) 1602 (t 25944 50487 722101 940000)) nil (25944 50504 336149 0) 0 nil])
([nil nil ((#("format!(\"" 0 7 (face rust-builtin-formatting-macro fontified t) 7 8 (fontified t) 8 9 (face font-lock-string-face fontified t)) . -1589) (undo-tree-id5352 . -9) (undo-tree-id5353 . -9) (undo-tree-id5354 . -9) (undo-tree-id5355 . -9) (undo-tree-id5356 . -9) (undo-tree-id5357 . -9) (undo-tree-id5358 . -9) (undo-tree-id5359 . -9) (undo-tree-id5360 . -9) (undo-tree-id5361 . -9) (undo-tree-id5362 . -9) (undo-tree-id5363 . -9) (undo-tree-id5364 . -9) (undo-tree-id5365 . -9) (undo-tree-id5366 . -9) (undo-tree-id5367 . -9) (undo-tree-id5368 . -9) (undo-tree-id5369 . -9) (undo-tree-id5370 . -9) 1598) nil (25944 50504 336134 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1584) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (#(" " 0 1 (fontified t)) . -1585) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (#(" " 0 1 (fontified t)) . -1586) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (#(" " 0 1 (fontified t)) . -1587) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (#(" " 0 1 (fontified t)) . -1588) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) 1589) nil (25944 50504 336104 0) 0 nil])
([nil nil ((#("unwrap()" 0 8 (fontified t)) . -1575) (undo-tree-id5515 . -8) (undo-tree-id5516 . -8) (undo-tree-id5517 . -8) (undo-tree-id5518 . -8) (undo-tree-id5519 . -8) (undo-tree-id5520 . -8) (undo-tree-id5521 . -8) (undo-tree-id5522 . -8) 1583 (t 25944 50504 353377 82000)) nil (25944 50533 257483 0) 0 nil])
([nil nil ((1575 . 1577)) nil (25944 50533 257474 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1583 1600 nil nil nil t #s(yas--exit 1601 nil))) #s(yas--exit 1601 nil) 128 nil #s(yas--field 1 1583 1600 nil nil nil t #s(yas--exit 1601 nil)) nil nil)) (1575 . 1586) (#("map_err(${1:op})$0" 0 18 (fontified nil)) . 1575) (1575 . 1593) (#("ma" 0 2 (fontified nil)) . 1575) (1575 . 1577) (#("map_err(â€¦)" 0 10 (fontified nil)) . -1575) (1575 . 1585) (#("ma" 0 2 (fontified t)) . -1575) (undo-tree-id5499 . -2) (undo-tree-id5500 . -2) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -2) (undo-tree-id5504 . -2) (undo-tree-id5505 . -2) (undo-tree-id5506 . -2) (undo-tree-id5507 . -2) (undo-tree-id5508 . -2) (undo-tree-id5509 . -2) (undo-tree-id5510 . -2) (undo-tree-id5511 . -2) (undo-tree-id5512 . -2) (undo-tree-id5513 . -2) (undo-tree-id5514 . -2) 1577) nil (25944 50533 257471 0) 0 nil])
([nil nil ((1584 . 1585) (#("op" 0 2 (fontified nil)) . 1584) (undo-tree-id5498 . -2) (1583 . 1584)) nil (25944 50533 257452 0) 0 nil])
([nil nil ((1584 . 1585)) nil (25944 50533 257450 0) 0 nil])
([nil nil ((1586 . 1591)) nil (25944 50533 257449 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1589 1600 #s(yas--snippet nil nil #s(yas--exit 1600 nil) 129 nil nil #s(yas--field 1 1583 1600 nil nil nil t #s(yas--exit 1601 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1600 nil) 129 nil nil #s(yas--field 1 1583 1600 nil nil nil t #s(yas--exit 1601 nil)) nil)) (1589 . 1600) (#("to_string()$0" 0 13 (fontified nil)) . 1589) (undo-tree-id5483 . -13) (1589 . 1602) (#("to" 0 2 (fontified nil)) . 1589) (undo-tree-id5484 . -2) (1589 . 1591) (#("to_string() (as ToString)" 0 25 (fontified nil)) . -1589) (undo-tree-id5485 . -25) (1589 . 1614) (#("to" 0 2 (fontified t)) . -1589) (undo-tree-id5486 . -2) (undo-tree-id5487 . -2) (undo-tree-id5488 . -2) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -2) (undo-tree-id5492 . -2) (undo-tree-id5493 . -2) (undo-tree-id5494 . -2) (undo-tree-id5495 . -2) (undo-tree-id5496 . -2) (undo-tree-id5497 . -2) 1591) nil (25944 50533 257446 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1575 1601 #s(yas--snippet nil (#s(yas--field 1 1583 1600 nil nil nil t #s(yas--exit 1601 nil))) #s(yas--exit 1601 nil) 128 nil #s(yas--field 1 1583 1600 nil nil nil t #s(yas--exit 1601 nil)) nil nil))) nil (25944 50533 257424 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1600) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) 1601) nil (25944 50533 257423 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1600) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) 1601) nil (25944 50533 257408 0) 0 nil])
([nil nil ((1600 . 1601)) nil (25944 50533 257305 0) 0 nil])
([nil nil ((#("string())" 0 9 (fontified t)) . -1592) (undo-tree-id6531 . -9) (undo-tree-id6532 . -9) (undo-tree-id6533 . -8) (undo-tree-id6534 . -8) (undo-tree-id6535 . -8) (undo-tree-id6536 . -8) (undo-tree-id6537 . -8) (undo-tree-id6538 . -8) (undo-tree-id6539 . -8) (undo-tree-id6540 . -8) (undo-tree-id6541 . -8) (undo-tree-id6542 . -8) (undo-tree-id6543 . -8) (undo-tree-id6544 . -8) (undo-tree-id6545 . -8) (undo-tree-id6546 . -8) (undo-tree-id6547 . -8) (undo-tree-id6548 . -8) (undo-tree-id6549 . -8) (undo-tree-id6550 . -8) (undo-tree-id6551 . -8) (undo-tree-id6552 . -8) (undo-tree-id6553 . -8) (undo-tree-id6554 . -8) (undo-tree-id6555 . -8) (undo-tree-id6556 . -8) (undo-tree-id6557 . -8) (undo-tree-id6558 . -8) (undo-tree-id6559 . -8) (undo-tree-id6560 . -8) (undo-tree-id6561 . -8) (undo-tree-id6562 . -8) (undo-tree-id6563 . -8) (undo-tree-id6564 . -8) (undo-tree-id6565 . -8) (undo-tree-id6566 . -8) (undo-tree-id6567 . -8) (undo-tree-id6568 . -8) (undo-tree-id6569 . -8) (undo-tree-id6570 . -8) (undo-tree-id6571 . -8) (undo-tree-id6572 . -8) (undo-tree-id6573 . -8) (undo-tree-id6574 . -8) (undo-tree-id6575 . -8) (undo-tree-id6576 . -8) (undo-tree-id6577 . -8) (undo-tree-id6578 . -8) (undo-tree-id6579 . -8) (undo-tree-id6580 . -8) (undo-tree-id6581 . -8) (undo-tree-id6582 . -8) (undo-tree-id6583 . -8) (undo-tree-id6584 . -8) (undo-tree-id6585 . -8) (undo-tree-id6586 . -8) (undo-tree-id6587 . -8) (undo-tree-id6588 . -8) (undo-tree-id6589 . -8) (undo-tree-id6590 . -8) (undo-tree-id6591 . -8) (undo-tree-id6592 . -8) (undo-tree-id6593 . -8) (undo-tree-id6594 . -8) (undo-tree-id6595 . -8) (undo-tree-id6596 . -8) (undo-tree-id6597 . -8) (undo-tree-id6598 . -8) (undo-tree-id6599 . -8) (undo-tree-id6600 . -8) (undo-tree-id6601 . -8) (undo-tree-id6602 . -8) (undo-tree-id6603 . -8) (undo-tree-id6604 . -8) (undo-tree-id6605 . -8) (undo-tree-id6606 . -8) (undo-tree-id6607 . -8) (undo-tree-id6608 . -8) (undo-tree-id6609 . -8) (undo-tree-id6610 . -8) (undo-tree-id6611 . -8) (undo-tree-id6612 . -8) (undo-tree-id6613 . -8) (undo-tree-id6614 . -8) (undo-tree-id6615 . -8) (undo-tree-id6616 . -8) (undo-tree-id6617 . -8) (undo-tree-id6618 . -8) (undo-tree-id6619 . -8) (undo-tree-id6620 . -8) (undo-tree-id6621 . -8) (undo-tree-id6622 . -8) (undo-tree-id6623 . -8) (undo-tree-id6624 . -8) (undo-tree-id6625 . -8) (undo-tree-id6626 . -8) (undo-tree-id6627 . -8) (undo-tree-id6628 . -9) (undo-tree-id6629 . -9) (undo-tree-id6630 . -9) (undo-tree-id6631 . -9) (undo-tree-id6632 . -9) (undo-tree-id6633 . -9) (undo-tree-id6634 . -9) (undo-tree-id6635 . -9) (undo-tree-id6636 . -9) (undo-tree-id6637 . -9) (undo-tree-id6638 . -9) (undo-tree-id6639 . -9) (undo-tree-id6640 . -9) (undo-tree-id6641 . -9) (undo-tree-id6642 . -9) (undo-tree-id6643 . -9) (undo-tree-id6644 . -9) (undo-tree-id6645 . -9) (undo-tree-id6646 . -9) (undo-tree-id6647 . -9) (undo-tree-id6648 . -9) (undo-tree-id6649 . -9) (undo-tree-id6650 . -9) (undo-tree-id6651 . -9) (undo-tree-id6652 . -9) (undo-tree-id6653 . -9) (undo-tree-id6654 . -9) (undo-tree-id6655 . -9) (undo-tree-id6656 . -9) (undo-tree-id6657 . -9) (undo-tree-id6658 . -9) (undo-tree-id6659 . -9) (undo-tree-id6660 . -9) (undo-tree-id6661 . -9) (undo-tree-id6662 . -9) (undo-tree-id6663 . -9) (undo-tree-id6664 . -9) (undo-tree-id6665 . -9) (undo-tree-id6666 . -9) (undo-tree-id6667 . -9) (undo-tree-id6668 . -9) (undo-tree-id6669 . -9) (undo-tree-id6670 . -9) (undo-tree-id6671 . -9) (undo-tree-id6672 . -9) (undo-tree-id6673 . -9) (undo-tree-id6674 . -9) (undo-tree-id6675 . -9) (undo-tree-id6676 . -9) (undo-tree-id6677 . -9) (undo-tree-id6678 . -9) (undo-tree-id6679 . -9) (undo-tree-id6680 . -9) (undo-tree-id6681 . -9) (undo-tree-id6682 . -9) (undo-tree-id6683 . -9) (undo-tree-id6684 . -9) (undo-tree-id6685 . -9) (undo-tree-id6686 . -9) (undo-tree-id6687 . -9) (undo-tree-id6688 . -9) 1601 (t 25944 50533 274514 667000)) nil (25944 50558 221039 0) 0 nil])
([nil nil ((#("to_" 0 3 (fontified t)) . -1589) (undo-tree-id6365 . -3) (undo-tree-id6366 . -3) (undo-tree-id6367 . -3) (undo-tree-id6368 . -3) (undo-tree-id6369 . -3) (undo-tree-id6370 . -3) (undo-tree-id6371 . -3) (undo-tree-id6372 . -3) (undo-tree-id6373 . -3) (undo-tree-id6374 . -3) (undo-tree-id6375 . -3) (undo-tree-id6376 . -3) (undo-tree-id6377 . -3) (undo-tree-id6378 . -3) (undo-tree-id6379 . -3) (undo-tree-id6380 . -3) (undo-tree-id6381 . -3) (undo-tree-id6382 . -3) (undo-tree-id6383 . -3) (undo-tree-id6384 . -3) (undo-tree-id6385 . -3) (undo-tree-id6386 . -3) (undo-tree-id6387 . -3) (undo-tree-id6388 . -3) (undo-tree-id6389 . -3) (undo-tree-id6390 . -3) (undo-tree-id6391 . -3) (undo-tree-id6392 . -3) (undo-tree-id6393 . -3) (undo-tree-id6394 . -3) (undo-tree-id6395 . -3) (undo-tree-id6396 . -3) (undo-tree-id6397 . -3) (undo-tree-id6398 . -3) (undo-tree-id6399 . -3) (undo-tree-id6400 . -3) (undo-tree-id6401 . -3) (undo-tree-id6402 . -3) (undo-tree-id6403 . -3) (undo-tree-id6404 . -3) (undo-tree-id6405 . -3) (undo-tree-id6406 . -3) (undo-tree-id6407 . -3) (undo-tree-id6408 . -3) (undo-tree-id6409 . -3) (undo-tree-id6410 . -3) (undo-tree-id6411 . -3) (undo-tree-id6412 . -3) (undo-tree-id6413 . -3) (undo-tree-id6414 . -3) (undo-tree-id6415 . -3) (undo-tree-id6416 . -3) (undo-tree-id6417 . -3) (undo-tree-id6418 . -3) (undo-tree-id6419 . -3) (undo-tree-id6420 . -3) (undo-tree-id6421 . -3) (undo-tree-id6422 . -3) (undo-tree-id6423 . -3) (undo-tree-id6424 . -3) (undo-tree-id6425 . -3) (undo-tree-id6426 . -3) (undo-tree-id6427 . -3) (undo-tree-id6428 . -3) (undo-tree-id6429 . -3) (undo-tree-id6430 . -3) (undo-tree-id6431 . -3) (undo-tree-id6432 . -3) (undo-tree-id6433 . -3) (undo-tree-id6434 . -3) (undo-tree-id6435 . -3) (undo-tree-id6436 . -3) (undo-tree-id6437 . -3) (undo-tree-id6438 . -3) (undo-tree-id6439 . -3) (undo-tree-id6440 . -3) (undo-tree-id6441 . -3) (undo-tree-id6442 . -3) (undo-tree-id6443 . -3) (undo-tree-id6444 . -3) (undo-tree-id6445 . -3) (undo-tree-id6446 . -3) (undo-tree-id6447 . -3) (undo-tree-id6448 . -3) (undo-tree-id6449 . -3) (undo-tree-id6450 . -3) (undo-tree-id6451 . -3) (undo-tree-id6452 . -3) (undo-tree-id6453 . -3) (undo-tree-id6454 . -3) (undo-tree-id6455 . -3) (undo-tree-id6456 . -3) (undo-tree-id6457 . -3) (undo-tree-id6458 . -3) (undo-tree-id6459 . -3) (undo-tree-id6460 . -3) (undo-tree-id6461 . -3) (undo-tree-id6462 . -3) (undo-tree-id6463 . -3) (undo-tree-id6464 . -3) (undo-tree-id6465 . -3) (undo-tree-id6466 . -3) (undo-tree-id6467 . -3) (undo-tree-id6468 . -3) (undo-tree-id6469 . -3) (undo-tree-id6470 . -3) (undo-tree-id6471 . -3) (undo-tree-id6472 . -3) (undo-tree-id6473 . -3) (undo-tree-id6474 . -3) (undo-tree-id6475 . -3) (undo-tree-id6476 . -3) (undo-tree-id6477 . -3) (undo-tree-id6478 . -3) (undo-tree-id6479 . -3) (undo-tree-id6480 . -3) (undo-tree-id6481 . -3) (undo-tree-id6482 . -3) (undo-tree-id6483 . -3) (undo-tree-id6484 . -3) (undo-tree-id6485 . -3) (undo-tree-id6486 . -3) (undo-tree-id6487 . -3) (undo-tree-id6488 . -3) (undo-tree-id6489 . -3) (undo-tree-id6490 . -3) (undo-tree-id6491 . -3) (undo-tree-id6492 . -3) (undo-tree-id6493 . -3) (undo-tree-id6494 . -3) (undo-tree-id6495 . -3) (undo-tree-id6496 . -3) (undo-tree-id6497 . -3) (undo-tree-id6498 . -3) (undo-tree-id6499 . -3) (undo-tree-id6500 . -3) (undo-tree-id6501 . -3) (undo-tree-id6502 . -3) (undo-tree-id6503 . -3) (undo-tree-id6504 . -3) (undo-tree-id6505 . -3) (undo-tree-id6506 . -3) (undo-tree-id6507 . -3) (undo-tree-id6508 . -3) (undo-tree-id6509 . -3) (undo-tree-id6510 . -3) (undo-tree-id6511 . -3) (undo-tree-id6512 . -3) (undo-tree-id6513 . -3) (undo-tree-id6514 . -3) (undo-tree-id6515 . -3) (undo-tree-id6516 . -3) (undo-tree-id6517 . -3) (undo-tree-id6518 . -3) (undo-tree-id6519 . -3) (undo-tree-id6520 . -3) (undo-tree-id6521 . -3) (undo-tree-id6522 . -3) (undo-tree-id6523 . -3) (undo-tree-id6524 . -3) (undo-tree-id6525 . -3) (undo-tree-id6526 . -3) (undo-tree-id6527 . -3) (undo-tree-id6528 . -3) (undo-tree-id6529 . -3) (undo-tree-id6530 . -3) 1592) nil (25944 50558 220883 0) 0 nil])
([nil nil ((#("e." 0 2 (fontified t)) . -1587) (undo-tree-id6184 . -2) (undo-tree-id6185 . -2) (undo-tree-id6186 . -2) (undo-tree-id6187 . -2) (undo-tree-id6188 . -2) (undo-tree-id6189 . -2) (undo-tree-id6190 . -2) (undo-tree-id6191 . -2) (undo-tree-id6192 . -2) (undo-tree-id6193 . -2) (undo-tree-id6194 . -2) (undo-tree-id6195 . -2) (undo-tree-id6196 . -2) (undo-tree-id6197 . -2) (undo-tree-id6198 . -2) (undo-tree-id6199 . -2) (undo-tree-id6200 . -2) (undo-tree-id6201 . -2) (undo-tree-id6202 . -2) (undo-tree-id6203 . -2) (undo-tree-id6204 . -2) (undo-tree-id6205 . -2) (undo-tree-id6206 . -2) (undo-tree-id6207 . -2) (undo-tree-id6208 . -2) (undo-tree-id6209 . -2) (undo-tree-id6210 . -2) (undo-tree-id6211 . -2) (undo-tree-id6212 . -2) (undo-tree-id6213 . -2) (undo-tree-id6214 . -2) (undo-tree-id6215 . -2) (undo-tree-id6216 . -2) (undo-tree-id6217 . -2) (undo-tree-id6218 . -2) (undo-tree-id6219 . -2) (undo-tree-id6220 . -2) (undo-tree-id6221 . -2) (undo-tree-id6222 . -2) (undo-tree-id6223 . -2) (undo-tree-id6224 . -2) (undo-tree-id6225 . -2) (undo-tree-id6226 . -2) (undo-tree-id6227 . -2) (undo-tree-id6228 . -2) (undo-tree-id6229 . -2) (undo-tree-id6230 . -2) (undo-tree-id6231 . -2) (undo-tree-id6232 . -2) (undo-tree-id6233 . -2) (undo-tree-id6234 . -2) (undo-tree-id6235 . -2) (undo-tree-id6236 . -2) (undo-tree-id6237 . -2) (undo-tree-id6238 . -2) (undo-tree-id6239 . -2) (undo-tree-id6240 . -2) (undo-tree-id6241 . -2) (undo-tree-id6242 . -2) (undo-tree-id6243 . -2) (undo-tree-id6244 . -2) (undo-tree-id6245 . -2) (undo-tree-id6246 . -2) (undo-tree-id6247 . -2) (undo-tree-id6248 . -2) (undo-tree-id6249 . -2) (undo-tree-id6250 . -2) (undo-tree-id6251 . -2) (undo-tree-id6252 . -2) (undo-tree-id6253 . -2) (undo-tree-id6254 . -2) (undo-tree-id6255 . -2) (undo-tree-id6256 . -2) (undo-tree-id6257 . -2) (undo-tree-id6258 . -2) (undo-tree-id6259 . -2) (undo-tree-id6260 . -2) (undo-tree-id6261 . -2) (undo-tree-id6262 . -2) (undo-tree-id6263 . -2) (undo-tree-id6264 . -2) (undo-tree-id6265 . -2) (undo-tree-id6266 . -2) (undo-tree-id6267 . -2) (undo-tree-id6268 . -2) (undo-tree-id6269 . -2) (undo-tree-id6270 . -2) (undo-tree-id6271 . -2) (undo-tree-id6272 . -2) (undo-tree-id6273 . -2) (undo-tree-id6274 . -2) (undo-tree-id6275 . -2) (undo-tree-id6276 . -2) (undo-tree-id6277 . -2) (undo-tree-id6278 . -2) (undo-tree-id6279 . -2) (undo-tree-id6280 . -2) (undo-tree-id6281 . -2) (undo-tree-id6282 . -2) (undo-tree-id6283 . -2) (undo-tree-id6284 . -2) (undo-tree-id6285 . -2) (undo-tree-id6286 . -2) (undo-tree-id6287 . -2) (undo-tree-id6288 . -2) (undo-tree-id6289 . -2) (undo-tree-id6290 . -2) (undo-tree-id6291 . -2) (undo-tree-id6292 . -2) (undo-tree-id6293 . -2) (undo-tree-id6294 . -2) (undo-tree-id6295 . -2) (undo-tree-id6296 . -2) (undo-tree-id6297 . -2) (undo-tree-id6298 . -2) (undo-tree-id6299 . -2) (undo-tree-id6300 . -2) (undo-tree-id6301 . -2) (undo-tree-id6302 . -2) (undo-tree-id6303 . -2) (undo-tree-id6304 . -2) (undo-tree-id6305 . -2) (undo-tree-id6306 . -2) (undo-tree-id6307 . -2) (undo-tree-id6308 . -2) (undo-tree-id6309 . -2) (undo-tree-id6310 . -2) (undo-tree-id6311 . -2) (undo-tree-id6312 . -2) (undo-tree-id6313 . -2) (undo-tree-id6314 . -2) (undo-tree-id6315 . -2) (undo-tree-id6316 . -2) (undo-tree-id6317 . -2) (undo-tree-id6318 . -2) (undo-tree-id6319 . -2) (undo-tree-id6320 . -2) (undo-tree-id6321 . -2) (undo-tree-id6322 . -2) (undo-tree-id6323 . -2) (undo-tree-id6324 . -2) (undo-tree-id6325 . -2) (undo-tree-id6326 . -2) (undo-tree-id6327 . -2) (undo-tree-id6328 . -2) (undo-tree-id6329 . -2) (undo-tree-id6330 . -2) (undo-tree-id6331 . -2) (undo-tree-id6332 . -2) (undo-tree-id6333 . -2) (undo-tree-id6334 . -2) (undo-tree-id6335 . -2) (undo-tree-id6336 . -2) (undo-tree-id6337 . -2) (undo-tree-id6338 . -2) (undo-tree-id6339 . -2) (undo-tree-id6340 . -2) (undo-tree-id6341 . -2) (undo-tree-id6342 . -2) (undo-tree-id6343 . -2) (undo-tree-id6344 . -2) (undo-tree-id6345 . -2) (undo-tree-id6346 . -2) (undo-tree-id6347 . -2) (undo-tree-id6348 . -2) (undo-tree-id6349 . -2) (undo-tree-id6350 . -2) (undo-tree-id6351 . -2) (undo-tree-id6352 . -2) (undo-tree-id6353 . -2) (undo-tree-id6354 . -2) (undo-tree-id6355 . -2) (undo-tree-id6356 . -2) (undo-tree-id6357 . -2) (undo-tree-id6358 . -2) (undo-tree-id6359 . -2) (undo-tree-id6360 . -2) (undo-tree-id6361 . -2) (undo-tree-id6362 . -2) (undo-tree-id6363 . -2) (undo-tree-id6364 . -2) 1589) nil (25944 50558 220668 0) 0 nil])
([nil nil ((#("e| " 0 3 (fontified t)) . -1584) (undo-tree-id5997 . -3) (undo-tree-id5998 . -3) (undo-tree-id5999 . -3) (undo-tree-id6000 . -3) (undo-tree-id6001 . -3) (undo-tree-id6002 . -3) (undo-tree-id6003 . -3) (undo-tree-id6004 . -3) (undo-tree-id6005 . -3) (undo-tree-id6006 . -3) (undo-tree-id6007 . -3) (undo-tree-id6008 . -3) (undo-tree-id6009 . -3) (undo-tree-id6010 . -3) (undo-tree-id6011 . -3) (undo-tree-id6012 . -3) (undo-tree-id6013 . -3) (undo-tree-id6014 . -3) (undo-tree-id6015 . -3) (undo-tree-id6016 . -3) (undo-tree-id6017 . -3) (undo-tree-id6018 . -3) (undo-tree-id6019 . -3) (undo-tree-id6020 . -3) (undo-tree-id6021 . -3) (undo-tree-id6022 . -3) (undo-tree-id6023 . -3) (undo-tree-id6024 . -3) (undo-tree-id6025 . -3) (undo-tree-id6026 . -3) (undo-tree-id6027 . -3) (undo-tree-id6028 . -3) (undo-tree-id6029 . -3) (undo-tree-id6030 . -3) (undo-tree-id6031 . -3) (undo-tree-id6032 . -3) (undo-tree-id6033 . -3) (undo-tree-id6034 . -3) (undo-tree-id6035 . -3) (undo-tree-id6036 . -3) (undo-tree-id6037 . -3) (undo-tree-id6038 . -3) (undo-tree-id6039 . -3) (undo-tree-id6040 . -3) (undo-tree-id6041 . -3) (undo-tree-id6042 . -3) (undo-tree-id6043 . -3) (undo-tree-id6044 . -3) (undo-tree-id6045 . -3) (undo-tree-id6046 . -3) (undo-tree-id6047 . -3) (undo-tree-id6048 . -3) (undo-tree-id6049 . -3) (undo-tree-id6050 . -3) (undo-tree-id6051 . -3) (undo-tree-id6052 . -3) (undo-tree-id6053 . -3) (undo-tree-id6054 . -3) (undo-tree-id6055 . -3) (undo-tree-id6056 . -3) (undo-tree-id6057 . -3) (undo-tree-id6058 . -3) (undo-tree-id6059 . -3) (undo-tree-id6060 . -3) (undo-tree-id6061 . -3) (undo-tree-id6062 . -3) (undo-tree-id6063 . -3) (undo-tree-id6064 . -3) (undo-tree-id6065 . -3) (undo-tree-id6066 . -3) (undo-tree-id6067 . -3) (undo-tree-id6068 . -3) (undo-tree-id6069 . -3) (undo-tree-id6070 . -3) (undo-tree-id6071 . -3) (undo-tree-id6072 . -3) (undo-tree-id6073 . -3) (undo-tree-id6074 . -3) (undo-tree-id6075 . -3) (undo-tree-id6076 . -3) (undo-tree-id6077 . -3) (undo-tree-id6078 . -3) (undo-tree-id6079 . -3) (undo-tree-id6080 . -3) (undo-tree-id6081 . -3) (undo-tree-id6082 . -3) (undo-tree-id6083 . -3) (undo-tree-id6084 . -3) (undo-tree-id6085 . -3) (undo-tree-id6086 . -3) (undo-tree-id6087 . -3) (undo-tree-id6088 . -3) (undo-tree-id6089 . -3) (undo-tree-id6090 . -3) (undo-tree-id6091 . -3) (undo-tree-id6092 . -3) (undo-tree-id6093 . -3) (undo-tree-id6094 . -3) (undo-tree-id6095 . -3) (undo-tree-id6096 . -3) (undo-tree-id6097 . -3) (undo-tree-id6098 . -3) (undo-tree-id6099 . -3) (undo-tree-id6100 . -3) (undo-tree-id6101 . -3) (undo-tree-id6102 . -3) (undo-tree-id6103 . -3) (undo-tree-id6104 . -3) (undo-tree-id6105 . -3) (undo-tree-id6106 . -3) (undo-tree-id6107 . -3) (undo-tree-id6108 . -3) (undo-tree-id6109 . -3) (undo-tree-id6110 . -3) (undo-tree-id6111 . -3) (undo-tree-id6112 . -3) (undo-tree-id6113 . -3) (undo-tree-id6114 . -3) (undo-tree-id6115 . -3) (undo-tree-id6116 . -3) (undo-tree-id6117 . -3) (undo-tree-id6118 . -3) (undo-tree-id6119 . -3) (undo-tree-id6120 . -3) (undo-tree-id6121 . -3) (undo-tree-id6122 . -3) (undo-tree-id6123 . -3) (undo-tree-id6124 . -3) (undo-tree-id6125 . -3) (undo-tree-id6126 . -3) (undo-tree-id6127 . -3) (undo-tree-id6128 . -3) (undo-tree-id6129 . -3) (undo-tree-id6130 . -3) (undo-tree-id6131 . -3) (undo-tree-id6132 . -3) (undo-tree-id6133 . -3) (undo-tree-id6134 . -3) (undo-tree-id6135 . -3) (undo-tree-id6136 . -3) (undo-tree-id6137 . -3) (undo-tree-id6138 . -3) (undo-tree-id6139 . -3) (undo-tree-id6140 . -3) (undo-tree-id6141 . -3) (undo-tree-id6142 . -3) (undo-tree-id6143 . -3) (undo-tree-id6144 . -3) (undo-tree-id6145 . -3) (undo-tree-id6146 . -3) (undo-tree-id6147 . -3) (undo-tree-id6148 . -3) (undo-tree-id6149 . -3) (undo-tree-id6150 . -3) (undo-tree-id6151 . -3) (undo-tree-id6152 . -3) (undo-tree-id6153 . -3) (undo-tree-id6154 . -3) (undo-tree-id6155 . -3) (undo-tree-id6156 . -3) (undo-tree-id6157 . -3) (undo-tree-id6158 . -3) (undo-tree-id6159 . -3) (undo-tree-id6160 . -3) (undo-tree-id6161 . -3) (undo-tree-id6162 . -3) (undo-tree-id6163 . -3) (undo-tree-id6164 . -3) (undo-tree-id6165 . -3) (undo-tree-id6166 . -3) (undo-tree-id6167 . -3) (undo-tree-id6168 . -3) (undo-tree-id6169 . -3) (undo-tree-id6170 . -3) (undo-tree-id6171 . -3) (undo-tree-id6172 . -3) (undo-tree-id6173 . -3) (undo-tree-id6174 . -3) (undo-tree-id6175 . -3) (undo-tree-id6176 . -3) (undo-tree-id6177 . -3) (undo-tree-id6178 . -3) (undo-tree-id6179 . -3) (undo-tree-id6180 . -3) (undo-tree-id6181 . -3) (undo-tree-id6182 . -3) (undo-tree-id6183 . -3) 1587) nil (25944 50558 220484 0) 0 nil])
([nil nil ((#("err(|" 0 5 (fontified t)) . -1579) (undo-tree-id5803 . -5) (undo-tree-id5804 . -5) (undo-tree-id5805 . -5) (undo-tree-id5806 . -5) (undo-tree-id5807 . -5) (undo-tree-id5808 . -5) (undo-tree-id5809 . -5) (undo-tree-id5810 . -5) (undo-tree-id5811 . -5) (undo-tree-id5812 . -5) (undo-tree-id5813 . -5) (undo-tree-id5814 . -5) (undo-tree-id5815 . -5) (undo-tree-id5816 . -5) (undo-tree-id5817 . -5) (undo-tree-id5818 . -5) (undo-tree-id5819 . -5) (undo-tree-id5820 . -5) (undo-tree-id5821 . -5) (undo-tree-id5822 . -5) (undo-tree-id5823 . -5) (undo-tree-id5824 . -5) (undo-tree-id5825 . -5) (undo-tree-id5826 . -5) (undo-tree-id5827 . -5) (undo-tree-id5828 . -5) (undo-tree-id5829 . -5) (undo-tree-id5830 . -5) (undo-tree-id5831 . -5) (undo-tree-id5832 . -5) (undo-tree-id5833 . -5) (undo-tree-id5834 . -5) (undo-tree-id5835 . -5) (undo-tree-id5836 . -5) (undo-tree-id5837 . -5) (undo-tree-id5838 . -5) (undo-tree-id5839 . -5) (undo-tree-id5840 . -5) (undo-tree-id5841 . -5) (undo-tree-id5842 . -5) (undo-tree-id5843 . -5) (undo-tree-id5844 . -5) (undo-tree-id5845 . -5) (undo-tree-id5846 . -5) (undo-tree-id5847 . -5) (undo-tree-id5848 . -5) (undo-tree-id5849 . -5) (undo-tree-id5850 . -5) (undo-tree-id5851 . -5) (undo-tree-id5852 . -5) (undo-tree-id5853 . -5) (undo-tree-id5854 . -5) (undo-tree-id5855 . -5) (undo-tree-id5856 . -5) (undo-tree-id5857 . -5) (undo-tree-id5858 . -5) (undo-tree-id5859 . -5) (undo-tree-id5860 . -5) (undo-tree-id5861 . -5) (undo-tree-id5862 . -5) (undo-tree-id5863 . -5) (undo-tree-id5864 . -5) (undo-tree-id5865 . -5) (undo-tree-id5866 . -5) (undo-tree-id5867 . -5) (undo-tree-id5868 . -5) (undo-tree-id5869 . -5) (undo-tree-id5870 . -5) (undo-tree-id5871 . -5) (undo-tree-id5872 . -5) (undo-tree-id5873 . -5) (undo-tree-id5874 . -5) (undo-tree-id5875 . -5) (undo-tree-id5876 . -5) (undo-tree-id5877 . -5) (undo-tree-id5878 . -5) (undo-tree-id5879 . -5) (undo-tree-id5880 . -5) (undo-tree-id5881 . -5) (undo-tree-id5882 . -5) (undo-tree-id5883 . -4) (undo-tree-id5884 . -5) (undo-tree-id5885 . -5) (undo-tree-id5886 . -5) (undo-tree-id5887 . -5) (undo-tree-id5888 . -5) (undo-tree-id5889 . -5) (undo-tree-id5890 . -5) (undo-tree-id5891 . -5) (undo-tree-id5892 . -5) (undo-tree-id5893 . -5) (undo-tree-id5894 . -5) (undo-tree-id5895 . -5) (undo-tree-id5896 . -5) (undo-tree-id5897 . -5) (undo-tree-id5898 . -5) (undo-tree-id5899 . -5) (undo-tree-id5900 . -5) (undo-tree-id5901 . -5) (undo-tree-id5902 . -5) (undo-tree-id5903 . -5) (undo-tree-id5904 . -5) (undo-tree-id5905 . -5) (undo-tree-id5906 . -5) (undo-tree-id5907 . -5) (undo-tree-id5908 . -5) (undo-tree-id5909 . -5) (undo-tree-id5910 . -5) (undo-tree-id5911 . -5) (undo-tree-id5912 . -5) (undo-tree-id5913 . -5) (undo-tree-id5914 . -5) (undo-tree-id5915 . -5) (undo-tree-id5916 . -5) (undo-tree-id5917 . -5) (undo-tree-id5918 . -5) (undo-tree-id5919 . -5) (undo-tree-id5920 . -5) (undo-tree-id5921 . -5) (undo-tree-id5922 . -5) (undo-tree-id5923 . -5) (undo-tree-id5924 . -5) (undo-tree-id5925 . -5) (undo-tree-id5926 . -5) (undo-tree-id5927 . -5) (undo-tree-id5928 . -5) (undo-tree-id5929 . -5) (undo-tree-id5930 . -5) (undo-tree-id5931 . -5) (undo-tree-id5932 . -5) (undo-tree-id5933 . -5) (undo-tree-id5934 . -5) (undo-tree-id5935 . -5) (undo-tree-id5936 . -5) (undo-tree-id5937 . -5) (undo-tree-id5938 . -5) (undo-tree-id5939 . -5) (undo-tree-id5940 . -5) (undo-tree-id5941 . -5) (undo-tree-id5942 . -5) (undo-tree-id5943 . -5) (undo-tree-id5944 . -5) (undo-tree-id5945 . -5) (undo-tree-id5946 . -5) (undo-tree-id5947 . -5) (undo-tree-id5948 . -5) (undo-tree-id5949 . -5) (undo-tree-id5950 . -5) (undo-tree-id5951 . -5) (undo-tree-id5952 . -5) (undo-tree-id5953 . -5) (undo-tree-id5954 . -5) (undo-tree-id5955 . -5) (undo-tree-id5956 . -5) (undo-tree-id5957 . -5) (undo-tree-id5958 . -5) (undo-tree-id5959 . -5) (undo-tree-id5960 . -5) (undo-tree-id5961 . -5) (undo-tree-id5962 . -5) (undo-tree-id5963 . -5) (undo-tree-id5964 . -5) (undo-tree-id5965 . -5) (undo-tree-id5966 . -5) (undo-tree-id5967 . -5) (undo-tree-id5968 . -5) (undo-tree-id5969 . -5) (undo-tree-id5970 . -5) (undo-tree-id5971 . -5) (undo-tree-id5972 . -5) (undo-tree-id5973 . -5) (undo-tree-id5974 . -5) (undo-tree-id5975 . -5) (undo-tree-id5976 . -5) (undo-tree-id5977 . -5) (undo-tree-id5978 . -5) (undo-tree-id5979 . -5) (undo-tree-id5980 . -5) (undo-tree-id5981 . -5) (undo-tree-id5982 . -5) (undo-tree-id5983 . -5) (undo-tree-id5984 . -5) (undo-tree-id5985 . -5) (undo-tree-id5986 . -5) (undo-tree-id5987 . -5) (undo-tree-id5988 . -5) (undo-tree-id5989 . -5) (undo-tree-id5990 . -5) (undo-tree-id5991 . -5) (undo-tree-id5992 . -5) (undo-tree-id5993 . -5) (undo-tree-id5994 . -5) (undo-tree-id5995 . -5) (undo-tree-id5996 . -5) 1584) nil (25944 50558 220300 0) 0 nil])
([nil nil ((#("map_" 0 4 (fontified t)) . -1575) (undo-tree-id5599 . -4) (undo-tree-id5600 . -4) (undo-tree-id5601 . -4) (undo-tree-id5602 . -4) (undo-tree-id5603 . -4) (undo-tree-id5604 . -4) (undo-tree-id5605 . -4) (undo-tree-id5606 . -4) (undo-tree-id5607 . -4) (undo-tree-id5608 . -4) (undo-tree-id5609 . -4) (undo-tree-id5610 . -4) (undo-tree-id5611 . -4) (undo-tree-id5612 . -4) (undo-tree-id5613 . -4) (undo-tree-id5614 . -4) (undo-tree-id5615 . -4) (undo-tree-id5616 . -4) (undo-tree-id5617 . -4) (undo-tree-id5618 . -4) (undo-tree-id5619 . -4) (undo-tree-id5620 . -4) (undo-tree-id5621 . -4) (undo-tree-id5622 . -4) (undo-tree-id5623 . -4) (undo-tree-id5624 . -4) (undo-tree-id5625 . -4) (undo-tree-id5626 . -4) (undo-tree-id5627 . -4) (undo-tree-id5628 . -4) (undo-tree-id5629 . -4) (undo-tree-id5630 . -4) (undo-tree-id5631 . -4) (undo-tree-id5632 . -4) (undo-tree-id5633 . -4) (undo-tree-id5634 . -4) (undo-tree-id5635 . -4) (undo-tree-id5636 . -4) (undo-tree-id5637 . -4) (undo-tree-id5638 . -4) (undo-tree-id5639 . -4) (undo-tree-id5640 . -4) (undo-tree-id5641 . -4) (undo-tree-id5642 . -4) (undo-tree-id5643 . -4) (undo-tree-id5644 . -4) (undo-tree-id5645 . -4) (undo-tree-id5646 . -4) (undo-tree-id5647 . -4) (undo-tree-id5648 . -4) (undo-tree-id5649 . -4) (undo-tree-id5650 . -4) (undo-tree-id5651 . -4) (undo-tree-id5652 . -4) (undo-tree-id5653 . -4) (undo-tree-id5654 . -4) (undo-tree-id5655 . -4) (undo-tree-id5656 . -4) (undo-tree-id5657 . -4) (undo-tree-id5658 . -4) (undo-tree-id5659 . -4) (undo-tree-id5660 . -4) (undo-tree-id5661 . -4) (undo-tree-id5662 . -4) (undo-tree-id5663 . -4) (undo-tree-id5664 . -4) (undo-tree-id5665 . -4) (undo-tree-id5666 . -4) (undo-tree-id5667 . -4) (undo-tree-id5668 . -4) (undo-tree-id5669 . -4) (undo-tree-id5670 . -4) (undo-tree-id5671 . -4) (undo-tree-id5672 . -4) (undo-tree-id5673 . -4) (undo-tree-id5674 . -4) (undo-tree-id5675 . -4) (undo-tree-id5676 . -4) (undo-tree-id5677 . -4) (undo-tree-id5678 . -4) (undo-tree-id5679 . -4) (undo-tree-id5680 . -4) (undo-tree-id5681 . -4) (undo-tree-id5682 . -4) (undo-tree-id5683 . -4) (undo-tree-id5684 . -4) (undo-tree-id5685 . -4) (undo-tree-id5686 . -4) (undo-tree-id5687 . -4) (undo-tree-id5688 . -4) (undo-tree-id5689 . -4) (undo-tree-id5690 . -4) (undo-tree-id5691 . -4) (undo-tree-id5692 . -4) (undo-tree-id5693 . -4) (undo-tree-id5694 . -4) (undo-tree-id5695 . -4) (undo-tree-id5696 . -4) (undo-tree-id5697 . -4) (undo-tree-id5698 . -4) (undo-tree-id5699 . -4) (undo-tree-id5700 . -4) (undo-tree-id5701 . -4) (undo-tree-id5702 . -4) (undo-tree-id5703 . -4) (undo-tree-id5704 . -4) (undo-tree-id5705 . -4) (undo-tree-id5706 . -4) (undo-tree-id5707 . -4) (undo-tree-id5708 . -4) (undo-tree-id5709 . -4) (undo-tree-id5710 . -4) (undo-tree-id5711 . -4) (undo-tree-id5712 . -4) (undo-tree-id5713 . -4) (undo-tree-id5714 . -4) (undo-tree-id5715 . -4) (undo-tree-id5716 . -4) (undo-tree-id5717 . -4) (undo-tree-id5718 . -4) (undo-tree-id5719 . -4) (undo-tree-id5720 . -4) (undo-tree-id5721 . -4) (undo-tree-id5722 . -4) (undo-tree-id5723 . -4) (undo-tree-id5724 . -4) (undo-tree-id5725 . -4) (undo-tree-id5726 . -4) (undo-tree-id5727 . -4) (undo-tree-id5728 . -4) (undo-tree-id5729 . -4) (undo-tree-id5730 . -4) (undo-tree-id5731 . -4) (undo-tree-id5732 . -4) (undo-tree-id5733 . -4) (undo-tree-id5734 . -4) (undo-tree-id5735 . -4) (undo-tree-id5736 . -4) (undo-tree-id5737 . -4) (undo-tree-id5738 . -4) (undo-tree-id5739 . -4) (undo-tree-id5740 . -4) (undo-tree-id5741 . -4) (undo-tree-id5742 . -4) (undo-tree-id5743 . -4) (undo-tree-id5744 . -4) (undo-tree-id5745 . -4) (undo-tree-id5746 . -4) (undo-tree-id5747 . -4) (undo-tree-id5748 . -4) (undo-tree-id5749 . -4) (undo-tree-id5750 . -4) (undo-tree-id5751 . -4) (undo-tree-id5752 . -4) (undo-tree-id5753 . -4) (undo-tree-id5754 . -4) (undo-tree-id5755 . -4) (undo-tree-id5756 . -4) (undo-tree-id5757 . -4) (undo-tree-id5758 . -4) (undo-tree-id5759 . -4) (undo-tree-id5760 . -4) (undo-tree-id5761 . -4) (undo-tree-id5762 . -4) (undo-tree-id5763 . -4) (undo-tree-id5764 . -4) (undo-tree-id5765 . -4) (undo-tree-id5766 . -4) (undo-tree-id5767 . -4) (undo-tree-id5768 . -4) (undo-tree-id5769 . -4) (undo-tree-id5770 . -4) (undo-tree-id5771 . -4) (undo-tree-id5772 . -4) (undo-tree-id5773 . -4) (undo-tree-id5774 . -4) (undo-tree-id5775 . -4) (undo-tree-id5776 . -4) (undo-tree-id5777 . -4) (undo-tree-id5778 . -4) (undo-tree-id5779 . -4) (undo-tree-id5780 . -4) (undo-tree-id5781 . -4) (undo-tree-id5782 . -4) (undo-tree-id5783 . -4) (undo-tree-id5784 . -4) (undo-tree-id5785 . -4) (undo-tree-id5786 . -4) (undo-tree-id5787 . -4) (undo-tree-id5788 . -4) (undo-tree-id5789 . -4) (undo-tree-id5790 . -4) (undo-tree-id5791 . -4) (undo-tree-id5792 . -4) (undo-tree-id5793 . -4) (undo-tree-id5794 . -4) (undo-tree-id5795 . -4) (undo-tree-id5796 . -4) (undo-tree-id5797 . -4) (undo-tree-id5798 . -4) (undo-tree-id5799 . -4) (undo-tree-id5800 . -4) (undo-tree-id5801 . -4) (undo-tree-id5802 . -4) 1579) nil (25944 50558 220110 0) 0 nil])
([nil nil ((1575 . 1576)) nil (25944 50558 219916 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1575) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) 1576) nil (25944 50558 219915 0) 0 nil])
([nil nil ((1575 . 1576)) nil (25944 50558 219905 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1582 1594 nil nil nil t #s(yas--exit 1595 nil))) #s(yas--exit 1595 nil) 130 nil #s(yas--field 1 1582 1594 nil nil nil t #s(yas--exit 1595 nil)) nil nil)) (1575 . 1586) (#("expect(${1:msg})$0" 0 18 (fontified nil)) . 1575) (1575 . 1593) (#("e" 0 1 (fontified nil)) . 1575) (1575 . 1576) (#("expect(â€¦)" 0 9 (fontified nil)) . -1575) (1575 . 1584) (#("e" 0 1 (fontified t)) . -1575) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) 1576) nil (25944 50558 219903 0) 0 nil])
([nil nil ((1583 . 1584) (#("msg" 0 3 (fontified nil)) . 1583) (undo-tree-id5578 . -3) (1582 . 1583)) nil (25944 50558 219888 0) 0 nil])
([nil nil ((1583 . 1586)) nil (25944 50558 219886 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . -1583) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -1584) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -1585) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) 1586) nil (25944 50558 219883 0) 0 nil])
([nil nil ((1583 . 1586)) nil (25944 50558 219855 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face fontified t)) . -1583) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -1584) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -1585) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) 1586) nil (25944 50558 219851 0) 0 nil])
([nil nil ((1583 . 1593)) nil (25944 50558 219810 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1575 1595 #s(yas--snippet nil (#s(yas--field 1 1582 1594 nil nil nil t #s(yas--exit 1595 nil))) #s(yas--exit 1595 nil) 130 nil #s(yas--field 1 1582 1594 nil nil nil t #s(yas--exit 1595 nil)) nil nil))) nil (25944 50571 982745 0) 0 nil])
([nil nil ((1595 . 1596) (t 25944 50558 240008 318000)) nil (25944 50571 982744 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1595) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) 1596) nil (25944 50571 982742 0) 0 nil])
([nil nil ((1594 . 1597)) nil (25944 50571 982724 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1595 1606 #s(yas--snippet nil nil #s(yas--exit 1606 nil) 131 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1606 nil) 131 nil nil nil nil)) (1595 . 1606) (#("to_string()$0" 0 13 (fontified nil)) . 1595) (1595 . 1608) (#("to" 0 2 (fontified nil)) . 1595) (1595 . 1597) (#("to_string() (as ToString)" 0 25 (fontified nil)) . -1595) (1595 . 1620) (#("to" 0 2 (fontified t)) . -1595) (undo-tree-id6689 . -2) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -2) (undo-tree-id6693 . -2) (undo-tree-id6694 . -2) (undo-tree-id6695 . -2) (undo-tree-id6696 . -2) 1597) nil (25944 50571 982719 0) 0 nil])
([nil nil ((#("string())" 0 8 (fontified t) 8 9 (fontified t)) . -1598) (undo-tree-id7334 . -9) (undo-tree-id7335 . -9) (undo-tree-id7336 . -9) (undo-tree-id7337 . -9) (undo-tree-id7338 . -9) (undo-tree-id7339 . -9) (undo-tree-id7340 . -9) (undo-tree-id7341 . -9) (undo-tree-id7342 . -9) (undo-tree-id7343 . -9) (undo-tree-id7344 . -9) (undo-tree-id7345 . -9) (undo-tree-id7346 . -9) (undo-tree-id7347 . -9) (undo-tree-id7348 . -9) (undo-tree-id7349 . -9) (undo-tree-id7350 . -9) (undo-tree-id7351 . -8) (undo-tree-id7352 . -8) (undo-tree-id7353 . -8) (undo-tree-id7354 . -8) (undo-tree-id7355 . -8) (undo-tree-id7356 . -8) (undo-tree-id7357 . -8) (undo-tree-id7358 . -8) (undo-tree-id7359 . -8) (undo-tree-id7360 . -8) (undo-tree-id7361 . -8) (undo-tree-id7362 . -8) (undo-tree-id7363 . -8) (undo-tree-id7364 . -8) (undo-tree-id7365 . -8) (undo-tree-id7366 . -8) (undo-tree-id7367 . -8) (undo-tree-id7368 . -8) (undo-tree-id7369 . -8) (undo-tree-id7370 . -8) (undo-tree-id7371 . -8) (undo-tree-id7372 . -8) (undo-tree-id7373 . -8) (undo-tree-id7374 . -8) (undo-tree-id7375 . -8) (undo-tree-id7376 . -8) (undo-tree-id7377 . -8) (undo-tree-id7378 . -8) (undo-tree-id7379 . -8) (undo-tree-id7380 . -8) (undo-tree-id7381 . -8) (undo-tree-id7382 . -8) (undo-tree-id7383 . -8) (undo-tree-id7384 . -8) (undo-tree-id7385 . -8) (undo-tree-id7386 . -8) (undo-tree-id7387 . -8) (undo-tree-id7388 . -8) (undo-tree-id7389 . -8) (undo-tree-id7390 . -8) (undo-tree-id7391 . -8) (undo-tree-id7392 . -8) (undo-tree-id7393 . -8) (undo-tree-id7394 . -8) (undo-tree-id7395 . -8) (undo-tree-id7396 . -8) (undo-tree-id7397 . -8) (undo-tree-id7398 . -8) (undo-tree-id7399 . -8) (undo-tree-id7400 . -8) (undo-tree-id7401 . -8) (undo-tree-id7402 . -8) (undo-tree-id7403 . -8) (undo-tree-id7404 . -8) (undo-tree-id7405 . -8) (undo-tree-id7406 . -8) (undo-tree-id7407 . -8) (undo-tree-id7408 . -8) (undo-tree-id7409 . -8) (undo-tree-id7410 . -8) (undo-tree-id7411 . -8) (undo-tree-id7412 . -8) (undo-tree-id7413 . -8) (undo-tree-id7414 . -8) (undo-tree-id7415 . -8) (undo-tree-id7416 . -8) (undo-tree-id7417 . -8) (undo-tree-id7418 . -9) (undo-tree-id7419 . -9) (undo-tree-id7420 . -9) (undo-tree-id7421 . -9) (undo-tree-id7422 . -9) (undo-tree-id7423 . -9) (undo-tree-id7424 . -9) (undo-tree-id7425 . -9) (undo-tree-id7426 . -9) (undo-tree-id7427 . -9) (undo-tree-id7428 . -9) (undo-tree-id7429 . -9) (undo-tree-id7430 . -9) (undo-tree-id7431 . -9) (undo-tree-id7432 . -9) (undo-tree-id7433 . -9) (undo-tree-id7434 . -9) 1607 (t 25944 50572 1637 132000)) nil (25944 50591 641226 0) 0 nil])
([nil nil ((#("to_" 0 3 (fontified t)) . -1595) (undo-tree-id7227 . -3) (undo-tree-id7228 . -3) (undo-tree-id7229 . -3) (undo-tree-id7230 . -3) (undo-tree-id7231 . -3) (undo-tree-id7232 . -3) (undo-tree-id7233 . -3) (undo-tree-id7234 . -3) (undo-tree-id7235 . -3) (undo-tree-id7236 . -3) (undo-tree-id7237 . -3) (undo-tree-id7238 . -3) (undo-tree-id7239 . -3) (undo-tree-id7240 . -3) (undo-tree-id7241 . -3) (undo-tree-id7242 . -3) (undo-tree-id7243 . -3) (undo-tree-id7244 . -3) (undo-tree-id7245 . -3) (undo-tree-id7246 . -3) (undo-tree-id7247 . -3) (undo-tree-id7248 . -3) (undo-tree-id7249 . -3) (undo-tree-id7250 . -3) (undo-tree-id7251 . -3) (undo-tree-id7252 . -3) (undo-tree-id7253 . -3) (undo-tree-id7254 . -3) (undo-tree-id7255 . -3) (undo-tree-id7256 . -3) (undo-tree-id7257 . -3) (undo-tree-id7258 . -3) (undo-tree-id7259 . -3) (undo-tree-id7260 . -3) (undo-tree-id7261 . -3) (undo-tree-id7262 . -3) (undo-tree-id7263 . -3) (undo-tree-id7264 . -3) (undo-tree-id7265 . -3) (undo-tree-id7266 . -3) (undo-tree-id7267 . -3) (undo-tree-id7268 . -3) (undo-tree-id7269 . -3) (undo-tree-id7270 . -3) (undo-tree-id7271 . -3) (undo-tree-id7272 . -3) (undo-tree-id7273 . -3) (undo-tree-id7274 . -3) (undo-tree-id7275 . -3) (undo-tree-id7276 . -3) (undo-tree-id7277 . -3) (undo-tree-id7278 . -3) (undo-tree-id7279 . -3) (undo-tree-id7280 . -3) (undo-tree-id7281 . -3) (undo-tree-id7282 . -3) (undo-tree-id7283 . -3) (undo-tree-id7284 . -3) (undo-tree-id7285 . -3) (undo-tree-id7286 . -3) (undo-tree-id7287 . -3) (undo-tree-id7288 . -3) (undo-tree-id7289 . -3) (undo-tree-id7290 . -3) (undo-tree-id7291 . -3) (undo-tree-id7292 . -3) (undo-tree-id7293 . -3) (undo-tree-id7294 . -3) (undo-tree-id7295 . -3) (undo-tree-id7296 . -3) (undo-tree-id7297 . -3) (undo-tree-id7298 . -3) (undo-tree-id7299 . -3) (undo-tree-id7300 . -3) (undo-tree-id7301 . -3) (undo-tree-id7302 . -3) (undo-tree-id7303 . -3) (undo-tree-id7304 . -3) (undo-tree-id7305 . -3) (undo-tree-id7306 . -3) (undo-tree-id7307 . -3) (undo-tree-id7308 . -3) (undo-tree-id7309 . -3) (undo-tree-id7310 . -3) (undo-tree-id7311 . -3) (undo-tree-id7312 . -3) (undo-tree-id7313 . -3) (undo-tree-id7314 . -3) (undo-tree-id7315 . -3) (undo-tree-id7316 . -3) (undo-tree-id7317 . -3) (undo-tree-id7318 . -3) (undo-tree-id7319 . -3) (undo-tree-id7320 . -3) (undo-tree-id7321 . -3) (undo-tree-id7322 . -3) (undo-tree-id7323 . -3) (undo-tree-id7324 . -3) (undo-tree-id7325 . -3) (undo-tree-id7326 . -3) (undo-tree-id7327 . -3) (undo-tree-id7328 . -3) (undo-tree-id7329 . -3) (undo-tree-id7330 . -3) (undo-tree-id7331 . -3) (undo-tree-id7332 . -3) (undo-tree-id7333 . -3) 1598) nil (25944 50591 641125 0) 0 nil])
([nil nil ((#("err\"." 0 4 (face font-lock-string-face fontified t) 4 5 (fontified t)) . -1590) (undo-tree-id7107 . -5) (undo-tree-id7108 . -5) (undo-tree-id7109 . -5) (undo-tree-id7110 . -5) (undo-tree-id7111 . -5) (undo-tree-id7112 . -5) (undo-tree-id7113 . -5) (undo-tree-id7114 . -5) (undo-tree-id7115 . -5) (undo-tree-id7116 . -5) (undo-tree-id7117 . -5) (undo-tree-id7118 . -5) (undo-tree-id7119 . -5) (undo-tree-id7120 . -5) (undo-tree-id7121 . -5) (undo-tree-id7122 . -5) (undo-tree-id7123 . -5) (undo-tree-id7124 . -5) (undo-tree-id7125 . -5) (undo-tree-id7126 . -5) (undo-tree-id7127 . -5) (undo-tree-id7128 . -5) (undo-tree-id7129 . -5) (undo-tree-id7130 . -5) (undo-tree-id7131 . -5) (undo-tree-id7132 . -5) (undo-tree-id7133 . -5) (undo-tree-id7134 . -5) (undo-tree-id7135 . -5) (undo-tree-id7136 . -5) (undo-tree-id7137 . -5) (undo-tree-id7138 . -5) (undo-tree-id7139 . -5) (undo-tree-id7140 . -5) (undo-tree-id7141 . -5) (undo-tree-id7142 . -5) (undo-tree-id7143 . -5) (undo-tree-id7144 . -5) (undo-tree-id7145 . -5) (undo-tree-id7146 . -5) (undo-tree-id7147 . -5) (undo-tree-id7148 . -5) (undo-tree-id7149 . -5) (undo-tree-id7150 . -5) (undo-tree-id7151 . -5) (undo-tree-id7152 . -5) (undo-tree-id7153 . -5) (undo-tree-id7154 . -5) (undo-tree-id7155 . -5) (undo-tree-id7156 . -5) (undo-tree-id7157 . -5) (undo-tree-id7158 . -5) (undo-tree-id7159 . -5) (undo-tree-id7160 . -5) (undo-tree-id7161 . -5) (undo-tree-id7162 . -5) (undo-tree-id7163 . -5) (undo-tree-id7164 . -5) (undo-tree-id7165 . -5) (undo-tree-id7166 . -5) (undo-tree-id7167 . -5) (undo-tree-id7168 . -5) (undo-tree-id7169 . -5) (undo-tree-id7170 . -5) (undo-tree-id7171 . -5) (undo-tree-id7172 . -5) (undo-tree-id7173 . -5) (undo-tree-id7174 . -5) (undo-tree-id7175 . -5) (undo-tree-id7176 . -5) (undo-tree-id7177 . -5) (undo-tree-id7178 . -5) (undo-tree-id7179 . -5) (undo-tree-id7180 . -5) (undo-tree-id7181 . -5) (undo-tree-id7182 . -5) (undo-tree-id7183 . -5) (undo-tree-id7184 . -5) (undo-tree-id7185 . -5) (undo-tree-id7186 . -5) (undo-tree-id7187 . -5) (undo-tree-id7188 . -5) (undo-tree-id7189 . -5) (undo-tree-id7190 . -5) (undo-tree-id7191 . -5) (undo-tree-id7192 . -5) (undo-tree-id7193 . -5) (undo-tree-id7194 . -5) (undo-tree-id7195 . -5) (undo-tree-id7196 . -5) (undo-tree-id7197 . -5) (undo-tree-id7198 . -5) (undo-tree-id7199 . -5) (undo-tree-id7200 . -5) (undo-tree-id7201 . -5) (undo-tree-id7202 . -5) (undo-tree-id7203 . -5) (undo-tree-id7204 . -5) (undo-tree-id7205 . -5) (undo-tree-id7206 . -5) (undo-tree-id7207 . -5) (undo-tree-id7208 . -5) (undo-tree-id7209 . -5) (undo-tree-id7210 . -5) (undo-tree-id7211 . -5) (undo-tree-id7212 . -5) (undo-tree-id7213 . -5) (undo-tree-id7214 . -5) (undo-tree-id7215 . -5) (undo-tree-id7216 . -5) (undo-tree-id7217 . -5) (undo-tree-id7218 . -5) (undo-tree-id7219 . -5) (undo-tree-id7220 . -5) (undo-tree-id7221 . -5) (undo-tree-id7222 . -5) (undo-tree-id7223 . -5) (undo-tree-id7224 . -5) (undo-tree-id7225 . -5) (undo-tree-id7226 . -5) 1595) nil (25944 50591 641020 0) 0 nil])
([nil nil ((#("upload " 0 7 (face font-lock-string-face fontified t)) . -1583) (undo-tree-id6981 . -7) (undo-tree-id6982 . -7) (undo-tree-id6983 . -7) (undo-tree-id6984 . -7) (undo-tree-id6985 . -7) (undo-tree-id6986 . -7) (undo-tree-id6987 . -7) (undo-tree-id6988 . -7) (undo-tree-id6989 . -7) (undo-tree-id6990 . -7) (undo-tree-id6991 . -7) (undo-tree-id6992 . -7) (undo-tree-id6993 . -7) (undo-tree-id6994 . -7) (undo-tree-id6995 . -7) (undo-tree-id6996 . -7) (undo-tree-id6997 . -7) (undo-tree-id6998 . -7) (undo-tree-id6999 . -7) (undo-tree-id7000 . -7) (undo-tree-id7001 . -7) (undo-tree-id7002 . -7) (undo-tree-id7003 . -7) (undo-tree-id7004 . -7) (undo-tree-id7005 . -7) (undo-tree-id7006 . -7) (undo-tree-id7007 . -7) (undo-tree-id7008 . -7) (undo-tree-id7009 . -7) (undo-tree-id7010 . -7) (undo-tree-id7011 . -7) (undo-tree-id7012 . -7) (undo-tree-id7013 . -7) (undo-tree-id7014 . -7) (undo-tree-id7015 . -7) (undo-tree-id7016 . -7) (undo-tree-id7017 . -7) (undo-tree-id7018 . -7) (undo-tree-id7019 . -7) (undo-tree-id7020 . -7) (undo-tree-id7021 . -7) (undo-tree-id7022 . -7) (undo-tree-id7023 . -7) (undo-tree-id7024 . -7) (undo-tree-id7025 . -7) (undo-tree-id7026 . -7) (undo-tree-id7027 . -7) (undo-tree-id7028 . -7) (undo-tree-id7029 . -7) (undo-tree-id7030 . -7) (undo-tree-id7031 . -7) (undo-tree-id7032 . -7) (undo-tree-id7033 . -7) (undo-tree-id7034 . -7) (undo-tree-id7035 . -7) (undo-tree-id7036 . -7) (undo-tree-id7037 . -7) (undo-tree-id7038 . -7) (undo-tree-id7039 . -7) (undo-tree-id7040 . -7) (undo-tree-id7041 . -7) (undo-tree-id7042 . -7) (undo-tree-id7043 . -7) (undo-tree-id7044 . -7) (undo-tree-id7045 . -7) (undo-tree-id7046 . -7) (undo-tree-id7047 . -7) (undo-tree-id7048 . -7) (undo-tree-id7049 . -7) (undo-tree-id7050 . -7) (undo-tree-id7051 . -7) (undo-tree-id7052 . -7) (undo-tree-id7053 . -7) (undo-tree-id7054 . -7) (undo-tree-id7055 . -7) (undo-tree-id7056 . -7) (undo-tree-id7057 . -7) (undo-tree-id7058 . -7) (undo-tree-id7059 . -7) (undo-tree-id7060 . -7) (undo-tree-id7061 . -7) (undo-tree-id7062 . -7) (undo-tree-id7063 . -7) (undo-tree-id7064 . -7) (undo-tree-id7065 . -7) (undo-tree-id7066 . -7) (undo-tree-id7067 . -7) (undo-tree-id7068 . -7) (undo-tree-id7069 . -7) (undo-tree-id7070 . -7) (undo-tree-id7071 . -7) (undo-tree-id7072 . -7) (undo-tree-id7073 . -7) (undo-tree-id7074 . -7) (undo-tree-id7075 . -7) (undo-tree-id7076 . -7) (undo-tree-id7077 . -7) (undo-tree-id7078 . -7) (undo-tree-id7079 . -7) (undo-tree-id7080 . -7) (undo-tree-id7081 . -7) (undo-tree-id7082 . -7) (undo-tree-id7083 . -7) (undo-tree-id7084 . -7) (undo-tree-id7085 . -7) (undo-tree-id7086 . -7) (undo-tree-id7087 . -7) (undo-tree-id7088 . -7) (undo-tree-id7089 . -7) (undo-tree-id7090 . -7) (undo-tree-id7091 . -7) (undo-tree-id7092 . -7) (undo-tree-id7093 . -7) (undo-tree-id7094 . -7) (undo-tree-id7095 . -7) (undo-tree-id7096 . -7) (undo-tree-id7097 . -7) (undo-tree-id7098 . -7) (undo-tree-id7099 . -7) (undo-tree-id7100 . -7) (undo-tree-id7101 . -7) (undo-tree-id7102 . -7) (undo-tree-id7103 . -7) (undo-tree-id7104 . -7) (undo-tree-id7105 . -7) (undo-tree-id7106 . -7) 1590) nil (25944 50591 640896 0) 0 nil])
([nil nil ((#("expect(\"" 0 7 (fontified t) 7 8 (face font-lock-string-face fontified t)) . -1575) (undo-tree-id6852 . -8) (undo-tree-id6853 . -8) (undo-tree-id6854 . -7) (undo-tree-id6855 . -8) (undo-tree-id6856 . -8) (undo-tree-id6857 . -8) (undo-tree-id6858 . -8) (undo-tree-id6859 . -8) (undo-tree-id6860 . -8) (undo-tree-id6861 . -8) (undo-tree-id6862 . -8) (undo-tree-id6863 . -8) (undo-tree-id6864 . -8) (undo-tree-id6865 . -8) (undo-tree-id6866 . -8) (undo-tree-id6867 . -8) (undo-tree-id6868 . -8) (undo-tree-id6869 . -8) (undo-tree-id6870 . -8) (undo-tree-id6871 . -8) (undo-tree-id6872 . -8) (undo-tree-id6873 . -8) (undo-tree-id6874 . -8) (undo-tree-id6875 . -8) (undo-tree-id6876 . -8) (undo-tree-id6877 . -8) (undo-tree-id6878 . -8) (undo-tree-id6879 . -8) (undo-tree-id6880 . -8) (undo-tree-id6881 . -8) (undo-tree-id6882 . -8) (undo-tree-id6883 . -8) (undo-tree-id6884 . -8) (undo-tree-id6885 . -8) (undo-tree-id6886 . -8) (undo-tree-id6887 . -8) (undo-tree-id6888 . -8) (undo-tree-id6889 . -8) (undo-tree-id6890 . -8) (undo-tree-id6891 . -8) (undo-tree-id6892 . -8) (undo-tree-id6893 . -8) (undo-tree-id6894 . -8) (undo-tree-id6895 . -8) (undo-tree-id6896 . -8) (undo-tree-id6897 . -8) (undo-tree-id6898 . -8) (undo-tree-id6899 . -8) (undo-tree-id6900 . -8) (undo-tree-id6901 . -8) (undo-tree-id6902 . -8) (undo-tree-id6903 . -8) (undo-tree-id6904 . -8) (undo-tree-id6905 . -8) (undo-tree-id6906 . -8) (undo-tree-id6907 . -8) (undo-tree-id6908 . -8) (undo-tree-id6909 . -8) (undo-tree-id6910 . -8) (undo-tree-id6911 . -8) (undo-tree-id6912 . -8) (undo-tree-id6913 . -8) (undo-tree-id6914 . -8) (undo-tree-id6915 . -8) (undo-tree-id6916 . -8) (undo-tree-id6917 . -8) (undo-tree-id6918 . -8) (undo-tree-id6919 . -8) (undo-tree-id6920 . -8) (undo-tree-id6921 . -8) (undo-tree-id6922 . -8) (undo-tree-id6923 . -8) (undo-tree-id6924 . -8) (undo-tree-id6925 . -8) (undo-tree-id6926 . -8) (undo-tree-id6927 . -8) (undo-tree-id6928 . -8) (undo-tree-id6929 . -8) (undo-tree-id6930 . -8) (undo-tree-id6931 . -8) (undo-tree-id6932 . -8) (undo-tree-id6933 . -8) (undo-tree-id6934 . -8) (undo-tree-id6935 . -8) (undo-tree-id6936 . -8) (undo-tree-id6937 . -8) (undo-tree-id6938 . -8) (undo-tree-id6939 . -8) (undo-tree-id6940 . -8) (undo-tree-id6941 . -8) (undo-tree-id6942 . -8) (undo-tree-id6943 . -8) (undo-tree-id6944 . -8) (undo-tree-id6945 . -8) (undo-tree-id6946 . -8) (undo-tree-id6947 . -8) (undo-tree-id6948 . -8) (undo-tree-id6949 . -8) (undo-tree-id6950 . -8) (undo-tree-id6951 . -8) (undo-tree-id6952 . -8) (undo-tree-id6953 . -8) (undo-tree-id6954 . -8) (undo-tree-id6955 . -8) (undo-tree-id6956 . -8) (undo-tree-id6957 . -8) (undo-tree-id6958 . -8) (undo-tree-id6959 . -8) (undo-tree-id6960 . -8) (undo-tree-id6961 . -8) (undo-tree-id6962 . -8) (undo-tree-id6963 . -8) (undo-tree-id6964 . -8) (undo-tree-id6965 . -8) (undo-tree-id6966 . -8) (undo-tree-id6967 . -8) (undo-tree-id6968 . -8) (undo-tree-id6969 . -8) (undo-tree-id6970 . -8) (undo-tree-id6971 . -8) (undo-tree-id6972 . -8) (undo-tree-id6973 . -8) (undo-tree-id6974 . -8) (undo-tree-id6975 . -8) (undo-tree-id6976 . -8) (undo-tree-id6977 . -8) (undo-tree-id6978 . -8) (undo-tree-id6979 . -8) (undo-tree-id6980 . -8) 1583) nil (25944 50591 641734 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1574) (undo-tree-id7435 . -1) (undo-tree-id7436 . -1) (undo-tree-id7437 . -1) (undo-tree-id7438 . -1) (undo-tree-id7439 . -1) (undo-tree-id7440 . -1) (undo-tree-id7441 . -1) (undo-tree-id7442 . -1) (undo-tree-id7443 . -1) (undo-tree-id7444 . -1) (undo-tree-id7445 . -1) (undo-tree-id7446 . -1) (undo-tree-id7447 . -1) (undo-tree-id7448 . -1) (undo-tree-id7449 . -1) (undo-tree-id7450 . -1) (undo-tree-id7451 . -1) (undo-tree-id7452 . -1) (undo-tree-id7453 . -1) (undo-tree-id7454 . -1) (undo-tree-id7455 . -1) (undo-tree-id7456 . -1) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) (undo-tree-id7470 . -1) (undo-tree-id7471 . -1) (undo-tree-id7472 . -1) (undo-tree-id7473 . -1) (undo-tree-id7474 . -1) (undo-tree-id7475 . -1) (undo-tree-id7476 . -1) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) (undo-tree-id7480 . -1) (undo-tree-id7481 . -1) (undo-tree-id7482 . -1) (undo-tree-id7483 . -1) (undo-tree-id7484 . -1) (undo-tree-id7485 . -1) (undo-tree-id7486 . -1) (undo-tree-id7487 . -1) (undo-tree-id7488 . -1) (undo-tree-id7489 . -1) (undo-tree-id7490 . -1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) (undo-tree-id7493 . -1) (undo-tree-id7494 . -1) (undo-tree-id7495 . -1) (undo-tree-id7496 . -1) (undo-tree-id7497 . -1) (undo-tree-id7498 . -1) (undo-tree-id7499 . -1) (undo-tree-id7500 . -1) (undo-tree-id7501 . -1) (undo-tree-id7502 . -1) (undo-tree-id7503 . -1) (undo-tree-id7504 . -1) (undo-tree-id7505 . -1) (undo-tree-id7506 . -1) (undo-tree-id7507 . -1) (undo-tree-id7508 . -1) (undo-tree-id7509 . -1) (undo-tree-id7510 . -1) (undo-tree-id7511 . -1) (undo-tree-id7512 . -1) (undo-tree-id7513 . -1) (undo-tree-id7514 . -1) (undo-tree-id7515 . -1) (undo-tree-id7516 . -1) (undo-tree-id7517 . -1) (undo-tree-id7518 . -1) (undo-tree-id7519 . -1) (undo-tree-id7520 . -1) (undo-tree-id7521 . -1) (undo-tree-id7522 . -1) (undo-tree-id7523 . -1) (undo-tree-id7524 . -1) (undo-tree-id7525 . -1) (undo-tree-id7526 . -1) (undo-tree-id7527 . -1) (undo-tree-id7528 . -1) (undo-tree-id7529 . -1) (undo-tree-id7530 . -1) (undo-tree-id7531 . -1) (undo-tree-id7532 . -1) (undo-tree-id7533 . -1) (undo-tree-id7534 . -1) (undo-tree-id7535 . -1) (undo-tree-id7536 . -1) (undo-tree-id7537 . -1) (undo-tree-id7538 . -1) (undo-tree-id7539 . -1) (undo-tree-id7540 . -1) (undo-tree-id7541 . -1) (undo-tree-id7542 . -1) (undo-tree-id7543 . -1) (undo-tree-id7544 . -1) (undo-tree-id7545 . -1) (undo-tree-id7546 . -1) (undo-tree-id7547 . -1) (undo-tree-id7548 . -1) (undo-tree-id7549 . -1) (undo-tree-id7550 . -1) (undo-tree-id7551 . -1) (undo-tree-id7552 . -1) (undo-tree-id7553 . -1) (undo-tree-id7554 . -1) (undo-tree-id7555 . -1) (undo-tree-id7556 . -1) (undo-tree-id7557 . -1) (undo-tree-id7558 . -1) (undo-tree-id7559 . -1) (undo-tree-id7560 . -1) (undo-tree-id7561 . -1) (undo-tree-id7562 . -1) (undo-tree-id7563 . -1) (undo-tree-id7564 . -1) (undo-tree-id7565 . -1) (undo-tree-id7566 . -1) (undo-tree-id7567 . -1) (undo-tree-id7568 . -1) (undo-tree-id7569 . -1) (undo-tree-id7570 . -1) (undo-tree-id7571 . -1) (undo-tree-id7572 . -1) (undo-tree-id7573 . -1) (undo-tree-id7574 . -1) (undo-tree-id7575 . -1) (undo-tree-id7576 . -1) (undo-tree-id7577 . -1) (undo-tree-id7578 . -1) (undo-tree-id7579 . -1) (undo-tree-id7580 . -1) (undo-tree-id7581 . -1) (undo-tree-id7582 . -1) (undo-tree-id7583 . -1) (undo-tree-id7584 . -1) 1575) nil (25944 50593 75667 0) 0 nil] [nil nil ((#("payload)." 0 7 (fontified t) 7 9 (fontified t)) . -1566) (undo-tree-id6713 . -9) (undo-tree-id6714 . -9) (undo-tree-id6715 . -9) (undo-tree-id6716 . -9) (undo-tree-id6717 . -9) (undo-tree-id6718 . -9) (undo-tree-id6719 . -9) (undo-tree-id6720 . -9) (undo-tree-id6721 . -9) (undo-tree-id6722 . -9) (undo-tree-id6723 . -9) (undo-tree-id6724 . -9) (undo-tree-id6725 . -9) (undo-tree-id6726 . -9) (undo-tree-id6727 . -9) (undo-tree-id6728 . -9) (undo-tree-id6729 . -9) (undo-tree-id6730 . -9) (undo-tree-id6731 . -9) (undo-tree-id6732 . -9) (undo-tree-id6733 . -9) (undo-tree-id6734 . -9) (undo-tree-id6735 . -9) (undo-tree-id6736 . -9) (undo-tree-id6737 . -9) (undo-tree-id6738 . -9) (undo-tree-id6739 . -9) (undo-tree-id6740 . -9) (undo-tree-id6741 . -9) (undo-tree-id6742 . -9) (undo-tree-id6743 . -9) (undo-tree-id6744 . -9) (undo-tree-id6745 . -9) (undo-tree-id6746 . -9) (undo-tree-id6747 . -9) (undo-tree-id6748 . -9) (undo-tree-id6749 . -9) (undo-tree-id6750 . -9) (undo-tree-id6751 . -9) (undo-tree-id6752 . -9) (undo-tree-id6753 . -9) (undo-tree-id6754 . -9) (undo-tree-id6755 . -9) (undo-tree-id6756 . -9) (undo-tree-id6757 . -9) (undo-tree-id6758 . -9) (undo-tree-id6759 . -9) (undo-tree-id6760 . -9) (undo-tree-id6761 . -9) (undo-tree-id6762 . -9) (undo-tree-id6763 . -9) (undo-tree-id6764 . -9) (undo-tree-id6765 . -9) (undo-tree-id6766 . -9) (undo-tree-id6767 . -9) (undo-tree-id6768 . -9) (undo-tree-id6769 . -9) (undo-tree-id6770 . -9) (undo-tree-id6771 . -9) (undo-tree-id6772 . -9) (undo-tree-id6773 . -9) (undo-tree-id6774 . -9) (undo-tree-id6775 . -9) (undo-tree-id6776 . -9) (undo-tree-id6777 . -9) (undo-tree-id6778 . -9) (undo-tree-id6779 . -9) (undo-tree-id6780 . -9) (undo-tree-id6781 . -9) (undo-tree-id6782 . -9) (undo-tree-id6783 . -9) (undo-tree-id6784 . -9) (undo-tree-id6785 . -9) (undo-tree-id6786 . -9) (undo-tree-id6787 . -9) (undo-tree-id6788 . -9) (undo-tree-id6789 . -9) (undo-tree-id6790 . -9) (undo-tree-id6791 . -9) (undo-tree-id6792 . -9) (undo-tree-id6793 . -9) (undo-tree-id6794 . -9) (undo-tree-id6795 . -9) (undo-tree-id6796 . -9) (undo-tree-id6797 . -9) (undo-tree-id6798 . -9) (undo-tree-id6799 . -9) (undo-tree-id6800 . -9) (undo-tree-id6801 . -9) (undo-tree-id6802 . -9) (undo-tree-id6803 . -9) (undo-tree-id6804 . -9) (undo-tree-id6805 . -9) (undo-tree-id6806 . -9) (undo-tree-id6807 . -9) (undo-tree-id6808 . -9) (undo-tree-id6809 . -9) (undo-tree-id6810 . -9) (undo-tree-id6811 . -9) (undo-tree-id6812 . -9) (undo-tree-id6813 . -9) (undo-tree-id6814 . -9) (undo-tree-id6815 . -9) (undo-tree-id6816 . -9) (undo-tree-id6817 . -9) (undo-tree-id6818 . -9) (undo-tree-id6819 . -9) (undo-tree-id6820 . -9) (undo-tree-id6821 . -9) (undo-tree-id6822 . -9) (undo-tree-id6823 . -9) (undo-tree-id6824 . -9) (undo-tree-id6825 . -9) (undo-tree-id6826 . -9) (undo-tree-id6827 . -9) (undo-tree-id6828 . -9) (undo-tree-id6829 . -9) (undo-tree-id6830 . -9) (undo-tree-id6831 . -9) (undo-tree-id6832 . -9) (undo-tree-id6833 . -9) (undo-tree-id6834 . -9) (undo-tree-id6835 . -9) (undo-tree-id6836 . -9) (undo-tree-id6837 . -9) (undo-tree-id6838 . -9) (undo-tree-id6839 . -9) (undo-tree-id6840 . -9) (undo-tree-id6841 . -9) (undo-tree-id6842 . -9) (undo-tree-id6843 . -9) (undo-tree-id6844 . -9) (undo-tree-id6845 . -9) (undo-tree-id6846 . -9) (undo-tree-id6847 . -9) (undo-tree-id6848 . -9) (undo-tree-id6849 . -9) (undo-tree-id6850 . -9) (undo-tree-id6851 . -9) 1575) ((1566 . 1575)) (25944 50591 640634 0) 0 nil])
([nil nil ((1574 . 1575)) nil (25944 50593 75507 0) 0 nil])
nil
([nil nil ((1575 . 1580) (t 25944 50593 96076 210000)) nil (25944 50596 127819 0) 0 nil])
([nil nil ((1580 . 1581)) nil (25944 50596 127818 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1580) (undo-tree-id7593 . -1) (undo-tree-id7594 . -1) 1581) nil (25944 50596 127817 0) 0 nil])
([nil nil ((1580 . 1581)) nil (25944 50596 127813 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1583 1585 nil nil nil nil #s(yas--exit 1586 nil))) #s(yas--exit 1586 nil) 132 nil #s(yas--field 1 1583 1585 nil nil nil nil #s(yas--exit 1586 nil)) nil nil)) (1580 . 1586) (#("Ok(${1:()})$0" 0 13 (fontified nil)) . 1580) (1580 . 1593) (#("O" 0 1 (fontified nil)) . 1580) (1580 . 1581) (#("Ok(â€¦)" 0 5 (fontified nil)) . -1580) (1580 . 1585) (#("O" 0 1 (face font-lock-type-face fontified t)) . -1580) (undo-tree-id7585 . -1) (undo-tree-id7586 . -1) (undo-tree-id7587 . -1) (undo-tree-id7588 . -1) (undo-tree-id7589 . -1) (undo-tree-id7590 . -1) (undo-tree-id7591 . -1) (undo-tree-id7592 . -1) 1581) nil (25944 50596 127808 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1580 1586 #s(yas--snippet nil (#s(yas--field 1 1583 1585 nil nil nil nil #s(yas--exit 1586 nil))) #s(yas--exit 1586 nil) 132 nil #s(yas--field 1 1583 1585 nil nil nil nil #s(yas--exit 1586 nil)) nil nil))) nil (25944 50606 70967 0) 0 nil])
([nil nil ((1574 . 1575) (t 25944 50596 148360 894000)) nil (25944 50606 70966 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1574) (undo-tree-id7595 . -1) (undo-tree-id7596 . -1) (undo-tree-id7597 . -1) (undo-tree-id7598 . -1) (undo-tree-id7599 . -1) 1575) nil (25944 50606 70963 0) 0 nil])
([nil nil ((1574 . 1575)) nil (25944 50606 70947 0) 0 nil])
([nil nil ((#("?" 0 1 (face rust-question-mark fontified t)) . -1574) (undo-tree-id7739 . -1) (undo-tree-id7740 . -1) (undo-tree-id7741 . -1) (undo-tree-id7742 . -1) (undo-tree-id7743 . -1) (undo-tree-id7744 . -1) (undo-tree-id7745 . -1) (undo-tree-id7746 . -1) (undo-tree-id7747 . -1) (undo-tree-id7748 . -1) (undo-tree-id7749 . -1) (undo-tree-id7750 . -1) (undo-tree-id7751 . -1) (undo-tree-id7752 . -1) (undo-tree-id7753 . -1) (undo-tree-id7754 . -1) (undo-tree-id7755 . -1) (undo-tree-id7756 . -1) (undo-tree-id7757 . -1) (undo-tree-id7758 . -1) (undo-tree-id7759 . -1) (undo-tree-id7760 . -1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . -1) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (undo-tree-id7769 . -1) (undo-tree-id7770 . -1) (undo-tree-id7771 . -1) (undo-tree-id7772 . -1) 1575 (t 25944 50606 90888 818000)) nil (25944 50634 603063 0) 0 nil])
([nil nil ((1574 . 1575)) nil (25944 50634 603029 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1574) (undo-tree-id7726 . -1) (undo-tree-id7727 . -1) (undo-tree-id7728 . -1) (undo-tree-id7729 . -1) (undo-tree-id7730 . -1) (undo-tree-id7731 . -1) (undo-tree-id7732 . -1) (undo-tree-id7733 . -1) (undo-tree-id7734 . -1) (undo-tree-id7735 . -1) (undo-tree-id7736 . -1) (undo-tree-id7737 . -1) (undo-tree-id7738 . -1) 1575) nil (25944 50634 603027 0) 0 nil])
([nil nil ((1574 . 1576)) nil (25944 50634 603013 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1575) (undo-tree-id7720 . -1) (undo-tree-id7721 . -1) (undo-tree-id7722 . -1) (undo-tree-id7723 . -1) (undo-tree-id7724 . -1) (undo-tree-id7725 . -1) 1576) nil (25944 50634 603012 0) 0 nil])
([nil nil ((1575 . 1576)) nil (25944 50634 603005 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1575) (undo-tree-id7714 . -1) (undo-tree-id7715 . -1) (undo-tree-id7716 . -1) (undo-tree-id7717 . -1) (undo-tree-id7718 . -1) (undo-tree-id7719 . -1) 1576) nil (25944 50634 603004 0) 0 nil])
([nil nil ((1575 . 1577)) nil (25944 50634 602997 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1583 1585 nil nil nil t #s(yas--exit 1586 nil))) #s(yas--exit 1586 nil) 133 nil #s(yas--field 1 1583 1585 nil nil nil t #s(yas--exit 1586 nil)) nil nil)) (1575 . 1586) (#("map_err(${1:op})$0" 0 18 (fontified nil)) . 1575) (1575 . 1593) (#("er" 0 2 (fontified nil)) . 1575) (1575 . 1577) (#("map_err(â€¦)" 0 10 (fontified nil)) . -1575) (1575 . 1585) (#("er" 0 2 (fontified t)) . -1575) (undo-tree-id7705 . -2) (undo-tree-id7706 . -1) (undo-tree-id7707 . -1) (undo-tree-id7708 . -1) (undo-tree-id7709 . -2) (undo-tree-id7710 . -2) (undo-tree-id7711 . -2) (undo-tree-id7712 . -2) (undo-tree-id7713 . -2) 1577) nil (25944 50634 602989 0) 0 nil])
([nil nil ((1584 . 1585) (#("op" 0 2 (fontified nil)) . 1584) (undo-tree-id7704 . -2) (1583 . 1584)) nil (25944 50634 602977 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1575 1586 #s(yas--snippet nil (#s(yas--field 1 1583 1585 nil nil nil t #s(yas--exit 1586 nil))) #s(yas--exit 1586 nil) 133 nil #s(yas--field 1 1583 1585 nil nil nil t #s(yas--exit 1586 nil)) nil nil))) nil (25944 50634 602974 0) 0 nil])
([nil nil ((#("err(||)" 0 7 (fontified t)) . -1579) (undo-tree-id7659 . -6) (undo-tree-id7660 . -7) (undo-tree-id7661 . -7) (undo-tree-id7662 . -7) (undo-tree-id7663 . -4) (undo-tree-id7664 . -4) (undo-tree-id7665 . -4) (undo-tree-id7666 . -4) (undo-tree-id7667 . -4) (undo-tree-id7668 . -4) (undo-tree-id7669 . -4) (undo-tree-id7670 . -4) (undo-tree-id7671 . -4) (undo-tree-id7672 . -5) (undo-tree-id7673 . -5) (undo-tree-id7674 . -5) (undo-tree-id7675 . -5) (undo-tree-id7676 . -5) (undo-tree-id7677 . -5) (undo-tree-id7678 . -5) (undo-tree-id7679 . -5) (undo-tree-id7680 . -6) (undo-tree-id7681 . -6) (undo-tree-id7682 . -6) (undo-tree-id7683 . -6) (undo-tree-id7684 . -6) (undo-tree-id7685 . -6) (undo-tree-id7686 . -6) (undo-tree-id7687 . -6) (undo-tree-id7688 . -6) (undo-tree-id7689 . -5) (undo-tree-id7690 . -5) (undo-tree-id7691 . -5) (undo-tree-id7692 . -5) (undo-tree-id7693 . -5) (undo-tree-id7694 . -6) (undo-tree-id7695 . -6) (undo-tree-id7696 . -6) (undo-tree-id7697 . -6) (undo-tree-id7698 . -6) (undo-tree-id7699 . -7) (undo-tree-id7700 . -7) (undo-tree-id7701 . -7) (undo-tree-id7702 . -7) (undo-tree-id7703 . -7) 1586) nil (25944 50634 602971 0) 0 nil])
([nil nil ((#("map_" 0 4 (fontified t)) . -1575) (undo-tree-id7605 . -4) (undo-tree-id7606 . -4) (undo-tree-id7607 . -4) (undo-tree-id7608 . -4) (undo-tree-id7609 . -4) (undo-tree-id7610 . -4) (undo-tree-id7611 . -4) (undo-tree-id7612 . -4) (undo-tree-id7613 . -4) (undo-tree-id7614 . -4) (undo-tree-id7615 . -4) (undo-tree-id7616 . -4) (undo-tree-id7617 . -4) (undo-tree-id7618 . -4) (undo-tree-id7619 . -4) (undo-tree-id7620 . -4) (undo-tree-id7621 . -4) (undo-tree-id7622 . -4) (undo-tree-id7623 . -4) (undo-tree-id7624 . -4) (undo-tree-id7625 . -4) (undo-tree-id7626 . -4) (undo-tree-id7627 . -4) (undo-tree-id7628 . -4) (undo-tree-id7629 . -4) (undo-tree-id7630 . -4) (undo-tree-id7631 . -4) (undo-tree-id7632 . -4) (undo-tree-id7633 . -4) (undo-tree-id7634 . -4) (undo-tree-id7635 . -4) (undo-tree-id7636 . -4) (undo-tree-id7637 . -4) (undo-tree-id7638 . -4) (undo-tree-id7639 . -4) (undo-tree-id7640 . -4) (undo-tree-id7641 . -4) (undo-tree-id7642 . -4) (undo-tree-id7643 . -4) (undo-tree-id7644 . -4) (undo-tree-id7645 . -4) (undo-tree-id7646 . -4) (undo-tree-id7647 . -4) (undo-tree-id7648 . -4) (undo-tree-id7649 . -4) (undo-tree-id7650 . -4) (undo-tree-id7651 . -4) (undo-tree-id7652 . -4) (undo-tree-id7653 . -4) (undo-tree-id7654 . -4) (undo-tree-id7655 . -4) (undo-tree-id7656 . -4) (undo-tree-id7657 . -4) (undo-tree-id7658 . -4) 1579) nil (25944 50634 602925 0) 0 nil])
([nil nil ((1575 . 1576)) nil (25944 50634 602868 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1575 1583 #s(yas--snippet nil nil #s(yas--exit 1583 nil) 134 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1583 nil) 134 nil nil nil nil)) (1575 . 1583) (#("unwrap()$0" 0 10 (fontified nil)) . 1575) (1575 . 1585) (#("u" 0 1 (fontified nil)) . 1575) (1575 . 1576) (#("unwrap()" 0 8 (fontified nil)) . -1575) (1575 . 1583) (#("u" 0 1 (fontified t)) . -1575) (undo-tree-id7600 . -1) (undo-tree-id7601 . -1) (undo-tree-id7602 . -1) (undo-tree-id7603 . -1) (undo-tree-id7604 . -1) 1576) nil (25944 50634 602863 0) 0 nil])
([nil nil ((1584 . 1589) (t 25944 50634 623537 995000)) nil (25944 50679 544116 0) 0 nil])
([nil nil ((1589 . 1593)) nil (25944 50679 544115 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1589 1599 #s(yas--snippet nil nil #s(yas--exit 1598 nil) 135 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1598 nil) 135 nil nil nil nil)) (1589 . 1599) (#("println!($0)" 0 12 (fontified nil)) . 1589) (1589 . 1601) (#("prin" 0 4 (fontified nil)) . 1589) (1589 . 1593) (#("println!(â€¦)" 0 11 (fontified nil)) . -1589) (1589 . 1600) (#("prin" 0 4 (fontified t)) . -1589) (undo-tree-id7820 . -4) (undo-tree-id7821 . -1) (undo-tree-id7822 . -2) (undo-tree-id7823 . -2) (undo-tree-id7824 . -2) (undo-tree-id7825 . -3) (undo-tree-id7826 . -3) (undo-tree-id7827 . -4) (undo-tree-id7828 . -4) (undo-tree-id7829 . -4) (undo-tree-id7830 . -4) (undo-tree-id7831 . -4) 1593) nil (25944 50679 544112 0) 0 nil])
([nil nil ((1598 . 1600)) nil (25944 50679 544097 0) 0 nil])
([nil nil ((1599 . 1601)) nil (25944 50679 544096 0) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-string-face fontified t)) . -1599) (undo-tree-id7796 . -1) (undo-tree-id7797 . -1) (undo-tree-id7798 . -1) (undo-tree-id7799 . -1) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1) (undo-tree-id7806 . -1) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (#("]" 0 1 (face font-lock-string-face fontified t)) . -1600) (undo-tree-id7812 . -1) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) 1601) nil (25944 50679 544094 0) 0 nil])
([nil nil ((1599 . 1601)) nil (25944 50679 544064 0) 0 nil])
([nil nil ((1600 . 1602)) nil (25944 50679 544063 0) 0 nil])
([nil nil ((1604 . 1606)) nil (25944 50679 544062 0) 0 nil])
([nil nil ((1606 . 1607)) nil (25944 50679 544061 0) 0 nil])
([nil nil ((1606 . 1611) (#("s" 0 1 (fontified nil)) . 1606) (1606 . 1607) (#("state" 0 5 (fontified nil)) . -1606) (1606 . 1611) (#("s" 0 1 (fontified t)) . -1606) (undo-tree-id7792 . -1) (undo-tree-id7793 . -1) (undo-tree-id7794 . -1) (undo-tree-id7795 . -1) 1607) nil (25944 50679 544060 0) 0 nil])
([nil nil ((1611 . 1613)) nil (25944 50679 544053 0) 0 nil])
([nil nil ((1612 . 1616) (#("k" 0 1 (fontified nil)) . 1612) (1612 . 1613) (#("keys" 0 4 (fontified nil)) . -1612) (1612 . 1616) (#("k" 0 1 (fontified t)) . -1612) (undo-tree-id7786 . -1) (undo-tree-id7787 . -1) (undo-tree-id7788 . -1) (undo-tree-id7789 . -1) (undo-tree-id7790 . -1) (undo-tree-id7791 . -1) 1613) nil (25944 50679 544051 0) 0 nil])
([nil nil ((1616 . 1617)) nil (25944 50679 544042 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1616) (undo-tree-id7773 . -1) (undo-tree-id7774 . -1) (undo-tree-id7775 . -1) (undo-tree-id7776 . -1) (undo-tree-id7777 . -1) (undo-tree-id7778 . -1) (undo-tree-id7779 . -1) (undo-tree-id7780 . -1) (undo-tree-id7781 . -1) (undo-tree-id7782 . -1) (undo-tree-id7783 . -1) (undo-tree-id7784 . -1) (undo-tree-id7785 . -1) 1617) nil (25944 50679 544039 0) 0 nil])
([nil nil ((1617 . 1618)) nil (25944 50679 544012 0) 0 nil])
([nil nil ((1616 . 1618) (t 25944 50679 564656 105000)) nil (25944 50689 876373 0) 0 nil])
([nil nil ((1617 . 1618)) nil (25944 50689 876369 0) 0 nil])
([nil nil ((1621 . 1626) (t 25944 50689 897073 531000)) nil (25944 50741 472209 0) 0 nil])
([nil nil ((1626 . 1629)) nil (25944 50741 472208 0) 0 nil])
([nil nil ((1626 . 1631) (#("sta" 0 3 (fontified nil)) . 1626) (1626 . 1629) (#("state" 0 5 (fontified nil)) . -1626) (1626 . 1631) (#("sta" 0 3 (fontified t)) . -1626) (undo-tree-id7932 . -3) (undo-tree-id7933 . -1) (undo-tree-id7934 . -1) (undo-tree-id7935 . -2) (undo-tree-id7936 . -2) (undo-tree-id7937 . -3) (undo-tree-id7938 . -3) 1629) nil (25944 50741 472206 0) 0 nil])
([nil nil ((1631 . 1634)) nil (25944 50741 472197 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1632) (undo-tree-id7912 . -1) (undo-tree-id7913 . -1) (undo-tree-id7914 . -1) (undo-tree-id7915 . -1) (undo-tree-id7916 . -1) (undo-tree-id7917 . -1) (undo-tree-id7918 . -1) (undo-tree-id7919 . -1) (undo-tree-id7920 . -1) (undo-tree-id7921 . -1) (undo-tree-id7922 . -1) (undo-tree-id7923 . -1) (undo-tree-id7924 . -1) (undo-tree-id7925 . -1) (#("n" 0 1 (fontified t)) . -1633) (undo-tree-id7926 . -1) (undo-tree-id7927 . -1) (undo-tree-id7928 . -1) (undo-tree-id7929 . -1) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) 1634) nil (25944 50741 472195 0) 0 nil])
([nil nil ((1632 . 1633)) nil (25944 50741 472174 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1632) (undo-tree-id7906 . -1) (undo-tree-id7907 . -1) (undo-tree-id7908 . -1) (undo-tree-id7909 . -1) (undo-tree-id7910 . -1) (undo-tree-id7911 . -1) 1633) nil (25944 50741 472173 0) 0 nil])
([nil nil ((#("    state." 0 4 (fontified t) 4 10 (fontified t)) . 1622) (undo-tree-id7859 . -4) (undo-tree-id7860 . -4) (undo-tree-id7861 . -4) (undo-tree-id7862 . -4) (undo-tree-id7863 . -4) (undo-tree-id7864 . -4) (undo-tree-id7865 . -4) (undo-tree-id7866 . -4) (undo-tree-id7867 . -4) (undo-tree-id7868 . -4) (undo-tree-id7869 . -9) (undo-tree-id7870 . -9) (undo-tree-id7871 . -9) (undo-tree-id7872 . -9) (undo-tree-id7873 . -9) (undo-tree-id7874 . -9) (undo-tree-id7875 . -9) (undo-tree-id7876 . -9) (undo-tree-id7877 . -9) (undo-tree-id7878 . -9) (undo-tree-id7879 . -10) (undo-tree-id7880 . -10) (undo-tree-id7881 . -10) (undo-tree-id7882 . -10) (undo-tree-id7883 . -10) (undo-tree-id7884 . -10) (undo-tree-id7885 . -10) (undo-tree-id7886 . -10) (undo-tree-id7887 . -10) (undo-tree-id7888 . -10) (undo-tree-id7889 . -10) (undo-tree-id7890 . -10) (undo-tree-id7891 . -10) (undo-tree-id7892 . -10) (undo-tree-id7893 . -10) (undo-tree-id7894 . -10) (undo-tree-id7895 . -10) (undo-tree-id7896 . -10) (undo-tree-id7897 . -10) (undo-tree-id7898 . -10) (undo-tree-id7899 . -10) (undo-tree-id7900 . -10) (undo-tree-id7901 . -10) (undo-tree-id7902 . -10) (undo-tree-id7903 . -10) (undo-tree-id7904 . -10) (undo-tree-id7905 . -10)) nil (25944 50741 472164 0) 0 nil])
([nil nil ((1622 . 1623)) nil (25944 50741 472114 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -1622) (undo-tree-id7855 . -1) (undo-tree-id7856 . -1) (undo-tree-id7857 . -1) (undo-tree-id7858 . -1) 1623) nil (25944 50741 472113 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1622) (undo-tree-id7853 . 1) (undo-tree-id7854 . -1)) nil (25944 50741 472108 0) 0 nil])
([nil nil ((1621 . 1626)) nil (25944 50741 472105 0) 0 nil])
([nil nil ((1626 . 1628)) nil (25944 50741 472104 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1631 1636 nil nil nil t #s(yas--exit 1637 nil))) #s(yas--exit 1637 nil) 136 nil #s(yas--field 1 1631 1636 nil nil nil t #s(yas--exit 1637 nil)) nil nil)) (1626 . 1633) (#("drop(${1:x})$0" 0 14 (fontified nil)) . 1626) (1626 . 1640) (#("dr" 0 2 (fontified nil)) . 1626) (1626 . 1628) (#("drop(â€¦)" 0 7 (fontified nil)) . -1626) (1626 . 1633) (#("dr" 0 2 (fontified t)) . -1626) (undo-tree-id7843 . -1) (undo-tree-id7844 . -2) (undo-tree-id7845 . -1) (undo-tree-id7846 . -1) (undo-tree-id7847 . -1) (undo-tree-id7848 . -1) (undo-tree-id7849 . -2) (undo-tree-id7850 . -2) (undo-tree-id7851 . -2) (undo-tree-id7852 . -2) 1628) nil (25944 50741 472102 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified nil)) . 1632) (undo-tree-id7842 . -1) (1631 . 1632)) nil (25944 50741 472088 0) 0 nil])
([nil nil ((1631 . 1636) (#("s" 0 1 (fontified nil)) . 1631) (undo-tree-id7832 . -1) (1631 . 1632) (#("state" 0 5 (fontified nil)) . -1631) (undo-tree-id7833 . -5) (1631 . 1636) (#("s" 0 1 (fontified t)) . -1631) (undo-tree-id7834 . -1) (undo-tree-id7835 . -1) (undo-tree-id7836 . -1) (undo-tree-id7837 . -1) (undo-tree-id7838 . -1) (undo-tree-id7839 . -1) (undo-tree-id7840 . -1) (undo-tree-id7841 . -1) 1632) nil (25944 50741 472084 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1626 1637 #s(yas--snippet nil (#s(yas--field 1 1631 1636 nil nil nil t #s(yas--exit 1637 nil))) #s(yas--exit 1637 nil) 136 nil #s(yas--field 1 1631 1636 nil nil nil t #s(yas--exit 1637 nil)) nil nil))) nil (25944 50741 472065 0) 0 nil])
([nil nil ((1637 . 1638)) nil (25944 50741 472059 0) 0 nil])
([nil nil ((1949 . 1954) (t 25944 50741 493045 672000)) nil (25944 50803 306408 0) 0 nil])
([nil nil ((1954 . 1963)) nil (25944 50803 306407 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1961 1966 #s(yas--snippet nil nil #s(yas--exit 1965 nil) 137 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1965 nil) 137 nil nil nil nil)) (1961 . 1966) (#("Arc<$0>" 0 7 (fontified nil)) . 1961) (1961 . 1968) (#("Ar" 0 2 (fontified nil)) . 1961) (1961 . 1963) (#("Arc<â€¦>" 0 6 (fontified nil)) . -1961) (1961 . 1967) (#("Ar" 0 2 (face font-lock-type-face fontified t)) . -1961) (undo-tree-id7955 . -2) (undo-tree-id7956 . -1) (undo-tree-id7957 . -2) (undo-tree-id7958 . -2) 1963) nil (25944 50803 306404 0) 0 nil])
([nil nil ((1965 . 1967)) nil (25944 50803 306397 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1965 1972 #s(yas--snippet nil nil #s(yas--exit 1971 nil) 138 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1971 nil) 138 nil nil nil nil)) (1965 . 1972) (#("Mutex<$0>" 0 9 (fontified nil)) . 1965) (1965 . 1974) (#("Mu" 0 2 (fontified nil)) . 1965) (1965 . 1967) (#("Mutex<â€¦>" 0 8 (fontified nil)) . -1965) (1965 . 1973) (#("Mu" 0 2 (face font-lock-type-face fontified t)) . -1965) (undo-tree-id7945 . -2) (undo-tree-id7946 . -2) (undo-tree-id7947 . -1) (undo-tree-id7948 . -1) (undo-tree-id7949 . -1) (undo-tree-id7950 . -1) (undo-tree-id7951 . -1) (undo-tree-id7952 . -2) (undo-tree-id7953 . -2) (undo-tree-id7954 . -2) 1967) nil (25944 50803 306394 0) 0 nil])
([nil nil ((1971 . 1974)) nil (25944 50803 306380 0) 0 nil])
([nil nil ((1971 . 1976) (#("Sta" 0 3 (fontified nil)) . 1971) (1971 . 1974) (#("State" 0 5 (fontified nil)) . -1971) (1971 . 1976) (#("Sta" 0 3 (face font-lock-type-face fontified t)) . -1971) (undo-tree-id7939 . -3) (undo-tree-id7940 . -3) (undo-tree-id7941 . -1) (undo-tree-id7942 . -1) (undo-tree-id7943 . -2) (undo-tree-id7944 . -3) 1974) nil (25944 50803 306375 0) 0 nil])
([nil nil ((3148 . 3153) (t 25944 50803 327348 730000)) nil (25944 50832 52023 0) 0 nil])
([nil nil ((3153 . 3161)) nil (25944 50832 52022 0) 0 nil])
([nil nil ((3161 . 3167)) nil (25944 50832 52021 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3166) (undo-tree-id8017 . -1) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) 3167) nil (25944 50832 52020 0) 0 nil])
([nil nil ((3166 . 3169)) nil (25944 50832 52015 0) 0 nil])
([nil nil ((#("Arc::new(Mutex::new(State{keys: vec![]}))" 0 3 (face font-lock-type-face fontified t) 3 5 (fontified t) 5 9 (fontified t) 9 14 (face font-lock-type-face fontified t) 14 16 (fontified t) 16 20 (fontified t) 20 25 (face font-lock-type-face fontified t) 25 26 (fontified t) 26 30 (face font-lock-variable-name-face fontified t) 30 32 (fontified t) 32 36 (face font-lock-preprocessor-face fontified t) 36 38 (fontified t) 38 39 (fontified t) 39 41 (fontified t)) . 3227) (undo-tree-id7968 . -41) (undo-tree-id7969 . -41) (undo-tree-id7970 . -1) (undo-tree-id7971 . -3) (undo-tree-id7972 . -5) (undo-tree-id7973 . -6) (undo-tree-id7974 . -7) (undo-tree-id7975 . -9) (undo-tree-id7976 . -10) (undo-tree-id7977 . -11) (undo-tree-id7978 . -12) (undo-tree-id7979 . -13) (undo-tree-id7980 . -14) (undo-tree-id7981 . -15) (undo-tree-id7982 . -16) (undo-tree-id7983 . -17) (undo-tree-id7984 . -18) (undo-tree-id7985 . -20) (undo-tree-id7986 . -21) (undo-tree-id7987 . -23) (undo-tree-id7988 . -24) (undo-tree-id7989 . -26) (undo-tree-id7990 . -27) (undo-tree-id7991 . -28) (undo-tree-id7992 . -30) (undo-tree-id7993 . -31) (undo-tree-id7994 . -32) (undo-tree-id7995 . -33) (undo-tree-id7996 . -34) (undo-tree-id7997 . -35) (undo-tree-id7998 . -41) (undo-tree-id7999 . -41) (undo-tree-id8000 . -41) (undo-tree-id8001 . -41) (undo-tree-id8002 . -41) (undo-tree-id8003 . -41) (undo-tree-id8004 . -41) (undo-tree-id8005 . -41) (undo-tree-id8006 . -41) (undo-tree-id8007 . -41) (undo-tree-id8008 . -41) (undo-tree-id8009 . -41) (undo-tree-id8010 . -41) (undo-tree-id8011 . -41) (undo-tree-id8012 . -41) (undo-tree-id8013 . -41) (undo-tree-id8014 . -41) (undo-tree-id8015 . -41) (undo-tree-id8016 . -41) 3268) nil (25944 50832 52012 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3209 . 3210) (nil fontified nil 3208 . 3210) (nil fontified nil 3207 . 3208) (nil fontified nil 3205 . 3207) (nil fontified nil 3201 . 3205) (nil fontified nil 3199 . 3201) (nil fontified nil 3195 . 3199) (nil fontified nil 3194 . 3195) (nil fontified nil 3189 . 3194) (nil fontified nil 3185 . 3189) (nil fontified nil 3183 . 3185) (nil fontified nil 3178 . 3183) (nil fontified nil 3174 . 3178) (nil fontified nil 3172 . 3174) (nil fontified nil 3169 . 3172) (3169 . 3210)) nil (25944 50832 51959 0) 0 nil])
([nil nil ((3210 . 3211)) nil (25944 50832 51954 0) 0 nil])
([nil nil ((3269 . 3270)) nil (25944 50832 51953 0) 0 nil])
([nil nil ((3269 . 3274) (#("s" 0 1 (fontified nil)) . 3269) (3269 . 3270) (#("state" 0 5 (fontified nil)) . -3269) (3269 . 3274) (#("s" 0 1 (fontified t)) . -3269) (undo-tree-id7964 . -1) (undo-tree-id7965 . -1) (undo-tree-id7966 . -1) (undo-tree-id7967 . -1) 3270) nil (25944 50832 51951 0) 0 nil])
([nil nil ((3274 . 3276)) nil (25944 50832 51943 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3275 3282 #s(yas--snippet nil nil #s(yas--exit 3282 nil) 139 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3282 nil) 139 nil nil nil nil)) (3275 . 3282) (#("clone()$0" 0 9 (fontified nil)) . 3275) (3275 . 3284) (#("c" 0 1 (fontified nil)) . 3275) (3275 . 3276) (#("clone() (as Clone)" 0 18 (fontified nil)) . -3275) (3275 . 3293) (#("c" 0 1 (fontified t)) . -3275) (undo-tree-id7959 . -1) (undo-tree-id7960 . -1) (undo-tree-id7961 . -1) (undo-tree-id7962 . -1) (undo-tree-id7963 . -1) 3276) nil (25944 50832 51939 0) 0 nil])
([nil nil ((3493 . 3496) (t 25944 50832 73276 427000)) nil (25944 50839 40110 0) 0 nil])
([nil nil ((3495 . 3500) (#("s" 0 1 (fontified nil)) . 3495) (3495 . 3496) (#("state" 0 5 (fontified nil)) . -3495) (3495 . 3500) (#("s" 0 1 (fontified t)) . -3495) (undo-tree-id8026 . -1) (undo-tree-id8027 . -1) (undo-tree-id8028 . -1) (undo-tree-id8029 . -1) (undo-tree-id8030 . -1) (undo-tree-id8031 . -1) (undo-tree-id8032 . -1) 3496) nil (25944 50839 40108 0) 0 nil])
([nil nil ((3500 . 3502)) nil (25944 50839 40098 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3501 3508 #s(yas--snippet nil nil #s(yas--exit 3508 nil) 140 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3508 nil) 140 nil nil nil nil)) (3501 . 3508) (#("clone()$0" 0 9 (fontified nil)) . 3501) (3501 . 3510) (#("c" 0 1 (fontified nil)) . 3501) (3501 . 3502) (#("clone() (as Clone)" 0 18 (fontified nil)) . -3501) (3501 . 3519) (#("c" 0 1 (fontified t)) . -3501) (undo-tree-id8020 . -1) (undo-tree-id8021 . -1) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) (undo-tree-id8024 . -1) (undo-tree-id8025 . -1) 3502) nil (25944 50839 40094 0) 0 nil])
([nil nil ((#("mut " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -3157) (undo-tree-id8033 . -4) (undo-tree-id8034 . -4) (undo-tree-id8035 . -4) (undo-tree-id8036 . -4) (undo-tree-id8037 . -4) (undo-tree-id8038 . -4) (undo-tree-id8039 . -4) (undo-tree-id8040 . -4) (undo-tree-id8041 . -4) (undo-tree-id8042 . -4) (undo-tree-id8043 . -4) (undo-tree-id8044 . -4) (undo-tree-id8045 . -4) (undo-tree-id8046 . -4) (undo-tree-id8047 . -4) (undo-tree-id8048 . -4) (undo-tree-id8049 . -4) (undo-tree-id8050 . -4) (undo-tree-id8051 . -4) (undo-tree-id8052 . -4) (undo-tree-id8053 . -4) (undo-tree-id8054 . -4) 3161 (t 25944 50839 61709 80000)) nil (25944 50844 373948 0) 0 nil])
([nil nil ((2721 . 2729) (t 25944 50844 395058 919000)) nil (25944 50878 745672 0) 0 nil])
([nil nil ((2729 . 2733)) nil (25944 50878 745670 0) 0 nil])
([nil nil ((#("let " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -2729) (undo-tree-id8055 . -4) (undo-tree-id8056 . -1) (undo-tree-id8057 . -2) (undo-tree-id8058 . -2) (undo-tree-id8059 . -3) (undo-tree-id8060 . -3) (undo-tree-id8061 . -3) (undo-tree-id8062 . -3) (undo-tree-id8063 . -4) (undo-tree-id8064 . -4) (undo-tree-id8065 . -4) (undo-tree-id8066 . -4) 2733) nil (25944 50878 745666 0) 0 nil])
([nil nil ((999 . 1000) (t 25944 50878 766976 758000)) nil (25944 51735 603232 0) 0 nil])
([nil nil ((1000 . 1005)) nil (25944 51735 603227 0) 0 nil])
([nil nil ((1005 . 1016) (t 25944 51735 625047 178000)) nil (25944 51791 144384 0) 0 nil])
([nil nil ((#("key" 0 3 (fontified t)) . -1013) (undo-tree-id8138 . -3) (undo-tree-id8139 . -3) (undo-tree-id8140 . -1) (undo-tree-id8141 . -1) (undo-tree-id8142 . -2) (undo-tree-id8143 . -2) (undo-tree-id8144 . -3) (undo-tree-id8145 . -3) (undo-tree-id8146 . -3) (undo-tree-id8147 . -3) (undo-tree-id8148 . -3) (undo-tree-id8149 . -3) 1016) nil (25944 51791 144382 0) 0 nil])
([nil nil ((#("monitor_" 0 8 (fontified t)) . -1005) (undo-tree-id8067 . -8) (undo-tree-id8068 . -8) (undo-tree-id8069 . -1) (undo-tree-id8070 . -2) (undo-tree-id8071 . -2) (undo-tree-id8072 . -2) (undo-tree-id8073 . -2) (undo-tree-id8074 . -2) (undo-tree-id8075 . -2) (undo-tree-id8076 . -2) (undo-tree-id8077 . -2) (undo-tree-id8078 . -3) (undo-tree-id8079 . -4) (undo-tree-id8080 . -4) (undo-tree-id8081 . -4) (undo-tree-id8082 . -4) (undo-tree-id8083 . -4) (undo-tree-id8084 . -4) (undo-tree-id8085 . -4) (undo-tree-id8086 . -4) (undo-tree-id8087 . -4) (undo-tree-id8088 . -5) (undo-tree-id8089 . -5) (undo-tree-id8090 . -5) (undo-tree-id8091 . -5) (undo-tree-id8092 . -5) (undo-tree-id8093 . -5) (undo-tree-id8094 . -5) (undo-tree-id8095 . -5) (undo-tree-id8096 . -5) (undo-tree-id8097 . -6) (undo-tree-id8098 . -6) (undo-tree-id8099 . -7) (undo-tree-id8100 . -7) (undo-tree-id8101 . -7) (undo-tree-id8102 . -7) (undo-tree-id8103 . -7) (undo-tree-id8104 . -7) (undo-tree-id8105 . -7) (undo-tree-id8106 . -7) (undo-tree-id8107 . -7) (undo-tree-id8108 . -7) (undo-tree-id8109 . -7) (undo-tree-id8110 . -8) (undo-tree-id8111 . -8) (undo-tree-id8112 . -8) (undo-tree-id8113 . -8) (undo-tree-id8114 . -8) (undo-tree-id8115 . -8) (undo-tree-id8116 . -8) (undo-tree-id8117 . -8) (undo-tree-id8118 . -8) (undo-tree-id8119 . -8) (undo-tree-id8120 . -8) (undo-tree-id8121 . -8) (undo-tree-id8122 . -8) (undo-tree-id8123 . -8) (undo-tree-id8124 . -8) (undo-tree-id8125 . -8) (undo-tree-id8126 . -8) (undo-tree-id8127 . -8) (undo-tree-id8128 . -8) (undo-tree-id8129 . -8) (undo-tree-id8130 . -8) (undo-tree-id8131 . -8) (undo-tree-id8132 . -8) (undo-tree-id8133 . -8) (undo-tree-id8134 . -8) (undo-tree-id8135 . -8) (undo-tree-id8136 . -8) (undo-tree-id8137 . -8) 1013) nil (25944 51791 144366 0) 0 nil])
([nil nil ((1005 . 1015)) nil (25944 51791 144277 0) 0 nil])
([nil nil ((1015 . 1021)) nil (25944 51791 144273 0) 0 nil])
([nil nil ((1021 . 1022) (t 25944 51791 166807 995000)) nil (25944 51793 432973 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1021) (undo-tree-id8150 . -1) (undo-tree-id8151 . -1) (undo-tree-id8152 . -1) 1022) nil (25944 51793 432970 0) 0 nil])
([nil nil ((1021 . 1022)) nil (25944 51793 432955 0) 0 nil])
([nil nil ((3234 . 3238) (t 25944 51793 454514 920000)) nil (25944 51810 288818 0) 0 nil])
([nil nil ((3236 . 3247) (#("ke" 0 2 (fontified nil)) . 3236) (3236 . 3238) (#("key_monitor" 0 11 (fontified nil)) . -3236) (3236 . 3247) (#("ke" 0 2 (fontified t)) . -3236) (undo-tree-id8153 . -2) (undo-tree-id8154 . -2) (undo-tree-id8155 . -1) (undo-tree-id8156 . -1) (undo-tree-id8157 . -1) (undo-tree-id8158 . -2) (undo-tree-id8159 . -2) (undo-tree-id8160 . -2) (undo-tree-id8161 . -2) 3238) nil (25944 51810 288815 0) 0 nil])
([nil nil ((3247 . 3250)) nil (25944 51810 288791 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -3249) (undo-tree-id8183 . -1) (undo-tree-id8184 . -1) 3250 (t 25944 51810 310230 481000)) nil (25944 52791 708586 0) 0 nil])
([nil nil ((3249 . 3251)) nil (25944 52791 708583 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -3250) (undo-tree-id8181 . -1) (undo-tree-id8182 . -1) 3251) nil (25944 52791 708581 0) 0 nil])
([nil nil ((2204 . 2209)) nil (25944 52791 708578 0) 0 nil])
([nil nil ((2209 . 2221)) nil (25944 52791 708577 0) 0 nil])
([nil nil ((#("    let adc_data" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 16 (face font-lock-variable-name-face fontified t)) . 2205)) nil (25944 52791 708576 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2220 . 2221) (nil fontified nil 2213 . 2221) (nil fontified nil 2212 . 2213) (nil fontified nil 2209 . 2212) (nil fontified nil 2205 . 2209) (2205 . 2221)) nil (25944 52791 708575 0) 0 nil])
([nil nil ((2221 . 2226)) nil (25944 52791 708573 0) 0 nil])
([nil nil ((2225 . 2228)) nil (25944 52791 708572 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -2227) (undo-tree-id8173 . -1) (undo-tree-id8174 . -1) (undo-tree-id8175 . -1) (undo-tree-id8176 . -1) (undo-tree-id8177 . -1) (undo-tree-id8178 . -1) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) 2228) nil (25944 52791 708570 0) 0 nil])
([nil nil ((2227 . 2230)) nil (25944 52791 708561 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -2229) (undo-tree-id8162 . -1) (undo-tree-id8163 . -1) (undo-tree-id8164 . -1) (undo-tree-id8165 . -1) (undo-tree-id8166 . -1) (undo-tree-id8167 . -1) (undo-tree-id8168 . -1) (undo-tree-id8169 . -1) (undo-tree-id8170 . -1) (undo-tree-id8171 . -1) (undo-tree-id8172 . -1) 2230) nil (25944 52791 708558 0) 0 nil])
([nil nil ((2229 . 2231)) nil (25944 52791 708537 0) 0 nil])
([nil nil ((2232 . 2233)) nil (25944 52791 708533 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -2484) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (undo-tree-id8193 . -1) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) (undo-tree-id8196 . -1) 2485 (t 25944 52791 730339 562000)) nil (25944 52890 580083 0) 0 nil])
([nil nil ((2484 . 2485)) nil (25944 52890 580051 0) 0 nil])
([nil nil ((2657 . 2661) (t 25944 52890 602940 152000)) nil (25944 52923 163 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2840 . 2841) (nil fontified nil 2839 . 2841) (nil fontified nil 2835 . 2839) (nil fontified nil 2834 . 2835) (nil fontified nil 2833 . 2834) (nil fontified nil 2832 . 2833) (nil fontified nil 2831 . 2832) (nil fontified nil 2830 . 2831) (nil fontified nil 2823 . 2830) (nil fontified nil 2820 . 2823) (nil fontified nil 2819 . 2820) (nil fontified nil 2817 . 2819) (nil fontified nil 2793 . 2817) (nil fontified nil 2788 . 2793) (nil fontified nil 2787 . 2788) (nil fontified nil 2785 . 2787) (nil fontified nil 2784 . 2785) (nil fontified nil 2780 . 2784) (nil fontified nil 2779 . 2780) (nil fontified nil 2778 . 2779) (nil fontified nil 2777 . 2778) (nil fontified nil 2776 . 2777) (nil fontified nil 2775 . 2776) (nil fontified nil 2774 . 2775) (nil fontified nil 2772 . 2774) (nil fontified nil 2769 . 2772) (nil fontified nil 2768 . 2769) (nil fontified nil 2766 . 2768) (nil fontified nil 2741 . 2766) (nil fontified nil 2736 . 2741) (nil fontified nil 2735 . 2736) (nil fontified nil 2723 . 2735) (nil fontified nil 2721 . 2723) (nil fontified nil 2720 . 2721) (nil fontified nil 2719 . 2720) (nil fontified nil 2717 . 2719) (nil fontified nil 2681 . 2717) (nil fontified nil 2679 . 2681) (nil fontified nil 2669 . 2679) (nil fontified nil 2666 . 2669) (nil fontified nil 2662 . 2666) (nil fontified nil 2661 . 2662) (2661 . 2841)) nil (25944 52923 160 0) 0 nil])
([nil nil ((2846 . 2848) (#("    " 0 4 (fontified t)) . 2846) (2838 . 2843) (2797 . 2799) (#("    " 0 4 (fontified t)) . 2797) (2783 . 2788) (2774 . 2779) (2737 . 2739) (#("    " 0 4 (fontified t)) . 2737) (2716 . 2721) (#("	    " 0 1 (fontified t) 1 5 (fontified t)) . -2661) 2658) nil (25944 52923 147 0) 0 nil])
([nil nil ((2677 . 2678)) nil (25944 52923 143 0) 0 nil])
([nil nil ((2678 . 2680)) nil (25944 52923 142 0) 0 nil])
([nil nil ((2677 . 2683) (#("hanrecvbuf" 0 3 (fontified nil) 3 10 (fontified nil)) . 2677) (undo-tree-id8202 . 7) (2677 . 2680) (#("handle" 0 6 (fontified nil)) . -2677) (2677 . 2683) (#("han" 0 3 (fontified t)) . -2677) (undo-tree-id8203 . -3) (undo-tree-id8204 . -1) (undo-tree-id8205 . -2) (undo-tree-id8206 . -2) (undo-tree-id8207 . -3) (undo-tree-id8208 . -3) (undo-tree-id8209 . -3) (undo-tree-id8210 . -3) 2680) nil (25944 52923 140 0) 0 nil])
([nil nil ((2683 . 2685)) nil (25944 52923 128 0) 0 nil])
([nil nil ((2684 . 2692) (#("r" 0 1 (fontified nil)) . 2684) (2684 . 2685) (#("recv_buf" 0 8 (fontified nil)) . -2684) (2684 . 2692) (#("r" 0 1 (fontified t)) . -2684) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) 2685) nil (25944 52923 123 0) 0 nil])
([nil nil ((#("data" 0 4 (fontified t)) . -2747) (undo-tree-id8238 . -4) (undo-tree-id8239 . -4) (undo-tree-id8240 . -4) (undo-tree-id8241 . -4) (undo-tree-id8242 . -4) (undo-tree-id8243 . -4) (undo-tree-id8244 . -4) (undo-tree-id8245 . -4) (undo-tree-id8246 . -4) (undo-tree-id8247 . -4) (undo-tree-id8248 . -4) (undo-tree-id8249 . -4) 2751 (t 25944 52923 22125 760000)) nil (25944 52931 396176 0) 0 nil])
([nil nil ((2747 . 2749)) nil (25944 52931 396162 0) 0 nil])
([nil nil ((2747 . 2755) (#("ad" 0 2 (fontified nil)) . 2747) (2747 . 2749) (#("adc_data" 0 8 (fontified nil)) . -2747) (2747 . 2755) (#("ad" 0 2 (fontified t)) . -2747) (undo-tree-id8229 . -2) (undo-tree-id8230 . -2) (undo-tree-id8231 . -1) (undo-tree-id8232 . -2) (undo-tree-id8233 . -2) (undo-tree-id8234 . -2) (undo-tree-id8235 . -2) (undo-tree-id8236 . -2) (undo-tree-id8237 . -2) 2749) nil (25944 52931 396160 0) 0 nil])
([nil nil ((#("data" 0 4 (fontified t)) . -2811) (undo-tree-id8215 . -4) (undo-tree-id8216 . -4) (undo-tree-id8217 . -4) (undo-tree-id8218 . -4) (undo-tree-id8219 . -4) (undo-tree-id8220 . -4) (undo-tree-id8221 . -4) (undo-tree-id8222 . -4) (undo-tree-id8223 . -4) (undo-tree-id8224 . -4) (undo-tree-id8225 . -4) (undo-tree-id8226 . -4) (undo-tree-id8227 . -4) (undo-tree-id8228 . -4) 2815) nil (25944 52931 396148 0) 0 nil])
([nil nil ((2811 . 2813)) nil (25944 52931 396133 0) 0 nil])
([nil nil ((2811 . 2819) (#("ad" 0 2 (fontified nil)) . 2811) (2811 . 2813) (#("adc_data" 0 8 (fontified nil)) . -2811) (2811 . 2819) (#("ad" 0 2 (fontified t)) . -2811) (undo-tree-id8211 . -2) (undo-tree-id8212 . -1) (undo-tree-id8213 . -2) (undo-tree-id8214 . -2) 2813) nil (25944 52931 396128 0) 0 nil])
([nil nil ((2213 . 2217) (t 25944 52931 418384 175000)) nil (25944 52940 964652 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2701) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (undo-tree-id8290 . -1) (undo-tree-id8291 . -1) (undo-tree-id8292 . -1) (undo-tree-id8293 . -1) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (#("s" 0 1 (fontified t)) . -2702) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (undo-tree-id8302 . -1) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) (undo-tree-id8309 . -1) (undo-tree-id8310 . -1) (undo-tree-id8311 . -1) (undo-tree-id8312 . -1) 2703 (t 25944 52940 986748 211000)) nil (25944 52951 934021 0) 0 nil])
([nil nil ((2701 . 2702)) nil (25944 52951 933985 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2700) (undo-tree-id8250 . -1) (undo-tree-id8251 . -1) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) (undo-tree-id8260 . -1) (undo-tree-id8261 . -1) (undo-tree-id8262 . -1) (undo-tree-id8263 . -1) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (#("1" 0 1 (fontified t)) . -2701) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) 2702) nil (25944 52951 933982 0) 0 nil])
([nil nil ((2700 . 2702)) nil (25944 52951 933940 0) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . -2234) (undo-tree-id8342 . -1) (undo-tree-id8343 . -1) 2235 (t 25944 52951 956262 112000)) nil (25944 53010 540622 0) 0 nil])
([nil nil ((2234 . 2236)) nil (25944 53010 540619 0) 0 nil])
([nil nil ((2765 . 2768)) nil (25944 53010 540618 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2766) (undo-tree-id8340 . -1) (#("e" 0 1 (fontified t)) . -2767) (undo-tree-id8341 . -1) 2768) nil (25944 53010 540617 0) 0 nil])
([nil nil ((2766 . 2770)) nil (25944 53010 540613 0) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -2765) (undo-tree-id8334 . -1) (undo-tree-id8335 . -1) (#("h" 0 1 (fontified t)) . -2766) (undo-tree-id8336 . -1) (#("a" 0 1 (fontified t)) . -2767) (undo-tree-id8337 . -1) (#("n" 0 1 (fontified t)) . -2768) (undo-tree-id8338 . -1) (#("d" 0 1 (fontified t)) . -2769) (undo-tree-id8339 . -1) 2770) nil (25944 53010 540611 0) 0 nil])
([nil nil ((2662 . 2666)) nil (25944 53010 540603 0) 0 nil])
([nil nil ((2666 . 2667)) nil (25944 53010 540602 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -2666) (undo-tree-id8333 . -1) 2667) nil (25944 53010 540601 0) 0 nil])
([nil nil ((2666 . 2682)) nil (25944 53010 540598 0) 0 nil])
([nil nil ((2682 . 2689)) nil (25944 53010 540597 0) 0 nil])
([nil nil ((2686 . 2692) (#("han" 0 3 (fontified nil)) . 2686) (2686 . 2689) (#("handle" 0 6 (fontified nil)) . -2686) (2686 . 2692) (#("han" 0 3 (fontified t)) . -2686) (undo-tree-id8327 . -3) (undo-tree-id8328 . -1) (undo-tree-id8329 . -2) (undo-tree-id8330 . -2) (undo-tree-id8331 . -3) (undo-tree-id8332 . -3) 2689) nil (25944 53010 540596 0) 0 nil])
([nil nil ((2692 . 2695)) nil (25944 53010 540587 0) 0 nil])
([nil nil ((2693 . 2701) (#("re" 0 2 (fontified nil)) . 2693) (2693 . 2695) (#("recv_buf" 0 8 (fontified nil)) . -2693) (2693 . 2701) (#("re" 0 2 (fontified t)) . -2693) (undo-tree-id8320 . -2) (undo-tree-id8321 . -1) (undo-tree-id8322 . -1) (undo-tree-id8323 . -2) (undo-tree-id8324 . -2) (undo-tree-id8325 . -2) (undo-tree-id8326 . -2) 2695) nil (25944 53010 540585 0) 0 nil])
([nil nil ((2701 . 2702)) nil (25944 53010 540575 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2701) (undo-tree-id8313 . -1) (undo-tree-id8314 . -1) (undo-tree-id8315 . -1) (undo-tree-id8316 . -1) (undo-tree-id8317 . -1) (undo-tree-id8318 . -1) (undo-tree-id8319 . -1) 2702) nil (25944 53010 540573 0) 0 nil])
([nil nil ((2701 . 2703)) nil (25944 53010 540558 0) 0 nil])
([nil nil ((2702 . 2703)) nil (25944 53010 540557 0) 0 nil])
([nil nil ((2704 . 2705)) nil (25944 53010 540553 0) 0 nil])
([nil nil ((2808 . 2809) (t 25944 53010 563190 730000)) nil (25944 53033 410864 0) 0 nil])
([nil nil ((2809 . 2812)) nil (25944 53033 410863 0) 0 nil])
([nil nil ((2809 . 2817) (#("adc" 0 3 (fontified nil)) . 2809) (2809 . 2812) (#("adc_data" 0 8 (fontified nil)) . -2809) (2809 . 2817) (#("adc" 0 3 (fontified t)) . -2809) (undo-tree-id8388 . -3) (undo-tree-id8389 . -3) (undo-tree-id8390 . -1) (undo-tree-id8391 . -2) (undo-tree-id8392 . -2) (undo-tree-id8393 . -3) (undo-tree-id8394 . -3) (undo-tree-id8395 . -3) (undo-tree-id8396 . -3) (undo-tree-id8397 . -3) (undo-tree-id8398 . -3) 2812) nil (25944 53033 410860 0) 0 nil])
([nil nil ((2817 . 2818)) nil (25944 53033 410846 0) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -2817) (undo-tree-id8379 . -1) (undo-tree-id8380 . -1) (undo-tree-id8381 . -1) (undo-tree-id8382 . -1) (undo-tree-id8383 . -1) (undo-tree-id8384 . -1) (undo-tree-id8385 . -1) (undo-tree-id8386 . -1) (undo-tree-id8387 . -1) 2818) nil (25944 53033 410845 0) 0 nil])
([nil nil ((2817 . 2818)) nil (25944 53033 410832 0) 0 nil])
([nil nil ((2809 . 2822) (#("adc_data_" 0 9 (fontified nil)) . 2809) (2809 . 2818) (#("adc_data_page" 0 13 (fontified nil)) . -2809) (2809 . 2822) (#("adc_data_" 0 9 (fontified t)) . -2809) (undo-tree-id8352 . -9) (undo-tree-id8353 . -9) (undo-tree-id8354 . -8) (undo-tree-id8355 . -8) (undo-tree-id8356 . -8) (undo-tree-id8357 . -8) (undo-tree-id8358 . -8) (undo-tree-id8359 . -8) (undo-tree-id8360 . -8) (undo-tree-id8361 . -8) (undo-tree-id8362 . -8) (undo-tree-id8363 . -8) (undo-tree-id8364 . -8) (undo-tree-id8365 . -8) (undo-tree-id8366 . -8) (undo-tree-id8367 . -8) (undo-tree-id8368 . -8) (undo-tree-id8369 . -8) (undo-tree-id8370 . -8) (undo-tree-id8371 . -8) (undo-tree-id8372 . -8) (undo-tree-id8373 . -8) (undo-tree-id8374 . -8) (undo-tree-id8375 . -8) (undo-tree-id8376 . -9) (undo-tree-id8377 . -9) (undo-tree-id8378 . -9) 2818) nil (25944 53033 410830 0) 0 nil])
([nil nil ((2822 . 2824)) nil (25944 53033 410797 0) 0 nil])
([nil nil ((2808 . 2809)) nil (25944 53033 410796 0) 0 nil])
([nil nil ((2808 . 2809)) nil (25944 53033 410795 0) 0 nil])
([nil nil ((2890 . 2896)) nil (25944 53033 410794 0) 0 nil])
([nil nil ((2893 . 2906) (#("adc" 0 3 (fontified nil)) . 2893) (2893 . 2896) (#("adc_data_page" 0 13 (fontified nil)) . -2893) (2893 . 2906) (#("adc" 0 3 (fontified t)) . -2893) (undo-tree-id8344 . -3) (undo-tree-id8345 . -1) (undo-tree-id8346 . -2) (undo-tree-id8347 . -2) (undo-tree-id8348 . -3) (undo-tree-id8349 . -3) (undo-tree-id8350 . -3) (undo-tree-id8351 . -3) 2896) nil (25944 53033 410791 0) 0 nil])
([nil nil ((2906 . 2908)) nil (25944 53033 410771 0) 0 nil])
([nil nil ((2683 . 2684) (t 25944 53033 433370 90000)) nil (25944 53050 801663 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -2683) (undo-tree-id8410 . -1) (undo-tree-id8411 . -1) (undo-tree-id8412 . -1) (undo-tree-id8413 . -1) (undo-tree-id8414 . -1) (undo-tree-id8415 . -1) (undo-tree-id8416 . -1) (undo-tree-id8417 . -1) 2684) nil (25944 53050 801662 0) 0 nil])
([nil nil ((2704 . 2705)) nil (25944 53050 801652 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2704) (undo-tree-id8405 . -1) (undo-tree-id8406 . -1) (undo-tree-id8407 . -1) (undo-tree-id8408 . -1) (undo-tree-id8409 . -1) 2705) nil (25944 53050 801651 0) 0 nil])
([nil nil ((2704 . 2710)) nil (25944 53050 801644 0) 0 nil])
([nil nil ((2708 . 2713) (#("us" 0 2 (fontified nil)) . 2708) (2708 . 2710) (#("usize" 0 5 (fontified nil)) . -2708) (2708 . 2713) (#("us" 0 2 (fontified t)) . -2708) (undo-tree-id8399 . -2) (undo-tree-id8400 . -1) (undo-tree-id8401 . -2) (undo-tree-id8402 . -2) (undo-tree-id8403 . -2) (undo-tree-id8404 . -2) 2710) nil (25944 53050 801640 0) 0 nil])
([nil nil ((#("u32" 0 3 (face font-lock-type-face fontified t)) . -3158) (undo-tree-id9051 . -3) (undo-tree-id9052 . -3) (undo-tree-id9053 . -3) (undo-tree-id9054 . -3) (undo-tree-id9055 . -3) (undo-tree-id9056 . -3) (undo-tree-id9057 . -3) (undo-tree-id9058 . -3) (undo-tree-id9059 . -3) (undo-tree-id9060 . -3) (undo-tree-id9061 . -3) (undo-tree-id9062 . -3) 3161 (t 25944 53050 825410 574000)) nil (25944 53073 698592 0) 0 nil])
([nil nil ((#("as " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -3155) (undo-tree-id9034 . -3) (undo-tree-id9035 . -3) (undo-tree-id9036 . -3) (undo-tree-id9037 . -3) (undo-tree-id9038 . -3) (undo-tree-id9039 . -3) (undo-tree-id9040 . -3) (undo-tree-id9041 . -3) (undo-tree-id9042 . -3) (undo-tree-id9043 . -3) (undo-tree-id9044 . -3) (undo-tree-id9045 . -3) (undo-tree-id9046 . -3) (undo-tree-id9047 . -3) (undo-tree-id9048 . -3) (undo-tree-id9049 . -3) (undo-tree-id9050 . -3) 3158) nil (25944 53073 698578 0) 0 nil])
([nil nil ((#("2] " 0 1 (fontified t) 1 3 (fontified t)) . -3152) (undo-tree-id9012 . -3) (undo-tree-id9013 . -3) (undo-tree-id9014 . -3) (undo-tree-id9015 . -3) (undo-tree-id9016 . -3) (undo-tree-id9017 . -3) (undo-tree-id9018 . -3) (undo-tree-id9019 . -3) (undo-tree-id9020 . -3) (undo-tree-id9021 . -3) (undo-tree-id9022 . -3) (undo-tree-id9023 . -3) (undo-tree-id9024 . -3) (undo-tree-id9025 . -3) (undo-tree-id9026 . -3) (undo-tree-id9027 . -3) (undo-tree-id9028 . -3) (undo-tree-id9029 . -3) (undo-tree-id9030 . -3) (undo-tree-id9031 . -3) (undo-tree-id9032 . -3) (undo-tree-id9033 . -3) 3155) nil (25944 53073 698560 0) 0 nil])
([nil nil ((#("buf[" 0 4 (fontified t)) . -3148) (undo-tree-id8983 . -4) (undo-tree-id8984 . -4) (undo-tree-id8985 . -4) (undo-tree-id8986 . -4) (undo-tree-id8987 . -4) (undo-tree-id8988 . -4) (undo-tree-id8989 . -4) (undo-tree-id8990 . -4) (undo-tree-id8991 . -4) (undo-tree-id8992 . -4) (undo-tree-id8993 . -4) (undo-tree-id8994 . -4) (undo-tree-id8995 . -4) (undo-tree-id8996 . -4) (undo-tree-id8997 . -4) (undo-tree-id8998 . -4) (undo-tree-id8999 . -4) (undo-tree-id9000 . -4) (undo-tree-id9001 . -4) (undo-tree-id9002 . -4) (undo-tree-id9003 . -4) (undo-tree-id9004 . -4) (undo-tree-id9005 . -4) (undo-tree-id9006 . -4) (undo-tree-id9007 . -4) (undo-tree-id9008 . -4) (undo-tree-id9009 . -4) (undo-tree-id9010 . -4) (undo-tree-id9011 . -4) 3152) nil (25944 53073 698537 0) 0 nil])
([nil nil ((#("recv_" 0 5 (fontified t)) . -3143) (undo-tree-id8951 . -5) (undo-tree-id8952 . -5) (undo-tree-id8953 . -5) (undo-tree-id8954 . -5) (undo-tree-id8955 . -5) (undo-tree-id8956 . -5) (undo-tree-id8957 . -5) (undo-tree-id8958 . -5) (undo-tree-id8959 . -5) (undo-tree-id8960 . -5) (undo-tree-id8961 . -5) (undo-tree-id8962 . -5) (undo-tree-id8963 . -5) (undo-tree-id8964 . -5) (undo-tree-id8965 . -5) (undo-tree-id8966 . -5) (undo-tree-id8967 . -5) (undo-tree-id8968 . -5) (undo-tree-id8969 . -5) (undo-tree-id8970 . -5) (undo-tree-id8971 . -5) (undo-tree-id8972 . -5) (undo-tree-id8973 . -5) (undo-tree-id8974 . -5) (undo-tree-id8975 . -5) (undo-tree-id8976 . -5) (undo-tree-id8977 . -5) (undo-tree-id8978 . -5) (undo-tree-id8979 . -5) (undo-tree-id8980 . -5) (undo-tree-id8981 . -5) (undo-tree-id8982 . -5) 3148) nil (25944 53073 698508 0) 0 nil])
([nil nil ((#("handle." 0 7 (fontified t)) . -3136) (undo-tree-id8914 . -7) (undo-tree-id8915 . -7) (undo-tree-id8916 . -7) (undo-tree-id8917 . -7) (undo-tree-id8918 . -7) (undo-tree-id8919 . -7) (undo-tree-id8920 . -7) (undo-tree-id8921 . -7) (undo-tree-id8922 . -7) (undo-tree-id8923 . -7) (undo-tree-id8924 . -7) (undo-tree-id8925 . -7) (undo-tree-id8926 . -7) (undo-tree-id8927 . -7) (undo-tree-id8928 . -7) (undo-tree-id8929 . -7) (undo-tree-id8930 . -7) (undo-tree-id8931 . -7) (undo-tree-id8932 . -7) (undo-tree-id8933 . -7) (undo-tree-id8934 . -7) (undo-tree-id8935 . -7) (undo-tree-id8936 . -7) (undo-tree-id8937 . -7) (undo-tree-id8938 . -7) (undo-tree-id8939 . -7) (undo-tree-id8940 . -7) (undo-tree-id8941 . -7) (undo-tree-id8942 . -7) (undo-tree-id8943 . -7) (undo-tree-id8944 . -7) (undo-tree-id8945 . -7) (undo-tree-id8946 . -7) (undo-tree-id8947 . -7) (undo-tree-id8948 . -7) (undo-tree-id8949 . -7) (undo-tree-id8950 . -7) 3143) nil (25944 53073 698475 0) 0 nil])
([nil nil ((#("256+" 0 4 (fontified t)) . -3132) (undo-tree-id8872 . -4) (undo-tree-id8873 . -4) (undo-tree-id8874 . -4) (undo-tree-id8875 . -4) (undo-tree-id8876 . -4) (undo-tree-id8877 . -4) (undo-tree-id8878 . -4) (undo-tree-id8879 . -4) (undo-tree-id8880 . -4) (undo-tree-id8881 . -4) (undo-tree-id8882 . -4) (undo-tree-id8883 . -4) (undo-tree-id8884 . -4) (undo-tree-id8885 . -4) (undo-tree-id8886 . -4) (undo-tree-id8887 . -4) (undo-tree-id8888 . -4) (undo-tree-id8889 . -4) (undo-tree-id8890 . -4) (undo-tree-id8891 . -4) (undo-tree-id8892 . -4) (undo-tree-id8893 . -4) (undo-tree-id8894 . -4) (undo-tree-id8895 . -4) (undo-tree-id8896 . -4) (undo-tree-id8897 . -4) (undo-tree-id8898 . -4) (undo-tree-id8899 . -4) (undo-tree-id8900 . -4) (undo-tree-id8901 . -4) (undo-tree-id8902 . -4) (undo-tree-id8903 . -4) (undo-tree-id8904 . -4) (undo-tree-id8905 . -4) (undo-tree-id8906 . -4) (undo-tree-id8907 . -4) (undo-tree-id8908 . -4) (undo-tree-id8909 . -4) (undo-tree-id8910 . -4) (undo-tree-id8911 . -4) (undo-tree-id8912 . -4) (undo-tree-id8913 . -4) 3136) nil (25944 53073 698437 0) 0 nil])
([nil nil ((#("u32*" 0 1 (face font-lock-type-face fontified t) 1 3 (face font-lock-type-face fontified t) 3 4 (fontified t)) . -3128) (undo-tree-id8825 . -4) (undo-tree-id8826 . -4) (undo-tree-id8827 . -4) (undo-tree-id8828 . -4) (undo-tree-id8829 . -4) (undo-tree-id8830 . -4) (undo-tree-id8831 . -4) (undo-tree-id8832 . -4) (undo-tree-id8833 . -4) (undo-tree-id8834 . -4) (undo-tree-id8835 . -4) (undo-tree-id8836 . -4) (undo-tree-id8837 . -4) (undo-tree-id8838 . -4) (undo-tree-id8839 . -4) (undo-tree-id8840 . -4) (undo-tree-id8841 . -4) (undo-tree-id8842 . -4) (undo-tree-id8843 . -4) (undo-tree-id8844 . -4) (undo-tree-id8845 . -4) (undo-tree-id8846 . -4) (undo-tree-id8847 . -4) (undo-tree-id8848 . -4) (undo-tree-id8849 . -4) (undo-tree-id8850 . -4) (undo-tree-id8851 . -4) (undo-tree-id8852 . -4) (undo-tree-id8853 . -4) (undo-tree-id8854 . -4) (undo-tree-id8855 . -4) (undo-tree-id8856 . -4) (undo-tree-id8857 . -4) (undo-tree-id8858 . -4) (undo-tree-id8859 . -4) (undo-tree-id8860 . -4) (undo-tree-id8861 . -4) (undo-tree-id8862 . -4) (undo-tree-id8863 . -4) (undo-tree-id8864 . -4) (undo-tree-id8865 . -4) (undo-tree-id8866 . -4) (undo-tree-id8867 . -4) (undo-tree-id8868 . -4) (undo-tree-id8869 . -4) (undo-tree-id8870 . -4) (undo-tree-id8871 . -4) 3132) nil (25944 53073 698394 0) 0 nil])
([nil nil ((#("as " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -3125) (undo-tree-id8773 . -3) (undo-tree-id8774 . -3) (undo-tree-id8775 . -3) (undo-tree-id8776 . -3) (undo-tree-id8777 . -3) (undo-tree-id8778 . -3) (undo-tree-id8779 . -3) (undo-tree-id8780 . -3) (undo-tree-id8781 . -3) (undo-tree-id8782 . -3) (undo-tree-id8783 . -3) (undo-tree-id8784 . -3) (undo-tree-id8785 . -3) (undo-tree-id8786 . -3) (undo-tree-id8787 . -3) (undo-tree-id8788 . -3) (undo-tree-id8789 . -3) (undo-tree-id8790 . -3) (undo-tree-id8791 . -3) (undo-tree-id8792 . -3) (undo-tree-id8793 . -3) (undo-tree-id8794 . -3) (undo-tree-id8795 . -3) (undo-tree-id8796 . -3) (undo-tree-id8797 . -3) (undo-tree-id8798 . -3) (undo-tree-id8799 . -3) (undo-tree-id8800 . -3) (undo-tree-id8801 . -3) (undo-tree-id8802 . -3) (undo-tree-id8803 . -3) (undo-tree-id8804 . -3) (undo-tree-id8805 . -3) (undo-tree-id8806 . -3) (undo-tree-id8807 . -3) (undo-tree-id8808 . -3) (undo-tree-id8809 . -3) (undo-tree-id8810 . -3) (undo-tree-id8811 . -3) (undo-tree-id8812 . -3) (undo-tree-id8813 . -3) (undo-tree-id8814 . -3) (undo-tree-id8815 . -3) (undo-tree-id8816 . -3) (undo-tree-id8817 . -3) (undo-tree-id8818 . -3) (undo-tree-id8819 . -3) (undo-tree-id8820 . -3) (undo-tree-id8821 . -3) (undo-tree-id8822 . -3) (undo-tree-id8823 . -3) (undo-tree-id8824 . -3) 3128) nil (25944 53073 698348 0) 0 nil])
([nil nil ((#("1] " 0 3 (fontified t)) . -3122) (undo-tree-id8716 . -3) (undo-tree-id8717 . -3) (undo-tree-id8718 . -3) (undo-tree-id8719 . -3) (undo-tree-id8720 . -3) (undo-tree-id8721 . -3) (undo-tree-id8722 . -3) (undo-tree-id8723 . -3) (undo-tree-id8724 . -3) (undo-tree-id8725 . -3) (undo-tree-id8726 . -3) (undo-tree-id8727 . -3) (undo-tree-id8728 . -3) (undo-tree-id8729 . -3) (undo-tree-id8730 . -3) (undo-tree-id8731 . -3) (undo-tree-id8732 . -3) (undo-tree-id8733 . -3) (undo-tree-id8734 . -3) (undo-tree-id8735 . -3) (undo-tree-id8736 . -3) (undo-tree-id8737 . -3) (undo-tree-id8738 . -3) (undo-tree-id8739 . -3) (undo-tree-id8740 . -3) (undo-tree-id8741 . -3) (undo-tree-id8742 . -3) (undo-tree-id8743 . -3) (undo-tree-id8744 . -3) (undo-tree-id8745 . -3) (undo-tree-id8746 . -3) (undo-tree-id8747 . -3) (undo-tree-id8748 . -3) (undo-tree-id8749 . -3) (undo-tree-id8750 . -3) (undo-tree-id8751 . -3) (undo-tree-id8752 . -3) (undo-tree-id8753 . -3) (undo-tree-id8754 . -3) (undo-tree-id8755 . -3) (undo-tree-id8756 . -3) (undo-tree-id8757 . -3) (undo-tree-id8758 . -3) (undo-tree-id8759 . -3) (undo-tree-id8760 . -3) (undo-tree-id8761 . -3) (undo-tree-id8762 . -3) (undo-tree-id8763 . -3) (undo-tree-id8764 . -3) (undo-tree-id8765 . -3) (undo-tree-id8766 . -3) (undo-tree-id8767 . -3) (undo-tree-id8768 . -3) (undo-tree-id8769 . -3) (undo-tree-id8770 . -3) (undo-tree-id8771 . -3) (undo-tree-id8772 . -3) 3125) nil (25944 53073 698296 0) 0 nil])
([nil nil ((#("buf[" 0 4 (fontified t)) . -3118) (undo-tree-id8652 . -4) (undo-tree-id8653 . -4) (undo-tree-id8654 . -4) (undo-tree-id8655 . -4) (undo-tree-id8656 . -4) (undo-tree-id8657 . -4) (undo-tree-id8658 . -4) (undo-tree-id8659 . -4) (undo-tree-id8660 . -4) (undo-tree-id8661 . -4) (undo-tree-id8662 . -4) (undo-tree-id8663 . -4) (undo-tree-id8664 . -4) (undo-tree-id8665 . -4) (undo-tree-id8666 . -4) (undo-tree-id8667 . -4) (undo-tree-id8668 . -4) (undo-tree-id8669 . -4) (undo-tree-id8670 . -4) (undo-tree-id8671 . -4) (undo-tree-id8672 . -4) (undo-tree-id8673 . -4) (undo-tree-id8674 . -4) (undo-tree-id8675 . -4) (undo-tree-id8676 . -4) (undo-tree-id8677 . -4) (undo-tree-id8678 . -4) (undo-tree-id8679 . -4) (undo-tree-id8680 . -4) (undo-tree-id8681 . -4) (undo-tree-id8682 . -4) (undo-tree-id8683 . -4) (undo-tree-id8684 . -4) (undo-tree-id8685 . -4) (undo-tree-id8686 . -4) (undo-tree-id8687 . -4) (undo-tree-id8688 . -4) (undo-tree-id8689 . -4) (undo-tree-id8690 . -4) (undo-tree-id8691 . -4) (undo-tree-id8692 . -4) (undo-tree-id8693 . -4) (undo-tree-id8694 . -4) (undo-tree-id8695 . -4) (undo-tree-id8696 . -4) (undo-tree-id8697 . -4) (undo-tree-id8698 . -4) (undo-tree-id8699 . -4) (undo-tree-id8700 . -4) (undo-tree-id8701 . -4) (undo-tree-id8702 . -4) (undo-tree-id8703 . -4) (undo-tree-id8704 . -4) (undo-tree-id8705 . -4) (undo-tree-id8706 . -4) (undo-tree-id8707 . -4) (undo-tree-id8708 . -4) (undo-tree-id8709 . -4) (undo-tree-id8710 . -4) (undo-tree-id8711 . -4) (undo-tree-id8712 . -4) (undo-tree-id8713 . -4) (undo-tree-id8714 . -4) (undo-tree-id8715 . -4) 3122) nil (25944 53073 698236 0) 0 nil])
([nil nil ((#("recv_" 0 5 (fontified t)) . -3113) (undo-tree-id8583 . -5) (undo-tree-id8584 . -5) (undo-tree-id8585 . -5) (undo-tree-id8586 . -5) (undo-tree-id8587 . -5) (undo-tree-id8588 . -5) (undo-tree-id8589 . -5) (undo-tree-id8590 . -5) (undo-tree-id8591 . -5) (undo-tree-id8592 . -5) (undo-tree-id8593 . -5) (undo-tree-id8594 . -5) (undo-tree-id8595 . -5) (undo-tree-id8596 . -5) (undo-tree-id8597 . -5) (undo-tree-id8598 . -5) (undo-tree-id8599 . -5) (undo-tree-id8600 . -5) (undo-tree-id8601 . -5) (undo-tree-id8602 . -5) (undo-tree-id8603 . -5) (undo-tree-id8604 . -5) (undo-tree-id8605 . -5) (undo-tree-id8606 . -5) (undo-tree-id8607 . -5) (undo-tree-id8608 . -5) (undo-tree-id8609 . -5) (undo-tree-id8610 . -5) (undo-tree-id8611 . -5) (undo-tree-id8612 . -5) (undo-tree-id8613 . -5) (undo-tree-id8614 . -5) (undo-tree-id8615 . -5) (undo-tree-id8616 . -5) (undo-tree-id8617 . -5) (undo-tree-id8618 . -5) (undo-tree-id8619 . -5) (undo-tree-id8620 . -5) (undo-tree-id8621 . -5) (undo-tree-id8622 . -5) (undo-tree-id8623 . -5) (undo-tree-id8624 . -5) (undo-tree-id8625 . -5) (undo-tree-id8626 . -5) (undo-tree-id8627 . -5) (undo-tree-id8628 . -5) (undo-tree-id8629 . -5) (undo-tree-id8630 . -5) (undo-tree-id8631 . -5) (undo-tree-id8632 . -5) (undo-tree-id8633 . -5) (undo-tree-id8634 . -5) (undo-tree-id8635 . -5) (undo-tree-id8636 . -5) (undo-tree-id8637 . -5) (undo-tree-id8638 . -5) (undo-tree-id8639 . -5) (undo-tree-id8640 . -5) (undo-tree-id8641 . -5) (undo-tree-id8642 . -5) (undo-tree-id8643 . -5) (undo-tree-id8644 . -5) (undo-tree-id8645 . -5) (undo-tree-id8646 . -5) (undo-tree-id8647 . -5) (undo-tree-id8648 . -5) (undo-tree-id8649 . -5) (undo-tree-id8650 . -5) (undo-tree-id8651 . -5) 3118) nil (25944 53073 698173 0) 0 nil])
([nil nil ((#("handle." 0 7 (fontified t)) . -3106) (undo-tree-id8507 . -7) (undo-tree-id8508 . -7) (undo-tree-id8509 . -7) (undo-tree-id8510 . -7) (undo-tree-id8511 . -7) (undo-tree-id8512 . -7) (undo-tree-id8513 . -7) (undo-tree-id8514 . -7) (undo-tree-id8515 . -7) (undo-tree-id8516 . -7) (undo-tree-id8517 . -7) (undo-tree-id8518 . -7) (undo-tree-id8519 . -7) (undo-tree-id8520 . -7) (undo-tree-id8521 . -7) (undo-tree-id8522 . -7) (undo-tree-id8523 . -7) (undo-tree-id8524 . -7) (undo-tree-id8525 . -7) (undo-tree-id8526 . -7) (undo-tree-id8527 . -7) (undo-tree-id8528 . -7) (undo-tree-id8529 . -7) (undo-tree-id8530 . -7) (undo-tree-id8531 . -7) (undo-tree-id8532 . -7) (undo-tree-id8533 . -7) (undo-tree-id8534 . -7) (undo-tree-id8535 . -7) (undo-tree-id8536 . -7) (undo-tree-id8537 . -7) (undo-tree-id8538 . -7) (undo-tree-id8539 . -7) (undo-tree-id8540 . -7) (undo-tree-id8541 . -7) (undo-tree-id8542 . -7) (undo-tree-id8543 . -7) (undo-tree-id8544 . -7) (undo-tree-id8545 . -7) (undo-tree-id8546 . -7) (undo-tree-id8547 . -7) (undo-tree-id8548 . -7) (undo-tree-id8549 . -7) (undo-tree-id8550 . -7) (undo-tree-id8551 . -7) (undo-tree-id8552 . -7) (undo-tree-id8553 . -7) (undo-tree-id8554 . -7) (undo-tree-id8555 . -7) (undo-tree-id8556 . -7) (undo-tree-id8557 . -7) (undo-tree-id8558 . -7) (undo-tree-id8559 . -7) (undo-tree-id8560 . -7) (undo-tree-id8561 . -7) (undo-tree-id8562 . -7) (undo-tree-id8563 . -7) (undo-tree-id8564 . -7) (undo-tree-id8565 . -7) (undo-tree-id8566 . -7) (undo-tree-id8567 . -7) (undo-tree-id8568 . -7) (undo-tree-id8569 . -7) (undo-tree-id8570 . -7) (undo-tree-id8571 . -7) (undo-tree-id8572 . -7) (undo-tree-id8573 . -7) (undo-tree-id8574 . -7) (undo-tree-id8575 . -7) (undo-tree-id8576 . -7) (undo-tree-id8577 . -7) (undo-tree-id8578 . -7) (undo-tree-id8579 . -7) (undo-tree-id8580 . -7) (undo-tree-id8581 . -7) (undo-tree-id8582 . -7) 3113) nil (25944 53073 698104 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -3105) (undo-tree-id8424 . -1) (undo-tree-id8425 . -1) (undo-tree-id8426 . -1) (undo-tree-id8427 . -1) (undo-tree-id8428 . -1) (undo-tree-id8429 . -1) (undo-tree-id8430 . -1) (undo-tree-id8431 . -1) (undo-tree-id8432 . -1) (undo-tree-id8433 . -1) (undo-tree-id8434 . -1) (undo-tree-id8435 . -1) (undo-tree-id8436 . -1) (undo-tree-id8437 . -1) (undo-tree-id8438 . -1) (undo-tree-id8439 . -1) (undo-tree-id8440 . -1) (undo-tree-id8441 . -1) (undo-tree-id8442 . -1) (undo-tree-id8443 . -1) (undo-tree-id8444 . -1) (undo-tree-id8445 . -1) (undo-tree-id8446 . -1) (undo-tree-id8447 . -1) (undo-tree-id8448 . -1) (undo-tree-id8449 . -1) (undo-tree-id8450 . -1) (undo-tree-id8451 . -1) (undo-tree-id8452 . -1) (undo-tree-id8453 . -1) (undo-tree-id8454 . -1) (undo-tree-id8455 . -1) (undo-tree-id8456 . -1) (undo-tree-id8457 . -1) (undo-tree-id8458 . -1) (undo-tree-id8459 . -1) (undo-tree-id8460 . -1) (undo-tree-id8461 . -1) (undo-tree-id8462 . -1) (undo-tree-id8463 . -1) (undo-tree-id8464 . -1) (undo-tree-id8465 . -1) (undo-tree-id8466 . -1) (undo-tree-id8467 . -1) (undo-tree-id8468 . -1) (undo-tree-id8469 . -1) (undo-tree-id8470 . -1) (undo-tree-id8471 . -1) (undo-tree-id8472 . -1) (undo-tree-id8473 . -1) (undo-tree-id8474 . -1) (undo-tree-id8475 . -1) (undo-tree-id8476 . -1) (undo-tree-id8477 . -1) (undo-tree-id8478 . -1) (undo-tree-id8479 . -1) (undo-tree-id8480 . -1) (undo-tree-id8481 . -1) (undo-tree-id8482 . -1) (undo-tree-id8483 . -1) (undo-tree-id8484 . -1) (undo-tree-id8485 . -1) (undo-tree-id8486 . -1) (undo-tree-id8487 . -1) (undo-tree-id8488 . -1) (undo-tree-id8489 . -1) (undo-tree-id8490 . -1) (undo-tree-id8491 . -1) (undo-tree-id8492 . -1) (undo-tree-id8493 . -1) (undo-tree-id8494 . -1) (undo-tree-id8495 . -1) (undo-tree-id8496 . -1) (undo-tree-id8497 . -1) (undo-tree-id8498 . -1) (undo-tree-id8499 . -1) (undo-tree-id8500 . -1) (undo-tree-id8501 . -1) (undo-tree-id8502 . -1) (undo-tree-id8503 . -1) (undo-tree-id8504 . -1) (undo-tree-id8505 . -1) (undo-tree-id8506 . -1) 3106) nil (25944 53073 698021 0) 0 nil])
([nil nil ((3105 . 3108)) nil (25944 53073 697935 0) 0 nil])
([nil nil ((3105 . 3113) (#("adc" 0 3 (fontified nil)) . 3105) (3105 . 3108) (#("adc_data" 0 8 (fontified nil)) . -3105) (3105 . 3113) (#("adc" 0 3 (fontified t)) . -3105) (undo-tree-id8418 . -3) (undo-tree-id8419 . -1) (undo-tree-id8420 . -2) (undo-tree-id8421 . -3) (undo-tree-id8422 . -3) (undo-tree-id8423 . -3) 3108) nil (25944 53073 697933 0) 0 nil])
([nil nil ((3113 . 3115)) nil (25944 53073 697918 0) 0 nil])
([nil nil ((3114 . 3115)) nil (25944 53073 697913 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3074) (undo-tree-id9069 . -1) (undo-tree-id9070 . -1) (undo-tree-id9071 . -1) (undo-tree-id9072 . -1) (undo-tree-id9073 . -1) (undo-tree-id9074 . -1) (undo-tree-id9075 . -1) (undo-tree-id9076 . -1) (undo-tree-id9077 . -1) (undo-tree-id9078 . -1) (undo-tree-id9079 . -1) (undo-tree-id9080 . -1) (undo-tree-id9081 . -1) (undo-tree-id9082 . -1) (undo-tree-id9083 . -1) (undo-tree-id9084 . -1) (undo-tree-id9085 . -1) (undo-tree-id9086 . -1) (undo-tree-id9087 . -1) (undo-tree-id9088 . -1) (undo-tree-id9089 . -1) (undo-tree-id9090 . -1) (#("	" 0 1 (fontified t)) . -3075) (undo-tree-id9091 . -1) (undo-tree-id9092 . -1) (undo-tree-id9093 . -1) (undo-tree-id9094 . -1) (undo-tree-id9095 . -1) (undo-tree-id9096 . -1) (undo-tree-id9097 . -1) (undo-tree-id9098 . -1) (undo-tree-id9099 . -1) (undo-tree-id9100 . -1) (undo-tree-id9101 . -1) (undo-tree-id9102 . -1) (undo-tree-id9103 . -1) (undo-tree-id9104 . -1) (undo-tree-id9105 . -1) (undo-tree-id9106 . -1) (undo-tree-id9107 . -1) (undo-tree-id9108 . -1) (#("	" 0 1 (fontified t)) . -3076) (undo-tree-id9109 . -1) (undo-tree-id9110 . -1) (undo-tree-id9111 . -1) (undo-tree-id9112 . -1) (undo-tree-id9113 . -1) (undo-tree-id9114 . -1) (undo-tree-id9115 . -1) (undo-tree-id9116 . -1) (undo-tree-id9117 . -1) (undo-tree-id9118 . -1) (undo-tree-id9119 . -1) (undo-tree-id9120 . -1) (undo-tree-id9121 . -1) (undo-tree-id9122 . -1) (undo-tree-id9123 . -1) (undo-tree-id9124 . -1) (undo-tree-id9125 . -1) (#("	" 0 1 (fontified t)) . -3077) (undo-tree-id9126 . -1) (undo-tree-id9127 . -1) (undo-tree-id9128 . -1) (undo-tree-id9129 . -1) (undo-tree-id9130 . -1) (undo-tree-id9131 . -1) (undo-tree-id9132 . -1) (undo-tree-id9133 . -1) (undo-tree-id9134 . -1) (undo-tree-id9135 . -1) (undo-tree-id9136 . -1) (undo-tree-id9137 . -1) (undo-tree-id9138 . -1) (undo-tree-id9139 . -1) (undo-tree-id9140 . -1) (undo-tree-id9141 . -1) (#(" " 0 1 (fontified t)) . -3078) (undo-tree-id9142 . -1) (undo-tree-id9143 . -1) (undo-tree-id9144 . -1) (undo-tree-id9145 . -1) (undo-tree-id9146 . -1) (undo-tree-id9147 . -1) (undo-tree-id9148 . -1) (undo-tree-id9149 . -1) (undo-tree-id9150 . -1) (undo-tree-id9151 . -1) (undo-tree-id9152 . -1) (undo-tree-id9153 . -1) (undo-tree-id9154 . -1) (undo-tree-id9155 . -1) (undo-tree-id9156 . -1) (#(" " 0 1 (fontified t)) . -3079) (undo-tree-id9157 . -1) (undo-tree-id9158 . -1) (undo-tree-id9159 . -1) (undo-tree-id9160 . -1) (undo-tree-id9161 . -1) (undo-tree-id9162 . -1) (undo-tree-id9163 . -1) (undo-tree-id9164 . -1) (undo-tree-id9165 . -1) (undo-tree-id9166 . -1) (undo-tree-id9167 . -1) (undo-tree-id9168 . -1) (undo-tree-id9169 . -1) (undo-tree-id9170 . -1) (#(" " 0 1 (fontified t)) . -3080) (undo-tree-id9171 . -1) (undo-tree-id9172 . -1) (undo-tree-id9173 . -1) (undo-tree-id9174 . -1) (undo-tree-id9175 . -1) (undo-tree-id9176 . -1) (undo-tree-id9177 . -1) (undo-tree-id9178 . -1) (undo-tree-id9179 . -1) (undo-tree-id9180 . -1) (undo-tree-id9181 . -1) (undo-tree-id9182 . -1) (undo-tree-id9183 . -1) (#(" " 0 1 (fontified t)) . -3081) (undo-tree-id9184 . -1) (undo-tree-id9185 . -1) (undo-tree-id9186 . -1) (undo-tree-id9187 . -1) (undo-tree-id9188 . -1) (undo-tree-id9189 . -1) (undo-tree-id9190 . -1) (undo-tree-id9191 . -1) (undo-tree-id9192 . -1) (undo-tree-id9193 . -1) (undo-tree-id9194 . -1) (undo-tree-id9195 . -1) 3082 (t 25944 53073 723088 301000)) nil (25944 53083 578109 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -3108) (undo-tree-id9063 . -1) (undo-tree-id9064 . -1) (undo-tree-id9065 . -1) (undo-tree-id9066 . -1) (undo-tree-id9067 . -1) (undo-tree-id9068 . -1) 3109) nil (25944 53083 577982 0) 0 nil])
([nil nil ((3074 . 3082) (t 25944 53083 601778 522000)) nil (25944 53175 878341 0) 0 nil])
([nil nil ((3082 . 3085)) nil (25944 53184 610586 0) 0 nil])
([nil nil ((3085 . 3087)) nil (25944 53217 89684 0) 0 nil] [nil nil ((#("s" 0 1 (fontified t)) . -3082) (undo-tree-id9223 . -1) (undo-tree-id9224 . -1) (undo-tree-id9225 . -1) (undo-tree-id9226 . -1) (undo-tree-id9227 . -1) (undo-tree-id9228 . -1) (undo-tree-id9229 . -1) (undo-tree-id9230 . -1) (undo-tree-id9231 . -1) (undo-tree-id9232 . -1) (undo-tree-id9233 . -1) (undo-tree-id9234 . -1) (#("t" 0 1 (fontified t)) . -3083) (undo-tree-id9235 . -1) (undo-tree-id9236 . -1) (undo-tree-id9237 . -1) (undo-tree-id9238 . -1) (undo-tree-id9239 . -1) (undo-tree-id9240 . -1) (undo-tree-id9241 . -1) (undo-tree-id9242 . -1) (#("a" 0 1 (fontified t)) . -3084) (undo-tree-id9243 . -1) (undo-tree-id9244 . -1) (undo-tree-id9245 . -1) (undo-tree-id9246 . -1) 3085) ((3082 . 3085)) (25944 53184 312995 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -3086) (undo-tree-id9448 . -1) 3087) nil (25944 53217 89683 0) 0 nil])
([nil nil ((3082 . 3089)) ((#("let sta" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-variable-name-face fontified t)) . 3082) (undo-tree-id9278 . -7) (undo-tree-id9279 . -5) (undo-tree-id9280 . -6) (undo-tree-id9281 . -7) (undo-tree-id9282 . -7) (undo-tree-id9283 . -7) (undo-tree-id9284 . -7) (undo-tree-id9285 . -7) (undo-tree-id9286 . -7) (undo-tree-id9287 . -7) (undo-tree-id9288 . -7) (undo-tree-id9289 . -7) (undo-tree-id9290 . -7) (undo-tree-id9291 . -7) (undo-tree-id9292 . -7) (undo-tree-id9293 . -7) (undo-tree-id9294 . -7) (undo-tree-id9295 . -7) (undo-tree-id9296 . -7) (undo-tree-id9297 . -7) (undo-tree-id9298 . -7) (undo-tree-id9299 . -7) (undo-tree-id9300 . -7) (undo-tree-id9301 . -7) (undo-tree-id9302 . -7) (undo-tree-id9303 . -7) (undo-tree-id9304 . -7) (undo-tree-id9305 . -7) (undo-tree-id9306 . -7) (undo-tree-id9307 . -7) (undo-tree-id9308 . -7) (undo-tree-id9309 . -7) (undo-tree-id9310 . -7) (undo-tree-id9311 . -7) (undo-tree-id9312 . -7) (undo-tree-id9313 . -7) (undo-tree-id9314 . -7) (undo-tree-id9315 . -7) (undo-tree-id9316 . -7)) (25944 53183 941704 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -3082) (undo-tree-id9444 . -1) (#("t" 0 1 (fontified t)) . -3083) (undo-tree-id9445 . -1) (#("a" 0 1 (fontified t)) . -3084) (undo-tree-id9446 . -1) (#("t" 0 1 (fontified t)) . -3085) (undo-tree-id9447 . -1) 3086) nil (25944 53217 89680 0) 0 nil])
([nil nil ((3089 . 3094)) ((#("te = " 0 2 (face font-lock-variable-name-face fontified t) 2 5 (fontified t)) . 3089) (undo-tree-id9247 . -5) (undo-tree-id9248 . -1) (undo-tree-id9249 . -2) (undo-tree-id9250 . -2) (undo-tree-id9251 . -2) (undo-tree-id9252 . -3) (undo-tree-id9253 . -3) (undo-tree-id9254 . -4) (undo-tree-id9255 . -5) (undo-tree-id9256 . -5) (undo-tree-id9257 . -5) (undo-tree-id9258 . -5) (undo-tree-id9259 . -5) (undo-tree-id9260 . -5) (undo-tree-id9261 . -5) (undo-tree-id9262 . -5) (undo-tree-id9263 . -5) (undo-tree-id9264 . -5) (undo-tree-id9265 . -5) (undo-tree-id9266 . -5) (undo-tree-id9267 . -5) (undo-tree-id9268 . -5) (undo-tree-id9269 . -5) (undo-tree-id9270 . -5) (undo-tree-id9271 . -5) (undo-tree-id9272 . -5) (undo-tree-id9273 . -5) (undo-tree-id9274 . -5) (undo-tree-id9275 . -5) (undo-tree-id9276 . -5) (undo-tree-id9277 . -5)) (25944 53181 760259 0) 0 nil])
([nil nil ((3082 . 3093)) nil (25944 53217 89674 0) 0 nil])
([nil nil ((#("state = " 0 5 (face font-lock-variable-name-face fontified t) 5 8 (fontified t)) . -3086) (undo-tree-id9196 . -8) (undo-tree-id9197 . -1) (undo-tree-id9198 . -2) (undo-tree-id9199 . -3) (undo-tree-id9200 . -4) (undo-tree-id9201 . -5) (undo-tree-id9202 . -5) (undo-tree-id9203 . -5) (undo-tree-id9204 . -6) (undo-tree-id9205 . -6) (undo-tree-id9206 . -7) (undo-tree-id9207 . -8) (undo-tree-id9208 . -8) (undo-tree-id9209 . -8) (undo-tree-id9210 . -8) (undo-tree-id9211 . -8) (undo-tree-id9212 . -8) (undo-tree-id9213 . -8) (undo-tree-id9214 . -8) (undo-tree-id9215 . -8) (undo-tree-id9216 . -8) (undo-tree-id9217 . -8) (undo-tree-id9218 . -8) (undo-tree-id9219 . -8) (undo-tree-id9220 . -8) (undo-tree-id9221 . -8) (undo-tree-id9222 . -8) 3094) ((3086 . 3094) (t 25944 53175 904348 19000)) (25944 53175 878305 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -3091) (undo-tree-id9442 . -1) (#("l" 0 1 (fontified t)) . -3092) (undo-tree-id9443 . -1) 3093) nil (25944 53217 89672 0) 0 nil])
nil
([nil nil ((3091 . 3096)) nil (25944 53217 89669 0) 0 nil])
([nil nil ((1528 . 1529)) nil (25944 53217 89668 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1528) (undo-tree-id9441 . -1) 1529) nil (25944 53217 89667 0) 0 nil])
([nil nil ((1528 . 1533)) nil (25944 53217 89665 0) 0 nil])
([nil nil ((1565 . 1566)) nil (25944 53217 89664 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1565) (undo-tree-id9431 . -1) (undo-tree-id9432 . -1) (undo-tree-id9433 . -1) (undo-tree-id9434 . -1) (undo-tree-id9435 . -1) (undo-tree-id9436 . -1) (undo-tree-id9437 . -1) (undo-tree-id9438 . -1) (undo-tree-id9439 . -1) (undo-tree-id9440 . -1) 1566) nil (25944 53217 89662 0) 0 nil])
([nil nil ((1565 . 1566)) nil (25944 53217 89652 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1565) (undo-tree-id9423 . -1) (undo-tree-id9424 . -1) (undo-tree-id9425 . -1) (undo-tree-id9426 . -1) (undo-tree-id9427 . -1) (undo-tree-id9428 . -1) (undo-tree-id9429 . -1) (undo-tree-id9430 . -1) 1566) nil (25944 53217 89650 0) 0 nil])
([nil nil ((1565 . 1568)) nil (25944 53217 89641 0) 0 nil])
([nil nil ((1560 . 1570) (#("state_lo" 0 8 (fontified nil)) . 1560) (1560 . 1568) (#("state_lock" 0 10 (fontified nil)) . -1560) (1560 . 1570) (#("state_lo" 0 8 (fontified t)) . -1560) (undo-tree-id9364 . -5) (undo-tree-id9365 . -8) (undo-tree-id9366 . -5) (undo-tree-id9367 . -5) (undo-tree-id9368 . -5) (undo-tree-id9369 . -5) (undo-tree-id9370 . -5) (undo-tree-id9371 . -5) (undo-tree-id9372 . -5) (undo-tree-id9373 . -5) (undo-tree-id9374 . -5) (undo-tree-id9375 . -5) (undo-tree-id9376 . -5) (undo-tree-id9377 . -5) (undo-tree-id9378 . -5) (undo-tree-id9379 . -5) (undo-tree-id9380 . -5) (undo-tree-id9381 . -5) (undo-tree-id9382 . -5) (undo-tree-id9383 . -5) (undo-tree-id9384 . -5) (undo-tree-id9385 . -5) (undo-tree-id9386 . -5) (undo-tree-id9387 . -5) (undo-tree-id9388 . -5) (undo-tree-id9389 . -5) (undo-tree-id9390 . -5) (undo-tree-id9391 . -5) (undo-tree-id9392 . -5) (undo-tree-id9393 . -5) (undo-tree-id9394 . -5) (undo-tree-id9395 . -5) (undo-tree-id9396 . -5) (undo-tree-id9397 . -5) (undo-tree-id9398 . -5) (undo-tree-id9399 . -5) (undo-tree-id9400 . -5) (undo-tree-id9401 . -5) (undo-tree-id9402 . -5) (undo-tree-id9403 . -5) (undo-tree-id9404 . -5) (undo-tree-id9405 . -5) (undo-tree-id9406 . -5) (undo-tree-id9407 . -5) (undo-tree-id9408 . -5) (undo-tree-id9409 . -5) (undo-tree-id9410 . -5) (undo-tree-id9411 . -5) (undo-tree-id9412 . -5) (undo-tree-id9413 . -6) (undo-tree-id9414 . -6) (undo-tree-id9415 . -6) (undo-tree-id9416 . -6) (undo-tree-id9417 . -7) (undo-tree-id9418 . -7) (undo-tree-id9419 . -8) (undo-tree-id9420 . -8) (undo-tree-id9421 . -8) (undo-tree-id9422 . -8) 1568) nil (25944 53217 89637 0) 0 nil])
([nil nil ((1644 . 1647)) nil (25944 53217 89575 0) 0 nil])
([nil nil ((1639 . 1649) (#("state_lo" 0 8 (fontified nil)) . 1639) (1639 . 1647) (#("state_lock" 0 10 (fontified nil)) . -1639) (1639 . 1649) (#("state_lo" 0 8 (fontified t)) . -1639) (undo-tree-id9336 . -5) (undo-tree-id9337 . -8) (undo-tree-id9338 . -5) (undo-tree-id9339 . -5) (undo-tree-id9340 . -5) (undo-tree-id9341 . -5) (undo-tree-id9342 . -5) (undo-tree-id9343 . -5) (undo-tree-id9344 . -5) (undo-tree-id9345 . -5) (undo-tree-id9346 . -5) (undo-tree-id9347 . -5) (undo-tree-id9348 . -5) (undo-tree-id9349 . -5) (undo-tree-id9350 . -5) (undo-tree-id9351 . -5) (undo-tree-id9352 . -5) (undo-tree-id9353 . -5) (undo-tree-id9354 . -5) (undo-tree-id9355 . -6) (undo-tree-id9356 . -6) (undo-tree-id9357 . -6) (undo-tree-id9358 . -7) (undo-tree-id9359 . -7) (undo-tree-id9360 . -8) (undo-tree-id9361 . -8) (undo-tree-id9362 . -8) (undo-tree-id9363 . -8) 1647) nil (25944 53217 89572 0) 0 nil])
([nil nil ((1674 . 1676)) nil (25944 53217 89541 0) 0 nil])
([nil nil ((1669 . 1679) (#("state_l" 0 7 (fontified nil)) . 1669) (1669 . 1676) (#("state_lock" 0 10 (fontified nil)) . -1669) (1669 . 1679) (#("state_l" 0 7 (fontified t)) . -1669) (undo-tree-id9317 . -5) (undo-tree-id9318 . -7) (undo-tree-id9319 . -5) (undo-tree-id9320 . -5) (undo-tree-id9321 . -5) (undo-tree-id9322 . -5) (undo-tree-id9323 . -5) (undo-tree-id9324 . -5) (undo-tree-id9325 . -5) (undo-tree-id9326 . -5) (undo-tree-id9327 . -5) (undo-tree-id9328 . -5) (undo-tree-id9329 . -5) (undo-tree-id9330 . -5) (undo-tree-id9331 . -6) (undo-tree-id9332 . -7) (undo-tree-id9333 . -7) (undo-tree-id9334 . -7) (undo-tree-id9335 . -7) 1676) nil (25944 53217 89537 0) 0 nil])
([nil nil ((3116 . 3122) (t 25944 53217 114677 666000)) nil (25944 53237 263625 0) 0 nil])
([nil nil ((3119 . 3124) (#("sta" 0 3 (fontified nil)) . 3119) (3119 . 3122) (#("state" 0 5 (fontified nil)) . -3119) (3119 . 3124) (#("sta" 0 3 (fontified t)) . -3119) (undo-tree-id9459 . -3) (undo-tree-id9460 . -1) (undo-tree-id9461 . -2) (undo-tree-id9462 . -2) (undo-tree-id9463 . -3) (undo-tree-id9464 . -3) 3122) nil (25944 53237 263623 0) 0 nil])
([nil nil ((3124 . 3126)) nil (25944 53237 263611 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3125 3131 #s(yas--snippet nil nil #s(yas--exit 3131 nil) 154 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3131 nil) 154 nil nil nil nil)) (3125 . 3131) (#("lock()$0" 0 8 (fontified nil)) . 3125) (3125 . 3133) (#("l" 0 1 (fontified nil)) . 3125) (3125 . 3126) (#("lock()" 0 6 (fontified nil)) . -3125) (3125 . 3131) (#("l" 0 1 (fontified t)) . -3125) (undo-tree-id9454 . -1) (undo-tree-id9455 . -1) (undo-tree-id9456 . -1) (undo-tree-id9457 . -1) (undo-tree-id9458 . -1) 3126) nil (25944 53237 263609 0) 0 nil])
([nil nil ((3131 . 3133)) nil (25944 53237 263600 0) 0 nil])
([nil nil ((3132 . 3137) (#("a" 0 1 (fontified nil)) . 3132) (3132 . 3133) (#("await" 0 5 (fontified nil)) . -3132) (3132 . 3137) (#("a" 0 1 (fontified t)) . -3132) (undo-tree-id9449 . -1) (undo-tree-id9450 . -1) (undo-tree-id9451 . -1) (undo-tree-id9452 . -1) (undo-tree-id9453 . -1) 3133) nil (25944 53237 263598 0) 0 nil])
([nil nil ((3137 . 3138)) nil (25944 53237 263579 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -3170) (undo-tree-id9512 . -1) (undo-tree-id9513 . -1) (undo-tree-id9514 . -1) (undo-tree-id9515 . -1) (undo-tree-id9516 . -1) (undo-tree-id9517 . -1) (undo-tree-id9518 . -1) (undo-tree-id9519 . -1) (undo-tree-id9520 . -1) (undo-tree-id9521 . -1) (undo-tree-id9522 . -1) (undo-tree-id9523 . -1) (undo-tree-id9524 . -1) (undo-tree-id9525 . -1) (undo-tree-id9526 . -1) (undo-tree-id9527 . -1) 3171 (t 25944 53237 287988 201000)) nil (25944 53259 657780 0) 0 nil])
([nil nil ((3170 . 3173)) nil (25944 53259 657763 0) 0 nil])
([nil nil ((3170 . 3175) (#("sta" 0 3 (fontified nil)) . 3170) (3170 . 3173) (#("state" 0 5 (fontified nil)) . -3170) (3170 . 3175) (#("sta" 0 3 (fontified t)) . -3170) (undo-tree-id9506 . -3) (undo-tree-id9507 . -1) (undo-tree-id9508 . -2) (undo-tree-id9509 . -3) (undo-tree-id9510 . -3) (undo-tree-id9511 . -3) 3173) nil (25944 53259 657761 0) 0 nil])
([nil nil ((3175 . 3176)) nil (25944 53259 657752 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3175) (undo-tree-id9501 . -1) (undo-tree-id9502 . -1) (undo-tree-id9503 . -1) (undo-tree-id9504 . -1) (undo-tree-id9505 . -1) 3176) nil (25944 53259 657750 0) 0 nil])
([nil nil ((3175 . 3177)) nil (25944 53259 657744 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -3175) (undo-tree-id9495 . -1) (undo-tree-id9496 . -1) (undo-tree-id9497 . -1) (undo-tree-id9498 . -1) (#("_" 0 1 (fontified t)) . -3176) (undo-tree-id9499 . -1) (undo-tree-id9500 . -1) 3177) nil (25944 53259 657743 0) 0 nil])
([nil nil ((3175 . 3177)) nil (25944 53259 657735 0) 0 nil])
([nil nil ((3170 . 3180) (#("state_l" 0 7 (fontified nil)) . 3170) (3170 . 3177) (#("state_lock" 0 10 (fontified nil)) . -3170) (3170 . 3180) (#("state_l" 0 7 (fontified t)) . -3170) (undo-tree-id9471 . -5) (undo-tree-id9472 . -7) (undo-tree-id9473 . -5) (undo-tree-id9474 . -5) (undo-tree-id9475 . -5) (undo-tree-id9476 . -5) (undo-tree-id9477 . -5) (undo-tree-id9478 . -5) (undo-tree-id9479 . -5) (undo-tree-id9480 . -5) (undo-tree-id9481 . -5) (undo-tree-id9482 . -5) (undo-tree-id9483 . -5) (undo-tree-id9484 . -5) (undo-tree-id9485 . -5) (undo-tree-id9486 . -5) (undo-tree-id9487 . -5) (undo-tree-id9488 . -5) (undo-tree-id9489 . -5) (undo-tree-id9490 . -6) (undo-tree-id9491 . -6) (undo-tree-id9492 . -6) (undo-tree-id9493 . -7) (undo-tree-id9494 . -7) 3177) nil (25944 53259 657733 0) 0 nil])
([nil nil ((3180 . 3181)) nil (25944 53259 657706 0) 0 nil])
([nil nil ((3181 . 3192) (#("key_monitor" 0 11 (fontified nil)) . -3181) (3181 . 3192)) nil (25944 53259 657704 0) 0 nil])
([nil nil ((3192 . 3197)) nil (25944 53259 657703 0) 0 nil])
([nil nil ((3197 . 3199)) nil (25944 53259 657702 0) 0 nil])
([nil nil ((3196 . 3201) (#("usi" 0 3 (fontified nil)) . 3196) (3196 . 3199) (#("usize" 0 5 (fontified nil)) . -3196) (3196 . 3201) (#("usi" 0 3 (fontified t)) . -3196) (undo-tree-id9465 . -3) (undo-tree-id9466 . -1) (undo-tree-id9467 . -1) (undo-tree-id9468 . -1) (undo-tree-id9469 . -2) (undo-tree-id9470 . -3) 3199) nil (25944 53259 657697 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -3619) (undo-tree-id9528 . -1) (undo-tree-id9529 . -1) (undo-tree-id9530 . -1) (undo-tree-id9531 . -1) (undo-tree-id9532 . -1) (undo-tree-id9533 . -1) (undo-tree-id9534 . -1) (undo-tree-id9535 . -1) (undo-tree-id9536 . -1) (undo-tree-id9537 . -1) (undo-tree-id9538 . -1) (undo-tree-id9539 . -1) (undo-tree-id9540 . -1) (undo-tree-id9541 . -1) (undo-tree-id9542 . -1) (undo-tree-id9543 . -1) 3620 (t 25944 53259 682652 82000)) nil (25944 53271 149052 0) 0 nil])
([nil nil ((3619 . 3620)) nil (25944 53271 149025 0) 0 nil])
([nil nil ((3231 . 3239) (t 25944 53271 173474 743000)) nil (25944 53345 536789 0) 0 nil])
([nil nil ((3137 . 3139)) nil (25944 53345 536787 0) 0 nil])
([nil nil ((3138 . 3149) (#("k" 0 1 (fontified nil)) . 3138) (3138 . 3139) (#("key_monitor" 0 11 (fontified nil)) . -3138) (3138 . 3149) (#("k" 0 1 (fontified t)) . -3138) (undo-tree-id9572 . -1) 3139) nil (25944 53345 536786 0) 0 nil])
([nil nil ((3149 . 3154)) nil (25944 53345 536782 0) 0 nil])
([nil nil ((3154 . 3155)) nil (25944 53345 536781 0) 0 nil])
([nil nil ((3153 . 3158) (#("us" 0 2 (fontified nil)) . 3153) (3153 . 3155) (#("usize" 0 5 (fontified nil)) . -3153) (3153 . 3158) (#("us" 0 2 (fontified t)) . -3153) (undo-tree-id9571 . -2) 3155) nil (25944 53345 536780 0) 0 nil])
([nil nil ((#("lock" 0 4 (face font-lock-variable-name-face fontified t)) . -3112) (undo-tree-id9567 . -4) (undo-tree-id9568 . -4) (undo-tree-id9569 . -4) (undo-tree-id9570 . -4) 3116) nil (25944 53345 536776 0) 0 nil])
([nil nil ((#("state_" 0 6 (face font-lock-variable-name-face fontified t)) . -3106) (undo-tree-id9563 . -6) (undo-tree-id9564 . -6) (undo-tree-id9565 . -6) (undo-tree-id9566 . -6) 3112) nil (25944 53345 536770 0) 0 nil])
([nil nil ((3106 . 3107)) nil (25944 53345 536765 0) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -3106) (undo-tree-id9562 . -1) 3107) nil (25944 53345 536764 0) 0 nil])
([nil nil ((3106 . 3110)) nil (25944 53345 536761 0) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -3106) (undo-tree-id9558 . -1) (#("u" 0 1 (face font-lock-variable-name-face fontified t)) . -3107) (undo-tree-id9559 . -1) (#("m" 0 1 (face font-lock-variable-name-face fontified t)) . -3108) (undo-tree-id9560 . -1) (#("b" 0 1 (face font-lock-variable-name-face fontified t)) . -3109) (undo-tree-id9561 . -1) 3110) nil (25944 53345 536759 0) 0 nil])
([nil nil ((3106 . 3112)) nil (25944 53345 536753 0) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -3106) (undo-tree-id9552 . -1) (#("u" 0 1 (face font-lock-variable-name-face fontified t)) . -3107) (undo-tree-id9553 . -1) (#("m" 0 1 (face font-lock-variable-name-face fontified t)) . -3108) (undo-tree-id9554 . -1) (#("b" 0 1 (face font-lock-variable-name-face fontified t)) . -3109) (undo-tree-id9555 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -3110) (undo-tree-id9556 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -3111) (undo-tree-id9557 . -1) 3112) nil (25944 53345 536751 0) 0 nil])
([nil nil ((3106 . 3114)) nil (25944 53345 536742 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -3113) (undo-tree-id9551 . -1) 3114) nil (25944 53345 536741 0) 0 nil])
([nil nil ((#("k" 0 1 (face font-lock-variable-name-face fontified t)) . -3106) (undo-tree-id9544 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -3107) (undo-tree-id9545 . -1) (#("y" 0 1 (face font-lock-variable-name-face fontified t)) . -3108) (undo-tree-id9546 . -1) (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -3109) (undo-tree-id9547 . -1) (#("m" 0 1 (face font-lock-variable-name-face fontified t)) . -3110) (undo-tree-id9548 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -3111) (undo-tree-id9549 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -3112) (undo-tree-id9550 . -1) 3113) nil (25944 53345 536736 0) 0 nil])
([nil nil ((3106 . 3118)) nil (25944 53345 536716 0) 0 nil])
([nil nil ((#("usize" 0 5 (face font-lock-type-face fontified t)) . -3219) (undo-tree-id9870 . -5) (undo-tree-id9871 . -5) (undo-tree-id9872 . -4) (undo-tree-id9873 . -4) (undo-tree-id9874 . -4) (undo-tree-id9875 . -4) (undo-tree-id9876 . -4) (undo-tree-id9877 . -4) (undo-tree-id9878 . -4) (undo-tree-id9879 . -4) (undo-tree-id9880 . -4) (undo-tree-id9881 . -4) (undo-tree-id9882 . -4) (undo-tree-id9883 . -4) (undo-tree-id9884 . -4) (undo-tree-id9885 . -4) (undo-tree-id9886 . -4) (undo-tree-id9887 . -4) (undo-tree-id9888 . -4) (undo-tree-id9889 . -4) (undo-tree-id9890 . -4) (undo-tree-id9891 . -5) (undo-tree-id9892 . -5) (undo-tree-id9893 . -5) (undo-tree-id9894 . -5) (undo-tree-id9895 . -5) (undo-tree-id9896 . -5) (undo-tree-id9897 . -5) (undo-tree-id9898 . -5) (undo-tree-id9899 . -5) (undo-tree-id9900 . -5) 3224 (t 25944 53345 561652 371000)) nil (25944 53355 352929 0) 0 nil])
([nil nil ((#("as " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -3216) (undo-tree-id9834 . -3) (undo-tree-id9835 . -3) (undo-tree-id9836 . -3) (undo-tree-id9837 . -3) (undo-tree-id9838 . -3) (undo-tree-id9839 . -3) (undo-tree-id9840 . -3) (undo-tree-id9841 . -3) (undo-tree-id9842 . -3) (undo-tree-id9843 . -3) (undo-tree-id9844 . -3) (undo-tree-id9845 . -3) (undo-tree-id9846 . -3) (undo-tree-id9847 . -3) (undo-tree-id9848 . -3) (undo-tree-id9849 . -3) (undo-tree-id9850 . -3) (undo-tree-id9851 . -3) (undo-tree-id9852 . -3) (undo-tree-id9853 . -3) (undo-tree-id9854 . -3) (undo-tree-id9855 . -3) (undo-tree-id9856 . -3) (undo-tree-id9857 . -3) (undo-tree-id9858 . -3) (undo-tree-id9859 . -3) (undo-tree-id9860 . -3) (undo-tree-id9861 . -3) (undo-tree-id9862 . -3) (undo-tree-id9863 . -3) (undo-tree-id9864 . -3) (undo-tree-id9865 . -3) (undo-tree-id9866 . -3) (undo-tree-id9867 . -3) (undo-tree-id9868 . -3) (undo-tree-id9869 . -3) 3219) nil (25944 53355 352897 0) 0 nil])
([nil nil ((#("monitor " 0 8 (fontified t)) . -3208) (undo-tree-id9778 . -8) (undo-tree-id9779 . -8) (undo-tree-id9780 . -7) (undo-tree-id9781 . -7) (undo-tree-id9782 . -7) (undo-tree-id9783 . -7) (undo-tree-id9784 . -7) (undo-tree-id9785 . -7) (undo-tree-id9786 . -7) (undo-tree-id9787 . -7) (undo-tree-id9788 . -7) (undo-tree-id9789 . -7) (undo-tree-id9790 . -7) (undo-tree-id9791 . -7) (undo-tree-id9792 . -7) (undo-tree-id9793 . -7) (undo-tree-id9794 . -7) (undo-tree-id9795 . -8) (undo-tree-id9796 . -8) (undo-tree-id9797 . -8) (undo-tree-id9798 . -8) (undo-tree-id9799 . -8) (undo-tree-id9800 . -8) (undo-tree-id9801 . -8) (undo-tree-id9802 . -8) (undo-tree-id9803 . -8) (undo-tree-id9804 . -8) (undo-tree-id9805 . -8) (undo-tree-id9806 . -8) (undo-tree-id9807 . -8) (undo-tree-id9808 . -8) (undo-tree-id9809 . -8) (undo-tree-id9810 . -8) (undo-tree-id9811 . -8) (undo-tree-id9812 . -8) (undo-tree-id9813 . -8) (undo-tree-id9814 . -8) (undo-tree-id9815 . -8) (undo-tree-id9816 . -8) (undo-tree-id9817 . -8) (undo-tree-id9818 . -8) (undo-tree-id9819 . -8) (undo-tree-id9820 . -8) (undo-tree-id9821 . -8) (undo-tree-id9822 . -8) (undo-tree-id9823 . -8) (undo-tree-id9824 . -8) (undo-tree-id9825 . -8) (undo-tree-id9826 . -8) (undo-tree-id9827 . -8) (undo-tree-id9828 . -8) (undo-tree-id9829 . -8) (undo-tree-id9830 . -8) (undo-tree-id9831 . -8) (undo-tree-id9832 . -8) (undo-tree-id9833 . -8) 3216) nil (25944 53355 352860 0) 0 nil])
([nil nil ((#("key_" 0 4 (fontified t)) . -3204) (undo-tree-id9721 . -4) (undo-tree-id9722 . -4) (undo-tree-id9723 . -4) (undo-tree-id9724 . -4) (undo-tree-id9725 . -4) (undo-tree-id9726 . -4) (undo-tree-id9727 . -4) (undo-tree-id9728 . -4) (undo-tree-id9729 . -4) (undo-tree-id9730 . -4) (undo-tree-id9731 . -4) (undo-tree-id9732 . -4) (undo-tree-id9733 . -4) (undo-tree-id9734 . -4) (undo-tree-id9735 . -4) (undo-tree-id9736 . -4) (undo-tree-id9737 . -4) (undo-tree-id9738 . -4) (undo-tree-id9739 . -4) (undo-tree-id9740 . -4) (undo-tree-id9741 . -4) (undo-tree-id9742 . -4) (undo-tree-id9743 . -4) (undo-tree-id9744 . -4) (undo-tree-id9745 . -4) (undo-tree-id9746 . -4) (undo-tree-id9747 . -4) (undo-tree-id9748 . -4) (undo-tree-id9749 . -4) (undo-tree-id9750 . -4) (undo-tree-id9751 . -4) (undo-tree-id9752 . -4) (undo-tree-id9753 . -4) (undo-tree-id9754 . -4) (undo-tree-id9755 . -4) (undo-tree-id9756 . -4) (undo-tree-id9757 . -4) (undo-tree-id9758 . -4) (undo-tree-id9759 . -4) (undo-tree-id9760 . -4) (undo-tree-id9761 . -4) (undo-tree-id9762 . -4) (undo-tree-id9763 . -4) (undo-tree-id9764 . -4) (undo-tree-id9765 . -4) (undo-tree-id9766 . -4) (undo-tree-id9767 . -4) (undo-tree-id9768 . -4) (undo-tree-id9769 . -4) (undo-tree-id9770 . -4) (undo-tree-id9771 . -4) (undo-tree-id9772 . -4) (undo-tree-id9773 . -4) (undo-tree-id9774 . -4) (undo-tree-id9775 . -4) (undo-tree-id9776 . -4) (undo-tree-id9777 . -4) 3208) nil (25944 53355 352804 0) 0 nil])
([nil nil ((#("lock." 0 5 (fontified t)) . -3199) (undo-tree-id9659 . -5) (undo-tree-id9660 . -5) (undo-tree-id9661 . -5) (undo-tree-id9662 . -5) (undo-tree-id9663 . -5) (undo-tree-id9664 . -5) (undo-tree-id9665 . -5) (undo-tree-id9666 . -5) (undo-tree-id9667 . -5) (undo-tree-id9668 . -5) (undo-tree-id9669 . -5) (undo-tree-id9670 . -5) (undo-tree-id9671 . -5) (undo-tree-id9672 . -5) (undo-tree-id9673 . -5) (undo-tree-id9674 . -5) (undo-tree-id9675 . -5) (undo-tree-id9676 . -5) (undo-tree-id9677 . -5) (undo-tree-id9678 . -5) (undo-tree-id9679 . -5) (undo-tree-id9680 . -5) (undo-tree-id9681 . -5) (undo-tree-id9682 . -5) (undo-tree-id9683 . -5) (undo-tree-id9684 . -5) (undo-tree-id9685 . -5) (undo-tree-id9686 . -5) (undo-tree-id9687 . -5) (undo-tree-id9688 . -5) (undo-tree-id9689 . -5) (undo-tree-id9690 . -5) (undo-tree-id9691 . -5) (undo-tree-id9692 . -5) (undo-tree-id9693 . -5) (undo-tree-id9694 . -5) (undo-tree-id9695 . -5) (undo-tree-id9696 . -5) (undo-tree-id9697 . -5) (undo-tree-id9698 . -5) (undo-tree-id9699 . -5) (undo-tree-id9700 . -5) (undo-tree-id9701 . -5) (undo-tree-id9702 . -5) (undo-tree-id9703 . -5) (undo-tree-id9704 . -5) (undo-tree-id9705 . -5) (undo-tree-id9706 . -5) (undo-tree-id9707 . -5) (undo-tree-id9708 . -5) (undo-tree-id9709 . -5) (undo-tree-id9710 . -5) (undo-tree-id9711 . -5) (undo-tree-id9712 . -5) (undo-tree-id9713 . -5) (undo-tree-id9714 . -5) (undo-tree-id9715 . -5) (undo-tree-id9716 . -5) (undo-tree-id9717 . -5) (undo-tree-id9718 . -5) (undo-tree-id9719 . -5) (undo-tree-id9720 . -5) 3204) nil (25944 53355 352745 0) 0 nil])
([nil nil ((#("state_" 0 6 (fontified t)) . -3193) (undo-tree-id9590 . -6) (undo-tree-id9591 . -6) (undo-tree-id9592 . -6) (undo-tree-id9593 . -6) (undo-tree-id9594 . -6) (undo-tree-id9595 . -6) (undo-tree-id9596 . -6) (undo-tree-id9597 . -6) (undo-tree-id9598 . -6) (undo-tree-id9599 . -6) (undo-tree-id9600 . -6) (undo-tree-id9601 . -6) (undo-tree-id9602 . -6) (undo-tree-id9603 . -6) (undo-tree-id9604 . -6) (undo-tree-id9605 . -6) (undo-tree-id9606 . -6) (undo-tree-id9607 . -6) (undo-tree-id9608 . -6) (undo-tree-id9609 . -6) (undo-tree-id9610 . -6) (undo-tree-id9611 . -6) (undo-tree-id9612 . -6) (undo-tree-id9613 . -6) (undo-tree-id9614 . -6) (undo-tree-id9615 . -6) (undo-tree-id9616 . -6) (undo-tree-id9617 . -6) (undo-tree-id9618 . -6) (undo-tree-id9619 . -6) (undo-tree-id9620 . -6) (undo-tree-id9621 . -6) (undo-tree-id9622 . -6) (undo-tree-id9623 . -6) (undo-tree-id9624 . -6) (undo-tree-id9625 . -6) (undo-tree-id9626 . -6) (undo-tree-id9627 . -6) (undo-tree-id9628 . -6) (undo-tree-id9629 . -6) (undo-tree-id9630 . -6) (undo-tree-id9631 . -6) (undo-tree-id9632 . -6) (undo-tree-id9633 . -6) (undo-tree-id9634 . -6) (undo-tree-id9635 . -6) (undo-tree-id9636 . -6) (undo-tree-id9637 . -6) (undo-tree-id9638 . -6) (undo-tree-id9639 . -6) (undo-tree-id9640 . -6) (undo-tree-id9641 . -6) (undo-tree-id9642 . -6) (undo-tree-id9643 . -6) (undo-tree-id9644 . -6) (undo-tree-id9645 . -6) (undo-tree-id9646 . -6) (undo-tree-id9647 . -6) (undo-tree-id9648 . -6) (undo-tree-id9649 . -6) (undo-tree-id9650 . -6) (undo-tree-id9651 . -6) (undo-tree-id9652 . -6) (undo-tree-id9653 . -6) (undo-tree-id9654 . -6) (undo-tree-id9655 . -6) (undo-tree-id9656 . -6) (undo-tree-id9657 . -6) (undo-tree-id9658 . -6) 3199) nil (25944 53355 352682 0) 0 nil])
([nil nil ((3193 . 3196)) nil (25944 53355 352609 0) 0 nil])
([nil nil ((3193 . 3205) (#("adc" 0 3 (fontified nil)) . 3193) (3193 . 3196) (#("adc_data_num" 0 12 (fontified nil)) . -3193) (3193 . 3205) (#("adc" 0 3 (fontified t)) . -3193) (undo-tree-id9573 . -3) (undo-tree-id9574 . -3) (undo-tree-id9575 . -1) (undo-tree-id9576 . -2) (undo-tree-id9577 . -2) (undo-tree-id9578 . -2) (undo-tree-id9579 . -2) (undo-tree-id9580 . -2) (undo-tree-id9581 . -2) (undo-tree-id9582 . -3) (undo-tree-id9583 . -3) (undo-tree-id9584 . -3) (undo-tree-id9585 . -3) (undo-tree-id9586 . -3) (undo-tree-id9587 . -3) (undo-tree-id9588 . -3) (undo-tree-id9589 . -3) 3196) nil (25944 53355 352602 0) 0 nil])
([nil nil ((3161 . 3169) (t 25944 53355 378668 71000)) nil (25944 53368 344977 0) 0 nil])
([nil nil ((3169 . 3171)) nil (25944 53368 344976 0) 0 nil])
([nil nil ((3171 . 3175)) nil (25944 53368 344975 0) 0 nil])
([nil nil ((#("			    drop()" 0 13 (fontified t)) . 3162) (undo-tree-id9903 . -12) (undo-tree-id9904 . -7) (undo-tree-id9905 . -7) (undo-tree-id9906 . -8) (undo-tree-id9907 . -8) (undo-tree-id9908 . -8) (undo-tree-id9909 . -9) (undo-tree-id9910 . -9) (undo-tree-id9911 . -10) (undo-tree-id9912 . -10) (undo-tree-id9913 . -11) (undo-tree-id9914 . -11) (undo-tree-id9915 . -11) (undo-tree-id9916 . -11) (undo-tree-id9917 . -12) (undo-tree-id9918 . -12) (undo-tree-id9919 . -12) (undo-tree-id9920 . -13) (undo-tree-id9921 . -13) (undo-tree-id9922 . -13) (undo-tree-id9923 . -13) (undo-tree-id9924 . -12) (undo-tree-id9925 . -12) (undo-tree-id9926 . -12) (undo-tree-id9927 . -12) (undo-tree-id9928 . -12) (undo-tree-id9929 . -12) (undo-tree-id9930 . -12) (undo-tree-id9931 . -13) (undo-tree-id9932 . -13) (undo-tree-id9933 . -13) (undo-tree-id9934 . -13) (undo-tree-id9935 . -13) (undo-tree-id9936 . -13) (undo-tree-id9937 . -13) (undo-tree-id9938 . -13) (undo-tree-id9939 . -13) (undo-tree-id9940 . -13)) nil (25944 53368 344972 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3162) (undo-tree-id9901 . 1) (undo-tree-id9902 . -1)) nil (25944 53368 344931 0) 0 nil])
([nil nil ((1694 . 1696) (t 25944 53368 370223 84000)) nil (25944 53564 952025 0) 0 nil])
([nil nil ((1694 . 1696)) nil (25944 53564 952024 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2288 . 2289) (nil fontified nil 2288 . 2289) (nil fontified nil 2287 . 2288) (nil fontified nil 2283 . 2287) (nil fontified nil 2281 . 2283) (nil fontified nil 2277 . 2281) (nil fontified nil 2276 . 2277) (nil fontified nil 2274 . 2276) (nil fontified nil 2264 . 2274) (nil fontified nil 2259 . 2264) (nil fontified nil 2255 . 2259) (nil fontified nil 2252 . 2255) (nil fontified nil 2245 . 2252) (nil fontified nil 2244 . 2245) (nil fontified nil 2234 . 2244) (nil fontified nil 2232 . 2234) (nil fontified nil 2231 . 2232) (nil fontified nil 2227 . 2231) (nil fontified nil 2226 . 2227) (nil fontified nil 2225 . 2226) (nil fontified nil 2217 . 2225) (nil fontified nil 2213 . 2217) (nil fontified nil 2211 . 2213) (nil fontified nil 2203 . 2211) (nil fontified nil 2201 . 2203) (nil fontified nil 2194 . 2201) (nil fontified nil 2185 . 2194) (nil fontified nil 2183 . 2185) (nil fontified nil 2173 . 2183) (nil fontified nil 2172 . 2173) (nil fontified nil 2170 . 2172) (nil fontified nil 2166 . 2170) (nil fontified nil 2165 . 2166) (nil fontified nil 2155 . 2165) (nil fontified nil 2151 . 2155) (nil fontified nil 2150 . 2151) (nil fontified nil 2149 . 2150) (nil fontified nil 2144 . 2149) (nil fontified nil 2137 . 2144) (nil fontified nil 2136 . 2137) (nil fontified nil 2131 . 2136) (nil fontified nil 2128 . 2131) (nil fontified nil 2118 . 2128) (nil fontified nil 2117 . 2118) (nil fontified nil 2114 . 2117) (nil fontified nil 2113 . 2114) (nil fontified nil 2110 . 2113) (nil fontified nil 2106 . 2110) (nil fontified nil 2089 . 2106) (nil fontified nil 2050 . 2089) (nil fontified nil 2047 . 2050) (nil fontified nil 2043 . 2047) (nil fontified nil 2030 . 2043) (nil fontified nil 2021 . 2030) (nil fontified nil 2018 . 2021) (nil fontified nil 2017 . 2018) (nil fontified nil 2016 . 2017) (nil fontified nil 2013 . 2016) (nil fontified nil 2012 . 2013) (nil fontified nil 2009 . 2012) (nil fontified nil 2006 . 2009) (nil fontified nil 2002 . 2006) (nil fontified nil 1999 . 2002) (nil fontified nil 1980 . 1999) (nil fontified nil 1971 . 1980) (nil fontified nil 1946 . 1971) (nil fontified nil 1937 . 1946) (nil fontified nil 1933 . 1937) (nil fontified nil 1930 . 1933) (nil fontified nil 1926 . 1930) (nil fontified nil 1925 . 1926) (nil fontified nil 1922 . 1925) (nil fontified nil 1919 . 1922) (nil fontified nil 1915 . 1919) (nil fontified nil 1912 . 1915) (nil fontified nil 1911 . 1912) (nil fontified nil 1905 . 1911) (nil fontified nil 1900 . 1905) (nil fontified nil 1894 . 1900) (nil fontified nil 1893 . 1894) (nil fontified nil 1892 . 1893) (nil fontified nil 1891 . 1892) (nil fontified nil 1890 . 1891) (nil fontified nil 1889 . 1890) (nil fontified nil 1887 . 1889) (nil fontified nil 1886 . 1887) (nil fontified nil 1885 . 1886) (nil fontified nil 1880 . 1885) (nil fontified nil 1879 . 1880) (nil fontified nil 1874 . 1879) (nil fontified nil 1873 . 1874) (nil fontified nil 1870 . 1873) (nil fontified nil 1868 . 1870) (nil fontified nil 1867 . 1868) (nil fontified nil 1865 . 1867) (nil fontified nil 1860 . 1865) (nil fontified nil 1858 . 1860) (nil fontified nil 1853 . 1858) (nil fontified nil 1851 . 1853) (nil fontified nil 1846 . 1851) (nil fontified nil 1842 . 1846) (nil fontified nil 1840 . 1842) (nil fontified nil 1837 . 1840) (nil fontified nil 1836 . 1837) (nil fontified nil 1834 . 1836) (nil fontified nil 1827 . 1834) (nil fontified nil 1823 . 1827) (nil fontified nil 1821 . 1823) (nil fontified nil 1806 . 1821) (nil fontified nil 1805 . 1806) (nil fontified nil 1803 . 1805) (nil fontified nil 1802 . 1803) (nil fontified nil 1797 . 1802) (nil fontified nil 1796 . 1797) (nil fontified nil 1779 . 1796) (nil fontified nil 1699 . 1779) (nil fontified nil 1696 . 1699) (1696 . 2289)) nil (25944 53564 952018 0) 0 nil])
([nil nil ((#("settings" 0 8 (face font-lock-function-name-face fontified t)) . -1813) (undo-tree-id10107 . -8) (undo-tree-id10108 . -8) (undo-tree-id10109 . -8) (undo-tree-id10110 . -8) (undo-tree-id10111 . -8) (undo-tree-id10112 . -8) (undo-tree-id10113 . -8) (undo-tree-id10114 . -8) (undo-tree-id10115 . -8) (undo-tree-id10116 . -8) (undo-tree-id10117 . -8) (undo-tree-id10118 . -8) (undo-tree-id10119 . -8) (undo-tree-id10120 . -8) (undo-tree-id10121 . -8) (undo-tree-id10122 . -8) 1821) nil (25944 53564 951986 0) 0 nil])
([nil nil ((#("upload_" 0 7 (face font-lock-function-name-face fontified t)) . -1806) (undo-tree-id10088 . -7) (undo-tree-id10089 . -7) (undo-tree-id10090 . -7) (undo-tree-id10091 . -7) (undo-tree-id10092 . -7) (undo-tree-id10093 . -7) (undo-tree-id10094 . -7) (undo-tree-id10095 . -7) (undo-tree-id10096 . -7) (undo-tree-id10097 . -7) (undo-tree-id10098 . -7) (undo-tree-id10099 . -7) (undo-tree-id10100 . -7) (undo-tree-id10101 . -7) (undo-tree-id10102 . -7) (undo-tree-id10103 . -7) (undo-tree-id10104 . -7) (undo-tree-id10105 . -7) (undo-tree-id10106 . -7) 1813) nil (25944 53564 951969 0) 0 nil])
([nil nil ((1806 . 1814)) nil (25944 53564 951948 0) 0 nil])
([nil nil ((1814 . 1817)) nil (25944 53564 951947 0) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-function-name-face fontified t)) . -1810) (undo-tree-id9941 . -1) (undo-tree-id9942 . -1) (undo-tree-id9943 . -1) (undo-tree-id9944 . -1) (undo-tree-id9945 . -1) (undo-tree-id9946 . -1) (undo-tree-id9947 . -1) (undo-tree-id9948 . -1) (undo-tree-id9949 . -1) (undo-tree-id9950 . -1) (undo-tree-id9951 . -1) (undo-tree-id9952 . -1) (undo-tree-id9953 . -1) (undo-tree-id9954 . -1) (undo-tree-id9955 . -1) (undo-tree-id9956 . -1) (undo-tree-id9957 . -1) (undo-tree-id9958 . -1) (undo-tree-id9959 . -1) (undo-tree-id9960 . -1) (undo-tree-id9961 . -1) (undo-tree-id9962 . -1) (undo-tree-id9963 . -1) (undo-tree-id9964 . -1) (undo-tree-id9965 . -1) (undo-tree-id9966 . -1) (undo-tree-id9967 . -1) (undo-tree-id9968 . -1) (undo-tree-id9969 . -1) (undo-tree-id9970 . -1) (undo-tree-id9971 . -1) (undo-tree-id9972 . -1) (undo-tree-id9973 . -1) (undo-tree-id9974 . -1) (undo-tree-id9975 . -1) (undo-tree-id9976 . -1) (undo-tree-id9977 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -1811) (undo-tree-id9978 . -1) (undo-tree-id9979 . -1) (undo-tree-id9980 . -1) (undo-tree-id9981 . -1) (undo-tree-id9982 . -1) (undo-tree-id9983 . -1) (undo-tree-id9984 . -1) (undo-tree-id9985 . -1) (undo-tree-id9986 . -1) (undo-tree-id9987 . -1) (undo-tree-id9988 . -1) (undo-tree-id9989 . -1) (undo-tree-id9990 . -1) (undo-tree-id9991 . -1) (undo-tree-id9992 . -1) (undo-tree-id9993 . -1) (undo-tree-id9994 . -1) (undo-tree-id9995 . -1) (undo-tree-id9996 . -1) (undo-tree-id9997 . -1) (undo-tree-id9998 . -1) (undo-tree-id9999 . -1) (undo-tree-id10000 . -1) (undo-tree-id10001 . -1) (undo-tree-id10002 . -1) (undo-tree-id10003 . -1) (undo-tree-id10004 . -1) (undo-tree-id10005 . -1) (undo-tree-id10006 . -1) (undo-tree-id10007 . -1) (undo-tree-id10008 . -1) (undo-tree-id10009 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -1812) (undo-tree-id10010 . -1) (undo-tree-id10011 . -1) (undo-tree-id10012 . -1) (undo-tree-id10013 . -1) (undo-tree-id10014 . -1) (undo-tree-id10015 . -1) (undo-tree-id10016 . -1) (undo-tree-id10017 . -1) (undo-tree-id10018 . -1) (undo-tree-id10019 . -1) (undo-tree-id10020 . -1) (undo-tree-id10021 . -1) (undo-tree-id10022 . -1) (undo-tree-id10023 . -1) (undo-tree-id10024 . -1) (undo-tree-id10025 . -1) (undo-tree-id10026 . -1) (undo-tree-id10027 . -1) (undo-tree-id10028 . -1) (undo-tree-id10029 . -1) (undo-tree-id10030 . -1) (undo-tree-id10031 . -1) (undo-tree-id10032 . -1) (undo-tree-id10033 . -1) (undo-tree-id10034 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -1813) (undo-tree-id10035 . -1) (undo-tree-id10036 . -1) (undo-tree-id10037 . -1) (undo-tree-id10038 . -1) (undo-tree-id10039 . -1) (undo-tree-id10040 . -1) (undo-tree-id10041 . -1) (undo-tree-id10042 . -1) (undo-tree-id10043 . -1) (undo-tree-id10044 . -1) (undo-tree-id10045 . -1) (undo-tree-id10046 . -1) (undo-tree-id10047 . -1) (undo-tree-id10048 . -1) (undo-tree-id10049 . -1) (undo-tree-id10050 . -1) (undo-tree-id10051 . -1) (undo-tree-id10052 . -1) (undo-tree-id10053 . -1) (undo-tree-id10054 . -1) (undo-tree-id10055 . -1) (undo-tree-id10056 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -1814) (undo-tree-id10057 . -1) (undo-tree-id10058 . -1) (undo-tree-id10059 . -1) (undo-tree-id10060 . -1) (undo-tree-id10061 . -1) (undo-tree-id10062 . -1) (undo-tree-id10063 . -1) (undo-tree-id10064 . -1) (undo-tree-id10065 . -1) (undo-tree-id10066 . -1) (undo-tree-id10067 . -1) (undo-tree-id10068 . -1) (undo-tree-id10069 . -1) (undo-tree-id10070 . -1) (undo-tree-id10071 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -1815) (undo-tree-id10072 . -1) (undo-tree-id10073 . -1) (undo-tree-id10074 . -1) (undo-tree-id10075 . -1) (undo-tree-id10076 . -1) (undo-tree-id10077 . -1) (undo-tree-id10078 . -1) (undo-tree-id10079 . -1) (undo-tree-id10080 . -1) (undo-tree-id10081 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -1816) (undo-tree-id10082 . -1) (undo-tree-id10083 . -1) (undo-tree-id10084 . -1) (undo-tree-id10085 . -1) (undo-tree-id10086 . -1) (undo-tree-id10087 . -1) 1817) nil (25944 53564 951938 0) 0 nil])
([nil nil ((1810 . 1817)) nil (25944 53564 951777 0) 0 nil])
([nil nil ((#("unwrap()" 0 8 (fontified t)) . -2199) (undo-tree-id10368 . -8) (undo-tree-id10369 . -8) (undo-tree-id10370 . -8) (undo-tree-id10371 . -8) (undo-tree-id10372 . -8) (undo-tree-id10373 . -8) (undo-tree-id10374 . -8) (undo-tree-id10375 . -8) (undo-tree-id10376 . -8) (undo-tree-id10377 . -8) (undo-tree-id10378 . -8) (undo-tree-id10379 . -8) 2207 (t 25944 53564 978416 204000)) nil (25944 53606 145121 0) 0 nil])
([nil nil ((#("payload)." 0 7 (fontified t) 7 9 (fontified t)) . -2190) (undo-tree-id10349 . -9) (undo-tree-id10350 . -9) (undo-tree-id10351 . -9) (undo-tree-id10352 . -9) (undo-tree-id10353 . -9) (undo-tree-id10354 . -9) (undo-tree-id10355 . -9) (undo-tree-id10356 . -9) (undo-tree-id10357 . -9) (undo-tree-id10358 . -9) (undo-tree-id10359 . -9) (undo-tree-id10360 . -9) (undo-tree-id10361 . -9) (undo-tree-id10362 . -9) (undo-tree-id10363 . -9) (undo-tree-id10364 . -9) (undo-tree-id10365 . -9) (undo-tree-id10366 . -9) (undo-tree-id10367 . -9) 2199) nil (25944 53606 145107 0) 0 nil])
([nil nil ((#("str(" 0 4 (fontified t)) . -2186) (undo-tree-id10322 . -4) (undo-tree-id10323 . -4) (undo-tree-id10324 . -4) (undo-tree-id10325 . -4) (undo-tree-id10326 . -4) (undo-tree-id10327 . -4) (undo-tree-id10328 . -4) (undo-tree-id10329 . -4) (undo-tree-id10330 . -4) (undo-tree-id10331 . -4) (undo-tree-id10332 . -4) (undo-tree-id10333 . -4) (undo-tree-id10334 . -4) (undo-tree-id10335 . -4) (undo-tree-id10336 . -4) (undo-tree-id10337 . -4) (undo-tree-id10338 . -4) (undo-tree-id10339 . -4) (undo-tree-id10340 . -4) (undo-tree-id10341 . -4) (undo-tree-id10342 . -4) (undo-tree-id10343 . -4) (undo-tree-id10344 . -4) (undo-tree-id10345 . -4) (undo-tree-id10346 . -4) (undo-tree-id10347 . -4) (undo-tree-id10348 . -4) 2190) nil (25944 53606 145087 0) 0 nil])
([nil nil ((#("from_" 0 5 (fontified t)) . -2181) (undo-tree-id10286 . -5) (undo-tree-id10287 . -5) (undo-tree-id10288 . -5) (undo-tree-id10289 . -5) (undo-tree-id10290 . -5) (undo-tree-id10291 . -5) (undo-tree-id10292 . -5) (undo-tree-id10293 . -5) (undo-tree-id10294 . -5) (undo-tree-id10295 . -5) (undo-tree-id10296 . -5) (undo-tree-id10297 . -5) (undo-tree-id10298 . -5) (undo-tree-id10299 . -5) (undo-tree-id10300 . -5) (undo-tree-id10301 . -5) (undo-tree-id10302 . -5) (undo-tree-id10303 . -5) (undo-tree-id10304 . -5) (undo-tree-id10305 . -5) (undo-tree-id10306 . -5) (undo-tree-id10307 . -5) (undo-tree-id10308 . -5) (undo-tree-id10309 . -5) (undo-tree-id10310 . -5) (undo-tree-id10311 . -5) (undo-tree-id10312 . -5) (undo-tree-id10313 . -5) (undo-tree-id10314 . -5) (undo-tree-id10315 . -5) (undo-tree-id10316 . -5) (undo-tree-id10317 . -5) (undo-tree-id10318 . -5) (undo-tree-id10319 . -5) (undo-tree-id10320 . -5) (undo-tree-id10321 . -5) 2186) nil (25944 53606 145058 0) 0 nil])
([nil nil ((#("json::" 0 4 (face font-lock-constant-face fontified t) 4 6 (fontified t)) . -2175) (undo-tree-id10243 . -6) (undo-tree-id10244 . -6) (undo-tree-id10245 . -6) (undo-tree-id10246 . -6) (undo-tree-id10247 . -6) (undo-tree-id10248 . -6) (undo-tree-id10249 . -6) (undo-tree-id10250 . -6) (undo-tree-id10251 . -6) (undo-tree-id10252 . -6) (undo-tree-id10253 . -6) (undo-tree-id10254 . -6) (undo-tree-id10255 . -6) (undo-tree-id10256 . -6) (undo-tree-id10257 . -6) (undo-tree-id10258 . -6) (undo-tree-id10259 . -6) (undo-tree-id10260 . -6) (undo-tree-id10261 . -6) (undo-tree-id10262 . -6) (undo-tree-id10263 . -6) (undo-tree-id10264 . -6) (undo-tree-id10265 . -6) (undo-tree-id10266 . -6) (undo-tree-id10267 . -6) (undo-tree-id10268 . -6) (undo-tree-id10269 . -6) (undo-tree-id10270 . -6) (undo-tree-id10271 . -6) (undo-tree-id10272 . -6) (undo-tree-id10273 . -6) (undo-tree-id10274 . -6) (undo-tree-id10275 . -6) (undo-tree-id10276 . -6) (undo-tree-id10277 . -6) (undo-tree-id10278 . -6) (undo-tree-id10279 . -6) (undo-tree-id10280 . -6) (undo-tree-id10281 . -6) (undo-tree-id10282 . -6) (undo-tree-id10283 . -6) (undo-tree-id10284 . -6) (undo-tree-id10285 . -6) 2181) nil (25944 53606 145021 0) 0 nil])
([nil nil ((#("serde_" 0 6 (fontified t)) . -2169) (undo-tree-id10193 . -6) (undo-tree-id10194 . -6) (undo-tree-id10195 . -6) (undo-tree-id10196 . -6) (undo-tree-id10197 . -6) (undo-tree-id10198 . -6) (undo-tree-id10199 . -6) (undo-tree-id10200 . -6) (undo-tree-id10201 . -6) (undo-tree-id10202 . -6) (undo-tree-id10203 . -6) (undo-tree-id10204 . -6) (undo-tree-id10205 . -6) (undo-tree-id10206 . -6) (undo-tree-id10207 . -6) (undo-tree-id10208 . -6) (undo-tree-id10209 . -6) (undo-tree-id10210 . -6) (undo-tree-id10211 . -6) (undo-tree-id10212 . -6) (undo-tree-id10213 . -6) (undo-tree-id10214 . -6) (undo-tree-id10215 . -6) (undo-tree-id10216 . -6) (undo-tree-id10217 . -6) (undo-tree-id10218 . -6) (undo-tree-id10219 . -6) (undo-tree-id10220 . -6) (undo-tree-id10221 . -6) (undo-tree-id10222 . -6) (undo-tree-id10223 . -6) (undo-tree-id10224 . -6) (undo-tree-id10225 . -6) (undo-tree-id10226 . -6) (undo-tree-id10227 . -6) (undo-tree-id10228 . -6) (undo-tree-id10229 . -6) (undo-tree-id10230 . -6) (undo-tree-id10231 . -6) (undo-tree-id10232 . -6) (undo-tree-id10233 . -6) (undo-tree-id10234 . -6) (undo-tree-id10235 . -6) (undo-tree-id10236 . -6) (undo-tree-id10237 . -6) (undo-tree-id10238 . -6) (undo-tree-id10239 . -6) (undo-tree-id10240 . -6) (undo-tree-id10241 . -6) (undo-tree-id10242 . -6) 2175) nil (25944 53606 144976 0) 0 nil])
([nil nil ((2169 . 2170)) nil (25944 53606 144924 0) 0 nil])
([nil nil ((2169 . 2176) (#("p" 0 1 (fontified nil)) . 2169) (2169 . 2170) (#("payload" 0 7 (fontified nil)) . -2169) (2169 . 2176) (#("p" 0 1 (fontified t)) . -2169) (undo-tree-id10188 . -1) (undo-tree-id10189 . -1) (undo-tree-id10190 . -1) (undo-tree-id10191 . -1) (undo-tree-id10192 . -1) 2170) nil (25944 53606 144922 0) 0 nil])
([nil nil ((2176 . 2178)) nil (25944 53606 144914 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2177 2184 #s(yas--snippet nil nil #s(yas--exit 2184 nil) 155 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 2184 nil) 155 nil nil nil nil)) (2177 . 2184) (#("parse()$0" 0 9 (fontified nil)) . 2177) (2177 . 2186) (#("p" 0 1 (fontified nil)) . 2177) (2177 . 2178) (#("parse()" 0 7 (fontified nil)) . -2177) (2177 . 2184) (#("p" 0 1 (fontified t)) . -2177) (undo-tree-id10182 . -1) (undo-tree-id10183 . -1) (undo-tree-id10184 . -1) (undo-tree-id10185 . -1) (undo-tree-id10186 . -1) (undo-tree-id10187 . -1) 2178) nil (25944 53606 144912 0) 0 nil])
([nil nil ((2184 . 2186)) nil (25944 53606 144902 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -2184) (undo-tree-id10167 . -1) (undo-tree-id10168 . -1) (undo-tree-id10169 . -1) (undo-tree-id10170 . -1) (undo-tree-id10171 . -1) (undo-tree-id10172 . -1) (undo-tree-id10173 . -1) (undo-tree-id10174 . -1) (undo-tree-id10175 . -1) (undo-tree-id10176 . -1) (undo-tree-id10177 . -1) (#(":" 0 1 (fontified t)) . -2185) (undo-tree-id10178 . -1) (undo-tree-id10179 . -1) (undo-tree-id10180 . -1) (undo-tree-id10181 . -1) 2186) nil (25944 53606 144900 0) 0 nil])
([nil nil ((2182 . 2184)) nil (25944 53606 144882 0) 0 nil])
([nil nil ((#("M" 0 1 (fontified t)) . -2182) (undo-tree-id10148 . -1) (undo-tree-id10149 . -1) (undo-tree-id10150 . -1) (undo-tree-id10151 . -1) (undo-tree-id10152 . -1) (undo-tree-id10153 . -1) (undo-tree-id10154 . -1) (undo-tree-id10155 . -1) (undo-tree-id10156 . -1) (undo-tree-id10157 . -1) (undo-tree-id10158 . -1) (undo-tree-id10159 . -1) (#("<" 0 1 (syntax-table (1) fontified t)) . -2183) (undo-tree-id10160 . -1) (undo-tree-id10161 . -1) (undo-tree-id10162 . -1) (undo-tree-id10163 . -1) (undo-tree-id10164 . -1) (undo-tree-id10165 . -1) (undo-tree-id10166 . -1) 2184) nil (25944 53606 144879 0) 0 nil])
([nil nil ((2182 . 2184)) nil (25944 53606 144859 0) 0 nil])
([nil nil ((2183 . 2186)) nil (25944 53606 144857 0) 0 nil])
([nil nil ((2187 . 2189)) nil (25944 53606 144856 0) 0 nil])
([nil nil ((2191 . 2194)) nil (25944 53606 144855 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2191) (undo-tree-id10123 . -1) (undo-tree-id10124 . -1) (undo-tree-id10125 . -1) (undo-tree-id10126 . -1) (undo-tree-id10127 . -1) (undo-tree-id10128 . -1) (undo-tree-id10129 . -1) (undo-tree-id10130 . -1) (undo-tree-id10131 . -1) (undo-tree-id10132 . -1) (undo-tree-id10133 . -1) (undo-tree-id10134 . -1) (undo-tree-id10135 . -1) (#("u" 0 1 (fontified t)) . -2192) (undo-tree-id10136 . -1) (undo-tree-id10137 . -1) (undo-tree-id10138 . -1) (undo-tree-id10139 . -1) (undo-tree-id10140 . -1) (undo-tree-id10141 . -1) (undo-tree-id10142 . -1) (undo-tree-id10143 . -1) (undo-tree-id10144 . -1) (#("p" 0 1 (fontified t)) . -2193) (undo-tree-id10145 . -1) (undo-tree-id10146 . -1) (undo-tree-id10147 . -1) 2194) nil (25944 53606 144850 0) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-type-face fontified t)) . -2183) (undo-tree-id10380 . -1) (undo-tree-id10381 . -1) (undo-tree-id10382 . -1) (undo-tree-id10383 . -1) (undo-tree-id10384 . -1) (undo-tree-id10385 . -1) 2184 (t 25944 53606 172900 496000)) nil (25944 53611 770939 0) 0 nil])
([nil nil ((2183 . 2184)) nil (25944 53611 770919 0) 0 nil])
([nil nil ((#("keys" 0 4 (fontified t)) . -2162) (undo-tree-id10774 . -4) (undo-tree-id10775 . -4) (undo-tree-id10776 . -4) (undo-tree-id10777 . -4) (undo-tree-id10778 . -4) (undo-tree-id10779 . -4) (undo-tree-id10780 . -4) (undo-tree-id10781 . -4) (undo-tree-id10782 . -4) (undo-tree-id10783 . -4) (undo-tree-id10784 . -4) (undo-tree-id10785 . -4) (undo-tree-id10786 . -4) (undo-tree-id10787 . -4) (undo-tree-id10788 . -4) (undo-tree-id10789 . -4) 2166 (t 25944 53611 798967 348000)) nil (25944 53657 562908 0) 0 nil])
([nil nil ((2162 . 2164)) nil (25944 53657 562891 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2161) (undo-tree-id10676 . -1) (undo-tree-id10677 . -1) (undo-tree-id10678 . -1) (undo-tree-id10679 . -1) (undo-tree-id10680 . -1) (undo-tree-id10681 . -1) (undo-tree-id10682 . -1) (undo-tree-id10683 . -1) (undo-tree-id10684 . -1) (undo-tree-id10685 . -1) (undo-tree-id10686 . -1) (undo-tree-id10687 . -1) (undo-tree-id10688 . -1) (undo-tree-id10689 . -1) (undo-tree-id10690 . -1) (undo-tree-id10691 . -1) (undo-tree-id10692 . -1) (undo-tree-id10693 . -1) (undo-tree-id10694 . -1) (undo-tree-id10695 . -1) (undo-tree-id10696 . -1) (undo-tree-id10697 . -1) (undo-tree-id10698 . -1) (undo-tree-id10699 . -1) (undo-tree-id10700 . -1) (undo-tree-id10701 . -1) (undo-tree-id10702 . -1) (undo-tree-id10703 . -1) (undo-tree-id10704 . -1) (undo-tree-id10705 . -1) (undo-tree-id10706 . -1) (undo-tree-id10707 . -1) (undo-tree-id10708 . -1) (undo-tree-id10709 . -1) (undo-tree-id10710 . -1) (undo-tree-id10711 . -1) (undo-tree-id10712 . -1) (undo-tree-id10713 . -1) (undo-tree-id10714 . -1) (undo-tree-id10715 . -1) (undo-tree-id10716 . -1) (undo-tree-id10717 . -1) (undo-tree-id10718 . -1) (undo-tree-id10719 . -1) (undo-tree-id10720 . -1) (undo-tree-id10721 . -1) (undo-tree-id10722 . -1) (undo-tree-id10723 . -1) (undo-tree-id10724 . -1) (undo-tree-id10725 . -1) (undo-tree-id10726 . -1) (undo-tree-id10727 . -1) (undo-tree-id10728 . -1) (undo-tree-id10729 . -1) (undo-tree-id10730 . -1) (undo-tree-id10731 . -1) (undo-tree-id10732 . -1) (undo-tree-id10733 . -1) (undo-tree-id10734 . -1) (undo-tree-id10735 . -1) (undo-tree-id10736 . -1) (undo-tree-id10737 . -1) (undo-tree-id10738 . -1) (undo-tree-id10739 . -1) (#("m" 0 1 (fontified t)) . -2162) (undo-tree-id10740 . -1) (undo-tree-id10741 . -1) (undo-tree-id10742 . -1) (undo-tree-id10743 . -1) (undo-tree-id10744 . -1) (undo-tree-id10745 . -1) (undo-tree-id10746 . -1) (undo-tree-id10747 . -1) (undo-tree-id10748 . -1) (undo-tree-id10749 . -1) (undo-tree-id10750 . -1) (undo-tree-id10751 . -1) (undo-tree-id10752 . -1) (undo-tree-id10753 . -1) (undo-tree-id10754 . -1) (undo-tree-id10755 . -1) (undo-tree-id10756 . -1) (undo-tree-id10757 . -1) (undo-tree-id10758 . -1) (undo-tree-id10759 . -1) (undo-tree-id10760 . -1) (undo-tree-id10761 . -1) (undo-tree-id10762 . -1) (undo-tree-id10763 . -1) (undo-tree-id10764 . -1) (#("o" 0 1 (fontified t)) . -2163) (undo-tree-id10765 . -1) (undo-tree-id10766 . -1) (undo-tree-id10767 . -1) (undo-tree-id10768 . -1) (undo-tree-id10769 . -1) (undo-tree-id10770 . -1) (undo-tree-id10771 . -1) (undo-tree-id10772 . -1) (undo-tree-id10773 . -1) 2164) nil (25944 53657 562886 0) 0 nil])
([nil nil ((2161 . 2163)) nil (25944 53657 562792 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -2162) (undo-tree-id10668 . -1) (undo-tree-id10669 . -1) (undo-tree-id10670 . -1) (undo-tree-id10671 . -1) (undo-tree-id10672 . -1) (undo-tree-id10673 . -1) (undo-tree-id10674 . -1) (undo-tree-id10675 . -1) 2163) nil (25944 53657 562790 0) 0 nil])
([nil nil ((#("    state_lock. = payload.parse<i32>::();" 0 4 (fontified t) 4 15 (fontified t) 15 17 (fontified t) 17 18 (fontified t) 18 26 (fontified t) 26 31 (fontified t) 31 32 (syntax-table (1) fontified t) 32 35 (face font-lock-type-face fontified t) 35 36 (syntax-table (1) fontified t) 36 40 (fontified t) 40 41 (fontified t)) . 2147) (undo-tree-id10503 . -14) (undo-tree-id10504 . -34) (undo-tree-id10505 . -32) (undo-tree-id10506 . -32) (undo-tree-id10507 . -32) (undo-tree-id10508 . -32) (undo-tree-id10509 . -32) (undo-tree-id10510 . -33) (undo-tree-id10511 . -33) (undo-tree-id10512 . -33) (undo-tree-id10513 . -33) (undo-tree-id10514 . -33) (undo-tree-id10515 . -33) (undo-tree-id10516 . -33) (undo-tree-id10517 . -33) (undo-tree-id10518 . -33) (undo-tree-id10519 . -33) (undo-tree-id10520 . -33) (undo-tree-id10521 . -33) (undo-tree-id10522 . -33) (undo-tree-id10523 . -33) (undo-tree-id10524 . -33) (undo-tree-id10525 . -33) (undo-tree-id10526 . -33) (undo-tree-id10527 . -33) (undo-tree-id10528 . -33) (undo-tree-id10529 . -33) (undo-tree-id10530 . -33) (undo-tree-id10531 . -33) (undo-tree-id10532 . -33) (undo-tree-id10533 . -33) (undo-tree-id10534 . -33) (undo-tree-id10535 . -33) (undo-tree-id10536 . -33) (undo-tree-id10537 . -33) (undo-tree-id10538 . -33) (undo-tree-id10539 . -33) (undo-tree-id10540 . -33) (undo-tree-id10541 . -33) (undo-tree-id10542 . -33) (undo-tree-id10543 . -33) (undo-tree-id10544 . -33) (undo-tree-id10545 . -33) (undo-tree-id10546 . -33) (undo-tree-id10547 . -33) (undo-tree-id10548 . -33) (undo-tree-id10549 . -33) (undo-tree-id10550 . -33) (undo-tree-id10551 . -33) (undo-tree-id10552 . -33) (undo-tree-id10553 . -33) (undo-tree-id10554 . -33) (undo-tree-id10555 . -33) (undo-tree-id10556 . -33) (undo-tree-id10557 . -33) (undo-tree-id10558 . -33) (undo-tree-id10559 . -33) (undo-tree-id10560 . -33) (undo-tree-id10561 . -33) (undo-tree-id10562 . -33) (undo-tree-id10563 . -33) (undo-tree-id10564 . -33) (undo-tree-id10565 . -33) (undo-tree-id10566 . -33) (undo-tree-id10567 . -33) (undo-tree-id10568 . -33) (undo-tree-id10569 . -33) (undo-tree-id10570 . -14) (undo-tree-id10571 . -14) (undo-tree-id10572 . -14) (undo-tree-id10573 . -14) (undo-tree-id10574 . -14) (undo-tree-id10575 . -14) (undo-tree-id10576 . -14) (undo-tree-id10577 . -14) (undo-tree-id10578 . -14) (undo-tree-id10579 . -14) (undo-tree-id10580 . -14) (undo-tree-id10581 . -14) (undo-tree-id10582 . -14) (undo-tree-id10583 . -14) (undo-tree-id10584 . -14) (undo-tree-id10585 . -14) (undo-tree-id10586 . -14) (undo-tree-id10587 . -14) (undo-tree-id10588 . -14) (undo-tree-id10589 . -14) (undo-tree-id10590 . -14) (undo-tree-id10591 . -14) (undo-tree-id10592 . -14) (undo-tree-id10593 . -14) (undo-tree-id10594 . -14) (undo-tree-id10595 . -14) (undo-tree-id10596 . -14) (undo-tree-id10597 . -14) (undo-tree-id10598 . -14) (undo-tree-id10599 . -14) (undo-tree-id10600 . -14) (undo-tree-id10601 . -14) (undo-tree-id10602 . -14) (undo-tree-id10603 . -14) (undo-tree-id10604 . -14) (undo-tree-id10605 . -14) (undo-tree-id10606 . -14) (undo-tree-id10607 . -14) (undo-tree-id10608 . -14) (undo-tree-id10609 . -14) (undo-tree-id10610 . -14) (undo-tree-id10611 . -14) (undo-tree-id10612 . -14) (undo-tree-id10613 . -14) (undo-tree-id10614 . -14) (undo-tree-id10615 . -14) (undo-tree-id10616 . -14) (undo-tree-id10617 . -14) (undo-tree-id10618 . -14) (undo-tree-id10619 . -14) (undo-tree-id10620 . -14) (undo-tree-id10621 . -14) (undo-tree-id10622 . -14) (undo-tree-id10623 . -14) (undo-tree-id10624 . -14) (undo-tree-id10625 . -14) (undo-tree-id10626 . -14) (undo-tree-id10627 . -14) (undo-tree-id10628 . -14) (undo-tree-id10629 . -14) (undo-tree-id10630 . -14) (undo-tree-id10631 . -14) (undo-tree-id10632 . -14) (undo-tree-id10633 . -14) (undo-tree-id10634 . -14) (undo-tree-id10635 . -14) (undo-tree-id10636 . -14) (undo-tree-id10637 . -14) (undo-tree-id10638 . -14) (undo-tree-id10639 . -15) (undo-tree-id10640 . -15) (undo-tree-id10641 . -15) (undo-tree-id10642 . -15) (undo-tree-id10643 . -15) (undo-tree-id10644 . -15) (undo-tree-id10645 . -15) (undo-tree-id10646 . -15) (undo-tree-id10647 . 26) (undo-tree-id10648 . -15) (undo-tree-id10649 . -15) (undo-tree-id10650 . -15) (undo-tree-id10651 . -15) (undo-tree-id10652 . -15) (undo-tree-id10653 . -15) (undo-tree-id10654 . -15) (undo-tree-id10655 . -15) (undo-tree-id10656 . -15) (undo-tree-id10657 . -15) (undo-tree-id10658 . -15) (undo-tree-id10659 . -15) (undo-tree-id10660 . -15) (undo-tree-id10661 . -15) (undo-tree-id10662 . -15) (undo-tree-id10663 . -15) (undo-tree-id10664 . -15) (undo-tree-id10665 . -15) (undo-tree-id10666 . -15) (undo-tree-id10667 . -41)) nil (25944 53657 562775 0) 0 nil])
([nil nil ((2147 . 2151)) nil (25944 53657 562615 0) 0 nil])
([nil nil ((2151 . 2152)) nil (25944 53657 562614 0) 0 nil])
([nil nil ((2151 . 2156) (#("s" 0 1 (fontified nil)) . 2151) (2151 . 2152) (#("state" 0 5 (fontified nil)) . -2151) (2151 . 2156) (#("s" 0 1 (fontified t)) . -2151) (undo-tree-id10496 . -1) (undo-tree-id10497 . -1) (undo-tree-id10498 . -1) (undo-tree-id10499 . -1) (undo-tree-id10500 . -1) (undo-tree-id10501 . -1) (undo-tree-id10502 . -1) 2152) nil (25944 53657 562612 0) 0 nil])
([nil nil ((2156 . 2157)) nil (25944 53657 562603 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2156) (undo-tree-id10492 . -1) (undo-tree-id10493 . -1) (undo-tree-id10494 . -1) (undo-tree-id10495 . -1) 2157) nil (25944 53657 562602 0) 0 nil])
([nil nil ((2156 . 2158)) nil (25944 53657 562596 0) 0 nil])
([nil nil ((2151 . 2161) (#("state_l" 0 7 (fontified nil)) . 2151) (2151 . 2158) (#("state_lock" 0 10 (fontified nil)) . -2151) (2151 . 2161) (#("state_l" 0 7 (fontified t)) . -2151) (undo-tree-id10465 . -7) (undo-tree-id10466 . -7) (undo-tree-id10467 . -5) (undo-tree-id10468 . -5) (undo-tree-id10469 . -5) (undo-tree-id10470 . -5) (undo-tree-id10471 . -5) (undo-tree-id10472 . -5) (undo-tree-id10473 . -5) (undo-tree-id10474 . -5) (undo-tree-id10475 . -5) (undo-tree-id10476 . -5) (undo-tree-id10477 . -5) (undo-tree-id10478 . -5) (undo-tree-id10479 . -5) (undo-tree-id10480 . -5) (undo-tree-id10481 . -5) (undo-tree-id10482 . -5) (undo-tree-id10483 . -5) (undo-tree-id10484 . -6) (undo-tree-id10485 . -6) (undo-tree-id10486 . -7) (undo-tree-id10487 . -7) (undo-tree-id10488 . -7) (undo-tree-id10489 . -7) (undo-tree-id10490 . -7) (undo-tree-id10491 . -7) 2158) nil (25944 53657 562593 0) 0 nil])
([nil nil ((2161 . 2162)) nil (25944 53657 562563 0) 0 nil])
([nil nil ((2162 . 2173) (#("key_monitor" 0 11 (fontified nil)) . -2162) (2162 . 2173)) nil (25944 53657 562562 0) 0 nil])
([nil nil ((2173 . 2177)) nil (25944 53657 562561 0) 0 nil])
([nil nil ((2176 . 2183) (#("p" 0 1 (fontified nil)) . 2176) (2176 . 2177) (#("payload" 0 7 (fontified nil)) . -2176) (2176 . 2183) (#("p" 0 1 (fontified t)) . -2176) (undo-tree-id10457 . -1) (undo-tree-id10458 . -1) (undo-tree-id10459 . -1) (undo-tree-id10460 . -1) (undo-tree-id10461 . -1) (undo-tree-id10462 . -1) (undo-tree-id10463 . -1) (undo-tree-id10464 . -1) 2177) nil (25944 53657 562559 0) 0 nil])
([nil nil ((2183 . 2185)) nil (25944 53657 562548 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2184 2191 #s(yas--snippet nil nil #s(yas--exit 2191 nil) 156 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 2191 nil) 156 nil nil nil nil)) (2184 . 2191) (#("parse()$0" 0 9 (fontified nil)) . 2184) (2184 . 2193) (#("p" 0 1 (fontified nil)) . 2184) (2184 . 2185) (#("parse()" 0 7 (fontified nil)) . -2184) (2184 . 2191) (#("p" 0 1 (fontified t)) . -2184) (undo-tree-id10447 . -1) (undo-tree-id10448 . -1) (undo-tree-id10449 . -1) (undo-tree-id10450 . -1) (undo-tree-id10451 . -1) (undo-tree-id10452 . -1) (undo-tree-id10453 . -1) (undo-tree-id10454 . -1) (undo-tree-id10455 . -1) (undo-tree-id10456 . -1) 2185) nil (25944 53657 562546 0) 0 nil])
([nil nil ((2189 . 2193)) nil (25944 53657 562531 0) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -2191) (undo-tree-id10408 . -1) (undo-tree-id10409 . -1) (undo-tree-id10410 . -1) (undo-tree-id10411 . -1) (undo-tree-id10412 . -1) (undo-tree-id10413 . -1) (undo-tree-id10414 . -1) (undo-tree-id10415 . -1) (undo-tree-id10416 . -1) (undo-tree-id10417 . -1) (undo-tree-id10418 . -1) (undo-tree-id10419 . -1) (undo-tree-id10420 . -1) (undo-tree-id10421 . -1) (undo-tree-id10422 . -1) (undo-tree-id10423 . -1) (undo-tree-id10424 . -1) (undo-tree-id10425 . -1) (undo-tree-id10426 . -1) (undo-tree-id10427 . -1) (undo-tree-id10428 . -1) (undo-tree-id10429 . -1) (undo-tree-id10430 . -1) (undo-tree-id10431 . -1) (undo-tree-id10432 . -1) (undo-tree-id10433 . -1) (undo-tree-id10434 . -1) (#(">" 0 1 (fontified t)) . -2192) (undo-tree-id10435 . -1) (undo-tree-id10436 . -1) (undo-tree-id10437 . -1) (undo-tree-id10438 . -1) (undo-tree-id10439 . -1) (undo-tree-id10440 . -1) (undo-tree-id10441 . -1) (undo-tree-id10442 . -1) (undo-tree-id10443 . -1) (undo-tree-id10444 . -1) (undo-tree-id10445 . -1) (undo-tree-id10446 . -1) 2193) nil (25944 53657 562528 0) 0 nil])
([nil nil ((2189 . 2191)) nil (25944 53657 562487 0) 0 nil])
([nil nil ((#("<" 0 1 (syntax-table (1) fontified t)) . -2189) (undo-tree-id10392 . -1) (undo-tree-id10393 . -1) (undo-tree-id10394 . -1) (undo-tree-id10395 . -1) (undo-tree-id10396 . -1) (undo-tree-id10397 . -1) (undo-tree-id10398 . -1) (undo-tree-id10399 . -1) (undo-tree-id10400 . -1) (undo-tree-id10401 . -1) (undo-tree-id10402 . -1) (undo-tree-id10403 . -1) (#(">" 0 1 (syntax-table (1) fontified t)) . -2190) (undo-tree-id10404 . -1) (undo-tree-id10405 . -1) (undo-tree-id10406 . -1) (undo-tree-id10407 . -1) 2191) nil (25944 53657 562485 0) 0 nil])
([nil nil ((2191 . 2193)) nil (25944 53657 562467 0) 0 nil])
([nil nil ((2192 . 2195)) nil (25944 53657 562466 0) 0 nil])
([nil nil ((2198 . 2200)) nil (25944 53657 562465 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2199 2207 #s(yas--snippet nil nil #s(yas--exit 2207 nil) 157 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 2207 nil) 157 nil nil nil nil)) (2199 . 2207) (#("unwrap()$0" 0 10 (fontified nil)) . 2199) (2199 . 2209) (#("u" 0 1 (fontified nil)) . 2199) (2199 . 2200) (#("unwrap()" 0 8 (fontified nil)) . -2199) (2199 . 2207) (#("u" 0 1 (fontified t)) . -2199) (undo-tree-id10386 . -1) (undo-tree-id10387 . -1) (undo-tree-id10388 . -1) (undo-tree-id10389 . -1) (undo-tree-id10390 . -1) (undo-tree-id10391 . -1) 2200) nil (25944 53657 562462 0) 0 nil])
([nil nil ((2207 . 2208)) nil (25944 53657 562442 0) 0 nil])
([nil nil ((#("0]" 0 2 (fontified t)) . -2246) (undo-tree-id10966 . -2) (undo-tree-id10967 . -1) (undo-tree-id10968 . -1) (undo-tree-id10969 . -1) (undo-tree-id10970 . -1) (undo-tree-id10971 . -1) (undo-tree-id10972 . -1) (undo-tree-id10973 . -2) (undo-tree-id10974 . -2) (undo-tree-id10975 . -2) (undo-tree-id10976 . -2) (undo-tree-id10977 . -2) 2248 (t 25944 53657 590073 892000)) nil (25944 53681 172538 0) 0 nil])
([nil nil ((#("keys[" 0 5 (fontified t)) . -2241) (undo-tree-id10939 . -5) (undo-tree-id10940 . -5) (undo-tree-id10941 . -5) (undo-tree-id10942 . -5) (undo-tree-id10943 . -5) (undo-tree-id10944 . -5) (undo-tree-id10945 . -5) (undo-tree-id10946 . -5) (undo-tree-id10947 . -5) (undo-tree-id10948 . -5) (undo-tree-id10949 . -5) (undo-tree-id10950 . -5) (undo-tree-id10951 . -5) (undo-tree-id10952 . -5) (undo-tree-id10953 . -5) (undo-tree-id10954 . -5) (undo-tree-id10955 . -5) (undo-tree-id10956 . -5) (undo-tree-id10957 . -5) (undo-tree-id10958 . -5) (undo-tree-id10959 . -5) (undo-tree-id10960 . -5) (undo-tree-id10961 . -5) (undo-tree-id10962 . -5) (undo-tree-id10963 . -5) (undo-tree-id10964 . -5) (undo-tree-id10965 . -5) 2246) nil (25944 53681 172523 0) 0 nil])
([nil nil ((#("lock." 0 4 (fontified t) 4 5 (fontified t)) . -2236) (undo-tree-id10903 . -5) (undo-tree-id10904 . -5) (undo-tree-id10905 . -5) (undo-tree-id10906 . -5) (undo-tree-id10907 . -5) (undo-tree-id10908 . -5) (undo-tree-id10909 . -5) (undo-tree-id10910 . -5) (undo-tree-id10911 . -5) (undo-tree-id10912 . -5) (undo-tree-id10913 . -5) (undo-tree-id10914 . -5) (undo-tree-id10915 . -5) (undo-tree-id10916 . -5) (undo-tree-id10917 . -5) (undo-tree-id10918 . -5) (undo-tree-id10919 . -5) (undo-tree-id10920 . -5) (undo-tree-id10921 . -5) (undo-tree-id10922 . -5) (undo-tree-id10923 . -5) (undo-tree-id10924 . -5) (undo-tree-id10925 . -5) (undo-tree-id10926 . -5) (undo-tree-id10927 . -5) (undo-tree-id10928 . -5) (undo-tree-id10929 . -5) (undo-tree-id10930 . -5) (undo-tree-id10931 . -5) (undo-tree-id10932 . -5) (undo-tree-id10933 . -5) (undo-tree-id10934 . -5) (undo-tree-id10935 . -5) (undo-tree-id10936 . -5) (undo-tree-id10937 . -5) (undo-tree-id10938 . -5) 2241) nil (25944 53681 172496 0) 0 nil])
([nil nil ((2236 . 2237)) nil (25944 53681 172460 0) 0 nil])
([nil nil ((2230 . 2240) (#("state_l" 0 7 (fontified nil)) . 2230) (2230 . 2237) (#("state_lock" 0 10 (fontified nil)) . -2230) (2230 . 2240) (#("state_l" 0 7 (fontified t)) . -2230) (undo-tree-id10859 . -6) (undo-tree-id10860 . -7) (undo-tree-id10861 . -6) (undo-tree-id10862 . -6) (undo-tree-id10863 . -6) (undo-tree-id10864 . -6) (undo-tree-id10865 . -6) (undo-tree-id10866 . -6) (undo-tree-id10867 . -6) (undo-tree-id10868 . -6) (undo-tree-id10869 . -6) (undo-tree-id10870 . -6) (undo-tree-id10871 . -6) (undo-tree-id10872 . -6) (undo-tree-id10873 . -6) (undo-tree-id10874 . -6) (undo-tree-id10875 . -6) (undo-tree-id10876 . -6) (undo-tree-id10877 . -6) (undo-tree-id10878 . -6) (undo-tree-id10879 . -6) (undo-tree-id10880 . -6) (undo-tree-id10881 . -6) (undo-tree-id10882 . -6) (undo-tree-id10883 . -6) (undo-tree-id10884 . -6) (undo-tree-id10885 . -6) (undo-tree-id10886 . -6) (undo-tree-id10887 . -6) (undo-tree-id10888 . -6) (undo-tree-id10889 . -6) (undo-tree-id10890 . -6) (undo-tree-id10891 . -6) (undo-tree-id10892 . -6) (undo-tree-id10893 . -6) (undo-tree-id10894 . -6) (undo-tree-id10895 . -6) (undo-tree-id10896 . -6) (undo-tree-id10897 . -6) (undo-tree-id10898 . -6) (undo-tree-id10899 . -6) (undo-tree-id10900 . -7) (undo-tree-id10901 . -7) (undo-tree-id10902 . -7) 2237) nil (25944 53681 172457 0) 0 nil])
([nil nil ((2240 . 2242)) nil (25944 53681 172411 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -2241) (undo-tree-id10853 . -1) (undo-tree-id10854 . -1) (undo-tree-id10855 . -1) (undo-tree-id10856 . -1) (undo-tree-id10857 . -1) (undo-tree-id10858 . -1) 2242) nil (25944 53681 172410 0) 0 nil])
([nil nil ((2241 . 2242)) nil (25944 53681 172403 0) 0 nil])
([nil nil ((2241 . 2252) (#("k" 0 1 (fontified nil)) . 2241) (2241 . 2242) (#("key_monitor" 0 11 (fontified nil)) . -2241) (2241 . 2252) (#("k" 0 1 (fontified t)) . -2241) (undo-tree-id10847 . -1) (undo-tree-id10848 . -1) (undo-tree-id10849 . -1) (undo-tree-id10850 . -1) (undo-tree-id10851 . -1) (undo-tree-id10852 . -1) 2242) nil (25944 53681 172401 0) 0 nil])
([nil nil ((2223 . 2226)) nil (25944 53681 172391 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-string-face fontified t)) . -2224) (undo-tree-id10833 . -1) (undo-tree-id10834 . -1) (undo-tree-id10835 . -1) (undo-tree-id10836 . -1) (undo-tree-id10837 . -1) (undo-tree-id10838 . -1) (undo-tree-id10839 . -1) (undo-tree-id10840 . -1) (undo-tree-id10841 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -2225) (undo-tree-id10842 . -1) (undo-tree-id10843 . -1) (undo-tree-id10844 . -1) (undo-tree-id10845 . -1) (undo-tree-id10846 . -1) 2226) nil (25944 53681 172389 0) 0 nil])
([nil nil ((2224 . 2226)) nil (25944 53681 172374 0) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-string-face fontified t)) . -2223) (undo-tree-id10790 . -1) (undo-tree-id10791 . -1) (undo-tree-id10792 . -1) (undo-tree-id10793 . -1) (undo-tree-id10794 . -1) (undo-tree-id10795 . -1) (undo-tree-id10796 . -1) (undo-tree-id10797 . -1) (undo-tree-id10798 . -1) (undo-tree-id10799 . -1) (undo-tree-id10800 . -1) (undo-tree-id10801 . -1) (undo-tree-id10802 . -1) (undo-tree-id10803 . -1) (undo-tree-id10804 . -1) (undo-tree-id10805 . -1) (undo-tree-id10806 . -1) (undo-tree-id10807 . -1) (undo-tree-id10808 . -1) (undo-tree-id10809 . -1) (undo-tree-id10810 . -1) (undo-tree-id10811 . -1) (undo-tree-id10812 . -1) (undo-tree-id10813 . -1) (undo-tree-id10814 . -1) (undo-tree-id10815 . -1) (undo-tree-id10816 . -1) (undo-tree-id10817 . -1) (undo-tree-id10818 . -1) (#("D" 0 1 (face font-lock-string-face fontified t)) . -2224) (undo-tree-id10819 . -1) (undo-tree-id10820 . -1) (undo-tree-id10821 . -1) (undo-tree-id10822 . -1) (undo-tree-id10823 . -1) (undo-tree-id10824 . -1) (undo-tree-id10825 . -1) (undo-tree-id10826 . -1) (undo-tree-id10827 . -1) (#("C" 0 1 (face font-lock-string-face fontified t)) . -2225) (undo-tree-id10828 . -1) (undo-tree-id10829 . -1) (undo-tree-id10830 . -1) (undo-tree-id10831 . -1) (undo-tree-id10832 . -1) 2226) nil (25944 53681 172369 0) 0 nil])
([nil nil ((2223 . 2243)) nil (25944 53681 172307 0) 0 nil])
([nil nil ((5021 . 5034) (t 25944 53681 200462 237000)) nil (25944 55047 87630 0) 0 nil])
([nil nil ((#("#[derive(Debug, Clone, serde::Deserialize)]
pub struct Key {
    pub index: u32,
    pub bind_key: u32,
    /// 0: default; 1: RT
    pub mode: u32,
    /// 0: normal trigger travel 1: dynamic trigger travel 2: dynamic reset travel 3: lower deadzone
    pub value: (u32, u32, u32, u32),
    pub position: (u32, u32),
    pub size: (u32, u32),
    pub selected: bool,
}" 0 30 (face font-lock-preprocessor-face fontified t) 30 43 (face font-lock-preprocessor-face fontified t) 43 44 (fontified t) 44 47 (face font-lock-keyword-face fontified t) 47 48 (fontified t) 48 54 (face font-lock-keyword-face fontified t) 54 55 (fontified t) 55 58 (face font-lock-type-face fontified t) 58 65 (fontified t) 65 68 (face font-lock-keyword-face fontified t) 68 69 (fontified t) 69 74 (face font-lock-variable-name-face fontified t) 74 76 (fontified t) 76 79 (face font-lock-type-face fontified t) 79 85 (fontified t) 85 88 (face font-lock-keyword-face fontified t) 88 89 (fontified t) 89 97 (face font-lock-variable-name-face fontified t) 97 99 (fontified t) 99 102 (face font-lock-type-face fontified t) 102 108 (fontified t) 108 130 (face font-lock-doc-face fontified t) 130 134 (fontified t) 134 137 (face font-lock-keyword-face fontified t) 137 138 (fontified t) 138 142 (face font-lock-variable-name-face fontified t) 142 144 (fontified t) 144 147 (face font-lock-type-face fontified t) 147 149 (fontified t) 149 153 (fontified t) 153 250 (face font-lock-doc-face fontified t) 250 254 (fontified t) 254 257 (face font-lock-keyword-face fontified t) 257 258 (fontified t) 258 263 (face font-lock-variable-name-face fontified t) 263 266 (fontified t) 266 269 (face font-lock-type-face fontified t) 269 271 (fontified t) 271 274 (face font-lock-type-face fontified t) 274 276 (fontified t) 276 279 (face font-lock-type-face fontified t) 279 281 (fontified t) 281 284 (face font-lock-type-face fontified t) 284 287 (fontified t) 287 291 (fontified t) 291 294 (face font-lock-keyword-face fontified t) 294 295 (fontified t) 295 303 (face font-lock-variable-name-face fontified t) 303 306 (fontified t) 306 309 (face font-lock-type-face fontified t) 309 311 (fontified t) 311 314 (face font-lock-type-face fontified t) 314 321 (fontified t) 321 324 (face font-lock-keyword-face fontified t) 324 325 (fontified t) 325 329 (face font-lock-variable-name-face fontified t) 329 332 (fontified t) 332 335 (face font-lock-type-face fontified t) 335 337 (fontified t) 337 340 (face font-lock-type-face fontified t) 340 347 (fontified t) 347 350 (face font-lock-keyword-face fontified t) 350 351 (fontified t) 351 359 (face font-lock-variable-name-face fontified t) 359 361 (fontified t) 361 365 (face font-lock-type-face fontified t) 365 368 (fontified t)) . 594) (undo-tree-id11272 . -368) (undo-tree-id11273 . -317) (undo-tree-id11274 . -317) (undo-tree-id11275 . -317) (undo-tree-id11276 . -317) (undo-tree-id11277 . -317) (undo-tree-id11278 . -317) (undo-tree-id11279 . -317) (undo-tree-id11280 . -317) (undo-tree-id11281 . -317) (undo-tree-id11282 . -317) (undo-tree-id11283 . -317) (undo-tree-id11284 . -317) (undo-tree-id11285 . -317) (undo-tree-id11286 . -317) (undo-tree-id11287 . -317) (undo-tree-id11288 . -317) (undo-tree-id11289 . -317) (undo-tree-id11290 . -317) (undo-tree-id11291 . -317) (undo-tree-id11292 . -317) (undo-tree-id11293 . -317) (undo-tree-id11294 . -317) (undo-tree-id11295 . -317) (undo-tree-id11296 . -317) (undo-tree-id11297 . -317) (undo-tree-id11298 . -317) (undo-tree-id11299 . -317) (undo-tree-id11300 . -317) (undo-tree-id11301 . -317) (undo-tree-id11302 . -317) (undo-tree-id11303 . -317) (undo-tree-id11304 . -317) (undo-tree-id11305 . -317) (undo-tree-id11306 . -317) (undo-tree-id11307 . -317) (undo-tree-id11308 . -317) (undo-tree-id11309 . -317) (undo-tree-id11310 . -317) (undo-tree-id11311 . -317) (undo-tree-id11312 . -317) (undo-tree-id11313 . -317) (undo-tree-id11314 . -317) (undo-tree-id11315 . -317) (undo-tree-id11316 . -317) (undo-tree-id11317 . -317) (undo-tree-id11318 . -317) (undo-tree-id11319 . -317) (undo-tree-id11320 . -317) (undo-tree-id11321 . -368) (undo-tree-id11322 . -368) (undo-tree-id11323 . -368) (undo-tree-id11324 . -368) (undo-tree-id11325 . -368) (undo-tree-id11326 . -368) (undo-tree-id11327 . -368) (undo-tree-id11328 . -352) (undo-tree-id11329 . -351) (undo-tree-id11330 . -324) (undo-tree-id11331 . -293) (undo-tree-id11332 . -255) (undo-tree-id11333 . -153) (undo-tree-id11334 . -107) (undo-tree-id11335 . -46) (undo-tree-id11336 . -1) (undo-tree-id11337 . -368) (t 25944 53702 225083 80000)) nil (25944 57869 123031 0) 0 nil] [nil nil ((#("monitor" 0 7 (fontified t)) . -3761) (undo-tree-id11208 . -7) (undo-tree-id11209 . -7) (undo-tree-id11210 . -7) (undo-tree-id11211 . -7) (undo-tree-id11212 . -7) (undo-tree-id11213 . -7) (undo-tree-id11214 . -7) (undo-tree-id11215 . -7) (undo-tree-id11216 . -7) (undo-tree-id11217 . -7) (undo-tree-id11218 . -7) (undo-tree-id11219 . -7) (undo-tree-id11220 . -7) (undo-tree-id11221 . -7) (undo-tree-id11222 . -7) (undo-tree-id11223 . -7) 3768 (t 25944 53702 225083 80000)) ((3761 . 3768)) (25944 55046 430710 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 991 . 992) (nil fontified nil 991 . 992) (nil fontified nil 989 . 991) (nil fontified nil 985 . 989) (nil fontified nil 983 . 985) (nil fontified nil 975 . 983) (nil fontified nil 974 . 975) (nil fontified nil 971 . 974) (nil fontified nil 967 . 971) (nil fontified nil 964 . 967) (nil fontified nil 961 . 964) (nil fontified nil 959 . 961) (nil fontified nil 956 . 959) (nil fontified nil 953 . 956) (nil fontified nil 949 . 953) (nil fontified nil 948 . 949) (nil fontified nil 945 . 948) (nil fontified nil 941 . 945) (nil fontified nil 938 . 941) (nil fontified nil 935 . 938) (nil fontified nil 933 . 935) (nil fontified nil 930 . 933) (nil fontified nil 927 . 930) (nil fontified nil 919 . 927) (nil fontified nil 918 . 919) (nil fontified nil 915 . 918) (nil fontified nil 911 . 915) (nil fontified nil 908 . 911) (nil fontified nil 905 . 908) (nil fontified nil 903 . 905) (nil fontified nil 900 . 903) (nil fontified nil 898 . 900) (nil fontified nil 895 . 898) (nil fontified nil 893 . 895) (nil fontified nil 890 . 893) (nil fontified nil 887 . 890) (nil fontified nil 882 . 887) (nil fontified nil 881 . 882) (nil fontified nil 878 . 881) (nil fontified nil 874 . 878) (nil fontified nil 777 . 874) (nil fontified nil 773 . 777) (nil fontified nil 771 . 773) (nil fontified nil 768 . 771) (nil fontified nil 766 . 768) (nil fontified nil 762 . 766) (nil fontified nil 761 . 762) (nil fontified nil 758 . 761) (nil fontified nil 754 . 758) (nil fontified nil 732 . 754) (nil fontified nil 728 . 732) (nil fontified nil 727 . 728) (nil fontified nil 726 . 727) (nil fontified nil 723 . 726) (nil fontified nil 721 . 723) (nil fontified nil 713 . 721) (nil fontified nil 712 . 713) (nil fontified nil 709 . 712) (nil fontified nil 705 . 709) (nil fontified nil 703 . 705) (nil fontified nil 700 . 703) (nil fontified nil 698 . 700) (nil fontified nil 687 . 698) (nil fontified nil 686 . 687) (nil fontified nil 683 . 686) (nil fontified nil 679 . 683) (nil fontified nil 677 . 679) (nil fontified nil 674 . 677) (nil fontified nil 672 . 674) (nil fontified nil 667 . 672) (nil fontified nil 666 . 667) (nil fontified nil 663 . 666) (nil fontified nil 656 . 663) (nil fontified nil 653 . 656) (nil fontified nil 652 . 653) (nil fontified nil 646 . 652) (nil fontified nil 645 . 646) (nil fontified nil 642 . 645) (nil fontified nil 641 . 642) (nil fontified nil 594 . 641) (594 . 992)) nil (25944 57869 122924 0) 0 nil])
([nil nil ((#("key_" 0 4 (fontified t)) . -3757) (undo-tree-id11191 . -4) (undo-tree-id11192 . -4) (undo-tree-id11193 . -4) (undo-tree-id11194 . -4) (undo-tree-id11195 . -4) (undo-tree-id11196 . -4) (undo-tree-id11197 . -4) (undo-tree-id11198 . -4) (undo-tree-id11199 . -4) (undo-tree-id11200 . -4) (undo-tree-id11201 . -4) (undo-tree-id11202 . -4) (undo-tree-id11203 . -4) (undo-tree-id11204 . -4) (undo-tree-id11205 . -4) (undo-tree-id11206 . -4) (undo-tree-id11207 . -4) 3761) ((3757 . 3761)) (25944 55045 978979 0) 0 nil])
([nil nil ((#("Serialize," 0 10 (face font-lock-preprocessor-face fontified t)) . -617) (undo-tree-id11357 . -10) (undo-tree-id11358 . -10) (undo-tree-id11359 . -10) (undo-tree-id11360 . -10) (undo-tree-id11361 . -10) (undo-tree-id11362 . -10) (undo-tree-id11363 . -10) (undo-tree-id11364 . -10) (undo-tree-id11365 . -10) (undo-tree-id11366 . -10) (undo-tree-id11367 . -10) (undo-tree-id11368 . -10) (undo-tree-id11369 . -10) (undo-tree-id11370 . -10) (undo-tree-id11371 . -10) (undo-tree-id11372 . -10) (undo-tree-id11373 . -10) (undo-tree-id11374 . -10) (undo-tree-id11375 . -10) (undo-tree-id11376 . -10) 627 (t 25944 57869 152713 113000)) nil (25944 57878 152617 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3756) (undo-tree-id11167 . -1) (undo-tree-id11168 . -1) (undo-tree-id11169 . -1) (undo-tree-id11170 . -1) (undo-tree-id11171 . -1) (undo-tree-id11172 . -1) (undo-tree-id11173 . -1) (undo-tree-id11174 . -1) (undo-tree-id11175 . -1) (undo-tree-id11176 . -1) (undo-tree-id11177 . -1) (undo-tree-id11178 . -1) (undo-tree-id11179 . -1) (undo-tree-id11180 . -1) (undo-tree-id11181 . -1) (undo-tree-id11182 . -1) (undo-tree-id11183 . -1) (undo-tree-id11184 . -1) (undo-tree-id11185 . -1) (undo-tree-id11186 . -1) (undo-tree-id11187 . -1) (undo-tree-id11188 . -1) (undo-tree-id11189 . -1) (undo-tree-id11190 . -1) 3757) ((3756 . 3757)) (25944 55045 227218 0) 0 nil])
([nil nil ((617 . 620)) nil (25944 57878 152596 0) 0 nil])
([nil nil ((#("usize" 0 3 (face font-lock-type-face fontified t) 3 5 (face font-lock-type-face fontified t)) . -3760) (undo-tree-id11155 . -5) (undo-tree-id11156 . -5) (undo-tree-id11157 . -5) (undo-tree-id11158 . -5) (undo-tree-id11159 . -5) (undo-tree-id11160 . -5) (undo-tree-id11161 . -5) (undo-tree-id11162 . -5) (undo-tree-id11163 . -5) (undo-tree-id11164 . -5) (undo-tree-id11165 . -5) (undo-tree-id11166 . -5) 3765) ((3760 . 3765)) (25944 55044 814243 0) 0 nil])
([nil nil ((617 . 622) (#("ser" 0 3 (fontified nil)) . 617) (617 . 620) (#("serde" 0 5 (fontified nil)) . -617) (617 . 622) (#("ser" 0 3 (face font-lock-preprocessor-face fontified t)) . -617) (undo-tree-id11347 . -3) (undo-tree-id11348 . -1) (undo-tree-id11349 . -2) (undo-tree-id11350 . -2) (undo-tree-id11351 . -2) (undo-tree-id11352 . -3) (undo-tree-id11353 . -3) (undo-tree-id11354 . -3) (undo-tree-id11355 . -3) (undo-tree-id11356 . -3) 620) nil (25944 57878 152594 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3756) (undo-tree-id11033 . -1) (undo-tree-id11034 . -1) (undo-tree-id11035 . -1) (undo-tree-id11036 . -1) (undo-tree-id11037 . -1) (undo-tree-id11038 . -1) (undo-tree-id11039 . -1) (undo-tree-id11040 . -1) (undo-tree-id11041 . -1) (undo-tree-id11042 . -1) (undo-tree-id11043 . -1) (undo-tree-id11044 . -1) (undo-tree-id11045 . -1) (undo-tree-id11046 . -1) (undo-tree-id11047 . -1) (undo-tree-id11048 . -1) (undo-tree-id11049 . -1) (undo-tree-id11050 . -1) (undo-tree-id11051 . -1) (undo-tree-id11052 . -1) (undo-tree-id11053 . -1) (undo-tree-id11054 . -1) (undo-tree-id11055 . -1) (undo-tree-id11056 . -1) (undo-tree-id11057 . -1) (undo-tree-id11058 . -1) (undo-tree-id11059 . -1) (undo-tree-id11060 . -1) (undo-tree-id11061 . -1) (undo-tree-id11062 . -1) (undo-tree-id11063 . -1) (undo-tree-id11064 . -1) (undo-tree-id11065 . -1) (undo-tree-id11066 . -1) (undo-tree-id11067 . -1) (undo-tree-id11068 . -1) (undo-tree-id11069 . -1) (undo-tree-id11070 . -1) (#("a" 0 1 (fontified t)) . -3757) (undo-tree-id11071 . -1) (undo-tree-id11072 . -1) (undo-tree-id11073 . -1) (undo-tree-id11074 . -1) (undo-tree-id11075 . -1) (undo-tree-id11076 . -1) (undo-tree-id11077 . -1) (undo-tree-id11078 . -1) (undo-tree-id11079 . -1) (undo-tree-id11080 . -1) (undo-tree-id11081 . -1) (undo-tree-id11082 . -1) (undo-tree-id11083 . -1) (undo-tree-id11084 . -1) (undo-tree-id11085 . -1) (undo-tree-id11086 . -1) (undo-tree-id11087 . -1) (undo-tree-id11088 . -1) (undo-tree-id11089 . -1) (undo-tree-id11090 . -1) (undo-tree-id11091 . -1) (undo-tree-id11092 . -1) (undo-tree-id11093 . -1) (undo-tree-id11094 . -1) (undo-tree-id11095 . -1) (undo-tree-id11096 . -1) (undo-tree-id11097 . -1) (undo-tree-id11098 . -1) (undo-tree-id11099 . -1) (undo-tree-id11100 . -1) (undo-tree-id11101 . -1) (undo-tree-id11102 . -1) (undo-tree-id11103 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -3758) (undo-tree-id11104 . -1) (undo-tree-id11105 . -1) (undo-tree-id11106 . -1) (undo-tree-id11107 . -1) (undo-tree-id11108 . -1) (undo-tree-id11109 . -1) (undo-tree-id11110 . -1) (undo-tree-id11111 . -1) (undo-tree-id11112 . -1) (undo-tree-id11113 . -1) (undo-tree-id11114 . -1) (undo-tree-id11115 . -1) (undo-tree-id11116 . -1) (undo-tree-id11117 . -1) (undo-tree-id11118 . -1) (undo-tree-id11119 . -1) (undo-tree-id11120 . -1) (undo-tree-id11121 . -1) (undo-tree-id11122 . -1) (undo-tree-id11123 . -1) (undo-tree-id11124 . -1) (undo-tree-id11125 . -1) (undo-tree-id11126 . -1) (undo-tree-id11127 . -1) (undo-tree-id11128 . -1) (undo-tree-id11129 . -1) (undo-tree-id11130 . -1) (undo-tree-id11131 . -1) (#(" " 0 1 (fontified t)) . -3759) (undo-tree-id11132 . -1) (undo-tree-id11133 . -1) (undo-tree-id11134 . -1) (undo-tree-id11135 . -1) (undo-tree-id11136 . -1) (undo-tree-id11137 . -1) (undo-tree-id11138 . -1) (undo-tree-id11139 . -1) (undo-tree-id11140 . -1) (undo-tree-id11141 . -1) (undo-tree-id11142 . -1) (undo-tree-id11143 . -1) (undo-tree-id11144 . -1) (undo-tree-id11145 . -1) (undo-tree-id11146 . -1) (undo-tree-id11147 . -1) (undo-tree-id11148 . -1) (undo-tree-id11149 . -1) (undo-tree-id11150 . -1) (undo-tree-id11151 . -1) (undo-tree-id11152 . -1) (undo-tree-id11153 . -1) (undo-tree-id11154 . -1) 3760) ((3756 . 3760)) (25944 55040 67895 0) 0 nil])
([nil nil ((622 . 624)) nil (25944 57878 152581 0) 0 nil])
([nil nil ((#("num" 0 1 (face font-lock-variable-name-face fontified t) 1 3 (face font-lock-variable-name-face fontified t)) . -3732) (undo-tree-id11022 . -3) (undo-tree-id11023 . -3) (undo-tree-id11024 . -3) (undo-tree-id11025 . -3) (undo-tree-id11026 . -3) (undo-tree-id11027 . -3) (undo-tree-id11028 . -3) (undo-tree-id11029 . -3) (undo-tree-id11030 . -3) (undo-tree-id11031 . -3) (undo-tree-id11032 . -3) 3735) ((3732 . 3735)) (25944 55039 826139 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-preprocessor-face fontified t)) . -624) (undo-tree-id11338 . -1) (undo-tree-id11339 . 1) (undo-tree-id11340 . -1) (undo-tree-id11341 . -1) (undo-tree-id11342 . -1) (undo-tree-id11343 . -1) (undo-tree-id11344 . -1) (undo-tree-id11345 . -1) (undo-tree-id11346 . -1) 625) nil (25944 57878 152577 0) 0 nil])
([nil nil ((#("data_" 0 5 (face font-lock-variable-name-face fontified t)) . -3727) (undo-tree-id11009 . -5) (undo-tree-id11010 . -5) (undo-tree-id11011 . -5) (undo-tree-id11012 . -5) (undo-tree-id11013 . -5) (undo-tree-id11014 . -5) (undo-tree-id11015 . -5) (undo-tree-id11016 . -5) (undo-tree-id11017 . -5) (undo-tree-id11018 . -5) (undo-tree-id11019 . -5) (undo-tree-id11020 . -5) (undo-tree-id11021 . -5) 3732) ((3727 . 3732)) (25944 55039 525366 0) 0 nil])
([nil nil ((990 . 993) (t 25944 57878 181109 827000)) nil (25945 34847 412064 0) 0 nil])
([nil nil ((#("adc_" 0 4 (face font-lock-variable-name-face fontified t)) . -3723) (undo-tree-id10993 . -4) (undo-tree-id10994 . -4) (undo-tree-id10995 . -4) (undo-tree-id10996 . -4) (undo-tree-id10997 . -4) (undo-tree-id10998 . -4) (undo-tree-id10999 . -4) (undo-tree-id11000 . -4) (undo-tree-id11001 . -4) (undo-tree-id11002 . -4) (undo-tree-id11003 . -4) (undo-tree-id11004 . -4) (undo-tree-id11005 . -4) (undo-tree-id11006 . -4) (undo-tree-id11007 . -4) (undo-tree-id11008 . -4) 3727) ((3723 . 3727)) (25944 55039 297121 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 995 995 nil nil nil nil #s(yas--exit 1002 nil))) #s(yas--exit 1002 nil) 173 nil #s(yas--field 1 995 995 nil nil nil nil #s(yas--exit 1002 nil)) nil nil)) (990 . 1004) (#("enum $1 {
    $0
}" 0 18 (fontified nil)) . 990) (990 . 1008) (#("enu" 0 3 (fontified nil)) . 990) (990 . 993) (#("enum" 0 4 (fontified nil)) . -990) (990 . 994) (#("enu" 0 3 (fontified t)) . -990) (undo-tree-id11415 . -3) (undo-tree-id11416 . -3) 993) nil (25945 34847 412062 0) 0 nil])
([nil nil ((3723 . 3728)) ((#("state" 0 5 (face font-lock-variable-name-face fontified t)) . 3723) (undo-tree-id11249 . -5) (undo-tree-id11250 . -5) (undo-tree-id11251 . -5) (undo-tree-id11252 . -5) (undo-tree-id11253 . -5) (undo-tree-id11254 . -5) (undo-tree-id11255 . -5) (undo-tree-id11256 . -5) (undo-tree-id11257 . -5) (undo-tree-id11258 . -5) (undo-tree-id11259 . -5) (undo-tree-id11260 . -5) (undo-tree-id11261 . -5) (undo-tree-id11262 . -5) (undo-tree-id11263 . -5) (undo-tree-id11264 . -5) (undo-tree-id11265 . -5) (undo-tree-id11266 . -5) (undo-tree-id11267 . -5) (undo-tree-id11268 . -5) (undo-tree-id11269 . -5) (undo-tree-id11270 . -5) (undo-tree-id11271 . -5)) (25944 55039 63617 0) 0 nil])
([nil nil ((apply yas--snippet-revive 990 1004 #s(yas--snippet nil (#s(yas--field 1 995 995 nil nil nil nil #s(yas--exit 1002 nil))) #s(yas--exit 1002 nil) 173 nil #s(yas--field 1 995 995 nil nil nil nil #s(yas--exit 1002 nil)) nil nil))) nil (25945 34847 412057 0) 0 nil])
([nil nil ((3728 . 3729)) ((#("l" 0 1 (face font-lock-variable-name-face fontified t)) . 3728) (undo-tree-id11243 . -1) (undo-tree-id11244 . -1) (undo-tree-id11245 . -1) (undo-tree-id11246 . -1) (undo-tree-id11247 . -1) (undo-tree-id11248 . -1)) (25944 55038 770139 0) 0 nil])
([nil nil ((995 . 1005)) nil (25945 34847 412056 0) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -3728) (undo-tree-id10988 . -1) (undo-tree-id10989 . -1) (undo-tree-id10990 . -1) (undo-tree-id10991 . -1) (undo-tree-id10992 . -1) 3729) ((3728 . 3729)) (25944 55038 486507 0) 0 nil])
([nil nil ((#("State" 0 5 (face font-lock-type-face fontified t)) . -1000) (undo-tree-id11414 . -5) 1005) nil (25945 34847 412055 0) 0 nil])
([nil nil ((3728 . 3730)) ((#(")l" 0 1 (fontified t) 1 2 (fontified t)) . 3728) (undo-tree-id11232 . -2) (undo-tree-id11233 . -1) (undo-tree-id11234 . -1) (undo-tree-id11235 . -2) (undo-tree-id11236 . -1) (undo-tree-id11237 . -1) (undo-tree-id11238 . -2) (undo-tree-id11239 . -2) (undo-tree-id11240 . -2) (undo-tree-id11241 . -2) (undo-tree-id11242 . -2)) (25944 55038 124975 0) 0 nil])
([nil nil ((#("Send_" 0 5 (face font-lock-type-face fontified t)) . -995) (undo-tree-id11413 . -5) 1000) nil (25945 34847 412053 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -3728) (undo-tree-id10980 . -1) (undo-tree-id10981 . -1) (undo-tree-id10982 . -1) (undo-tree-id10983 . -1) (undo-tree-id10984 . -1) (undo-tree-id10985 . -1) (#("l" 0 1 (fontified t)) . -3729) (undo-tree-id10986 . -1) (undo-tree-id10987 . -1) 3730) ((3728 . 3730)) (25944 55037 807759 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -989) (undo-tree-id11383 . -1) (undo-tree-id11384 . -1) (undo-tree-id11385 . -1) (undo-tree-id11386 . -1) (#("e" 0 1 (fontified t)) . -990) (undo-tree-id11387 . -1) (undo-tree-id11388 . -1) (#("n" 0 1 (fontified t)) . -991) (undo-tree-id11389 . -1) (undo-tree-id11390 . -1) (#("u" 0 1 (fontified t)) . -992) (undo-tree-id11391 . -1) (undo-tree-id11392 . -1) (#("m" 0 1 (face font-lock-keyword-face fontified t)) . -993) (undo-tree-id11393 . -1) (undo-tree-id11394 . -1) (#(" " 0 1 (fontified t)) . -994) (undo-tree-id11395 . -1) (undo-tree-id11396 . -1) (#(" " 0 1 (fontified t)) . -995) (undo-tree-id11397 . -1) (undo-tree-id11398 . -1) (#("{" 0 1 (fontified t)) . -996) (undo-tree-id11399 . -1) (undo-tree-id11400 . -1) (#("
" 0 1 (fontified t)) . -997) (undo-tree-id11401 . -1) (undo-tree-id11402 . -1) (#(" " 0 1 (fontified t)) . -998) (undo-tree-id11403 . -1) (undo-tree-id11404 . -1) (#(" " 0 1 (fontified t)) . -999) (undo-tree-id11405 . -1) (undo-tree-id11406 . -1) (#(" " 0 1 (fontified t)) . -1000) (undo-tree-id11407 . -1) (undo-tree-id11408 . -1) (#(" " 0 1 (fontified t)) . -1001) (undo-tree-id11409 . -1) (undo-tree-id11410 . -1) (#("
" 0 1 (fontified t)) . -1002) (undo-tree-id11411 . -1) (#("}" 0 1 (fontified t)) . -1003) (undo-tree-id11412 . -1) 1004) nil (25945 34847 412047 0) 0 nil])
([nil nil ((3728 . 3733)) ((#("_lock" 0 5 (face font-lock-variable-name-face fontified t)) . 3728)) (25944 55037 384260 0) 0 nil])
([nil nil ((1047 . 1052)) nil (25945 34847 412012 0) 0 nil])
([nil nil ((3755 . 3763)) ((#("
			    " 0 1 (fontified t) 1 8 (fontified t)) . 3755) (undo-tree-id11227 . -8) (undo-tree-id11228 . -8) (undo-tree-id11229 . -8) (undo-tree-id11230 . -1) (undo-tree-id11231 . -8)) (25944 55037 215007 0) 0 nil])
([nil nil ((1052 . 1057)) nil (25945 34847 412011 0) 0 nil])
([nil nil ((3763 . 3764)) ((#("k" 0 1 (fontified t)) . 3763) (undo-tree-id11224 . -1) (undo-tree-id11225 . -1) (undo-tree-id11226 . -1)) (25944 55037 207894 0) 0 nil])
([nil nil ((1057 . 1068)) nil (25945 34847 412010 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -3763) (undo-tree-id10978 . -1) (undo-tree-id10979 . -1) 3764) ((3763 . 3764)) (25944 55037 207357 0) 0 nil])
([nil nil ((1066 . 1070) (#("bo" 0 2 (fontified nil)) . 1066) (1066 . 1068) (#("bool" 0 4 (fontified nil)) . -1066) (1066 . 1070) (#("bo" 0 2 (fontified t)) . -1066) (undo-tree-id11377 . -2) (undo-tree-id11378 . -1) (undo-tree-id11379 . -2) (undo-tree-id11380 . -2) (undo-tree-id11381 . -2) (undo-tree-id11382 . -2) 1068) nil (25945 34847 412007 0) 0 nil])
nil
([nil nil ((1070 . 1071)) nil (25945 34847 411989 0) 0 nil])
([nil nil ((4298 . 4302) (t 25945 34847 441953 57000)) nil (25945 34862 73223 0) 0 nil])
([nil nil ((4300 . 4312) (#("re" 0 2 (fontified nil)) . 4300) (4300 . 4302) (#("request_send" 0 12 (fontified nil)) . -4300) (4300 . 4312) (#("re" 0 2 (fontified t)) . -4300) (undo-tree-id11435 . -2) (undo-tree-id11436 . -2) (undo-tree-id11437 . -1) (undo-tree-id11438 . -1) (undo-tree-id11439 . -1) (undo-tree-id11440 . -2) (undo-tree-id11441 . -2) (undo-tree-id11442 . -2) (undo-tree-id11443 . -2) 4302) nil (25945 34862 73220 0) 0 nil])
([nil nil ((4312 . 4316)) nil (25945 34862 73209 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -4315) (undo-tree-id11431 . -1) (undo-tree-id11432 . -1) (undo-tree-id11433 . -1) (undo-tree-id11434 . -1) 4316) nil (25945 34862 73207 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -4314) (undo-tree-id11422 . -1) (undo-tree-id11423 . -1) (undo-tree-id11424 . -1) (undo-tree-id11425 . -1) (undo-tree-id11426 . -1) (undo-tree-id11427 . -1) (undo-tree-id11428 . -1) (undo-tree-id11429 . -1) (undo-tree-id11430 . -1) 4315) nil (25945 34862 73201 0) 0 nil])
([nil nil ((4314 . 4315)) nil (25945 34862 73190 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4314 4319 #s(yas--snippet nil nil nil 174 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 174 nil nil nil nil)) (4314 . 4319) (#("false" 0 5 (fontified nil)) . 4314) (4314 . 4319) (#("f" 0 1 (fontified nil)) . 4314) (4314 . 4315) (#("false" 0 5 (fontified nil)) . -4314) (4314 . 4319) (#("f" 0 1 (fontified t)) . -4314) (undo-tree-id11417 . -1) (undo-tree-id11418 . -1) (undo-tree-id11419 . -1) (undo-tree-id11420 . -1) (undo-tree-id11421 . -1) 4315) nil (25945 34862 73185 0) 0 nil])
([nil nil ((2924 . 2929) (t 25945 34862 103245 971000)) nil (25945 34944 587495 0) 0 nil])
([nil nil ((2929 . 2945)) nil (25945 34944 587494 0) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-variable-name-face fontified t)) . -2944) (undo-tree-id11461 . -1) (undo-tree-id11462 . -1) (undo-tree-id11463 . -1) (undo-tree-id11464 . -1) 2945) nil (25945 34944 587493 0) 0 nil])
([nil nil ((2944 . 2950)) nil (25945 34944 587487 0) 0 nil])
([nil nil ((2949 . 2951)) nil (25945 34944 587486 0) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . -2950) (undo-tree-id11453 . -1) (undo-tree-id11454 . -1) (undo-tree-id11455 . -1) (undo-tree-id11456 . -1) (undo-tree-id11457 . -1) (undo-tree-id11458 . -1) (undo-tree-id11459 . -1) (undo-tree-id11460 . -1) 2951) nil (25945 34944 587485 0) 0 nil])
([nil nil ((2950 . 2953)) nil (25945 34944 587474 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -2952) (undo-tree-id11444 . -1) (undo-tree-id11445 . -1) (undo-tree-id11446 . -1) (undo-tree-id11447 . -1) (undo-tree-id11448 . -1) (undo-tree-id11449 . -1) (undo-tree-id11450 . -1) (undo-tree-id11451 . -1) (undo-tree-id11452 . -1) 2953) nil (25945 34944 587472 0) 0 nil])
([nil nil ((2952 . 2956)) nil (25945 34944 587452 0) 0 nil])
([nil nil ((2957 . 2958)) nil (25945 34944 587446 0) 0 nil])
([nil nil ((3266 . 3268) (#("		" 0 2 (fontified nil)) . 3265) (undo-tree-id11572 . -2) (undo-tree-id11573 . -2) (3265 . 3268) (#("		" 0 2 (fontified nil)) . 3264) (undo-tree-id11574 . -2) (undo-tree-id11575 . -2) (3263 . 3267) (t 25945 34944 616590 998000)) nil (25945 35240 482990 0) 0 nil])
([nil nil ((3264 . 3266)) nil (25945 35240 482984 0) 0 nil])
([nil nil ((3266 . 3269)) nil (25945 35240 482983 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3267) (undo-tree-id11570 . -1) (#("f" 0 1 (fontified t)) . -3268) (undo-tree-id11571 . -1) 3269) nil (25945 35240 482982 0) 0 nil])
([nil nil ((3267 . 3269)) nil (25945 35240 482978 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3266) (undo-tree-id11564 . -1) (undo-tree-id11565 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -3267) (undo-tree-id11566 . -1) (undo-tree-id11567 . -1) (#(" " 0 1 (fontified t)) . -3268) (undo-tree-id11568 . -1) (undo-tree-id11569 . -1) 3269) nil (25945 35240 482977 0) 0 nil])
([nil nil ((3266 . 3269)) nil (25945 35240 482969 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3266) (undo-tree-id11558 . -1) (undo-tree-id11559 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -3267) (undo-tree-id11560 . -1) (undo-tree-id11561 . -1) (#(" " 0 1 (fontified t)) . -3268) (undo-tree-id11562 . -1) (undo-tree-id11563 . -1) 3269) nil (25945 35240 482967 0) 0 nil])
([nil nil ((3266 . 3278)) nil (25945 35240 482960 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3275) (undo-tree-id11554 . -1) (undo-tree-id11555 . -1) (#("=" 0 1 (fontified t)) . -3276) (undo-tree-id11556 . -1) (#(" " 0 1 (fontified t)) . -3277) (undo-tree-id11557 . -1) 3278) nil (25945 35240 482958 0) 0 nil])
([nil nil ((3275 . 3283)) nil (25945 35240 482952 0) 0 nil])
([nil nil ((3283 . 3290)) nil (25945 35240 482951 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3289 3295 #s(yas--snippet nil nil #s(yas--exit 3295 nil) 175 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3295 nil) 175 nil nil nil nil)) (3289 . 3295) (#("lock()$0" 0 8 (fontified nil)) . 3289) (3289 . 3297) (#("l" 0 1 (fontified nil)) . 3289) (3289 . 3290) (#("lock()" 0 6 (fontified nil)) . -3289) (3289 . 3295) (#("l" 0 1 (fontified t)) . -3289) (undo-tree-id11553 . -1) 3290) nil (25945 35240 482950 0) 0 nil])
([nil nil ((3295 . 3297)) nil (25945 35240 482945 0) 0 nil])
([nil nil ((3296 . 3301) (#("a" 0 1 (fontified nil)) . 3296) (3296 . 3297) (#("await" 0 5 (fontified nil)) . -3296) (3296 . 3301) (#("a" 0 1 (fontified t)) . -3296) (undo-tree-id11552 . -1) 3297) nil (25945 35240 482944 0) 0 nil])
([nil nil ((3301 . 3302)) nil (25945 35240 482940 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3301) (undo-tree-id11550 . -1) (undo-tree-id11551 . -1) 3302) nil (25945 35240 482939 0) 0 nil])
([nil nil ((3301 . 3302)) nil (25945 35240 482936 0) 0 nil])
([nil nil ((3302 . 3305)) nil (25945 35240 482935 0) 0 nil])
([nil nil ((3305 . 3311)) nil (25945 35240 482934 0) 0 nil])
([nil nil ((3308 . 3313) (#("sta" 0 3 (fontified nil)) . 3308) (3308 . 3311) (#("state" 0 5 (fontified nil)) . -3308) (3308 . 3313) (#("sta" 0 3 (fontified t)) . -3308) (undo-tree-id11549 . -3) 3311) nil (25945 35240 482932 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -3308) (undo-tree-id11544 . -1) (#("t" 0 1 (fontified t)) . -3309) (undo-tree-id11545 . -1) (#("a" 0 1 (fontified t)) . -3310) (undo-tree-id11546 . -1) (#("t" 0 1 (fontified t)) . -3311) (undo-tree-id11547 . -1) (#("e" 0 1 (fontified t)) . -3312) (undo-tree-id11548 . -1) 3313) nil (25945 35240 482927 0) 0 nil])
([nil nil ((3308 . 3311)) nil (25945 35240 482920 0) 0 nil])
([nil nil ((3308 . 3318) (#("sta" 0 3 (fontified nil)) . 3308) (3308 . 3311) (#("state_lock" 0 10 (fontified nil)) . -3308) (3308 . 3318) (#("sta" 0 3 (fontified t)) . -3308) (undo-tree-id11543 . -3) 3311) nil (25945 35240 482918 0) 0 nil])
([nil nil ((3318 . 3319)) nil (25945 35240 482915 0) 0 nil])
([nil nil ((3319 . 3331) (#("request_send" 0 12 (fontified nil)) . -3319) (3319 . 3331)) nil (25945 35240 482914 0) 0 nil])
([nil nil ((3331 . 3334)) nil (25945 35240 482912 0) 0 nil])
([nil nil ((3335 . 3337) (#("		    " 0 6 (fontified nil)) . 3334) (undo-tree-id11542 . -2) (3336 . 3340) (3333 . 3337)) nil (25945 35240 482911 0) 0 nil])
([nil nil ((3334 . 3340)) nil (25945 35240 482908 0) 0 nil])
([nil nil ((3345 . 3347)) nil (25945 35240 482907 0) 0 nil])
([nil nil ((3347 . 3349)) nil (25945 35240 482906 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3352 3362 nil nil nil t #s(yas--exit 3363 nil))) #s(yas--exit 3363 nil) 176 nil #s(yas--field 1 3352 3362 nil nil nil t #s(yas--exit 3363 nil)) nil nil)) (3347 . 3354) (#("drop(${1:x})$0" 0 14 (fontified nil)) . 3347) (3347 . 3361) (#("dr" 0 2 (fontified nil)) . 3347) (3347 . 3349) (#("drop(â€¦)" 0 7 (fontified nil)) . -3347) (3347 . 3354) (#("dr" 0 2 (fontified t)) . -3347) (undo-tree-id11541 . -2) 3349) nil (25945 35240 482904 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified nil)) . 3353) (3352 . 3353)) nil (25945 35240 482900 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -3352) (undo-tree-id11539 . -1) (undo-tree-id11540 . -1) 3353) nil (25945 35240 482898 0) 0 nil])
([nil nil ((3352 . 3355)) nil (25945 35240 482895 0) 0 nil])
([nil nil ((3352 . 3362) (#("sta" 0 3 (fontified nil)) . 3352) (3352 . 3355) (#("state_lock" 0 10 (fontified nil)) . -3352) (3352 . 3362) (#("sta" 0 3 (fontified t)) . -3352) (undo-tree-id11537 . -3) (undo-tree-id11538 . -3) 3355) nil (25945 35240 482893 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3347 3363 #s(yas--snippet nil (#s(yas--field 1 3352 3362 nil nil nil t #s(yas--exit 3363 nil))) #s(yas--exit 3363 nil) 176 nil #s(yas--field 1 3352 3362 nil nil nil t #s(yas--exit 3363 nil)) nil nil))) nil (25945 35240 482889 0) 0 nil])
([nil nil ((3363 . 3364)) nil (25945 35240 482888 0) 0 nil])
([nil nil ((3340 . 3343)) nil (25945 35240 482887 0) 0 nil])
([nil nil ((3340 . 3350) (#("sta" 0 3 (fontified nil)) . 3340) (3340 . 3343) (#("state_lock" 0 10 (fontified nil)) . -3340) (3340 . 3350) (#("sta" 0 3 (fontified t)) . -3340) (undo-tree-id11536 . -3) 3343) nil (25945 35240 482885 0) 0 nil])
([nil nil ((3350 . 3351)) nil (25945 35240 482882 0) 0 nil])
([nil nil ((3351 . 3363) (#("request_send" 0 12 (fontified nil)) . -3351) (3351 . 3363)) nil (25945 35240 482881 0) 0 nil])
([nil nil ((3363 . 3364)) nil (25945 35240 482879 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -3363) (undo-tree-id11535 . -1) 3364) nil (25945 35240 482878 0) 0 nil])
([nil nil ((3363 . 3368)) nil (25945 35240 482876 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3366 3371 #s(yas--snippet nil nil nil 177 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 177 nil nil nil nil)) (3366 . 3371) (#("false" 0 5 (fontified nil)) . 3366) (3366 . 3371) (#("fa" 0 2 (fontified nil)) . 3366) (3366 . 3368) (#("false" 0 5 (fontified nil)) . -3366) (3366 . 3371) (#("fa" 0 2 (fontified t)) . -3366) (undo-tree-id11534 . -2) 3368) nil (25945 35240 482874 0) 0 nil])
([nil nil ((3371 . 3372)) nil (25945 35240 482869 0) 0 nil])
([nil nil ((3372 . 3379)) nil (25945 35240 482868 0) 0 nil])
([nil nil ((3379 . 3383)) nil (25945 35240 482868 0) 0 nil])
([nil nil ((3383 . 3390)) nil (25945 35240 482867 0) 0 nil])
([nil nil ((#("k" 0 1 (face font-lock-variable-name-face fontified t)) . -3383) (undo-tree-id11520 . -1) (undo-tree-id11521 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -3384) (undo-tree-id11522 . -1) (undo-tree-id11523 . -1) (#("y" 0 1 (face font-lock-variable-name-face fontified t)) . -3385) (undo-tree-id11524 . -1) (undo-tree-id11525 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -3386) (undo-tree-id11526 . -1) (undo-tree-id11527 . -1) (#(" " 0 1 (fontified t)) . -3387) (undo-tree-id11528 . -1) (undo-tree-id11529 . -1) (#("i" 0 1 (fontified t)) . -3388) (undo-tree-id11530 . -1) (undo-tree-id11531 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -3389) (undo-tree-id11532 . -1) (undo-tree-id11533 . -1) 3390) nil (25945 35240 482864 0) 0 nil])
([nil nil ((3383 . 3390)) nil (25945 35240 482843 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -3388) (undo-tree-id11518 . -1) (#(" " 0 1 (fontified t)) . -3389) (undo-tree-id11519 . -1) 3390) nil (25945 35240 482842 0) 0 nil])
([nil nil ((3388 . 3394)) nil (25945 35240 482839 0) 0 nil])
([nil nil ((3391 . 3401) (#("sta" 0 3 (fontified nil)) . 3391) (3391 . 3394) (#("state_lock" 0 10 (fontified nil)) . -3391) (3391 . 3401) (#("sta" 0 3 (fontified t)) . -3391) (undo-tree-id11517 . -3) 3394) nil (25945 35240 482837 0) 0 nil])
([nil nil ((3401 . 3402)) nil (25945 35240 482833 0) 0 nil])
([nil nil ((3402 . 3406) (#("keys" 0 4 (fontified nil)) . -3402) (3402 . 3406)) nil (25945 35240 482832 0) 0 nil])
([nil nil ((3406 . 3409)) nil (25945 35240 482831 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3407 3413 #s(yas--snippet nil nil #s(yas--exit 3413 nil) 178 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3413 nil) 178 nil nil nil nil)) (3407 . 3413) (#("iter()$0" 0 8 (fontified nil)) . 3407) (3407 . 3415) (#("it" 0 2 (fontified nil)) . 3407) (3407 . 3409) (#("iter()" 0 6 (fontified nil)) . -3407) (3407 . 3413) (#("it" 0 2 (fontified t)) . -3407) (undo-tree-id11515 . -1) (undo-tree-id11516 . -2) 3409) nil (25945 35240 482829 0) 0 nil])
([nil nil ((3413 . 3414)) nil (25945 35240 482823 0) 0 nil])
([nil nil ((3414 . 3418)) nil (25945 35240 482822 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3407) (undo-tree-id11496 . -1) (undo-tree-id11497 . -1) (#("t" 0 1 (fontified t)) . -3408) (undo-tree-id11498 . -1) (undo-tree-id11499 . -1) (#("e" 0 1 (fontified t)) . -3409) (undo-tree-id11500 . -1) (undo-tree-id11501 . -1) (#("r" 0 1 (fontified t)) . -3410) (undo-tree-id11502 . -1) (undo-tree-id11503 . -1) (#("(" 0 1 (fontified t)) . -3411) (undo-tree-id11504 . -1) (undo-tree-id11505 . -1) (#(")" 0 1 (fontified t)) . -3412) (undo-tree-id11506 . -1) (undo-tree-id11507 . -1) (#("." 0 1 (fontified t)) . -3413) (undo-tree-id11508 . -1) (undo-tree-id11509 . -1) (#("c" 0 1 (fontified t)) . -3414) (undo-tree-id11510 . -1) (undo-tree-id11511 . -1) (#("h" 0 1 (fontified t)) . -3415) (undo-tree-id11512 . -1) (#("u" 0 1 (fontified t)) . -3416) (undo-tree-id11513 . -1) (#("n" 0 1 (fontified t)) . -3417) (undo-tree-id11514 . -1) 3418) nil (25945 35240 482819 0) 0 nil])
([nil nil ((3407 . 3410)) nil (25945 35240 482796 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3414 3415 nil nil nil t #s(yas--exit 3416 nil))) #s(yas--exit 3416 nil) 179 nil #s(yas--field 1 3414 3415 nil nil nil t #s(yas--exit 3416 nil)) nil nil)) (3407 . 3425) (#("chunks(${1:chunk_size})$0" 0 25 (fontified nil)) . 3407) (3407 . 3432) (#("chu" 0 3 (fontified nil)) . 3407) (3407 . 3410) (#("chunks(â€¦)" 0 9 (fontified nil)) . -3407) (3407 . 3416) (#("chu" 0 3 (fontified t)) . -3407) (undo-tree-id11494 . -1) (undo-tree-id11495 . -3) 3410) nil (25945 35240 482794 0) 0 nil])
([nil nil ((#("chunk_size" 0 10 (fontified nil)) . 3415) (3414 . 3415)) nil (25945 35240 482789 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3407 3416 #s(yas--snippet nil (#s(yas--field 1 3414 3415 nil nil nil t #s(yas--exit 3416 nil))) #s(yas--exit 3416 nil) 179 nil #s(yas--field 1 3414 3415 nil nil nil t #s(yas--exit 3416 nil)) nil nil))) nil (25945 35240 482788 0) 0 nil])
([nil nil ((3416 . 3419)) nil (25945 35240 482787 0) 0 nil])
([nil nil ((3418 . 3425)) nil (25945 35240 482786 0) 0 nil])
([nil nil ((3420 . 3426) (#("			" 0 3 (fontified nil)) . 3419) (undo-tree-id11492 . -2) (3421 . 3422) (#("    " 0 4 (fontified nil)) . 3421) (undo-tree-id11493 . -4) (3425 . 3426)) nil (25945 35240 482784 0) 0 nil])
([nil nil ((3419 . 3422)) nil (25945 35240 482781 0) 0 nil])
([nil nil ((3422 . 3429)) nil (25945 35240 482780 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -3422) (undo-tree-id11485 . -1) (#("e" 0 1 (fontified t)) . -3423) (undo-tree-id11486 . -1) (#("y" 0 1 (fontified t)) . -3424) (undo-tree-id11487 . -1) (#("s" 0 1 (fontified t)) . -3425) (undo-tree-id11488 . -1) (#("." 0 1 (fontified t)) . -3426) (undo-tree-id11489 . -1) (#("i" 0 1 (fontified t)) . -3427) (undo-tree-id11490 . -1) (#("t" 0 1 (fontified t)) . -3428) (undo-tree-id11491 . -1) 3429) nil (25945 35240 482777 0) 0 nil])
([nil nil ((3416 . 3419)) nil (25945 35240 482767 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3417 3428 #s(yas--snippet nil nil #s(yas--exit 3428 nil) 180 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3428 nil) 180 nil nil nil nil)) (3417 . 3428) (#("enumerate()$0" 0 13 (fontified nil)) . 3417) (3417 . 3430) (#("em" 0 2 (fontified nil)) . 3417) (3417 . 3419) (#("enumerate() (as Iterator)" 0 25 (fontified nil)) . -3417) (3417 . 3442) (#("em" 0 2 (fontified t)) . -3417) (undo-tree-id11484 . -2) 3419) nil (25945 35240 482765 0) 0 nil])
([nil nil ((3383 . 3386)) nil (25945 35240 482760 0) 0 nil])
([nil nil ((#("k" 0 1 (face font-lock-variable-name-face fontified t)) . -3383) (undo-tree-id11481 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -3384) (undo-tree-id11482 . -1) (#("y" 0 1 (face font-lock-variable-name-face fontified t)) . -3385) (undo-tree-id11483 . -1) 3386) nil (25945 35240 482759 0) 0 nil])
([nil nil ((3383 . 3392)) nil (25945 35240 482754 0) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-variable-name-face fontified t)) . -3391) (undo-tree-id11476 . -1) (undo-tree-id11477 . -1) (undo-tree-id11478 . -1) (undo-tree-id11479 . -1) (undo-tree-id11480 . -1) 3392) nil (25945 35240 482753 0) 0 nil])
([nil nil ((3391 . 3393)) nil (25945 35240 482747 0) 0 nil])
([nil nil ((3383 . 3384)) nil (25945 35240 482746 0) 0 nil])
([nil nil ((3397 . 3398)) nil (25945 35240 482745 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -3397) (undo-tree-id11465 . -1) (undo-tree-id11466 . -1) (undo-tree-id11467 . -1) (undo-tree-id11468 . -1) (undo-tree-id11469 . -1) (undo-tree-id11470 . -1) (undo-tree-id11471 . -1) (undo-tree-id11472 . -1) (undo-tree-id11473 . -1) (undo-tree-id11474 . -1) (undo-tree-id11475 . -1) 3398) nil (25945 35240 482742 0) 0 nil])
([nil nil ((3398 . 3399)) nil (25945 35240 482721 0) 0 nil])
([nil nil ((3270 . 3274) (t 25945 35240 513998 429000)) nil (25945 35248 606538 0) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . -3430) (undo-tree-id11576 . -1) (undo-tree-id11577 . -1) (undo-tree-id11578 . -1) (undo-tree-id11579 . -1) (undo-tree-id11580 . -1) (undo-tree-id11581 . -1) (undo-tree-id11582 . -1) (undo-tree-id11583 . -1) (undo-tree-id11584 . -1) (undo-tree-id11585 . -1) (undo-tree-id11586 . -1) (undo-tree-id11587 . -1) (undo-tree-id11588 . -1) (undo-tree-id11589 . -1) (undo-tree-id11590 . -1) (undo-tree-id11591 . -1) (undo-tree-id11592 . -1) (undo-tree-id11593 . -1) (undo-tree-id11594 . -1) (undo-tree-id11595 . -1) (undo-tree-id11596 . -1) (undo-tree-id11597 . -1) 3431 (t 25945 35248 636532 310000)) nil (25945 37010 42765 0) 0 nil])
([nil nil ((3430 . 3431)) nil (25945 37010 42730 0) 0 nil])
([nil nil ((1708 . 1713) (t 25945 37010 73451 760000)) nil (25945 37089 857499 0) 0 nil])
([nil nil ((1713 . 1714)) nil (25945 37089 857498 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1713 1723 #s(yas--snippet nil nil #s(yas--exit 1722 nil) 181 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1722 nil) 181 nil nil nil nil)) (1713 . 1723) (#("println!($0)" 0 12 (fontified nil)) . 1713) (1713 . 1725) (#("p" 0 1 (fontified nil)) . 1713) (1713 . 1714) (#("println!(â€¦)" 0 11 (fontified nil)) . -1713) (1713 . 1724) (#("p" 0 1 (fontified t)) . -1713) (undo-tree-id11637 . -1) (undo-tree-id11638 . -1) (undo-tree-id11639 . -1) (undo-tree-id11640 . -1) 1714) nil (25945 37089 857495 0) 0 nil])
([nil nil ((1722 . 1724)) nil (25945 37089 857488 0) 0 nil])
([nil nil ((1723 . 1728)) nil (25945 37089 857487 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -1727) (undo-tree-id11631 . -1) (undo-tree-id11632 . -1) (undo-tree-id11633 . -1) (undo-tree-id11634 . -1) (undo-tree-id11635 . -1) (undo-tree-id11636 . -1) 1728) nil (25945 37089 857486 0) 0 nil])
([nil nil ((1727 . 1728)) nil (25945 37089 857478 0) 0 nil])
([nil nil ((#(":" 0 1 (face font-lock-string-face fontified t)) . -1727) (undo-tree-id11625 . -1) (undo-tree-id11626 . -1) (undo-tree-id11627 . -1) (undo-tree-id11628 . -1) (undo-tree-id11629 . -1) (undo-tree-id11630 . -1) 1728) nil (25945 37089 857477 0) 0 nil])
([nil nil ((1727 . 1729)) nil (25945 37089 857469 0) 0 nil])
([nil nil ((1729 . 1731)) nil (25945 37089 857468 0) 0 nil])
([nil nil ((1732 . 1735)) nil (25945 37089 857467 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -1734) (undo-tree-id11621 . -1) (undo-tree-id11622 . -1) (undo-tree-id11623 . -1) (undo-tree-id11624 . -1) 1735) nil (25945 37089 857466 0) 0 nil])
([nil nil ((1734 . 1737)) nil (25945 37089 857461 0) 0 nil])
([nil nil ((1734 . 1744) (#("sta" 0 3 (fontified nil)) . 1734) (1734 . 1737) (#("state_lock" 0 10 (fontified nil)) . -1734) (1734 . 1744) (#("sta" 0 3 (fontified t)) . -1734) (undo-tree-id11613 . -3) (undo-tree-id11614 . -1) (undo-tree-id11615 . -2) (undo-tree-id11616 . -2) (undo-tree-id11617 . -3) (undo-tree-id11618 . -3) (undo-tree-id11619 . -3) (undo-tree-id11620 . -3) 1737) nil (25945 37089 857459 0) 0 nil])
([nil nil ((1744 . 1746)) nil (25945 37089 857448 0) 0 nil])
([nil nil ((1745 . 1749) (#("k" 0 1 (fontified nil)) . 1745) (1745 . 1746) (#("keys" 0 4 (fontified nil)) . -1745) (1745 . 1749) (#("k" 0 1 (fontified t)) . -1745) (undo-tree-id11608 . -1) (undo-tree-id11609 . -1) (undo-tree-id11610 . -1) (undo-tree-id11611 . -1) (undo-tree-id11612 . -1) 1746) nil (25945 37089 857446 0) 0 nil])
([nil nil ((1749 . 1753)) nil (25945 37089 857438 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1750 1755 #s(yas--snippet nil nil #s(yas--exit 1755 nil) 182 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1755 nil) 182 nil nil nil nil)) (1750 . 1755) (#("len()$0" 0 7 (fontified nil)) . 1750) (1750 . 1757) (#("len" 0 3 (fontified nil)) . 1750) (1750 . 1753) (#("len()" 0 5 (fontified nil)) . -1750) (1750 . 1755) (#("len" 0 3 (fontified t)) . -1750) (undo-tree-id11598 . -3) (undo-tree-id11599 . -3) (undo-tree-id11600 . -1) (undo-tree-id11601 . -1) (undo-tree-id11602 . -2) (undo-tree-id11603 . -2) (undo-tree-id11604 . -3) (undo-tree-id11605 . -3) (undo-tree-id11606 . -3) (undo-tree-id11607 . -3) 1753) nil (25945 37089 857435 0) 0 nil])
([nil nil ((1756 . 1757)) nil (25945 37089 857405 0) 0 nil])
([nil nil ((1757 . 1762) (t 25945 37089 888216 917000)) nil (25945 37126 65997 0) 0 nil])
([nil nil ((1762 . 1764)) nil (25945 37126 65995 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1763) (undo-tree-id11651 . -1) (undo-tree-id11652 . -1) (undo-tree-id11653 . -1) 1764) nil (25945 37126 65994 0) 0 nil])
([nil nil ((1763 . 1764)) nil (25945 37126 65990 0) 0 nil])
([nil nil ((1762 . 1772) (#("st" 0 2 (fontified nil)) . 1762) (1762 . 1764) (#("state_lock" 0 10 (fontified nil)) . -1762) (1762 . 1772) (#("st" 0 2 (fontified t)) . -1762) (undo-tree-id11641 . -2) (undo-tree-id11642 . -1) (undo-tree-id11643 . -1) (undo-tree-id11644 . -1) (undo-tree-id11645 . -1) (undo-tree-id11646 . -1) (undo-tree-id11647 . -2) (undo-tree-id11648 . -2) (undo-tree-id11649 . -2) (undo-tree-id11650 . -2) 1764) nil (25945 37126 65987 0) 0 nil])
([nil nil ((1772 . 1773)) nil (25945 37126 65965 0) 0 nil])
([nil nil ((1773 . 1785) (#("request_send" 0 12 (fontified nil)) . -1773) (1773 . 1785)) nil (25945 37126 65963 0) 0 nil])
([nil nil ((1785 . 1793)) nil (25945 37126 65958 0) 0 nil])
([nil nil ((3535 . 3536) (t 25945 37126 96567 846000)) nil (25945 37159 951820 0) 0 nil])
([nil nil ((3535 . 3543) (#("s" 0 1 (fontified nil)) . 3535) (3535 . 3536) (#("send_buf" 0 8 (fontified nil)) . -3535) (3535 . 3543) (#("s" 0 1 (fontified t)) . -3535) (undo-tree-id11670 . -1) (undo-tree-id11671 . -1) (undo-tree-id11672 . -1) (undo-tree-id11673 . -1) 3536) nil (25945 37159 951818 0) 0 nil])
([nil nil ((3543 . 3545)) nil (25945 37159 951812 0) 0 nil])
([nil nil ((3544 . 3545)) nil (25945 37159 951811 0) 0 nil])
([nil nil ((3546 . 3551)) nil (25945 37159 951810 0) 0 nil])
([nil nil ((3551 . 3555)) nil (25945 37159 951809 0) 0 nil])
([nil nil ((3555 . 3559)) nil (25945 37159 951808 0) 0 nil])
([nil nil ((3555 . 3563) (#("send" 0 4 (fontified nil)) . 3555) (3555 . 3559) (#("send_buf" 0 8 (fontified nil)) . -3555) (3555 . 3563) (#("send" 0 4 (fontified t)) . -3555) (undo-tree-id11660 . -4) (undo-tree-id11661 . -1) (undo-tree-id11662 . -2) (undo-tree-id11663 . -2) (undo-tree-id11664 . -3) (undo-tree-id11665 . -3) (undo-tree-id11666 . -4) (undo-tree-id11667 . -4) (undo-tree-id11668 . -4) (undo-tree-id11669 . -4) 3559) nil (25945 37159 951806 0) 0 nil])
([nil nil ((3563 . 3565)) nil (25945 37159 951792 0) 0 nil])
([nil nil ((3564 . 3565)) nil (25945 37159 951792 0) 0 nil])
([nil nil ((3566 . 3571)) nil (25945 37159 951790 0) 0 nil])
([nil nil ((3569 . 3577) (#("pa" 0 2 (fontified nil)) . 3569) (3569 . 3571) (#("page_num" 0 8 (fontified nil)) . -3569) (3569 . 3577) (#("pa" 0 2 (fontified t)) . -3569) (undo-tree-id11654 . -2) (undo-tree-id11655 . -1) (undo-tree-id11656 . -2) (undo-tree-id11657 . -2) (undo-tree-id11658 . -2) (undo-tree-id11659 . -2) 3571) nil (25945 37159 951788 0) 0 nil])
([nil nil ((3577 . 3578)) nil (25945 37159 951772 0) 0 nil])
([nil nil ((3577 . 3583)) nil (25945 37159 951768 0) 0 nil])
([nil nil ((3584 . 3588) (t 25945 37159 983311 773000)) nil (25945 37308 612277 0) 0 nil])
([nil nil ((3588 . 3597)) nil (25945 37308 612275 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3595) (undo-tree-id11678 . -1) (#("n" 0 1 (fontified t)) . -3596) (undo-tree-id11679 . -1) 3597) nil (25945 37308 612274 0) 0 nil])
([nil nil ((3595 . 3597)) nil (25945 37308 612270 0) 0 nil])
([nil nil ((3597 . 3604)) nil (25945 37308 612269 0) 0 nil])
([nil nil ((3605 . 3608) (#("			    " 0 7 (fontified nil)) . 3604) (undo-tree-id11677 . -3) (3607 . 3611) (3603 . 3608)) nil (25945 37308 612268 0) 0 nil])
([nil nil ((3604 . 3611)) nil (25945 37308 612265 0) 0 nil])
([nil nil ((3611 . 3612)) nil (25945 37308 612264 0) 0 nil])
([nil nil ((3612 . 3615)) nil (25945 37308 612263 0) 0 nil])
([nil nil ((3611 . 3619) (#("send" 0 4 (fontified nil)) . 3611) (3611 . 3615) (#("send_buf" 0 8 (fontified nil)) . -3611) (3611 . 3619) (#("send" 0 4 (fontified t)) . -3611) (undo-tree-id11676 . -4) 3615) nil (25945 37308 612262 0) 0 nil])
([nil nil ((3619 . 3621)) nil (25945 37308 612258 0) 0 nil])
([nil nil ((3620 . 3625)) nil (25945 37308 612257 0) 0 nil])
([nil nil ((3626 . 3629)) nil (25945 37308 612256 0) 0 nil])
([nil nil ((3629 . 3630)) nil (25945 37308 612255 0) 0 nil])
([nil nil ((3629 . 3633) (#("k" 0 1 (fontified nil)) . 3629) (3629 . 3630) (#("keys" 0 4 (fontified nil)) . -3629) (3629 . 3633) (#("k" 0 1 (fontified t)) . -3629) (undo-tree-id11675 . -1) 3630) nil (25945 37308 612253 0) 0 nil])
([nil nil ((3633 . 3634)) nil (25945 37308 612249 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3633) (undo-tree-id11674 . -1) 3634) nil (25945 37308 612248 0) 0 nil])
([nil nil ((3633 . 3635)) nil (25945 37308 612241 0) 0 nil])
([nil nil ((3634 . 3635)) nil (25945 37308 612240 0) 0 nil])
([nil nil ((3636 . 3637)) nil (25945 37308 612239 0) 0 nil])
([nil nil ((3637 . 3642) (#("value" 0 5 (fontified nil)) . -3637) (3637 . 3642)) nil (25945 37308 612238 0) 0 nil])
([nil nil ((3642 . 3643)) nil (25945 37308 612237 0) 0 nil])
([nil nil ((3643 . 3644) (#("0" 0 1 (fontified nil)) . -3643) (3643 . 3644)) nil (25945 37308 612235 0) 0 nil])
([nil nil ((3644 . 3651)) nil (25945 37308 612229 0) 0 nil])
([nil nil ((3604 . 3606) (t 25945 37308 643177 827000)) nil (25945 37338 257195 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3605) (undo-tree-id11731 . -1) (undo-tree-id11732 . -1) (undo-tree-id11733 . -1) (undo-tree-id11734 . -1) (undo-tree-id11735 . -1) 3606) nil (25945 37338 257193 0) 0 nil])
([nil nil ((3652 . 3660)) nil (25945 37338 257187 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 3660) (undo-tree-id11728 . -1) (undo-tree-id11729 . -1) (undo-tree-id11730 . -1) (3659 . 3660) (#(" " 0 1 (fontified nil)) . 3658) (3659 . 3660) 3660) nil (25945 37338 257185 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3706 . 3707) (nil fontified nil 3706 . 3707) (nil fontified nil 3704 . 3706) (nil fontified nil 3703 . 3704) (nil fontified nil 3701 . 3703) (nil fontified nil 3699 . 3701) (nil fontified nil 3693 . 3699) (nil fontified nil 3685 . 3693) (nil fontified nil 3667 . 3685) (nil fontified nil 3660 . 3667) (3660 . 3707)) nil (25945 37338 257180 0) 0 nil])
([nil nil ((3701 . 3708) (#("			    " 0 7 (fontified nil)) . -3660) (3707 . 3708)) nil (25945 37338 257176 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3754 . 3755) (nil fontified nil 3754 . 3755) (nil fontified nil 3752 . 3754) (nil fontified nil 3751 . 3752) (nil fontified nil 3749 . 3751) (nil fontified nil 3747 . 3749) (nil fontified nil 3741 . 3747) (nil fontified nil 3733 . 3741) (nil fontified nil 3715 . 3733) (nil fontified nil 3708 . 3715) (3708 . 3755)) nil (25945 37338 257174 0) 0 nil])
([nil nil ((3749 . 3756) (#("			    " 0 7 (fontified nil)) . -3708) (3755 . 3756)) nil (25945 37338 257171 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3802 . 3803) (nil fontified nil 3802 . 3803) (nil fontified nil 3800 . 3802) (nil fontified nil 3799 . 3800) (nil fontified nil 3797 . 3799) (nil fontified nil 3795 . 3797) (nil fontified nil 3789 . 3795) (nil fontified nil 3781 . 3789) (nil fontified nil 3763 . 3781) (nil fontified nil 3756 . 3763) (3756 . 3803)) nil (25945 37338 257169 0) 0 nil])
([nil nil ((3797 . 3804) (#("			    " 0 7 (fontified nil)) . -3756) (3803 . 3804)) nil (25945 37338 257165 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -3625) (undo-tree-id11722 . -1) (undo-tree-id11723 . -1) (undo-tree-id11724 . -1) (undo-tree-id11725 . -1) (undo-tree-id11726 . -1) (undo-tree-id11727 . -1) 3626) nil (25945 37338 257163 0) 0 nil])
([nil nil ((3625 . 3626)) nil (25945 37338 257156 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -3721) (undo-tree-id11717 . -1) (undo-tree-id11718 . -1) (undo-tree-id11719 . -1) (undo-tree-id11720 . -1) (undo-tree-id11721 . -1) 3722) nil (25945 37338 257155 0) 0 nil])
([nil nil ((3721 . 3722)) nil (25945 37338 257148 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -3769) (undo-tree-id11710 . -1) (undo-tree-id11711 . -1) (undo-tree-id11712 . -1) (undo-tree-id11713 . -1) (undo-tree-id11714 . -1) (undo-tree-id11715 . -1) (undo-tree-id11716 . -1) 3770) nil (25945 37338 257147 0) 0 nil])
([nil nil ((3769 . 3770)) nil (25945 37338 257139 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -3692) (undo-tree-id11704 . -1) (undo-tree-id11705 . -1) (undo-tree-id11706 . -1) (undo-tree-id11707 . -1) (undo-tree-id11708 . -1) (undo-tree-id11709 . -1) 3693) nil (25945 37338 257137 0) 0 nil])
([nil nil ((3692 . 3693)) nil (25945 37338 257130 0) 0 nil])
([nil nil ((3692 . 3694) (#("1" 0 1 (fontified t)) . -3692) (undo-tree-id11700 . -1) (undo-tree-id11701 . -1) (undo-tree-id11702 . -1) (undo-tree-id11703 . -1) 3693) nil (25945 37338 257128 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -3693) (undo-tree-id11693 . -1) (undo-tree-id11694 . -1) (undo-tree-id11695 . -1) (undo-tree-id11696 . -1) (undo-tree-id11697 . -1) (undo-tree-id11698 . -1) (undo-tree-id11699 . -1) 3694) nil (25945 37338 257123 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -3740) (undo-tree-id11686 . -1) (undo-tree-id11687 . -1) (undo-tree-id11688 . -1) (undo-tree-id11689 . -1) (undo-tree-id11690 . -1) (undo-tree-id11691 . -1) (undo-tree-id11692 . -1) 3741) nil (25945 37338 257113 0) 0 nil])
([nil nil ((3740 . 3741)) nil (25945 37338 257105 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -3788) (undo-tree-id11680 . -1) (undo-tree-id11681 . -1) (undo-tree-id11682 . -1) (undo-tree-id11683 . -1) (undo-tree-id11684 . -1) (undo-tree-id11685 . -1) 3789) nil (25945 37338 257103 0) 0 nil])
([nil nil ((3788 . 3789)) nil (25945 37338 257084 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3796) (undo-tree-id11770 . -1) (undo-tree-id11771 . -1) (undo-tree-id11772 . -1) (undo-tree-id11773 . -1) (undo-tree-id11774 . -1) (undo-tree-id11775 . -1) (undo-tree-id11776 . -1) (undo-tree-id11777 . -1) (undo-tree-id11778 . -1) (undo-tree-id11779 . -1) (undo-tree-id11780 . -1) (undo-tree-id11781 . -1) (undo-tree-id11782 . -1) (undo-tree-id11783 . -1) (undo-tree-id11784 . -1) (undo-tree-id11785 . -1) (undo-tree-id11786 . -1) (undo-tree-id11787 . -1) (undo-tree-id11788 . -1) (undo-tree-id11789 . -1) (undo-tree-id11790 . -1) (undo-tree-id11791 . -1) (#("	" 0 1 (fontified t)) . -3797) (undo-tree-id11792 . -1) (undo-tree-id11793 . -1) (undo-tree-id11794 . -1) (undo-tree-id11795 . -1) (undo-tree-id11796 . -1) (undo-tree-id11797 . -1) (undo-tree-id11798 . -1) (undo-tree-id11799 . -1) (undo-tree-id11800 . -1) (undo-tree-id11801 . -1) (undo-tree-id11802 . -1) (undo-tree-id11803 . -1) (undo-tree-id11804 . -1) (undo-tree-id11805 . -1) (undo-tree-id11806 . -1) (undo-tree-id11807 . -1) (undo-tree-id11808 . -1) (undo-tree-id11809 . -1) (undo-tree-id11810 . -1) (undo-tree-id11811 . -1) (#("	" 0 1 (fontified t)) . -3798) (undo-tree-id11812 . -1) (undo-tree-id11813 . -1) (undo-tree-id11814 . -1) (undo-tree-id11815 . -1) (undo-tree-id11816 . -1) (undo-tree-id11817 . -1) (undo-tree-id11818 . -1) (undo-tree-id11819 . -1) (undo-tree-id11820 . -1) (undo-tree-id11821 . -1) (undo-tree-id11822 . -1) (undo-tree-id11823 . -1) (undo-tree-id11824 . -1) (undo-tree-id11825 . -1) (undo-tree-id11826 . -1) (undo-tree-id11827 . -1) (undo-tree-id11828 . -1) (undo-tree-id11829 . -1) (undo-tree-id11830 . -1) (#("	" 0 1 (fontified t)) . -3799) (undo-tree-id11831 . -1) (undo-tree-id11832 . -1) (undo-tree-id11833 . -1) (undo-tree-id11834 . -1) (undo-tree-id11835 . -1) (undo-tree-id11836 . -1) (undo-tree-id11837 . -1) (undo-tree-id11838 . -1) (undo-tree-id11839 . -1) (undo-tree-id11840 . -1) (undo-tree-id11841 . -1) (undo-tree-id11842 . -1) (undo-tree-id11843 . -1) (undo-tree-id11844 . -1) (undo-tree-id11845 . -1) (undo-tree-id11846 . -1) (undo-tree-id11847 . -1) (undo-tree-id11848 . -1) (#(" " 0 1 (fontified t)) . -3800) (undo-tree-id11849 . -1) (undo-tree-id11850 . -1) (undo-tree-id11851 . -1) (undo-tree-id11852 . -1) (undo-tree-id11853 . -1) (undo-tree-id11854 . -1) (undo-tree-id11855 . -1) (undo-tree-id11856 . -1) (undo-tree-id11857 . -1) (undo-tree-id11858 . -1) (undo-tree-id11859 . -1) (undo-tree-id11860 . -1) (undo-tree-id11861 . -1) (undo-tree-id11862 . -1) (undo-tree-id11863 . -1) (undo-tree-id11864 . -1) (undo-tree-id11865 . -1) (#(" " 0 1 (fontified t)) . -3801) (undo-tree-id11866 . -1) (undo-tree-id11867 . -1) (undo-tree-id11868 . -1) (undo-tree-id11869 . -1) (undo-tree-id11870 . -1) (undo-tree-id11871 . -1) (undo-tree-id11872 . -1) (undo-tree-id11873 . -1) (undo-tree-id11874 . -1) (undo-tree-id11875 . -1) (undo-tree-id11876 . -1) (undo-tree-id11877 . -1) (undo-tree-id11878 . -1) (undo-tree-id11879 . -1) (undo-tree-id11880 . -1) (undo-tree-id11881 . -1) (#(" " 0 1 (fontified t)) . -3802) (undo-tree-id11882 . -1) (undo-tree-id11883 . -1) (undo-tree-id11884 . -1) (undo-tree-id11885 . -1) (undo-tree-id11886 . -1) (undo-tree-id11887 . -1) (undo-tree-id11888 . -1) (undo-tree-id11889 . -1) (undo-tree-id11890 . -1) (undo-tree-id11891 . -1) (undo-tree-id11892 . -1) (undo-tree-id11893 . -1) (undo-tree-id11894 . -1) (undo-tree-id11895 . -1) (undo-tree-id11896 . -1) (#(" " 0 1 (fontified t)) . -3803) (undo-tree-id11897 . -1) (undo-tree-id11898 . -1) (undo-tree-id11899 . -1) (undo-tree-id11900 . -1) (undo-tree-id11901 . -1) (undo-tree-id11902 . -1) (undo-tree-id11903 . -1) (undo-tree-id11904 . -1) (undo-tree-id11905 . -1) (undo-tree-id11906 . -1) (undo-tree-id11907 . -1) (undo-tree-id11908 . -1) (undo-tree-id11909 . -1) (undo-tree-id11910 . -1) 3804 (t 25945 37338 288517 654000)) nil (25945 37413 876698 0) 0 nil])
([nil nil ((3801 . 3805)) nil (25945 37413 876555 0) 0 nil])
([nil nil ((3805 . 3810)) nil (25945 37413 876554 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3805 3815 #s(yas--snippet nil nil #s(yas--exit 3814 nil) 183 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3814 nil) 183 nil nil nil nil)) (3805 . 3815) (#("println!($0)" 0 12 (fontified nil)) . 3805) (3805 . 3817) (#("print" 0 5 (fontified nil)) . 3805) (3805 . 3810) (#("println!(â€¦)" 0 11 (fontified nil)) . -3805) (3805 . 3816) (#("print" 0 5 (fontified t)) . -3805) (undo-tree-id11758 . -5) (undo-tree-id11759 . -1) (undo-tree-id11760 . -2) (undo-tree-id11761 . -2) (undo-tree-id11762 . -3) (undo-tree-id11763 . -3) (undo-tree-id11764 . -4) (undo-tree-id11765 . -4) (undo-tree-id11766 . -5) (undo-tree-id11767 . -5) (undo-tree-id11768 . -5) (undo-tree-id11769 . -5) 3810) nil (25945 37413 876552 0) 0 nil])
([nil nil ((3814 . 3816)) nil (25945 37413 876536 0) 0 nil])
([nil nil ((3815 . 3819)) nil (25945 37413 876535 0) 0 nil])
([nil nil ((3819 . 3828)) nil (25945 37413 876534 0) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-string-face fontified t)) . -3826) (undo-tree-id11748 . -1) (undo-tree-id11749 . -1) (undo-tree-id11750 . -1) (undo-tree-id11751 . -1) (undo-tree-id11752 . -1) (undo-tree-id11753 . -1) (#("]" 0 1 (face font-lock-string-face fontified t)) . -3827) (undo-tree-id11754 . -1) (undo-tree-id11755 . -1) (undo-tree-id11756 . -1) (undo-tree-id11757 . -1) 3828) nil (25945 37413 876532 0) 0 nil])
([nil nil ((3826 . 3828)) nil (25945 37413 876520 0) 0 nil])
([nil nil ((3828 . 3836)) nil (25945 37413 876519 0) 0 nil])
([nil nil ((3821 . 3822)) nil (25945 37413 876518 0) 0 nil])
([nil nil ((3837 . 3838)) nil (25945 37413 876517 0) 0 nil])
([nil nil ((3826 . 3827)) nil (25945 37413 876516 0) 0 nil])
([nil nil ((3838 . 3842)) nil (25945 37413 876515 0) 0 nil])
([nil nil ((3841 . 3843)) nil (25945 37413 876514 0) 0 nil])
([nil nil ((3846 . 3850)) nil (25945 37413 876513 0) 0 nil])
([nil nil ((3848 . 3856) (#("pa" 0 2 (fontified nil)) . 3848) (3848 . 3850) (#("page_num" 0 8 (fontified nil)) . -3848) (3848 . 3856) (#("pa" 0 2 (fontified t)) . -3848) (undo-tree-id11742 . -2) (undo-tree-id11743 . -1) (undo-tree-id11744 . -2) (undo-tree-id11745 . -2) (undo-tree-id11746 . -2) (undo-tree-id11747 . -2) 3850) nil (25945 37413 876511 0) 0 nil])
([nil nil ((3856 . 3861)) nil (25945 37413 876502 0) 0 nil])
([nil nil ((3859 . 3867) (#("sn" 0 2 (fontified nil)) . 3859) (3859 . 3861) (#("send_buf" 0 8 (fontified nil)) . -3859) (3859 . 3867) (#("sn" 0 2 (fontified t)) . -3859) (undo-tree-id11736 . -2) (undo-tree-id11737 . -1) (undo-tree-id11738 . -2) (undo-tree-id11739 . -2) (undo-tree-id11740 . -2) (undo-tree-id11741 . -2) 3861) nil (25945 37413 876499 0) 0 nil])
([nil nil ((3867 . 3869)) nil (25945 37413 876484 0) 0 nil])
([nil nil ((3868 . 3873)) nil (25945 37413 876482 0) 0 nil])
([nil nil ((3875 . 3876)) nil (25945 37413 876478 0) 0 nil])
([nil nil ((3626 . 3627) (t 25945 37413 908348 207000)) nil (25945 37514 125959 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3626) (undo-tree-id11911 . -1) (undo-tree-id11912 . -1) (undo-tree-id11913 . -1) (undo-tree-id11914 . -1) (undo-tree-id11915 . -1) 3627) nil (25945 37514 125957 0) 0 nil])
([nil nil ((3621 . 3623)) nil (25945 37514 125942 0) 0 nil])
([nil nil ((3623 . 3624)) nil (25945 37514 125941 0) 0 nil])
([nil nil ((3622 . 3623)) nil (25945 37514 125940 0) 0 nil])
([nil nil ((3673 . 3674)) nil (25945 37514 125938 0) 0 nil])
([nil nil ((3674 . 3676)) nil (25945 37514 125937 0) 0 nil])
([nil nil ((3674 . 3675)) nil (25945 37514 125936 0) 0 nil])
([nil nil ((3725 . 3729)) nil (25945 37514 125934 0) 0 nil])
([nil nil ((3777 . 3781)) nil (25945 37514 125930 0) 0 nil])
([nil nil ((3655 . 3658) (t 25945 37514 158647 682000)) nil (25945 37572 160782 0) 0 nil])
([nil nil ((3658 . 3661)) nil (25945 37572 160781 0) 0 nil])
([nil nil ((3658 . 3662) (#("key" 0 3 (fontified nil)) . 3658) (3658 . 3661) (#("keys" 0 4 (fontified nil)) . -3658) (3658 . 3662) (#("key" 0 3 (fontified t)) . -3658) (undo-tree-id11935 . -3) (undo-tree-id11936 . -1) (undo-tree-id11937 . -2) (undo-tree-id11938 . -2) (undo-tree-id11939 . -3) (undo-tree-id11940 . -3) (undo-tree-id11941 . -3) (undo-tree-id11942 . -3) 3661) nil (25945 37572 160779 0) 0 nil])
([nil nil ((3662 . 3663)) nil (25945 37572 160769 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -3662) (undo-tree-id11927 . -1) (undo-tree-id11928 . -1) (undo-tree-id11929 . -1) (undo-tree-id11930 . -1) (undo-tree-id11931 . -1) (undo-tree-id11932 . -1) (undo-tree-id11933 . -1) (undo-tree-id11934 . -1) 3663) nil (25945 37572 160767 0) 0 nil])
([nil nil ((3662 . 3663)) nil (25945 37572 160757 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3662) (undo-tree-id11923 . -1) (undo-tree-id11924 . -1) (undo-tree-id11925 . -1) (undo-tree-id11926 . -1) 3663) nil (25945 37572 160755 0) 0 nil])
([nil nil ((3662 . 3664)) nil (25945 37572 160750 0) 0 nil])
([nil nil ((3663 . 3664)) nil (25945 37572 160749 0) 0 nil])
([nil nil ((3665 . 3667)) nil (25945 37572 160747 0) 0 nil])
([nil nil ((3666 . 3670) (#("m" 0 1 (fontified nil)) . 3666) (3666 . 3667) (#("mode" 0 4 (fontified nil)) . -3666) (3666 . 3670) (#("m" 0 1 (fontified t)) . -3666) (undo-tree-id11916 . -1) (undo-tree-id11917 . -1) (undo-tree-id11918 . -1) (undo-tree-id11919 . -1) (undo-tree-id11920 . -1) (undo-tree-id11921 . -1) (undo-tree-id11922 . -1) 3667) nil (25945 37572 160743 0) 0 nil])
([nil nil ((3670 . 3676) (t 25945 37572 192982 909000)) nil (25945 37575 795915 0) 0 nil])
([nil nil ((3677 . 3678) (3658 . 3658) (3658 . 3659) (t 25945 37575 828004 183000)) nil (25945 37629 422862 0) 0 nil])
([nil nil ((3677 . 3678)) nil (25945 37629 422860 0) 0 nil])
([nil nil ((3678 . 3679)) nil (25945 37629 422859 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3677) (undo-tree-id12199 . -1) (undo-tree-id12200 . -1) (undo-tree-id12201 . -1) (undo-tree-id12202 . -1) (undo-tree-id12203 . -1) (undo-tree-id12204 . -1) (undo-tree-id12205 . -1) (undo-tree-id12206 . -1) (undo-tree-id12207 . -1) (undo-tree-id12208 . -1) (undo-tree-id12209 . -1) (undo-tree-id12210 . -1) (undo-tree-id12211 . -1) (undo-tree-id12212 . -1) (undo-tree-id12213 . -1) (undo-tree-id12214 . -1) (undo-tree-id12215 . -1) (undo-tree-id12216 . -1) (undo-tree-id12217 . -1) (undo-tree-id12218 . -1) (undo-tree-id12219 . -1) (#("<" 0 1 (syntax-table (1) fontified t)) . -3678) (undo-tree-id12220 . -1) (undo-tree-id12221 . -1) (undo-tree-id12222 . -1) (undo-tree-id12223 . -1) (undo-tree-id12224 . -1) (undo-tree-id12225 . -1) (undo-tree-id12226 . -1) (undo-tree-id12227 . -1) (undo-tree-id12228 . -1) (undo-tree-id12229 . -1) (undo-tree-id12230 . -1) 3679) nil (25945 37629 422857 0) 0 nil])
([nil nil ((3659 . 3660)) nil (25945 37629 422825 0) 0 nil])
([nil nil ((3659 . 3662)) nil (25945 37629 422824 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -3661) (undo-tree-id12191 . -1) (undo-tree-id12192 . -1) (undo-tree-id12193 . -1) (undo-tree-id12194 . -1) (undo-tree-id12195 . -1) (undo-tree-id12196 . -1) (undo-tree-id12197 . -1) (undo-tree-id12198 . -1) 3662) nil (25945 37629 422822 0) 0 nil])
([nil nil ((3661 . 3665)) nil (25945 37629 422814 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -3659) (undo-tree-id11943 . -1) (undo-tree-id11944 . -1) (undo-tree-id11945 . -1) (undo-tree-id11946 . -1) (undo-tree-id11947 . -1) (undo-tree-id11948 . -1) (undo-tree-id11949 . -1) (undo-tree-id11950 . -1) (undo-tree-id11951 . -1) (undo-tree-id11952 . -1) (undo-tree-id11953 . -1) (undo-tree-id11954 . -1) (undo-tree-id11955 . -1) (undo-tree-id11956 . -1) (undo-tree-id11957 . -1) (undo-tree-id11958 . -1) (undo-tree-id11959 . -1) (undo-tree-id11960 . -1) (undo-tree-id11961 . -1) (undo-tree-id11962 . -1) (undo-tree-id11963 . -1) (undo-tree-id11964 . -1) (undo-tree-id11965 . -1) (undo-tree-id11966 . -1) (undo-tree-id11967 . -1) (undo-tree-id11968 . -1) (undo-tree-id11969 . -1) (undo-tree-id11970 . -1) (undo-tree-id11971 . -1) (undo-tree-id11972 . -1) (undo-tree-id11973 . -1) (undo-tree-id11974 . -1) (undo-tree-id11975 . -1) (undo-tree-id11976 . -1) (undo-tree-id11977 . -1) (undo-tree-id11978 . -1) (undo-tree-id11979 . -1) (undo-tree-id11980 . -1) (undo-tree-id11981 . -1) (undo-tree-id11982 . -1) (undo-tree-id11983 . -1) (undo-tree-id11984 . -1) (undo-tree-id11985 . -1) (undo-tree-id11986 . -1) (undo-tree-id11987 . -1) (undo-tree-id11988 . -1) (undo-tree-id11989 . -1) (undo-tree-id11990 . -1) (undo-tree-id11991 . -1) (undo-tree-id11992 . -1) (undo-tree-id11993 . -1) (undo-tree-id11994 . -1) (undo-tree-id11995 . -1) (undo-tree-id11996 . -1) (undo-tree-id11997 . -1) (undo-tree-id11998 . -1) (undo-tree-id11999 . -1) (undo-tree-id12000 . -1) (undo-tree-id12001 . -1) (undo-tree-id12002 . -1) (undo-tree-id12003 . -1) (undo-tree-id12004 . -1) (undo-tree-id12005 . -1) (undo-tree-id12006 . -1) (undo-tree-id12007 . -1) (#("x" 0 1 (fontified t)) . -3660) (undo-tree-id12008 . -1) (undo-tree-id12009 . -1) (undo-tree-id12010 . -1) (undo-tree-id12011 . -1) (undo-tree-id12012 . -1) (undo-tree-id12013 . -1) (undo-tree-id12014 . -1) (undo-tree-id12015 . -1) (undo-tree-id12016 . -1) (undo-tree-id12017 . -1) (undo-tree-id12018 . -1) (undo-tree-id12019 . -1) (undo-tree-id12020 . -1) (undo-tree-id12021 . -1) (undo-tree-id12022 . -1) (undo-tree-id12023 . -1) (undo-tree-id12024 . -1) (undo-tree-id12025 . -1) (undo-tree-id12026 . -1) (undo-tree-id12027 . -1) (undo-tree-id12028 . -1) (undo-tree-id12029 . -1) (undo-tree-id12030 . -1) (undo-tree-id12031 . -1) (undo-tree-id12032 . -1) (undo-tree-id12033 . -1) (undo-tree-id12034 . -1) (undo-tree-id12035 . -1) (undo-tree-id12036 . -1) (undo-tree-id12037 . -1) (undo-tree-id12038 . -1) (undo-tree-id12039 . -1) (undo-tree-id12040 . -1) (undo-tree-id12041 . -1) (undo-tree-id12042 . -1) (undo-tree-id12043 . -1) (undo-tree-id12044 . -1) (undo-tree-id12045 . -1) (undo-tree-id12046 . -1) (undo-tree-id12047 . -1) (undo-tree-id12048 . -1) (undo-tree-id12049 . -1) (undo-tree-id12050 . -1) (undo-tree-id12051 . -1) (undo-tree-id12052 . -1) (undo-tree-id12053 . -1) (undo-tree-id12054 . -1) (undo-tree-id12055 . -1) (undo-tree-id12056 . -1) (undo-tree-id12057 . -1) (undo-tree-id12058 . -1) (undo-tree-id12059 . -1) (undo-tree-id12060 . -1) (undo-tree-id12061 . -1) (undo-tree-id12062 . -1) (undo-tree-id12063 . -1) (undo-tree-id12064 . -1) (undo-tree-id12065 . -1) (undo-tree-id12066 . -1) (#("8" 0 1 (fontified t)) . -3661) (undo-tree-id12067 . -1) (undo-tree-id12068 . -1) (undo-tree-id12069 . -1) (undo-tree-id12070 . -1) (undo-tree-id12071 . -1) (undo-tree-id12072 . -1) (undo-tree-id12073 . -1) (undo-tree-id12074 . -1) (undo-tree-id12075 . -1) (undo-tree-id12076 . -1) (undo-tree-id12077 . -1) (undo-tree-id12078 . -1) (undo-tree-id12079 . -1) (undo-tree-id12080 . -1) (undo-tree-id12081 . -1) (undo-tree-id12082 . -1) (undo-tree-id12083 . -1) (undo-tree-id12084 . -1) (undo-tree-id12085 . -1) (undo-tree-id12086 . -1) (undo-tree-id12087 . -1) (undo-tree-id12088 . -1) (undo-tree-id12089 . -1) (undo-tree-id12090 . -1) (undo-tree-id12091 . -1) (undo-tree-id12092 . -1) (undo-tree-id12093 . -1) (undo-tree-id12094 . -1) (undo-tree-id12095 . -1) (undo-tree-id12096 . -1) (undo-tree-id12097 . -1) (undo-tree-id12098 . -1) (undo-tree-id12099 . -1) (undo-tree-id12100 . -1) (undo-tree-id12101 . -1) (undo-tree-id12102 . -1) (undo-tree-id12103 . -1) (#("0" 0 1 (fontified t)) . -3662) (undo-tree-id12104 . -1) (undo-tree-id12105 . -1) (undo-tree-id12106 . -1) (undo-tree-id12107 . -1) (undo-tree-id12108 . -1) (undo-tree-id12109 . -1) (undo-tree-id12110 . -1) (undo-tree-id12111 . -1) (undo-tree-id12112 . -1) (undo-tree-id12113 . -1) (undo-tree-id12114 . -1) (undo-tree-id12115 . -1) (undo-tree-id12116 . -1) (undo-tree-id12117 . -1) (undo-tree-id12118 . -1) (undo-tree-id12119 . -1) (undo-tree-id12120 . -1) (undo-tree-id12121 . -1) (undo-tree-id12122 . -1) (undo-tree-id12123 . -1) (undo-tree-id12124 . -1) (undo-tree-id12125 . -1) (undo-tree-id12126 . -1) (undo-tree-id12127 . -1) (undo-tree-id12128 . -1) (undo-tree-id12129 . -1) (undo-tree-id12130 . -1) (undo-tree-id12131 . -1) (undo-tree-id12132 . -1) (undo-tree-id12133 . -1) (undo-tree-id12134 . -1) (#(" " 0 1 (fontified t)) . -3663) (undo-tree-id12135 . -1) (undo-tree-id12136 . -1) (undo-tree-id12137 . -1) (undo-tree-id12138 . -1) (undo-tree-id12139 . -1) (undo-tree-id12140 . -1) (undo-tree-id12141 . -1) (undo-tree-id12142 . -1) (undo-tree-id12143 . -1) (undo-tree-id12144 . -1) (undo-tree-id12145 . -1) (undo-tree-id12146 . -1) (undo-tree-id12147 . -1) (undo-tree-id12148 . -1) (undo-tree-id12149 . -1) (undo-tree-id12150 . -1) (undo-tree-id12151 . -1) (undo-tree-id12152 . -1) (undo-tree-id12153 . -1) (undo-tree-id12154 . -1) (undo-tree-id12155 . -1) (undo-tree-id12156 . -1) (undo-tree-id12157 . -1) (#("&" 0 1 (face rust-ampersand-face fontified t)) . -3664) (undo-tree-id12158 . -1) (undo-tree-id12159 . -1) (undo-tree-id12160 . -1) (undo-tree-id12161 . -1) (undo-tree-id12162 . -1) (undo-tree-id12163 . -1) (undo-tree-id12164 . -1) (undo-tree-id12165 . -1) (undo-tree-id12166 . -1) (undo-tree-id12167 . -1) (undo-tree-id12168 . -1) (undo-tree-id12169 . -1) (undo-tree-id12170 . -1) (undo-tree-id12171 . -1) (undo-tree-id12172 . -1) (undo-tree-id12173 . -1) (undo-tree-id12174 . -1) (undo-tree-id12175 . -1) (undo-tree-id12176 . -1) (undo-tree-id12177 . -1) (undo-tree-id12178 . -1) (#(" " 0 1 (fontified t)) . -3665) (undo-tree-id12179 . -1) (undo-tree-id12180 . -1) (undo-tree-id12181 . -1) (undo-tree-id12182 . -1) (undo-tree-id12183 . -1) (undo-tree-id12184 . -1) (undo-tree-id12185 . 1) (undo-tree-id12186 . -1) (undo-tree-id12187 . -1) (undo-tree-id12188 . -1) (undo-tree-id12189 . -1) (undo-tree-id12190 . -1) 3666) nil (25945 37629 422800 0) 0 nil])
([nil nil ((3677 . 3682)) nil (25945 37629 422550 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3671) (undo-tree-id12231 . -1) (undo-tree-id12232 . -1) (undo-tree-id12233 . -1) (undo-tree-id12234 . -1) (undo-tree-id12235 . -1) (undo-tree-id12236 . -1) (undo-tree-id12237 . -1) (undo-tree-id12238 . -1) (undo-tree-id12239 . -1) (undo-tree-id12240 . -1) (undo-tree-id12241 . -1) (undo-tree-id12242 . -1) (undo-tree-id12243 . -1) (undo-tree-id12244 . -1) (undo-tree-id12245 . -1) (undo-tree-id12246 . -1) (undo-tree-id12247 . -1) (undo-tree-id12248 . -1) (undo-tree-id12249 . -1) (undo-tree-id12250 . -1) (undo-tree-id12251 . -1) (undo-tree-id12252 . -1) (undo-tree-id12253 . -1) (undo-tree-id12254 . -1) (undo-tree-id12255 . -1) (undo-tree-id12256 . -1) (undo-tree-id12257 . -1) (undo-tree-id12258 . -1) (undo-tree-id12259 . -1) (undo-tree-id12260 . -1) (undo-tree-id12261 . -1) (undo-tree-id12262 . -1) (undo-tree-id12263 . -1) (undo-tree-id12264 . -1) (undo-tree-id12265 . -1) (undo-tree-id12266 . -1) (undo-tree-id12267 . -1) (undo-tree-id12268 . -1) (undo-tree-id12269 . -1) (undo-tree-id12270 . -1) (undo-tree-id12271 . -1) (undo-tree-id12272 . -1) (undo-tree-id12273 . -1) (undo-tree-id12274 . -1) (undo-tree-id12275 . -1) (undo-tree-id12276 . -1) (undo-tree-id12277 . -1) (undo-tree-id12278 . -1) (undo-tree-id12279 . -1) (undo-tree-id12280 . -1) (undo-tree-id12281 . -1) (undo-tree-id12282 . -1) (#("a" 0 1 (fontified t)) . -3672) (undo-tree-id12283 . -1) (undo-tree-id12284 . -1) (undo-tree-id12285 . -1) (undo-tree-id12286 . -1) (undo-tree-id12287 . -1) (undo-tree-id12288 . -1) (undo-tree-id12289 . -1) (undo-tree-id12290 . -1) (undo-tree-id12291 . -1) (undo-tree-id12292 . -1) (undo-tree-id12293 . -1) (undo-tree-id12294 . -1) (undo-tree-id12295 . -1) (undo-tree-id12296 . -1) (undo-tree-id12297 . -1) (undo-tree-id12298 . -1) (undo-tree-id12299 . -1) (undo-tree-id12300 . -1) (undo-tree-id12301 . -1) (undo-tree-id12302 . -1) (undo-tree-id12303 . -1) (undo-tree-id12304 . -1) (undo-tree-id12305 . -1) (undo-tree-id12306 . -1) (undo-tree-id12307 . -1) (undo-tree-id12308 . -1) (undo-tree-id12309 . -1) (undo-tree-id12310 . -1) (undo-tree-id12311 . -1) (undo-tree-id12312 . -1) (undo-tree-id12313 . -1) (undo-tree-id12314 . -1) (undo-tree-id12315 . -1) (undo-tree-id12316 . -1) (undo-tree-id12317 . -1) (undo-tree-id12318 . -1) (undo-tree-id12319 . -1) (undo-tree-id12320 . -1) (undo-tree-id12321 . -1) (undo-tree-id12322 . -1) (undo-tree-id12323 . -1) (undo-tree-id12324 . -1) (undo-tree-id12325 . -1) (undo-tree-id12326 . -1) (undo-tree-id12327 . -1) (undo-tree-id12328 . -1) (undo-tree-id12329 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -3673) (undo-tree-id12330 . -1) (undo-tree-id12331 . -1) (undo-tree-id12332 . -1) (undo-tree-id12333 . -1) (undo-tree-id12334 . -1) (undo-tree-id12335 . -1) (undo-tree-id12336 . -1) (undo-tree-id12337 . -1) (undo-tree-id12338 . -1) (undo-tree-id12339 . -1) (undo-tree-id12340 . -1) (undo-tree-id12341 . -1) (undo-tree-id12342 . -1) (undo-tree-id12343 . -1) (undo-tree-id12344 . -1) (undo-tree-id12345 . -1) (undo-tree-id12346 . -1) (undo-tree-id12347 . -1) (undo-tree-id12348 . -1) (undo-tree-id12349 . -1) (undo-tree-id12350 . -1) (undo-tree-id12351 . -1) (undo-tree-id12352 . -1) (undo-tree-id12353 . -1) (undo-tree-id12354 . -1) (undo-tree-id12355 . -1) (undo-tree-id12356 . -1) (undo-tree-id12357 . -1) (undo-tree-id12358 . -1) (undo-tree-id12359 . -1) (undo-tree-id12360 . -1) (undo-tree-id12361 . -1) (undo-tree-id12362 . -1) (undo-tree-id12363 . -1) (undo-tree-id12364 . -1) (undo-tree-id12365 . -1) (undo-tree-id12366 . -1) (undo-tree-id12367 . -1) (undo-tree-id12368 . -1) (undo-tree-id12369 . -1) (undo-tree-id12370 . -1) (undo-tree-id12371 . -1) (#(" " 0 1 (fontified t)) . -3674) (undo-tree-id12372 . -1) (undo-tree-id12373 . -1) (undo-tree-id12374 . -1) (undo-tree-id12375 . -1) (undo-tree-id12376 . -1) (undo-tree-id12377 . -1) (undo-tree-id12378 . -1) (undo-tree-id12379 . -1) (undo-tree-id12380 . -1) (undo-tree-id12381 . -1) (undo-tree-id12382 . -1) (undo-tree-id12383 . -1) (undo-tree-id12384 . -1) (undo-tree-id12385 . -1) (undo-tree-id12386 . -1) (undo-tree-id12387 . -1) (undo-tree-id12388 . -1) (undo-tree-id12389 . -1) (undo-tree-id12390 . -1) (undo-tree-id12391 . -1) (undo-tree-id12392 . -1) (undo-tree-id12393 . -1) (undo-tree-id12394 . -1) (undo-tree-id12395 . -1) (undo-tree-id12396 . -1) (undo-tree-id12397 . -1) (undo-tree-id12398 . -1) (undo-tree-id12399 . -1) (undo-tree-id12400 . -1) (undo-tree-id12401 . -1) (undo-tree-id12402 . -1) (undo-tree-id12403 . -1) (undo-tree-id12404 . -1) (undo-tree-id12405 . -1) (undo-tree-id12406 . -1) (undo-tree-id12407 . -1) (undo-tree-id12408 . -1) (#("u" 0 1 (fontified t)) . -3675) (undo-tree-id12409 . -1) (undo-tree-id12410 . -1) (undo-tree-id12411 . -1) (undo-tree-id12412 . -1) (undo-tree-id12413 . -1) (undo-tree-id12414 . -1) (undo-tree-id12415 . -1) (undo-tree-id12416 . -1) (undo-tree-id12417 . -1) (undo-tree-id12418 . -1) (undo-tree-id12419 . -1) (undo-tree-id12420 . -1) (undo-tree-id12421 . -1) (undo-tree-id12422 . -1) (undo-tree-id12423 . -1) (undo-tree-id12424 . -1) (undo-tree-id12425 . -1) (undo-tree-id12426 . -1) (undo-tree-id12427 . -1) (undo-tree-id12428 . -1) (undo-tree-id12429 . -1) (undo-tree-id12430 . -1) (undo-tree-id12431 . -1) (undo-tree-id12432 . -1) (undo-tree-id12433 . -1) (undo-tree-id12434 . -1) (undo-tree-id12435 . -1) (undo-tree-id12436 . -1) (undo-tree-id12437 . -1) (undo-tree-id12438 . -1) (undo-tree-id12439 . -1) (undo-tree-id12440 . -1) (#("8" 0 1 (face font-lock-type-face fontified t)) . -3676) (undo-tree-id12441 . -1) (undo-tree-id12442 . -1) (undo-tree-id12443 . -1) (undo-tree-id12444 . -1) (undo-tree-id12445 . -1) (undo-tree-id12446 . -1) (undo-tree-id12447 . -1) (undo-tree-id12448 . -1) (undo-tree-id12449 . -1) (undo-tree-id12450 . -1) (undo-tree-id12451 . -1) (undo-tree-id12452 . -1) (undo-tree-id12453 . -1) (undo-tree-id12454 . -1) (undo-tree-id12455 . -1) (undo-tree-id12456 . -1) (undo-tree-id12457 . -1) (undo-tree-id12458 . -1) (undo-tree-id12459 . -1) (undo-tree-id12460 . -1) (undo-tree-id12461 . -1) (undo-tree-id12462 . -1) (undo-tree-id12463 . -1) (undo-tree-id12464 . -1) (undo-tree-id12465 . -1) (undo-tree-id12466 . -1) (undo-tree-id12467 . -1) 3677 (t 25945 37629 455231 457000)) nil (25945 37645 104495 0) 0 nil])
([nil nil ((3676 . 3682) (t 25945 37645 137517 714000)) nil (25945 37650 622873 0) 0 nil])
([nil nil ((3683 . 3684) (3659 . 3659) (3659 . 3660) (t 25945 37650 655295 107000)) nil (25945 37661 421019 0) 0 nil])
([nil nil ((3677 . 3678)) nil (25945 37661 421014 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -3685) (undo-tree-id12468 . -1) (undo-tree-id12469 . -1) (undo-tree-id12470 . -1) (undo-tree-id12471 . -1) (undo-tree-id12472 . -1) (undo-tree-id12473 . -1) (undo-tree-id12474 . -1) (undo-tree-id12475 . -1) (undo-tree-id12476 . -1) (undo-tree-id12477 . -1) (undo-tree-id12478 . -1) (undo-tree-id12479 . -1) 3686 (t 25945 37661 453431 47000)) nil (25945 37671 549988 0) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . -3676) (undo-tree-id12480 . -1) (undo-tree-id12481 . -1) (undo-tree-id12482 . -1) (undo-tree-id12483 . -1) (undo-tree-id12484 . -1) (undo-tree-id12485 . -1) 3677 (t 25945 37671 582372 144000)) nil (25945 37800 752356 0) 0 nil])
([nil nil ((3676 . 3677)) nil (25945 37800 752336 0) 0 nil])
([nil nil ((3847 . 3851) (t 25945 37800 785650 607000)) nil (25945 37869 155139 0) 0 nil])
([nil nil ((3851 . 3853)) nil (25945 37869 155138 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3857 3881 nil nil nil t #s(yas--exit 3882 nil))) #s(yas--exit 3882 nil) 184 nil #s(yas--field 1 3857 3881 nil nil nil t #s(yas--exit 3882 nil)) nil nil)) (3851 . 3861) (#("sleep(${1:dur})$0" 0 17 (fontified nil)) . 3851) (3851 . 3868) (#("sl" 0 2 (fontified nil)) . 3851) (3851 . 3853) (#("sleep(â€¦)" 0 8 (fontified nil)) . -3851) (3851 . 3859) (#("sl" 0 2 (fontified t)) . -3851) (undo-tree-id12510 . -2) (undo-tree-id12511 . -1) (undo-tree-id12512 . -1) (undo-tree-id12513 . -1) (undo-tree-id12514 . -2) (undo-tree-id12515 . -2) (undo-tree-id12516 . -2) (undo-tree-id12517 . -2) 3853) nil (25945 37869 155135 0) 0 nil])
([nil nil ((3858 . 3859) (#("dur" 0 3 (fontified nil)) . 3858) (undo-tree-id12509 . -3) (3857 . 3858)) nil (25945 37869 155124 0) 0 nil])
([nil nil ((3857 . 3865) (#("Du" 0 2 (fontified nil)) . 3857) (undo-tree-id12497 . -2) (3857 . 3859) (#("Duration" 0 8 (fontified nil)) . -3857) (undo-tree-id12498 . -8) (3857 . 3865) (#("Du" 0 2 (face font-lock-type-face fontified t)) . -3857) (undo-tree-id12499 . -2) (undo-tree-id12500 . -2) (undo-tree-id12501 . -2) (undo-tree-id12502 . -1) (undo-tree-id12503 . -1) (undo-tree-id12504 . -1) (undo-tree-id12505 . -2) (undo-tree-id12506 . -2) (undo-tree-id12507 . -2) (undo-tree-id12508 . -2) 3859) nil (25945 37869 155120 0) 0 nil])
([nil nil ((3865 . 3868)) nil (25945 37869 155105 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3879 3880 nil nil nil t #s(yas--exit 3881 nil))) #s(yas--exit 3881 nil) 185 nil #s(yas--field 1 3879 3880 nil nil nil t #s(yas--exit 3881 nil)) #s(yas--field 1 3857 3881 nil nil nil t #s(yas--exit 3882 nil)) nil)) (3867 . 3886) (#("from_millis(${1:millis})$0" 0 26 (fontified nil)) . 3867) (undo-tree-id12487 . -26) (3867 . 3893) (#("f" 0 1 (fontified nil)) . 3867) (undo-tree-id12488 . -1) (3867 . 3868) (#("from_millis(â€¦)" 0 14 (fontified nil)) . -3867) (undo-tree-id12489 . -14) (3867 . 3881) (#("f" 0 1 (fontified t)) . -3867) (undo-tree-id12490 . -1) (undo-tree-id12491 . -1) (undo-tree-id12492 . -1) (undo-tree-id12493 . -1) (undo-tree-id12494 . -1) (undo-tree-id12495 . -1) (undo-tree-id12496 . -1) 3868) nil (25945 37869 155103 0) 0 nil])
([nil nil ((#("millis" 0 6 (fontified nil)) . 3880) (undo-tree-id12486 . -6) (3879 . 3880)) nil (25945 37869 155088 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3867 3881 #s(yas--snippet nil (#s(yas--field 1 3879 3880 nil nil nil t #s(yas--exit 3881 nil))) #s(yas--exit 3881 nil) 185 nil #s(yas--field 1 3879 3880 nil nil nil t #s(yas--exit 3881 nil)) #s(yas--field 1 3857 3881 nil nil nil t #s(yas--exit 3882 nil)) nil))) nil (25945 37869 155079 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3851 3882 #s(yas--snippet nil (#s(yas--field 1 3857 3881 nil nil nil t #s(yas--exit 3882 nil))) #s(yas--exit 3882 nil) 184 nil #s(yas--field 1 3857 3881 nil nil nil t #s(yas--exit 3882 nil)) nil nil))) nil (25945 37869 155077 0) 0 nil])
([nil nil ((3882 . 3883)) nil (25945 37869 155073 0) 0 nil])
([nil nil ((3882 . 3884) (t 25945 37869 188203 780000)) nil (25945 37872 70307 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3882) (undo-tree-id12518 . -1) (undo-tree-id12519 . -1) (undo-tree-id12520 . -1) (undo-tree-id12521 . -1) (undo-tree-id12522 . -1) (undo-tree-id12523 . -1) (undo-tree-id12524 . -1) (undo-tree-id12525 . -1) (undo-tree-id12526 . -1) (undo-tree-id12527 . -1) (undo-tree-id12528 . -1) (#("a" 0 1 (fontified t)) . -3883) (undo-tree-id12529 . -1) (undo-tree-id12530 . -1) (undo-tree-id12531 . -1) (undo-tree-id12532 . -1) (undo-tree-id12533 . -1) 3884) nil (25945 37872 70296 0) 0 nil])
([nil nil ((3958 . 3962) (t 25945 37872 104482 46000)) nil (25945 39380 668553 0) 0 nil])
([nil nil ((3958 . 3962)) nil (25945 39380 668552 0) 0 nil])
([nil nil ((3847 . 3851)) nil (25945 39380 668551 0) 0 nil])
([nil nil ((3851 . 3854)) nil (25945 39380 668550 0) 0 nil])
([nil nil ((3851 . 3857) (#("han" 0 3 (fontified nil)) . 3851) (3851 . 3854) (#("handle" 0 6 (fontified nil)) . -3851) (3851 . 3857) (#("han" 0 3 (fontified t)) . -3851) (undo-tree-id12584 . -3) 3854) nil (25945 39380 668548 0) 0 nil])
([nil nil ((3857 . 3858)) nil (25945 39380 668544 0) 0 nil])
([nil nil ((3858 . 3864) (#("device" 0 6 (fontified nil)) . -3858) (3858 . 3864)) nil (25945 39380 668543 0) 0 nil])
([nil nil ((3864 . 3868)) nil (25945 39380 668542 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3864) (undo-tree-id12580 . -1) (#("w" 0 1 (fontified t)) . -3865) (undo-tree-id12581 . -1) (#("r" 0 1 (fontified t)) . -3866) (undo-tree-id12582 . -1) (#("i" 0 1 (fontified t)) . -3867) (undo-tree-id12583 . -1) 3868) nil (25945 39380 668540 0) 0 nil])
([nil nil ((3864 . 3867)) nil (25945 39380 668534 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3865 3873 #s(yas--snippet nil nil #s(yas--exit 3873 nil) 205 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3873 nil) 205 nil nil nil nil)) (3865 . 3873) (#("as_ref()$0" 0 10 (fontified nil)) . 3865) (3865 . 3875) (#("as" 0 2 (fontified nil)) . 3865) (3865 . 3867) (#("as_ref()" 0 8 (fontified nil)) . -3865) (3865 . 3873) (#("as" 0 2 (face font-lock-keyword-face fontified t)) . -3865) (undo-tree-id12579 . -2) 3867) nil (25945 39380 668532 0) 0 nil])
([nil nil ((3873 . 3874)) nil (25945 39380 668527 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3873) (undo-tree-id12578 . -1) 3874) nil (25945 39380 668526 0) 0 nil])
([nil nil ((3873 . 3875)) nil (25945 39380 668524 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3874 3882 #s(yas--snippet nil nil #s(yas--exit 3882 nil) 206 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3882 nil) 206 nil nil nil nil)) (3874 . 3882) (#("unwrap()$0" 0 10 (fontified nil)) . 3874) (3874 . 3884) (#("u" 0 1 (fontified nil)) . 3874) (3874 . 3875) (#("unwrap()" 0 8 (fontified nil)) . -3874) (3874 . 3882) (#("u" 0 1 (fontified t)) . -3874) (undo-tree-id12577 . -1) 3875) nil (25945 39380 668522 0) 0 nil])
([nil nil ((3882 . 3883)) nil (25945 39380 668517 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3882) (undo-tree-id12576 . -1) 3883) nil (25945 39380 668516 0) 0 nil])
([nil nil ((3882 . 3884)) nil (25945 39380 668514 0) 0 nil])
([nil nil ((3884 . 3886)) nil (25945 39380 668513 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3883 3906 nil nil nil t #s(yas--exit 3907 nil))) #s(yas--exit 3907 nil) 207 nil #s(yas--field 1 3883 3906 nil nil nil t #s(yas--exit 3907 nil)) nil nil)) (3883 . 3892) (#("read(${1:buf})$0" 0 16 (fontified nil)) . 3883) (3883 . 3899) (#("rea" 0 3 (fontified nil)) . 3883) (3883 . 3886) (#("read(â€¦)" 0 7 (fontified nil)) . -3883) (3883 . 3890) (#("rea" 0 3 (fontified t)) . -3883) (undo-tree-id12575 . -3) 3886) nil (25945 39380 668511 0) 0 nil])
([nil nil ((#("buf" 0 3 (fontified t)) . 3888) (undo-tree-id12574 . -3)) nil (25945 39380 668506 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3883) (undo-tree-id12554 . -1) (undo-tree-id12555 . -1) (undo-tree-id12556 . -1) (undo-tree-id12557 . -1) (#("e" 0 1 (fontified t)) . -3884) (undo-tree-id12558 . -1) (undo-tree-id12559 . -1) (undo-tree-id12560 . -1) (undo-tree-id12561 . -1) (#("a" 0 1 (fontified t)) . -3885) (undo-tree-id12562 . -1) (undo-tree-id12563 . -1) (undo-tree-id12564 . -1) (undo-tree-id12565 . -1) (#("d" 0 1 (fontified t)) . -3886) (undo-tree-id12566 . -1) (undo-tree-id12567 . -1) (undo-tree-id12568 . -1) (undo-tree-id12569 . -1) (#("(" 0 1 (fontified t)) . -3887) (undo-tree-id12570 . -1) (undo-tree-id12571 . -1) (undo-tree-id12572 . -1) (undo-tree-id12573 . -1) 3888) nil (25945 39380 668503 0) 0 nil])
([nil nil ((3883 . 3885)) nil (25945 39380 668481 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3889 3905 nil nil nil t #s(yas--exit 3906 nil))) #s(yas--exit 3906 nil) 208 nil #s(yas--field 1 3889 3905 nil nil nil t #s(yas--exit 3906 nil)) #s(yas--field 1 3883 3906 nil nil nil t #s(yas--exit 3907 nil)) nil)) (3883 . 3894) (#("write(${1:data})$0" 0 18 (fontified nil)) . 3883) (undo-tree-id12548 . -18) (3883 . 3901) (#("wr" 0 2 (fontified nil)) . 3883) (undo-tree-id12549 . -2) (3883 . 3885) (#("write(â€¦)" 0 8 (fontified nil)) . -3883) (undo-tree-id12550 . -8) (3883 . 3891) (#("wr" 0 2 (fontified t)) . -3883) (undo-tree-id12551 . -2) (undo-tree-id12552 . -2) (undo-tree-id12553 . -2) 3885) nil (25945 39380 668479 0) 0 nil])
([nil nil ((3890 . 3893) (#("data" 0 4 (fontified nil)) . 3890) (undo-tree-id12547 . -4) (3889 . 3890)) nil (25945 39380 668469 0) 0 nil])
([nil nil ((3890 . 3898) (#("sen" 0 3 (fontified nil)) . 3890) (undo-tree-id12534 . -3) (3890 . 3893) (#("send_buf" 0 8 (fontified nil)) . -3890) (undo-tree-id12535 . -8) (3890 . 3898) (#("sen" 0 3 (fontified t)) . -3890) (undo-tree-id12536 . -3) (undo-tree-id12537 . -3) (undo-tree-id12538 . -3) (undo-tree-id12539 . -1) (undo-tree-id12540 . -1) (undo-tree-id12541 . -2) (undo-tree-id12542 . -2) (undo-tree-id12543 . -3) (undo-tree-id12544 . -3) (undo-tree-id12545 . -3) (undo-tree-id12546 . -3) 3893) nil (25945 39380 668465 0) 0 nil])
([nil nil ((3898 . 3900)) nil (25945 39380 668441 0) 0 nil])
([nil nil ((3899 . 3904)) nil (25945 39380 668440 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3883 3906 #s(yas--snippet nil (#s(yas--field 1 3889 3905 nil nil nil t #s(yas--exit 3906 nil))) #s(yas--exit 3906 nil) 208 nil #s(yas--field 1 3889 3905 nil nil nil t #s(yas--exit 3906 nil)) #s(yas--field 1 3883 3906 nil nil nil t #s(yas--exit 3907 nil)) nil))) nil (25945 39380 668439 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3883 3907 #s(yas--snippet nil (#s(yas--field 1 3883 3906 nil nil nil t #s(yas--exit 3907 nil))) #s(yas--exit 3907 nil) 207 nil #s(yas--field 1 3883 3906 nil nil nil t #s(yas--exit 3907 nil)) nil nil))) nil (25945 39380 668437 0) 0 nil])
([nil nil ((3907 . 3908)) nil (25945 39380 668433 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -3906) (undo-tree-id12585 . -1) (undo-tree-id12586 . -1) (undo-tree-id12587 . -1) (undo-tree-id12588 . -1) (undo-tree-id12589 . -1) (undo-tree-id12590 . -1) (undo-tree-id12591 . -1) (undo-tree-id12592 . -1) (undo-tree-id12593 . -1) (undo-tree-id12594 . -1) (undo-tree-id12595 . -1) (undo-tree-id12596 . -1) (undo-tree-id12597 . -1) (undo-tree-id12598 . -1) (undo-tree-id12599 . -1) (undo-tree-id12600 . -1) (undo-tree-id12601 . -1) (undo-tree-id12602 . -1) (undo-tree-id12603 . -1) (undo-tree-id12604 . -1) (undo-tree-id12605 . -1) (undo-tree-id12606 . -1) (undo-tree-id12607 . -1) (undo-tree-id12608 . -1) (undo-tree-id12609 . -1) (undo-tree-id12610 . -1) (undo-tree-id12611 . -1) (undo-tree-id12612 . -1) (undo-tree-id12613 . -1) (undo-tree-id12614 . -1) (undo-tree-id12615 . -1) (undo-tree-id12616 . -1) (undo-tree-id12617 . -1) (undo-tree-id12618 . -1) (undo-tree-id12619 . -1) (undo-tree-id12620 . -1) (undo-tree-id12621 . -1) (undo-tree-id12622 . -1) (undo-tree-id12623 . -1) (undo-tree-id12624 . -1) (undo-tree-id12625 . -1) (undo-tree-id12626 . -1) 3907 (t 25945 39380 704554 107000)) nil (25945 39386 354589 0) 0 nil])
([nil nil ((3851 . 3862) (t 25945 39386 388411 355000)) nil (25945 39444 564870 0) 0 nil])
([nil nil ((3861 . 3864)) nil (25945 39444 564869 0) 0 nil])
([nil nil ((3865 . 3868)) nil (25945 39444 564868 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -3923) (undo-tree-id12666 . -1) (undo-tree-id12667 . -1) 3924) nil (25945 39444 564867 0) 0 nil])
([nil nil ((3923 . 3931)) nil (25945 39444 564864 0) 0 nil])
([nil nil ((3931 . 3932)) nil (25945 39444 564862 0) 0 nil])
([nil nil ((4045 . 4049) (3972 . 3973) (4043 . 4044)) nil (25945 39444 564861 0) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -4052) (4052 . 4053) (#("	" 0 1 (fontified nil)) . 4052) (undo-tree-id12665 . -1) (4048 . 4052) (4049 . 4050)) nil (25945 39444 564860 0) 0 nil])
([nil nil ((4053 . 4054)) nil (25945 39444 564857 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -4053) (undo-tree-id12664 . -1) 4054) nil (25945 39444 564855 0) 0 nil])
([nil nil ((4053 . 4061)) nil (25945 39444 564853 0) 0 nil])
([nil nil ((4062 . 4069) (#("				" 0 4 (fontified nil)) . 4061) (undo-tree-id12662 . -3) (4064 . 4065) (#("    " 0 4 (fontified nil)) . 4064) (undo-tree-id12663 . -4) (4060 . 4069)) nil (25945 39444 564852 0) 0 nil])
([nil nil ((4061 . 4065)) nil (25945 39444 564848 0) 0 nil])
([nil nil ((4065 . 4068)) nil (25945 39444 564847 0) 0 nil])
([nil nil ((4065 . 4071) (#("han" 0 3 (fontified nil)) . 4065) (4065 . 4068) (#("handle" 0 6 (fontified nil)) . -4065) (4065 . 4071) (#("han" 0 3 (fontified t)) . -4065) (undo-tree-id12661 . -3) 4068) nil (25945 39444 564845 0) 0 nil])
([nil nil ((4071 . 4073)) nil (25945 39444 564842 0) 0 nil])
([nil nil ((4072 . 4078) (#("d" 0 1 (fontified nil)) . 4072) (4072 . 4073) (#("device" 0 6 (fontified nil)) . -4072) (4072 . 4078) (#("d" 0 1 (fontified t)) . -4072) (undo-tree-id12658 . -1) (undo-tree-id12659 . -1) (undo-tree-id12660 . -1) 4073) nil (25945 39444 564840 0) 0 nil])
([nil nil ((4078 . 4079)) nil (25945 39444 564834 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -4078) (undo-tree-id12654 . -1) (undo-tree-id12655 . -1) (undo-tree-id12656 . -1) (undo-tree-id12657 . -1) 4079) nil (25945 39444 564833 0) 0 nil])
([nil nil ((4078 . 4082)) nil (25945 39444 564828 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4081 4085 #s(yas--snippet nil nil #s(yas--exit 4085 nil) 209 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 4085 nil) 209 nil nil nil nil)) (4081 . 4085) (#("None$0" 0 6 (fontified nil)) . 4081) (4081 . 4087) (#("N" 0 1 (fontified nil)) . 4081) (4081 . 4082) (#("None" 0 4 (fontified nil)) . -4081) (4081 . 4085) (#("N" 0 1 (face font-lock-type-face fontified t)) . -4081) (undo-tree-id12650 . -1) (undo-tree-id12651 . -1) (undo-tree-id12652 . -1) (undo-tree-id12653 . -1) 4082) nil (25945 39444 564826 0) 0 nil])
([nil nil ((4085 . 4086)) nil (25945 39444 564817 0) 0 nil])
([nil nil ((4086 . 4091)) nil (25945 39444 564816 0) 0 nil])
([nil nil ((4091 . 4093)) nil (25945 39444 564815 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -4092) (undo-tree-id12645 . -1) (undo-tree-id12646 . -1) (undo-tree-id12647 . -1) (undo-tree-id12648 . -1) (undo-tree-id12649 . -1) 4093) nil (25945 39444 564814 0) 0 nil])
([nil nil ((4092 . 4095)) nil (25945 39444 564808 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4091 4097 #s(yas--snippet nil nil nil 210 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 210 nil nil nil nil)) (4091 . 4097) (#("break;" 0 6 (fontified nil)) . 4091) (4091 . 4097) (#("brea" 0 4 (fontified nil)) . 4091) (4091 . 4095) (#("break" 0 5 (fontified nil)) . -4091) (4091 . 4096) (#("brea" 0 4 (fontified t)) . -4091) (undo-tree-id12627 . -4) (undo-tree-id12628 . -1) (undo-tree-id12629 . -1) (undo-tree-id12630 . -1) (undo-tree-id12631 . -1) (undo-tree-id12632 . -1) (undo-tree-id12633 . -1) (undo-tree-id12634 . -1) (undo-tree-id12635 . -1) (undo-tree-id12636 . -1) (undo-tree-id12637 . -2) (undo-tree-id12638 . -2) (undo-tree-id12639 . -3) (undo-tree-id12640 . -3) (undo-tree-id12641 . -4) (undo-tree-id12642 . -4) (undo-tree-id12643 . -4) (undo-tree-id12644 . -4) 4095) nil (25945 39444 564803 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4106) (#("	" 0 1 (fontified nil)) . -4096) (4096 . 4097) (#("	" 0 1 (fontified nil)) . 4096) (undo-tree-id12738 . -1) (undo-tree-id12739 . -1) (undo-tree-id12740 . -1) (undo-tree-id12741 . -1) (undo-tree-id12742 . -1) (undo-tree-id12743 . -1) (undo-tree-id12744 . -1) (undo-tree-id12745 . -1) (undo-tree-id12746 . -1) (undo-tree-id12747 . -1) (undo-tree-id12748 . -1) (undo-tree-id12749 . -1) (undo-tree-id12750 . -1) (undo-tree-id12751 . -1) (undo-tree-id12752 . -1) (undo-tree-id12753 . -1) (undo-tree-id12754 . -1) (4092 . 4096) (#("	" 0 1 (fontified nil)) . -4067) (4067 . 4068) (#("	" 0 1 (fontified nil)) . 4067) (4063 . 4067) (#("    " 0 4 (fontified t)) . -4051) (#("	" 0 1 (fontified nil)) . -3976) (3976 . 3977) (#("	" 0 1 (fontified nil)) . 3976) (3972 . 3976) (3932 . 3936) (#("    " 0 4 (fontified t)) . -3927) 3850 (t 25945 39444 598685 578000)) nil (25945 39452 104783 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3923) (undo-tree-id12668 . -1) (undo-tree-id12669 . -1) (undo-tree-id12670 . -1) (undo-tree-id12671 . -1) (undo-tree-id12672 . -1) (undo-tree-id12673 . -1) (undo-tree-id12674 . -1) (undo-tree-id12675 . -1) (undo-tree-id12676 . -1) (undo-tree-id12677 . -1) (undo-tree-id12678 . -1) (undo-tree-id12679 . -1) (undo-tree-id12680 . -1) (undo-tree-id12681 . -1) (undo-tree-id12682 . -1) (undo-tree-id12683 . -1) (undo-tree-id12684 . -1) (undo-tree-id12685 . -1) (undo-tree-id12686 . -1) (undo-tree-id12687 . -1) (#("	" 0 1 (fontified t)) . -3924) (undo-tree-id12688 . -1) (undo-tree-id12689 . -1) (undo-tree-id12690 . -1) (undo-tree-id12691 . -1) (undo-tree-id12692 . -1) (undo-tree-id12693 . -1) (undo-tree-id12694 . -1) (undo-tree-id12695 . -1) (undo-tree-id12696 . -1) (undo-tree-id12697 . -1) (undo-tree-id12698 . -1) (undo-tree-id12699 . -1) (undo-tree-id12700 . -1) (undo-tree-id12701 . -1) (undo-tree-id12702 . -1) (undo-tree-id12703 . -1) (undo-tree-id12704 . -1) (undo-tree-id12705 . -1) (#("	" 0 1 (fontified t)) . -3925) (undo-tree-id12706 . -1) (undo-tree-id12707 . -1) (undo-tree-id12708 . -1) (undo-tree-id12709 . -1) (undo-tree-id12710 . -1) (undo-tree-id12711 . -1) (undo-tree-id12712 . -1) (undo-tree-id12713 . -1) (undo-tree-id12714 . -1) (undo-tree-id12715 . -1) (undo-tree-id12716 . -1) (undo-tree-id12717 . -1) (undo-tree-id12718 . -1) (undo-tree-id12719 . -1) (undo-tree-id12720 . -1) (undo-tree-id12721 . -1) (undo-tree-id12722 . -1) (#("	" 0 1 (fontified t)) . -3926) (undo-tree-id12723 . -1) (undo-tree-id12724 . -1) (undo-tree-id12725 . -1) (undo-tree-id12726 . -1) (undo-tree-id12727 . -1) (undo-tree-id12728 . -1) (undo-tree-id12729 . -1) (undo-tree-id12730 . -1) (undo-tree-id12731 . -1) (undo-tree-id12732 . -1) (undo-tree-id12733 . -1) (undo-tree-id12734 . -1) (undo-tree-id12735 . -1) (undo-tree-id12736 . -1) (undo-tree-id12737 . -1) 3927) nil (25945 39452 104757 0) 0 nil])
([nil nil ((3923 . 3924)) nil (25945 39452 104670 0) 0 nil])
([nil nil ((4044 . 4052) (t 25945 39452 139378 28000)) nil (25945 39502 674692 0) 0 nil])
([nil nil ((4052 . 4056)) nil (25945 39502 674691 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -4052) (undo-tree-id13160 . -1) (undo-tree-id13161 . -1) (undo-tree-id13162 . -1) (undo-tree-id13163 . -1) (undo-tree-id13164 . -1) (undo-tree-id13165 . -1) (undo-tree-id13166 . -1) (undo-tree-id13167 . -1) (undo-tree-id13168 . -1) (undo-tree-id13169 . -1) (undo-tree-id13170 . -1) (undo-tree-id13171 . -1) (undo-tree-id13172 . -1) (undo-tree-id13173 . -1) (undo-tree-id13174 . -1) (undo-tree-id13175 . -1) (#("e" 0 1 (fontified t)) . -4053) (undo-tree-id13176 . -1) (undo-tree-id13177 . -1) (undo-tree-id13178 . -1) (undo-tree-id13179 . -1) (undo-tree-id13180 . -1) (undo-tree-id13181 . -1) (undo-tree-id13182 . -1) (undo-tree-id13183 . -1) (undo-tree-id13184 . -1) (undo-tree-id13185 . -1) (undo-tree-id13186 . -1) (undo-tree-id13187 . -1) (undo-tree-id13188 . -1) (#("n" 0 1 (fontified t)) . -4054) (undo-tree-id13189 . -1) (undo-tree-id13190 . -1) (undo-tree-id13191 . -1) (undo-tree-id13192 . -1) (undo-tree-id13193 . -1) (undo-tree-id13194 . -1) (undo-tree-id13195 . -1) (undo-tree-id13196 . -1) (undo-tree-id13197 . -1) (#("d" 0 1 (fontified t)) . -4055) (undo-tree-id13198 . -1) (undo-tree-id13199 . -1) (undo-tree-id13200 . -1) (undo-tree-id13201 . -1) (undo-tree-id13202 . -1) 4056) nil (25945 39502 674688 0) 0 nil])
([nil nil ((4052 . 4056)) nil (25945 39502 674645 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4044) (undo-tree-id12761 . -1) (undo-tree-id12762 . 1) (undo-tree-id12763 . -1) (undo-tree-id12764 . -1) (undo-tree-id12765 . -1) (undo-tree-id12766 . -1) (undo-tree-id12767 . -1) (undo-tree-id12768 . -1) (undo-tree-id12769 . -1) (undo-tree-id12770 . -1) (undo-tree-id12771 . -1) (undo-tree-id12772 . -1) (undo-tree-id12773 . -1) (undo-tree-id12774 . -1) (undo-tree-id12775 . -1) (undo-tree-id12776 . -1) (undo-tree-id12777 . -1) (undo-tree-id12778 . -1) (undo-tree-id12779 . -1) (undo-tree-id12780 . -1) (undo-tree-id12781 . -1) (undo-tree-id12782 . -1) (undo-tree-id12783 . -1) (undo-tree-id12784 . -1) (undo-tree-id12785 . -1) (undo-tree-id12786 . -1) (undo-tree-id12787 . -1) (undo-tree-id12788 . -1) (undo-tree-id12789 . -1) (undo-tree-id12790 . -1) (undo-tree-id12791 . -1) (undo-tree-id12792 . -1) (undo-tree-id12793 . -1) (undo-tree-id12794 . -1) (undo-tree-id12795 . -1) (undo-tree-id12796 . -1) (undo-tree-id12797 . -1) (undo-tree-id12798 . -1) (undo-tree-id12799 . -1) (undo-tree-id12800 . -1) (undo-tree-id12801 . -1) (undo-tree-id12802 . -1) (undo-tree-id12803 . -1) (undo-tree-id12804 . -1) (undo-tree-id12805 . -1) (undo-tree-id12806 . -1) (undo-tree-id12807 . -1) (undo-tree-id12808 . -1) (undo-tree-id12809 . -1) (undo-tree-id12810 . -1) (undo-tree-id12811 . -1) (undo-tree-id12812 . -1) (undo-tree-id12813 . -1) (undo-tree-id12814 . -1) (undo-tree-id12815 . -1) (undo-tree-id12816 . -1) (undo-tree-id12817 . -1) (undo-tree-id12818 . -1) (undo-tree-id12819 . -1) (undo-tree-id12820 . -1) (#("	" 0 1 (fontified t)) . -4045) (undo-tree-id12821 . -1) (undo-tree-id12822 . -1) (undo-tree-id12823 . -1) (undo-tree-id12824 . -1) (undo-tree-id12825 . -1) (undo-tree-id12826 . -1) (undo-tree-id12827 . -1) (undo-tree-id12828 . -1) (undo-tree-id12829 . -1) (undo-tree-id12830 . -1) (undo-tree-id12831 . -1) (undo-tree-id12832 . -1) (undo-tree-id12833 . -1) (undo-tree-id12834 . -1) (undo-tree-id12835 . -1) (undo-tree-id12836 . -1) (undo-tree-id12837 . -1) (undo-tree-id12838 . -1) (undo-tree-id12839 . -1) (undo-tree-id12840 . -1) (undo-tree-id12841 . -1) (undo-tree-id12842 . -1) (undo-tree-id12843 . -1) (undo-tree-id12844 . -1) (undo-tree-id12845 . -1) (undo-tree-id12846 . -1) (undo-tree-id12847 . -1) (undo-tree-id12848 . -1) (undo-tree-id12849 . -1) (undo-tree-id12850 . -1) (undo-tree-id12851 . -1) (undo-tree-id12852 . -1) (undo-tree-id12853 . -1) (undo-tree-id12854 . -1) (undo-tree-id12855 . -1) (undo-tree-id12856 . -1) (undo-tree-id12857 . -1) (undo-tree-id12858 . -1) (undo-tree-id12859 . -1) (undo-tree-id12860 . -1) (undo-tree-id12861 . -1) (undo-tree-id12862 . -1) (undo-tree-id12863 . -1) (undo-tree-id12864 . -1) (undo-tree-id12865 . -1) (#("	" 0 1 (fontified t)) . -4046) (undo-tree-id12866 . -1) (undo-tree-id12867 . -1) (undo-tree-id12868 . -1) (undo-tree-id12869 . -1) (undo-tree-id12870 . -1) (undo-tree-id12871 . -1) (undo-tree-id12872 . -1) (undo-tree-id12873 . -1) (undo-tree-id12874 . -1) (undo-tree-id12875 . -1) (undo-tree-id12876 . -1) (undo-tree-id12877 . -1) (undo-tree-id12878 . -1) (undo-tree-id12879 . -1) (undo-tree-id12880 . -1) (undo-tree-id12881 . -1) (undo-tree-id12882 . -1) (undo-tree-id12883 . -1) (undo-tree-id12884 . -1) (undo-tree-id12885 . -1) (undo-tree-id12886 . -1) (undo-tree-id12887 . -1) (undo-tree-id12888 . -1) (undo-tree-id12889 . -1) (undo-tree-id12890 . -1) (undo-tree-id12891 . -1) (undo-tree-id12892 . -1) (undo-tree-id12893 . -1) (undo-tree-id12894 . -1) (undo-tree-id12895 . -1) (undo-tree-id12896 . -1) (undo-tree-id12897 . -1) (undo-tree-id12898 . -1) (undo-tree-id12899 . -1) (undo-tree-id12900 . -1) (undo-tree-id12901 . -1) (undo-tree-id12902 . -1) (undo-tree-id12903 . -1) (undo-tree-id12904 . -1) (undo-tree-id12905 . -1) (undo-tree-id12906 . -1) (undo-tree-id12907 . -1) (undo-tree-id12908 . -1) (undo-tree-id12909 . -1) (#("	" 0 1 (fontified t)) . -4047) (undo-tree-id12910 . -1) (undo-tree-id12911 . -1) (undo-tree-id12912 . -1) (undo-tree-id12913 . -1) (undo-tree-id12914 . -1) (undo-tree-id12915 . -1) (undo-tree-id12916 . -1) (undo-tree-id12917 . -1) (undo-tree-id12918 . -1) (undo-tree-id12919 . -1) (undo-tree-id12920 . -1) (undo-tree-id12921 . -1) (undo-tree-id12922 . -1) (undo-tree-id12923 . -1) (undo-tree-id12924 . -1) (undo-tree-id12925 . -1) (undo-tree-id12926 . -1) (undo-tree-id12927 . -1) (undo-tree-id12928 . -1) (undo-tree-id12929 . -1) (undo-tree-id12930 . -1) (undo-tree-id12931 . -1) (undo-tree-id12932 . -1) (undo-tree-id12933 . -1) (undo-tree-id12934 . -1) (undo-tree-id12935 . -1) (undo-tree-id12936 . -1) (undo-tree-id12937 . -1) (undo-tree-id12938 . -1) (undo-tree-id12939 . -1) (undo-tree-id12940 . -1) (undo-tree-id12941 . -1) (undo-tree-id12942 . -1) (undo-tree-id12943 . -1) (undo-tree-id12944 . -1) (undo-tree-id12945 . -1) (undo-tree-id12946 . -1) (undo-tree-id12947 . -1) (undo-tree-id12948 . -1) (undo-tree-id12949 . -1) (undo-tree-id12950 . -1) (undo-tree-id12951 . -1) (undo-tree-id12952 . -1) (#(" " 0 1 (fontified t)) . -4048) (undo-tree-id12953 . -1) (undo-tree-id12954 . -1) (undo-tree-id12955 . -1) (undo-tree-id12956 . -1) (undo-tree-id12957 . -1) (undo-tree-id12958 . -1) (undo-tree-id12959 . -1) (undo-tree-id12960 . -1) (undo-tree-id12961 . -1) (undo-tree-id12962 . -1) (undo-tree-id12963 . -1) (undo-tree-id12964 . -1) (undo-tree-id12965 . -1) (undo-tree-id12966 . -1) (undo-tree-id12967 . -1) (undo-tree-id12968 . -1) (undo-tree-id12969 . -1) (undo-tree-id12970 . -1) (undo-tree-id12971 . -1) (undo-tree-id12972 . -1) (undo-tree-id12973 . -1) (undo-tree-id12974 . -1) (undo-tree-id12975 . -1) (undo-tree-id12976 . -1) (undo-tree-id12977 . -1) (undo-tree-id12978 . -1) (undo-tree-id12979 . -1) (undo-tree-id12980 . -1) (undo-tree-id12981 . -1) (undo-tree-id12982 . -1) (undo-tree-id12983 . -1) (undo-tree-id12984 . -1) (undo-tree-id12985 . -1) (undo-tree-id12986 . -1) (undo-tree-id12987 . -1) (undo-tree-id12988 . -1) (undo-tree-id12989 . -1) (undo-tree-id12990 . -1) (undo-tree-id12991 . -1) (undo-tree-id12992 . -1) (undo-tree-id12993 . -1) (undo-tree-id12994 . -1) (#(" " 0 1 (fontified t)) . -4049) (undo-tree-id12995 . -1) (undo-tree-id12996 . -1) (undo-tree-id12997 . -1) (undo-tree-id12998 . -1) (undo-tree-id12999 . -1) (undo-tree-id13000 . -1) (undo-tree-id13001 . -1) (undo-tree-id13002 . -1) (undo-tree-id13003 . -1) (undo-tree-id13004 . -1) (undo-tree-id13005 . -1) (undo-tree-id13006 . -1) (undo-tree-id13007 . -1) (undo-tree-id13008 . -1) (undo-tree-id13009 . -1) (undo-tree-id13010 . -1) (undo-tree-id13011 . -1) (undo-tree-id13012 . -1) (undo-tree-id13013 . -1) (undo-tree-id13014 . -1) (undo-tree-id13015 . -1) (undo-tree-id13016 . -1) (undo-tree-id13017 . -1) (undo-tree-id13018 . -1) (undo-tree-id13019 . -1) (undo-tree-id13020 . -1) (undo-tree-id13021 . -1) (undo-tree-id13022 . -1) (undo-tree-id13023 . -1) (undo-tree-id13024 . -1) (undo-tree-id13025 . -1) (undo-tree-id13026 . -1) (undo-tree-id13027 . -1) (undo-tree-id13028 . -1) (undo-tree-id13029 . -1) (undo-tree-id13030 . -1) (undo-tree-id13031 . -1) (undo-tree-id13032 . -1) (undo-tree-id13033 . -1) (undo-tree-id13034 . -1) (undo-tree-id13035 . -1) (#(" " 0 1 (fontified t)) . -4050) (undo-tree-id13036 . -1) (undo-tree-id13037 . -1) (undo-tree-id13038 . -1) (undo-tree-id13039 . -1) (undo-tree-id13040 . -1) (undo-tree-id13041 . -1) (undo-tree-id13042 . -1) (undo-tree-id13043 . -1) (undo-tree-id13044 . -1) (undo-tree-id13045 . -1) (undo-tree-id13046 . -1) (undo-tree-id13047 . -1) (undo-tree-id13048 . -1) (undo-tree-id13049 . -1) (undo-tree-id13050 . -1) (undo-tree-id13051 . -1) (undo-tree-id13052 . -1) (undo-tree-id13053 . -1) (undo-tree-id13054 . -1) (undo-tree-id13055 . -1) (undo-tree-id13056 . -1) (undo-tree-id13057 . -1) (undo-tree-id13058 . -1) (undo-tree-id13059 . -1) (undo-tree-id13060 . -1) (undo-tree-id13061 . -1) (undo-tree-id13062 . -1) (undo-tree-id13063 . -1) (undo-tree-id13064 . -1) (undo-tree-id13065 . -1) (undo-tree-id13066 . -1) (undo-tree-id13067 . -1) (undo-tree-id13068 . -1) (undo-tree-id13069 . -1) (undo-tree-id13070 . -1) (undo-tree-id13071 . -1) (undo-tree-id13072 . -1) (undo-tree-id13073 . -1) (undo-tree-id13074 . -1) (undo-tree-id13075 . -1) (#(" " 0 1 (fontified t)) . -4051) (undo-tree-id13076 . -1) (undo-tree-id13077 . -1) (undo-tree-id13078 . -1) (undo-tree-id13079 . -1) (undo-tree-id13080 . -1) (undo-tree-id13081 . -1) (undo-tree-id13082 . -1) (undo-tree-id13083 . -1) (undo-tree-id13084 . -1) (undo-tree-id13085 . -1) (undo-tree-id13086 . -1) (undo-tree-id13087 . -1) (undo-tree-id13088 . -1) (undo-tree-id13089 . -1) (undo-tree-id13090 . -1) (undo-tree-id13091 . -1) (undo-tree-id13092 . -1) (undo-tree-id13093 . -1) (undo-tree-id13094 . -1) (undo-tree-id13095 . -1) (undo-tree-id13096 . -1) (undo-tree-id13097 . -1) (undo-tree-id13098 . -1) (undo-tree-id13099 . -1) (undo-tree-id13100 . -1) (undo-tree-id13101 . -1) (undo-tree-id13102 . -1) (undo-tree-id13103 . -1) (undo-tree-id13104 . -1) (undo-tree-id13105 . -1) (undo-tree-id13106 . -1) (undo-tree-id13107 . -1) (undo-tree-id13108 . -1) (undo-tree-id13109 . -1) (undo-tree-id13110 . -1) (undo-tree-id13111 . -1) (undo-tree-id13112 . -1) (undo-tree-id13113 . -1) (undo-tree-id13114 . -1) (#("p" 0 1 (fontified t)) . -4052) (undo-tree-id13115 . -1) (undo-tree-id13116 . -1) (undo-tree-id13117 . -1) (undo-tree-id13118 . -1) (undo-tree-id13119 . -1) (undo-tree-id13120 . -1) (undo-tree-id13121 . -1) (undo-tree-id13122 . -1) (undo-tree-id13123 . -1) (undo-tree-id13124 . -1) (undo-tree-id13125 . -1) (undo-tree-id13126 . -1) (undo-tree-id13127 . -1) (undo-tree-id13128 . -1) (undo-tree-id13129 . -1) (undo-tree-id13130 . -1) (undo-tree-id13131 . -1) (undo-tree-id13132 . -1) (#("r" 0 1 (fontified t)) . -4053) (undo-tree-id13133 . -1) (undo-tree-id13134 . -1) (undo-tree-id13135 . -1) (undo-tree-id13136 . -1) (undo-tree-id13137 . -1) (undo-tree-id13138 . -1) (undo-tree-id13139 . -1) (undo-tree-id13140 . -1) (undo-tree-id13141 . -1) (undo-tree-id13142 . -1) (undo-tree-id13143 . -1) (undo-tree-id13144 . -1) (undo-tree-id13145 . -1) (#("i" 0 1 (fontified t)) . -4054) (undo-tree-id13146 . -1) (undo-tree-id13147 . -1) (undo-tree-id13148 . -1) (undo-tree-id13149 . -1) (undo-tree-id13150 . -1) (undo-tree-id13151 . -1) (undo-tree-id13152 . -1) (undo-tree-id13153 . -1) (undo-tree-id13154 . -1) (#("n" 0 1 (fontified t)) . -4055) (undo-tree-id13155 . -1) (undo-tree-id13156 . -1) (undo-tree-id13157 . -1) (undo-tree-id13158 . -1) (undo-tree-id13159 . -1) 4056) nil (25945 39502 674625 0) 0 nil])
([nil nil ((3990 . 3998)) nil (25945 39502 674237 0) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-string-face fontified t)) . -3996) (undo-tree-id12755 . -1) (undo-tree-id12756 . -1) (undo-tree-id12757 . -1) (undo-tree-id12758 . -1) (#("]" 0 1 (face font-lock-string-face fontified t)) . -3997) (undo-tree-id12759 . -1) (undo-tree-id12760 . -1) 3998) nil (25945 39502 674235 0) 0 nil])
([nil nil ((3996 . 3999)) nil (25945 39502 674217 0) 0 nil])
([nil nil ((4025 . 4030)) nil (25945 39502 674213 0) 0 nil])
([nil nil ((4245 . 4252) (t 25945 39502 709024 54000)) nil (25945 40133 444648 0) 0 nil])
([nil nil ((4252 . 4254)) nil (25945 40133 444647 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 4258 4282 nil nil nil t #s(yas--exit 4283 nil))) #s(yas--exit 4283 nil) 211 nil #s(yas--field 1 4258 4282 nil nil nil t #s(yas--exit 4283 nil)) nil nil)) (4252 . 4262) (#("sleep(${1:dur})$0" 0 17 (fontified nil)) . 4252) (4252 . 4269) (#("sl" 0 2 (fontified nil)) . 4252) (4252 . 4254) (#("sleep(â€¦)" 0 8 (fontified nil)) . -4252) (4252 . 4260) (#("sl" 0 2 (fontified t)) . -4252) (undo-tree-id13207 . -2) 4254) nil (25945 40133 444645 0) 0 nil])
([nil nil ((4259 . 4260) (#("dur" 0 3 (fontified nil)) . 4259) (4258 . 4259)) nil (25945 40133 444640 0) 0 nil])
([nil nil ((4258 . 4266) (#("Du" 0 2 (fontified nil)) . 4258) (4258 . 4260) (#("Duration" 0 8 (fontified nil)) . -4258) (4258 . 4266) (#("Du" 0 2 (face font-lock-type-face fontified t)) . -4258) (undo-tree-id13205 . -2) (undo-tree-id13206 . -2) 4260) nil (25945 40133 444638 0) 0 nil])
([nil nil ((4266 . 4269)) nil (25945 40133 444633 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 4280 4281 nil nil nil t #s(yas--exit 4282 nil))) #s(yas--exit 4282 nil) 212 nil #s(yas--field 1 4280 4281 nil nil nil t #s(yas--exit 4282 nil)) #s(yas--field 1 4258 4282 nil nil nil t #s(yas--exit 4283 nil)) nil)) (4268 . 4287) (#("from_millis(${1:millis})$0" 0 26 (fontified nil)) . 4268) (4268 . 4294) (#("f" 0 1 (fontified nil)) . 4268) (4268 . 4269) (#("from_millis(â€¦)" 0 14 (fontified nil)) . -4268) (4268 . 4282) (#("f" 0 1 (fontified t)) . -4268) (undo-tree-id13203 . -1) (undo-tree-id13204 . -1) 4269) nil (25945 40133 444631 0) 0 nil])
([nil nil ((#("millis" 0 6 (fontified nil)) . 4281) (4280 . 4281)) nil (25945 40133 444620 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4268 4282 #s(yas--snippet nil (#s(yas--field 1 4280 4281 nil nil nil t #s(yas--exit 4282 nil))) #s(yas--exit 4282 nil) 212 nil #s(yas--field 1 4280 4281 nil nil nil t #s(yas--exit 4282 nil)) #s(yas--field 1 4258 4282 nil nil nil t #s(yas--exit 4283 nil)) nil))) nil (25945 40133 444618 0) 0 nil])
([nil nil ((apply yas--snippet-revive 4252 4283 #s(yas--snippet nil (#s(yas--field 1 4258 4282 nil nil nil t #s(yas--exit 4283 nil))) #s(yas--exit 4283 nil) 211 nil #s(yas--field 1 4258 4282 nil nil nil t #s(yas--exit 4283 nil)) nil nil))) nil (25945 40133 444617 0) 0 nil])
([nil nil ((4283 . 4284)) nil (25945 40204 823951 0) 0 nil])
([nil current ((#("		    sleep(Duration::from_millis(1));" 0 6 (fontified t) 6 12 (fontified t) 12 20 (face font-lock-type-face fontified t) 20 22 (fontified t) 22 36 (fontified t) 36 38 (fontified t)) . 4246) (undo-tree-id13216 . -38) (undo-tree-id13217 . -12) (undo-tree-id13218 . 3) (undo-tree-id13219 . -38) (undo-tree-id13220 . -38) (undo-tree-id13221 . -38) (undo-tree-id13222 . -38) (undo-tree-id13223 . -38) (undo-tree-id13224 . -38) (undo-tree-id13225 . -38) (undo-tree-id13226 . -38) (undo-tree-id13227 . -38) (undo-tree-id13228 . -38) (undo-tree-id13229 . -38) (undo-tree-id13230 . -38) (undo-tree-id13231 . -38) (undo-tree-id13232 . -38) (undo-tree-id13233 . -38) (undo-tree-id13234 . -38) (undo-tree-id13235 . -38) (undo-tree-id13236 . -38) (undo-tree-id13237 . -38) (undo-tree-id13238 . -38) (undo-tree-id13239 . -38) (undo-tree-id13240 . -38) (undo-tree-id13241 . -38) (undo-tree-id13242 . -38) (undo-tree-id13243 . -38) (undo-tree-id13244 . -38) (undo-tree-id13245 . -38) (undo-tree-id13246 . -38) (undo-tree-id13247 . -38) (undo-tree-id13248 . -38) (undo-tree-id13249 . -38) (undo-tree-id13250 . -38) (undo-tree-id13251 . -38) (undo-tree-id13252 . -38) (undo-tree-id13253 . -38) (undo-tree-id13254 . -38) (undo-tree-id13255 . -38) (undo-tree-id13256 . -38) (undo-tree-id13257 . -38) (undo-tree-id13258 . -38) (undo-tree-id13259 . -38) (undo-tree-id13260 . -38) (undo-tree-id13261 . -38) (undo-tree-id13262 . -38) (undo-tree-id13263 . -38) (undo-tree-id13264 . -38) (undo-tree-id13265 . -38) (undo-tree-id13266 . -38) (undo-tree-id13267 . -38) (undo-tree-id13268 . -38) (undo-tree-id13269 . -38) (undo-tree-id13270 . -38) (undo-tree-id13271 . -38) (undo-tree-id13272 . -38) (undo-tree-id13273 . -38) (undo-tree-id13274 . -38) (undo-tree-id13275 . -38) (undo-tree-id13276 . -38) (undo-tree-id13277 . -38) (undo-tree-id13278 . -38) (undo-tree-id13279 . -38) (undo-tree-id13280 . -38) (undo-tree-id13281 . -38) (undo-tree-id13282 . -38) (undo-tree-id13283 . -38) (undo-tree-id13284 . -38) (undo-tree-id13285 . -38) (undo-tree-id13286 . -38) (undo-tree-id13287 . -38) (undo-tree-id13288 . -38) (undo-tree-id13289 . -38) (undo-tree-id13290 . -38) (undo-tree-id13291 . -38) (undo-tree-id13292 . -38) (undo-tree-id13293 . -38) (undo-tree-id13294 . -38) (t 25945 40133 480370 918000)) nil (25945 43222 803381 0) 0 nil] [nil nil ((4286 . 4292) (#("		    " 0 6 (fontified nil)) . 4285) (undo-tree-id13208 . -6) (undo-tree-id13209 . -6) (undo-tree-id13210 . -6) (4284 . 4292) (t 25945 40133 480370 918000)) ((#("
		    
" 0 1 (fontified t) 1 7 (fontified nil) 7 8 (fontified nil)) . 4284) (undo-tree-id13211 . -8) (undo-tree-id13212 . -7) (undo-tree-id13213 . -7) (undo-tree-id13214 . -8) (4285 . 4291) (#("		    " 0 6 (fontified t)) . 4286) (undo-tree-id13215 . -6)) (25945 40204 823235 0) 0 nil])
nil
nil
